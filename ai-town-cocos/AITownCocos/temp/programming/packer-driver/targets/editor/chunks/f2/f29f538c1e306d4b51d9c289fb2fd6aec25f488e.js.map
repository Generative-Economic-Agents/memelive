{"version":3,"sources":["file:///Users/feiwang/cutepet/assets/spine_test/testSpine.ts"],"names":["_decorator","Component","resources","sp","ccclass","property","ske","image","atlas","ske1","image1","atlas1","ske2","image2","atlas2","ToySpineMap","json","img","testSpine","Skeleton","SkeletonData","_turn","currentAdd","spine_default_stop","start","setSke1","loadRemoteSpineRes","playSpineAnimation","setSke2","update","deltaTime","clickCat","toy","node","active","ske_component","cat","call_back","loadDir","data","console","log","aniName","loop","setAnimation","playToySpineAnimation"],"mappings":"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","sourcesContent":["import { _decorator, assetManager, Component, ImageAsset, Node, random, randomRange, randomRangeInt, resources, sp, Texture2D } from 'cc';\nconst { ccclass, property } = _decorator;\n\nconst ske = \"spinetest/estp_f/estp.json\"\nconst image = \"spinetest/estp_f/estp.png\"\nconst atlas = \"spinetest/estp_f/estp.atlas\"\n\nconst ske1 = \"spinetest/esfp_f/estp.json\"\nconst image1 = \"spinetest/esfp_f/estp.png\"\nconst atlas1 = \"spinetest/esfp_f/estp.atlas\"\n\nconst ske2 = \"spinetest/estp_f/entp.json\"\nconst image2 = \"spinetest/estp_f/entp.png\"\nconst atlas2 = \"spinetest/estp_f/entp.atlas\"\n\n//assets/resources/spinetest/estp_f/estp.atlas\nexport const ToySpineMap = {\n    10101003 :{\n        atlas: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/can_f/can.atlas',\n        json: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/can_f/can.json',\n        img: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/can_f/can.png'\n    },\n    10101004 :{\n        atlas: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/Cat_strips_f/Cat_strips.atlas',\n        json: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/Cat_strips_f/Cat_strips.json',\n        img: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/Cat_strips_f/Cat_strips.png'\n    },\n    10101005 :{\n        atlas: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/sponge_f/sponge.atlas',\n        json: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/sponge_f/sponge.json',\n        img: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/sponge_f/sponge.png'\n    },\n    10101006 :{\n        atlas: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/Natural_Cat_Stick/Natural_Cat_Stick.atlas',\n        json: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/Natural_Cat_Stick/Natural_Cat_Stick.json',\n        img: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/Natural_Cat_Stick/Natural_Cat_Stick.png'\n    },\n    10101007 :{\n        atlas: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/Scratch_board/Scratch_board.atlas',\n        json: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/Scratch_board/Scratch_board.json',\n        img: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/Scratch_board/Scratch_board.png'\n    },\n    10101008 :{\n        atlas: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/mouse/mouse.atlas',\n        json: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/mouse/mouse.json',\n        img: 'https://catoss.s3.ap-southeast-1.amazonaws.com/spine_toy/mouse/mouse.png'\n    },\n}\n\n\n// let image = \"http://localhost/download/spineres/1/1.png\";\n// let ske = \"http://localhost/download/spineres/1/1.json\";\n// let atlas = \"http://localhost/download/spineres/1/1.atlas\";\n\n@ccclass('testSpine')\nexport class testSpine extends Component {\n\t@property(sp.Skeleton) ske: sp.Skeleton = null;\n\t@property(sp.SkeletonData) skeData: sp.SkeletonData = null;\n\n\t@property(sp.Skeleton) toy: sp.Skeleton = null;\n\n\tprivate _turn = 0;\n    currentAdd = 0\n\n    spine_default_stop: boolean = false\n\n    \n\n  start() {\n\t//this.ske.setAnimation(0, 'idle', true);\n    //this.loadRemoteSpineRes()\n    // this.ske.setCompleteListener((data: sp.spine.TrackEntry)=>{\n\n    //     if(data.animation.name === 'action'){\n    //         this.spine_default_stop = true\n    //         const actStr = randomRangeInt(0, 2) ? 'idle' : 'walk' \n    //         this.playSpineAnimation(actStr, true)\n    //     }else{\n    //         if(this.currentAdd >= 10){\n    //             const refresh = randomRangeInt(0, 2) ? 'idle' : 'walk' \n    //             this.playSpineAnimation(refresh, true)\n    //             this.currentAdd = 0\n    //         }\n    //     }\n    //     console.log('game Complete', data.animation.name)\n\n    // })\n\n    // this.loadRemoteSpineRes(atlas, ske, image, this.ske, null, ()=>{\n    //     this.playSpineAnimation('idle', true)\n    // })\n  }\n\n  setSke1(){\n    this.loadRemoteSpineRes(atlas1, ske1, image1, this.ske, null, ()=>{\n        this.playSpineAnimation('idle', true)\n    })\n  }\n\n  setSke2(){\n    this.loadRemoteSpineRes(atlas2, ske2, image2, this.ske, null, ()=>{\n        this.playSpineAnimation('idle', true)\n    })\n  }\n\n  update(deltaTime: number) {\n\t\t// if (this._turn === 0) {\n\t\t// \tthis.ske.skeletonData = null;\n\t\t// } else {\n\t\t// \tthis.ske.skeletonData= this.skeData;\n\t\t// \tthis.ske.setAnimation(0, 'walk', true);\n\t\t// }\n\t\t// this._turn = (this._turn + 1) % 2;/Users/feiwang/cutepet_test_self/assets/cases/spine/can\n\n\n\n        this.currentAdd += deltaTime\n\n\n\n\t}\n\n    clickCat(){\n        this.toy.node.active = true\n        this.playSpineAnimation('action', false)\n    }\n\n    \n\n    loadRemoteSpineRes(atlas: string, ske: string, image: string, ske_component: sp.Skeleton, cat: Node = null, call_back: ()=> void){\n\n        resources.loadDir('spinetest/entp_f',(data)=>{\n            console.log('======', data)\n        })\n\n        // assetManager.loadAny([{ url: atlas, ext: '.txt' }, { url: ske, ext: '.txt' }], (error, assets) => {\n        //     assetManager.loadRemote(image, (error, spine_texture: ImageAsset) => {\n        //         let asset = new sp.SkeletonData();\n        //         asset.skeletonJson = JSON.parse(assets[1]);\n        //         asset.atlasText = assets[0];\n        //         let texture = new Texture2D();\n        //         texture.image = spine_texture;\n        //         asset.textures = [texture];\n        //         asset.textureNames = ['cc.png'];\n        //         asset._uuid = ske; // 可以传入任意字符串，但不能为空\n        //         ske_component.skeletonData = asset;\n        //         cat && (cat.active = false)\n        //         call_back()\n        //         //this.playSpineAnimation('idle')\n        //     });\n        // });\n    }\n\n    playSpineAnimation(aniName: string, loop: boolean){\n        this.ske.setAnimation(0, aniName, loop)\n    }\n\n    playToySpineAnimation(aniName: string, loop: boolean){\n        this.toy.setAnimation(0, aniName, loop)\n    }\n}\n\n"]}