{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/assets/src/town/TownModule.ts"],"names":["TownModule","ModuleBase","TownViewMediator","constructor","moduleId","mediator","s","addEventListeners","ins","init","self","onOpen","openData","weeked","open","close"],"mappings":";;;6GAKqBA,U;;;;;;;;;;;;;;;;;;;;AAJdC,MAAAA,U;;AAEEC,MAAAA,gB,iBAAAA,gB;;;;;;;;;yBAEYF,U,GAAN,MAAMA,UAAN;AAAA;AAAA,oCAAoC;AAIjDG,QAAAA,WAAW,CAACC,QAAD,EAAkB;AAC3B,gBAAMA,QAAN;AAD2B,eAHrBC,QAGqB;AAEnB,cAAIC,CAAC,GAAG,IAAR;AACAA,UAAAA,CAAC,CAACC,iBAAF;AACAP,UAAAA,UAAU,CAACQ,GAAX,GAAiBF,CAAjB;AACT;;AACSC,QAAAA,iBAAiB,GAAS;AAClC,cAAID,CAAC,GAAG,IAAR;AACH;;AACQG,QAAAA,IAAI,GAAS;AAClB,cAAIC,IAAI,GAAG,IAAX;AACAA,UAAAA,IAAI,CAACL,QAAL,GAAgB;AAAA;AAAA,oDAAqBK,IAArB,CAAhB;AACH;AAEE;;;AACOC,QAAAA,MAAM,CAACC,QAAa,GAAG,IAAjB,EAAgC;AAC5C,cAAIF,IAAI,GAAG,IAAX;;AACA,cAAIA,IAAI,CAACL,QAAL,CAAcQ,MAAlB,EAA0B;AACtB;AACH,WAFD,MAEO;AACHH,YAAAA,IAAI,CAACL,QAAL,CAAcS,IAAd,CAAmBF,QAAnB;AACA,mBAAO,IAAP;AACH;AACJ;AACA;;;AACOG,QAAAA,KAAK,GAAS;AACpB,cAAIL,IAAI,GAAG,IAAX;;AACA,cAAIA,IAAI,CAACL,QAAT,EAAmB;AACfK,YAAAA,IAAI,CAACL,QAAL,CAAcU,KAAd;AACAL,YAAAA,IAAI,CAACL,QAAL,CAAcQ,MAAd,GAAuB,KAAvB;AACH;AACF,SAnCkD,CAqCjD;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;AA9CiD,O,GAgDnD;AACA;;;AAjDqBb,MAAAA,U,CAEZQ,G","sourcesContent":["import { director } from \"cc\";\nimport ModuleBase from \"../core/base/ModuleBase\";\nimport { EventType } from \"../EventType\";\nimport { TownViewMediator } from \"./TownViewMediator\";\n\nexport default class TownModule extends ModuleBase {\n  private mediator:TownViewMediator;\n  static ins: TownModule;\n\n  constructor(moduleId:string) {\n    super(moduleId);\n            let s = this;\n            s.addEventListeners();\n            TownModule.ins = s;\n  }\n  protected addEventListeners(): void {\n    let s = this;\n}\n  public init(): void {\n    let self = this;\n    self.mediator = new TownViewMediator(self);\n}\n\n   /**打开创角面板 */\n   public onOpen(openData: any = null): boolean {\n    let self = this;\n    if (self.mediator.weeked) {\n        return;\n    } else {\n        self.mediator.open(openData);\n        return true;\n    }\n}\n /**关闭创角面板 */\n public close(): void {\n  let self = this;\n  if (self.mediator) {\n      self.mediator.close();\n      self.mediator.weeked = false;\n  }\n}\n\n  // /**\n  //  *\n  //  * @param moduleId\n  //  */\n  //  public openModu(data:any = null) {\n\n       \n  //   super.openModu(data);\n  // }\n  // public closeModu(moduleId: string): void {}\n}\n// const mainModule = new MainModule();\n// export default mainModule;\n"]}