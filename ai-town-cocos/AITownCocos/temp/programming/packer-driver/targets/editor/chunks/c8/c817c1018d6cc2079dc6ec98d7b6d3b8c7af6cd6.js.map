{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/s3outposts-2017-07-25.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateEndpoint","http","requestUri","input","type","required","members","OutpostId","SubnetId","SecurityGroupId","AccessType","CustomerOwnedIpv4Pool","output","EndpointArn","DeleteEndpoint","method","EndpointId","location","locationName","ListEndpoints","NextToken","MaxResults","Endpoints","shape","ListOutpostsWithS3","Outposts","member","OutpostArn","S3OutpostArn","OwnerId","CapacityInBytes","ListSharedEndpoints","shapes","Sf","OutpostsId","CidrBlock","Status","CreationTime","NetworkInterfaces","NetworkInterfaceId","VpcId","FailedReason","ErrorCode","Message"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2017-07-25',\n    endpointPrefix: 's3-outposts',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'Amazon S3 Outposts',\n    serviceFullName: 'Amazon S3 on Outposts',\n    serviceId: 'S3Outposts',\n    signatureVersion: 'v4',\n    signingName: 's3-outposts',\n    uid: 's3outposts-2017-07-25'\n  },\n  operations: {\n    CreateEndpoint: {\n      http: {\n        requestUri: '/S3Outposts/CreateEndpoint'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'OutpostId',\n          'SubnetId',\n          'SecurityGroupId'\n        ],\n        members: {\n          OutpostId: {},\n          SubnetId: {},\n          SecurityGroupId: {},\n          AccessType: {},\n          CustomerOwnedIpv4Pool: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EndpointArn: {}\n        }\n      }\n    },\n    DeleteEndpoint: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/S3Outposts/DeleteEndpoint'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'EndpointId',\n          'OutpostId'\n        ],\n        members: {\n          EndpointId: {\n            location: 'querystring',\n            locationName: 'endpointId'\n          },\n          OutpostId: {\n            location: 'querystring',\n            locationName: 'outpostId'\n          }\n        }\n      }\n    },\n    ListEndpoints: {\n      http: {\n        method: 'GET',\n        requestUri: '/S3Outposts/ListEndpoints'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Endpoints: {\n            shape: 'Sf'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListOutpostsWithS3: {\n      http: {\n        method: 'GET',\n        requestUri: '/S3Outposts/ListOutpostsWithS3'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Outposts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                OutpostArn: {},\n                S3OutpostArn: {},\n                OutpostId: {},\n                OwnerId: {},\n                CapacityInBytes: {\n                  type: 'long'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListSharedEndpoints: {\n      http: {\n        method: 'GET',\n        requestUri: '/S3Outposts/ListSharedEndpoints'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'OutpostId'\n        ],\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          OutpostId: {\n            location: 'querystring',\n            locationName: 'outpostId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Endpoints: {\n            shape: 'Sf'\n          },\n          NextToken: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    Sf: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          EndpointArn: {},\n          OutpostsId: {},\n          CidrBlock: {},\n          Status: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          NetworkInterfaces: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                NetworkInterfaceId: {}\n              }\n            }\n          },\n          VpcId: {},\n          SubnetId: {},\n          SecurityGroupId: {},\n          AccessType: {},\n          CustomerOwnedIpv4Pool: {},\n          FailedReason: {\n            type: 'structure',\n            members: {\n              ErrorCode: {},\n              Message: {}\n            }\n          }\n        }\n      }\n    }\n  }\n}"]}