{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/ds-2015-04-16.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","AcceptSharedDirectory","input","type","required","members","SharedDirectoryId","output","SharedDirectory","shape","AddIpRoutes","DirectoryId","IpRoutes","member","CidrIp","Description","UpdateSecurityGroupForDirectoryControllers","AddRegion","RegionName","VPCSettings","AddTagsToResource","ResourceId","Tags","CancelSchemaExtension","SchemaExtensionId","ConnectDirectory","Name","ShortName","Password","Size","ConnectSettings","VpcId","SubnetIds","CustomerDnsIps","CustomerUserName","CreateAlias","Alias","CreateComputer","ComputerName","sensitive","OrganizationalUnitDistinguishedName","ComputerAttributes","Computer","ComputerId","CreateConditionalForwarder","RemoteDomainName","DnsIpAddrs","CreateDirectory","VpcSettings","CreateLogSubscription","LogGroupName","CreateMicrosoftAD","Edition","CreateSnapshot","SnapshotId","CreateTrust","TrustPassword","TrustDirection","TrustType","ConditionalForwarderIpAddrs","SelectiveAuth","TrustId","DeleteConditionalForwarder","DeleteDirectory","DeleteLogSubscription","DeleteSnapshot","DeleteTrust","DeleteAssociatedConditionalForwarder","DeregisterCertificate","CertificateId","DeregisterEventTopic","TopicName","DescribeCertificate","Certificate","State","StateReason","CommonName","RegisteredDateTime","ExpiryDateTime","Type","ClientCertAuthSettings","DescribeClientAuthenticationSettings","NextToken","Limit","ClientAuthenticationSettingsInfo","Status","LastUpdatedDateTime","DescribeConditionalForwarders","RemoteDomainNames","ConditionalForwarders","ReplicationScope","DescribeDirectories","DirectoryIds","DirectoryDescriptions","AccessUrl","Stage","ShareStatus","ShareMethod","ShareNotes","LaunchTime","StageLastUpdatedDateTime","SecurityGroupId","AvailabilityZones","ConnectIps","RadiusSettings","RadiusStatus","StageReason","SsoEnabled","DesiredNumberOfDomainControllers","OwnerDirectoryDescription","AccountId","RegionsInfo","PrimaryRegion","AdditionalRegions","OsVersion","DescribeDomainControllers","DomainControllerIds","DomainControllers","DomainControllerId","DnsIpAddr","SubnetId","AvailabilityZone","StatusReason","StatusLastUpdatedDateTime","DescribeEventTopics","TopicNames","EventTopics","TopicArn","CreatedDateTime","DescribeLDAPSSettings","LDAPSSettingsInfo","LDAPSStatus","LDAPSStatusReason","DescribeRegions","RegionsDescription","RegionType","DescribeSettings","SettingEntries","AllowedValues","AppliedValue","RequestedValue","RequestStatus","RequestDetailedStatus","key","value","RequestStatusMessage","LastRequestedDateTime","DataType","DescribeSharedDirectories","OwnerDirectoryId","SharedDirectoryIds","SharedDirectories","DescribeSnapshots","SnapshotIds","Snapshots","StartTime","DescribeTrusts","TrustIds","Trusts","TrustState","StateLastUpdatedDateTime","TrustStateReason","DescribeUpdateDirectory","UpdateType","UpdateActivities","Region","InitiatedBy","NewValue","PreviousValue","DisableClientAuthentication","DisableLDAPS","DisableRadius","DisableSso","UserName","EnableClientAuthentication","EnableLDAPS","EnableRadius","EnableSso","GetDirectoryLimits","DirectoryLimits","CloudOnlyDirectoriesLimit","CloudOnlyDirectoriesCurrentCount","CloudOnlyDirectoriesLimitReached","CloudOnlyMicrosoftADLimit","CloudOnlyMicrosoftADCurrentCount","CloudOnlyMicrosoftADLimitReached","ConnectedDirectoriesLimit","ConnectedDirectoriesCurrentCount","ConnectedDirectoriesLimitReached","GetSnapshotLimits","SnapshotLimits","ManualSnapshotsLimit","ManualSnapshotsCurrentCount","ManualSnapshotsLimitReached","ListCertificates","CertificatesInfo","ListIpRoutes","IpRoutesInfo","IpRouteStatusMsg","AddedDateTime","IpRouteStatusReason","ListLogSubscriptions","LogSubscriptions","SubscriptionCreatedDateTime","ListSchemaExtensions","SchemaExtensionsInfo","SchemaExtensionStatus","SchemaExtensionStatusReason","StartDateTime","EndDateTime","ListTagsForResource","RegisterCertificate","CertificateData","RegisterEventTopic","RejectSharedDirectory","RemoveIpRoutes","CidrIps","RemoveRegion","RemoveTagsFromResource","TagKeys","ResetUserPassword","NewPassword","RestoreFromSnapshot","ShareDirectory","ShareTarget","Id","StartSchemaExtension","CreateSnapshotBeforeSchemaExtension","LdifContent","UnshareDirectory","UnshareTarget","UpdateConditionalForwarder","UpdateDirectorySetup","OSUpdateSettings","CreateSnapshotBeforeUpdate","UpdateNumberOfDomainControllers","DesiredNumber","UpdateRadius","UpdateSettings","Settings","Value","UpdateTrust","RequestId","VerifyTrust","shapes","S4","OwnerAccountId","SharedAccountId","S8","Sk","Sm","Sr","Key","S12","S15","S1g","S1r","S30","OCSPUrl","S3h","S3q","S3s","S3w","RadiusServers","RadiusPort","RadiusTimeout","RadiusRetries","SharedSecret","AuthenticationProtocol","DisplayLabel","UseSameUsername","S6a","S6b","OSVersion"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2015-04-16',\n    endpointPrefix: 'ds',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceAbbreviation: 'Directory Service',\n    serviceFullName: 'AWS Directory Service',\n    serviceId: 'Directory Service',\n    signatureVersion: 'v4',\n    targetPrefix: 'DirectoryService_20150416',\n    uid: 'ds-2015-04-16'\n  },\n  operations: {\n    AcceptSharedDirectory: {\n      input: {\n        type: 'structure',\n        required: [\n          'SharedDirectoryId'\n        ],\n        members: {\n          SharedDirectoryId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SharedDirectory: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    AddIpRoutes: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'IpRoutes'\n        ],\n        members: {\n          DirectoryId: {},\n          IpRoutes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CidrIp: {},\n                Description: {}\n              }\n            }\n          },\n          UpdateSecurityGroupForDirectoryControllers: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    AddRegion: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'RegionName',\n          'VPCSettings'\n        ],\n        members: {\n          DirectoryId: {},\n          RegionName: {},\n          VPCSettings: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    AddTagsToResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceId',\n          'Tags'\n        ],\n        members: {\n          ResourceId: {},\n          Tags: {\n            shape: 'Sr'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CancelSchemaExtension: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'SchemaExtensionId'\n        ],\n        members: {\n          DirectoryId: {},\n          SchemaExtensionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    ConnectDirectory: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name',\n          'Password',\n          'Size',\n          'ConnectSettings'\n        ],\n        members: {\n          Name: {},\n          ShortName: {},\n          Password: {\n            shape: 'S12'\n          },\n          Description: {},\n          Size: {},\n          ConnectSettings: {\n            type: 'structure',\n            required: [\n              'VpcId',\n              'SubnetIds',\n              'CustomerDnsIps',\n              'CustomerUserName'\n            ],\n            members: {\n              VpcId: {},\n              SubnetIds: {\n                shape: 'Sm'\n              },\n              CustomerDnsIps: {\n                shape: 'S15'\n              },\n              CustomerUserName: {}\n            }\n          },\n          Tags: {\n            shape: 'Sr'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryId: {}\n        }\n      }\n    },\n    CreateAlias: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'Alias'\n        ],\n        members: {\n          DirectoryId: {},\n          Alias: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryId: {},\n          Alias: {}\n        }\n      }\n    },\n    CreateComputer: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'ComputerName',\n          'Password'\n        ],\n        members: {\n          DirectoryId: {},\n          ComputerName: {},\n          Password: {\n            type: 'string',\n            sensitive: true\n          },\n          OrganizationalUnitDistinguishedName: {},\n          ComputerAttributes: {\n            shape: 'S1g'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Computer: {\n            type: 'structure',\n            members: {\n              ComputerId: {},\n              ComputerName: {},\n              ComputerAttributes: {\n                shape: 'S1g'\n              }\n            }\n          }\n        }\n      }\n    },\n    CreateConditionalForwarder: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'RemoteDomainName',\n          'DnsIpAddrs'\n        ],\n        members: {\n          DirectoryId: {},\n          RemoteDomainName: {},\n          DnsIpAddrs: {\n            shape: 'S15'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateDirectory: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name',\n          'Password',\n          'Size'\n        ],\n        members: {\n          Name: {},\n          ShortName: {},\n          Password: {\n            shape: 'S1r'\n          },\n          Description: {},\n          Size: {},\n          VpcSettings: {\n            shape: 'Sk'\n          },\n          Tags: {\n            shape: 'Sr'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryId: {}\n        }\n      }\n    },\n    CreateLogSubscription: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'LogGroupName'\n        ],\n        members: {\n          DirectoryId: {},\n          LogGroupName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateMicrosoftAD: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name',\n          'Password',\n          'VpcSettings'\n        ],\n        members: {\n          Name: {},\n          ShortName: {},\n          Password: {\n            shape: 'S1r'\n          },\n          Description: {},\n          VpcSettings: {\n            shape: 'Sk'\n          },\n          Edition: {},\n          Tags: {\n            shape: 'Sr'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryId: {}\n        }\n      }\n    },\n    CreateSnapshot: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          Name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SnapshotId: {}\n        }\n      }\n    },\n    CreateTrust: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'RemoteDomainName',\n          'TrustPassword',\n          'TrustDirection'\n        ],\n        members: {\n          DirectoryId: {},\n          RemoteDomainName: {},\n          TrustPassword: {\n            type: 'string',\n            sensitive: true\n          },\n          TrustDirection: {},\n          TrustType: {},\n          ConditionalForwarderIpAddrs: {\n            shape: 'S15'\n          },\n          SelectiveAuth: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TrustId: {}\n        }\n      }\n    },\n    DeleteConditionalForwarder: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'RemoteDomainName'\n        ],\n        members: {\n          DirectoryId: {},\n          RemoteDomainName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteDirectory: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryId: {}\n        }\n      }\n    },\n    DeleteLogSubscription: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteSnapshot: {\n      input: {\n        type: 'structure',\n        required: [\n          'SnapshotId'\n        ],\n        members: {\n          SnapshotId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SnapshotId: {}\n        }\n      }\n    },\n    DeleteTrust: {\n      input: {\n        type: 'structure',\n        required: [\n          'TrustId'\n        ],\n        members: {\n          TrustId: {},\n          DeleteAssociatedConditionalForwarder: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TrustId: {}\n        }\n      }\n    },\n    DeregisterCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'CertificateId'\n        ],\n        members: {\n          DirectoryId: {},\n          CertificateId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeregisterEventTopic: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'TopicName'\n        ],\n        members: {\n          DirectoryId: {},\n          TopicName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DescribeCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'CertificateId'\n        ],\n        members: {\n          DirectoryId: {},\n          CertificateId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Certificate: {\n            type: 'structure',\n            members: {\n              CertificateId: {},\n              State: {},\n              StateReason: {},\n              CommonName: {},\n              RegisteredDateTime: {\n                type: 'timestamp'\n              },\n              ExpiryDateTime: {\n                type: 'timestamp'\n              },\n              Type: {},\n              ClientCertAuthSettings: {\n                shape: 'S30'\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeClientAuthenticationSettings: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          Type: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ClientAuthenticationSettingsInfo: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Type: {},\n                Status: {},\n                LastUpdatedDateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeConditionalForwarders: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          RemoteDomainNames: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConditionalForwarders: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RemoteDomainName: {},\n                DnsIpAddrs: {\n                  shape: 'S15'\n                },\n                ReplicationScope: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeDirectories: {\n      input: {\n        type: 'structure',\n        members: {\n          DirectoryIds: {\n            shape: 'S3h'\n          },\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryDescriptions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DirectoryId: {},\n                Name: {},\n                ShortName: {},\n                Size: {},\n                Edition: {},\n                Alias: {},\n                AccessUrl: {},\n                Description: {},\n                DnsIpAddrs: {\n                  shape: 'S15'\n                },\n                Stage: {},\n                ShareStatus: {},\n                ShareMethod: {},\n                ShareNotes: {\n                  shape: 'S8'\n                },\n                LaunchTime: {\n                  type: 'timestamp'\n                },\n                StageLastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                Type: {},\n                VpcSettings: {\n                  shape: 'S3q'\n                },\n                ConnectSettings: {\n                  type: 'structure',\n                  members: {\n                    VpcId: {},\n                    SubnetIds: {\n                      shape: 'Sm'\n                    },\n                    CustomerUserName: {},\n                    SecurityGroupId: {},\n                    AvailabilityZones: {\n                      shape: 'S3s'\n                    },\n                    ConnectIps: {\n                      type: 'list',\n                      member: {}\n                    }\n                  }\n                },\n                RadiusSettings: {\n                  shape: 'S3w'\n                },\n                RadiusStatus: {},\n                StageReason: {},\n                SsoEnabled: {\n                  type: 'boolean'\n                },\n                DesiredNumberOfDomainControllers: {\n                  type: 'integer'\n                },\n                OwnerDirectoryDescription: {\n                  type: 'structure',\n                  members: {\n                    DirectoryId: {},\n                    AccountId: {},\n                    DnsIpAddrs: {\n                      shape: 'S15'\n                    },\n                    VpcSettings: {\n                      shape: 'S3q'\n                    },\n                    RadiusSettings: {\n                      shape: 'S3w'\n                    },\n                    RadiusStatus: {}\n                  }\n                },\n                RegionsInfo: {\n                  type: 'structure',\n                  members: {\n                    PrimaryRegion: {},\n                    AdditionalRegions: {\n                      type: 'list',\n                      member: {}\n                    }\n                  }\n                },\n                OsVersion: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeDomainControllers: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          DomainControllerIds: {\n            type: 'list',\n            member: {}\n          },\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DomainControllers: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DirectoryId: {},\n                DomainControllerId: {},\n                DnsIpAddr: {},\n                VpcId: {},\n                SubnetId: {},\n                AvailabilityZone: {},\n                Status: {},\n                StatusReason: {},\n                LaunchTime: {\n                  type: 'timestamp'\n                },\n                StatusLastUpdatedDateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeEventTopics: {\n      input: {\n        type: 'structure',\n        members: {\n          DirectoryId: {},\n          TopicNames: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EventTopics: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DirectoryId: {},\n                TopicName: {},\n                TopicArn: {},\n                CreatedDateTime: {\n                  type: 'timestamp'\n                },\n                Status: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeLDAPSSettings: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          Type: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LDAPSSettingsInfo: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                LDAPSStatus: {},\n                LDAPSStatusReason: {},\n                LastUpdatedDateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeRegions: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          RegionName: {},\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RegionsDescription: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DirectoryId: {},\n                RegionName: {},\n                RegionType: {},\n                Status: {},\n                VpcSettings: {\n                  shape: 'Sk'\n                },\n                DesiredNumberOfDomainControllers: {\n                  type: 'integer'\n                },\n                LaunchTime: {\n                  type: 'timestamp'\n                },\n                StatusLastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                LastUpdatedDateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeSettings: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          Status: {},\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryId: {},\n          SettingEntries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Type: {},\n                Name: {},\n                AllowedValues: {},\n                AppliedValue: {},\n                RequestedValue: {},\n                RequestStatus: {},\n                RequestDetailedStatus: {\n                  type: 'map',\n                  key: {},\n                  value: {}\n                },\n                RequestStatusMessage: {},\n                LastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                LastRequestedDateTime: {\n                  type: 'timestamp'\n                },\n                DataType: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeSharedDirectories: {\n      input: {\n        type: 'structure',\n        required: [\n          'OwnerDirectoryId'\n        ],\n        members: {\n          OwnerDirectoryId: {},\n          SharedDirectoryIds: {\n            shape: 'S3h'\n          },\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SharedDirectories: {\n            type: 'list',\n            member: {\n              shape: 'S4'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeSnapshots: {\n      input: {\n        type: 'structure',\n        members: {\n          DirectoryId: {},\n          SnapshotIds: {\n            type: 'list',\n            member: {}\n          },\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Snapshots: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DirectoryId: {},\n                SnapshotId: {},\n                Type: {},\n                Name: {},\n                Status: {},\n                StartTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeTrusts: {\n      input: {\n        type: 'structure',\n        members: {\n          DirectoryId: {},\n          TrustIds: {\n            type: 'list',\n            member: {}\n          },\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Trusts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DirectoryId: {},\n                TrustId: {},\n                RemoteDomainName: {},\n                TrustType: {},\n                TrustDirection: {},\n                TrustState: {},\n                CreatedDateTime: {\n                  type: 'timestamp'\n                },\n                LastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                StateLastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                TrustStateReason: {},\n                SelectiveAuth: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeUpdateDirectory: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'UpdateType'\n        ],\n        members: {\n          DirectoryId: {},\n          UpdateType: {},\n          RegionName: {},\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          UpdateActivities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Region: {},\n                Status: {},\n                StatusReason: {},\n                InitiatedBy: {},\n                NewValue: {\n                  shape: 'S6a'\n                },\n                PreviousValue: {\n                  shape: 'S6a'\n                },\n                StartTime: {\n                  type: 'timestamp'\n                },\n                LastUpdatedDateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DisableClientAuthentication: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'Type'\n        ],\n        members: {\n          DirectoryId: {},\n          Type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DisableLDAPS: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'Type'\n        ],\n        members: {\n          DirectoryId: {},\n          Type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DisableRadius: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DisableSso: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          UserName: {},\n          Password: {\n            shape: 'S12'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    EnableClientAuthentication: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'Type'\n        ],\n        members: {\n          DirectoryId: {},\n          Type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    EnableLDAPS: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'Type'\n        ],\n        members: {\n          DirectoryId: {},\n          Type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    EnableRadius: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'RadiusSettings'\n        ],\n        members: {\n          DirectoryId: {},\n          RadiusSettings: {\n            shape: 'S3w'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    EnableSso: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          UserName: {},\n          Password: {\n            shape: 'S12'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    GetDirectoryLimits: {\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryLimits: {\n            type: 'structure',\n            members: {\n              CloudOnlyDirectoriesLimit: {\n                type: 'integer'\n              },\n              CloudOnlyDirectoriesCurrentCount: {\n                type: 'integer'\n              },\n              CloudOnlyDirectoriesLimitReached: {\n                type: 'boolean'\n              },\n              CloudOnlyMicrosoftADLimit: {\n                type: 'integer'\n              },\n              CloudOnlyMicrosoftADCurrentCount: {\n                type: 'integer'\n              },\n              CloudOnlyMicrosoftADLimitReached: {\n                type: 'boolean'\n              },\n              ConnectedDirectoriesLimit: {\n                type: 'integer'\n              },\n              ConnectedDirectoriesCurrentCount: {\n                type: 'integer'\n              },\n              ConnectedDirectoriesLimitReached: {\n                type: 'boolean'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetSnapshotLimits: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SnapshotLimits: {\n            type: 'structure',\n            members: {\n              ManualSnapshotsLimit: {\n                type: 'integer'\n              },\n              ManualSnapshotsCurrentCount: {\n                type: 'integer'\n              },\n              ManualSnapshotsLimitReached: {\n                type: 'boolean'\n              }\n            }\n          }\n        }\n      }\n    },\n    ListCertificates: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          CertificatesInfo: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CertificateId: {},\n                CommonName: {},\n                State: {},\n                ExpiryDateTime: {\n                  type: 'timestamp'\n                },\n                Type: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListIpRoutes: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IpRoutesInfo: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DirectoryId: {},\n                CidrIp: {},\n                IpRouteStatusMsg: {},\n                AddedDateTime: {\n                  type: 'timestamp'\n                },\n                IpRouteStatusReason: {},\n                Description: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListLogSubscriptions: {\n      input: {\n        type: 'structure',\n        members: {\n          DirectoryId: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LogSubscriptions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DirectoryId: {},\n                LogGroupName: {},\n                SubscriptionCreatedDateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListSchemaExtensions: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SchemaExtensionsInfo: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DirectoryId: {},\n                SchemaExtensionId: {},\n                Description: {},\n                SchemaExtensionStatus: {},\n                SchemaExtensionStatusReason: {},\n                StartDateTime: {\n                  type: 'timestamp'\n                },\n                EndDateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceId'\n        ],\n        members: {\n          ResourceId: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Sr'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    RegisterCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'CertificateData'\n        ],\n        members: {\n          DirectoryId: {},\n          CertificateData: {},\n          Type: {},\n          ClientCertAuthSettings: {\n            shape: 'S30'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CertificateId: {}\n        }\n      }\n    },\n    RegisterEventTopic: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'TopicName'\n        ],\n        members: {\n          DirectoryId: {},\n          TopicName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    RejectSharedDirectory: {\n      input: {\n        type: 'structure',\n        required: [\n          'SharedDirectoryId'\n        ],\n        members: {\n          SharedDirectoryId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SharedDirectoryId: {}\n        }\n      }\n    },\n    RemoveIpRoutes: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'CidrIps'\n        ],\n        members: {\n          DirectoryId: {},\n          CidrIps: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    RemoveRegion: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          DirectoryId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    RemoveTagsFromResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceId',\n          'TagKeys'\n        ],\n        members: {\n          ResourceId: {},\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    ResetUserPassword: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'UserName',\n          'NewPassword'\n        ],\n        members: {\n          DirectoryId: {},\n          UserName: {},\n          NewPassword: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    RestoreFromSnapshot: {\n      input: {\n        type: 'structure',\n        required: [\n          'SnapshotId'\n        ],\n        members: {\n          SnapshotId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    ShareDirectory: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'ShareTarget',\n          'ShareMethod'\n        ],\n        members: {\n          DirectoryId: {},\n          ShareNotes: {\n            shape: 'S8'\n          },\n          ShareTarget: {\n            type: 'structure',\n            required: [\n              'Id',\n              'Type'\n            ],\n            members: {\n              Id: {},\n              Type: {}\n            }\n          },\n          ShareMethod: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SharedDirectoryId: {}\n        }\n      }\n    },\n    StartSchemaExtension: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'CreateSnapshotBeforeSchemaExtension',\n          'LdifContent',\n          'Description'\n        ],\n        members: {\n          DirectoryId: {},\n          CreateSnapshotBeforeSchemaExtension: {\n            type: 'boolean'\n          },\n          LdifContent: {},\n          Description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SchemaExtensionId: {}\n        }\n      }\n    },\n    UnshareDirectory: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'UnshareTarget'\n        ],\n        members: {\n          DirectoryId: {},\n          UnshareTarget: {\n            type: 'structure',\n            required: [\n              'Id',\n              'Type'\n            ],\n            members: {\n              Id: {},\n              Type: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SharedDirectoryId: {}\n        }\n      }\n    },\n    UpdateConditionalForwarder: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'RemoteDomainName',\n          'DnsIpAddrs'\n        ],\n        members: {\n          DirectoryId: {},\n          RemoteDomainName: {},\n          DnsIpAddrs: {\n            shape: 'S15'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateDirectorySetup: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'UpdateType'\n        ],\n        members: {\n          DirectoryId: {},\n          UpdateType: {},\n          OSUpdateSettings: {\n            shape: 'S6b'\n          },\n          CreateSnapshotBeforeUpdate: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateNumberOfDomainControllers: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'DesiredNumber'\n        ],\n        members: {\n          DirectoryId: {},\n          DesiredNumber: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateRadius: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'RadiusSettings'\n        ],\n        members: {\n          DirectoryId: {},\n          RadiusSettings: {\n            shape: 'S3w'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateSettings: {\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId',\n          'Settings'\n        ],\n        members: {\n          DirectoryId: {},\n          Settings: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Name',\n                'Value'\n              ],\n              members: {\n                Name: {},\n                Value: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryId: {}\n        }\n      }\n    },\n    UpdateTrust: {\n      input: {\n        type: 'structure',\n        required: [\n          'TrustId'\n        ],\n        members: {\n          TrustId: {},\n          SelectiveAuth: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RequestId: {},\n          TrustId: {}\n        }\n      }\n    },\n    VerifyTrust: {\n      input: {\n        type: 'structure',\n        required: [\n          'TrustId'\n        ],\n        members: {\n          TrustId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TrustId: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'structure',\n      members: {\n        OwnerAccountId: {},\n        OwnerDirectoryId: {},\n        ShareMethod: {},\n        SharedAccountId: {},\n        SharedDirectoryId: {},\n        ShareStatus: {},\n        ShareNotes: {\n          shape: 'S8'\n        },\n        CreatedDateTime: {\n          type: 'timestamp'\n        },\n        LastUpdatedDateTime: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S8: {\n      type: 'string',\n      sensitive: true\n    },\n    Sk: {\n      type: 'structure',\n      required: [\n        'VpcId',\n        'SubnetIds'\n      ],\n      members: {\n        VpcId: {},\n        SubnetIds: {\n          shape: 'Sm'\n        }\n      }\n    },\n    Sm: {\n      type: 'list',\n      member: {}\n    },\n    Sr: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    S12: {\n      type: 'string',\n      sensitive: true\n    },\n    S15: {\n      type: 'list',\n      member: {}\n    },\n    S1g: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Name: {},\n          Value: {}\n        }\n      }\n    },\n    S1r: {\n      type: 'string',\n      sensitive: true\n    },\n    S30: {\n      type: 'structure',\n      members: {\n        OCSPUrl: {}\n      }\n    },\n    S3h: {\n      type: 'list',\n      member: {}\n    },\n    S3q: {\n      type: 'structure',\n      members: {\n        VpcId: {},\n        SubnetIds: {\n          shape: 'Sm'\n        },\n        SecurityGroupId: {},\n        AvailabilityZones: {\n          shape: 'S3s'\n        }\n      }\n    },\n    S3s: {\n      type: 'list',\n      member: {}\n    },\n    S3w: {\n      type: 'structure',\n      members: {\n        RadiusServers: {\n          type: 'list',\n          member: {}\n        },\n        RadiusPort: {\n          type: 'integer'\n        },\n        RadiusTimeout: {\n          type: 'integer'\n        },\n        RadiusRetries: {\n          type: 'integer'\n        },\n        SharedSecret: {\n          type: 'string',\n          sensitive: true\n        },\n        AuthenticationProtocol: {},\n        DisplayLabel: {},\n        UseSameUsername: {\n          type: 'boolean'\n        }\n      }\n    },\n    S6a: {\n      type: 'structure',\n      members: {\n        OSUpdateSettings: {\n          shape: 'S6b'\n        }\n      }\n    },\n    S6b: {\n      type: 'structure',\n      members: {\n        OSVersion: {}\n      }\n    }\n  }\n}"]}