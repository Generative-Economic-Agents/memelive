{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_baseMerge.js"],"names":["baseMerge","object","source","srcIndex","customizer","stack","baseFor","srcValue","key","Stack","isObject","baseMergeDeep","newValue","safeGet","undefined","assignMergeValue","keysIn"],"mappings":";;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,UAA7C,EAAyDC,KAAzD,EAAgE;AAC9D,QAAIJ,MAAM,KAAKC,MAAf,EAAuB;AACrB;AACD;;AACDI,IAAAA,OAAO,CAACJ,MAAD,EAAS,UAASK,QAAT,EAAmBC,GAAnB,EAAwB;AACtCH,MAAAA,KAAK,KAAKA,KAAK,GAAG,IAAII,KAAJ,EAAb,CAAL;;AACA,UAAIC,QAAQ,CAACH,QAAD,CAAZ,EAAwB;AACtBI,QAAAA,aAAa,CAACV,MAAD,EAASC,MAAT,EAAiBM,GAAjB,EAAsBL,QAAtB,EAAgCH,SAAhC,EAA2CI,UAA3C,EAAuDC,KAAvD,CAAb;AACD,OAFD,MAGK;AACH,YAAIO,QAAQ,GAAGR,UAAU,GACrBA,UAAU,CAACS,OAAO,CAACZ,MAAD,EAASO,GAAT,CAAR,EAAuBD,QAAvB,EAAkCC,GAAG,GAAG,EAAxC,EAA6CP,MAA7C,EAAqDC,MAArD,EAA6DG,KAA7D,CADW,GAErBS,SAFJ;;AAIA,YAAIF,QAAQ,KAAKE,SAAjB,EAA4B;AAC1BF,UAAAA,QAAQ,GAAGL,QAAX;AACD;;AACDQ,QAAAA,gBAAgB,CAACd,MAAD,EAASO,GAAT,EAAcI,QAAd,CAAhB;AACD;AACF,KAfM,EAeJI,MAfI,CAAP;AAgBD;;;;AAvCMP,MAAAA,K;;AACAM,MAAAA,gB;;AACAT,MAAAA,O;;AACAK,MAAAA,a;;AACAD,MAAAA,Q;;AACAM,MAAAA,M;;AACAH,MAAAA,O;;;yBAmCQb,S","sourcesContent":["import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n"]}