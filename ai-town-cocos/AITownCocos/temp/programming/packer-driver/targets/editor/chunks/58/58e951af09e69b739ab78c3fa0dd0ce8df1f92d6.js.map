{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/assets/src/utils/Observer.ts"],"names":["CallbackInfo","Observer","callback","thisObj","once","create","pool","length","pop","recycle","s","undefined","push","removeAll","Object","constructor","_callbackMap","on","name","n","String","hasOwnProperty","list","i","len","info","cb","off","post","data","currentIndex","call","target","self","rmvAll"],"mappings":"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","sourcesContent":["\n    export interface IObserver {\n        target: any;\n        selector: Function;\n        once: boolean;\n    }\n\n    export interface IPostData {\n        target: any;\n        data: any;\n    }\n\n    export class CallbackInfo {\n        public callback: Function;\n        public thisObj: any;\n        public once: boolean;\n\n        public static create() {\n            if (CallbackInfo.pool.length > 0) {\n                return CallbackInfo.pool.pop();\n            }\n            return new CallbackInfo();\n        }\n\n        public recycle() {\n            let s = this;\n            s.callback = undefined;\n            s.thisObj = undefined;\n            s.once = false;\n            CallbackInfo.pool.push(s);\n        }\n\n        public removeAll() {\n            CallbackInfo.pool = [];\n        }\n\n        static pool: CallbackInfo[] = [];\n    }\n    \n    export class Observer extends Object {\n        private _callbackMap: { [k: string]: CallbackInfo[] } = {};\n        constructor() {\n            super();\n\n        }\n\n        public on(name: string | number, callback: Function, thisObj: any, once = false): boolean {\n            let s = this;\n            let n = String(name);\n            if (!s._callbackMap.hasOwnProperty(n)) {\n                s._callbackMap[n] = [];\n            }\n            let list = s._callbackMap[n];\n            for (let i = 0, len = list.length; i < len; i++) {\n                let info = list[i];\n                if (info && info.callback == callback && info.thisObj == thisObj) {\n                    return;\n                }\n            }\n            let cb = CallbackInfo.create();\n            cb.callback = callback;\n            cb.thisObj = thisObj;\n            cb.once = once;\n            list[list.length] = cb;\n            return true;\n        }\n\n        public once(name: string | number, callback: Function, thisObj: any): boolean {\n            return this.on(name, callback, thisObj, true);\n        }\n\n        public off(name: string | number, callback: Function, thisObj: any) {\n            let n = String(name);\n            if (this._callbackMap.hasOwnProperty(n)) {\n                let list = this._callbackMap[n];\n                for (let i = 0, len = list.length; i < len; i++) {\n                    let info = list[i];\n                    if (info && info.callback == callback && info.thisObj == thisObj) {\n                        info.recycle();\n                        list[i] = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n\n        public post(name: string | number, data?: any) {\n            let s = this;\n            let n = String(name);\n            if (s._callbackMap.hasOwnProperty(n)) {\n                let list = s._callbackMap[n];\n                let length = list.length;\n                if (length == 0) {\n                    return;\n                }\n                let currentIndex = 0;\n                for (var i = 0; i < length; i++) {\n                    let info = list[i];\n                    if (info) {\n                        let callback = info.callback;\n                        let thisObj = info.thisObj;\n                        if (info.once) {\n                            info.recycle();\n                            list[i] = undefined;\n                        } else {\n                            if (currentIndex != i) {\n                                list[currentIndex] = info;\n                                list[i] = undefined;\n                            }\n                            currentIndex++;\n                        }\n                        callback.call(thisObj, { data: data, target: self });\n                    }\n                }\n                if (currentIndex != i) {\n                    length = list.length;\n                    while (i < length) {\n                        list[currentIndex++] = list[i++];\n                    }\n                    list.length = currentIndex;\n                }\n            }\n        }\n\n        public rmvAll() {\n            this._callbackMap = {};\n        }\n    }\n"]}