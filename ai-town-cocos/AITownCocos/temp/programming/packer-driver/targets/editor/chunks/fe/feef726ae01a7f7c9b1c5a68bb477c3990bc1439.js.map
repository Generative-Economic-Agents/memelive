{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_baseSortedIndexBy.js"],"names":["baseSortedIndexBy","array","value","iteratee","retHighest","low","high","length","valIsNaN","valIsNull","valIsSymbol","isSymbol","valIsUndefined","undefined","mid","nativeFloor","computed","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","nativeMin","MAX_ARRAY_INDEX","MAX_ARRAY_LENGTH","Math","floor","min"],"mappings":";;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,iBAAT,CAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,UAAnD,EAA+D;AAC7D,QAAIC,GAAG,GAAG,CAAV;AAAA,QACIC,IAAI,GAAGL,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBA,KAAK,CAACM,MADrC;;AAEA,QAAID,IAAI,KAAK,CAAb,EAAgB;AACd,aAAO,CAAP;AACD;;AAEDJ,IAAAA,KAAK,GAAGC,QAAQ,CAACD,KAAD,CAAhB;AACA,QAAIM,QAAQ,GAAGN,KAAK,KAAKA,KAAzB;AAAA,QACIO,SAAS,GAAGP,KAAK,KAAK,IAD1B;AAAA,QAEIQ,WAAW,GAAGC,QAAQ,CAACT,KAAD,CAF1B;AAAA,QAGIU,cAAc,GAAGV,KAAK,KAAKW,SAH/B;;AAKA,WAAOR,GAAG,GAAGC,IAAb,EAAmB;AACjB,UAAIQ,GAAG,GAAGC,WAAW,CAAC,CAACV,GAAG,GAAGC,IAAP,IAAe,CAAhB,CAArB;AAAA,UACIU,QAAQ,GAAGb,QAAQ,CAACF,KAAK,CAACa,GAAD,CAAN,CADvB;AAAA,UAEIG,YAAY,GAAGD,QAAQ,KAAKH,SAFhC;AAAA,UAGIK,SAAS,GAAGF,QAAQ,KAAK,IAH7B;AAAA,UAIIG,cAAc,GAAGH,QAAQ,KAAKA,QAJlC;AAAA,UAKII,WAAW,GAAGT,QAAQ,CAACK,QAAD,CAL1B;;AAOA,UAAIR,QAAJ,EAAc;AACZ,YAAIa,MAAM,GAAGjB,UAAU,IAAIe,cAA3B;AACD,OAFD,MAEO,IAAIP,cAAJ,EAAoB;AACzBS,QAAAA,MAAM,GAAGF,cAAc,KAAKf,UAAU,IAAIa,YAAnB,CAAvB;AACD,OAFM,MAEA,IAAIR,SAAJ,EAAe;AACpBY,QAAAA,MAAM,GAAGF,cAAc,IAAIF,YAAlB,KAAmCb,UAAU,IAAI,CAACc,SAAlD,CAAT;AACD,OAFM,MAEA,IAAIR,WAAJ,EAAiB;AACtBW,QAAAA,MAAM,GAAGF,cAAc,IAAIF,YAAlB,IAAkC,CAACC,SAAnC,KAAiDd,UAAU,IAAI,CAACgB,WAAhE,CAAT;AACD,OAFM,MAEA,IAAIF,SAAS,IAAIE,WAAjB,EAA8B;AACnCC,QAAAA,MAAM,GAAG,KAAT;AACD,OAFM,MAEA;AACLA,QAAAA,MAAM,GAAGjB,UAAU,GAAIY,QAAQ,IAAId,KAAhB,GAA0Bc,QAAQ,GAAGd,KAAxD;AACD;;AACD,UAAImB,MAAJ,EAAY;AACVhB,QAAAA,GAAG,GAAGS,GAAG,GAAG,CAAZ;AACD,OAFD,MAEO;AACLR,QAAAA,IAAI,GAAGQ,GAAP;AACD;AACF;;AACD,WAAOQ,SAAS,CAAChB,IAAD,EAAOiB,eAAP,CAAhB;AACD;;;;AAhEMZ,MAAAA,Q;;;AAEP;AACIa,MAAAA,gB,GAAmB,U;AACnBD,MAAAA,e,GAAkBC,gBAAgB,GAAG,C;AAEzC;;AACIT,MAAAA,W,GAAcU,IAAI,CAACC,K;AACnBJ,MAAAA,S,GAAYG,IAAI,CAACE,G;;yBA0DN3B,iB","sourcesContent":["import isSymbol from './isSymbol.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n * which invokes `iteratee` for `value` and each element of `array` to compute\n * their sort ranking. The iteratee is invoked with one argument; (value).\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} iteratee The iteratee invoked per element.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\n  var low = 0,\n      high = array == null ? 0 : array.length;\n  if (high === 0) {\n    return 0;\n  }\n\n  value = iteratee(value);\n  var valIsNaN = value !== value,\n      valIsNull = value === null,\n      valIsSymbol = isSymbol(value),\n      valIsUndefined = value === undefined;\n\n  while (low < high) {\n    var mid = nativeFloor((low + high) / 2),\n        computed = iteratee(array[mid]),\n        othIsDefined = computed !== undefined,\n        othIsNull = computed === null,\n        othIsReflexive = computed === computed,\n        othIsSymbol = isSymbol(computed);\n\n    if (valIsNaN) {\n      var setLow = retHighest || othIsReflexive;\n    } else if (valIsUndefined) {\n      setLow = othIsReflexive && (retHighest || othIsDefined);\n    } else if (valIsNull) {\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n    } else if (valIsSymbol) {\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n    } else if (othIsNull || othIsSymbol) {\n      setLow = false;\n    } else {\n      setLow = retHighest ? (computed <= value) : (computed < value);\n    }\n    if (setLow) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return nativeMin(high, MAX_ARRAY_INDEX);\n}\n\nexport default baseSortedIndexBy;\n"]}