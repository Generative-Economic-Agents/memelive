{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/sshpk/lib/signature.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","_req5","_req6","url","define","exports","require","module","__filename","__dirname","Signature","assert","Buffer","algs","crypto","errs","utils","asn1","SSHBuffer","InvalidAlgorithmError","SignatureParseError","opts","object","arrayOfObject","parts","string","type","partLookup","i","length","part","name","hashAlgorithm","hashAlgo","curve","prototype","toBuffer","format","undefined","buf","stype","Error","writeString","writePart","sig","data","r","s","der","BerWriter","startSequence","mpNormalize","writeBuffer","Ber","Integer","endSequence","buffer","slice","concat","inner","sz","toString","optionalString","parse","from","toLowerCase","ok","parseOneNum","parseDSAasn1","parseDSA","parseECDSA","e","head","readString","msg","strictEqual","readPart","atEnd","push","BerReader","readSequence","d","readBuffer","split","isSignature","obj","ver","isCompatible","_sshpkApiVersion","_oldVersionDetect","func","hasOwnProperty","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'assert-plus';\nimport { __cjsMetaURL as _req0} from 'safer-buffer';\nimport { __cjsMetaURL as _req1} from './algs';\nimport { __cjsMetaURL as _req2} from 'crypto';\nimport { __cjsMetaURL as _req3} from './errors';\nimport { __cjsMetaURL as _req4} from './utils';\nimport { __cjsMetaURL as _req5} from 'asn1';\nimport { __cjsMetaURL as _req6} from './ssh-buffer';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // Copyright 2015 Joyent, Inc.\n\n module.exports = Signature;\n\n var assert = require('assert-plus');\n var Buffer = require('safer-buffer').Buffer;\n var algs = require('./algs');\n var crypto = require('crypto');\n var errs = require('./errors');\n var utils = require('./utils');\n var asn1 = require('asn1');\n var SSHBuffer = require('./ssh-buffer');\n\n var InvalidAlgorithmError = errs.InvalidAlgorithmError;\n var SignatureParseError = errs.SignatureParseError;\n\n function Signature(opts) {\n \tassert.object(opts, 'options');\n \tassert.arrayOfObject(opts.parts, 'options.parts');\n \tassert.string(opts.type, 'options.type');\n\n \tvar partLookup = {};\n \tfor (var i = 0; i < opts.parts.length; ++i) {\n \t\tvar part = opts.parts[i];\n \t\tpartLookup[part.name] = part;\n \t}\n\n \tthis.type = opts.type;\n \tthis.hashAlgorithm = opts.hashAlgo;\n \tthis.curve = opts.curve;\n \tthis.parts = opts.parts;\n \tthis.part = partLookup;\n }\n\n Signature.prototype.toBuffer = function (format) {\n \tif (format === undefined)\n \t\tformat = 'asn1';\n \tassert.string(format, 'format');\n\n \tvar buf;\n \tvar stype = 'ssh-' + this.type;\n\n \tswitch (this.type) {\n \tcase 'rsa':\n \t\tswitch (this.hashAlgorithm) {\n \t\tcase 'sha256':\n \t\t\tstype = 'rsa-sha2-256';\n \t\t\tbreak;\n \t\tcase 'sha512':\n \t\t\tstype = 'rsa-sha2-512';\n \t\t\tbreak;\n \t\tcase 'sha1':\n \t\tcase undefined:\n \t\t\tbreak;\n \t\tdefault:\n \t\t\tthrow (new Error('SSH signature ' +\n \t\t\t    'format does not support hash ' +\n \t\t\t    'algorithm ' + this.hashAlgorithm));\n \t\t}\n \t\tif (format === 'ssh') {\n \t\t\tbuf = new SSHBuffer({});\n \t\t\tbuf.writeString(stype);\n \t\t\tbuf.writePart(this.part.sig);\n \t\t\treturn (buf.toBuffer());\n \t\t} else {\n \t\t\treturn (this.part.sig.data);\n \t\t}\n \t\tbreak;\n\n \tcase 'ed25519':\n \t\tif (format === 'ssh') {\n \t\t\tbuf = new SSHBuffer({});\n \t\t\tbuf.writeString(stype);\n \t\t\tbuf.writePart(this.part.sig);\n \t\t\treturn (buf.toBuffer());\n \t\t} else {\n \t\t\treturn (this.part.sig.data);\n \t\t}\n \t\tbreak;\n\n \tcase 'dsa':\n \tcase 'ecdsa':\n \t\tvar r, s;\n \t\tif (format === 'asn1') {\n \t\t\tvar der = new asn1.BerWriter();\n \t\t\tder.startSequence();\n \t\t\tr = utils.mpNormalize(this.part.r.data);\n \t\t\ts = utils.mpNormalize(this.part.s.data);\n \t\t\tder.writeBuffer(r, asn1.Ber.Integer);\n \t\t\tder.writeBuffer(s, asn1.Ber.Integer);\n \t\t\tder.endSequence();\n \t\t\treturn (der.buffer);\n \t\t} else if (format === 'ssh' && this.type === 'dsa') {\n \t\t\tbuf = new SSHBuffer({});\n \t\t\tbuf.writeString('ssh-dss');\n \t\t\tr = this.part.r.data;\n \t\t\tif (r.length > 20 && r[0] === 0x00)\n \t\t\t\tr = r.slice(1);\n \t\t\ts = this.part.s.data;\n \t\t\tif (s.length > 20 && s[0] === 0x00)\n \t\t\t\ts = s.slice(1);\n \t\t\tif ((this.hashAlgorithm &&\n \t\t\t    this.hashAlgorithm !== 'sha1') ||\n \t\t\t    r.length + s.length !== 40) {\n \t\t\t\tthrow (new Error('OpenSSH only supports ' +\n \t\t\t\t    'DSA signatures with SHA1 hash'));\n \t\t\t}\n \t\t\tbuf.writeBuffer(Buffer.concat([r, s]));\n \t\t\treturn (buf.toBuffer());\n \t\t} else if (format === 'ssh' && this.type === 'ecdsa') {\n \t\t\tvar inner = new SSHBuffer({});\n \t\t\tr = this.part.r.data;\n \t\t\tinner.writeBuffer(r);\n \t\t\tinner.writePart(this.part.s);\n\n \t\t\tbuf = new SSHBuffer({});\n \t\t\t/* XXX: find a more proper way to do this? */\n \t\t\tvar curve;\n \t\t\tif (r[0] === 0x00)\n \t\t\t\tr = r.slice(1);\n \t\t\tvar sz = r.length * 8;\n \t\t\tif (sz === 256)\n \t\t\t\tcurve = 'nistp256';\n \t\t\telse if (sz === 384)\n \t\t\t\tcurve = 'nistp384';\n \t\t\telse if (sz === 528)\n \t\t\t\tcurve = 'nistp521';\n \t\t\tbuf.writeString('ecdsa-sha2-' + curve);\n \t\t\tbuf.writeBuffer(inner.toBuffer());\n \t\t\treturn (buf.toBuffer());\n \t\t}\n \t\tthrow (new Error('Invalid signature format'));\n \tdefault:\n \t\tthrow (new Error('Invalid signature data'));\n \t}\n };\n\n Signature.prototype.toString = function (format) {\n \tassert.optionalString(format, 'format');\n \treturn (this.toBuffer(format).toString('base64'));\n };\n\n Signature.parse = function (data, type, format) {\n \tif (typeof (data) === 'string')\n \t\tdata = Buffer.from(data, 'base64');\n \tassert.buffer(data, 'data');\n \tassert.string(format, 'format');\n \tassert.string(type, 'type');\n\n \tvar opts = {};\n \topts.type = type.toLowerCase();\n \topts.parts = [];\n\n \ttry {\n \t\tassert.ok(data.length > 0, 'signature must not be empty');\n \t\tswitch (opts.type) {\n \t\tcase 'rsa':\n \t\t\treturn (parseOneNum(data, type, format, opts));\n \t\tcase 'ed25519':\n \t\t\treturn (parseOneNum(data, type, format, opts));\n\n \t\tcase 'dsa':\n \t\tcase 'ecdsa':\n \t\t\tif (format === 'asn1')\n \t\t\t\treturn (parseDSAasn1(data, type, format, opts));\n \t\t\telse if (opts.type === 'dsa')\n \t\t\t\treturn (parseDSA(data, type, format, opts));\n \t\t\telse\n \t\t\t\treturn (parseECDSA(data, type, format, opts));\n\n \t\tdefault:\n \t\t\tthrow (new InvalidAlgorithmError(type));\n \t\t}\n\n \t} catch (e) {\n \t\tif (e instanceof InvalidAlgorithmError)\n \t\t\tthrow (e);\n \t\tthrow (new SignatureParseError(type, format, e));\n \t}\n };\n\n function parseOneNum(data, type, format, opts) {\n \tif (format === 'ssh') {\n \t\ttry {\n \t\t\tvar buf = new SSHBuffer({buffer: data});\n \t\t\tvar head = buf.readString();\n \t\t} catch (e) {\n \t\t\t/* fall through */\n \t\t}\n \t\tif (buf !== undefined) {\n \t\t\tvar msg = 'SSH signature does not match expected ' +\n \t\t\t    'type (expected ' + type + ', got ' + head + ')';\n \t\t\tswitch (head) {\n \t\t\tcase 'ssh-rsa':\n \t\t\t\tassert.strictEqual(type, 'rsa', msg);\n \t\t\t\topts.hashAlgo = 'sha1';\n \t\t\t\tbreak;\n \t\t\tcase 'rsa-sha2-256':\n \t\t\t\tassert.strictEqual(type, 'rsa', msg);\n \t\t\t\topts.hashAlgo = 'sha256';\n \t\t\t\tbreak;\n \t\t\tcase 'rsa-sha2-512':\n \t\t\t\tassert.strictEqual(type, 'rsa', msg);\n \t\t\t\topts.hashAlgo = 'sha512';\n \t\t\t\tbreak;\n \t\t\tcase 'ssh-ed25519':\n \t\t\t\tassert.strictEqual(type, 'ed25519', msg);\n \t\t\t\topts.hashAlgo = 'sha512';\n \t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\tthrow (new Error('Unknown SSH signature ' +\n \t\t\t\t    'type: ' + head));\n \t\t\t}\n \t\t\tvar sig = buf.readPart();\n \t\t\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n \t\t\tsig.name = 'sig';\n \t\t\topts.parts.push(sig);\n \t\t\treturn (new Signature(opts));\n \t\t}\n \t}\n \topts.parts.push({name: 'sig', data: data});\n \treturn (new Signature(opts));\n }\n\n function parseDSAasn1(data, type, format, opts) {\n \tvar der = new asn1.BerReader(data);\n \tder.readSequence();\n \tvar r = der.readString(asn1.Ber.Integer, true);\n \tvar s = der.readString(asn1.Ber.Integer, true);\n\n \topts.parts.push({name: 'r', data: utils.mpNormalize(r)});\n \topts.parts.push({name: 's', data: utils.mpNormalize(s)});\n\n \treturn (new Signature(opts));\n }\n\n function parseDSA(data, type, format, opts) {\n \tif (data.length != 40) {\n \t\tvar buf = new SSHBuffer({buffer: data});\n \t\tvar d = buf.readBuffer();\n \t\tif (d.toString('ascii') === 'ssh-dss')\n \t\t\td = buf.readBuffer();\n \t\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n \t\tassert.strictEqual(d.length, 40, 'invalid inner length');\n \t\tdata = d;\n \t}\n \topts.parts.push({name: 'r', data: data.slice(0, 20)});\n \topts.parts.push({name: 's', data: data.slice(20, 40)});\n \treturn (new Signature(opts));\n }\n\n function parseECDSA(data, type, format, opts) {\n \tvar buf = new SSHBuffer({buffer: data});\n\n \tvar r, s;\n \tvar inner = buf.readBuffer();\n \tvar stype = inner.toString('ascii');\n \tif (stype.slice(0, 6) === 'ecdsa-') {\n \t\tvar parts = stype.split('-');\n \t\tassert.strictEqual(parts[0], 'ecdsa');\n \t\tassert.strictEqual(parts[1], 'sha2');\n \t\topts.curve = parts[2];\n \t\tswitch (opts.curve) {\n \t\tcase 'nistp256':\n \t\t\topts.hashAlgo = 'sha256';\n \t\t\tbreak;\n \t\tcase 'nistp384':\n \t\t\topts.hashAlgo = 'sha384';\n \t\t\tbreak;\n \t\tcase 'nistp521':\n \t\t\topts.hashAlgo = 'sha512';\n \t\t\tbreak;\n \t\tdefault:\n \t\t\tthrow (new Error('Unsupported ECDSA curve: ' +\n \t\t\t    opts.curve));\n \t\t}\n \t\tinner = buf.readBuffer();\n \t\tassert.ok(buf.atEnd(), 'extra trailing bytes on outer');\n \t\tbuf = new SSHBuffer({buffer: inner});\n \t\tr = buf.readPart();\n \t} else {\n \t\tr = {data: inner};\n \t}\n\n \ts = buf.readPart();\n \tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\n \tr.name = 'r';\n \ts.name = 's';\n\n \topts.parts.push(r);\n \topts.parts.push(s);\n \treturn (new Signature(opts));\n }\n\n Signature.isSignature = function (obj, ver) {\n \treturn (utils.isCompatible(obj, Signature, ver));\n };\n\n /*\n  * API versions for Signature:\n  * [1,0] -- initial ver\n  * [2,0] -- support for rsa in full ssh format, compat with sshpk-agent\n  *          hashAlgorithm property\n  * [2,1] -- first tagged version\n  */\n Signature.prototype._sshpkApiVersion = [2, 1];\n\n Signature._oldVersionDetect = function (obj) {\n \tassert.func(obj.toBuffer);\n \tif (obj.hasOwnProperty('hashAlgorithm'))\n \t\treturn ([2, 0]);\n \treturn ([1, 0]);\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'assert-plus': _req,\n  'safer-buffer': _req0,\n  './algs': _req1,\n  'crypto': _req2,\n  './errors': _req3,\n  './utils': _req4,\n  'asn1': _req5,\n  './ssh-buffer': _req6,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}