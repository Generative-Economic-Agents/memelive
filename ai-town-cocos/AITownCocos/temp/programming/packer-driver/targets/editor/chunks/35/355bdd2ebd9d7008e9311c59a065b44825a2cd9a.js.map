{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/assets/src/login/rolePartSelectTool.ts"],"names":["_decorator","Component","Node","ListViewCtrl2","observer","EventType","LoadingController","Log","NPCPartDisplayInfo","loginModel","ccclass","property","TAG","rolePartIndex","rolePartSelectTool","_data","start","ins","hideLoading","on","UPDATE_ROLE_PLAY_INDEX","setDataStoreId","splitHair","updateEnjoyToolsHandler","currentType","hair","currentName","onDestroy","off","partIndex","roleInfoArray","data","current_storeId_arr","log","showZhongziList","onEnable","arr","len","Math","ceil","length","grpArr","i","temparr","j","push","pre_listView","ctrl","getChildByName","spawnCount","getComponent","initData","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, Node } from 'cc';\nimport { ListViewCtrl2 } from '../game/components/listViewCtrl2';\nimport { modelMgr, observer } from '../game/App';\nimport { EventType } from '../EventType';\nimport { LoadingController } from '../game/components/LoadingController';\nimport Log from '../../src/utils/LogUtils'\nimport { NPCPartDisplayInfo } from '../StaticUtils/NPCConfig';\nimport loginModel from '../model/loginModel';\nconst { ccclass, property } = _decorator;\n\nconst TAG = 'rolePartSelectTool'\n\nexport const rolePartIndex = [\n    'body',\n    'hair',\n    'shirt',\n    'pants'\n]\n\n@ccclass('rolePartSelectTool')\nexport class rolePartSelectTool extends Component {\n    @property(Node)\n    pre_listView: Node = null;\n\n    _data: any\n\n    start() {\n        LoadingController.ins.hideLoading();\n        // modelMgr.mainModel.checkcatReq();\n        //observer.on(EventType.SOCKET_SHOP_ITEM_LIST, this.updateEnjoyToolsHandler, this);\n        observer.on(EventType.UPDATE_ROLE_PLAY_INDEX, this.setDataStoreId, this);\n        // observer.on(EventType.SOCKET_SHOP_ITEM_LIST, (data)=>{\n        //     console.log(TAG, data)\n        // }, this);\n        //modelMgr.mainModel.getShopList()\n        //this.updateEnjoyToolsHandler();\n        this.splitHair()\n        this.updateEnjoyToolsHandler(this._data)\n        loginModel.currentType = loginModel.hair\n        loginModel.currentName = 'hair'\n    }\n\n    protected onDestroy(): void {\n        //observer.off(EventType.SOCKET_SHOP_ITEM_LIST, this.updateEnjoyToolsHandler, this);\n        observer.off(EventType.UPDATE_ROLE_PLAY_INDEX, this.setDataStoreId, this);\n    }\n\n    splitHair(){\n    //     let roleInfoArray = []\n    //     const iconHair = [...NPCPartDisplayInfo['hair']['icon']['man'], ...NPCPartDisplayInfo['hair']['icon']['woman']]\n    //     const frameHair = [...NPCPartDisplayInfo['hair']['frame']['man'], ...NPCPartDisplayInfo['hair']['frame']['woman']]\n    //     iconHair.forEach((element, index)=>{\n    //         roleInfoArray.push(\n    //             {\n    //                 icon:iconHair[index],\n    //                 frame: frameHair[index],\n    //             }\n    //         )\n    //    })\n       this._data = NPCPartDisplayInfo.hair\n\n    }\n\n    setDataStoreId(partIndex: any){\n        let roleInfoArray = []\n        loginModel.currentType = loginModel[rolePartIndex[partIndex.data]]\n        loginModel.currentName = rolePartIndex[partIndex.data]\n        if(partIndex.data === 1){\n            this.splitHair()\n        }else{\n\n        //    NPCPartDisplayInfo[rolePartIndex[partIndex.data]].icon.forEach((element, index)=>{\n        //         roleInfoArray.push(\n        //             {\n        //                 icon:NPCPartDisplayInfo[rolePartIndex[partIndex.data]].icon[index],\n        //                 frame: NPCPartDisplayInfo[rolePartIndex[partIndex.data]].frame[index],\n        //             }\n        //         )\n        //    })\n           this._data = NPCPartDisplayInfo[rolePartIndex[partIndex.data]]\n        }\n        \n        this.updateEnjoyToolsHandler(this._data)\n    }\n\n    private updateEnjoyToolsHandler(data){\n        this._data = data\n        let current_storeId_arr = [];\n        // (this._data.data.data as CatEnjoyToolsData[]).forEach(element => {\n        //     if(element.storeId === this.current_storeId){\n        //         current_storeId_arr.push(element)\n        //     }\n        // });\n        Log.log(TAG, this._data)\n        this.showZhongziList(this._data);\n    }\n    protected onEnable(): void {\n        //排序逻辑\n        // let arr: any[] = modelMgr.configModel.commonConfigJson.Cat;\n        // this.showZhongziList(arr);\n    }\n    /**\n* \n*/\n    public showZhongziList(arr) {\n        // if(!arr.length){\n        //     this.nullTxt.node.active = true\n        // }else{\n        //     this.nullTxt.node.active = false\n        // }\n        let len = Math.ceil(arr.length / 3);\n        let grpArr = [];\n        for (let i = 0; i < len; i++) {\n            let temparr = [];\n            for (let j = 0; j < 3; j++) {\n                arr[(i) * 3 + j] && temparr.push(arr[(i) * 3 + j]);\n            }\n            grpArr.push(temparr);\n        }\n        if (this.pre_listView) {\n            let ctrl = this.pre_listView.getChildByName(\"listctrl\");\n            let spawnCount = grpArr.length;\n            ctrl.getComponent(ListViewCtrl2).initData(spawnCount, grpArr);\n        }\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n\n"]}