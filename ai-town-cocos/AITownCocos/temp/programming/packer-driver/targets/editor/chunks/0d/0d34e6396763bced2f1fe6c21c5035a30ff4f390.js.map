{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/supplychain-2024-01-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateBillOfMaterialsImportJob","http","requestUri","responseCode","input","type","required","members","instanceId","location","locationName","s3uri","clientToken","idempotencyToken","output","jobId","idempotent","GetBillOfMaterialsImportJob","method","job","status","message","SendDataIntegrationEvent","eventType","data","sensitive","eventGroupId","eventTimestamp","timestampFormat","eventId","shapes"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2024-01-01',\n    endpointPrefix: 'scn',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS Supply Chain',\n    serviceId: 'SupplyChain',\n    signatureVersion: 'v4',\n    signingName: 'scn',\n    uid: 'supplychain-2024-01-01'\n  },\n  operations: {\n    CreateBillOfMaterialsImportJob: {\n      http: {\n        requestUri: '/api/configuration/instances/{instanceId}/bill-of-materials-import-jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'instanceId',\n          's3uri'\n        ],\n        members: {\n          instanceId: {\n            location: 'uri',\n            locationName: 'instanceId'\n          },\n          s3uri: {},\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobId'\n        ],\n        members: {\n          jobId: {}\n        }\n      },\n      idempotent: true\n    },\n    GetBillOfMaterialsImportJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/api/configuration/instances/{instanceId}/bill-of-materials-import-jobs/{jobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'instanceId',\n          'jobId'\n        ],\n        members: {\n          instanceId: {\n            location: 'uri',\n            locationName: 'instanceId'\n          },\n          jobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'job'\n        ],\n        members: {\n          job: {\n            type: 'structure',\n            required: [\n              'instanceId',\n              'jobId',\n              'status',\n              's3uri'\n            ],\n            members: {\n              instanceId: {},\n              jobId: {},\n              status: {},\n              s3uri: {},\n              message: {}\n            }\n          }\n        }\n      }\n    },\n    SendDataIntegrationEvent: {\n      http: {\n        requestUri: '/api-data/data-integration/instance/{instanceId}/data-integration-events',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'instanceId',\n          'eventType',\n          'data',\n          'eventGroupId'\n        ],\n        members: {\n          instanceId: {\n            location: 'uri',\n            locationName: 'instanceId'\n          },\n          eventType: {},\n          data: {\n            type: 'string',\n            sensitive: true\n          },\n          eventGroupId: {},\n          eventTimestamp: {\n            type: 'timestamp',\n            timestampFormat: 'unixTimestamp'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'eventId'\n        ],\n        members: {\n          eventId: {}\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {}\n}"]}