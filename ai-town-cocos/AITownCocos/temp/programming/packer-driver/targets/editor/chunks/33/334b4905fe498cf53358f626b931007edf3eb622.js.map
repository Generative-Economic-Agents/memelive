{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/payment-cryptography-data-2022-02-03.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","DecryptData","http","requestUri","responseCode","input","type","required","members","CipherText","shape","DecryptionAttributes","KeyIdentifier","location","locationName","output","KeyArn","KeyCheckValue","PlainText","EncryptData","EncryptionAttributes","sensitive","GenerateCardValidationData","GenerationAttributes","AmexCardSecurityCodeVersion1","AmexCardSecurityCodeVersion2","CardHolderVerificationValue","CardVerificationValue1","CardVerificationValue2","DynamicCardVerificationCode","DynamicCardVerificationValue","union","PrimaryAccountNumber","ValidationDataLength","ValidationData","GenerateMac","MacLength","MessageData","Mac","GeneratePinData","EncryptionKeyIdentifier","Ibm3624NaturalPin","DecimalizationTable","PinValidationData","PinValidationDataPadCharacter","Ibm3624PinFromOffset","PinOffset","Ibm3624PinOffset","EncryptedPinBlock","Ibm3624RandomPin","VisaPin","PinVerificationKeyIndex","VisaPinVerificationValue","GenerationKeyIdentifier","PinBlockFormat","PinDataLength","EncryptionKeyArn","EncryptionKeyCheckValue","GenerationKeyArn","GenerationKeyCheckValue","PinData","VerificationValue","ReEncryptData","IncomingEncryptionAttributes","IncomingKeyIdentifier","OutgoingEncryptionAttributes","OutgoingKeyIdentifier","TranslatePinData","IncomingDukptAttributes","IncomingTranslationAttributes","OutgoingDukptAttributes","OutgoingTranslationAttributes","PinBlock","VerifyAuthRequestCryptogram","AuthRequestCryptogram","AuthResponseAttributes","ArpcMethod1","AuthResponseCode","ArpcMethod2","CardStatusUpdate","ProprietaryAuthenticationData","MajorKeyDerivationMode","SessionKeyDerivationAttributes","Amex","PanSequenceNumber","Emv2000","ApplicationTransactionCounter","EmvCommon","Mastercard","UnpredictableNumber","Visa","TransactionData","AuthResponseValue","VerifyCardValidationData","VerificationAttributes","DiscoverDynamicCardVerificationCode","CardExpiryDate","VerifyMac","VerifyPinData","DukptAttributes","DukptDerivationType","KeySerialNumber","Ibm3624Pin","VerificationKeyIdentifier","VerificationKeyArn","VerificationKeyCheckValue","shapes","S2","S3","Asymmetric","PaddingType","Dukpt","Emv","InitializationVector","Mode","SessionDerivationData","Symmetric","S6","DukptKeyDerivationType","DukptKeyVariant","S9","Sg","Si","St","Sv","ServiceCode","Sx","S10","S11","S12","TrackData","S14","S19","Algorithm","DukptCmac","DukptIso9797Algorithm1","DukptIso9797Algorithm3","EmvMac","SessionKeyDerivationMode","SessionKeyDerivationValue","ApplicationCryptogram","S1b","S1h","S23","S27","S28","IsoFormat0","IsoFormat1","IsoFormat3","IsoFormat4","S29"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2022-02-03',\n    endpointPrefix: 'dataplane.payment-cryptography',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Payment Cryptography Data Plane',\n    serviceId: 'Payment Cryptography Data',\n    signatureVersion: 'v4',\n    signingName: 'payment-cryptography',\n    uid: 'payment-cryptography-data-2022-02-03'\n  },\n  operations: {\n    DecryptData: {\n      http: {\n        requestUri: '/keys/{KeyIdentifier}/decrypt',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CipherText',\n          'DecryptionAttributes',\n          'KeyIdentifier'\n        ],\n        members: {\n          CipherText: {\n            shape: 'S2'\n          },\n          DecryptionAttributes: {\n            shape: 'S3'\n          },\n          KeyIdentifier: {\n            location: 'uri',\n            locationName: 'KeyIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'KeyArn',\n          'KeyCheckValue',\n          'PlainText'\n        ],\n        members: {\n          KeyArn: {},\n          KeyCheckValue: {},\n          PlainText: {\n            shape: 'S2'\n          }\n        }\n      }\n    },\n    EncryptData: {\n      http: {\n        requestUri: '/keys/{KeyIdentifier}/encrypt',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'EncryptionAttributes',\n          'KeyIdentifier',\n          'PlainText'\n        ],\n        members: {\n          EncryptionAttributes: {\n            shape: 'S3'\n          },\n          KeyIdentifier: {\n            location: 'uri',\n            locationName: 'KeyIdentifier'\n          },\n          PlainText: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CipherText',\n          'KeyArn'\n        ],\n        members: {\n          CipherText: {\n            shape: 'S2'\n          },\n          KeyArn: {},\n          KeyCheckValue: {}\n        }\n      }\n    },\n    GenerateCardValidationData: {\n      http: {\n        requestUri: '/cardvalidationdata/generate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GenerationAttributes',\n          'KeyIdentifier',\n          'PrimaryAccountNumber'\n        ],\n        members: {\n          GenerationAttributes: {\n            type: 'structure',\n            members: {\n              AmexCardSecurityCodeVersion1: {\n                shape: 'St'\n              },\n              AmexCardSecurityCodeVersion2: {\n                shape: 'Sv'\n              },\n              CardHolderVerificationValue: {\n                shape: 'Sx'\n              },\n              CardVerificationValue1: {\n                shape: 'S10'\n              },\n              CardVerificationValue2: {\n                shape: 'S11'\n              },\n              DynamicCardVerificationCode: {\n                shape: 'S12'\n              },\n              DynamicCardVerificationValue: {\n                shape: 'S14'\n              }\n            },\n            union: true\n          },\n          KeyIdentifier: {},\n          PrimaryAccountNumber: {\n            shape: 'Sg'\n          },\n          ValidationDataLength: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'KeyArn',\n          'KeyCheckValue',\n          'ValidationData'\n        ],\n        members: {\n          KeyArn: {},\n          KeyCheckValue: {},\n          ValidationData: {}\n        }\n      }\n    },\n    GenerateMac: {\n      http: {\n        requestUri: '/mac/generate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GenerationAttributes',\n          'KeyIdentifier',\n          'MessageData'\n        ],\n        members: {\n          GenerationAttributes: {\n            shape: 'S19'\n          },\n          KeyIdentifier: {},\n          MacLength: {\n            type: 'integer'\n          },\n          MessageData: {\n            shape: 'S1h'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'KeyArn',\n          'KeyCheckValue',\n          'Mac'\n        ],\n        members: {\n          KeyArn: {},\n          KeyCheckValue: {},\n          Mac: {}\n        }\n      }\n    },\n    GeneratePinData: {\n      http: {\n        requestUri: '/pindata/generate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'EncryptionKeyIdentifier',\n          'GenerationAttributes',\n          'GenerationKeyIdentifier',\n          'PinBlockFormat',\n          'PrimaryAccountNumber'\n        ],\n        members: {\n          EncryptionKeyIdentifier: {},\n          GenerationAttributes: {\n            type: 'structure',\n            members: {\n              Ibm3624NaturalPin: {\n                type: 'structure',\n                required: [\n                  'DecimalizationTable',\n                  'PinValidationData',\n                  'PinValidationDataPadCharacter'\n                ],\n                members: {\n                  DecimalizationTable: {},\n                  PinValidationData: {},\n                  PinValidationDataPadCharacter: {}\n                }\n              },\n              Ibm3624PinFromOffset: {\n                type: 'structure',\n                required: [\n                  'DecimalizationTable',\n                  'PinOffset',\n                  'PinValidationData',\n                  'PinValidationDataPadCharacter'\n                ],\n                members: {\n                  DecimalizationTable: {},\n                  PinOffset: {},\n                  PinValidationData: {},\n                  PinValidationDataPadCharacter: {}\n                }\n              },\n              Ibm3624PinOffset: {\n                type: 'structure',\n                required: [\n                  'DecimalizationTable',\n                  'EncryptedPinBlock',\n                  'PinValidationData',\n                  'PinValidationDataPadCharacter'\n                ],\n                members: {\n                  DecimalizationTable: {},\n                  EncryptedPinBlock: {},\n                  PinValidationData: {},\n                  PinValidationDataPadCharacter: {}\n                }\n              },\n              Ibm3624RandomPin: {\n                type: 'structure',\n                required: [\n                  'DecimalizationTable',\n                  'PinValidationData',\n                  'PinValidationDataPadCharacter'\n                ],\n                members: {\n                  DecimalizationTable: {},\n                  PinValidationData: {},\n                  PinValidationDataPadCharacter: {}\n                }\n              },\n              VisaPin: {\n                type: 'structure',\n                required: [\n                  'PinVerificationKeyIndex'\n                ],\n                members: {\n                  PinVerificationKeyIndex: {\n                    type: 'integer'\n                  }\n                }\n              },\n              VisaPinVerificationValue: {\n                type: 'structure',\n                required: [\n                  'EncryptedPinBlock',\n                  'PinVerificationKeyIndex'\n                ],\n                members: {\n                  EncryptedPinBlock: {},\n                  PinVerificationKeyIndex: {\n                    type: 'integer'\n                  }\n                }\n              }\n            },\n            union: true\n          },\n          GenerationKeyIdentifier: {},\n          PinBlockFormat: {},\n          PinDataLength: {\n            type: 'integer'\n          },\n          PrimaryAccountNumber: {\n            shape: 'Sg'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'EncryptedPinBlock',\n          'EncryptionKeyArn',\n          'EncryptionKeyCheckValue',\n          'GenerationKeyArn',\n          'GenerationKeyCheckValue',\n          'PinData'\n        ],\n        members: {\n          EncryptedPinBlock: {},\n          EncryptionKeyArn: {},\n          EncryptionKeyCheckValue: {},\n          GenerationKeyArn: {},\n          GenerationKeyCheckValue: {},\n          PinData: {\n            type: 'structure',\n            members: {\n              PinOffset: {},\n              VerificationValue: {}\n            },\n            union: true\n          }\n        }\n      }\n    },\n    ReEncryptData: {\n      http: {\n        requestUri: '/keys/{IncomingKeyIdentifier}/reencrypt',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CipherText',\n          'IncomingEncryptionAttributes',\n          'IncomingKeyIdentifier',\n          'OutgoingEncryptionAttributes',\n          'OutgoingKeyIdentifier'\n        ],\n        members: {\n          CipherText: {\n            shape: 'S2'\n          },\n          IncomingEncryptionAttributes: {\n            shape: 'S23'\n          },\n          IncomingKeyIdentifier: {\n            location: 'uri',\n            locationName: 'IncomingKeyIdentifier'\n          },\n          OutgoingEncryptionAttributes: {\n            shape: 'S23'\n          },\n          OutgoingKeyIdentifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CipherText',\n          'KeyArn',\n          'KeyCheckValue'\n        ],\n        members: {\n          CipherText: {\n            shape: 'S2'\n          },\n          KeyArn: {},\n          KeyCheckValue: {}\n        }\n      }\n    },\n    TranslatePinData: {\n      http: {\n        requestUri: '/pindata/translate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'EncryptedPinBlock',\n          'IncomingKeyIdentifier',\n          'IncomingTranslationAttributes',\n          'OutgoingKeyIdentifier',\n          'OutgoingTranslationAttributes'\n        ],\n        members: {\n          EncryptedPinBlock: {\n            type: 'string',\n            sensitive: true\n          },\n          IncomingDukptAttributes: {\n            shape: 'S27'\n          },\n          IncomingKeyIdentifier: {},\n          IncomingTranslationAttributes: {\n            shape: 'S28'\n          },\n          OutgoingDukptAttributes: {\n            shape: 'S27'\n          },\n          OutgoingKeyIdentifier: {},\n          OutgoingTranslationAttributes: {\n            shape: 'S28'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'KeyArn',\n          'KeyCheckValue',\n          'PinBlock'\n        ],\n        members: {\n          KeyArn: {},\n          KeyCheckValue: {},\n          PinBlock: {}\n        }\n      }\n    },\n    VerifyAuthRequestCryptogram: {\n      http: {\n        requestUri: '/cryptogram/verify',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AuthRequestCryptogram',\n          'KeyIdentifier',\n          'MajorKeyDerivationMode',\n          'SessionKeyDerivationAttributes',\n          'TransactionData'\n        ],\n        members: {\n          AuthRequestCryptogram: {},\n          AuthResponseAttributes: {\n            type: 'structure',\n            members: {\n              ArpcMethod1: {\n                type: 'structure',\n                required: [\n                  'AuthResponseCode'\n                ],\n                members: {\n                  AuthResponseCode: {}\n                }\n              },\n              ArpcMethod2: {\n                type: 'structure',\n                required: [\n                  'CardStatusUpdate'\n                ],\n                members: {\n                  CardStatusUpdate: {},\n                  ProprietaryAuthenticationData: {}\n                }\n              }\n            },\n            union: true\n          },\n          KeyIdentifier: {},\n          MajorKeyDerivationMode: {},\n          SessionKeyDerivationAttributes: {\n            type: 'structure',\n            members: {\n              Amex: {\n                type: 'structure',\n                required: [\n                  'PanSequenceNumber',\n                  'PrimaryAccountNumber'\n                ],\n                members: {\n                  PanSequenceNumber: {},\n                  PrimaryAccountNumber: {\n                    shape: 'Sg'\n                  }\n                }\n              },\n              Emv2000: {\n                type: 'structure',\n                required: [\n                  'ApplicationTransactionCounter',\n                  'PanSequenceNumber',\n                  'PrimaryAccountNumber'\n                ],\n                members: {\n                  ApplicationTransactionCounter: {},\n                  PanSequenceNumber: {},\n                  PrimaryAccountNumber: {\n                    shape: 'Sg'\n                  }\n                }\n              },\n              EmvCommon: {\n                type: 'structure',\n                required: [\n                  'ApplicationTransactionCounter',\n                  'PanSequenceNumber',\n                  'PrimaryAccountNumber'\n                ],\n                members: {\n                  ApplicationTransactionCounter: {},\n                  PanSequenceNumber: {},\n                  PrimaryAccountNumber: {\n                    shape: 'Sg'\n                  }\n                }\n              },\n              Mastercard: {\n                type: 'structure',\n                required: [\n                  'ApplicationTransactionCounter',\n                  'PanSequenceNumber',\n                  'PrimaryAccountNumber',\n                  'UnpredictableNumber'\n                ],\n                members: {\n                  ApplicationTransactionCounter: {},\n                  PanSequenceNumber: {},\n                  PrimaryAccountNumber: {\n                    shape: 'Sg'\n                  },\n                  UnpredictableNumber: {}\n                }\n              },\n              Visa: {\n                type: 'structure',\n                required: [\n                  'PanSequenceNumber',\n                  'PrimaryAccountNumber'\n                ],\n                members: {\n                  PanSequenceNumber: {},\n                  PrimaryAccountNumber: {\n                    shape: 'Sg'\n                  }\n                }\n              }\n            },\n            union: true\n          },\n          TransactionData: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'KeyArn',\n          'KeyCheckValue'\n        ],\n        members: {\n          AuthResponseValue: {},\n          KeyArn: {},\n          KeyCheckValue: {}\n        }\n      }\n    },\n    VerifyCardValidationData: {\n      http: {\n        requestUri: '/cardvalidationdata/verify',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'KeyIdentifier',\n          'PrimaryAccountNumber',\n          'ValidationData',\n          'VerificationAttributes'\n        ],\n        members: {\n          KeyIdentifier: {},\n          PrimaryAccountNumber: {\n            shape: 'Sg'\n          },\n          ValidationData: {},\n          VerificationAttributes: {\n            type: 'structure',\n            members: {\n              AmexCardSecurityCodeVersion1: {\n                shape: 'St'\n              },\n              AmexCardSecurityCodeVersion2: {\n                shape: 'Sv'\n              },\n              CardHolderVerificationValue: {\n                shape: 'Sx'\n              },\n              CardVerificationValue1: {\n                shape: 'S10'\n              },\n              CardVerificationValue2: {\n                shape: 'S11'\n              },\n              DiscoverDynamicCardVerificationCode: {\n                type: 'structure',\n                required: [\n                  'ApplicationTransactionCounter',\n                  'CardExpiryDate',\n                  'UnpredictableNumber'\n                ],\n                members: {\n                  ApplicationTransactionCounter: {},\n                  CardExpiryDate: {},\n                  UnpredictableNumber: {}\n                }\n              },\n              DynamicCardVerificationCode: {\n                shape: 'S12'\n              },\n              DynamicCardVerificationValue: {\n                shape: 'S14'\n              }\n            },\n            union: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'KeyArn',\n          'KeyCheckValue'\n        ],\n        members: {\n          KeyArn: {},\n          KeyCheckValue: {}\n        }\n      }\n    },\n    VerifyMac: {\n      http: {\n        requestUri: '/mac/verify',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'KeyIdentifier',\n          'Mac',\n          'MessageData',\n          'VerificationAttributes'\n        ],\n        members: {\n          KeyIdentifier: {},\n          Mac: {\n            type: 'string',\n            sensitive: true\n          },\n          MacLength: {\n            type: 'integer'\n          },\n          MessageData: {\n            shape: 'S1h'\n          },\n          VerificationAttributes: {\n            shape: 'S19'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'KeyArn',\n          'KeyCheckValue'\n        ],\n        members: {\n          KeyArn: {},\n          KeyCheckValue: {}\n        }\n      }\n    },\n    VerifyPinData: {\n      http: {\n        requestUri: '/pindata/verify',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'EncryptedPinBlock',\n          'EncryptionKeyIdentifier',\n          'PinBlockFormat',\n          'PrimaryAccountNumber',\n          'VerificationAttributes',\n          'VerificationKeyIdentifier'\n        ],\n        members: {\n          DukptAttributes: {\n            type: 'structure',\n            required: [\n              'DukptDerivationType',\n              'KeySerialNumber'\n            ],\n            members: {\n              DukptDerivationType: {},\n              KeySerialNumber: {}\n            }\n          },\n          EncryptedPinBlock: {},\n          EncryptionKeyIdentifier: {},\n          PinBlockFormat: {},\n          PinDataLength: {\n            type: 'integer'\n          },\n          PrimaryAccountNumber: {\n            shape: 'Sg'\n          },\n          VerificationAttributes: {\n            type: 'structure',\n            members: {\n              Ibm3624Pin: {\n                type: 'structure',\n                required: [\n                  'DecimalizationTable',\n                  'PinOffset',\n                  'PinValidationData',\n                  'PinValidationDataPadCharacter'\n                ],\n                members: {\n                  DecimalizationTable: {},\n                  PinOffset: {},\n                  PinValidationData: {},\n                  PinValidationDataPadCharacter: {}\n                }\n              },\n              VisaPin: {\n                type: 'structure',\n                required: [\n                  'PinVerificationKeyIndex',\n                  'VerificationValue'\n                ],\n                members: {\n                  PinVerificationKeyIndex: {\n                    type: 'integer'\n                  },\n                  VerificationValue: {}\n                }\n              }\n            },\n            union: true\n          },\n          VerificationKeyIdentifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'EncryptionKeyArn',\n          'EncryptionKeyCheckValue',\n          'VerificationKeyArn',\n          'VerificationKeyCheckValue'\n        ],\n        members: {\n          EncryptionKeyArn: {},\n          EncryptionKeyCheckValue: {},\n          VerificationKeyArn: {},\n          VerificationKeyCheckValue: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S2: {\n      type: 'string',\n      sensitive: true\n    },\n    S3: {\n      type: 'structure',\n      members: {\n        Asymmetric: {\n          type: 'structure',\n          members: {\n            PaddingType: {}\n          }\n        },\n        Dukpt: {\n          shape: 'S6'\n        },\n        Emv: {\n          type: 'structure',\n          required: [\n            'MajorKeyDerivationMode',\n            'PanSequenceNumber',\n            'PrimaryAccountNumber',\n            'SessionDerivationData'\n          ],\n          members: {\n            InitializationVector: {\n              shape: 'S9'\n            },\n            MajorKeyDerivationMode: {},\n            Mode: {},\n            PanSequenceNumber: {},\n            PrimaryAccountNumber: {\n              shape: 'Sg'\n            },\n            SessionDerivationData: {}\n          }\n        },\n        Symmetric: {\n          shape: 'Si'\n        }\n      },\n      union: true\n    },\n    S6: {\n      type: 'structure',\n      required: [\n        'KeySerialNumber'\n      ],\n      members: {\n        DukptKeyDerivationType: {},\n        DukptKeyVariant: {},\n        InitializationVector: {\n          shape: 'S9'\n        },\n        KeySerialNumber: {},\n        Mode: {}\n      }\n    },\n    S9: {\n      type: 'string',\n      sensitive: true\n    },\n    Sg: {\n      type: 'string',\n      sensitive: true\n    },\n    Si: {\n      type: 'structure',\n      required: [\n        'Mode'\n      ],\n      members: {\n        InitializationVector: {\n          shape: 'S9'\n        },\n        Mode: {},\n        PaddingType: {}\n      }\n    },\n    St: {\n      type: 'structure',\n      required: [\n        'CardExpiryDate'\n      ],\n      members: {\n        CardExpiryDate: {}\n      }\n    },\n    Sv: {\n      type: 'structure',\n      required: [\n        'CardExpiryDate',\n        'ServiceCode'\n      ],\n      members: {\n        CardExpiryDate: {},\n        ServiceCode: {}\n      }\n    },\n    Sx: {\n      type: 'structure',\n      required: [\n        'ApplicationTransactionCounter',\n        'PanSequenceNumber',\n        'UnpredictableNumber'\n      ],\n      members: {\n        ApplicationTransactionCounter: {},\n        PanSequenceNumber: {},\n        UnpredictableNumber: {}\n      }\n    },\n    S10: {\n      type: 'structure',\n      required: [\n        'CardExpiryDate',\n        'ServiceCode'\n      ],\n      members: {\n        CardExpiryDate: {},\n        ServiceCode: {}\n      }\n    },\n    S11: {\n      type: 'structure',\n      required: [\n        'CardExpiryDate'\n      ],\n      members: {\n        CardExpiryDate: {}\n      }\n    },\n    S12: {\n      type: 'structure',\n      required: [\n        'ApplicationTransactionCounter',\n        'PanSequenceNumber',\n        'TrackData',\n        'UnpredictableNumber'\n      ],\n      members: {\n        ApplicationTransactionCounter: {},\n        PanSequenceNumber: {},\n        TrackData: {},\n        UnpredictableNumber: {}\n      }\n    },\n    S14: {\n      type: 'structure',\n      required: [\n        'ApplicationTransactionCounter',\n        'CardExpiryDate',\n        'PanSequenceNumber',\n        'ServiceCode'\n      ],\n      members: {\n        ApplicationTransactionCounter: {},\n        CardExpiryDate: {},\n        PanSequenceNumber: {},\n        ServiceCode: {}\n      }\n    },\n    S19: {\n      type: 'structure',\n      members: {\n        Algorithm: {},\n        DukptCmac: {\n          shape: 'S1b'\n        },\n        DukptIso9797Algorithm1: {\n          shape: 'S1b'\n        },\n        DukptIso9797Algorithm3: {\n          shape: 'S1b'\n        },\n        EmvMac: {\n          type: 'structure',\n          required: [\n            'MajorKeyDerivationMode',\n            'PanSequenceNumber',\n            'PrimaryAccountNumber',\n            'SessionKeyDerivationMode',\n            'SessionKeyDerivationValue'\n          ],\n          members: {\n            MajorKeyDerivationMode: {},\n            PanSequenceNumber: {},\n            PrimaryAccountNumber: {\n              shape: 'Sg'\n            },\n            SessionKeyDerivationMode: {},\n            SessionKeyDerivationValue: {\n              type: 'structure',\n              members: {\n                ApplicationCryptogram: {},\n                ApplicationTransactionCounter: {}\n              },\n              union: true\n            }\n          }\n        }\n      },\n      union: true\n    },\n    S1b: {\n      type: 'structure',\n      required: [\n        'DukptKeyVariant',\n        'KeySerialNumber'\n      ],\n      members: {\n        DukptDerivationType: {},\n        DukptKeyVariant: {},\n        KeySerialNumber: {}\n      }\n    },\n    S1h: {\n      type: 'string',\n      sensitive: true\n    },\n    S23: {\n      type: 'structure',\n      members: {\n        Dukpt: {\n          shape: 'S6'\n        },\n        Symmetric: {\n          shape: 'Si'\n        }\n      },\n      union: true\n    },\n    S27: {\n      type: 'structure',\n      required: [\n        'KeySerialNumber'\n      ],\n      members: {\n        DukptKeyDerivationType: {},\n        DukptKeyVariant: {},\n        KeySerialNumber: {}\n      }\n    },\n    S28: {\n      type: 'structure',\n      members: {\n        IsoFormat0: {\n          shape: 'S29'\n        },\n        IsoFormat1: {\n          type: 'structure',\n          members: {}\n        },\n        IsoFormat3: {\n          shape: 'S29'\n        },\n        IsoFormat4: {\n          shape: 'S29'\n        }\n      },\n      union: true\n    },\n    S29: {\n      type: 'structure',\n      required: [\n        'PrimaryAccountNumber'\n      ],\n      members: {\n        PrimaryAccountNumber: {\n          shape: 'Sg'\n        }\n      }\n    }\n  }\n}"]}