{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/kms-2014-11-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","CancelKeyDeletion","input","type","required","members","KeyId","output","ConnectCustomKeyStore","CustomKeyStoreId","CreateAlias","AliasName","TargetKeyId","CreateCustomKeyStore","CustomKeyStoreName","CloudHsmClusterId","TrustAnchorCertificate","KeyStorePassword","shape","CustomKeyStoreType","XksProxyUriEndpoint","XksProxyUriPath","XksProxyVpcEndpointServiceName","XksProxyAuthenticationCredential","XksProxyConnectivity","CreateGrant","GranteePrincipal","RetiringPrincipal","Operations","Constraints","GrantTokens","Name","DryRun","GrantToken","GrantId","CreateKey","Policy","Description","KeyUsage","CustomerMasterKeySpec","deprecated","deprecatedMessage","KeySpec","Origin","BypassPolicyLockoutSafetyCheck","Tags","MultiRegion","XksKeyId","KeyMetadata","Decrypt","CiphertextBlob","EncryptionContext","EncryptionAlgorithm","Recipient","Plaintext","CiphertextForRecipient","DeleteAlias","DeleteCustomKeyStore","DeleteImportedKeyMaterial","DescribeCustomKeyStores","Limit","Marker","CustomKeyStores","member","ConnectionState","ConnectionErrorCode","CreationDate","XksProxyConfiguration","Connectivity","AccessKeyId","UriEndpoint","UriPath","VpcEndpointServiceName","NextMarker","Truncated","DescribeKey","DisableKey","DisableKeyRotation","DisconnectCustomKeyStore","EnableKey","EnableKeyRotation","RotationPeriodInDays","Encrypt","GenerateDataKey","NumberOfBytes","GenerateDataKeyPair","KeyPairSpec","PrivateKeyCiphertextBlob","PrivateKeyPlaintext","PublicKey","GenerateDataKeyPairWithoutPlaintext","GenerateDataKeyWithoutPlaintext","GenerateMac","Message","MacAlgorithm","Mac","GenerateRandom","GetKeyPolicy","PolicyName","GetKeyRotationStatus","KeyRotationEnabled","NextRotationDate","OnDemandRotationStartDate","GetParametersForImport","WrappingAlgorithm","WrappingKeySpec","ImportToken","ParametersValidTo","GetPublicKey","EncryptionAlgorithms","SigningAlgorithms","ImportKeyMaterial","EncryptedKeyMaterial","ValidTo","ExpirationModel","ListAliases","Aliases","AliasArn","LastUpdatedDate","ListGrants","ListKeyPolicies","PolicyNames","ListKeyRotations","Rotations","RotationDate","RotationType","ListKeys","Keys","KeyArn","ListResourceTags","ListRetirableGrants","PutKeyPolicy","ReEncrypt","SourceEncryptionContext","SourceKeyId","DestinationKeyId","DestinationEncryptionContext","SourceEncryptionAlgorithm","DestinationEncryptionAlgorithm","ReplicateKey","ReplicaRegion","ReplicaKeyMetadata","ReplicaPolicy","ReplicaTags","RetireGrant","RevokeGrant","RotateKeyOnDemand","ScheduleKeyDeletion","PendingWindowInDays","DeletionDate","KeyState","Sign","MessageType","SigningAlgorithm","Signature","TagResource","UntagResource","TagKeys","UpdateAlias","UpdateCustomKeyStore","NewCustomKeyStoreName","UpdateKeyDescription","UpdatePrimaryRegion","PrimaryRegion","Verify","SignatureValid","VerifyMac","MacValid","shapes","Sd","sensitive","Si","RawSecretAccessKey","Sj","Sp","Sr","EncryptionContextSubset","EncryptionContextEquals","Ss","key","value","Sv","S15","S19","TagKey","TagValue","S1f","AWSAccountId","Arn","Enabled","KeyManager","MultiRegionConfiguration","MultiRegionKeyType","PrimaryKey","ReplicaKeys","PendingDeletionWindowInDays","MacAlgorithms","XksKeyConfiguration","Id","S1m","S1o","S1s","Region","S21","KeyEncryptionAlgorithm","AttestationDocument","S25","S3s","Grants","IssuingAccount"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2014-11-01',\n    endpointPrefix: 'kms',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceAbbreviation: 'KMS',\n    serviceFullName: 'AWS Key Management Service',\n    serviceId: 'KMS',\n    signatureVersion: 'v4',\n    targetPrefix: 'TrentService',\n    uid: 'kms-2014-11-01'\n  },\n  operations: {\n    CancelKeyDeletion: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyId: {}\n        }\n      }\n    },\n    ConnectCustomKeyStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'CustomKeyStoreId'\n        ],\n        members: {\n          CustomKeyStoreId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateAlias: {\n      input: {\n        type: 'structure',\n        required: [\n          'AliasName',\n          'TargetKeyId'\n        ],\n        members: {\n          AliasName: {},\n          TargetKeyId: {}\n        }\n      }\n    },\n    CreateCustomKeyStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'CustomKeyStoreName'\n        ],\n        members: {\n          CustomKeyStoreName: {},\n          CloudHsmClusterId: {},\n          TrustAnchorCertificate: {},\n          KeyStorePassword: {\n            shape: 'Sd'\n          },\n          CustomKeyStoreType: {},\n          XksProxyUriEndpoint: {},\n          XksProxyUriPath: {},\n          XksProxyVpcEndpointServiceName: {},\n          XksProxyAuthenticationCredential: {\n            shape: 'Si'\n          },\n          XksProxyConnectivity: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CustomKeyStoreId: {}\n        }\n      }\n    },\n    CreateGrant: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'GranteePrincipal',\n          'Operations'\n        ],\n        members: {\n          KeyId: {},\n          GranteePrincipal: {},\n          RetiringPrincipal: {},\n          Operations: {\n            shape: 'Sp'\n          },\n          Constraints: {\n            shape: 'Sr'\n          },\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          Name: {},\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GrantToken: {},\n          GrantId: {}\n        }\n      }\n    },\n    CreateKey: {\n      input: {\n        type: 'structure',\n        members: {\n          Policy: {},\n          Description: {},\n          KeyUsage: {},\n          CustomerMasterKeySpec: {\n            shape: 'S15',\n            deprecated: true,\n            deprecatedMessage: 'This parameter has been deprecated. Instead, use the KeySpec parameter.'\n          },\n          KeySpec: {},\n          Origin: {},\n          CustomKeyStoreId: {},\n          BypassPolicyLockoutSafetyCheck: {\n            type: 'boolean'\n          },\n          Tags: {\n            shape: 'S19'\n          },\n          MultiRegion: {\n            type: 'boolean'\n          },\n          XksKeyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyMetadata: {\n            shape: 'S1f'\n          }\n        }\n      }\n    },\n    Decrypt: {\n      input: {\n        type: 'structure',\n        required: [\n          'CiphertextBlob'\n        ],\n        members: {\n          CiphertextBlob: {\n            type: 'blob'\n          },\n          EncryptionContext: {\n            shape: 'Ss'\n          },\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          KeyId: {},\n          EncryptionAlgorithm: {},\n          Recipient: {\n            shape: 'S21'\n          },\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyId: {},\n          Plaintext: {\n            shape: 'S25'\n          },\n          EncryptionAlgorithm: {},\n          CiphertextForRecipient: {\n            type: 'blob'\n          }\n        }\n      }\n    },\n    DeleteAlias: {\n      input: {\n        type: 'structure',\n        required: [\n          'AliasName'\n        ],\n        members: {\n          AliasName: {}\n        }\n      }\n    },\n    DeleteCustomKeyStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'CustomKeyStoreId'\n        ],\n        members: {\n          CustomKeyStoreId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteImportedKeyMaterial: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {}\n        }\n      }\n    },\n    DescribeCustomKeyStores: {\n      input: {\n        type: 'structure',\n        members: {\n          CustomKeyStoreId: {},\n          CustomKeyStoreName: {},\n          Limit: {\n            type: 'integer'\n          },\n          Marker: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CustomKeyStores: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CustomKeyStoreId: {},\n                CustomKeyStoreName: {},\n                CloudHsmClusterId: {},\n                TrustAnchorCertificate: {},\n                ConnectionState: {},\n                ConnectionErrorCode: {},\n                CreationDate: {\n                  type: 'timestamp'\n                },\n                CustomKeyStoreType: {},\n                XksProxyConfiguration: {\n                  type: 'structure',\n                  members: {\n                    Connectivity: {},\n                    AccessKeyId: {\n                      shape: 'Sj'\n                    },\n                    UriEndpoint: {},\n                    UriPath: {},\n                    VpcEndpointServiceName: {}\n                  }\n                }\n              }\n            }\n          },\n          NextMarker: {},\n          Truncated: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    DescribeKey: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {},\n          GrantTokens: {\n            shape: 'Sv'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyMetadata: {\n            shape: 'S1f'\n          }\n        }\n      }\n    },\n    DisableKey: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {}\n        }\n      }\n    },\n    DisableKeyRotation: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {}\n        }\n      }\n    },\n    DisconnectCustomKeyStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'CustomKeyStoreId'\n        ],\n        members: {\n          CustomKeyStoreId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    EnableKey: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {}\n        }\n      }\n    },\n    EnableKeyRotation: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {},\n          RotationPeriodInDays: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    Encrypt: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'Plaintext'\n        ],\n        members: {\n          KeyId: {},\n          Plaintext: {\n            shape: 'S25'\n          },\n          EncryptionContext: {\n            shape: 'Ss'\n          },\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          EncryptionAlgorithm: {},\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CiphertextBlob: {\n            type: 'blob'\n          },\n          KeyId: {},\n          EncryptionAlgorithm: {}\n        }\n      }\n    },\n    GenerateDataKey: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {},\n          EncryptionContext: {\n            shape: 'Ss'\n          },\n          NumberOfBytes: {\n            type: 'integer'\n          },\n          KeySpec: {},\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          Recipient: {\n            shape: 'S21'\n          },\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CiphertextBlob: {\n            type: 'blob'\n          },\n          Plaintext: {\n            shape: 'S25'\n          },\n          KeyId: {},\n          CiphertextForRecipient: {\n            type: 'blob'\n          }\n        }\n      }\n    },\n    GenerateDataKeyPair: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'KeyPairSpec'\n        ],\n        members: {\n          EncryptionContext: {\n            shape: 'Ss'\n          },\n          KeyId: {},\n          KeyPairSpec: {},\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          Recipient: {\n            shape: 'S21'\n          },\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PrivateKeyCiphertextBlob: {\n            type: 'blob'\n          },\n          PrivateKeyPlaintext: {\n            shape: 'S25'\n          },\n          PublicKey: {\n            type: 'blob'\n          },\n          KeyId: {},\n          KeyPairSpec: {},\n          CiphertextForRecipient: {\n            type: 'blob'\n          }\n        }\n      }\n    },\n    GenerateDataKeyPairWithoutPlaintext: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'KeyPairSpec'\n        ],\n        members: {\n          EncryptionContext: {\n            shape: 'Ss'\n          },\n          KeyId: {},\n          KeyPairSpec: {},\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PrivateKeyCiphertextBlob: {\n            type: 'blob'\n          },\n          PublicKey: {\n            type: 'blob'\n          },\n          KeyId: {},\n          KeyPairSpec: {}\n        }\n      }\n    },\n    GenerateDataKeyWithoutPlaintext: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {},\n          EncryptionContext: {\n            shape: 'Ss'\n          },\n          KeySpec: {},\n          NumberOfBytes: {\n            type: 'integer'\n          },\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CiphertextBlob: {\n            type: 'blob'\n          },\n          KeyId: {}\n        }\n      }\n    },\n    GenerateMac: {\n      input: {\n        type: 'structure',\n        required: [\n          'Message',\n          'KeyId',\n          'MacAlgorithm'\n        ],\n        members: {\n          Message: {\n            shape: 'S25'\n          },\n          KeyId: {},\n          MacAlgorithm: {},\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Mac: {\n            type: 'blob'\n          },\n          MacAlgorithm: {},\n          KeyId: {}\n        }\n      }\n    },\n    GenerateRandom: {\n      input: {\n        type: 'structure',\n        members: {\n          NumberOfBytes: {\n            type: 'integer'\n          },\n          CustomKeyStoreId: {},\n          Recipient: {\n            shape: 'S21'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Plaintext: {\n            shape: 'S25'\n          },\n          CiphertextForRecipient: {\n            type: 'blob'\n          }\n        }\n      }\n    },\n    GetKeyPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {},\n          PolicyName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Policy: {},\n          PolicyName: {}\n        }\n      }\n    },\n    GetKeyRotationStatus: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyRotationEnabled: {\n            type: 'boolean'\n          },\n          KeyId: {},\n          RotationPeriodInDays: {\n            type: 'integer'\n          },\n          NextRotationDate: {\n            type: 'timestamp'\n          },\n          OnDemandRotationStartDate: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetParametersForImport: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'WrappingAlgorithm',\n          'WrappingKeySpec'\n        ],\n        members: {\n          KeyId: {},\n          WrappingAlgorithm: {},\n          WrappingKeySpec: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyId: {},\n          ImportToken: {\n            type: 'blob'\n          },\n          PublicKey: {\n            shape: 'S25'\n          },\n          ParametersValidTo: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetPublicKey: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {},\n          GrantTokens: {\n            shape: 'Sv'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyId: {},\n          PublicKey: {\n            type: 'blob'\n          },\n          CustomerMasterKeySpec: {\n            shape: 'S15',\n            deprecated: true,\n            deprecatedMessage: 'This field has been deprecated. Instead, use the KeySpec field.'\n          },\n          KeySpec: {},\n          KeyUsage: {},\n          EncryptionAlgorithms: {\n            shape: 'S1m'\n          },\n          SigningAlgorithms: {\n            shape: 'S1o'\n          }\n        }\n      }\n    },\n    ImportKeyMaterial: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'ImportToken',\n          'EncryptedKeyMaterial'\n        ],\n        members: {\n          KeyId: {},\n          ImportToken: {\n            type: 'blob'\n          },\n          EncryptedKeyMaterial: {\n            type: 'blob'\n          },\n          ValidTo: {\n            type: 'timestamp'\n          },\n          ExpirationModel: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    ListAliases: {\n      input: {\n        type: 'structure',\n        members: {\n          KeyId: {},\n          Limit: {\n            type: 'integer'\n          },\n          Marker: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Aliases: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AliasName: {},\n                AliasArn: {},\n                TargetKeyId: {},\n                CreationDate: {\n                  type: 'timestamp'\n                },\n                LastUpdatedDate: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextMarker: {},\n          Truncated: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    ListGrants: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          Limit: {\n            type: 'integer'\n          },\n          Marker: {},\n          KeyId: {},\n          GrantId: {},\n          GranteePrincipal: {}\n        }\n      },\n      output: {\n        shape: 'S3s'\n      }\n    },\n    ListKeyPolicies: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {},\n          Limit: {\n            type: 'integer'\n          },\n          Marker: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PolicyNames: {\n            type: 'list',\n            member: {}\n          },\n          NextMarker: {},\n          Truncated: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    ListKeyRotations: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {},\n          Limit: {\n            type: 'integer'\n          },\n          Marker: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Rotations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                KeyId: {},\n                RotationDate: {\n                  type: 'timestamp'\n                },\n                RotationType: {}\n              }\n            }\n          },\n          NextMarker: {},\n          Truncated: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    ListKeys: {\n      input: {\n        type: 'structure',\n        members: {\n          Limit: {\n            type: 'integer'\n          },\n          Marker: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Keys: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                KeyId: {},\n                KeyArn: {}\n              }\n            }\n          },\n          NextMarker: {},\n          Truncated: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    ListResourceTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {},\n          Limit: {\n            type: 'integer'\n          },\n          Marker: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S19'\n          },\n          NextMarker: {},\n          Truncated: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    ListRetirableGrants: {\n      input: {\n        type: 'structure',\n        required: [\n          'RetiringPrincipal'\n        ],\n        members: {\n          Limit: {\n            type: 'integer'\n          },\n          Marker: {},\n          RetiringPrincipal: {}\n        }\n      },\n      output: {\n        shape: 'S3s'\n      }\n    },\n    PutKeyPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'Policy'\n        ],\n        members: {\n          KeyId: {},\n          PolicyName: {},\n          Policy: {},\n          BypassPolicyLockoutSafetyCheck: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    ReEncrypt: {\n      input: {\n        type: 'structure',\n        required: [\n          'CiphertextBlob',\n          'DestinationKeyId'\n        ],\n        members: {\n          CiphertextBlob: {\n            type: 'blob'\n          },\n          SourceEncryptionContext: {\n            shape: 'Ss'\n          },\n          SourceKeyId: {},\n          DestinationKeyId: {},\n          DestinationEncryptionContext: {\n            shape: 'Ss'\n          },\n          SourceEncryptionAlgorithm: {},\n          DestinationEncryptionAlgorithm: {},\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CiphertextBlob: {\n            type: 'blob'\n          },\n          SourceKeyId: {},\n          KeyId: {},\n          SourceEncryptionAlgorithm: {},\n          DestinationEncryptionAlgorithm: {}\n        }\n      }\n    },\n    ReplicateKey: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'ReplicaRegion'\n        ],\n        members: {\n          KeyId: {},\n          ReplicaRegion: {},\n          Policy: {},\n          BypassPolicyLockoutSafetyCheck: {\n            type: 'boolean'\n          },\n          Description: {},\n          Tags: {\n            shape: 'S19'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReplicaKeyMetadata: {\n            shape: 'S1f'\n          },\n          ReplicaPolicy: {},\n          ReplicaTags: {\n            shape: 'S19'\n          }\n        }\n      }\n    },\n    RetireGrant: {\n      input: {\n        type: 'structure',\n        members: {\n          GrantToken: {},\n          KeyId: {},\n          GrantId: {},\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    RevokeGrant: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'GrantId'\n        ],\n        members: {\n          KeyId: {},\n          GrantId: {},\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    RotateKeyOnDemand: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyId: {}\n        }\n      }\n    },\n    ScheduleKeyDeletion: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId'\n        ],\n        members: {\n          KeyId: {},\n          PendingWindowInDays: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyId: {},\n          DeletionDate: {\n            type: 'timestamp'\n          },\n          KeyState: {},\n          PendingWindowInDays: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    Sign: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'Message',\n          'SigningAlgorithm'\n        ],\n        members: {\n          KeyId: {},\n          Message: {\n            shape: 'S25'\n          },\n          MessageType: {},\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          SigningAlgorithm: {},\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyId: {},\n          Signature: {\n            type: 'blob'\n          },\n          SigningAlgorithm: {}\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'Tags'\n        ],\n        members: {\n          KeyId: {},\n          Tags: {\n            shape: 'S19'\n          }\n        }\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'TagKeys'\n        ],\n        members: {\n          KeyId: {},\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    UpdateAlias: {\n      input: {\n        type: 'structure',\n        required: [\n          'AliasName',\n          'TargetKeyId'\n        ],\n        members: {\n          AliasName: {},\n          TargetKeyId: {}\n        }\n      }\n    },\n    UpdateCustomKeyStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'CustomKeyStoreId'\n        ],\n        members: {\n          CustomKeyStoreId: {},\n          NewCustomKeyStoreName: {},\n          KeyStorePassword: {\n            shape: 'Sd'\n          },\n          CloudHsmClusterId: {},\n          XksProxyUriEndpoint: {},\n          XksProxyUriPath: {},\n          XksProxyVpcEndpointServiceName: {},\n          XksProxyAuthenticationCredential: {\n            shape: 'Si'\n          },\n          XksProxyConnectivity: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateKeyDescription: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'Description'\n        ],\n        members: {\n          KeyId: {},\n          Description: {}\n        }\n      }\n    },\n    UpdatePrimaryRegion: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'PrimaryRegion'\n        ],\n        members: {\n          KeyId: {},\n          PrimaryRegion: {}\n        }\n      }\n    },\n    Verify: {\n      input: {\n        type: 'structure',\n        required: [\n          'KeyId',\n          'Message',\n          'Signature',\n          'SigningAlgorithm'\n        ],\n        members: {\n          KeyId: {},\n          Message: {\n            shape: 'S25'\n          },\n          MessageType: {},\n          Signature: {\n            type: 'blob'\n          },\n          SigningAlgorithm: {},\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyId: {},\n          SignatureValid: {\n            type: 'boolean'\n          },\n          SigningAlgorithm: {}\n        }\n      }\n    },\n    VerifyMac: {\n      input: {\n        type: 'structure',\n        required: [\n          'Message',\n          'KeyId',\n          'MacAlgorithm',\n          'Mac'\n        ],\n        members: {\n          Message: {\n            shape: 'S25'\n          },\n          KeyId: {},\n          MacAlgorithm: {},\n          Mac: {\n            type: 'blob'\n          },\n          GrantTokens: {\n            shape: 'Sv'\n          },\n          DryRun: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          KeyId: {},\n          MacValid: {\n            type: 'boolean'\n          },\n          MacAlgorithm: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    Sd: {\n      type: 'string',\n      sensitive: true\n    },\n    Si: {\n      type: 'structure',\n      required: [\n        'AccessKeyId',\n        'RawSecretAccessKey'\n      ],\n      members: {\n        AccessKeyId: {\n          shape: 'Sj'\n        },\n        RawSecretAccessKey: {\n          type: 'string',\n          sensitive: true\n        }\n      }\n    },\n    Sj: {\n      type: 'string',\n      sensitive: true\n    },\n    Sp: {\n      type: 'list',\n      member: {}\n    },\n    Sr: {\n      type: 'structure',\n      members: {\n        EncryptionContextSubset: {\n          shape: 'Ss'\n        },\n        EncryptionContextEquals: {\n          shape: 'Ss'\n        }\n      }\n    },\n    Ss: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sv: {\n      type: 'list',\n      member: {}\n    },\n    S15: {\n      type: 'string',\n      deprecated: true,\n      deprecatedMessage: 'This enum has been deprecated. Instead, use the KeySpec enum.'\n    },\n    S19: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'TagKey',\n          'TagValue'\n        ],\n        members: {\n          TagKey: {},\n          TagValue: {}\n        }\n      }\n    },\n    S1f: {\n      type: 'structure',\n      required: [\n        'KeyId'\n      ],\n      members: {\n        AWSAccountId: {},\n        KeyId: {},\n        Arn: {},\n        CreationDate: {\n          type: 'timestamp'\n        },\n        Enabled: {\n          type: 'boolean'\n        },\n        Description: {},\n        KeyUsage: {},\n        KeyState: {},\n        DeletionDate: {\n          type: 'timestamp'\n        },\n        ValidTo: {\n          type: 'timestamp'\n        },\n        Origin: {},\n        CustomKeyStoreId: {},\n        CloudHsmClusterId: {},\n        ExpirationModel: {},\n        KeyManager: {},\n        CustomerMasterKeySpec: {\n          shape: 'S15',\n          deprecated: true,\n          deprecatedMessage: 'This field has been deprecated. Instead, use the KeySpec field.'\n        },\n        KeySpec: {},\n        EncryptionAlgorithms: {\n          shape: 'S1m'\n        },\n        SigningAlgorithms: {\n          shape: 'S1o'\n        },\n        MultiRegion: {\n          type: 'boolean'\n        },\n        MultiRegionConfiguration: {\n          type: 'structure',\n          members: {\n            MultiRegionKeyType: {},\n            PrimaryKey: {\n              shape: 'S1s'\n            },\n            ReplicaKeys: {\n              type: 'list',\n              member: {\n                shape: 'S1s'\n              }\n            }\n          }\n        },\n        PendingDeletionWindowInDays: {\n          type: 'integer'\n        },\n        MacAlgorithms: {\n          type: 'list',\n          member: {}\n        },\n        XksKeyConfiguration: {\n          type: 'structure',\n          members: {\n            Id: {}\n          }\n        }\n      }\n    },\n    S1m: {\n      type: 'list',\n      member: {}\n    },\n    S1o: {\n      type: 'list',\n      member: {}\n    },\n    S1s: {\n      type: 'structure',\n      members: {\n        Arn: {},\n        Region: {}\n      }\n    },\n    S21: {\n      type: 'structure',\n      members: {\n        KeyEncryptionAlgorithm: {},\n        AttestationDocument: {\n          type: 'blob'\n        }\n      }\n    },\n    S25: {\n      type: 'blob',\n      sensitive: true\n    },\n    S3s: {\n      type: 'structure',\n      members: {\n        Grants: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              KeyId: {},\n              GrantId: {},\n              Name: {},\n              CreationDate: {\n                type: 'timestamp'\n              },\n              GranteePrincipal: {},\n              RetiringPrincipal: {},\n              IssuingAccount: {},\n              Operations: {\n                shape: 'Sp'\n              },\n              Constraints: {\n                shape: 'Sr'\n              }\n            }\n          }\n        },\n        NextMarker: {},\n        Truncated: {\n          type: 'boolean'\n        }\n      }\n    }\n  }\n}"]}