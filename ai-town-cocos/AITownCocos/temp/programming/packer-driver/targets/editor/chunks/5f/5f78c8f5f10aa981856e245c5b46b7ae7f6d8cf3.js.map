{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/toArray.js"],"names":["toArray","value","isArrayLike","isString","stringToArray","copyArray","symIterator","iteratorToArray","tag","getTag","func","mapTag","mapToArray","setTag","setToArray","values","Symbol","iterator","undefined"],"mappings":";;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAI,CAACA,KAAL,EAAY;AACV,aAAO,EAAP;AACD;;AACD,QAAIC,WAAW,CAACD,KAAD,CAAf,EAAwB;AACtB,aAAOE,QAAQ,CAACF,KAAD,CAAR,GAAkBG,aAAa,CAACH,KAAD,CAA/B,GAAyCI,SAAS,CAACJ,KAAD,CAAzD;AACD;;AACD,QAAIK,WAAW,IAAIL,KAAK,CAACK,WAAD,CAAxB,EAAuC;AACrC,aAAOC,eAAe,CAACN,KAAK,CAACK,WAAD,CAAL,EAAD,CAAtB;AACD;;AACD,QAAIE,GAAG,GAAGC,MAAM,CAACR,KAAD,CAAhB;AAAA,QACIS,IAAI,GAAGF,GAAG,IAAIG,MAAP,GAAgBC,UAAhB,GAA8BJ,GAAG,IAAIK,MAAP,GAAgBC,UAAhB,GAA6BC,MADtE;AAGA,WAAOL,IAAI,CAACT,KAAD,CAAX;AACD;;;;AAvDMe,MAAAA,M;;AACAX,MAAAA,S;;AACAI,MAAAA,M;;AACAP,MAAAA,W;;AACAC,MAAAA,Q;;AACAI,MAAAA,e;;AACAK,MAAAA,U;;AACAE,MAAAA,U;;AACAV,MAAAA,a;;AACAW,MAAAA,M;;;AAEP;AACIJ,MAAAA,M,GAAS,c;AACTE,MAAAA,M,GAAS,c;AAEb;;AACIP,MAAAA,W,GAAcU,MAAM,GAAGA,MAAM,CAACC,QAAV,GAAqBC,S;;yBAyC9BlB,O","sourcesContent":["import Symbol from './_Symbol.js';\nimport copyArray from './_copyArray.js';\nimport getTag from './_getTag.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport iteratorToArray from './_iteratorToArray.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\nimport stringToArray from './_stringToArray.js';\nimport values from './values.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nexport default toArray;\n"]}