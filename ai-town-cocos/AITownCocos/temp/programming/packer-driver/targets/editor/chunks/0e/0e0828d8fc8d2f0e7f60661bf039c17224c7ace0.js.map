{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/snow-device-management-2021-08-04.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CancelTask","http","requestUri","responseCode","input","type","required","members","taskId","location","locationName","output","CreateTask","clientToken","idempotencyToken","command","reboot","unlock","union","description","tags","shape","targets","taskArn","DescribeDevice","managedDeviceId","associatedWithJob","deviceCapacities","member","available","name","total","unit","used","deviceState","deviceType","lastReachedOutAt","lastUpdatedAt","managedDeviceArn","physicalNetworkInterfaces","defaultGateway","ipAddress","ipAddressAssignment","macAddress","netmask","physicalConnectorType","physicalNetworkInterfaceId","software","installState","installedVersion","installingVersion","DescribeDeviceEc2Instances","instanceIds","instances","instance","amiLaunchIndex","blockDeviceMappings","deviceName","ebs","attachTime","deleteOnTermination","status","volumeId","cpuOptions","coreCount","threadsPerCore","createdAt","imageId","instanceId","instanceType","privateIpAddress","publicIpAddress","rootDeviceName","securityGroups","groupId","groupName","state","code","updatedAt","DescribeExecution","executionId","startedAt","DescribeTask","completedAt","ListDeviceResources","method","maxResults","nextToken","resources","arn","id","resourceType","ListDevices","jobId","devices","ListExecutions","executions","ListTagsForResource","resourceArn","ListTasks","tasks","TagResource","UntagResource","tagKeys","idempotent","shapes","Sb","key","value","Sc"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-08-04',\n    endpointPrefix: 'snow-device-management',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS Snow Device Management',\n    serviceId: 'Snow Device Management',\n    signatureVersion: 'v4',\n    signingName: 'snow-device-management',\n    uid: 'snow-device-management-2021-08-04'\n  },\n  operations: {\n    CancelTask: {\n      http: {\n        requestUri: '/task/{taskId}/cancel',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'taskId'\n        ],\n        members: {\n          taskId: {\n            location: 'uri',\n            locationName: 'taskId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          taskId: {}\n        }\n      }\n    },\n    CreateTask: {\n      http: {\n        requestUri: '/task',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'command',\n          'targets'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          command: {\n            type: 'structure',\n            members: {\n              reboot: {\n                type: 'structure',\n                members: {}\n              },\n              unlock: {\n                type: 'structure',\n                members: {}\n              }\n            },\n            union: true\n          },\n          description: {},\n          tags: {\n            shape: 'Sb'\n          },\n          targets: {\n            shape: 'Sc'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          taskArn: {},\n          taskId: {}\n        }\n      }\n    },\n    DescribeDevice: {\n      http: {\n        requestUri: '/managed-device/{managedDeviceId}/describe',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'managedDeviceId'\n        ],\n        members: {\n          managedDeviceId: {\n            location: 'uri',\n            locationName: 'managedDeviceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          associatedWithJob: {},\n          deviceCapacities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                available: {\n                  type: 'long'\n                },\n                name: {},\n                total: {\n                  type: 'long'\n                },\n                unit: {},\n                used: {\n                  type: 'long'\n                }\n              }\n            }\n          },\n          deviceState: {},\n          deviceType: {},\n          lastReachedOutAt: {\n            type: 'timestamp'\n          },\n          lastUpdatedAt: {\n            type: 'timestamp'\n          },\n          managedDeviceArn: {},\n          managedDeviceId: {},\n          physicalNetworkInterfaces: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                defaultGateway: {},\n                ipAddress: {},\n                ipAddressAssignment: {},\n                macAddress: {},\n                netmask: {},\n                physicalConnectorType: {},\n                physicalNetworkInterfaceId: {}\n              }\n            }\n          },\n          software: {\n            type: 'structure',\n            members: {\n              installState: {},\n              installedVersion: {},\n              installingVersion: {}\n            }\n          },\n          tags: {\n            shape: 'Sb'\n          }\n        }\n      }\n    },\n    DescribeDeviceEc2Instances: {\n      http: {\n        requestUri: '/managed-device/{managedDeviceId}/resources/ec2/describe',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'instanceIds',\n          'managedDeviceId'\n        ],\n        members: {\n          instanceIds: {\n            type: 'list',\n            member: {}\n          },\n          managedDeviceId: {\n            location: 'uri',\n            locationName: 'managedDeviceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          instances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                instance: {\n                  type: 'structure',\n                  members: {\n                    amiLaunchIndex: {\n                      type: 'integer'\n                    },\n                    blockDeviceMappings: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          deviceName: {},\n                          ebs: {\n                            type: 'structure',\n                            members: {\n                              attachTime: {\n                                type: 'timestamp'\n                              },\n                              deleteOnTermination: {\n                                type: 'boolean'\n                              },\n                              status: {},\n                              volumeId: {}\n                            }\n                          }\n                        }\n                      }\n                    },\n                    cpuOptions: {\n                      type: 'structure',\n                      members: {\n                        coreCount: {\n                          type: 'integer'\n                        },\n                        threadsPerCore: {\n                          type: 'integer'\n                        }\n                      }\n                    },\n                    createdAt: {\n                      type: 'timestamp'\n                    },\n                    imageId: {},\n                    instanceId: {},\n                    instanceType: {},\n                    privateIpAddress: {},\n                    publicIpAddress: {},\n                    rootDeviceName: {},\n                    securityGroups: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          groupId: {},\n                          groupName: {}\n                        }\n                      }\n                    },\n                    state: {\n                      type: 'structure',\n                      members: {\n                        code: {\n                          type: 'integer'\n                        },\n                        name: {}\n                      }\n                    },\n                    updatedAt: {\n                      type: 'timestamp'\n                    }\n                  }\n                },\n                lastUpdatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeExecution: {\n      http: {\n        requestUri: '/task/{taskId}/execution/{managedDeviceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'managedDeviceId',\n          'taskId'\n        ],\n        members: {\n          managedDeviceId: {\n            location: 'uri',\n            locationName: 'managedDeviceId'\n          },\n          taskId: {\n            location: 'uri',\n            locationName: 'taskId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          executionId: {},\n          lastUpdatedAt: {\n            type: 'timestamp'\n          },\n          managedDeviceId: {},\n          startedAt: {\n            type: 'timestamp'\n          },\n          state: {},\n          taskId: {}\n        }\n      }\n    },\n    DescribeTask: {\n      http: {\n        requestUri: '/task/{taskId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'taskId'\n        ],\n        members: {\n          taskId: {\n            location: 'uri',\n            locationName: 'taskId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          completedAt: {\n            type: 'timestamp'\n          },\n          createdAt: {\n            type: 'timestamp'\n          },\n          description: {},\n          lastUpdatedAt: {\n            type: 'timestamp'\n          },\n          state: {},\n          tags: {\n            shape: 'Sb'\n          },\n          targets: {\n            shape: 'Sc'\n          },\n          taskArn: {},\n          taskId: {}\n        }\n      }\n    },\n    ListDeviceResources: {\n      http: {\n        method: 'GET',\n        requestUri: '/managed-device/{managedDeviceId}/resources',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'managedDeviceId'\n        ],\n        members: {\n          managedDeviceId: {\n            location: 'uri',\n            locationName: 'managedDeviceId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          type: {\n            location: 'querystring',\n            locationName: 'type'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          resources: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'resourceType'\n              ],\n              members: {\n                arn: {},\n                id: {},\n                resourceType: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListDevices: {\n      http: {\n        method: 'GET',\n        requestUri: '/managed-devices',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          jobId: {\n            location: 'querystring',\n            locationName: 'jobId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          devices: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                associatedWithJob: {},\n                managedDeviceArn: {},\n                managedDeviceId: {},\n                tags: {\n                  shape: 'Sb'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListExecutions: {\n      http: {\n        method: 'GET',\n        requestUri: '/executions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'taskId'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          state: {\n            location: 'querystring',\n            locationName: 'state'\n          },\n          taskId: {\n            location: 'querystring',\n            locationName: 'taskId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          executions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                executionId: {},\n                managedDeviceId: {},\n                state: {},\n                taskId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sb'\n          }\n        }\n      }\n    },\n    ListTasks: {\n      http: {\n        method: 'GET',\n        requestUri: '/tasks',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          state: {\n            location: 'querystring',\n            locationName: 'state'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          tasks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'taskId'\n              ],\n              members: {\n                state: {},\n                tags: {\n                  shape: 'Sb'\n                },\n                taskArn: {},\n                taskId: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sb'\n          }\n        }\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    Sb: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sc: {\n      type: 'list',\n      member: {}\n    }\n  }\n}"]}