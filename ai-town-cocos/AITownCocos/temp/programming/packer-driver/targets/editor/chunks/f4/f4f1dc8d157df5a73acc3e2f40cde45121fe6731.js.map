{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/rest.js"],"names":["rest","func","start","TypeError","FUNC_ERROR_TEXT","undefined","toInteger","baseRest"],"mappings":";;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,IAAT,CAAcC,IAAd,EAAoBC,KAApB,EAA2B;AACzB,QAAI,OAAOD,IAAP,IAAe,UAAnB,EAA+B;AAC7B,YAAM,IAAIE,SAAJ,CAAcC,eAAd,CAAN;AACD;;AACDF,IAAAA,KAAK,GAAGA,KAAK,KAAKG,SAAV,GAAsBH,KAAtB,GAA8BI,SAAS,CAACJ,KAAD,CAA/C;AACA,WAAOK,QAAQ,CAACN,IAAD,EAAOC,KAAP,CAAf;AACD;;;;AArCMK,MAAAA,Q;;AACAD,MAAAA,S;;;AAEP;AACIF,MAAAA,e,GAAkB,qB;;yBAmCPJ,I","sourcesContent":["import baseRest from './_baseRest.js';\nimport toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as\n * an array.\n *\n * **Note:** This method is based on the\n * [rest parameter](https://mdn.io/rest_parameters).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.rest(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction rest(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = start === undefined ? start : toInteger(start);\n  return baseRest(func, start);\n}\n\nexport default rest;\n"]}