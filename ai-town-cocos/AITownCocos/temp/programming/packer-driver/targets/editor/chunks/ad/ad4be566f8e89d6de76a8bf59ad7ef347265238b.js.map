{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/elasticloadbalancing-2012-06-01.waiters2.json"],"names":["version","waiters","InstanceDeregistered","delay","operation","maxAttempts","acceptors","expected","matcher","state","argument","AnyInstanceInService","InstanceInService"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,CADI;AAEbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,oBAAoB,EAAE;AACpBC,YAAAA,KAAK,EAAE,EADa;AAEpBC,YAAAA,SAAS,EAAE,wBAFS;AAGpBC,YAAAA,WAAW,EAAE,EAHO;AAIpBC,YAAAA,SAAS,EAAE,CACT;AACEC,cAAAA,QAAQ,EAAE,cADZ;AAEEC,cAAAA,OAAO,EAAE,SAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aADS,EAOT;AACEF,cAAAA,OAAO,EAAE,OADX;AAEED,cAAAA,QAAQ,EAAE,iBAFZ;AAGEE,cAAAA,KAAK,EAAE;AAHT,aAPS;AAJS,WADf;AAmBPE,UAAAA,oBAAoB,EAAE;AACpBL,YAAAA,SAAS,EAAE,CACT;AACEI,cAAAA,QAAQ,EAAE,wBADZ;AAEEH,cAAAA,QAAQ,EAAE,WAFZ;AAGEC,cAAAA,OAAO,EAAE,SAHX;AAIEC,cAAAA,KAAK,EAAE;AAJT,aADS,CADS;AASpBN,YAAAA,KAAK,EAAE,EATa;AAUpBE,YAAAA,WAAW,EAAE,EAVO;AAWpBD,YAAAA,SAAS,EAAE;AAXS,WAnBf;AAgCPQ,UAAAA,iBAAiB,EAAE;AACjBN,YAAAA,SAAS,EAAE,CACT;AACEI,cAAAA,QAAQ,EAAE,wBADZ;AAEEH,cAAAA,QAAQ,EAAE,WAFZ;AAGEC,cAAAA,OAAO,EAAE,SAHX;AAIEC,cAAAA,KAAK,EAAE;AAJT,aADS,EAOT;AACED,cAAAA,OAAO,EAAE,OADX;AAEED,cAAAA,QAAQ,EAAE,iBAFZ;AAGEE,cAAAA,KAAK,EAAE;AAHT,aAPS,CADM;AAcjBN,YAAAA,KAAK,EAAE,EAdU;AAejBE,YAAAA,WAAW,EAAE,EAfI;AAgBjBD,YAAAA,SAAS,EAAE;AAhBM;AAhCZ;AAFI,O","sourcesContent":["export default {\n  version: 2,\n  waiters: {\n    InstanceDeregistered: {\n      delay: 15,\n      operation: 'DescribeInstanceHealth',\n      maxAttempts: 40,\n      acceptors: [\n        {\n          expected: 'OutOfService',\n          matcher: 'pathAll',\n          state: 'success',\n          argument: 'InstanceStates[].State'\n        },\n        {\n          matcher: 'error',\n          expected: 'InvalidInstance',\n          state: 'success'\n        }\n      ]\n    },\n    AnyInstanceInService: {\n      acceptors: [\n        {\n          argument: 'InstanceStates[].State',\n          expected: 'InService',\n          matcher: 'pathAny',\n          state: 'success'\n        }\n      ],\n      delay: 15,\n      maxAttempts: 40,\n      operation: 'DescribeInstanceHealth'\n    },\n    InstanceInService: {\n      acceptors: [\n        {\n          argument: 'InstanceStates[].State',\n          expected: 'InService',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          matcher: 'error',\n          expected: 'InvalidInstance',\n          state: 'retry'\n        }\n      ],\n      delay: 15,\n      maxAttempts: 40,\n      operation: 'DescribeInstanceHealth'\n    }\n  }\n}"]}