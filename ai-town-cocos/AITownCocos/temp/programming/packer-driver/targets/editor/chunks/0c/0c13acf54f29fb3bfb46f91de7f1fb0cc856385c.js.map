{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_mapCacheSet.js"],"names":["mapCacheSet","key","value","data","getMapData","size","set"],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,WAAT,CAAqBC,GAArB,EAA0BC,KAA1B,EAAiC;AAC/B,QAAIC,IAAI,GAAGC,UAAU,CAAC,IAAD,EAAOH,GAAP,CAArB;AAAA,QACII,IAAI,GAAGF,IAAI,CAACE,IADhB;AAGAF,IAAAA,IAAI,CAACG,GAAL,CAASL,GAAT,EAAcC,KAAd;AACA,SAAKG,IAAL,IAAaF,IAAI,CAACE,IAAL,IAAaA,IAAb,GAAoB,CAApB,GAAwB,CAArC;AACA,WAAO,IAAP;AACD;;;;AAnBMD,MAAAA,U;;;yBAqBQJ,W","sourcesContent":["import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n"]}