{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/redshift-data-2019-12-20.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","BatchExecuteStatement","input","type","required","members","ClientToken","idempotencyToken","ClusterIdentifier","Database","DbUser","SecretArn","Sqls","member","StatementName","WithEvent","WorkgroupName","output","CreatedAt","Id","CancelStatement","Status","DescribeStatement","Duration","Error","HasResultSet","QueryParameters","shape","QueryString","RedshiftPid","RedshiftQueryId","ResultRows","ResultSize","SubStatements","UpdatedAt","DescribeTable","ConnectedDatabase","MaxResults","NextToken","Schema","Table","ColumnList","TableName","ExecuteStatement","Parameters","Sql","GetStatementResult","ColumnMetadata","Records","blobValue","booleanValue","doubleValue","isNull","longValue","stringValue","union","TotalNumRows","ListDatabases","Databases","ListSchemas","SchemaPattern","Schemas","ListStatements","RoleLevel","Statements","IsBatchStatement","QueryStrings","ListTables","TablePattern","Tables","name","schema","shapes","Sj","value","Sv","columnDefault","isCaseSensitive","isCurrency","isSigned","label","length","nullable","precision","scale","schemaName","tableName","typeName"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2019-12-20',\n    endpointPrefix: 'redshift-data',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceFullName: 'Redshift Data API Service',\n    serviceId: 'Redshift Data',\n    signatureVersion: 'v4',\n    signingName: 'redshift-data',\n    targetPrefix: 'RedshiftData',\n    uid: 'redshift-data-2019-12-20'\n  },\n  operations: {\n    BatchExecuteStatement: {\n      input: {\n        type: 'structure',\n        required: [\n          'Database',\n          'Sqls'\n        ],\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ClusterIdentifier: {},\n          Database: {},\n          DbUser: {},\n          SecretArn: {},\n          Sqls: {\n            type: 'list',\n            member: {}\n          },\n          StatementName: {},\n          WithEvent: {\n            type: 'boolean'\n          },\n          WorkgroupName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ClusterIdentifier: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          Database: {},\n          DbUser: {},\n          Id: {},\n          SecretArn: {},\n          WorkgroupName: {}\n        }\n      }\n    },\n    CancelStatement: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Status: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    DescribeStatement: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          ClusterIdentifier: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          Database: {},\n          DbUser: {},\n          Duration: {\n            type: 'long'\n          },\n          Error: {},\n          HasResultSet: {\n            type: 'boolean'\n          },\n          Id: {},\n          QueryParameters: {\n            shape: 'Sj'\n          },\n          QueryString: {},\n          RedshiftPid: {\n            type: 'long'\n          },\n          RedshiftQueryId: {\n            type: 'long'\n          },\n          ResultRows: {\n            type: 'long'\n          },\n          ResultSize: {\n            type: 'long'\n          },\n          SecretArn: {},\n          Status: {},\n          SubStatements: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Id'\n              ],\n              members: {\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                Duration: {\n                  type: 'long'\n                },\n                Error: {},\n                HasResultSet: {\n                  type: 'boolean'\n                },\n                Id: {},\n                QueryString: {},\n                RedshiftQueryId: {\n                  type: 'long'\n                },\n                ResultRows: {\n                  type: 'long'\n                },\n                ResultSize: {\n                  type: 'long'\n                },\n                Status: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          UpdatedAt: {\n            type: 'timestamp'\n          },\n          WorkgroupName: {}\n        }\n      }\n    },\n    DescribeTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'Database'\n        ],\n        members: {\n          ClusterIdentifier: {},\n          ConnectedDatabase: {},\n          Database: {},\n          DbUser: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          Schema: {},\n          SecretArn: {},\n          Table: {},\n          WorkgroupName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ColumnList: {\n            type: 'list',\n            member: {\n              shape: 'Sv'\n            }\n          },\n          NextToken: {},\n          TableName: {}\n        }\n      }\n    },\n    ExecuteStatement: {\n      input: {\n        type: 'structure',\n        required: [\n          'Database',\n          'Sql'\n        ],\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ClusterIdentifier: {},\n          Database: {},\n          DbUser: {},\n          Parameters: {\n            shape: 'Sj'\n          },\n          SecretArn: {},\n          Sql: {},\n          StatementName: {},\n          WithEvent: {\n            type: 'boolean'\n          },\n          WorkgroupName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ClusterIdentifier: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          Database: {},\n          DbUser: {},\n          Id: {},\n          SecretArn: {},\n          WorkgroupName: {}\n        }\n      }\n    },\n    GetStatementResult: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {},\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Records'\n        ],\n        members: {\n          ColumnMetadata: {\n            type: 'list',\n            member: {\n              shape: 'Sv'\n            }\n          },\n          NextToken: {},\n          Records: {\n            type: 'list',\n            member: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                members: {\n                  blobValue: {\n                    type: 'blob'\n                  },\n                  booleanValue: {\n                    type: 'boolean'\n                  },\n                  doubleValue: {\n                    type: 'double'\n                  },\n                  isNull: {\n                    type: 'boolean'\n                  },\n                  longValue: {\n                    type: 'long'\n                  },\n                  stringValue: {}\n                },\n                union: true\n              }\n            }\n          },\n          TotalNumRows: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    ListDatabases: {\n      input: {\n        type: 'structure',\n        required: [\n          'Database'\n        ],\n        members: {\n          ClusterIdentifier: {},\n          Database: {},\n          DbUser: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          SecretArn: {},\n          WorkgroupName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Databases: {\n            type: 'list',\n            member: {}\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListSchemas: {\n      input: {\n        type: 'structure',\n        required: [\n          'Database'\n        ],\n        members: {\n          ClusterIdentifier: {},\n          ConnectedDatabase: {},\n          Database: {},\n          DbUser: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          SchemaPattern: {},\n          SecretArn: {},\n          WorkgroupName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Schemas: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    ListStatements: {\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          RoleLevel: {\n            type: 'boolean'\n          },\n          StatementName: {},\n          Status: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Statements'\n        ],\n        members: {\n          NextToken: {},\n          Statements: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Id'\n              ],\n              members: {\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                Id: {},\n                IsBatchStatement: {\n                  type: 'boolean'\n                },\n                QueryParameters: {\n                  shape: 'Sj'\n                },\n                QueryString: {},\n                QueryStrings: {\n                  type: 'list',\n                  member: {}\n                },\n                SecretArn: {},\n                StatementName: {},\n                Status: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTables: {\n      input: {\n        type: 'structure',\n        required: [\n          'Database'\n        ],\n        members: {\n          ClusterIdentifier: {},\n          ConnectedDatabase: {},\n          Database: {},\n          DbUser: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          SchemaPattern: {},\n          SecretArn: {},\n          TablePattern: {},\n          WorkgroupName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Tables: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                schema: {},\n                type: {}\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    Sj: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name',\n          'value'\n        ],\n        members: {\n          name: {},\n          value: {}\n        }\n      }\n    },\n    Sv: {\n      type: 'structure',\n      members: {\n        columnDefault: {},\n        isCaseSensitive: {\n          type: 'boolean'\n        },\n        isCurrency: {\n          type: 'boolean'\n        },\n        isSigned: {\n          type: 'boolean'\n        },\n        label: {},\n        length: {\n          type: 'integer'\n        },\n        name: {},\n        nullable: {\n          type: 'integer'\n        },\n        precision: {\n          type: 'integer'\n        },\n        scale: {\n          type: 'integer'\n        },\n        schemaName: {},\n        tableName: {},\n        typeName: {}\n      }\n    }\n  }\n}"]}