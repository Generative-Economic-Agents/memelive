{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/ecc-jsbn/lib/ec.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","BigInteger","Barrett","prototype","ECFieldElementFp","q","x","feFpEquals","other","equals","feFpToBigInteger","feFpNegate","negate","mod","feFpAdd","b","add","toBigInteger","feFpSubtract","subtract","feFpMultiply","multiply","feFpSquare","square","feFpDivide","modInverse","divide","ECPointFp","curve","y","z","ONE","zinv","pointFpGetX","r","reduce","fromBigInteger","pointFpGetY","pointFpEquals","isInfinity","u","v","ZERO","pointFpIsInfinity","pointFpNegate","pointFpAdd","twice","getInfinity","THREE","x1","y1","x2","y2","v2","v3","x1v2","zu2","x3","shiftLeft","y3","z3","pointFpTwice","signum","y1z1","y1sqz1","a","w","pointFpMultiply","k","e","h","neg","R","i","bitLength","hBit","testBit","eBit","pointFpMultiplyTwo","j","both","getX","getY","multiplyTwo","ECCurveFp","infinity","reducer","curveFpGetQ","curveFpGetA","curveFpGetB","curveFpEquals","curveFpGetInfinity","curveFpFromBigInteger","curveReduce","curveFpDecodePointHex","s","parseInt","substr","len","length","xHex","yHex","curveFpEncodePointHex","p","toString","oLen","getQ","getA","getB","encodePointHex","decodePointHex","yIsEven","undefined","alpha","beta","sqrt","betaValue","encodeCompressedPointHex","yPrefix","isEven","getR","firstWord","shiftRight","intValue","modMult","modReduce","qLen","compareTo","modPow","qMinusOne","legendreExponent","Q","fourQ","modDouble","U","V","P","SecureRandom","result","lucasSequence","n","getLowestSetBit","Uh","Vl","TWO","Vh","Ql","Qh","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,SAAhBC,Y;;;8BAEHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;AACA;AACA;AAEA;AACA,YAAIC,UAAU,GAAGJ,OAAO,CAAC,MAAD,CAAP,CAAgBI,UAAjC;;AACA,YAAIC,OAAO,GAAGD,UAAU,CAACE,SAAX,CAAqBD,OAAnC,CAV0F,CAY1F;AACA;AAEA;;AACA,iBAASE,gBAAT,CAA0BC,CAA1B,EAA4BC,CAA5B,EAA+B;AAC3B,eAAKA,CAAL,GAASA,CAAT,CAD2B,CAE3B;;AACA,eAAKD,CAAL,GAASA,CAAT;AACH;;AAED,iBAASE,UAAT,CAAoBC,KAApB,EAA2B;AACvB,cAAGA,KAAK,IAAI,IAAZ,EAAkB,OAAO,IAAP;AAClB,iBAAQ,KAAKH,CAAL,CAAOI,MAAP,CAAcD,KAAK,CAACH,CAApB,KAA0B,KAAKC,CAAL,CAAOG,MAAP,CAAcD,KAAK,CAACF,CAApB,CAAlC;AACH;;AAED,iBAASI,gBAAT,GAA4B;AACxB,iBAAO,KAAKJ,CAAZ;AACH;;AAED,iBAASK,UAAT,GAAsB;AAClB,iBAAO,IAAIP,gBAAJ,CAAqB,KAAKC,CAA1B,EAA6B,KAAKC,CAAL,CAAOM,MAAP,GAAgBC,GAAhB,CAAoB,KAAKR,CAAzB,CAA7B,CAAP;AACH;;AAED,iBAASS,OAAT,CAAiBC,CAAjB,EAAoB;AAChB,iBAAO,IAAIX,gBAAJ,CAAqB,KAAKC,CAA1B,EAA6B,KAAKC,CAAL,CAAOU,GAAP,CAAWD,CAAC,CAACE,YAAF,EAAX,EAA6BJ,GAA7B,CAAiC,KAAKR,CAAtC,CAA7B,CAAP;AACH;;AAED,iBAASa,YAAT,CAAsBH,CAAtB,EAAyB;AACrB,iBAAO,IAAIX,gBAAJ,CAAqB,KAAKC,CAA1B,EAA6B,KAAKC,CAAL,CAAOa,QAAP,CAAgBJ,CAAC,CAACE,YAAF,EAAhB,EAAkCJ,GAAlC,CAAsC,KAAKR,CAA3C,CAA7B,CAAP;AACH;;AAED,iBAASe,YAAT,CAAsBL,CAAtB,EAAyB;AACrB,iBAAO,IAAIX,gBAAJ,CAAqB,KAAKC,CAA1B,EAA6B,KAAKC,CAAL,CAAOe,QAAP,CAAgBN,CAAC,CAACE,YAAF,EAAhB,EAAkCJ,GAAlC,CAAsC,KAAKR,CAA3C,CAA7B,CAAP;AACH;;AAED,iBAASiB,UAAT,GAAsB;AAClB,iBAAO,IAAIlB,gBAAJ,CAAqB,KAAKC,CAA1B,EAA6B,KAAKC,CAAL,CAAOiB,MAAP,GAAgBV,GAAhB,CAAoB,KAAKR,CAAzB,CAA7B,CAAP;AACH;;AAED,iBAASmB,UAAT,CAAoBT,CAApB,EAAuB;AACnB,iBAAO,IAAIX,gBAAJ,CAAqB,KAAKC,CAA1B,EAA6B,KAAKC,CAAL,CAAOe,QAAP,CAAgBN,CAAC,CAACE,YAAF,GAAiBQ,UAAjB,CAA4B,KAAKpB,CAAjC,CAAhB,EAAqDQ,GAArD,CAAyD,KAAKR,CAA9D,CAA7B,CAAP;AACH;;AAEDD,QAAAA,gBAAgB,CAACD,SAAjB,CAA2BM,MAA3B,GAAoCF,UAApC;AACAH,QAAAA,gBAAgB,CAACD,SAAjB,CAA2Bc,YAA3B,GAA0CP,gBAA1C;AACAN,QAAAA,gBAAgB,CAACD,SAAjB,CAA2BS,MAA3B,GAAoCD,UAApC;AACAP,QAAAA,gBAAgB,CAACD,SAAjB,CAA2Ba,GAA3B,GAAiCF,OAAjC;AACAV,QAAAA,gBAAgB,CAACD,SAAjB,CAA2BgB,QAA3B,GAAsCD,YAAtC;AACAd,QAAAA,gBAAgB,CAACD,SAAjB,CAA2BkB,QAA3B,GAAsCD,YAAtC;AACAhB,QAAAA,gBAAgB,CAACD,SAAjB,CAA2BoB,MAA3B,GAAoCD,UAApC;AACAlB,QAAAA,gBAAgB,CAACD,SAAjB,CAA2BuB,MAA3B,GAAoCF,UAApC,CA9D0F,CAgE1F;AACA;AAEA;;AACA,iBAASG,SAAT,CAAmBC,KAAnB,EAAyBtB,CAAzB,EAA2BuB,CAA3B,EAA6BC,CAA7B,EAAgC;AAC5B,eAAKF,KAAL,GAAaA,KAAb;AACA,eAAKtB,CAAL,GAASA,CAAT;AACA,eAAKuB,CAAL,GAASA,CAAT,CAH4B,CAI5B;AACA;;AACA,cAAGC,CAAC,IAAI,IAAR,EAAc;AACZ,iBAAKA,CAAL,GAAS7B,UAAU,CAAC8B,GAApB;AACD,WAFD,MAGK;AACH,iBAAKD,CAAL,GAASA,CAAT;AACD;;AACD,eAAKE,IAAL,GAAY,IAAZ,CAZ4B,CAa5B;AACH;;AAED,iBAASC,WAAT,GAAuB;AACnB,cAAG,KAAKD,IAAL,IAAa,IAAhB,EAAsB;AACpB,iBAAKA,IAAL,GAAY,KAAKF,CAAL,CAAOL,UAAP,CAAkB,KAAKG,KAAL,CAAWvB,CAA7B,CAAZ;AACD;;AACD,cAAI6B,CAAC,GAAG,KAAK5B,CAAL,CAAOW,YAAP,GAAsBI,QAAtB,CAA+B,KAAKW,IAApC,CAAR;AACA,eAAKJ,KAAL,CAAWO,MAAX,CAAkBD,CAAlB;AACA,iBAAO,KAAKN,KAAL,CAAWQ,cAAX,CAA0BF,CAA1B,CAAP;AACH;;AAED,iBAASG,WAAT,GAAuB;AACnB,cAAG,KAAKL,IAAL,IAAa,IAAhB,EAAsB;AACpB,iBAAKA,IAAL,GAAY,KAAKF,CAAL,CAAOL,UAAP,CAAkB,KAAKG,KAAL,CAAWvB,CAA7B,CAAZ;AACD;;AACD,cAAI6B,CAAC,GAAG,KAAKL,CAAL,CAAOZ,YAAP,GAAsBI,QAAtB,CAA+B,KAAKW,IAApC,CAAR;AACA,eAAKJ,KAAL,CAAWO,MAAX,CAAkBD,CAAlB;AACA,iBAAO,KAAKN,KAAL,CAAWQ,cAAX,CAA0BF,CAA1B,CAAP;AACH;;AAED,iBAASI,aAAT,CAAuB9B,KAAvB,EAA8B;AAC1B,cAAGA,KAAK,IAAI,IAAZ,EAAkB,OAAO,IAAP;AAClB,cAAG,KAAK+B,UAAL,EAAH,EAAsB,OAAO/B,KAAK,CAAC+B,UAAN,EAAP;AACtB,cAAG/B,KAAK,CAAC+B,UAAN,EAAH,EAAuB,OAAO,KAAKA,UAAL,EAAP;AACvB,cAAIC,CAAJ,EAAOC,CAAP,CAJ0B,CAK1B;;AACAD,UAAAA,CAAC,GAAGhC,KAAK,CAACqB,CAAN,CAAQZ,YAAR,GAAuBI,QAAvB,CAAgC,KAAKS,CAArC,EAAwCX,QAAxC,CAAiD,KAAKU,CAAL,CAAOZ,YAAP,GAAsBI,QAAtB,CAA+Bb,KAAK,CAACsB,CAArC,CAAjD,EAA0FjB,GAA1F,CAA8F,KAAKe,KAAL,CAAWvB,CAAzG,CAAJ;AACA,cAAG,CAACmC,CAAC,CAAC/B,MAAF,CAASR,UAAU,CAACyC,IAApB,CAAJ,EAA+B,OAAO,KAAP,CAPL,CAQ1B;;AACAD,UAAAA,CAAC,GAAGjC,KAAK,CAACF,CAAN,CAAQW,YAAR,GAAuBI,QAAvB,CAAgC,KAAKS,CAArC,EAAwCX,QAAxC,CAAiD,KAAKb,CAAL,CAAOW,YAAP,GAAsBI,QAAtB,CAA+Bb,KAAK,CAACsB,CAArC,CAAjD,EAA0FjB,GAA1F,CAA8F,KAAKe,KAAL,CAAWvB,CAAzG,CAAJ;AACA,iBAAOoC,CAAC,CAAChC,MAAF,CAASR,UAAU,CAACyC,IAApB,CAAP;AACH;;AAED,iBAASC,iBAAT,GAA6B;AACzB,cAAI,KAAKrC,CAAL,IAAU,IAAX,IAAqB,KAAKuB,CAAL,IAAU,IAAlC,EAAyC,OAAO,IAAP;AACzC,iBAAO,KAAKC,CAAL,CAAOrB,MAAP,CAAcR,UAAU,CAACyC,IAAzB,KAAkC,CAAC,KAAKb,CAAL,CAAOZ,YAAP,GAAsBR,MAAtB,CAA6BR,UAAU,CAACyC,IAAxC,CAA1C;AACH;;AAED,iBAASE,aAAT,GAAyB;AACrB,iBAAO,IAAIjB,SAAJ,CAAc,KAAKC,KAAnB,EAA0B,KAAKtB,CAA/B,EAAkC,KAAKuB,CAAL,CAAOjB,MAAP,EAAlC,EAAmD,KAAKkB,CAAxD,CAAP;AACH;;AAED,iBAASe,UAAT,CAAoB9B,CAApB,EAAuB;AACnB,cAAG,KAAKwB,UAAL,EAAH,EAAsB,OAAOxB,CAAP;AACtB,cAAGA,CAAC,CAACwB,UAAF,EAAH,EAAmB,OAAO,IAAP,CAFA,CAInB;;AACA,cAAIC,CAAC,GAAGzB,CAAC,CAACc,CAAF,CAAIZ,YAAJ,GAAmBI,QAAnB,CAA4B,KAAKS,CAAjC,EAAoCX,QAApC,CAA6C,KAAKU,CAAL,CAAOZ,YAAP,GAAsBI,QAAtB,CAA+BN,CAAC,CAACe,CAAjC,CAA7C,EAAkFjB,GAAlF,CAAsF,KAAKe,KAAL,CAAWvB,CAAjG,CAAR,CALmB,CAMnB;;AACA,cAAIoC,CAAC,GAAG1B,CAAC,CAACT,CAAF,CAAIW,YAAJ,GAAmBI,QAAnB,CAA4B,KAAKS,CAAjC,EAAoCX,QAApC,CAA6C,KAAKb,CAAL,CAAOW,YAAP,GAAsBI,QAAtB,CAA+BN,CAAC,CAACe,CAAjC,CAA7C,EAAkFjB,GAAlF,CAAsF,KAAKe,KAAL,CAAWvB,CAAjG,CAAR;;AAEA,cAAGJ,UAAU,CAACyC,IAAX,CAAgBjC,MAAhB,CAAuBgC,CAAvB,CAAH,EAA8B;AAC1B,gBAAGxC,UAAU,CAACyC,IAAX,CAAgBjC,MAAhB,CAAuB+B,CAAvB,CAAH,EAA8B;AAC1B,qBAAO,KAAKM,KAAL,EAAP,CAD0B,CACL;AACxB;;AACR,mBAAO,KAAKlB,KAAL,CAAWmB,WAAX,EAAP,CAJiC,CAIA;AAC7B;;AAED,cAAIC,KAAK,GAAG,IAAI/C,UAAJ,CAAe,GAAf,CAAZ;AACA,cAAIgD,EAAE,GAAG,KAAK3C,CAAL,CAAOW,YAAP,EAAT;AACA,cAAIiC,EAAE,GAAG,KAAKrB,CAAL,CAAOZ,YAAP,EAAT;AACA,cAAIkC,EAAE,GAAGpC,CAAC,CAACT,CAAF,CAAIW,YAAJ,EAAT;AACA,cAAImC,EAAE,GAAGrC,CAAC,CAACc,CAAF,CAAIZ,YAAJ,EAAT;AAEA,cAAIoC,EAAE,GAAGZ,CAAC,CAAClB,MAAF,EAAT;AACA,cAAI+B,EAAE,GAAGD,EAAE,CAAChC,QAAH,CAAYoB,CAAZ,CAAT;AACA,cAAIc,IAAI,GAAGN,EAAE,CAAC5B,QAAH,CAAYgC,EAAZ,CAAX;AACA,cAAIG,GAAG,GAAGhB,CAAC,CAACjB,MAAF,GAAWF,QAAX,CAAoB,KAAKS,CAAzB,CAAV,CAzBmB,CA2BnB;;AACA,cAAI2B,EAAE,GAAGD,GAAG,CAACrC,QAAJ,CAAaoC,IAAI,CAACG,SAAL,CAAe,CAAf,CAAb,EAAgCrC,QAAhC,CAAyCN,CAAC,CAACe,CAA3C,EAA8CX,QAA9C,CAAuDmC,EAAvD,EAA2DjC,QAA3D,CAAoEoB,CAApE,EAAuE5B,GAAvE,CAA2E,KAAKe,KAAL,CAAWvB,CAAtF,CAAT,CA5BmB,CA6BnB;;AACA,cAAIsD,EAAE,GAAGJ,IAAI,CAAClC,QAAL,CAAc2B,KAAd,EAAqB3B,QAArB,CAA8BmB,CAA9B,EAAiCrB,QAAjC,CAA0C+B,EAAE,CAAC7B,QAAH,CAAYiC,EAAZ,CAA1C,EAA2DnC,QAA3D,CAAoEqC,GAAG,CAACnC,QAAJ,CAAamB,CAAb,CAApE,EAAqFnB,QAArF,CAA8FN,CAAC,CAACe,CAAhG,EAAmGd,GAAnG,CAAuGwB,CAAC,CAACnB,QAAF,CAAWiC,EAAX,CAAvG,EAAuHzC,GAAvH,CAA2H,KAAKe,KAAL,CAAWvB,CAAtI,CAAT,CA9BmB,CA+BnB;;AACA,cAAIuD,EAAE,GAAGN,EAAE,CAACjC,QAAH,CAAY,KAAKS,CAAjB,EAAoBT,QAApB,CAA6BN,CAAC,CAACe,CAA/B,EAAkCjB,GAAlC,CAAsC,KAAKe,KAAL,CAAWvB,CAAjD,CAAT;AAEA,iBAAO,IAAIsB,SAAJ,CAAc,KAAKC,KAAnB,EAA0B,KAAKA,KAAL,CAAWQ,cAAX,CAA0BqB,EAA1B,CAA1B,EAAyD,KAAK7B,KAAL,CAAWQ,cAAX,CAA0BuB,EAA1B,CAAzD,EAAwFC,EAAxF,CAAP;AACH;;AAED,iBAASC,YAAT,GAAwB;AACpB,cAAG,KAAKtB,UAAL,EAAH,EAAsB,OAAO,IAAP;AACtB,cAAG,KAAKV,CAAL,CAAOZ,YAAP,GAAsB6C,MAAtB,MAAkC,CAArC,EAAwC,OAAO,KAAKlC,KAAL,CAAWmB,WAAX,EAAP,CAFpB,CAIpB;;AACA,cAAIC,KAAK,GAAG,IAAI/C,UAAJ,CAAe,GAAf,CAAZ;AACA,cAAIgD,EAAE,GAAG,KAAK3C,CAAL,CAAOW,YAAP,EAAT;AACA,cAAIiC,EAAE,GAAG,KAAKrB,CAAL,CAAOZ,YAAP,EAAT;AAEA,cAAI8C,IAAI,GAAGb,EAAE,CAAC7B,QAAH,CAAY,KAAKS,CAAjB,CAAX;AACA,cAAIkC,MAAM,GAAGD,IAAI,CAAC1C,QAAL,CAAc6B,EAAd,EAAkBrC,GAAlB,CAAsB,KAAKe,KAAL,CAAWvB,CAAjC,CAAb;AACA,cAAI4D,CAAC,GAAG,KAAKrC,KAAL,CAAWqC,CAAX,CAAahD,YAAb,EAAR,CAXoB,CAapB;;AACA,cAAIiD,CAAC,GAAGjB,EAAE,CAAC1B,MAAH,GAAYF,QAAZ,CAAqB2B,KAArB,CAAR;;AACA,cAAG,CAAC/C,UAAU,CAACyC,IAAX,CAAgBjC,MAAhB,CAAuBwD,CAAvB,CAAJ,EAA+B;AAC7BC,YAAAA,CAAC,GAAGA,CAAC,CAAClD,GAAF,CAAM,KAAKc,CAAL,CAAOP,MAAP,GAAgBF,QAAhB,CAAyB4C,CAAzB,CAAN,CAAJ;AACD;;AACDC,UAAAA,CAAC,GAAGA,CAAC,CAACrD,GAAF,CAAM,KAAKe,KAAL,CAAWvB,CAAjB,CAAJ,CAlBoB,CAmBpB;AACA;;AACA,cAAIoD,EAAE,GAAGS,CAAC,CAAC3C,MAAF,GAAWJ,QAAX,CAAoB8B,EAAE,CAACS,SAAH,CAAa,CAAb,EAAgBrC,QAAhB,CAAyB2C,MAAzB,CAApB,EAAsDN,SAAtD,CAAgE,CAAhE,EAAmErC,QAAnE,CAA4E0C,IAA5E,EAAkFlD,GAAlF,CAAsF,KAAKe,KAAL,CAAWvB,CAAjG,CAAT,CArBoB,CAsBpB;;AACA,cAAIsD,EAAE,GAAGO,CAAC,CAAC7C,QAAF,CAAW2B,KAAX,EAAkB3B,QAAlB,CAA2B4B,EAA3B,EAA+B9B,QAA/B,CAAwC6C,MAAM,CAACN,SAAP,CAAiB,CAAjB,CAAxC,EAA6DA,SAA7D,CAAuE,CAAvE,EAA0ErC,QAA1E,CAAmF2C,MAAnF,EAA2F7C,QAA3F,CAAoG+C,CAAC,CAAC3C,MAAF,GAAWF,QAAX,CAAoB6C,CAApB,CAApG,EAA4HrD,GAA5H,CAAgI,KAAKe,KAAL,CAAWvB,CAA3I,CAAT,CAvBoB,CAwBpB;;AACA,cAAIuD,EAAE,GAAGG,IAAI,CAACxC,MAAL,GAAcF,QAAd,CAAuB0C,IAAvB,EAA6BL,SAA7B,CAAuC,CAAvC,EAA0C7C,GAA1C,CAA8C,KAAKe,KAAL,CAAWvB,CAAzD,CAAT;AAEA,iBAAO,IAAIsB,SAAJ,CAAc,KAAKC,KAAnB,EAA0B,KAAKA,KAAL,CAAWQ,cAAX,CAA0BqB,EAA1B,CAA1B,EAAyD,KAAK7B,KAAL,CAAWQ,cAAX,CAA0BuB,EAA1B,CAAzD,EAAwFC,EAAxF,CAAP;AACH,SA7LyF,CA+L1F;AACA;;;AACA,iBAASO,eAAT,CAAyBC,CAAzB,EAA4B;AACxB,cAAG,KAAK7B,UAAL,EAAH,EAAsB,OAAO,IAAP;AACtB,cAAG6B,CAAC,CAACN,MAAF,MAAc,CAAjB,EAAoB,OAAO,KAAKlC,KAAL,CAAWmB,WAAX,EAAP;AAEpB,cAAIsB,CAAC,GAAGD,CAAR;AACA,cAAIE,CAAC,GAAGD,CAAC,CAAChD,QAAF,CAAW,IAAIpB,UAAJ,CAAe,GAAf,CAAX,CAAR;AAEA,cAAIsE,GAAG,GAAG,KAAK3D,MAAL,EAAV;AACA,cAAI4D,CAAC,GAAG,IAAR;AAEA,cAAIC,CAAJ;;AACA,eAAIA,CAAC,GAAGH,CAAC,CAACI,SAAF,KAAgB,CAAxB,EAA2BD,CAAC,GAAG,CAA/B,EAAkC,EAAEA,CAApC,EAAuC;AAC1CD,YAAAA,CAAC,GAAGA,CAAC,CAAC1B,KAAF,EAAJ;AAEA,gBAAI6B,IAAI,GAAGL,CAAC,CAACM,OAAF,CAAUH,CAAV,CAAX;AACA,gBAAII,IAAI,GAAGR,CAAC,CAACO,OAAF,CAAUH,CAAV,CAAX;;AAEA,gBAAIE,IAAI,IAAIE,IAAZ,EAAkB;AACdL,cAAAA,CAAC,GAAGA,CAAC,CAACxD,GAAF,CAAM2D,IAAI,GAAG,IAAH,GAAUJ,GAApB,CAAJ;AACH;AACG;;AAED,iBAAOC,CAAP;AACH,SAxNyF,CA0N1F;;;AACA,iBAASM,kBAAT,CAA4BC,CAA5B,EAA8BzE,CAA9B,EAAgC8D,CAAhC,EAAmC;AACjC,cAAIK,CAAJ;AACA,cAAGM,CAAC,CAACL,SAAF,KAAgBN,CAAC,CAACM,SAAF,EAAnB,EACED,CAAC,GAAGM,CAAC,CAACL,SAAF,KAAgB,CAApB,CADF,KAGED,CAAC,GAAGL,CAAC,CAACM,SAAF,KAAgB,CAApB;AAEF,cAAIF,CAAC,GAAG,KAAK5C,KAAL,CAAWmB,WAAX,EAAR;AACA,cAAIiC,IAAI,GAAG,KAAKhE,GAAL,CAASV,CAAT,CAAX;;AACA,iBAAMmE,CAAC,IAAI,CAAX,EAAc;AACZD,YAAAA,CAAC,GAAGA,CAAC,CAAC1B,KAAF,EAAJ;;AACA,gBAAGiC,CAAC,CAACH,OAAF,CAAUH,CAAV,CAAH,EAAiB;AACf,kBAAGL,CAAC,CAACQ,OAAF,CAAUH,CAAV,CAAH,EAAiB;AACfD,gBAAAA,CAAC,GAAGA,CAAC,CAACxD,GAAF,CAAMgE,IAAN,CAAJ;AACD,eAFD,MAGK;AACHR,gBAAAA,CAAC,GAAGA,CAAC,CAACxD,GAAF,CAAM,IAAN,CAAJ;AACD;AACF,aAPD,MAQK;AACH,kBAAGoD,CAAC,CAACQ,OAAF,CAAUH,CAAV,CAAH,EAAiB;AACfD,gBAAAA,CAAC,GAAGA,CAAC,CAACxD,GAAF,CAAMV,CAAN,CAAJ;AACD;AACF;;AACD,cAAEmE,CAAF;AACD;;AAED,iBAAOD,CAAP;AACD;;AAED7C,QAAAA,SAAS,CAACxB,SAAV,CAAoB8E,IAApB,GAA2BhD,WAA3B;AACAN,QAAAA,SAAS,CAACxB,SAAV,CAAoB+E,IAApB,GAA2B7C,WAA3B;AACAV,QAAAA,SAAS,CAACxB,SAAV,CAAoBM,MAApB,GAA6B6B,aAA7B;AACAX,QAAAA,SAAS,CAACxB,SAAV,CAAoBoC,UAApB,GAAiCI,iBAAjC;AACAhB,QAAAA,SAAS,CAACxB,SAAV,CAAoBS,MAApB,GAA6BgC,aAA7B;AACAjB,QAAAA,SAAS,CAACxB,SAAV,CAAoBa,GAApB,GAA0B6B,UAA1B;AACAlB,QAAAA,SAAS,CAACxB,SAAV,CAAoB2C,KAApB,GAA4Be,YAA5B;AACAlC,QAAAA,SAAS,CAACxB,SAAV,CAAoBkB,QAApB,GAA+B8C,eAA/B;AACAxC,QAAAA,SAAS,CAACxB,SAAV,CAAoBgF,WAApB,GAAkCL,kBAAlC,CAjQ0F,CAmQ1F;AACA;AAEA;;AACA,iBAASM,SAAT,CAAmB/E,CAAnB,EAAqB4D,CAArB,EAAuBlD,CAAvB,EAA0B;AACtB,eAAKV,CAAL,GAASA,CAAT;AACA,eAAK4D,CAAL,GAAS,KAAK7B,cAAL,CAAoB6B,CAApB,CAAT;AACA,eAAKlD,CAAL,GAAS,KAAKqB,cAAL,CAAoBrB,CAApB,CAAT;AACA,eAAKsE,QAAL,GAAgB,IAAI1D,SAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,CAAhB;AACA,eAAK2D,OAAL,GAAe,IAAIpF,OAAJ,CAAY,KAAKG,CAAjB,CAAf;AACH;;AAED,iBAASkF,WAAT,GAAuB;AACnB,iBAAO,KAAKlF,CAAZ;AACH;;AAED,iBAASmF,WAAT,GAAuB;AACnB,iBAAO,KAAKvB,CAAZ;AACH;;AAED,iBAASwB,WAAT,GAAuB;AACnB,iBAAO,KAAK1E,CAAZ;AACH;;AAED,iBAAS2E,aAAT,CAAuBlF,KAAvB,EAA8B;AAC1B,cAAGA,KAAK,IAAI,IAAZ,EAAkB,OAAO,IAAP;AAClB,iBAAO,KAAKH,CAAL,CAAOI,MAAP,CAAcD,KAAK,CAACH,CAApB,KAA0B,KAAK4D,CAAL,CAAOxD,MAAP,CAAcD,KAAK,CAACyD,CAApB,CAA1B,IAAoD,KAAKlD,CAAL,CAAON,MAAP,CAAcD,KAAK,CAACO,CAApB,CAA3D;AACH;;AAED,iBAAS4E,kBAAT,GAA8B;AAC1B,iBAAO,KAAKN,QAAZ;AACH;;AAED,iBAASO,qBAAT,CAA+BtF,CAA/B,EAAkC;AAC9B,iBAAO,IAAIF,gBAAJ,CAAqB,KAAKC,CAA1B,EAA6BC,CAA7B,CAAP;AACH;;AAED,iBAASuF,WAAT,CAAqBvF,CAArB,EAAwB;AACpB,eAAKgF,OAAL,CAAanD,MAAb,CAAoB7B,CAApB;AACH,SA1SyF,CA4S1F;;;AACA,iBAASwF,qBAAT,CAA+BC,CAA/B,EAAkC;AAC9B,kBAAOC,QAAQ,CAACD,CAAC,CAACE,MAAF,CAAS,CAAT,EAAW,CAAX,CAAD,EAAgB,EAAhB,CAAf;AAAsC;AACtC,iBAAK,CAAL;AACH,qBAAO,KAAKZ,QAAZ;;AACG,iBAAK,CAAL;AACA,iBAAK,CAAL;AACH;AACA,qBAAO,IAAP;;AACG,iBAAK,CAAL;AACA,iBAAK,CAAL;AACA,iBAAK,CAAL;AACH,kBAAIa,GAAG,GAAG,CAACH,CAAC,CAACI,MAAF,GAAW,CAAZ,IAAiB,CAA3B;AACA,kBAAIC,IAAI,GAAGL,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,GAAZ,CAAX;AACA,kBAAIG,IAAI,GAAGN,CAAC,CAACE,MAAF,CAASC,GAAG,GAAC,CAAb,EAAgBA,GAAhB,CAAX;AAEA,qBAAO,IAAIvE,SAAJ,CAAc,IAAd,EACA,KAAKS,cAAL,CAAoB,IAAInC,UAAJ,CAAemG,IAAf,EAAqB,EAArB,CAApB,CADA,EAEA,KAAKhE,cAAL,CAAoB,IAAInC,UAAJ,CAAeoG,IAAf,EAAqB,EAArB,CAApB,CAFA,CAAP;;AAIG;AAAS;AACZ,qBAAO,IAAP;AAnBG;AAqBH;;AAED,iBAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AACjC,cAAIA,CAAC,CAAChE,UAAF,EAAJ,EAAoB,OAAO,IAAP;AACpB,cAAI6D,IAAI,GAAGG,CAAC,CAACtB,IAAF,GAAShE,YAAT,GAAwBuF,QAAxB,CAAiC,EAAjC,CAAX;AACA,cAAIH,IAAI,GAAGE,CAAC,CAACrB,IAAF,GAASjE,YAAT,GAAwBuF,QAAxB,CAAiC,EAAjC,CAAX;AACA,cAAIC,IAAI,GAAG,KAAKC,IAAL,GAAYF,QAAZ,CAAqB,EAArB,EAAyBL,MAApC;AACA,cAAKM,IAAI,GAAG,CAAR,IAAc,CAAlB,EAAqBA,IAAI;;AACzB,iBAAOL,IAAI,CAACD,MAAL,GAAcM,IAArB,EAA2B;AAC1BL,YAAAA,IAAI,GAAG,MAAMA,IAAb;AACA;;AACD,iBAAOC,IAAI,CAACF,MAAL,GAAcM,IAArB,EAA2B;AAC1BJ,YAAAA,IAAI,GAAG,MAAMA,IAAb;AACA;;AACD,iBAAO,OAAOD,IAAP,GAAcC,IAArB;AACA;;AAEDjB,QAAAA,SAAS,CAACjF,SAAV,CAAoBuG,IAApB,GAA2BnB,WAA3B;AACAH,QAAAA,SAAS,CAACjF,SAAV,CAAoBwG,IAApB,GAA2BnB,WAA3B;AACAJ,QAAAA,SAAS,CAACjF,SAAV,CAAoByG,IAApB,GAA2BnB,WAA3B;AACAL,QAAAA,SAAS,CAACjF,SAAV,CAAoBM,MAApB,GAA6BiF,aAA7B;AACAN,QAAAA,SAAS,CAACjF,SAAV,CAAoB4C,WAApB,GAAkC4C,kBAAlC;AACAP,QAAAA,SAAS,CAACjF,SAAV,CAAoBiC,cAApB,GAAqCwD,qBAArC;AACAR,QAAAA,SAAS,CAACjF,SAAV,CAAoBgC,MAApB,GAA6B0D,WAA7B,CA1V0F,CA2V1F;;AACAT,QAAAA,SAAS,CAACjF,SAAV,CAAoB0G,cAApB,GAAqCP,qBAArC,CA5V0F,CA8V1F;;AACAlB,QAAAA,SAAS,CAACjF,SAAV,CAAoB2G,cAApB,GAAqC,UAASf,CAAT,EACrC;AACC,cAAIgB,OAAJ;;AACG,kBAAOf,QAAQ,CAACD,CAAC,CAACE,MAAF,CAAS,CAAT,EAAW,CAAX,CAAD,EAAgB,EAAhB,CAAf;AAAsC;AACtC,iBAAK,CAAL;AACH,qBAAO,KAAKZ,QAAZ;;AACG,iBAAK,CAAL;AACH0B,cAAAA,OAAO,GAAG,KAAV;;AACG,iBAAK,CAAL;AACH,kBAAGA,OAAO,IAAIC,SAAd,EAAyBD,OAAO,GAAG,IAAV;AACzB,kBAAIb,GAAG,GAAGH,CAAC,CAACI,MAAF,GAAW,CAArB;AACA,kBAAIC,IAAI,GAAGL,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,GAAZ,CAAX;AACA,kBAAI5F,CAAC,GAAG,KAAK8B,cAAL,CAAoB,IAAInC,UAAJ,CAAemG,IAAf,EAAoB,EAApB,CAApB,CAAR;AACA,kBAAIa,KAAK,GAAG3G,CAAC,CAACe,QAAF,CAAWf,CAAC,CAACiB,MAAF,GAAWP,GAAX,CAAe,KAAK2F,IAAL,EAAf,CAAX,EAAwC3F,GAAxC,CAA4C,KAAK4F,IAAL,EAA5C,CAAZ;AACA,kBAAIM,IAAI,GAAGD,KAAK,CAACE,IAAN,EAAX;AAEG,kBAAID,IAAI,IAAI,IAAZ,EAAkB,MAAM,2BAAN;AAElB,kBAAIE,SAAS,GAAGF,IAAI,CAACjG,YAAL,EAAhB;;AACA,kBAAImG,SAAS,CAACxC,OAAV,CAAkB,CAAlB,KAAwBmC,OAA5B,EACA;AACI;AACAG,gBAAAA,IAAI,GAAG,KAAK9E,cAAL,CAAoB,KAAKsE,IAAL,GAAYvF,QAAZ,CAAqBiG,SAArB,CAApB,CAAP;AACH;;AACD,qBAAO,IAAIzF,SAAJ,CAAc,IAAd,EAAmBrB,CAAnB,EAAqB4G,IAArB,CAAP;;AACA,iBAAK,CAAL;AACA,iBAAK,CAAL;AACA,iBAAK,CAAL;AACH,kBAAIhB,GAAG,GAAG,CAACH,CAAC,CAACI,MAAF,GAAW,CAAZ,IAAiB,CAA3B;AACA,kBAAIC,IAAI,GAAGL,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,GAAZ,CAAX;AACA,kBAAIG,IAAI,GAAGN,CAAC,CAACE,MAAF,CAASC,GAAG,GAAC,CAAb,EAAgBA,GAAhB,CAAX;AAEA,qBAAO,IAAIvE,SAAJ,CAAc,IAAd,EACA,KAAKS,cAAL,CAAoB,IAAInC,UAAJ,CAAemG,IAAf,EAAqB,EAArB,CAApB,CADA,EAEA,KAAKhE,cAAL,CAAoB,IAAInC,UAAJ,CAAeoG,IAAf,EAAqB,EAArB,CAApB,CAFA,CAAP;;AAIG;AAAS;AACZ,qBAAO,IAAP;AAlCG;AAoCH,SAvCD;;AAwCAjB,QAAAA,SAAS,CAACjF,SAAV,CAAoBkH,wBAApB,GAA+C,UAASd,CAAT,EAC/C;AACC,cAAIA,CAAC,CAAChE,UAAF,EAAJ,EAAoB,OAAO,IAAP;AACpB,cAAI6D,IAAI,GAAGG,CAAC,CAACtB,IAAF,GAAShE,YAAT,GAAwBuF,QAAxB,CAAiC,EAAjC,CAAX;AACA,cAAIC,IAAI,GAAG,KAAKC,IAAL,GAAYF,QAAZ,CAAqB,EAArB,EAAyBL,MAApC;AACA,cAAKM,IAAI,GAAG,CAAR,IAAc,CAAlB,EAAqBA,IAAI;;AACzB,iBAAOL,IAAI,CAACD,MAAL,GAAcM,IAArB,EACCL,IAAI,GAAG,MAAMA,IAAb;;AACD,cAAIkB,OAAJ;AACA,cAAGf,CAAC,CAACrB,IAAF,GAASjE,YAAT,GAAwBsG,MAAxB,EAAH,EAAqCD,OAAO,GAAG,IAAV,CAArC,KACqCA,OAAO,GAAG,IAAV;AAErC,iBAAOA,OAAO,GAAGlB,IAAjB;AACA,SAbD;;AAgBAhG,QAAAA,gBAAgB,CAACD,SAAjB,CAA2BqH,IAA3B,GAAkC,YAClC;AACC,cAAG,KAAKtF,CAAL,IAAU8E,SAAb,EAAwB,OAAO,KAAK9E,CAAZ;AAErB,eAAKA,CAAL,GAAS,IAAT;AACA,cAAIwC,SAAS,GAAG,KAAKrE,CAAL,CAAOqE,SAAP,EAAhB;;AACA,cAAIA,SAAS,GAAG,GAAhB,EACA;AACI,gBAAI+C,SAAS,GAAG,KAAKpH,CAAL,CAAOqH,UAAP,CAAkBhD,SAAS,GAAG,EAA9B,CAAhB;;AACA,gBAAI+C,SAAS,CAACE,QAAV,MAAwB,CAAC,CAA7B,EACA;AACI,mBAAKzF,CAAL,GAASjC,UAAU,CAAC8B,GAAX,CAAe2B,SAAf,CAAyBgB,SAAzB,EAAoCvD,QAApC,CAA6C,KAAKd,CAAlD,CAAT;AACH;AACJ;;AACD,iBAAO,KAAK6B,CAAZ;AACH,SAfD;;AAgBA9B,QAAAA,gBAAgB,CAACD,SAAjB,CAA2ByH,OAA3B,GAAqC,UAAS3E,EAAT,EAAYE,EAAZ,EACrC;AACI,iBAAO,KAAK0E,SAAL,CAAe5E,EAAE,CAAC5B,QAAH,CAAY8B,EAAZ,CAAf,CAAP;AACH,SAHD;;AAIA/C,QAAAA,gBAAgB,CAACD,SAAjB,CAA2B0H,SAA3B,GAAuC,UAASvH,CAAT,EACvC;AACI,cAAI,KAAKkH,IAAL,MAAe,IAAnB,EACA;AACI,gBAAIM,IAAI,GAAGzH,CAAC,CAACqE,SAAF,EAAX;;AACA,mBAAOpE,CAAC,CAACoE,SAAF,KAAiBoD,IAAI,GAAG,CAA/B,EACA;AACI,kBAAItF,CAAC,GAAGlC,CAAC,CAACoH,UAAF,CAAaI,IAAb,CAAR;AACA,kBAAIrF,CAAC,GAAGnC,CAAC,CAACa,QAAF,CAAWqB,CAAC,CAACkB,SAAF,CAAYoE,IAAZ,CAAX,CAAR;;AACA,kBAAI,CAAC,KAAKN,IAAL,GAAY/G,MAAZ,CAAmBR,UAAU,CAAC8B,GAA9B,CAAL,EACA;AACIS,gBAAAA,CAAC,GAAGA,CAAC,CAACnB,QAAF,CAAW,KAAKmG,IAAL,EAAX,CAAJ;AACH;;AACDlH,cAAAA,CAAC,GAAGkC,CAAC,CAACxB,GAAF,CAAMyB,CAAN,CAAJ;AACH;;AACD,mBAAOnC,CAAC,CAACyH,SAAF,CAAY1H,CAAZ,KAAkB,CAAzB,EACA;AACIC,cAAAA,CAAC,GAAGA,CAAC,CAACa,QAAF,CAAWd,CAAX,CAAJ;AACH;AACJ,WAjBD,MAmBA;AACIC,YAAAA,CAAC,GAAGA,CAAC,CAACO,GAAF,CAAMR,CAAN,CAAJ;AACH;;AACD,iBAAOC,CAAP;AACH,SAzBD;;AA0BAF,QAAAA,gBAAgB,CAACD,SAAjB,CAA2BgH,IAA3B,GAAkC,YAClC;AACI,cAAI,CAAC,KAAK9G,CAAL,CAAOuE,OAAP,CAAe,CAAf,CAAL,EAAwB,MAAM,aAAN,CAD5B,CAGI;;AACA,cAAI,KAAKvE,CAAL,CAAOuE,OAAP,CAAe,CAAf,CAAJ,EACA;AACC,gBAAI9C,CAAC,GAAG,IAAI1B,gBAAJ,CAAqB,KAAKC,CAA1B,EAA4B,KAAKC,CAAL,CAAO0H,MAAP,CAAc,KAAK3H,CAAL,CAAOqH,UAAP,CAAkB,CAAlB,EAAqB1G,GAArB,CAAyBf,UAAU,CAAC8B,GAApC,CAAd,EAAuD,KAAK1B,CAA5D,CAA5B,CAAR;AACA,mBAAOyB,CAAC,CAACP,MAAF,GAAWd,MAAX,CAAkB,IAAlB,IAA0BqB,CAA1B,GAA8B,IAArC;AACA,WARL,CAUI;;;AACA,cAAImG,SAAS,GAAG,KAAK5H,CAAL,CAAOc,QAAP,CAAgBlB,UAAU,CAAC8B,GAA3B,CAAhB;AAEA,cAAImG,gBAAgB,GAAGD,SAAS,CAACP,UAAV,CAAqB,CAArB,CAAvB;;AACA,cAAI,CAAE,KAAKpH,CAAL,CAAO0H,MAAP,CAAcE,gBAAd,EAAgC,KAAK7H,CAArC,EAAwCI,MAAxC,CAA+CR,UAAU,CAAC8B,GAA1D,CAAN,EACA;AACI,mBAAO,IAAP;AACH;;AAED,cAAIS,CAAC,GAAGyF,SAAS,CAACP,UAAV,CAAqB,CAArB,CAAR;AACA,cAAItD,CAAC,GAAG5B,CAAC,CAACkB,SAAF,CAAY,CAAZ,EAAe1C,GAAf,CAAmBf,UAAU,CAAC8B,GAA9B,CAAR;AAEA,cAAIoG,CAAC,GAAG,KAAK7H,CAAb;AACA,cAAI8H,KAAK,GAAGC,SAAS,CAACA,SAAS,CAACF,CAAD,CAAV,CAArB;AAEA,cAAIG,CAAJ,EAAOC,CAAP;;AACA,aACA;AACI,gBAAIC,CAAJ;;AACA,eACA;AACIA,cAAAA,CAAC,GAAG,IAAIvI,UAAJ,CAAe,KAAKI,CAAL,CAAOqE,SAAP,EAAf,EAAmC,IAAI+D,YAAJ,EAAnC,CAAJ;AACH,aAHD,QAIOD,CAAC,CAACT,SAAF,CAAY,KAAK1H,CAAjB,KAAuB,CAAvB,IACA,CAAEmI,CAAC,CAACnH,QAAF,CAAWmH,CAAX,EAAcrH,QAAd,CAAuBiH,KAAvB,EAA8BJ,MAA9B,CAAqCE,gBAArC,EAAuD,KAAK7H,CAA5D,EAA+DI,MAA/D,CAAsEwH,SAAtE,CALT;;AAOA,gBAAIS,MAAM,GAAG,KAAKC,aAAL,CAAmBH,CAAnB,EAAsBL,CAAtB,EAAyB/D,CAAzB,CAAb;AACAkE,YAAAA,CAAC,GAAGI,MAAM,CAAC,CAAD,CAAV;AACAH,YAAAA,CAAC,GAAGG,MAAM,CAAC,CAAD,CAAV;;AAEA,gBAAI,KAAKd,OAAL,CAAaW,CAAb,EAAgBA,CAAhB,EAAmB9H,MAAnB,CAA0B2H,KAA1B,CAAJ,EACA;AACI;AACA,kBAAIG,CAAC,CAAC3D,OAAF,CAAU,CAAV,CAAJ,EACA;AACI2D,gBAAAA,CAAC,GAAGA,CAAC,CAACvH,GAAF,CAAMX,CAAN,CAAJ;AACH;;AAEDkI,cAAAA,CAAC,GAAGA,CAAC,CAACb,UAAF,CAAa,CAAb,CAAJ;AAEA,qBAAO,IAAItH,gBAAJ,CAAqBC,CAArB,EAAuBkI,CAAvB,CAAP;AACH;AACJ,WA1BD,QA2BOD,CAAC,CAAC7H,MAAF,CAASR,UAAU,CAAC8B,GAApB,KAA4BuG,CAAC,CAAC7H,MAAF,CAASwH,SAAT,CA3BnC;;AA6BA,iBAAO,IAAP;AACH,SAzDD;;AA0DA7H,QAAAA,gBAAgB,CAACD,SAAjB,CAA2BwI,aAA3B,GAA2C,UAASH,CAAT,EAAWL,CAAX,EAAa/D,CAAb,EAC3C;AACI,cAAIwE,CAAC,GAAGxE,CAAC,CAACM,SAAF,EAAR;AACA,cAAIqB,CAAC,GAAG3B,CAAC,CAACyE,eAAF,EAAR;AAEA,cAAIC,EAAE,GAAG7I,UAAU,CAAC8B,GAApB;AACA,cAAIgH,EAAE,GAAG9I,UAAU,CAAC+I,GAApB;AACA,cAAIC,EAAE,GAAGT,CAAT;AACA,cAAIU,EAAE,GAAGjJ,UAAU,CAAC8B,GAApB;AACA,cAAIoH,EAAE,GAAGlJ,UAAU,CAAC8B,GAApB;;AAEA,eAAK,IAAIgD,CAAC,GAAG6D,CAAC,GAAG,CAAjB,EAAoB7D,CAAC,IAAIgB,CAAC,GAAG,CAA7B,EAAgC,EAAEhB,CAAlC,EACA;AACImE,YAAAA,EAAE,GAAG,KAAKtB,OAAL,CAAasB,EAAb,EAAiBC,EAAjB,CAAL;;AAEA,gBAAI/E,CAAC,CAACQ,OAAF,CAAUG,CAAV,CAAJ,EACA;AACIoE,cAAAA,EAAE,GAAG,KAAKvB,OAAL,CAAasB,EAAb,EAAiBf,CAAjB,CAAL;AACAW,cAAAA,EAAE,GAAG,KAAKlB,OAAL,CAAakB,EAAb,EAAiBG,EAAjB,CAAL;AACAF,cAAAA,EAAE,GAAG,KAAKlB,SAAL,CAAeoB,EAAE,CAAC5H,QAAH,CAAY0H,EAAZ,EAAgB5H,QAAhB,CAAyBqH,CAAC,CAACnH,QAAF,CAAW6H,EAAX,CAAzB,CAAf,CAAL;AACAD,cAAAA,EAAE,GAAG,KAAKpB,SAAL,CAAeoB,EAAE,CAAC5H,QAAH,CAAY4H,EAAZ,EAAgB9H,QAAhB,CAAyBgI,EAAE,CAACzF,SAAH,CAAa,CAAb,CAAzB,CAAf,CAAL;AACH,aAND,MAQA;AACIyF,cAAAA,EAAE,GAAGD,EAAL;AACAJ,cAAAA,EAAE,GAAG,KAAKjB,SAAL,CAAeiB,EAAE,CAACzH,QAAH,CAAY0H,EAAZ,EAAgB5H,QAAhB,CAAyB+H,EAAzB,CAAf,CAAL;AACAD,cAAAA,EAAE,GAAG,KAAKpB,SAAL,CAAeoB,EAAE,CAAC5H,QAAH,CAAY0H,EAAZ,EAAgB5H,QAAhB,CAAyBqH,CAAC,CAACnH,QAAF,CAAW6H,EAAX,CAAzB,CAAf,CAAL;AACAH,cAAAA,EAAE,GAAG,KAAKlB,SAAL,CAAekB,EAAE,CAAC1H,QAAH,CAAY0H,EAAZ,EAAgB5H,QAAhB,CAAyB+H,EAAE,CAACxF,SAAH,CAAa,CAAb,CAAzB,CAAf,CAAL;AACH;AACJ;;AAEDwF,UAAAA,EAAE,GAAG,KAAKtB,OAAL,CAAasB,EAAb,EAAiBC,EAAjB,CAAL;AACAA,UAAAA,EAAE,GAAG,KAAKvB,OAAL,CAAasB,EAAb,EAAiBf,CAAjB,CAAL;AACAW,UAAAA,EAAE,GAAG,KAAKjB,SAAL,CAAeiB,EAAE,CAACzH,QAAH,CAAY0H,EAAZ,EAAgB5H,QAAhB,CAAyB+H,EAAzB,CAAf,CAAL;AACAH,UAAAA,EAAE,GAAG,KAAKlB,SAAL,CAAeoB,EAAE,CAAC5H,QAAH,CAAY0H,EAAZ,EAAgB5H,QAAhB,CAAyBqH,CAAC,CAACnH,QAAF,CAAW6H,EAAX,CAAzB,CAAf,CAAL;AACAA,UAAAA,EAAE,GAAG,KAAKtB,OAAL,CAAasB,EAAb,EAAiBC,EAAjB,CAAL;;AAEA,eAAK,IAAIpE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIgB,CAArB,EAAwB,EAAEhB,CAA1B,EACA;AACI+D,YAAAA,EAAE,GAAG,KAAKlB,OAAL,CAAakB,EAAb,EAAiBC,EAAjB,CAAL;AACAA,YAAAA,EAAE,GAAG,KAAKlB,SAAL,CAAekB,EAAE,CAAC1H,QAAH,CAAY0H,EAAZ,EAAgB5H,QAAhB,CAAyB+H,EAAE,CAACxF,SAAH,CAAa,CAAb,CAAzB,CAAf,CAAL;AACAwF,YAAAA,EAAE,GAAG,KAAKtB,OAAL,CAAasB,EAAb,EAAiBA,EAAjB,CAAL;AACH;;AAED,iBAAO,CAAEJ,EAAF,EAAMC,EAAN,CAAP;AACH,SA7CD;;AA+CA,YAAInJ,OAAO,GAAG;AACZwF,UAAAA,SAAS,EAAEA,SADC;AAEZzD,UAAAA,SAAS,EAAEA,SAFC;AAGZvB,UAAAA,gBAAgB,EAAEA;AAHN,SAAd;AAMAN,QAAAA,MAAM,CAACF,OAAP,GAAiBA,OAAjB,CApjB0F,CAujB3F;;AAEA,2BAAAwJ,WAAW,GAAGtJ,MAAM,CAACF,OAArB;AAGC,OA5jBD,EA4jBG,OAAO;AACR,gBAAQJ;AADA,OAAP,CA5jBH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'jsbn';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // Basic Javascript Elliptic Curve implementation\n // Ported loosely from BouncyCastle's Java EC code\n // Only Fp curves implemented for now\n\n // Requires jsbn.js and jsbn2.js\n var BigInteger = require('jsbn').BigInteger\n var Barrett = BigInteger.prototype.Barrett\n\n // ----------------\n // ECFieldElementFp\n\n // constructor\n function ECFieldElementFp(q,x) {\n     this.x = x;\n     // TODO if(x.compareTo(q) >= 0) error\n     this.q = q;\n }\n\n function feFpEquals(other) {\n     if(other == this) return true;\n     return (this.q.equals(other.q) && this.x.equals(other.x));\n }\n\n function feFpToBigInteger() {\n     return this.x;\n }\n\n function feFpNegate() {\n     return new ECFieldElementFp(this.q, this.x.negate().mod(this.q));\n }\n\n function feFpAdd(b) {\n     return new ECFieldElementFp(this.q, this.x.add(b.toBigInteger()).mod(this.q));\n }\n\n function feFpSubtract(b) {\n     return new ECFieldElementFp(this.q, this.x.subtract(b.toBigInteger()).mod(this.q));\n }\n\n function feFpMultiply(b) {\n     return new ECFieldElementFp(this.q, this.x.multiply(b.toBigInteger()).mod(this.q));\n }\n\n function feFpSquare() {\n     return new ECFieldElementFp(this.q, this.x.square().mod(this.q));\n }\n\n function feFpDivide(b) {\n     return new ECFieldElementFp(this.q, this.x.multiply(b.toBigInteger().modInverse(this.q)).mod(this.q));\n }\n\n ECFieldElementFp.prototype.equals = feFpEquals;\n ECFieldElementFp.prototype.toBigInteger = feFpToBigInteger;\n ECFieldElementFp.prototype.negate = feFpNegate;\n ECFieldElementFp.prototype.add = feFpAdd;\n ECFieldElementFp.prototype.subtract = feFpSubtract;\n ECFieldElementFp.prototype.multiply = feFpMultiply;\n ECFieldElementFp.prototype.square = feFpSquare;\n ECFieldElementFp.prototype.divide = feFpDivide;\n\n // ----------------\n // ECPointFp\n\n // constructor\n function ECPointFp(curve,x,y,z) {\n     this.curve = curve;\n     this.x = x;\n     this.y = y;\n     // Projective coordinates: either zinv == null or z * zinv == 1\n     // z and zinv are just BigIntegers, not fieldElements\n     if(z == null) {\n       this.z = BigInteger.ONE;\n     }\n     else {\n       this.z = z;\n     }\n     this.zinv = null;\n     //TODO: compression flag\n }\n\n function pointFpGetX() {\n     if(this.zinv == null) {\n       this.zinv = this.z.modInverse(this.curve.q);\n     }\n     var r = this.x.toBigInteger().multiply(this.zinv);\n     this.curve.reduce(r);\n     return this.curve.fromBigInteger(r);\n }\n\n function pointFpGetY() {\n     if(this.zinv == null) {\n       this.zinv = this.z.modInverse(this.curve.q);\n     }\n     var r = this.y.toBigInteger().multiply(this.zinv);\n     this.curve.reduce(r);\n     return this.curve.fromBigInteger(r);\n }\n\n function pointFpEquals(other) {\n     if(other == this) return true;\n     if(this.isInfinity()) return other.isInfinity();\n     if(other.isInfinity()) return this.isInfinity();\n     var u, v;\n     // u = Y2 * Z1 - Y1 * Z2\n     u = other.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(other.z)).mod(this.curve.q);\n     if(!u.equals(BigInteger.ZERO)) return false;\n     // v = X2 * Z1 - X1 * Z2\n     v = other.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(other.z)).mod(this.curve.q);\n     return v.equals(BigInteger.ZERO);\n }\n\n function pointFpIsInfinity() {\n     if((this.x == null) && (this.y == null)) return true;\n     return this.z.equals(BigInteger.ZERO) && !this.y.toBigInteger().equals(BigInteger.ZERO);\n }\n\n function pointFpNegate() {\n     return new ECPointFp(this.curve, this.x, this.y.negate(), this.z);\n }\n\n function pointFpAdd(b) {\n     if(this.isInfinity()) return b;\n     if(b.isInfinity()) return this;\n\n     // u = Y2 * Z1 - Y1 * Z2\n     var u = b.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(b.z)).mod(this.curve.q);\n     // v = X2 * Z1 - X1 * Z2\n     var v = b.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(b.z)).mod(this.curve.q);\n\n     if(BigInteger.ZERO.equals(v)) {\n         if(BigInteger.ZERO.equals(u)) {\n             return this.twice(); // this == b, so double\n         }\n \treturn this.curve.getInfinity(); // this = -b, so infinity\n     }\n\n     var THREE = new BigInteger(\"3\");\n     var x1 = this.x.toBigInteger();\n     var y1 = this.y.toBigInteger();\n     var x2 = b.x.toBigInteger();\n     var y2 = b.y.toBigInteger();\n\n     var v2 = v.square();\n     var v3 = v2.multiply(v);\n     var x1v2 = x1.multiply(v2);\n     var zu2 = u.square().multiply(this.z);\n\n     // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\n     var x3 = zu2.subtract(x1v2.shiftLeft(1)).multiply(b.z).subtract(v3).multiply(v).mod(this.curve.q);\n     // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\n     var y3 = x1v2.multiply(THREE).multiply(u).subtract(y1.multiply(v3)).subtract(zu2.multiply(u)).multiply(b.z).add(u.multiply(v3)).mod(this.curve.q);\n     // z3 = v^3 * z1 * z2\n     var z3 = v3.multiply(this.z).multiply(b.z).mod(this.curve.q);\n\n     return new ECPointFp(this.curve, this.curve.fromBigInteger(x3), this.curve.fromBigInteger(y3), z3);\n }\n\n function pointFpTwice() {\n     if(this.isInfinity()) return this;\n     if(this.y.toBigInteger().signum() == 0) return this.curve.getInfinity();\n\n     // TODO: optimized handling of constants\n     var THREE = new BigInteger(\"3\");\n     var x1 = this.x.toBigInteger();\n     var y1 = this.y.toBigInteger();\n\n     var y1z1 = y1.multiply(this.z);\n     var y1sqz1 = y1z1.multiply(y1).mod(this.curve.q);\n     var a = this.curve.a.toBigInteger();\n\n     // w = 3 * x1^2 + a * z1^2\n     var w = x1.square().multiply(THREE);\n     if(!BigInteger.ZERO.equals(a)) {\n       w = w.add(this.z.square().multiply(a));\n     }\n     w = w.mod(this.curve.q);\n     //this.curve.reduce(w);\n     // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\n     var x3 = w.square().subtract(x1.shiftLeft(3).multiply(y1sqz1)).shiftLeft(1).multiply(y1z1).mod(this.curve.q);\n     // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\n     var y3 = w.multiply(THREE).multiply(x1).subtract(y1sqz1.shiftLeft(1)).shiftLeft(2).multiply(y1sqz1).subtract(w.square().multiply(w)).mod(this.curve.q);\n     // z3 = 8 * (y1 * z1)^3\n     var z3 = y1z1.square().multiply(y1z1).shiftLeft(3).mod(this.curve.q);\n\n     return new ECPointFp(this.curve, this.curve.fromBigInteger(x3), this.curve.fromBigInteger(y3), z3);\n }\n\n // Simple NAF (Non-Adjacent Form) multiplication algorithm\n // TODO: modularize the multiplication algorithm\n function pointFpMultiply(k) {\n     if(this.isInfinity()) return this;\n     if(k.signum() == 0) return this.curve.getInfinity();\n\n     var e = k;\n     var h = e.multiply(new BigInteger(\"3\"));\n\n     var neg = this.negate();\n     var R = this;\n\n     var i;\n     for(i = h.bitLength() - 2; i > 0; --i) {\n \tR = R.twice();\n\n \tvar hBit = h.testBit(i);\n \tvar eBit = e.testBit(i);\n\n \tif (hBit != eBit) {\n \t    R = R.add(hBit ? this : neg);\n \t}\n     }\n\n     return R;\n }\n\n // Compute this*j + x*k (simultaneous multiplication)\n function pointFpMultiplyTwo(j,x,k) {\n   var i;\n   if(j.bitLength() > k.bitLength())\n     i = j.bitLength() - 1;\n   else\n     i = k.bitLength() - 1;\n\n   var R = this.curve.getInfinity();\n   var both = this.add(x);\n   while(i >= 0) {\n     R = R.twice();\n     if(j.testBit(i)) {\n       if(k.testBit(i)) {\n         R = R.add(both);\n       }\n       else {\n         R = R.add(this);\n       }\n     }\n     else {\n       if(k.testBit(i)) {\n         R = R.add(x);\n       }\n     }\n     --i;\n   }\n\n   return R;\n }\n\n ECPointFp.prototype.getX = pointFpGetX;\n ECPointFp.prototype.getY = pointFpGetY;\n ECPointFp.prototype.equals = pointFpEquals;\n ECPointFp.prototype.isInfinity = pointFpIsInfinity;\n ECPointFp.prototype.negate = pointFpNegate;\n ECPointFp.prototype.add = pointFpAdd;\n ECPointFp.prototype.twice = pointFpTwice;\n ECPointFp.prototype.multiply = pointFpMultiply;\n ECPointFp.prototype.multiplyTwo = pointFpMultiplyTwo;\n\n // ----------------\n // ECCurveFp\n\n // constructor\n function ECCurveFp(q,a,b) {\n     this.q = q;\n     this.a = this.fromBigInteger(a);\n     this.b = this.fromBigInteger(b);\n     this.infinity = new ECPointFp(this, null, null);\n     this.reducer = new Barrett(this.q);\n }\n\n function curveFpGetQ() {\n     return this.q;\n }\n\n function curveFpGetA() {\n     return this.a;\n }\n\n function curveFpGetB() {\n     return this.b;\n }\n\n function curveFpEquals(other) {\n     if(other == this) return true;\n     return(this.q.equals(other.q) && this.a.equals(other.a) && this.b.equals(other.b));\n }\n\n function curveFpGetInfinity() {\n     return this.infinity;\n }\n\n function curveFpFromBigInteger(x) {\n     return new ECFieldElementFp(this.q, x);\n }\n\n function curveReduce(x) {\n     this.reducer.reduce(x);\n }\n\n // for now, work with hex strings because they're easier in JS\n function curveFpDecodePointHex(s) {\n     switch(parseInt(s.substr(0,2), 16)) { // first byte\n     case 0:\n \treturn this.infinity;\n     case 2:\n     case 3:\n \t// point compression not supported yet\n \treturn null;\n     case 4:\n     case 6:\n     case 7:\n \tvar len = (s.length - 2) / 2;\n \tvar xHex = s.substr(2, len);\n \tvar yHex = s.substr(len+2, len);\n\n \treturn new ECPointFp(this,\n \t\t\t     this.fromBigInteger(new BigInteger(xHex, 16)),\n \t\t\t     this.fromBigInteger(new BigInteger(yHex, 16)));\n\n     default: // unsupported\n \treturn null;\n     }\n }\n\n function curveFpEncodePointHex(p) {\n \tif (p.isInfinity()) return \"00\";\n \tvar xHex = p.getX().toBigInteger().toString(16);\n \tvar yHex = p.getY().toBigInteger().toString(16);\n \tvar oLen = this.getQ().toString(16).length;\n \tif ((oLen % 2) != 0) oLen++;\n \twhile (xHex.length < oLen) {\n \t\txHex = \"0\" + xHex;\n \t}\n \twhile (yHex.length < oLen) {\n \t\tyHex = \"0\" + yHex;\n \t}\n \treturn \"04\" + xHex + yHex;\n }\n\n ECCurveFp.prototype.getQ = curveFpGetQ;\n ECCurveFp.prototype.getA = curveFpGetA;\n ECCurveFp.prototype.getB = curveFpGetB;\n ECCurveFp.prototype.equals = curveFpEquals;\n ECCurveFp.prototype.getInfinity = curveFpGetInfinity;\n ECCurveFp.prototype.fromBigInteger = curveFpFromBigInteger;\n ECCurveFp.prototype.reduce = curveReduce;\n //ECCurveFp.prototype.decodePointHex = curveFpDecodePointHex;\n ECCurveFp.prototype.encodePointHex = curveFpEncodePointHex;\n\n // from: https://github.com/kaielvin/jsbn-ec-point-compression\n ECCurveFp.prototype.decodePointHex = function(s)\n {\n \tvar yIsEven;\n     switch(parseInt(s.substr(0,2), 16)) { // first byte\n     case 0:\n \treturn this.infinity;\n     case 2:\n \tyIsEven = false;\n     case 3:\n \tif(yIsEven == undefined) yIsEven = true;\n \tvar len = s.length - 2;\n \tvar xHex = s.substr(2, len);\n \tvar x = this.fromBigInteger(new BigInteger(xHex,16));\n \tvar alpha = x.multiply(x.square().add(this.getA())).add(this.getB());\n \tvar beta = alpha.sqrt();\n\n     if (beta == null) throw \"Invalid point compression\";\n\n     var betaValue = beta.toBigInteger();\n     if (betaValue.testBit(0) != yIsEven)\n     {\n         // Use the other root\n         beta = this.fromBigInteger(this.getQ().subtract(betaValue));\n     }\n     return new ECPointFp(this,x,beta);\n     case 4:\n     case 6:\n     case 7:\n \tvar len = (s.length - 2) / 2;\n \tvar xHex = s.substr(2, len);\n \tvar yHex = s.substr(len+2, len);\n\n \treturn new ECPointFp(this,\n \t\t\t     this.fromBigInteger(new BigInteger(xHex, 16)),\n \t\t\t     this.fromBigInteger(new BigInteger(yHex, 16)));\n\n     default: // unsupported\n \treturn null;\n     }\n }\n ECCurveFp.prototype.encodeCompressedPointHex = function(p)\n {\n \tif (p.isInfinity()) return \"00\";\n \tvar xHex = p.getX().toBigInteger().toString(16);\n \tvar oLen = this.getQ().toString(16).length;\n \tif ((oLen % 2) != 0) oLen++;\n \twhile (xHex.length < oLen)\n \t\txHex = \"0\" + xHex;\n \tvar yPrefix;\n \tif(p.getY().toBigInteger().isEven()) yPrefix = \"02\";\n \telse                                 yPrefix = \"03\";\n\n \treturn yPrefix + xHex;\n }\n\n\n ECFieldElementFp.prototype.getR = function()\n {\n \tif(this.r != undefined) return this.r;\n\n     this.r = null;\n     var bitLength = this.q.bitLength();\n     if (bitLength > 128)\n     {\n         var firstWord = this.q.shiftRight(bitLength - 64);\n         if (firstWord.intValue() == -1)\n         {\n             this.r = BigInteger.ONE.shiftLeft(bitLength).subtract(this.q);\n         }\n     }\n     return this.r;\n }\n ECFieldElementFp.prototype.modMult = function(x1,x2)\n {\n     return this.modReduce(x1.multiply(x2));\n }\n ECFieldElementFp.prototype.modReduce = function(x)\n {\n     if (this.getR() != null)\n     {\n         var qLen = q.bitLength();\n         while (x.bitLength() > (qLen + 1))\n         {\n             var u = x.shiftRight(qLen);\n             var v = x.subtract(u.shiftLeft(qLen));\n             if (!this.getR().equals(BigInteger.ONE))\n             {\n                 u = u.multiply(this.getR());\n             }\n             x = u.add(v); \n         }\n         while (x.compareTo(q) >= 0)\n         {\n             x = x.subtract(q);\n         }\n     }\n     else\n     {\n         x = x.mod(q);\n     }\n     return x;\n }\n ECFieldElementFp.prototype.sqrt = function()\n {\n     if (!this.q.testBit(0)) throw \"unsupported\";\n\n     // p mod 4 == 3\n     if (this.q.testBit(1))\n     {\n     \tvar z = new ECFieldElementFp(this.q,this.x.modPow(this.q.shiftRight(2).add(BigInteger.ONE),this.q));\n     \treturn z.square().equals(this) ? z : null;\n     }\n\n     // p mod 4 == 1\n     var qMinusOne = this.q.subtract(BigInteger.ONE);\n\n     var legendreExponent = qMinusOne.shiftRight(1);\n     if (!(this.x.modPow(legendreExponent, this.q).equals(BigInteger.ONE)))\n     {\n         return null;\n     }\n\n     var u = qMinusOne.shiftRight(2);\n     var k = u.shiftLeft(1).add(BigInteger.ONE);\n\n     var Q = this.x;\n     var fourQ = modDouble(modDouble(Q));\n\n     var U, V;\n     do\n     {\n         var P;\n         do\n         {\n             P = new BigInteger(this.q.bitLength(), new SecureRandom());\n         }\n         while (P.compareTo(this.q) >= 0\n             || !(P.multiply(P).subtract(fourQ).modPow(legendreExponent, this.q).equals(qMinusOne)));\n\n         var result = this.lucasSequence(P, Q, k);\n         U = result[0];\n         V = result[1];\n\n         if (this.modMult(V, V).equals(fourQ))\n         {\n             // Integer division by 2, mod q\n             if (V.testBit(0))\n             {\n                 V = V.add(q);\n             }\n\n             V = V.shiftRight(1);\n\n             return new ECFieldElementFp(q,V);\n         }\n     }\n     while (U.equals(BigInteger.ONE) || U.equals(qMinusOne));\n\n     return null;\n }\n ECFieldElementFp.prototype.lucasSequence = function(P,Q,k)\n {\n     var n = k.bitLength();\n     var s = k.getLowestSetBit();\n\n     var Uh = BigInteger.ONE;\n     var Vl = BigInteger.TWO;\n     var Vh = P;\n     var Ql = BigInteger.ONE;\n     var Qh = BigInteger.ONE;\n\n     for (var j = n - 1; j >= s + 1; --j)\n     {\n         Ql = this.modMult(Ql, Qh);\n\n         if (k.testBit(j))\n         {\n             Qh = this.modMult(Ql, Q);\n             Uh = this.modMult(Uh, Vh);\n             Vl = this.modReduce(Vh.multiply(Vl).subtract(P.multiply(Ql)));\n             Vh = this.modReduce(Vh.multiply(Vh).subtract(Qh.shiftLeft(1)));\n         }\n         else\n         {\n             Qh = Ql;\n             Uh = this.modReduce(Uh.multiply(Vl).subtract(Ql));\n             Vh = this.modReduce(Vh.multiply(Vl).subtract(P.multiply(Ql)));\n             Vl = this.modReduce(Vl.multiply(Vl).subtract(Ql.shiftLeft(1)));\n         }\n     }\n\n     Ql = this.modMult(Ql, Qh);\n     Qh = this.modMult(Ql, Q);\n     Uh = this.modReduce(Uh.multiply(Vl).subtract(Ql));\n     Vl = this.modReduce(Vh.multiply(Vl).subtract(P.multiply(Ql)));\n     Ql = this.modMult(Ql, Qh);\n\n     for (var j = 1; j <= s; ++j)\n     {\n         Uh = this.modMult(Uh, Vl);\n         Vl = this.modReduce(Vl.multiply(Vl).subtract(Ql.shiftLeft(1)));\n         Ql = this.modMult(Ql, Ql);\n     }\n\n     return [ Uh, Vl ];\n }\n\n var exports = {\n   ECCurveFp: ECCurveFp,\n   ECPointFp: ECPointFp,\n   ECFieldElementFp: ECFieldElementFp\n }\n\n module.exports = exports\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'jsbn': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}