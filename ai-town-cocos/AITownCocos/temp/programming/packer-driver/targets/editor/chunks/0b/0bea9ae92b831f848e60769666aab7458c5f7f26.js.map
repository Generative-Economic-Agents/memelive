{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/securitylake-2018-05-10.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateAwsLogSource","http","requestUri","responseCode","input","type","required","members","sources","shape","output","failed","CreateCustomLogSource","configuration","crawlerConfiguration","roleArn","providerIdentity","eventClasses","sourceName","sourceVersion","source","idempotent","CreateDataLake","configurations","metaStoreManagerRoleArn","tags","dataLakes","CreateDataLakeExceptionSubscription","exceptionTimeToLive","notificationEndpoint","subscriptionProtocol","CreateDataLakeOrganizationConfiguration","autoEnableNewAccount","CreateSubscriber","accessTypes","subscriberDescription","subscriberIdentity","subscriberName","subscriber","CreateSubscriberNotification","subscriberId","location","locationName","subscriberEndpoint","DeleteAwsLogSource","DeleteCustomLogSource","method","DeleteDataLake","regions","DeleteDataLakeExceptionSubscription","DeleteDataLakeOrganizationConfiguration","DeleteSubscriber","DeleteSubscriberNotification","DeregisterDataLakeDelegatedAdministrator","GetDataLakeExceptionSubscription","GetDataLakeOrganizationConfiguration","GetDataLakeSources","accounts","maxResults","nextToken","dataLakeArn","dataLakeSources","member","account","sourceStatuses","resource","status","GetSubscriber","ListDataLakeExceptions","exceptions","exception","region","remediation","timestamp","ListDataLakes","ListLogSources","ListSubscribers","subscribers","ListTagsForResource","resourceArn","RegisterDataLakeDelegatedAdministrator","accountId","TagResource","UntagResource","tagKeys","UpdateDataLake","UpdateDataLakeExceptionSubscription","UpdateSubscriber","UpdateSubscriberNotification","shapes","S2","S4","S6","Sf","externalId","principal","Si","Sn","attributes","crawlerArn","databaseArn","tableArn","provider","St","encryptionConfiguration","lifecycleConfiguration","replicationConfiguration","Sv","kmsKeyId","Sx","expiration","days","transitions","storageClass","S14","S15","key","value","S1a","createStatus","s3BucketArn","updateStatus","code","reason","requestId","S1m","S1p","S1s","S1u","awsLogSource","customLogSource","union","S1z","createdAt","resourceShareArn","resourceShareName","subscriberArn","subscriberStatus","updatedAt","S20","timestampFormat","S26","httpsNotificationConfiguration","authorizationApiKeyName","authorizationApiKeyValue","endpoint","httpMethod","targetRoleArn","sqsNotificationConfiguration"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-05-10',\n    endpointPrefix: 'securitylake',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon Security Lake',\n    serviceId: 'SecurityLake',\n    signatureVersion: 'v4',\n    signingName: 'securitylake',\n    uid: 'securitylake-2018-05-10'\n  },\n  operations: {\n    CreateAwsLogSource: {\n      http: {\n        requestUri: '/v1/datalake/logsources/aws',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'sources'\n        ],\n        members: {\n          sources: {\n            shape: 'S2'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          failed: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    CreateCustomLogSource: {\n      http: {\n        requestUri: '/v1/datalake/logsources/custom',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'configuration',\n          'sourceName'\n        ],\n        members: {\n          configuration: {\n            type: 'structure',\n            required: [\n              'crawlerConfiguration',\n              'providerIdentity'\n            ],\n            members: {\n              crawlerConfiguration: {\n                type: 'structure',\n                required: [\n                  'roleArn'\n                ],\n                members: {\n                  roleArn: {}\n                }\n              },\n              providerIdentity: {\n                shape: 'Sf'\n              }\n            }\n          },\n          eventClasses: {\n            shape: 'Si'\n          },\n          sourceName: {},\n          sourceVersion: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          source: {\n            shape: 'Sn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateDataLake: {\n      http: {\n        requestUri: '/v1/datalake',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'configurations',\n          'metaStoreManagerRoleArn'\n        ],\n        members: {\n          configurations: {\n            shape: 'St'\n          },\n          metaStoreManagerRoleArn: {},\n          tags: {\n            shape: 'S15'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          dataLakes: {\n            shape: 'S1a'\n          }\n        }\n      }\n    },\n    CreateDataLakeExceptionSubscription: {\n      http: {\n        requestUri: '/v1/datalake/exceptions/subscription',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'notificationEndpoint',\n          'subscriptionProtocol'\n        ],\n        members: {\n          exceptionTimeToLive: {\n            type: 'long'\n          },\n          notificationEndpoint: {},\n          subscriptionProtocol: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateDataLakeOrganizationConfiguration: {\n      http: {\n        requestUri: '/v1/datalake/organization/configuration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          autoEnableNewAccount: {\n            shape: 'S1m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateSubscriber: {\n      http: {\n        requestUri: '/v1/subscribers',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'sources',\n          'subscriberIdentity',\n          'subscriberName'\n        ],\n        members: {\n          accessTypes: {\n            shape: 'S1s'\n          },\n          sources: {\n            shape: 'S1u'\n          },\n          subscriberDescription: {},\n          subscriberIdentity: {\n            shape: 'Sf'\n          },\n          subscriberName: {},\n          tags: {\n            shape: 'S15'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          subscriber: {\n            shape: 'S1z'\n          }\n        }\n      }\n    },\n    CreateSubscriberNotification: {\n      http: {\n        requestUri: '/v1/subscribers/{subscriberId}/notification',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'configuration',\n          'subscriberId'\n        ],\n        members: {\n          configuration: {\n            shape: 'S26'\n          },\n          subscriberId: {\n            location: 'uri',\n            locationName: 'subscriberId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          subscriberEndpoint: {}\n        }\n      }\n    },\n    DeleteAwsLogSource: {\n      http: {\n        requestUri: '/v1/datalake/logsources/aws/delete',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'sources'\n        ],\n        members: {\n          sources: {\n            shape: 'S2'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          failed: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    DeleteCustomLogSource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/datalake/logsources/custom/{sourceName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'sourceName'\n        ],\n        members: {\n          sourceName: {\n            location: 'uri',\n            locationName: 'sourceName'\n          },\n          sourceVersion: {\n            location: 'querystring',\n            locationName: 'sourceVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteDataLake: {\n      http: {\n        requestUri: '/v1/datalake/delete',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'regions'\n        ],\n        members: {\n          regions: {\n            shape: 'S6'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteDataLakeExceptionSubscription: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/datalake/exceptions/subscription',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteDataLakeOrganizationConfiguration: {\n      http: {\n        requestUri: '/v1/datalake/organization/configuration/delete',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          autoEnableNewAccount: {\n            shape: 'S1m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteSubscriber: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/subscribers/{subscriberId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'subscriberId'\n        ],\n        members: {\n          subscriberId: {\n            location: 'uri',\n            locationName: 'subscriberId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteSubscriberNotification: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/subscribers/{subscriberId}/notification',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'subscriberId'\n        ],\n        members: {\n          subscriberId: {\n            location: 'uri',\n            locationName: 'subscriberId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeregisterDataLakeDelegatedAdministrator: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/datalake/delegate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetDataLakeExceptionSubscription: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/datalake/exceptions/subscription',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          exceptionTimeToLive: {\n            type: 'long'\n          },\n          notificationEndpoint: {},\n          subscriptionProtocol: {}\n        }\n      }\n    },\n    GetDataLakeOrganizationConfiguration: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/datalake/organization/configuration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          autoEnableNewAccount: {\n            shape: 'S1m'\n          }\n        }\n      }\n    },\n    GetDataLakeSources: {\n      http: {\n        requestUri: '/v1/datalake/sources',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          accounts: {\n            shape: 'S4'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          dataLakeArn: {},\n          dataLakeSources: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                account: {},\n                eventClasses: {\n                  shape: 'Si'\n                },\n                sourceName: {},\n                sourceStatuses: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      resource: {},\n                      status: {}\n                    }\n                  }\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetSubscriber: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/subscribers/{subscriberId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'subscriberId'\n        ],\n        members: {\n          subscriberId: {\n            location: 'uri',\n            locationName: 'subscriberId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          subscriber: {\n            shape: 'S1z'\n          }\n        }\n      }\n    },\n    ListDataLakeExceptions: {\n      http: {\n        requestUri: '/v1/datalake/exceptions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {},\n          regions: {\n            shape: 'S6'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          exceptions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                exception: {},\n                region: {},\n                remediation: {},\n                timestamp: {\n                  shape: 'S20'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDataLakes: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/datalakes',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          regions: {\n            shape: 'S6',\n            location: 'querystring',\n            locationName: 'regions'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          dataLakes: {\n            shape: 'S1a'\n          }\n        }\n      }\n    },\n    ListLogSources: {\n      http: {\n        requestUri: '/v1/datalake/logsources/list',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          accounts: {\n            shape: 'S4'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {},\n          regions: {\n            shape: 'S6'\n          },\n          sources: {\n            shape: 'S1u'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          sources: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                account: {},\n                region: {},\n                sources: {\n                  shape: 'S1u'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListSubscribers: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/subscribers',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          subscribers: {\n            type: 'list',\n            member: {\n              shape: 'S1z'\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S15'\n          }\n        }\n      }\n    },\n    RegisterDataLakeDelegatedAdministrator: {\n      http: {\n        requestUri: '/v1/datalake/delegate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId'\n        ],\n        members: {\n          accountId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/v1/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S15'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateDataLake: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/datalake',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'configurations'\n        ],\n        members: {\n          configurations: {\n            shape: 'St'\n          },\n          metaStoreManagerRoleArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          dataLakes: {\n            shape: 'S1a'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateDataLakeExceptionSubscription: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/datalake/exceptions/subscription',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'notificationEndpoint',\n          'subscriptionProtocol'\n        ],\n        members: {\n          exceptionTimeToLive: {\n            type: 'long'\n          },\n          notificationEndpoint: {},\n          subscriptionProtocol: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateSubscriber: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/subscribers/{subscriberId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'subscriberId'\n        ],\n        members: {\n          sources: {\n            shape: 'S1u'\n          },\n          subscriberDescription: {},\n          subscriberId: {\n            location: 'uri',\n            locationName: 'subscriberId'\n          },\n          subscriberIdentity: {\n            shape: 'Sf'\n          },\n          subscriberName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          subscriber: {\n            shape: 'S1z'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateSubscriberNotification: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/subscribers/{subscriberId}/notification',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'configuration',\n          'subscriberId'\n        ],\n        members: {\n          configuration: {\n            shape: 'S26'\n          },\n          subscriberId: {\n            location: 'uri',\n            locationName: 'subscriberId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          subscriberEndpoint: {}\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S2: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'regions',\n          'sourceName'\n        ],\n        members: {\n          accounts: {\n            shape: 'S4'\n          },\n          regions: {\n            shape: 'S6'\n          },\n          sourceName: {},\n          sourceVersion: {}\n        }\n      }\n    },\n    S4: {\n      type: 'list',\n      member: {}\n    },\n    S6: {\n      type: 'list',\n      member: {}\n    },\n    Sf: {\n      type: 'structure',\n      required: [\n        'externalId',\n        'principal'\n      ],\n      members: {\n        externalId: {},\n        principal: {}\n      }\n    },\n    Si: {\n      type: 'list',\n      member: {}\n    },\n    Sn: {\n      type: 'structure',\n      members: {\n        attributes: {\n          type: 'structure',\n          members: {\n            crawlerArn: {},\n            databaseArn: {},\n            tableArn: {}\n          }\n        },\n        provider: {\n          type: 'structure',\n          members: {\n            location: {},\n            roleArn: {}\n          }\n        },\n        sourceName: {},\n        sourceVersion: {}\n      }\n    },\n    St: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'region'\n        ],\n        members: {\n          encryptionConfiguration: {\n            shape: 'Sv'\n          },\n          lifecycleConfiguration: {\n            shape: 'Sx'\n          },\n          region: {},\n          replicationConfiguration: {\n            shape: 'S14'\n          }\n        }\n      }\n    },\n    Sv: {\n      type: 'structure',\n      members: {\n        kmsKeyId: {}\n      }\n    },\n    Sx: {\n      type: 'structure',\n      members: {\n        expiration: {\n          type: 'structure',\n          members: {\n            days: {\n              type: 'integer'\n            }\n          }\n        },\n        transitions: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              days: {\n                type: 'integer'\n              },\n              storageClass: {}\n            }\n          }\n        }\n      }\n    },\n    S14: {\n      type: 'structure',\n      members: {\n        regions: {\n          shape: 'S6'\n        },\n        roleArn: {}\n      }\n    },\n    S15: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'key',\n          'value'\n        ],\n        members: {\n          key: {},\n          value: {}\n        }\n      }\n    },\n    S1a: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'dataLakeArn',\n          'region'\n        ],\n        members: {\n          createStatus: {},\n          dataLakeArn: {},\n          encryptionConfiguration: {\n            shape: 'Sv'\n          },\n          lifecycleConfiguration: {\n            shape: 'Sx'\n          },\n          region: {},\n          replicationConfiguration: {\n            shape: 'S14'\n          },\n          s3BucketArn: {},\n          updateStatus: {\n            type: 'structure',\n            members: {\n              exception: {\n                type: 'structure',\n                members: {\n                  code: {},\n                  reason: {}\n                }\n              },\n              requestId: {},\n              status: {}\n            }\n          }\n        }\n      }\n    },\n    S1m: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'region',\n          'sources'\n        ],\n        members: {\n          region: {},\n          sources: {\n            type: 'list',\n            member: {\n              shape: 'S1p'\n            }\n          }\n        }\n      }\n    },\n    S1p: {\n      type: 'structure',\n      members: {\n        sourceName: {},\n        sourceVersion: {}\n      }\n    },\n    S1s: {\n      type: 'list',\n      member: {}\n    },\n    S1u: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          awsLogSource: {\n            shape: 'S1p'\n          },\n          customLogSource: {\n            shape: 'Sn'\n          }\n        },\n        union: true\n      }\n    },\n    S1z: {\n      type: 'structure',\n      required: [\n        'sources',\n        'subscriberArn',\n        'subscriberId',\n        'subscriberIdentity',\n        'subscriberName'\n      ],\n      members: {\n        accessTypes: {\n          shape: 'S1s'\n        },\n        createdAt: {\n          shape: 'S20'\n        },\n        resourceShareArn: {},\n        resourceShareName: {},\n        roleArn: {},\n        s3BucketArn: {},\n        sources: {\n          shape: 'S1u'\n        },\n        subscriberArn: {},\n        subscriberDescription: {},\n        subscriberEndpoint: {},\n        subscriberId: {},\n        subscriberIdentity: {\n          shape: 'Sf'\n        },\n        subscriberName: {},\n        subscriberStatus: {},\n        updatedAt: {\n          shape: 'S20'\n        }\n      }\n    },\n    S20: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    S26: {\n      type: 'structure',\n      members: {\n        httpsNotificationConfiguration: {\n          type: 'structure',\n          required: [\n            'endpoint',\n            'targetRoleArn'\n          ],\n          members: {\n            authorizationApiKeyName: {},\n            authorizationApiKeyValue: {},\n            endpoint: {},\n            httpMethod: {},\n            targetRoleArn: {}\n          }\n        },\n        sqsNotificationConfiguration: {\n          type: 'structure',\n          members: {}\n        }\n      },\n      union: true\n    }\n  }\n}"]}