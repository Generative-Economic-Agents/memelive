{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/glacier-2012-06-01.min.json"],"names":["version","metadata","apiVersion","checksumFormat","endpointPrefix","protocol","serviceFullName","serviceId","signatureVersion","uid","operations","AbortMultipartUpload","http","method","requestUri","responseCode","input","type","required","members","accountId","location","locationName","vaultName","uploadId","AbortVaultLock","AddTagsToVault","Tags","shape","CompleteMultipartUpload","archiveSize","checksum","output","CompleteVaultLock","lockId","CreateVault","DeleteArchive","archiveId","DeleteVault","DeleteVaultAccessPolicy","DeleteVaultNotifications","DescribeJob","jobId","DescribeVault","GetDataRetrievalPolicy","Policy","GetJobOutput","range","body","status","contentRange","acceptRanges","contentType","archiveDescription","payload","GetVaultAccessPolicy","policy","GetVaultLock","State","ExpirationDate","CreationDate","GetVaultNotifications","vaultNotificationConfig","InitiateJob","jobParameters","Format","Type","ArchiveId","Description","SNSTopic","RetrievalByteRange","Tier","InventoryRetrievalParameters","StartDate","EndDate","Limit","Marker","SelectParameters","OutputLocation","jobOutputPath","InitiateMultipartUpload","partSize","InitiateVaultLock","ListJobs","limit","marker","statuscode","completed","JobList","member","ListMultipartUploads","UploadsList","MultipartUploadId","VaultARN","ArchiveDescription","PartSizeInBytes","ListParts","Parts","RangeInBytes","SHA256TreeHash","ListProvisionedCapacity","ProvisionedCapacityList","CapacityId","ListTagsForVault","ListVaults","VaultList","PurchaseProvisionedCapacity","capacityId","RemoveTagsFromVault","TagKeys","SetDataRetrievalPolicy","SetVaultAccessPolicy","SetVaultNotifications","UploadArchive","UploadMultipartPart","shapes","S5","key","value","S9","Si","JobId","JobDescription","Action","Completed","StatusCode","StatusMessage","ArchiveSizeInBytes","InventorySizeInBytes","CompletionDate","ArchiveSHA256TreeHash","JobOutputPath","Sp","InputSerialization","csv","FileHeaderInfo","Comments","QuoteEscapeCharacter","RecordDelimiter","FieldDelimiter","QuoteCharacter","ExpressionType","Expression","OutputSerialization","QuoteFields","Sx","S3","BucketName","Prefix","Encryption","EncryptionType","KMSKeyId","KMSContext","CannedACL","AccessControlList","Grantee","DisplayName","URI","ID","EmailAddress","Permission","Tagging","UserMetadata","StorageClass","S17","S1a","VaultName","LastInventoryDate","NumberOfArchives","SizeInBytes","S1e","Rules","Strategy","BytesPerHour","S1k","streaming","S1o","S1t","Events"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2012-06-01',\n    checksumFormat: 'sha256',\n    endpointPrefix: 'glacier',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon Glacier',\n    serviceId: 'Glacier',\n    signatureVersion: 'v4',\n    uid: 'glacier-2012-06-01'\n  },\n  operations: {\n    AbortMultipartUpload: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName',\n          'uploadId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          uploadId: {\n            location: 'uri',\n            locationName: 'uploadId'\n          }\n        }\n      }\n    },\n    AbortVaultLock: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/{accountId}/vaults/{vaultName}/lock-policy',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          }\n        }\n      }\n    },\n    AddTagsToVault: {\n      http: {\n        requestUri: '/{accountId}/vaults/{vaultName}/tags?operation=add',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    CompleteMultipartUpload: {\n      http: {\n        requestUri: '/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName',\n          'uploadId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          uploadId: {\n            location: 'uri',\n            locationName: 'uploadId'\n          },\n          archiveSize: {\n            location: 'header',\n            locationName: 'x-amz-archive-size'\n          },\n          checksum: {\n            location: 'header',\n            locationName: 'x-amz-sha256-tree-hash'\n          }\n        }\n      },\n      output: {\n        shape: 'S9'\n      }\n    },\n    CompleteVaultLock: {\n      http: {\n        requestUri: '/{accountId}/vaults/{vaultName}/lock-policy/{lockId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName',\n          'lockId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          lockId: {\n            location: 'uri',\n            locationName: 'lockId'\n          }\n        }\n      }\n    },\n    CreateVault: {\n      http: {\n        method: 'PUT',\n        requestUri: '/{accountId}/vaults/{vaultName}',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          location: {\n            location: 'header',\n            locationName: 'Location'\n          }\n        }\n      }\n    },\n    DeleteArchive: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/{accountId}/vaults/{vaultName}/archives/{archiveId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName',\n          'archiveId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          archiveId: {\n            location: 'uri',\n            locationName: 'archiveId'\n          }\n        }\n      }\n    },\n    DeleteVault: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/{accountId}/vaults/{vaultName}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          }\n        }\n      }\n    },\n    DeleteVaultAccessPolicy: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/{accountId}/vaults/{vaultName}/access-policy',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          }\n        }\n      }\n    },\n    DeleteVaultNotifications: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/{accountId}/vaults/{vaultName}/notification-configuration',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          }\n        }\n      }\n    },\n    DescribeJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults/{vaultName}/jobs/{jobId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName',\n          'jobId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          jobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          }\n        }\n      },\n      output: {\n        shape: 'Si'\n      }\n    },\n    DescribeVault: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults/{vaultName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          }\n        }\n      },\n      output: {\n        shape: 'S1a'\n      }\n    },\n    GetDataRetrievalPolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/policies/data-retrieval'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Policy: {\n            shape: 'S1e'\n          }\n        }\n      }\n    },\n    GetJobOutput: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults/{vaultName}/jobs/{jobId}/output'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName',\n          'jobId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          jobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          range: {\n            location: 'header',\n            locationName: 'Range'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          body: {\n            shape: 'S1k'\n          },\n          checksum: {\n            location: 'header',\n            locationName: 'x-amz-sha256-tree-hash'\n          },\n          status: {\n            location: 'statusCode',\n            type: 'integer'\n          },\n          contentRange: {\n            location: 'header',\n            locationName: 'Content-Range'\n          },\n          acceptRanges: {\n            location: 'header',\n            locationName: 'Accept-Ranges'\n          },\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          archiveDescription: {\n            location: 'header',\n            locationName: 'x-amz-archive-description'\n          }\n        },\n        payload: 'body'\n      }\n    },\n    GetVaultAccessPolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults/{vaultName}/access-policy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          policy: {\n            shape: 'S1o'\n          }\n        },\n        payload: 'policy'\n      }\n    },\n    GetVaultLock: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults/{vaultName}/lock-policy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Policy: {},\n          State: {},\n          ExpirationDate: {},\n          CreationDate: {}\n        }\n      }\n    },\n    GetVaultNotifications: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults/{vaultName}/notification-configuration'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          vaultNotificationConfig: {\n            shape: 'S1t'\n          }\n        },\n        payload: 'vaultNotificationConfig'\n      }\n    },\n    InitiateJob: {\n      http: {\n        requestUri: '/{accountId}/vaults/{vaultName}/jobs',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          jobParameters: {\n            type: 'structure',\n            members: {\n              Format: {},\n              Type: {},\n              ArchiveId: {},\n              Description: {},\n              SNSTopic: {},\n              RetrievalByteRange: {},\n              Tier: {},\n              InventoryRetrievalParameters: {\n                type: 'structure',\n                members: {\n                  StartDate: {},\n                  EndDate: {},\n                  Limit: {},\n                  Marker: {}\n                }\n              },\n              SelectParameters: {\n                shape: 'Sp'\n              },\n              OutputLocation: {\n                shape: 'Sx'\n              }\n            }\n          }\n        },\n        payload: 'jobParameters'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          location: {\n            location: 'header',\n            locationName: 'Location'\n          },\n          jobId: {\n            location: 'header',\n            locationName: 'x-amz-job-id'\n          },\n          jobOutputPath: {\n            location: 'header',\n            locationName: 'x-amz-job-output-path'\n          }\n        }\n      }\n    },\n    InitiateMultipartUpload: {\n      http: {\n        requestUri: '/{accountId}/vaults/{vaultName}/multipart-uploads',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          archiveDescription: {\n            location: 'header',\n            locationName: 'x-amz-archive-description'\n          },\n          partSize: {\n            location: 'header',\n            locationName: 'x-amz-part-size'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          location: {\n            location: 'header',\n            locationName: 'Location'\n          },\n          uploadId: {\n            location: 'header',\n            locationName: 'x-amz-multipart-upload-id'\n          }\n        }\n      }\n    },\n    InitiateVaultLock: {\n      http: {\n        requestUri: '/{accountId}/vaults/{vaultName}/lock-policy',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          policy: {\n            type: 'structure',\n            members: {\n              Policy: {}\n            }\n          }\n        },\n        payload: 'policy'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          lockId: {\n            location: 'header',\n            locationName: 'x-amz-lock-id'\n          }\n        }\n      }\n    },\n    ListJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults/{vaultName}/jobs'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          limit: {\n            location: 'querystring',\n            locationName: 'limit'\n          },\n          marker: {\n            location: 'querystring',\n            locationName: 'marker'\n          },\n          statuscode: {\n            location: 'querystring',\n            locationName: 'statuscode'\n          },\n          completed: {\n            location: 'querystring',\n            locationName: 'completed'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobList: {\n            type: 'list',\n            member: {\n              shape: 'Si'\n            }\n          },\n          Marker: {}\n        }\n      }\n    },\n    ListMultipartUploads: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults/{vaultName}/multipart-uploads'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          marker: {\n            location: 'querystring',\n            locationName: 'marker'\n          },\n          limit: {\n            location: 'querystring',\n            locationName: 'limit'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          UploadsList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                MultipartUploadId: {},\n                VaultARN: {},\n                ArchiveDescription: {},\n                PartSizeInBytes: {\n                  type: 'long'\n                },\n                CreationDate: {}\n              }\n            }\n          },\n          Marker: {}\n        }\n      }\n    },\n    ListParts: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName',\n          'uploadId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          uploadId: {\n            location: 'uri',\n            locationName: 'uploadId'\n          },\n          marker: {\n            location: 'querystring',\n            locationName: 'marker'\n          },\n          limit: {\n            location: 'querystring',\n            locationName: 'limit'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MultipartUploadId: {},\n          VaultARN: {},\n          ArchiveDescription: {},\n          PartSizeInBytes: {\n            type: 'long'\n          },\n          CreationDate: {},\n          Parts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RangeInBytes: {},\n                SHA256TreeHash: {}\n              }\n            }\n          },\n          Marker: {}\n        }\n      }\n    },\n    ListProvisionedCapacity: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/provisioned-capacity'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ProvisionedCapacityList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CapacityId: {},\n                StartDate: {},\n                ExpirationDate: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForVault: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults/{vaultName}/tags'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    ListVaults: {\n      http: {\n        method: 'GET',\n        requestUri: '/{accountId}/vaults'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          marker: {\n            location: 'querystring',\n            locationName: 'marker'\n          },\n          limit: {\n            location: 'querystring',\n            locationName: 'limit'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          VaultList: {\n            type: 'list',\n            member: {\n              shape: 'S1a'\n            }\n          },\n          Marker: {}\n        }\n      }\n    },\n    PurchaseProvisionedCapacity: {\n      http: {\n        requestUri: '/{accountId}/provisioned-capacity',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          capacityId: {\n            location: 'header',\n            locationName: 'x-amz-capacity-id'\n          }\n        }\n      }\n    },\n    RemoveTagsFromVault: {\n      http: {\n        requestUri: '/{accountId}/vaults/{vaultName}/tags?operation=remove',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    SetDataRetrievalPolicy: {\n      http: {\n        method: 'PUT',\n        requestUri: '/{accountId}/policies/data-retrieval',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          Policy: {\n            shape: 'S1e'\n          }\n        }\n      }\n    },\n    SetVaultAccessPolicy: {\n      http: {\n        method: 'PUT',\n        requestUri: '/{accountId}/vaults/{vaultName}/access-policy',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          policy: {\n            shape: 'S1o'\n          }\n        },\n        payload: 'policy'\n      }\n    },\n    SetVaultNotifications: {\n      http: {\n        method: 'PUT',\n        requestUri: '/{accountId}/vaults/{vaultName}/notification-configuration',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          vaultNotificationConfig: {\n            shape: 'S1t'\n          }\n        },\n        payload: 'vaultNotificationConfig'\n      }\n    },\n    UploadArchive: {\n      http: {\n        requestUri: '/{accountId}/vaults/{vaultName}/archives',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'vaultName',\n          'accountId'\n        ],\n        members: {\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          archiveDescription: {\n            location: 'header',\n            locationName: 'x-amz-archive-description'\n          },\n          checksum: {\n            location: 'header',\n            locationName: 'x-amz-sha256-tree-hash'\n          },\n          body: {\n            shape: 'S1k'\n          }\n        },\n        payload: 'body'\n      },\n      output: {\n        shape: 'S9'\n      }\n    },\n    UploadMultipartPart: {\n      http: {\n        method: 'PUT',\n        requestUri: '/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountId',\n          'vaultName',\n          'uploadId'\n        ],\n        members: {\n          accountId: {\n            location: 'uri',\n            locationName: 'accountId'\n          },\n          vaultName: {\n            location: 'uri',\n            locationName: 'vaultName'\n          },\n          uploadId: {\n            location: 'uri',\n            locationName: 'uploadId'\n          },\n          checksum: {\n            location: 'header',\n            locationName: 'x-amz-sha256-tree-hash'\n          },\n          range: {\n            location: 'header',\n            locationName: 'Content-Range'\n          },\n          body: {\n            shape: 'S1k'\n          }\n        },\n        payload: 'body'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          checksum: {\n            location: 'header',\n            locationName: 'x-amz-sha256-tree-hash'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S9: {\n      type: 'structure',\n      members: {\n        location: {\n          location: 'header',\n          locationName: 'Location'\n        },\n        checksum: {\n          location: 'header',\n          locationName: 'x-amz-sha256-tree-hash'\n        },\n        archiveId: {\n          location: 'header',\n          locationName: 'x-amz-archive-id'\n        }\n      }\n    },\n    Si: {\n      type: 'structure',\n      members: {\n        JobId: {},\n        JobDescription: {},\n        Action: {},\n        ArchiveId: {},\n        VaultARN: {},\n        CreationDate: {},\n        Completed: {\n          type: 'boolean'\n        },\n        StatusCode: {},\n        StatusMessage: {},\n        ArchiveSizeInBytes: {\n          type: 'long'\n        },\n        InventorySizeInBytes: {\n          type: 'long'\n        },\n        SNSTopic: {},\n        CompletionDate: {},\n        SHA256TreeHash: {},\n        ArchiveSHA256TreeHash: {},\n        RetrievalByteRange: {},\n        Tier: {},\n        InventoryRetrievalParameters: {\n          type: 'structure',\n          members: {\n            Format: {},\n            StartDate: {},\n            EndDate: {},\n            Limit: {},\n            Marker: {}\n          }\n        },\n        JobOutputPath: {},\n        SelectParameters: {\n          shape: 'Sp'\n        },\n        OutputLocation: {\n          shape: 'Sx'\n        }\n      }\n    },\n    Sp: {\n      type: 'structure',\n      members: {\n        InputSerialization: {\n          type: 'structure',\n          members: {\n            csv: {\n              type: 'structure',\n              members: {\n                FileHeaderInfo: {},\n                Comments: {},\n                QuoteEscapeCharacter: {},\n                RecordDelimiter: {},\n                FieldDelimiter: {},\n                QuoteCharacter: {}\n              }\n            }\n          }\n        },\n        ExpressionType: {},\n        Expression: {},\n        OutputSerialization: {\n          type: 'structure',\n          members: {\n            csv: {\n              type: 'structure',\n              members: {\n                QuoteFields: {},\n                QuoteEscapeCharacter: {},\n                RecordDelimiter: {},\n                FieldDelimiter: {},\n                QuoteCharacter: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    Sx: {\n      type: 'structure',\n      members: {\n        S3: {\n          type: 'structure',\n          members: {\n            BucketName: {},\n            Prefix: {},\n            Encryption: {\n              type: 'structure',\n              members: {\n                EncryptionType: {},\n                KMSKeyId: {},\n                KMSContext: {}\n              }\n            },\n            CannedACL: {},\n            AccessControlList: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                members: {\n                  Grantee: {\n                    type: 'structure',\n                    required: [\n                      'Type'\n                    ],\n                    members: {\n                      Type: {},\n                      DisplayName: {},\n                      URI: {},\n                      ID: {},\n                      EmailAddress: {}\n                    }\n                  },\n                  Permission: {}\n                }\n              }\n            },\n            Tagging: {\n              shape: 'S17'\n            },\n            UserMetadata: {\n              shape: 'S17'\n            },\n            StorageClass: {}\n          }\n        }\n      }\n    },\n    S17: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1a: {\n      type: 'structure',\n      members: {\n        VaultARN: {},\n        VaultName: {},\n        CreationDate: {},\n        LastInventoryDate: {},\n        NumberOfArchives: {\n          type: 'long'\n        },\n        SizeInBytes: {\n          type: 'long'\n        }\n      }\n    },\n    S1e: {\n      type: 'structure',\n      members: {\n        Rules: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              Strategy: {},\n              BytesPerHour: {\n                type: 'long'\n              }\n            }\n          }\n        }\n      }\n    },\n    S1k: {\n      type: 'blob',\n      streaming: true\n    },\n    S1o: {\n      type: 'structure',\n      members: {\n        Policy: {}\n      }\n    },\n    S1t: {\n      type: 'structure',\n      members: {\n        SNSTopic: {},\n        Events: {\n          type: 'list',\n          member: {}\n        }\n      }\n    }\n  }\n}"]}