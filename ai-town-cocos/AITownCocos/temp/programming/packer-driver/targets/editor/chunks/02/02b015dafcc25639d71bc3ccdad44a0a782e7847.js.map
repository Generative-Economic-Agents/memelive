{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/mailmanager-2023-10-17.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","CreateAddonInstance","input","type","required","members","AddonSubscriptionId","ClientToken","idempotencyToken","Tags","shape","output","AddonInstanceId","idempotent","CreateAddonSubscription","AddonName","CreateArchive","ArchiveName","KmsKeyArn","Retention","ArchiveId","CreateIngressPoint","IngressPointConfiguration","IngressPointName","RuleSetId","TrafficPolicyId","Type","IngressPointId","CreateRelay","Authentication","RelayName","ServerName","ServerPort","RelayId","CreateRuleSet","RuleSetName","Rules","CreateTrafficPolicy","DefaultAction","MaxMessageSizeBytes","PolicyStatements","TrafficPolicyName","DeleteAddonInstance","DeleteAddonSubscription","DeleteArchive","DeleteIngressPoint","DeleteRelay","DeleteRuleSet","DeleteTrafficPolicy","GetAddonInstance","AddonInstanceArn","CreatedTimestamp","GetAddonSubscription","AddonSubscriptionArn","GetArchive","ArchiveArn","ArchiveState","LastUpdatedTimestamp","GetArchiveExport","ExportId","ExportDestinationConfiguration","Filters","FromTimestamp","MaxResults","Status","ToTimestamp","GetArchiveMessage","ArchivedMessageId","MessageDownloadLink","GetArchiveMessageContent","Body","Html","MessageMalformed","Text","GetArchiveSearch","SearchId","GetArchiveSearchResults","Rows","member","Cc","Date","From","HasAttachments","InReplyTo","MessageId","ReceivedHeaders","ReceivedTimestamp","Subject","To","XMailer","XOriginalMailer","XPriority","GetIngressPoint","ARecord","IngressPointArn","IngressPointAuthConfiguration","IngressPointPasswordConfiguration","PreviousSmtpPasswordExpiryTimestamp","PreviousSmtpPasswordVersion","SmtpPasswordVersion","SecretArn","GetRelay","LastModifiedTimestamp","RelayArn","GetRuleSet","CreatedDate","LastModificationDate","RuleSetArn","GetTrafficPolicy","TrafficPolicyArn","ListAddonInstances","NextToken","PageSize","AddonInstances","ListAddonSubscriptions","AddonSubscriptions","ListArchiveExports","Exports","ListArchiveSearches","Searches","ListArchives","Archives","ListIngressPoints","IngressPoints","ListRelays","Relays","ListRuleSets","RuleSets","ListTagsForResource","ResourceArn","ListTrafficPolicies","TrafficPolicies","StartArchiveExport","StartArchiveSearch","StopArchiveExport","StopArchiveSearch","TagResource","UntagResource","TagKeys","UpdateArchive","UpdateIngressPoint","StatusToUpdate","UpdateRelay","UpdateRuleSet","UpdateTrafficPolicy","shapes","S4","Key","Value","sensitive","S6","Sg","RetentionPeriod","union","Sl","SmtpPassword","Sv","NoAuthentication","S14","Actions","AddHeader","HeaderName","HeaderValue","Archive","ActionFailurePolicy","TargetArchive","DeliverToMailbox","MailboxArn","RoleArn","Drop","Relay","MailFrom","ReplaceRecipient","ReplaceWith","Send","WriteToS3","S3Bucket","S3Prefix","S3SseKmsKeyId","Conditions","Name","Unless","S1s","BooleanExpression","Evaluate","Attribute","Operator","DmarcExpression","Values","IpExpression","NumberExpression","StringExpression","VerdictExpression","Analysis","Analyzer","ResultField","S2x","Action","TlsExpression","S4h","S3","S3Location","S4k","Include","S4l","S4x","CompletionTimestamp","ErrorMessage","State","SubmissionTimestamp","S5c"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2023-10-17',\n    endpointPrefix: 'mail-manager',\n    jsonVersion: '1.0',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceFullName: 'MailManager',\n    serviceId: 'MailManager',\n    signatureVersion: 'v4',\n    signingName: 'ses',\n    targetPrefix: 'MailManagerSvc',\n    uid: 'mailmanager-2023-10-17'\n  },\n  operations: {\n    CreateAddonInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'AddonSubscriptionId'\n        ],\n        members: {\n          AddonSubscriptionId: {},\n          ClientToken: {\n            idempotencyToken: true\n          },\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'AddonInstanceId'\n        ],\n        members: {\n          AddonInstanceId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateAddonSubscription: {\n      input: {\n        type: 'structure',\n        required: [\n          'AddonName'\n        ],\n        members: {\n          AddonName: {},\n          ClientToken: {\n            idempotencyToken: true\n          },\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'AddonSubscriptionId'\n        ],\n        members: {\n          AddonSubscriptionId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateArchive: {\n      input: {\n        type: 'structure',\n        required: [\n          'ArchiveName'\n        ],\n        members: {\n          ArchiveName: {},\n          ClientToken: {\n            idempotencyToken: true\n          },\n          KmsKeyArn: {},\n          Retention: {\n            shape: 'Sg'\n          },\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ArchiveId'\n        ],\n        members: {\n          ArchiveId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateIngressPoint: {\n      input: {\n        type: 'structure',\n        required: [\n          'IngressPointName',\n          'RuleSetId',\n          'TrafficPolicyId',\n          'Type'\n        ],\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          IngressPointConfiguration: {\n            shape: 'Sl'\n          },\n          IngressPointName: {},\n          RuleSetId: {},\n          Tags: {\n            shape: 'S4'\n          },\n          TrafficPolicyId: {},\n          Type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'IngressPointId'\n        ],\n        members: {\n          IngressPointId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateRelay: {\n      input: {\n        type: 'structure',\n        required: [\n          'Authentication',\n          'RelayName',\n          'ServerName',\n          'ServerPort'\n        ],\n        members: {\n          Authentication: {\n            shape: 'Sv'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          },\n          RelayName: {},\n          ServerName: {},\n          ServerPort: {\n            type: 'integer'\n          },\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'RelayId'\n        ],\n        members: {\n          RelayId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateRuleSet: {\n      input: {\n        type: 'structure',\n        required: [\n          'RuleSetName',\n          'Rules'\n        ],\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          RuleSetName: {},\n          Rules: {\n            shape: 'S14'\n          },\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'RuleSetId'\n        ],\n        members: {\n          RuleSetId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateTrafficPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'DefaultAction',\n          'PolicyStatements',\n          'TrafficPolicyName'\n        ],\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          DefaultAction: {},\n          MaxMessageSizeBytes: {\n            type: 'integer'\n          },\n          PolicyStatements: {\n            shape: 'S2x'\n          },\n          Tags: {\n            shape: 'S4'\n          },\n          TrafficPolicyName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyId'\n        ],\n        members: {\n          TrafficPolicyId: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteAddonInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'AddonInstanceId'\n        ],\n        members: {\n          AddonInstanceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteAddonSubscription: {\n      input: {\n        type: 'structure',\n        required: [\n          'AddonSubscriptionId'\n        ],\n        members: {\n          AddonSubscriptionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteArchive: {\n      input: {\n        type: 'structure',\n        required: [\n          'ArchiveId'\n        ],\n        members: {\n          ArchiveId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteIngressPoint: {\n      input: {\n        type: 'structure',\n        required: [\n          'IngressPointId'\n        ],\n        members: {\n          IngressPointId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteRelay: {\n      input: {\n        type: 'structure',\n        required: [\n          'RelayId'\n        ],\n        members: {\n          RelayId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteRuleSet: {\n      input: {\n        type: 'structure',\n        required: [\n          'RuleSetId'\n        ],\n        members: {\n          RuleSetId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteTrafficPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyId'\n        ],\n        members: {\n          TrafficPolicyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetAddonInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'AddonInstanceId'\n        ],\n        members: {\n          AddonInstanceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AddonInstanceArn: {},\n          AddonName: {},\n          AddonSubscriptionId: {},\n          CreatedTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetAddonSubscription: {\n      input: {\n        type: 'structure',\n        required: [\n          'AddonSubscriptionId'\n        ],\n        members: {\n          AddonSubscriptionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AddonName: {},\n          AddonSubscriptionArn: {},\n          CreatedTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetArchive: {\n      input: {\n        type: 'structure',\n        required: [\n          'ArchiveId'\n        ],\n        members: {\n          ArchiveId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ArchiveArn',\n          'ArchiveId',\n          'ArchiveName',\n          'ArchiveState',\n          'Retention'\n        ],\n        members: {\n          ArchiveArn: {},\n          ArchiveId: {},\n          ArchiveName: {},\n          ArchiveState: {},\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          KmsKeyArn: {},\n          LastUpdatedTimestamp: {\n            type: 'timestamp'\n          },\n          Retention: {\n            shape: 'Sg'\n          }\n        }\n      }\n    },\n    GetArchiveExport: {\n      input: {\n        type: 'structure',\n        required: [\n          'ExportId'\n        ],\n        members: {\n          ExportId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ArchiveId: {},\n          ExportDestinationConfiguration: {\n            shape: 'S4h'\n          },\n          Filters: {\n            shape: 'S4k'\n          },\n          FromTimestamp: {\n            type: 'timestamp'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          Status: {\n            shape: 'S4x'\n          },\n          ToTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetArchiveMessage: {\n      input: {\n        type: 'structure',\n        required: [\n          'ArchivedMessageId'\n        ],\n        members: {\n          ArchivedMessageId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MessageDownloadLink: {}\n        }\n      }\n    },\n    GetArchiveMessageContent: {\n      input: {\n        type: 'structure',\n        required: [\n          'ArchivedMessageId'\n        ],\n        members: {\n          ArchivedMessageId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Body: {\n            type: 'structure',\n            members: {\n              Html: {},\n              MessageMalformed: {\n                type: 'boolean'\n              },\n              Text: {}\n            }\n          }\n        }\n      }\n    },\n    GetArchiveSearch: {\n      input: {\n        type: 'structure',\n        required: [\n          'SearchId'\n        ],\n        members: {\n          SearchId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ArchiveId: {},\n          Filters: {\n            shape: 'S4k'\n          },\n          FromTimestamp: {\n            type: 'timestamp'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          Status: {\n            shape: 'S5c'\n          },\n          ToTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetArchiveSearchResults: {\n      input: {\n        type: 'structure',\n        required: [\n          'SearchId'\n        ],\n        members: {\n          SearchId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Rows: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ArchivedMessageId: {},\n                Cc: {},\n                Date: {},\n                From: {},\n                HasAttachments: {\n                  type: 'boolean'\n                },\n                InReplyTo: {},\n                MessageId: {},\n                ReceivedHeaders: {\n                  type: 'list',\n                  member: {}\n                },\n                ReceivedTimestamp: {\n                  type: 'timestamp'\n                },\n                Subject: {},\n                To: {},\n                XMailer: {},\n                XOriginalMailer: {},\n                XPriority: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    GetIngressPoint: {\n      input: {\n        type: 'structure',\n        required: [\n          'IngressPointId'\n        ],\n        members: {\n          IngressPointId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'IngressPointId',\n          'IngressPointName'\n        ],\n        members: {\n          ARecord: {},\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          IngressPointArn: {},\n          IngressPointAuthConfiguration: {\n            type: 'structure',\n            members: {\n              IngressPointPasswordConfiguration: {\n                type: 'structure',\n                members: {\n                  PreviousSmtpPasswordExpiryTimestamp: {\n                    type: 'timestamp'\n                  },\n                  PreviousSmtpPasswordVersion: {},\n                  SmtpPasswordVersion: {}\n                }\n              },\n              SecretArn: {}\n            }\n          },\n          IngressPointId: {},\n          IngressPointName: {},\n          LastUpdatedTimestamp: {\n            type: 'timestamp'\n          },\n          RuleSetId: {},\n          Status: {},\n          TrafficPolicyId: {},\n          Type: {}\n        }\n      }\n    },\n    GetRelay: {\n      input: {\n        type: 'structure',\n        required: [\n          'RelayId'\n        ],\n        members: {\n          RelayId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'RelayId'\n        ],\n        members: {\n          Authentication: {\n            shape: 'Sv'\n          },\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          LastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          RelayArn: {},\n          RelayId: {},\n          RelayName: {},\n          ServerName: {},\n          ServerPort: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    GetRuleSet: {\n      input: {\n        type: 'structure',\n        required: [\n          'RuleSetId'\n        ],\n        members: {\n          RuleSetId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CreatedDate',\n          'LastModificationDate',\n          'RuleSetArn',\n          'RuleSetId',\n          'RuleSetName',\n          'Rules'\n        ],\n        members: {\n          CreatedDate: {\n            type: 'timestamp'\n          },\n          LastModificationDate: {\n            type: 'timestamp'\n          },\n          RuleSetArn: {},\n          RuleSetId: {},\n          RuleSetName: {},\n          Rules: {\n            shape: 'S14'\n          }\n        }\n      }\n    },\n    GetTrafficPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyId'\n        ],\n        members: {\n          TrafficPolicyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyId',\n          'TrafficPolicyName'\n        ],\n        members: {\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          DefaultAction: {},\n          LastUpdatedTimestamp: {\n            type: 'timestamp'\n          },\n          MaxMessageSizeBytes: {\n            type: 'integer'\n          },\n          PolicyStatements: {\n            shape: 'S2x'\n          },\n          TrafficPolicyArn: {},\n          TrafficPolicyId: {},\n          TrafficPolicyName: {}\n        }\n      }\n    },\n    ListAddonInstances: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AddonInstances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AddonInstanceArn: {},\n                AddonInstanceId: {},\n                AddonName: {},\n                AddonSubscriptionId: {},\n                CreatedTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListAddonSubscriptions: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AddonSubscriptions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AddonName: {},\n                AddonSubscriptionArn: {},\n                AddonSubscriptionId: {},\n                CreatedTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListArchiveExports: {\n      input: {\n        type: 'structure',\n        required: [\n          'ArchiveId'\n        ],\n        members: {\n          ArchiveId: {},\n          NextToken: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Exports: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ExportId: {},\n                Status: {\n                  shape: 'S4x'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListArchiveSearches: {\n      input: {\n        type: 'structure',\n        required: [\n          'ArchiveId'\n        ],\n        members: {\n          ArchiveId: {},\n          NextToken: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Searches: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                SearchId: {},\n                Status: {\n                  shape: 'S5c'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListArchives: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Archives'\n        ],\n        members: {\n          Archives: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'ArchiveId'\n              ],\n              members: {\n                ArchiveId: {},\n                ArchiveName: {},\n                ArchiveState: {},\n                LastUpdatedTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListIngressPoints: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IngressPoints: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'IngressPointId',\n                'IngressPointName',\n                'Status',\n                'Type'\n              ],\n              members: {\n                ARecord: {},\n                IngressPointId: {},\n                IngressPointName: {},\n                Status: {},\n                Type: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListRelays: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Relays'\n        ],\n        members: {\n          NextToken: {},\n          Relays: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                LastModifiedTimestamp: {\n                  type: 'timestamp'\n                },\n                RelayId: {},\n                RelayName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListRuleSets: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'RuleSets'\n        ],\n        members: {\n          NextToken: {},\n          RuleSets: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                LastModificationDate: {\n                  type: 'timestamp'\n                },\n                RuleSetId: {},\n                RuleSetName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Tags'\n        ],\n        members: {\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    ListTrafficPolicies: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          TrafficPolicies: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'DefaultAction',\n                'TrafficPolicyId',\n                'TrafficPolicyName'\n              ],\n              members: {\n                DefaultAction: {},\n                TrafficPolicyId: {},\n                TrafficPolicyName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    StartArchiveExport: {\n      input: {\n        type: 'structure',\n        required: [\n          'ArchiveId',\n          'ExportDestinationConfiguration',\n          'FromTimestamp',\n          'ToTimestamp'\n        ],\n        members: {\n          ArchiveId: {},\n          ExportDestinationConfiguration: {\n            shape: 'S4h'\n          },\n          Filters: {\n            shape: 'S4k'\n          },\n          FromTimestamp: {\n            type: 'timestamp'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          ToTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ExportId: {}\n        }\n      }\n    },\n    StartArchiveSearch: {\n      input: {\n        type: 'structure',\n        required: [\n          'ArchiveId',\n          'FromTimestamp',\n          'MaxResults',\n          'ToTimestamp'\n        ],\n        members: {\n          ArchiveId: {},\n          Filters: {\n            shape: 'S4k'\n          },\n          FromTimestamp: {\n            type: 'timestamp'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          ToTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SearchId: {}\n        }\n      }\n    },\n    StopArchiveExport: {\n      input: {\n        type: 'structure',\n        required: [\n          'ExportId'\n        ],\n        members: {\n          ExportId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    StopArchiveSearch: {\n      input: {\n        type: 'structure',\n        required: [\n          'SearchId'\n        ],\n        members: {\n          SearchId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {},\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {},\n          TagKeys: {\n            type: 'list',\n            member: {\n              shape: 'S6'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateArchive: {\n      input: {\n        type: 'structure',\n        required: [\n          'ArchiveId'\n        ],\n        members: {\n          ArchiveId: {},\n          ArchiveName: {},\n          Retention: {\n            shape: 'Sg'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateIngressPoint: {\n      input: {\n        type: 'structure',\n        required: [\n          'IngressPointId'\n        ],\n        members: {\n          IngressPointConfiguration: {\n            shape: 'Sl'\n          },\n          IngressPointId: {},\n          IngressPointName: {},\n          RuleSetId: {},\n          StatusToUpdate: {},\n          TrafficPolicyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateRelay: {\n      input: {\n        type: 'structure',\n        required: [\n          'RelayId'\n        ],\n        members: {\n          Authentication: {\n            shape: 'Sv'\n          },\n          RelayId: {},\n          RelayName: {},\n          ServerName: {},\n          ServerPort: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateRuleSet: {\n      input: {\n        type: 'structure',\n        required: [\n          'RuleSetId'\n        ],\n        members: {\n          RuleSetId: {},\n          RuleSetName: {},\n          Rules: {\n            shape: 'S14'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateTrafficPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyId'\n        ],\n        members: {\n          DefaultAction: {},\n          MaxMessageSizeBytes: {\n            type: 'integer'\n          },\n          PolicyStatements: {\n            shape: 'S2x'\n          },\n          TrafficPolicyId: {},\n          TrafficPolicyName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {\n            shape: 'S6'\n          },\n          Value: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      }\n    },\n    S6: {\n      type: 'string',\n      sensitive: true\n    },\n    Sg: {\n      type: 'structure',\n      members: {\n        RetentionPeriod: {}\n      },\n      union: true\n    },\n    Sl: {\n      type: 'structure',\n      members: {\n        SecretArn: {},\n        SmtpPassword: {\n          type: 'string',\n          sensitive: true\n        }\n      },\n      union: true\n    },\n    Sv: {\n      type: 'structure',\n      members: {\n        NoAuthentication: {\n          type: 'structure',\n          members: {}\n        },\n        SecretArn: {}\n      },\n      union: true\n    },\n    S14: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Actions'\n        ],\n        members: {\n          Actions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AddHeader: {\n                  type: 'structure',\n                  required: [\n                    'HeaderName',\n                    'HeaderValue'\n                  ],\n                  members: {\n                    HeaderName: {},\n                    HeaderValue: {}\n                  }\n                },\n                Archive: {\n                  type: 'structure',\n                  required: [\n                    'TargetArchive'\n                  ],\n                  members: {\n                    ActionFailurePolicy: {},\n                    TargetArchive: {}\n                  }\n                },\n                DeliverToMailbox: {\n                  type: 'structure',\n                  required: [\n                    'MailboxArn',\n                    'RoleArn'\n                  ],\n                  members: {\n                    ActionFailurePolicy: {},\n                    MailboxArn: {},\n                    RoleArn: {}\n                  }\n                },\n                Drop: {\n                  type: 'structure',\n                  members: {}\n                },\n                Relay: {\n                  type: 'structure',\n                  required: [\n                    'Relay'\n                  ],\n                  members: {\n                    ActionFailurePolicy: {},\n                    MailFrom: {},\n                    Relay: {}\n                  }\n                },\n                ReplaceRecipient: {\n                  type: 'structure',\n                  members: {\n                    ReplaceWith: {\n                      type: 'list',\n                      member: {\n                        type: 'string',\n                        sensitive: true\n                      }\n                    }\n                  }\n                },\n                Send: {\n                  type: 'structure',\n                  required: [\n                    'RoleArn'\n                  ],\n                  members: {\n                    ActionFailurePolicy: {},\n                    RoleArn: {}\n                  }\n                },\n                WriteToS3: {\n                  type: 'structure',\n                  required: [\n                    'RoleArn',\n                    'S3Bucket'\n                  ],\n                  members: {\n                    ActionFailurePolicy: {},\n                    RoleArn: {},\n                    S3Bucket: {},\n                    S3Prefix: {},\n                    S3SseKmsKeyId: {}\n                  }\n                }\n              },\n              union: true\n            }\n          },\n          Conditions: {\n            shape: 'S1s'\n          },\n          Name: {},\n          Unless: {\n            shape: 'S1s'\n          }\n        }\n      }\n    },\n    S1s: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          BooleanExpression: {\n            type: 'structure',\n            required: [\n              'Evaluate',\n              'Operator'\n            ],\n            members: {\n              Evaluate: {\n                type: 'structure',\n                members: {\n                  Attribute: {}\n                },\n                union: true\n              },\n              Operator: {}\n            }\n          },\n          DmarcExpression: {\n            type: 'structure',\n            required: [\n              'Operator',\n              'Values'\n            ],\n            members: {\n              Operator: {},\n              Values: {\n                type: 'list',\n                member: {}\n              }\n            }\n          },\n          IpExpression: {\n            type: 'structure',\n            required: [\n              'Evaluate',\n              'Operator',\n              'Values'\n            ],\n            members: {\n              Evaluate: {\n                type: 'structure',\n                members: {\n                  Attribute: {}\n                },\n                union: true\n              },\n              Operator: {},\n              Values: {\n                type: 'list',\n                member: {}\n              }\n            }\n          },\n          NumberExpression: {\n            type: 'structure',\n            required: [\n              'Evaluate',\n              'Operator',\n              'Value'\n            ],\n            members: {\n              Evaluate: {\n                type: 'structure',\n                members: {\n                  Attribute: {}\n                },\n                union: true\n              },\n              Operator: {},\n              Value: {\n                type: 'double'\n              }\n            }\n          },\n          StringExpression: {\n            type: 'structure',\n            required: [\n              'Evaluate',\n              'Operator',\n              'Values'\n            ],\n            members: {\n              Evaluate: {\n                type: 'structure',\n                members: {\n                  Attribute: {}\n                },\n                union: true\n              },\n              Operator: {},\n              Values: {\n                type: 'list',\n                member: {}\n              }\n            }\n          },\n          VerdictExpression: {\n            type: 'structure',\n            required: [\n              'Evaluate',\n              'Operator',\n              'Values'\n            ],\n            members: {\n              Evaluate: {\n                type: 'structure',\n                members: {\n                  Analysis: {\n                    type: 'structure',\n                    required: [\n                      'Analyzer',\n                      'ResultField'\n                    ],\n                    members: {\n                      Analyzer: {},\n                      ResultField: {}\n                    }\n                  },\n                  Attribute: {}\n                },\n                union: true\n              },\n              Operator: {},\n              Values: {\n                type: 'list',\n                member: {}\n              }\n            }\n          }\n        },\n        union: true\n      }\n    },\n    S2x: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Action',\n          'Conditions'\n        ],\n        members: {\n          Action: {},\n          Conditions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                BooleanExpression: {\n                  type: 'structure',\n                  required: [\n                    'Evaluate',\n                    'Operator'\n                  ],\n                  members: {\n                    Evaluate: {\n                      type: 'structure',\n                      members: {\n                        Analysis: {\n                          type: 'structure',\n                          required: [\n                            'Analyzer',\n                            'ResultField'\n                          ],\n                          members: {\n                            Analyzer: {},\n                            ResultField: {}\n                          }\n                        }\n                      },\n                      union: true\n                    },\n                    Operator: {}\n                  }\n                },\n                IpExpression: {\n                  type: 'structure',\n                  required: [\n                    'Evaluate',\n                    'Operator',\n                    'Values'\n                  ],\n                  members: {\n                    Evaluate: {\n                      type: 'structure',\n                      members: {\n                        Attribute: {}\n                      },\n                      union: true\n                    },\n                    Operator: {},\n                    Values: {\n                      type: 'list',\n                      member: {}\n                    }\n                  }\n                },\n                StringExpression: {\n                  type: 'structure',\n                  required: [\n                    'Evaluate',\n                    'Operator',\n                    'Values'\n                  ],\n                  members: {\n                    Evaluate: {\n                      type: 'structure',\n                      members: {\n                        Attribute: {}\n                      },\n                      union: true\n                    },\n                    Operator: {},\n                    Values: {\n                      type: 'list',\n                      member: {}\n                    }\n                  }\n                },\n                TlsExpression: {\n                  type: 'structure',\n                  required: [\n                    'Evaluate',\n                    'Operator',\n                    'Value'\n                  ],\n                  members: {\n                    Evaluate: {\n                      type: 'structure',\n                      members: {\n                        Attribute: {}\n                      },\n                      union: true\n                    },\n                    Operator: {},\n                    Value: {}\n                  }\n                }\n              },\n              union: true\n            }\n          }\n        }\n      }\n    },\n    S4h: {\n      type: 'structure',\n      members: {\n        S3: {\n          type: 'structure',\n          members: {\n            S3Location: {}\n          }\n        }\n      },\n      union: true\n    },\n    S4k: {\n      type: 'structure',\n      members: {\n        Include: {\n          shape: 'S4l'\n        },\n        Unless: {\n          shape: 'S4l'\n        }\n      }\n    },\n    S4l: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          BooleanExpression: {\n            type: 'structure',\n            required: [\n              'Evaluate',\n              'Operator'\n            ],\n            members: {\n              Evaluate: {\n                type: 'structure',\n                members: {\n                  Attribute: {}\n                },\n                union: true\n              },\n              Operator: {}\n            }\n          },\n          StringExpression: {\n            type: 'structure',\n            required: [\n              'Evaluate',\n              'Operator',\n              'Values'\n            ],\n            members: {\n              Evaluate: {\n                type: 'structure',\n                members: {\n                  Attribute: {}\n                },\n                union: true\n              },\n              Operator: {},\n              Values: {\n                type: 'list',\n                member: {}\n              }\n            }\n          }\n        },\n        union: true\n      }\n    },\n    S4x: {\n      type: 'structure',\n      members: {\n        CompletionTimestamp: {\n          type: 'timestamp'\n        },\n        ErrorMessage: {},\n        State: {},\n        SubmissionTimestamp: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S5c: {\n      type: 'structure',\n      members: {\n        CompletionTimestamp: {\n          type: 'timestamp'\n        },\n        ErrorMessage: {},\n        State: {},\n        SubmissionTimestamp: {\n          type: 'timestamp'\n        }\n      }\n    }\n  }\n}"]}