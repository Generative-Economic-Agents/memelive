{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/directconnect-2012-10-25.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","AcceptDirectConnectGatewayAssociationProposal","input","type","required","members","directConnectGatewayId","proposalId","associatedGatewayOwnerAccount","overrideAllowedPrefixesToDirectConnectGateway","shape","output","directConnectGatewayAssociation","AllocateConnectionOnInterconnect","bandwidth","connectionName","ownerAccount","interconnectId","vlan","deprecated","AllocateHostedConnection","connectionId","tags","AllocatePrivateVirtualInterface","newPrivateVirtualInterfaceAllocation","virtualInterfaceName","asn","mtu","authKey","amazonAddress","addressFamily","customerAddress","AllocatePublicVirtualInterface","newPublicVirtualInterfaceAllocation","routeFilterPrefixes","AllocateTransitVirtualInterface","newTransitVirtualInterfaceAllocation","virtualInterface","AssociateConnectionWithLag","lagId","AssociateHostedConnection","parentConnectionId","AssociateMacSecKey","secretARN","ckn","cak","macSecKeys","AssociateVirtualInterface","virtualInterfaceId","ConfirmConnection","connectionState","ConfirmCustomerAgreement","agreementName","status","ConfirmPrivateVirtualInterface","virtualGatewayId","virtualInterfaceState","ConfirmPublicVirtualInterface","ConfirmTransitVirtualInterface","CreateBGPPeer","newBGPPeer","CreateConnection","location","providerName","requestMACSec","CreateDirectConnectGateway","directConnectGatewayName","amazonSideAsn","directConnectGateway","CreateDirectConnectGatewayAssociation","gatewayId","addAllowedPrefixesToDirectConnectGateway","CreateDirectConnectGatewayAssociationProposal","directConnectGatewayOwnerAccount","removeAllowedPrefixesToDirectConnectGateway","directConnectGatewayAssociationProposal","CreateInterconnect","interconnectName","CreateLag","numberOfConnections","connectionsBandwidth","lagName","childConnectionTags","CreatePrivateVirtualInterface","newPrivateVirtualInterface","enableSiteLink","CreatePublicVirtualInterface","newPublicVirtualInterface","CreateTransitVirtualInterface","newTransitVirtualInterface","DeleteBGPPeer","bgpPeerId","DeleteConnection","DeleteDirectConnectGateway","DeleteDirectConnectGatewayAssociation","associationId","DeleteDirectConnectGatewayAssociationProposal","DeleteInterconnect","interconnectState","DeleteLag","DeleteVirtualInterface","DescribeConnectionLoa","loaContentType","loa","DescribeConnections","DescribeConnectionsOnInterconnect","DescribeCustomerMetadata","agreements","member","nniPartnerType","DescribeDirectConnectGatewayAssociationProposals","associatedGatewayId","maxResults","nextToken","directConnectGatewayAssociationProposals","DescribeDirectConnectGatewayAssociations","directConnectGatewayAssociations","DescribeDirectConnectGatewayAttachments","directConnectGatewayAttachments","virtualInterfaceRegion","virtualInterfaceOwnerAccount","attachmentState","attachmentType","stateChangeError","DescribeDirectConnectGateways","directConnectGateways","DescribeHostedConnections","DescribeInterconnectLoa","DescribeInterconnects","interconnects","DescribeLags","lags","DescribeLoa","DescribeLocations","locations","locationCode","locationName","region","availablePortSpeeds","availableProviders","availableMacSecPortSpeeds","DescribeRouterConfiguration","routerTypeIdentifier","customerRouterConfig","router","vendor","platform","software","xsltTemplateName","xsltTemplateNameForMacSec","DescribeTags","resourceArns","resourceTags","resourceArn","DescribeVirtualGateways","virtualGateways","virtualGatewayState","DescribeVirtualInterfaces","virtualInterfaces","DisassociateConnectionFromLag","DisassociateMacSecKey","ListVirtualInterfaceTestHistory","testId","bgpPeers","virtualInterfaceTestHistory","StartBgpFailoverTest","testDurationInMinutes","virtualInterfaceTest","StopBgpFailoverTest","TagResource","UntagResource","tagKeys","UpdateConnection","encryptionMode","UpdateDirectConnectGateway","newDirectConnectGatewayName","UpdateDirectConnectGatewayAssociation","UpdateLag","minimumLinks","UpdateVirtualInterfaceAttributes","shapes","S5","cidr","S9","associationState","associatedGateway","allowedPrefixesToDirectConnectGateway","virtualGatewayRegion","virtualGatewayOwnerAccount","Sc","id","So","partnerName","loaIssueTime","awsDevice","jumboFrameCapable","awsDeviceV2","awsLogicalDeviceId","hasLogicalRedundancy","macSecCapable","portEncryptionStatus","Sv","S10","key","value","S18","state","startOn","S1o","virtualInterfaceType","bgpPeerState","bgpStatus","siteLinkEnabled","S2v","directConnectGatewayState","S32","proposalState","existingAllowedPrefixesToDirectConnectGateway","requestedAllowedPrefixesToDirectConnectGateway","S36","S3b","lagState","connections","allowsHostedConnections","S3d","S44","loaContent","S47","S65","S69","startTime","endTime"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2012-10-25',\n    endpointPrefix: 'directconnect',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceFullName: 'AWS Direct Connect',\n    serviceId: 'Direct Connect',\n    signatureVersion: 'v4',\n    targetPrefix: 'OvertureService',\n    uid: 'directconnect-2012-10-25'\n  },\n  operations: {\n    AcceptDirectConnectGatewayAssociationProposal: {\n      input: {\n        type: 'structure',\n        required: [\n          'directConnectGatewayId',\n          'proposalId',\n          'associatedGatewayOwnerAccount'\n        ],\n        members: {\n          directConnectGatewayId: {},\n          proposalId: {},\n          associatedGatewayOwnerAccount: {},\n          overrideAllowedPrefixesToDirectConnectGateway: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGatewayAssociation: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    AllocateConnectionOnInterconnect: {\n      input: {\n        type: 'structure',\n        required: [\n          'bandwidth',\n          'connectionName',\n          'ownerAccount',\n          'interconnectId',\n          'vlan'\n        ],\n        members: {\n          bandwidth: {},\n          connectionName: {},\n          ownerAccount: {},\n          interconnectId: {},\n          vlan: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        shape: 'So'\n      },\n      deprecated: true\n    },\n    AllocateHostedConnection: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'ownerAccount',\n          'bandwidth',\n          'connectionName',\n          'vlan'\n        ],\n        members: {\n          connectionId: {},\n          ownerAccount: {},\n          bandwidth: {},\n          connectionName: {},\n          vlan: {\n            type: 'integer'\n          },\n          tags: {\n            shape: 'S10'\n          }\n        }\n      },\n      output: {\n        shape: 'So'\n      }\n    },\n    AllocatePrivateVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'ownerAccount',\n          'newPrivateVirtualInterfaceAllocation'\n        ],\n        members: {\n          connectionId: {},\n          ownerAccount: {},\n          newPrivateVirtualInterfaceAllocation: {\n            type: 'structure',\n            required: [\n              'virtualInterfaceName',\n              'vlan',\n              'asn'\n            ],\n            members: {\n              virtualInterfaceName: {},\n              vlan: {\n                type: 'integer'\n              },\n              asn: {\n                type: 'integer'\n              },\n              mtu: {\n                type: 'integer'\n              },\n              authKey: {},\n              amazonAddress: {},\n              addressFamily: {},\n              customerAddress: {},\n              tags: {\n                shape: 'S10'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        shape: 'S1o'\n      }\n    },\n    AllocatePublicVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'ownerAccount',\n          'newPublicVirtualInterfaceAllocation'\n        ],\n        members: {\n          connectionId: {},\n          ownerAccount: {},\n          newPublicVirtualInterfaceAllocation: {\n            type: 'structure',\n            required: [\n              'virtualInterfaceName',\n              'vlan',\n              'asn'\n            ],\n            members: {\n              virtualInterfaceName: {},\n              vlan: {\n                type: 'integer'\n              },\n              asn: {\n                type: 'integer'\n              },\n              authKey: {},\n              amazonAddress: {},\n              customerAddress: {},\n              addressFamily: {},\n              routeFilterPrefixes: {\n                shape: 'S5'\n              },\n              tags: {\n                shape: 'S10'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        shape: 'S1o'\n      }\n    },\n    AllocateTransitVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'ownerAccount',\n          'newTransitVirtualInterfaceAllocation'\n        ],\n        members: {\n          connectionId: {},\n          ownerAccount: {},\n          newTransitVirtualInterfaceAllocation: {\n            type: 'structure',\n            members: {\n              virtualInterfaceName: {},\n              vlan: {\n                type: 'integer'\n              },\n              asn: {\n                type: 'integer'\n              },\n              mtu: {\n                type: 'integer'\n              },\n              authKey: {},\n              amazonAddress: {},\n              customerAddress: {},\n              addressFamily: {},\n              tags: {\n                shape: 'S10'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterface: {\n            shape: 'S1o'\n          }\n        }\n      }\n    },\n    AssociateConnectionWithLag: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'lagId'\n        ],\n        members: {\n          connectionId: {},\n          lagId: {}\n        }\n      },\n      output: {\n        shape: 'So'\n      }\n    },\n    AssociateHostedConnection: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'parentConnectionId'\n        ],\n        members: {\n          connectionId: {},\n          parentConnectionId: {}\n        }\n      },\n      output: {\n        shape: 'So'\n      }\n    },\n    AssociateMacSecKey: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId'\n        ],\n        members: {\n          connectionId: {},\n          secretARN: {},\n          ckn: {},\n          cak: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          connectionId: {},\n          macSecKeys: {\n            shape: 'S18'\n          }\n        }\n      }\n    },\n    AssociateVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'virtualInterfaceId',\n          'connectionId'\n        ],\n        members: {\n          virtualInterfaceId: {},\n          connectionId: {}\n        }\n      },\n      output: {\n        shape: 'S1o'\n      }\n    },\n    ConfirmConnection: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId'\n        ],\n        members: {\n          connectionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          connectionState: {}\n        }\n      }\n    },\n    ConfirmCustomerAgreement: {\n      input: {\n        type: 'structure',\n        members: {\n          agreementName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {}\n        }\n      }\n    },\n    ConfirmPrivateVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'virtualInterfaceId'\n        ],\n        members: {\n          virtualInterfaceId: {},\n          virtualGatewayId: {},\n          directConnectGatewayId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterfaceState: {}\n        }\n      }\n    },\n    ConfirmPublicVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'virtualInterfaceId'\n        ],\n        members: {\n          virtualInterfaceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterfaceState: {}\n        }\n      }\n    },\n    ConfirmTransitVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'virtualInterfaceId',\n          'directConnectGatewayId'\n        ],\n        members: {\n          virtualInterfaceId: {},\n          directConnectGatewayId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterfaceState: {}\n        }\n      }\n    },\n    CreateBGPPeer: {\n      input: {\n        type: 'structure',\n        members: {\n          virtualInterfaceId: {},\n          newBGPPeer: {\n            type: 'structure',\n            members: {\n              asn: {\n                type: 'integer'\n              },\n              authKey: {},\n              addressFamily: {},\n              amazonAddress: {},\n              customerAddress: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterface: {\n            shape: 'S1o'\n          }\n        }\n      }\n    },\n    CreateConnection: {\n      input: {\n        type: 'structure',\n        required: [\n          'location',\n          'bandwidth',\n          'connectionName'\n        ],\n        members: {\n          location: {},\n          bandwidth: {},\n          connectionName: {},\n          lagId: {},\n          tags: {\n            shape: 'S10'\n          },\n          providerName: {},\n          requestMACSec: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        shape: 'So'\n      }\n    },\n    CreateDirectConnectGateway: {\n      input: {\n        type: 'structure',\n        required: [\n          'directConnectGatewayName'\n        ],\n        members: {\n          directConnectGatewayName: {},\n          amazonSideAsn: {\n            type: 'long'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGateway: {\n            shape: 'S2v'\n          }\n        }\n      }\n    },\n    CreateDirectConnectGatewayAssociation: {\n      input: {\n        type: 'structure',\n        required: [\n          'directConnectGatewayId'\n        ],\n        members: {\n          directConnectGatewayId: {},\n          gatewayId: {},\n          addAllowedPrefixesToDirectConnectGateway: {\n            shape: 'S5'\n          },\n          virtualGatewayId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGatewayAssociation: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    CreateDirectConnectGatewayAssociationProposal: {\n      input: {\n        type: 'structure',\n        required: [\n          'directConnectGatewayId',\n          'directConnectGatewayOwnerAccount',\n          'gatewayId'\n        ],\n        members: {\n          directConnectGatewayId: {},\n          directConnectGatewayOwnerAccount: {},\n          gatewayId: {},\n          addAllowedPrefixesToDirectConnectGateway: {\n            shape: 'S5'\n          },\n          removeAllowedPrefixesToDirectConnectGateway: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGatewayAssociationProposal: {\n            shape: 'S32'\n          }\n        }\n      }\n    },\n    CreateInterconnect: {\n      input: {\n        type: 'structure',\n        required: [\n          'interconnectName',\n          'bandwidth',\n          'location'\n        ],\n        members: {\n          interconnectName: {},\n          bandwidth: {},\n          location: {},\n          lagId: {},\n          tags: {\n            shape: 'S10'\n          },\n          providerName: {}\n        }\n      },\n      output: {\n        shape: 'S36'\n      }\n    },\n    CreateLag: {\n      input: {\n        type: 'structure',\n        required: [\n          'numberOfConnections',\n          'location',\n          'connectionsBandwidth',\n          'lagName'\n        ],\n        members: {\n          numberOfConnections: {\n            type: 'integer'\n          },\n          location: {},\n          connectionsBandwidth: {},\n          lagName: {},\n          connectionId: {},\n          tags: {\n            shape: 'S10'\n          },\n          childConnectionTags: {\n            shape: 'S10'\n          },\n          providerName: {},\n          requestMACSec: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        shape: 'S3b'\n      }\n    },\n    CreatePrivateVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'newPrivateVirtualInterface'\n        ],\n        members: {\n          connectionId: {},\n          newPrivateVirtualInterface: {\n            type: 'structure',\n            required: [\n              'virtualInterfaceName',\n              'vlan',\n              'asn'\n            ],\n            members: {\n              virtualInterfaceName: {},\n              vlan: {\n                type: 'integer'\n              },\n              asn: {\n                type: 'integer'\n              },\n              mtu: {\n                type: 'integer'\n              },\n              authKey: {},\n              amazonAddress: {},\n              customerAddress: {},\n              addressFamily: {},\n              virtualGatewayId: {},\n              directConnectGatewayId: {},\n              tags: {\n                shape: 'S10'\n              },\n              enableSiteLink: {\n                type: 'boolean'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        shape: 'S1o'\n      }\n    },\n    CreatePublicVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'newPublicVirtualInterface'\n        ],\n        members: {\n          connectionId: {},\n          newPublicVirtualInterface: {\n            type: 'structure',\n            required: [\n              'virtualInterfaceName',\n              'vlan',\n              'asn'\n            ],\n            members: {\n              virtualInterfaceName: {},\n              vlan: {\n                type: 'integer'\n              },\n              asn: {\n                type: 'integer'\n              },\n              authKey: {},\n              amazonAddress: {},\n              customerAddress: {},\n              addressFamily: {},\n              routeFilterPrefixes: {\n                shape: 'S5'\n              },\n              tags: {\n                shape: 'S10'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        shape: 'S1o'\n      }\n    },\n    CreateTransitVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'newTransitVirtualInterface'\n        ],\n        members: {\n          connectionId: {},\n          newTransitVirtualInterface: {\n            type: 'structure',\n            members: {\n              virtualInterfaceName: {},\n              vlan: {\n                type: 'integer'\n              },\n              asn: {\n                type: 'integer'\n              },\n              mtu: {\n                type: 'integer'\n              },\n              authKey: {},\n              amazonAddress: {},\n              customerAddress: {},\n              addressFamily: {},\n              directConnectGatewayId: {},\n              tags: {\n                shape: 'S10'\n              },\n              enableSiteLink: {\n                type: 'boolean'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterface: {\n            shape: 'S1o'\n          }\n        }\n      }\n    },\n    DeleteBGPPeer: {\n      input: {\n        type: 'structure',\n        members: {\n          virtualInterfaceId: {},\n          asn: {\n            type: 'integer'\n          },\n          customerAddress: {},\n          bgpPeerId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterface: {\n            shape: 'S1o'\n          }\n        }\n      }\n    },\n    DeleteConnection: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId'\n        ],\n        members: {\n          connectionId: {}\n        }\n      },\n      output: {\n        shape: 'So'\n      }\n    },\n    DeleteDirectConnectGateway: {\n      input: {\n        type: 'structure',\n        required: [\n          'directConnectGatewayId'\n        ],\n        members: {\n          directConnectGatewayId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGateway: {\n            shape: 'S2v'\n          }\n        }\n      }\n    },\n    DeleteDirectConnectGatewayAssociation: {\n      input: {\n        type: 'structure',\n        members: {\n          associationId: {},\n          directConnectGatewayId: {},\n          virtualGatewayId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGatewayAssociation: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    DeleteDirectConnectGatewayAssociationProposal: {\n      input: {\n        type: 'structure',\n        required: [\n          'proposalId'\n        ],\n        members: {\n          proposalId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGatewayAssociationProposal: {\n            shape: 'S32'\n          }\n        }\n      }\n    },\n    DeleteInterconnect: {\n      input: {\n        type: 'structure',\n        required: [\n          'interconnectId'\n        ],\n        members: {\n          interconnectId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          interconnectState: {}\n        }\n      }\n    },\n    DeleteLag: {\n      input: {\n        type: 'structure',\n        required: [\n          'lagId'\n        ],\n        members: {\n          lagId: {}\n        }\n      },\n      output: {\n        shape: 'S3b'\n      }\n    },\n    DeleteVirtualInterface: {\n      input: {\n        type: 'structure',\n        required: [\n          'virtualInterfaceId'\n        ],\n        members: {\n          virtualInterfaceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterfaceState: {}\n        }\n      }\n    },\n    DescribeConnectionLoa: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId'\n        ],\n        members: {\n          connectionId: {},\n          providerName: {},\n          loaContentType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          loa: {\n            shape: 'S44'\n          }\n        }\n      },\n      deprecated: true\n    },\n    DescribeConnections: {\n      input: {\n        type: 'structure',\n        members: {\n          connectionId: {}\n        }\n      },\n      output: {\n        shape: 'S47'\n      }\n    },\n    DescribeConnectionsOnInterconnect: {\n      input: {\n        type: 'structure',\n        required: [\n          'interconnectId'\n        ],\n        members: {\n          interconnectId: {}\n        }\n      },\n      output: {\n        shape: 'S47'\n      },\n      deprecated: true\n    },\n    DescribeCustomerMetadata: {\n      output: {\n        type: 'structure',\n        members: {\n          agreements: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                agreementName: {},\n                status: {}\n              }\n            }\n          },\n          nniPartnerType: {}\n        }\n      }\n    },\n    DescribeDirectConnectGatewayAssociationProposals: {\n      input: {\n        type: 'structure',\n        members: {\n          directConnectGatewayId: {},\n          proposalId: {},\n          associatedGatewayId: {},\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGatewayAssociationProposals: {\n            type: 'list',\n            member: {\n              shape: 'S32'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    DescribeDirectConnectGatewayAssociations: {\n      input: {\n        type: 'structure',\n        members: {\n          associationId: {},\n          associatedGatewayId: {},\n          directConnectGatewayId: {},\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {},\n          virtualGatewayId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGatewayAssociations: {\n            type: 'list',\n            member: {\n              shape: 'S9'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    DescribeDirectConnectGatewayAttachments: {\n      input: {\n        type: 'structure',\n        members: {\n          directConnectGatewayId: {},\n          virtualInterfaceId: {},\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGatewayAttachments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                directConnectGatewayId: {},\n                virtualInterfaceId: {},\n                virtualInterfaceRegion: {},\n                virtualInterfaceOwnerAccount: {},\n                attachmentState: {},\n                attachmentType: {},\n                stateChangeError: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    DescribeDirectConnectGateways: {\n      input: {\n        type: 'structure',\n        members: {\n          directConnectGatewayId: {},\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGateways: {\n            type: 'list',\n            member: {\n              shape: 'S2v'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    DescribeHostedConnections: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId'\n        ],\n        members: {\n          connectionId: {}\n        }\n      },\n      output: {\n        shape: 'S47'\n      }\n    },\n    DescribeInterconnectLoa: {\n      input: {\n        type: 'structure',\n        required: [\n          'interconnectId'\n        ],\n        members: {\n          interconnectId: {},\n          providerName: {},\n          loaContentType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          loa: {\n            shape: 'S44'\n          }\n        }\n      },\n      deprecated: true\n    },\n    DescribeInterconnects: {\n      input: {\n        type: 'structure',\n        members: {\n          interconnectId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          interconnects: {\n            type: 'list',\n            member: {\n              shape: 'S36'\n            }\n          }\n        }\n      }\n    },\n    DescribeLags: {\n      input: {\n        type: 'structure',\n        members: {\n          lagId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          lags: {\n            type: 'list',\n            member: {\n              shape: 'S3b'\n            }\n          }\n        }\n      }\n    },\n    DescribeLoa: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId'\n        ],\n        members: {\n          connectionId: {},\n          providerName: {},\n          loaContentType: {}\n        }\n      },\n      output: {\n        shape: 'S44'\n      }\n    },\n    DescribeLocations: {\n      output: {\n        type: 'structure',\n        members: {\n          locations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                locationCode: {},\n                locationName: {},\n                region: {},\n                availablePortSpeeds: {\n                  type: 'list',\n                  member: {}\n                },\n                availableProviders: {\n                  type: 'list',\n                  member: {}\n                },\n                availableMacSecPortSpeeds: {\n                  type: 'list',\n                  member: {}\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeRouterConfiguration: {\n      input: {\n        type: 'structure',\n        required: [\n          'virtualInterfaceId'\n        ],\n        members: {\n          virtualInterfaceId: {},\n          routerTypeIdentifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          customerRouterConfig: {},\n          router: {\n            type: 'structure',\n            members: {\n              vendor: {},\n              platform: {},\n              software: {},\n              xsltTemplateName: {},\n              xsltTemplateNameForMacSec: {},\n              routerTypeIdentifier: {}\n            }\n          },\n          virtualInterfaceId: {},\n          virtualInterfaceName: {}\n        }\n      }\n    },\n    DescribeTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArns'\n        ],\n        members: {\n          resourceArns: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          resourceTags: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                resourceArn: {},\n                tags: {\n                  shape: 'S10'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeVirtualGateways: {\n      output: {\n        type: 'structure',\n        members: {\n          virtualGateways: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                virtualGatewayId: {},\n                virtualGatewayState: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeVirtualInterfaces: {\n      input: {\n        type: 'structure',\n        members: {\n          connectionId: {},\n          virtualInterfaceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterfaces: {\n            type: 'list',\n            member: {\n              shape: 'S1o'\n            }\n          }\n        }\n      }\n    },\n    DisassociateConnectionFromLag: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'lagId'\n        ],\n        members: {\n          connectionId: {},\n          lagId: {}\n        }\n      },\n      output: {\n        shape: 'So'\n      }\n    },\n    DisassociateMacSecKey: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId',\n          'secretARN'\n        ],\n        members: {\n          connectionId: {},\n          secretARN: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          connectionId: {},\n          macSecKeys: {\n            shape: 'S18'\n          }\n        }\n      }\n    },\n    ListVirtualInterfaceTestHistory: {\n      input: {\n        type: 'structure',\n        members: {\n          testId: {},\n          virtualInterfaceId: {},\n          bgpPeers: {\n            shape: 'S65'\n          },\n          status: {},\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterfaceTestHistory: {\n            type: 'list',\n            member: {\n              shape: 'S69'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    StartBgpFailoverTest: {\n      input: {\n        type: 'structure',\n        required: [\n          'virtualInterfaceId'\n        ],\n        members: {\n          virtualInterfaceId: {},\n          bgpPeers: {\n            shape: 'S65'\n          },\n          testDurationInMinutes: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterfaceTest: {\n            shape: 'S69'\n          }\n        }\n      }\n    },\n    StopBgpFailoverTest: {\n      input: {\n        type: 'structure',\n        required: [\n          'virtualInterfaceId'\n        ],\n        members: {\n          virtualInterfaceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualInterfaceTest: {\n            shape: 'S69'\n          }\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {},\n          tags: {\n            shape: 'S10'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {},\n          tagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateConnection: {\n      input: {\n        type: 'structure',\n        required: [\n          'connectionId'\n        ],\n        members: {\n          connectionId: {},\n          connectionName: {},\n          encryptionMode: {}\n        }\n      },\n      output: {\n        shape: 'So'\n      }\n    },\n    UpdateDirectConnectGateway: {\n      input: {\n        type: 'structure',\n        required: [\n          'directConnectGatewayId',\n          'newDirectConnectGatewayName'\n        ],\n        members: {\n          directConnectGatewayId: {},\n          newDirectConnectGatewayName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGateway: {\n            shape: 'S2v'\n          }\n        }\n      }\n    },\n    UpdateDirectConnectGatewayAssociation: {\n      input: {\n        type: 'structure',\n        members: {\n          associationId: {},\n          addAllowedPrefixesToDirectConnectGateway: {\n            shape: 'S5'\n          },\n          removeAllowedPrefixesToDirectConnectGateway: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          directConnectGatewayAssociation: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    UpdateLag: {\n      input: {\n        type: 'structure',\n        required: [\n          'lagId'\n        ],\n        members: {\n          lagId: {},\n          lagName: {},\n          minimumLinks: {\n            type: 'integer'\n          },\n          encryptionMode: {}\n        }\n      },\n      output: {\n        shape: 'S3b'\n      }\n    },\n    UpdateVirtualInterfaceAttributes: {\n      input: {\n        type: 'structure',\n        required: [\n          'virtualInterfaceId'\n        ],\n        members: {\n          virtualInterfaceId: {},\n          mtu: {\n            type: 'integer'\n          },\n          enableSiteLink: {\n            type: 'boolean'\n          },\n          virtualInterfaceName: {}\n        }\n      },\n      output: {\n        shape: 'S1o'\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          cidr: {}\n        }\n      }\n    },\n    S9: {\n      type: 'structure',\n      members: {\n        directConnectGatewayId: {},\n        directConnectGatewayOwnerAccount: {},\n        associationState: {},\n        stateChangeError: {},\n        associatedGateway: {\n          shape: 'Sc'\n        },\n        associationId: {},\n        allowedPrefixesToDirectConnectGateway: {\n          shape: 'S5'\n        },\n        virtualGatewayId: {},\n        virtualGatewayRegion: {\n          type: 'string',\n          deprecated: true\n        },\n        virtualGatewayOwnerAccount: {}\n      }\n    },\n    Sc: {\n      type: 'structure',\n      members: {\n        id: {},\n        type: {},\n        ownerAccount: {},\n        region: {}\n      }\n    },\n    So: {\n      type: 'structure',\n      members: {\n        ownerAccount: {},\n        connectionId: {},\n        connectionName: {},\n        connectionState: {},\n        region: {},\n        location: {},\n        bandwidth: {},\n        vlan: {\n          type: 'integer'\n        },\n        partnerName: {},\n        loaIssueTime: {\n          type: 'timestamp'\n        },\n        lagId: {},\n        awsDevice: {\n          shape: 'Sv'\n        },\n        jumboFrameCapable: {\n          type: 'boolean'\n        },\n        awsDeviceV2: {},\n        awsLogicalDeviceId: {},\n        hasLogicalRedundancy: {},\n        tags: {\n          shape: 'S10'\n        },\n        providerName: {},\n        macSecCapable: {\n          type: 'boolean'\n        },\n        portEncryptionStatus: {},\n        encryptionMode: {},\n        macSecKeys: {\n          shape: 'S18'\n        }\n      }\n    },\n    Sv: {\n      type: 'string',\n      deprecated: true\n    },\n    S10: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'key'\n        ],\n        members: {\n          key: {},\n          value: {}\n        }\n      }\n    },\n    S18: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          secretARN: {},\n          ckn: {},\n          state: {},\n          startOn: {}\n        }\n      }\n    },\n    S1o: {\n      type: 'structure',\n      members: {\n        ownerAccount: {},\n        virtualInterfaceId: {},\n        location: {},\n        connectionId: {},\n        virtualInterfaceType: {},\n        virtualInterfaceName: {},\n        vlan: {\n          type: 'integer'\n        },\n        asn: {\n          type: 'integer'\n        },\n        amazonSideAsn: {\n          type: 'long'\n        },\n        authKey: {},\n        amazonAddress: {},\n        customerAddress: {},\n        addressFamily: {},\n        virtualInterfaceState: {},\n        customerRouterConfig: {},\n        mtu: {\n          type: 'integer'\n        },\n        jumboFrameCapable: {\n          type: 'boolean'\n        },\n        virtualGatewayId: {},\n        directConnectGatewayId: {},\n        routeFilterPrefixes: {\n          shape: 'S5'\n        },\n        bgpPeers: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              bgpPeerId: {},\n              asn: {\n                type: 'integer'\n              },\n              authKey: {},\n              addressFamily: {},\n              amazonAddress: {},\n              customerAddress: {},\n              bgpPeerState: {},\n              bgpStatus: {},\n              awsDeviceV2: {},\n              awsLogicalDeviceId: {}\n            }\n          }\n        },\n        region: {},\n        awsDeviceV2: {},\n        awsLogicalDeviceId: {},\n        tags: {\n          shape: 'S10'\n        },\n        siteLinkEnabled: {\n          type: 'boolean'\n        }\n      }\n    },\n    S2v: {\n      type: 'structure',\n      members: {\n        directConnectGatewayId: {},\n        directConnectGatewayName: {},\n        amazonSideAsn: {\n          type: 'long'\n        },\n        ownerAccount: {},\n        directConnectGatewayState: {},\n        stateChangeError: {}\n      }\n    },\n    S32: {\n      type: 'structure',\n      members: {\n        proposalId: {},\n        directConnectGatewayId: {},\n        directConnectGatewayOwnerAccount: {},\n        proposalState: {},\n        associatedGateway: {\n          shape: 'Sc'\n        },\n        existingAllowedPrefixesToDirectConnectGateway: {\n          shape: 'S5'\n        },\n        requestedAllowedPrefixesToDirectConnectGateway: {\n          shape: 'S5'\n        }\n      }\n    },\n    S36: {\n      type: 'structure',\n      members: {\n        interconnectId: {},\n        interconnectName: {},\n        interconnectState: {},\n        region: {},\n        location: {},\n        bandwidth: {},\n        loaIssueTime: {\n          type: 'timestamp'\n        },\n        lagId: {},\n        awsDevice: {\n          shape: 'Sv'\n        },\n        jumboFrameCapable: {\n          type: 'boolean'\n        },\n        awsDeviceV2: {},\n        awsLogicalDeviceId: {},\n        hasLogicalRedundancy: {},\n        tags: {\n          shape: 'S10'\n        },\n        providerName: {}\n      }\n    },\n    S3b: {\n      type: 'structure',\n      members: {\n        connectionsBandwidth: {},\n        numberOfConnections: {\n          type: 'integer'\n        },\n        lagId: {},\n        ownerAccount: {},\n        lagName: {},\n        lagState: {},\n        location: {},\n        region: {},\n        minimumLinks: {\n          type: 'integer'\n        },\n        awsDevice: {\n          shape: 'Sv'\n        },\n        awsDeviceV2: {},\n        awsLogicalDeviceId: {},\n        connections: {\n          shape: 'S3d'\n        },\n        allowsHostedConnections: {\n          type: 'boolean'\n        },\n        jumboFrameCapable: {\n          type: 'boolean'\n        },\n        hasLogicalRedundancy: {},\n        tags: {\n          shape: 'S10'\n        },\n        providerName: {},\n        macSecCapable: {\n          type: 'boolean'\n        },\n        encryptionMode: {},\n        macSecKeys: {\n          shape: 'S18'\n        }\n      }\n    },\n    S3d: {\n      type: 'list',\n      member: {\n        shape: 'So'\n      }\n    },\n    S44: {\n      type: 'structure',\n      members: {\n        loaContent: {\n          type: 'blob'\n        },\n        loaContentType: {}\n      }\n    },\n    S47: {\n      type: 'structure',\n      members: {\n        connections: {\n          shape: 'S3d'\n        }\n      }\n    },\n    S65: {\n      type: 'list',\n      member: {}\n    },\n    S69: {\n      type: 'structure',\n      members: {\n        testId: {},\n        virtualInterfaceId: {},\n        bgpPeers: {\n          shape: 'S65'\n        },\n        status: {},\n        ownerAccount: {},\n        testDurationInMinutes: {\n          type: 'integer'\n        },\n        startTime: {\n          type: 'timestamp'\n        },\n        endTime: {\n          type: 'timestamp'\n        }\n      }\n    }\n  }\n}"]}