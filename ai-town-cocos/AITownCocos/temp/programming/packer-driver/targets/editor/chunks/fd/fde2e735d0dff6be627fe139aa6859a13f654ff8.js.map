{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/medical-imaging-2023-07-19.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","protocol","protocols","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CopyImageSet","http","requestUri","responseCode","input","type","required","members","datastoreId","location","locationName","sourceImageSetId","copyImageSetInformation","sourceImageSet","latestVersionId","destinationImageSet","imageSetId","payload","output","sourceImageSetProperties","imageSetState","imageSetWorkflowStatus","createdAt","updatedAt","imageSetArn","destinationImageSetProperties","endpoint","hostPrefix","CreateDatastore","datastoreName","clientToken","idempotencyToken","tags","shape","kmsKeyArn","datastoreStatus","idempotent","DeleteDatastore","method","DeleteImageSet","GetDICOMImportJob","jobId","jobProperties","jobName","jobStatus","dataAccessRoleArn","endedAt","submittedAt","inputS3Uri","outputS3Uri","message","GetDatastore","datastoreProperties","datastoreArn","GetImageFrame","imageFrameInformation","imageFrameId","imageFrameBlob","streaming","contentType","GetImageSet","versionId","deletedAt","GetImageSetMetadata","imageSetMetadataBlob","contentEncoding","ListDICOMImportJobs","nextToken","maxResults","jobSummaries","member","ListDatastores","datastoreSummaries","ListImageSetVersions","imageSetPropertiesList","ImageSetWorkflowStatus","ListTagsForResource","resourceArn","SearchImageSets","searchCriteria","filters","values","DICOMPatientId","DICOMAccessionNumber","DICOMStudyId","DICOMStudyInstanceUID","DICOMSeriesInstanceUID","DICOMStudyDateAndTime","DICOMStudyDate","DICOMStudyTime","union","operator","sort","sensitive","imageSetsMetadataSummaries","DICOMTags","DICOMPatientName","DICOMPatientBirthDate","DICOMPatientSex","DICOMStudyDescription","DICOMNumberOfStudyRelatedSeries","DICOMNumberOfStudyRelatedInstances","DICOMSeriesModality","DICOMSeriesBodyPart","DICOMSeriesNumber","StartDICOMImportJob","inputOwnerAccountId","TagResource","UntagResource","tagKeys","UpdateImageSetMetadata","updateImageSetMetadataUpdates","DICOMUpdates","removableAttributes","updatableAttributes","shapes","Si","key","value","S23","S24","S25","S26","S27","S29","S2a","S2c","sortOrder","sortField","S35"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2023-07-19',\n    endpointPrefix: 'medical-imaging',\n    protocol: 'rest-json',\n    protocols: [\n      'rest-json'\n    ],\n    serviceFullName: 'AWS Health Imaging',\n    serviceId: 'Medical Imaging',\n    signatureVersion: 'v4',\n    signingName: 'medical-imaging',\n    uid: 'medical-imaging-2023-07-19'\n  },\n  operations: {\n    CopyImageSet: {\n      http: {\n        requestUri: '/datastore/{datastoreId}/imageSet/{sourceImageSetId}/copyImageSet',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'sourceImageSetId',\n          'copyImageSetInformation'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          sourceImageSetId: {\n            location: 'uri',\n            locationName: 'sourceImageSetId'\n          },\n          copyImageSetInformation: {\n            type: 'structure',\n            required: [\n              'sourceImageSet'\n            ],\n            members: {\n              sourceImageSet: {\n                type: 'structure',\n                required: [\n                  'latestVersionId'\n                ],\n                members: {\n                  latestVersionId: {}\n                }\n              },\n              destinationImageSet: {\n                type: 'structure',\n                required: [\n                  'imageSetId',\n                  'latestVersionId'\n                ],\n                members: {\n                  imageSetId: {},\n                  latestVersionId: {}\n                }\n              }\n            }\n          }\n        },\n        payload: 'copyImageSetInformation'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'sourceImageSetProperties',\n          'destinationImageSetProperties'\n        ],\n        members: {\n          datastoreId: {},\n          sourceImageSetProperties: {\n            type: 'structure',\n            required: [\n              'imageSetId',\n              'latestVersionId'\n            ],\n            members: {\n              imageSetId: {},\n              latestVersionId: {},\n              imageSetState: {},\n              imageSetWorkflowStatus: {},\n              createdAt: {\n                type: 'timestamp'\n              },\n              updatedAt: {\n                type: 'timestamp'\n              },\n              imageSetArn: {}\n            }\n          },\n          destinationImageSetProperties: {\n            type: 'structure',\n            required: [\n              'imageSetId',\n              'latestVersionId'\n            ],\n            members: {\n              imageSetId: {},\n              latestVersionId: {},\n              imageSetState: {},\n              imageSetWorkflowStatus: {},\n              createdAt: {\n                type: 'timestamp'\n              },\n              updatedAt: {\n                type: 'timestamp'\n              },\n              imageSetArn: {}\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'runtime-'\n      }\n    },\n    CreateDatastore: {\n      http: {\n        requestUri: '/datastore',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clientToken'\n        ],\n        members: {\n          datastoreName: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'Si'\n          },\n          kmsKeyArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'datastoreStatus'\n        ],\n        members: {\n          datastoreId: {},\n          datastoreStatus: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteDatastore: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/datastore/{datastoreId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'datastoreStatus'\n        ],\n        members: {\n          datastoreId: {},\n          datastoreStatus: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteImageSet: {\n      http: {\n        requestUri: '/datastore/{datastoreId}/imageSet/{imageSetId}/deleteImageSet',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'imageSetId'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          imageSetId: {\n            location: 'uri',\n            locationName: 'imageSetId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'imageSetId',\n          'imageSetState',\n          'imageSetWorkflowStatus'\n        ],\n        members: {\n          datastoreId: {},\n          imageSetId: {},\n          imageSetState: {},\n          imageSetWorkflowStatus: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'runtime-'\n      },\n      idempotent: true\n    },\n    GetDICOMImportJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/getDICOMImportJob/datastore/{datastoreId}/job/{jobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'jobId'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          jobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobProperties'\n        ],\n        members: {\n          jobProperties: {\n            type: 'structure',\n            required: [\n              'jobId',\n              'jobName',\n              'jobStatus',\n              'datastoreId',\n              'dataAccessRoleArn',\n              'inputS3Uri',\n              'outputS3Uri'\n            ],\n            members: {\n              jobId: {},\n              jobName: {},\n              jobStatus: {},\n              datastoreId: {},\n              dataAccessRoleArn: {},\n              endedAt: {\n                type: 'timestamp'\n              },\n              submittedAt: {\n                type: 'timestamp'\n              },\n              inputS3Uri: {},\n              outputS3Uri: {},\n              message: {}\n            }\n          }\n        }\n      }\n    },\n    GetDatastore: {\n      http: {\n        method: 'GET',\n        requestUri: '/datastore/{datastoreId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'datastoreProperties'\n        ],\n        members: {\n          datastoreProperties: {\n            type: 'structure',\n            required: [\n              'datastoreId',\n              'datastoreName',\n              'datastoreStatus'\n            ],\n            members: {\n              datastoreId: {},\n              datastoreName: {},\n              datastoreStatus: {},\n              kmsKeyArn: {},\n              datastoreArn: {},\n              createdAt: {\n                type: 'timestamp'\n              },\n              updatedAt: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetImageFrame: {\n      http: {\n        requestUri: '/datastore/{datastoreId}/imageSet/{imageSetId}/getImageFrame',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'imageSetId',\n          'imageFrameInformation'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          imageSetId: {\n            location: 'uri',\n            locationName: 'imageSetId'\n          },\n          imageFrameInformation: {\n            type: 'structure',\n            required: [\n              'imageFrameId'\n            ],\n            members: {\n              imageFrameId: {}\n            }\n          }\n        },\n        payload: 'imageFrameInformation'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'imageFrameBlob'\n        ],\n        members: {\n          imageFrameBlob: {\n            type: 'blob',\n            streaming: true\n          },\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          }\n        },\n        payload: 'imageFrameBlob'\n      },\n      endpoint: {\n        hostPrefix: 'runtime-'\n      }\n    },\n    GetImageSet: {\n      http: {\n        requestUri: '/datastore/{datastoreId}/imageSet/{imageSetId}/getImageSet',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'imageSetId'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          imageSetId: {\n            location: 'uri',\n            locationName: 'imageSetId'\n          },\n          versionId: {\n            location: 'querystring',\n            locationName: 'version'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'imageSetId',\n          'versionId',\n          'imageSetState'\n        ],\n        members: {\n          datastoreId: {},\n          imageSetId: {},\n          versionId: {},\n          imageSetState: {},\n          imageSetWorkflowStatus: {},\n          createdAt: {\n            type: 'timestamp'\n          },\n          updatedAt: {\n            type: 'timestamp'\n          },\n          deletedAt: {\n            type: 'timestamp'\n          },\n          message: {},\n          imageSetArn: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'runtime-'\n      }\n    },\n    GetImageSetMetadata: {\n      http: {\n        requestUri: '/datastore/{datastoreId}/imageSet/{imageSetId}/getImageSetMetadata',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'imageSetId'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          imageSetId: {\n            location: 'uri',\n            locationName: 'imageSetId'\n          },\n          versionId: {\n            location: 'querystring',\n            locationName: 'version'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'imageSetMetadataBlob'\n        ],\n        members: {\n          imageSetMetadataBlob: {\n            type: 'blob',\n            streaming: true\n          },\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          contentEncoding: {\n            location: 'header',\n            locationName: 'Content-Encoding'\n          }\n        },\n        payload: 'imageSetMetadataBlob'\n      },\n      endpoint: {\n        hostPrefix: 'runtime-'\n      }\n    },\n    ListDICOMImportJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/listDICOMImportJobs/datastore/{datastoreId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          jobStatus: {\n            location: 'querystring',\n            locationName: 'jobStatus'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobSummaries'\n        ],\n        members: {\n          jobSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'jobId',\n                'jobName',\n                'jobStatus',\n                'datastoreId'\n              ],\n              members: {\n                jobId: {},\n                jobName: {},\n                jobStatus: {},\n                datastoreId: {},\n                dataAccessRoleArn: {},\n                endedAt: {\n                  type: 'timestamp'\n                },\n                submittedAt: {\n                  type: 'timestamp'\n                },\n                message: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDatastores: {\n      http: {\n        method: 'GET',\n        requestUri: '/datastore',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          datastoreStatus: {\n            location: 'querystring',\n            locationName: 'datastoreStatus'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datastoreSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'datastoreId',\n                'datastoreName',\n                'datastoreStatus'\n              ],\n              members: {\n                datastoreId: {},\n                datastoreName: {},\n                datastoreStatus: {},\n                datastoreArn: {},\n                createdAt: {\n                  type: 'timestamp'\n                },\n                updatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListImageSetVersions: {\n      http: {\n        requestUri: '/datastore/{datastoreId}/imageSet/{imageSetId}/listImageSetVersions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'imageSetId'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          imageSetId: {\n            location: 'uri',\n            locationName: 'imageSetId'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'imageSetPropertiesList'\n        ],\n        members: {\n          imageSetPropertiesList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'imageSetId',\n                'versionId',\n                'imageSetState'\n              ],\n              members: {\n                imageSetId: {},\n                versionId: {},\n                imageSetState: {},\n                ImageSetWorkflowStatus: {},\n                createdAt: {\n                  type: 'timestamp'\n                },\n                updatedAt: {\n                  type: 'timestamp'\n                },\n                deletedAt: {\n                  type: 'timestamp'\n                },\n                message: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'runtime-'\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'tags'\n        ],\n        members: {\n          tags: {\n            shape: 'Si'\n          }\n        }\n      }\n    },\n    SearchImageSets: {\n      http: {\n        requestUri: '/datastore/{datastoreId}/searchImageSets',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          searchCriteria: {\n            type: 'structure',\n            members: {\n              filters: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'values',\n                    'operator'\n                  ],\n                  members: {\n                    values: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          DICOMPatientId: {\n                            shape: 'S23'\n                          },\n                          DICOMAccessionNumber: {\n                            shape: 'S24'\n                          },\n                          DICOMStudyId: {\n                            shape: 'S25'\n                          },\n                          DICOMStudyInstanceUID: {\n                            shape: 'S26'\n                          },\n                          DICOMSeriesInstanceUID: {\n                            shape: 'S27'\n                          },\n                          createdAt: {\n                            type: 'timestamp'\n                          },\n                          updatedAt: {\n                            type: 'timestamp'\n                          },\n                          DICOMStudyDateAndTime: {\n                            type: 'structure',\n                            required: [\n                              'DICOMStudyDate'\n                            ],\n                            members: {\n                              DICOMStudyDate: {\n                                shape: 'S29'\n                              },\n                              DICOMStudyTime: {\n                                shape: 'S2a'\n                              }\n                            }\n                          }\n                        },\n                        union: true\n                      }\n                    },\n                    operator: {}\n                  }\n                }\n              },\n              sort: {\n                shape: 'S2c'\n              }\n            },\n            sensitive: true\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        },\n        payload: 'searchCriteria'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'imageSetsMetadataSummaries'\n        ],\n        members: {\n          imageSetsMetadataSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'imageSetId'\n              ],\n              members: {\n                imageSetId: {},\n                version: {\n                  type: 'integer'\n                },\n                createdAt: {\n                  type: 'timestamp'\n                },\n                updatedAt: {\n                  type: 'timestamp'\n                },\n                DICOMTags: {\n                  type: 'structure',\n                  members: {\n                    DICOMPatientId: {\n                      shape: 'S23'\n                    },\n                    DICOMPatientName: {\n                      type: 'string',\n                      sensitive: true\n                    },\n                    DICOMPatientBirthDate: {\n                      type: 'string',\n                      sensitive: true\n                    },\n                    DICOMPatientSex: {\n                      type: 'string',\n                      sensitive: true\n                    },\n                    DICOMStudyInstanceUID: {\n                      shape: 'S26'\n                    },\n                    DICOMStudyId: {\n                      shape: 'S25'\n                    },\n                    DICOMStudyDescription: {\n                      type: 'string',\n                      sensitive: true\n                    },\n                    DICOMNumberOfStudyRelatedSeries: {\n                      type: 'integer'\n                    },\n                    DICOMNumberOfStudyRelatedInstances: {\n                      type: 'integer'\n                    },\n                    DICOMAccessionNumber: {\n                      shape: 'S24'\n                    },\n                    DICOMSeriesInstanceUID: {\n                      shape: 'S27'\n                    },\n                    DICOMSeriesModality: {\n                      type: 'string',\n                      sensitive: true\n                    },\n                    DICOMSeriesBodyPart: {\n                      type: 'string',\n                      sensitive: true\n                    },\n                    DICOMSeriesNumber: {\n                      type: 'integer',\n                      sensitive: true\n                    },\n                    DICOMStudyDate: {\n                      shape: 'S29'\n                    },\n                    DICOMStudyTime: {\n                      shape: 'S2a'\n                    }\n                  }\n                }\n              }\n            }\n          },\n          sort: {\n            shape: 'S2c'\n          },\n          nextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'runtime-'\n      }\n    },\n    StartDICOMImportJob: {\n      http: {\n        requestUri: '/startDICOMImportJob/datastore/{datastoreId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'dataAccessRoleArn',\n          'clientToken',\n          'datastoreId',\n          'inputS3Uri',\n          'outputS3Uri'\n        ],\n        members: {\n          jobName: {},\n          dataAccessRoleArn: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          inputS3Uri: {},\n          outputS3Uri: {},\n          inputOwnerAccountId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'jobId',\n          'jobStatus',\n          'submittedAt'\n        ],\n        members: {\n          datastoreId: {},\n          jobId: {},\n          jobStatus: {},\n          submittedAt: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Si'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateImageSetMetadata: {\n      http: {\n        requestUri: '/datastore/{datastoreId}/imageSet/{imageSetId}/updateImageSetMetadata',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'imageSetId',\n          'latestVersionId',\n          'updateImageSetMetadataUpdates'\n        ],\n        members: {\n          datastoreId: {\n            location: 'uri',\n            locationName: 'datastoreId'\n          },\n          imageSetId: {\n            location: 'uri',\n            locationName: 'imageSetId'\n          },\n          latestVersionId: {\n            location: 'querystring',\n            locationName: 'latestVersion'\n          },\n          updateImageSetMetadataUpdates: {\n            type: 'structure',\n            members: {\n              DICOMUpdates: {\n                type: 'structure',\n                members: {\n                  removableAttributes: {\n                    shape: 'S35'\n                  },\n                  updatableAttributes: {\n                    shape: 'S35'\n                  }\n                }\n              }\n            },\n            union: true\n          }\n        },\n        payload: 'updateImageSetMetadataUpdates'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'datastoreId',\n          'imageSetId',\n          'latestVersionId',\n          'imageSetState'\n        ],\n        members: {\n          datastoreId: {},\n          imageSetId: {},\n          latestVersionId: {},\n          imageSetState: {},\n          imageSetWorkflowStatus: {},\n          createdAt: {\n            type: 'timestamp'\n          },\n          updatedAt: {\n            type: 'timestamp'\n          },\n          message: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'runtime-'\n      }\n    }\n  },\n  shapes: {\n    Si: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S23: {\n      type: 'string',\n      sensitive: true\n    },\n    S24: {\n      type: 'string',\n      sensitive: true\n    },\n    S25: {\n      type: 'string',\n      sensitive: true\n    },\n    S26: {\n      type: 'string',\n      sensitive: true\n    },\n    S27: {\n      type: 'string',\n      sensitive: true\n    },\n    S29: {\n      type: 'string',\n      sensitive: true\n    },\n    S2a: {\n      type: 'string',\n      sensitive: true\n    },\n    S2c: {\n      type: 'structure',\n      required: [\n        'sortOrder',\n        'sortField'\n      ],\n      members: {\n        sortOrder: {},\n        sortField: {}\n      }\n    },\n    S35: {\n      type: 'blob',\n      sensitive: true\n    }\n  }\n}"]}