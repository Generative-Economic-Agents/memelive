{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/b2bi-2022-06-23.min.json"],"names":["version","metadata","apiVersion","auth","endpointPrefix","jsonVersion","protocol","protocols","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","CreateCapability","input","type","required","members","name","configuration","shape","instructionsDocuments","clientToken","idempotencyToken","tags","output","capabilityId","capabilityArn","createdAt","idempotent","CreatePartnership","profileId","email","phone","capabilities","partnershipId","partnershipArn","tradingPartnerId","CreateProfile","businessName","logging","profileArn","logGroupName","CreateTransformer","fileFormat","mappingTemplate","ediType","sampleDocument","transformerId","transformerArn","status","DeleteCapability","DeletePartnership","DeleteProfile","DeleteTransformer","GetCapability","modifiedAt","GetPartnership","GetProfile","GetTransformer","GetTransformerJob","transformerJobId","outputFiles","member","message","ListCapabilities","nextToken","maxResults","ListPartnerships","partnerships","ListProfiles","profiles","ListTagsForResource","ResourceARN","Tags","ListTransformers","transformers","StartTransformerJob","inputFile","outputLocation","TagResource","TestMapping","inputFileContent","mappedFileContent","TestParsing","parsedFileContent","UntagResource","TagKeys","UpdateCapability","UpdatePartnership","UpdateProfile","UpdateTransformer","shapes","S4","edi","inputLocation","union","S6","x12Details","transactionSet","Sa","bucketName","key","Se","Sg","Key","Value","Sn","timestampFormat","Sr","sensitive","Ss","St","S1g"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2022-06-23',\n    auth: [\n      'aws.auth#sigv4'\n    ],\n    endpointPrefix: 'b2bi',\n    jsonVersion: '1.0',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceAbbreviation: 'AWS B2BI',\n    serviceFullName: 'AWS B2B Data Interchange',\n    serviceId: 'b2bi',\n    signatureVersion: 'v4',\n    signingName: 'b2bi',\n    targetPrefix: 'B2BI',\n    uid: 'b2bi-2022-06-23'\n  },\n  operations: {\n    CreateCapability: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'type',\n          'configuration'\n        ],\n        members: {\n          name: {},\n          type: {},\n          configuration: {\n            shape: 'S4'\n          },\n          instructionsDocuments: {\n            shape: 'Se'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'Sg'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'capabilityId',\n          'capabilityArn',\n          'name',\n          'type',\n          'configuration',\n          'createdAt'\n        ],\n        members: {\n          capabilityId: {},\n          capabilityArn: {},\n          name: {},\n          type: {},\n          configuration: {\n            shape: 'S4'\n          },\n          instructionsDocuments: {\n            shape: 'Se'\n          },\n          createdAt: {\n            shape: 'Sn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreatePartnership: {\n      input: {\n        type: 'structure',\n        required: [\n          'profileId',\n          'name',\n          'email',\n          'capabilities'\n        ],\n        members: {\n          profileId: {},\n          name: {},\n          email: {\n            shape: 'Sr'\n          },\n          phone: {\n            shape: 'Ss'\n          },\n          capabilities: {\n            shape: 'St'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'Sg'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'profileId',\n          'partnershipId',\n          'partnershipArn',\n          'createdAt'\n        ],\n        members: {\n          profileId: {},\n          partnershipId: {},\n          partnershipArn: {},\n          name: {},\n          email: {\n            shape: 'Sr'\n          },\n          phone: {\n            shape: 'Ss'\n          },\n          capabilities: {\n            shape: 'St'\n          },\n          tradingPartnerId: {},\n          createdAt: {\n            shape: 'Sn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateProfile: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'phone',\n          'businessName',\n          'logging'\n        ],\n        members: {\n          name: {},\n          email: {\n            shape: 'Sr'\n          },\n          phone: {\n            shape: 'Ss'\n          },\n          businessName: {},\n          logging: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'Sg'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'profileId',\n          'profileArn',\n          'name',\n          'businessName',\n          'phone',\n          'createdAt'\n        ],\n        members: {\n          profileId: {},\n          profileArn: {},\n          name: {},\n          businessName: {},\n          phone: {\n            shape: 'Ss'\n          },\n          email: {\n            shape: 'Sr'\n          },\n          logging: {},\n          logGroupName: {},\n          createdAt: {\n            shape: 'Sn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateTransformer: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'fileFormat',\n          'mappingTemplate',\n          'ediType'\n        ],\n        members: {\n          name: {},\n          fileFormat: {},\n          mappingTemplate: {},\n          ediType: {\n            shape: 'S6'\n          },\n          sampleDocument: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'Sg'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'transformerId',\n          'transformerArn',\n          'name',\n          'fileFormat',\n          'mappingTemplate',\n          'status',\n          'ediType',\n          'createdAt'\n        ],\n        members: {\n          transformerId: {},\n          transformerArn: {},\n          name: {},\n          fileFormat: {},\n          mappingTemplate: {},\n          status: {},\n          ediType: {\n            shape: 'S6'\n          },\n          sampleDocument: {},\n          createdAt: {\n            shape: 'Sn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteCapability: {\n      input: {\n        type: 'structure',\n        required: [\n          'capabilityId'\n        ],\n        members: {\n          capabilityId: {}\n        }\n      },\n      idempotent: true\n    },\n    DeletePartnership: {\n      input: {\n        type: 'structure',\n        required: [\n          'partnershipId'\n        ],\n        members: {\n          partnershipId: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteProfile: {\n      input: {\n        type: 'structure',\n        required: [\n          'profileId'\n        ],\n        members: {\n          profileId: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteTransformer: {\n      input: {\n        type: 'structure',\n        required: [\n          'transformerId'\n        ],\n        members: {\n          transformerId: {}\n        }\n      },\n      idempotent: true\n    },\n    GetCapability: {\n      input: {\n        type: 'structure',\n        required: [\n          'capabilityId'\n        ],\n        members: {\n          capabilityId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'capabilityId',\n          'capabilityArn',\n          'name',\n          'type',\n          'configuration',\n          'createdAt'\n        ],\n        members: {\n          capabilityId: {},\n          capabilityArn: {},\n          name: {},\n          type: {},\n          configuration: {\n            shape: 'S4'\n          },\n          instructionsDocuments: {\n            shape: 'Se'\n          },\n          createdAt: {\n            shape: 'Sn'\n          },\n          modifiedAt: {\n            shape: 'S1g'\n          }\n        }\n      }\n    },\n    GetPartnership: {\n      input: {\n        type: 'structure',\n        required: [\n          'partnershipId'\n        ],\n        members: {\n          partnershipId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'profileId',\n          'partnershipId',\n          'partnershipArn',\n          'createdAt'\n        ],\n        members: {\n          profileId: {},\n          partnershipId: {},\n          partnershipArn: {},\n          name: {},\n          email: {\n            shape: 'Sr'\n          },\n          phone: {\n            shape: 'Ss'\n          },\n          capabilities: {\n            shape: 'St'\n          },\n          tradingPartnerId: {},\n          createdAt: {\n            shape: 'Sn'\n          },\n          modifiedAt: {\n            shape: 'S1g'\n          }\n        }\n      }\n    },\n    GetProfile: {\n      input: {\n        type: 'structure',\n        required: [\n          'profileId'\n        ],\n        members: {\n          profileId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'profileId',\n          'profileArn',\n          'name',\n          'phone',\n          'businessName',\n          'createdAt'\n        ],\n        members: {\n          profileId: {},\n          profileArn: {},\n          name: {},\n          email: {\n            shape: 'Sr'\n          },\n          phone: {\n            shape: 'Ss'\n          },\n          businessName: {},\n          logging: {},\n          logGroupName: {},\n          createdAt: {\n            shape: 'Sn'\n          },\n          modifiedAt: {\n            shape: 'S1g'\n          }\n        }\n      }\n    },\n    GetTransformer: {\n      input: {\n        type: 'structure',\n        required: [\n          'transformerId'\n        ],\n        members: {\n          transformerId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'transformerId',\n          'transformerArn',\n          'name',\n          'fileFormat',\n          'mappingTemplate',\n          'status',\n          'ediType',\n          'createdAt'\n        ],\n        members: {\n          transformerId: {},\n          transformerArn: {},\n          name: {},\n          fileFormat: {},\n          mappingTemplate: {},\n          status: {},\n          ediType: {\n            shape: 'S6'\n          },\n          sampleDocument: {},\n          createdAt: {\n            shape: 'Sn'\n          },\n          modifiedAt: {\n            shape: 'S1g'\n          }\n        }\n      }\n    },\n    GetTransformerJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'transformerJobId',\n          'transformerId'\n        ],\n        members: {\n          transformerJobId: {},\n          transformerId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status'\n        ],\n        members: {\n          status: {},\n          outputFiles: {\n            type: 'list',\n            member: {\n              shape: 'Sa'\n            }\n          },\n          message: {}\n        }\n      }\n    },\n    ListCapabilities: {\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'capabilities'\n        ],\n        members: {\n          capabilities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'capabilityId',\n                'name',\n                'type',\n                'createdAt'\n              ],\n              members: {\n                capabilityId: {},\n                name: {},\n                type: {},\n                createdAt: {\n                  shape: 'Sn'\n                },\n                modifiedAt: {\n                  shape: 'S1g'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListPartnerships: {\n      input: {\n        type: 'structure',\n        members: {\n          profileId: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'partnerships'\n        ],\n        members: {\n          partnerships: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'profileId',\n                'partnershipId',\n                'createdAt'\n              ],\n              members: {\n                profileId: {},\n                partnershipId: {},\n                name: {},\n                capabilities: {\n                  shape: 'St'\n                },\n                tradingPartnerId: {},\n                createdAt: {\n                  shape: 'Sn'\n                },\n                modifiedAt: {\n                  shape: 'S1g'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListProfiles: {\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'profiles'\n        ],\n        members: {\n          profiles: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'profileId',\n                'name',\n                'businessName',\n                'createdAt'\n              ],\n              members: {\n                profileId: {},\n                name: {},\n                businessName: {},\n                logging: {},\n                logGroupName: {},\n                createdAt: {\n                  shape: 'Sn'\n                },\n                modifiedAt: {\n                  shape: 'S1g'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN'\n        ],\n        members: {\n          ResourceARN: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Sg'\n          }\n        }\n      }\n    },\n    ListTransformers: {\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'transformers'\n        ],\n        members: {\n          transformers: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'transformerId',\n                'name',\n                'fileFormat',\n                'mappingTemplate',\n                'status',\n                'ediType',\n                'createdAt'\n              ],\n              members: {\n                transformerId: {},\n                name: {},\n                fileFormat: {},\n                mappingTemplate: {},\n                status: {},\n                ediType: {\n                  shape: 'S6'\n                },\n                sampleDocument: {},\n                createdAt: {\n                  shape: 'Sn'\n                },\n                modifiedAt: {\n                  shape: 'S1g'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    StartTransformerJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'inputFile',\n          'outputLocation',\n          'transformerId'\n        ],\n        members: {\n          inputFile: {\n            shape: 'Sa'\n          },\n          outputLocation: {\n            shape: 'Sa'\n          },\n          transformerId: {},\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'transformerJobId'\n        ],\n        members: {\n          transformerJobId: {}\n        }\n      },\n      idempotent: true\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN',\n          'Tags'\n        ],\n        members: {\n          ResourceARN: {},\n          Tags: {\n            shape: 'Sg'\n          }\n        }\n      }\n    },\n    TestMapping: {\n      input: {\n        type: 'structure',\n        required: [\n          'inputFileContent',\n          'mappingTemplate',\n          'fileFormat'\n        ],\n        members: {\n          inputFileContent: {},\n          mappingTemplate: {},\n          fileFormat: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'mappedFileContent'\n        ],\n        members: {\n          mappedFileContent: {}\n        }\n      },\n      idempotent: true\n    },\n    TestParsing: {\n      input: {\n        type: 'structure',\n        required: [\n          'inputFile',\n          'fileFormat',\n          'ediType'\n        ],\n        members: {\n          inputFile: {\n            shape: 'Sa'\n          },\n          fileFormat: {},\n          ediType: {\n            shape: 'S6'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'parsedFileContent'\n        ],\n        members: {\n          parsedFileContent: {}\n        }\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN',\n          'TagKeys'\n        ],\n        members: {\n          ResourceARN: {},\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateCapability: {\n      input: {\n        type: 'structure',\n        required: [\n          'capabilityId'\n        ],\n        members: {\n          capabilityId: {},\n          name: {},\n          configuration: {\n            shape: 'S4'\n          },\n          instructionsDocuments: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'capabilityId',\n          'capabilityArn',\n          'name',\n          'type',\n          'configuration',\n          'createdAt'\n        ],\n        members: {\n          capabilityId: {},\n          capabilityArn: {},\n          name: {},\n          type: {},\n          configuration: {\n            shape: 'S4'\n          },\n          instructionsDocuments: {\n            shape: 'Se'\n          },\n          createdAt: {\n            shape: 'Sn'\n          },\n          modifiedAt: {\n            shape: 'S1g'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdatePartnership: {\n      input: {\n        type: 'structure',\n        required: [\n          'partnershipId'\n        ],\n        members: {\n          partnershipId: {},\n          name: {},\n          capabilities: {\n            shape: 'St'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'profileId',\n          'partnershipId',\n          'partnershipArn',\n          'createdAt'\n        ],\n        members: {\n          profileId: {},\n          partnershipId: {},\n          partnershipArn: {},\n          name: {},\n          email: {\n            shape: 'Sr'\n          },\n          phone: {\n            shape: 'Ss'\n          },\n          capabilities: {\n            shape: 'St'\n          },\n          tradingPartnerId: {},\n          createdAt: {\n            shape: 'Sn'\n          },\n          modifiedAt: {\n            shape: 'S1g'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateProfile: {\n      input: {\n        type: 'structure',\n        required: [\n          'profileId'\n        ],\n        members: {\n          profileId: {},\n          name: {},\n          email: {\n            shape: 'Sr'\n          },\n          phone: {\n            shape: 'Ss'\n          },\n          businessName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'profileId',\n          'profileArn',\n          'name',\n          'phone',\n          'businessName',\n          'createdAt'\n        ],\n        members: {\n          profileId: {},\n          profileArn: {},\n          name: {},\n          email: {\n            shape: 'Sr'\n          },\n          phone: {\n            shape: 'Ss'\n          },\n          businessName: {},\n          logging: {},\n          logGroupName: {},\n          createdAt: {\n            shape: 'Sn'\n          },\n          modifiedAt: {\n            shape: 'S1g'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateTransformer: {\n      input: {\n        type: 'structure',\n        required: [\n          'transformerId'\n        ],\n        members: {\n          transformerId: {},\n          name: {},\n          fileFormat: {},\n          mappingTemplate: {},\n          status: {},\n          ediType: {\n            shape: 'S6'\n          },\n          sampleDocument: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'transformerId',\n          'transformerArn',\n          'name',\n          'fileFormat',\n          'mappingTemplate',\n          'status',\n          'ediType',\n          'createdAt',\n          'modifiedAt'\n        ],\n        members: {\n          transformerId: {},\n          transformerArn: {},\n          name: {},\n          fileFormat: {},\n          mappingTemplate: {},\n          status: {},\n          ediType: {\n            shape: 'S6'\n          },\n          sampleDocument: {},\n          createdAt: {\n            shape: 'Sn'\n          },\n          modifiedAt: {\n            shape: 'S1g'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'structure',\n      members: {\n        edi: {\n          type: 'structure',\n          required: [\n            'type',\n            'inputLocation',\n            'outputLocation',\n            'transformerId'\n          ],\n          members: {\n            type: {\n              shape: 'S6'\n            },\n            inputLocation: {\n              shape: 'Sa'\n            },\n            outputLocation: {\n              shape: 'Sa'\n            },\n            transformerId: {}\n          }\n        }\n      },\n      union: true\n    },\n    S6: {\n      type: 'structure',\n      members: {\n        x12Details: {\n          type: 'structure',\n          members: {\n            transactionSet: {},\n            version: {}\n          }\n        }\n      },\n      union: true\n    },\n    Sa: {\n      type: 'structure',\n      members: {\n        bucketName: {},\n        key: {}\n      }\n    },\n    Se: {\n      type: 'list',\n      member: {\n        shape: 'Sa'\n      }\n    },\n    Sg: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sn: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    Sr: {\n      type: 'string',\n      sensitive: true\n    },\n    Ss: {\n      type: 'string',\n      sensitive: true\n    },\n    St: {\n      type: 'list',\n      member: {}\n    },\n    S1g: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    }\n  }\n}"]}