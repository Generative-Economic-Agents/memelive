{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/connectcases-2022-10-03.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","BatchGetField","http","requestUri","responseCode","input","type","required","members","domainId","location","locationName","fields","member","shape","output","errors","errorCode","id","message","createdTime","deleted","description","fieldArn","fieldId","lastModifiedTime","name","namespace","tags","BatchPutFieldOptions","method","options","value","idempotent","CreateCase","clientToken","idempotencyToken","performedBy","templateId","caseArn","caseId","CreateDomain","domainArn","domainStatus","CreateField","CreateLayout","content","layoutArn","layoutId","CreateRelatedItem","comment","contact","contactArn","file","union","relatedItemArn","relatedItemId","CreateTemplate","layoutConfiguration","requiredFields","status","templateArn","DeleteDomain","DeleteField","DeleteLayout","DeleteTemplate","GetCase","nextToken","GetCaseAuditEvents","maxResults","auditEvents","eventId","eventFieldId","newValue","oldValue","iamPrincipalArn","user","performedTime","timestampFormat","relatedItemType","GetCaseEventConfiguration","eventBridge","GetDomain","GetLayout","GetTemplate","ListCasesForContact","cases","ListDomains","domains","ListFieldOptions","values","ListFields","ListLayouts","layouts","ListTagsForResource","arn","ListTemplates","templates","PutCaseEventConfiguration","SearchCases","filter","searchTerm","sorts","sortOrder","SearchRelatedItems","filters","channel","fileArn","relatedItems","associationTime","connectedToSystemTime","TagResource","UntagResource","tagKeys","UpdateCase","UpdateField","UpdateLayout","UpdateTemplate","shapes","S4","Sc","Sg","Sj","key","Sn","active","Sx","booleanValue","doubleValue","emptyValue","stringValue","userArnValue","S10","S12","userArn","S1g","basic","moreInfo","topPanel","S1i","sections","fieldGroup","S1v","body","contentType","S20","S28","defaultLayout","S2a","S31","S39","enabled","includedData","caseData","relatedItemData","includeContent","S4k","andAll","field","contains","equalTo","greaterThan","greaterThanOrEqualTo","lessThan","lessThanOrEqualTo","not","orAll"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,OAFR;AAGRC,UAAAA,WAAW,EAAE,KAHL;AAIRC,UAAAA,QAAQ,EAAE,WAJF;AAKRC,UAAAA,mBAAmB,EAAE,cALb;AAMRC,UAAAA,eAAe,EAAE,sBANT;AAORC,UAAAA,SAAS,EAAE,cAPH;AAQRC,UAAAA,gBAAgB,EAAE,IARV;AASRC,UAAAA,WAAW,EAAE,OATL;AAURC,UAAAA,GAAG,EAAE;AAVG,SAFG;AAcbC,QAAAA,UAAU,EAAE;AACVC,UAAAA,aAAa,EAAE;AACbC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,kCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADO;AAKbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,QAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKPC,gBAAAA,MAAM,EAAE;AACNN,kBAAAA,IAAI,EAAE,MADA;AAENO,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,KAAK,EAAE;AADD;AAFF;AALD;AANJ,aALM;AAwBbC,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,QAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACPQ,gBAAAA,MAAM,EAAE;AACNV,kBAAAA,IAAI,EAAE,MADA;AAENO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,WADQ,EAER,IAFQ,CAFJ;AAMNC,oBAAAA,OAAO,EAAE;AACPS,sBAAAA,SAAS,EAAE,EADJ;AAEPC,sBAAAA,EAAE,EAAE,EAFG;AAGPC,sBAAAA,OAAO,EAAE;AAHF;AANH;AAFF,iBADD;AAgBPP,gBAAAA,MAAM,EAAE;AACNN,kBAAAA,IAAI,EAAE,MADA;AAENO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,UADQ,EAER,SAFQ,EAGR,MAHQ,EAIR,WAJQ,EAKR,MALQ,CAFJ;AASNC,oBAAAA,OAAO,EAAE;AACPY,sBAAAA,WAAW,EAAE;AACXN,wBAAAA,KAAK,EAAE;AADI,uBADN;AAIPO,sBAAAA,OAAO,EAAE;AACPf,wBAAAA,IAAI,EAAE;AADC,uBAJF;AAOPgB,sBAAAA,WAAW,EAAE,EAPN;AAQPC,sBAAAA,QAAQ,EAAE,EARH;AASPC,sBAAAA,OAAO,EAAE,EATF;AAUPC,sBAAAA,gBAAgB,EAAE;AAChBX,wBAAAA,KAAK,EAAE;AADS,uBAVX;AAaPY,sBAAAA,IAAI,EAAE,EAbC;AAcPC,sBAAAA,SAAS,EAAE,EAdJ;AAePC,sBAAAA,IAAI,EAAE;AACJd,wBAAAA,KAAK,EAAE;AADH,uBAfC;AAkBPR,sBAAAA,IAAI,EAAE;AAlBC;AATH;AAFF;AAhBD;AANH;AAxBK,WADL;AAmFVuB,UAAAA,oBAAoB,EAAE;AACpB3B,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,KADJ;AAEJ3B,cAAAA,UAAU,EAAE,8CAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADc;AAMpBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,SAFQ,EAGR,SAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKPa,gBAAAA,OAAO,EAAE;AACPd,kBAAAA,QAAQ,EAAE,KADH;AAEPC,kBAAAA,YAAY,EAAE;AAFP,iBALF;AASPoB,gBAAAA,OAAO,EAAE;AACPzB,kBAAAA,IAAI,EAAE,MADC;AAEPO,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,KAAK,EAAE;AADD;AAFD;AATF;AAPJ,aANa;AA8BpBC,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPQ,gBAAAA,MAAM,EAAE;AACNV,kBAAAA,IAAI,EAAE,MADA;AAENO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,WADQ,EAER,SAFQ,EAGR,OAHQ,CAFJ;AAONC,oBAAAA,OAAO,EAAE;AACPS,sBAAAA,SAAS,EAAE,EADJ;AAEPE,sBAAAA,OAAO,EAAE,EAFF;AAGPa,sBAAAA,KAAK,EAAE;AAHA;AAPH;AAFF;AADD;AAFH,aA9BY;AAmDpBC,YAAAA,UAAU,EAAE;AAnDQ,WAnFZ;AAwIVC,UAAAA,UAAU,EAAE;AACVhC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,2BADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADI;AAKVC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,QAFQ,EAGR,YAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACP2B,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBADN;AAIP3B,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBAJH;AAQPC,gBAAAA,MAAM,EAAE;AACNN,kBAAAA,IAAI,EAAE,MADA;AAENO,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,KAAK,EAAE;AADD;AAFF,iBARD;AAcPuB,gBAAAA,WAAW,EAAE;AACXvB,kBAAAA,KAAK,EAAE;AADI,iBAdN;AAiBPwB,gBAAAA,UAAU,EAAE;AAjBL;AAPJ,aALG;AAgCVvB,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,QAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACP+B,gBAAAA,OAAO,EAAE,EADF;AAEPC,gBAAAA,MAAM,EAAE;AAFD;AANH,aAhCE;AA2CVP,YAAAA,UAAU,EAAE;AA3CF,WAxIF;AAqLVQ,UAAAA,YAAY,EAAE;AACZvC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,UADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADM;AAKZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE;AADC;AALJ,aALK;AAcZX,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,UAFQ,EAGR,cAHQ,CAFJ;AAONC,cAAAA,OAAO,EAAE;AACPkC,gBAAAA,SAAS,EAAE,EADJ;AAEPjC,gBAAAA,QAAQ,EAAE,EAFH;AAGPkC,gBAAAA,YAAY,EAAE;AAHP;AAPH,aAdI;AA2BZV,YAAAA,UAAU,EAAE;AA3BA,WArLJ;AAkNVW,UAAAA,WAAW,EAAE;AACX1C,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,4BADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,MAFQ,EAGR,MAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPc,gBAAAA,WAAW,EAAE,EADN;AAEPb,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBAFH;AAMPe,gBAAAA,IAAI,EAAE,EANC;AAOPpB,gBAAAA,IAAI,EAAE;AAPC;AAPJ,aALI;AAsBXS,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,SAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACPe,gBAAAA,QAAQ,EAAE,EADH;AAEPC,gBAAAA,OAAO,EAAE;AAFF;AANH,aAtBG;AAiCXS,YAAAA,UAAU,EAAE;AAjCD,WAlNH;AAqPVY,UAAAA,YAAY,EAAE;AACZ3C,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,6BADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADM;AAKZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,UAFQ,EAGR,MAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPsC,gBAAAA,OAAO,EAAE;AACPhC,kBAAAA,KAAK,EAAE;AADA,iBADF;AAIPL,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBAJH;AAQPe,gBAAAA,IAAI,EAAE;AARC;AAPJ,aALK;AAuBZX,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,UAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACPuC,gBAAAA,SAAS,EAAE,EADJ;AAEPC,gBAAAA,QAAQ,EAAE;AAFH;AANH;AAvBI,WArPJ;AAwRVC,UAAAA,iBAAiB,EAAE;AACjB/C,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,mDADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADW;AAKjBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,SAFQ,EAGR,UAHQ,EAIR,MAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPgC,gBAAAA,MAAM,EAAE;AACN9B,kBAAAA,QAAQ,EAAE,KADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR,iBADD;AAKPmC,gBAAAA,OAAO,EAAE;AACPxC,kBAAAA,IAAI,EAAE,WADC;AAEPE,kBAAAA,OAAO,EAAE;AACP0C,oBAAAA,OAAO,EAAE;AACPpC,sBAAAA,KAAK,EAAE;AADA,qBADF;AAIPqC,oBAAAA,OAAO,EAAE;AACP7C,sBAAAA,IAAI,EAAE,WADC;AAEPC,sBAAAA,QAAQ,EAAE,CACR,YADQ,CAFH;AAKPC,sBAAAA,OAAO,EAAE;AACP4C,wBAAAA,UAAU,EAAE;AADL;AALF,qBAJF;AAaPC,oBAAAA,IAAI,EAAE;AACJvC,sBAAAA,KAAK,EAAE;AADH;AAbC,mBAFF;AAmBPwC,kBAAAA,KAAK,EAAE;AAnBA,iBALF;AA0BP7C,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBA1BH;AA8BP0B,gBAAAA,WAAW,EAAE;AACXvB,kBAAAA,KAAK,EAAE;AADI,iBA9BN;AAiCPR,gBAAAA,IAAI,EAAE;AAjCC;AARJ,aALU;AAiDjBS,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,gBADQ,EAER,eAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACP+C,gBAAAA,cAAc,EAAE,EADT;AAEPC,gBAAAA,aAAa,EAAE;AAFR;AANH,aAjDS;AA4DjBvB,YAAAA,UAAU,EAAE;AA5DK,WAxRT;AAsVVwB,UAAAA,cAAc,EAAE;AACdvD,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,+BADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADQ;AAKdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,MAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPc,gBAAAA,WAAW,EAAE,EADN;AAEPb,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBAFH;AAMP+C,gBAAAA,mBAAmB,EAAE;AACnB5C,kBAAAA,KAAK,EAAE;AADY,iBANd;AASPY,gBAAAA,IAAI,EAAE,EATC;AAUPiC,gBAAAA,cAAc,EAAE;AACd7C,kBAAAA,KAAK,EAAE;AADO,iBAVT;AAaP8C,gBAAAA,MAAM,EAAE;AAbD;AANJ,aALO;AA2Bd7C,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,YAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,WAAW,EAAE,EADN;AAEPvB,gBAAAA,UAAU,EAAE;AAFL;AANH,aA3BM;AAsCdL,YAAAA,UAAU,EAAE;AAtCE,WAtVN;AA8XV6B,UAAAA,YAAY,EAAE;AACZ5D,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,QADJ;AAEJ3B,cAAAA,UAAU,EAAE,qBAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADM;AAMZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN;AADH;AALJ,aANK;AAkBZI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAlBI;AAsBZyB,YAAAA,UAAU,EAAE;AAtBA,WA9XJ;AAsZV8B,UAAAA,WAAW,EAAE;AACX7D,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,QADJ;AAEJ3B,cAAAA,UAAU,EAAE,sCAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADK;AAMXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKPa,gBAAAA,OAAO,EAAE;AACPd,kBAAAA,QAAQ,EAAE,KADH;AAEPC,kBAAAA,YAAY,EAAE;AAFP;AALF;AANJ,aANI;AAuBXI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAvBG;AA2BXyB,YAAAA,UAAU,EAAE;AA3BD,WAtZH;AAmbV+B,UAAAA,YAAY,EAAE;AACZ9D,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,QADJ;AAEJ3B,cAAAA,UAAU,EAAE,wCAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADM;AAMZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKPqC,gBAAAA,QAAQ,EAAE;AACRtC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN;AALH;AANJ,aANK;AAuBZI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAvBI;AA2BZyB,YAAAA,UAAU,EAAE;AA3BA,WAnbJ;AAgdVgC,UAAAA,cAAc,EAAE;AACd/D,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,QADJ;AAEJ3B,cAAAA,UAAU,EAAE,4CAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADQ;AAMdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,YAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKP2B,gBAAAA,UAAU,EAAE;AACV5B,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ;AALL;AANJ,aANO;AAuBdI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAvBM;AA2BdyB,YAAAA,UAAU,EAAE;AA3BE,WAhdN;AA6eViC,UAAAA,OAAO,EAAE;AACPhE,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,oCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADC;AAKPC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,UAFQ,EAGR,QAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPgC,gBAAAA,MAAM,EAAE;AACN9B,kBAAAA,QAAQ,EAAE,KADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR,iBADD;AAKPF,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASPC,gBAAAA,MAAM,EAAE;AACNN,kBAAAA,IAAI,EAAE,MADA;AAENO,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,KAAK,EAAE;AADD;AAFF,iBATD;AAePqD,gBAAAA,SAAS,EAAE;AAfJ;AAPJ,aALA;AA8BPpD,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,YAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACPI,gBAAAA,MAAM,EAAE;AACNN,kBAAAA,IAAI,EAAE,MADA;AAENO,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,KAAK,EAAE;AADD;AAFF,iBADD;AAOPqD,gBAAAA,SAAS,EAAE,EAPJ;AAQPvC,gBAAAA,IAAI,EAAE;AACJd,kBAAAA,KAAK,EAAE;AADH,iBARC;AAWPwB,gBAAAA,UAAU,EAAE;AAXL;AANH;AA9BD,WA7eC;AAgiBV8B,UAAAA,kBAAkB,EAAE;AAClBlE,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,kDADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADY;AAKlBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPgC,gBAAAA,MAAM,EAAE;AACN9B,kBAAAA,QAAQ,EAAE,KADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR,iBADD;AAKPF,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASP0D,gBAAAA,UAAU,EAAE;AACV/D,kBAAAA,IAAI,EAAE;AADI,iBATL;AAYP6D,gBAAAA,SAAS,EAAE;AAZJ;AANJ,aALW;AA0BlBpD,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP8D,gBAAAA,WAAW,EAAE;AACXhE,kBAAAA,IAAI,EAAE,MADK;AAEXO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,SADQ,EAER,QAFQ,EAGR,eAHQ,EAIR,MAJQ,CAFJ;AAQNC,oBAAAA,OAAO,EAAE;AACP+D,sBAAAA,OAAO,EAAE,EADF;AAEP3D,sBAAAA,MAAM,EAAE;AACNN,wBAAAA,IAAI,EAAE,MADA;AAENO,wBAAAA,MAAM,EAAE;AACNP,0BAAAA,IAAI,EAAE,WADA;AAENC,0BAAAA,QAAQ,EAAE,CACR,cADQ,EAER,UAFQ,CAFJ;AAMNC,0BAAAA,OAAO,EAAE;AACPgE,4BAAAA,YAAY,EAAE,EADP;AAEPC,4BAAAA,QAAQ,EAAE;AACR3D,8BAAAA,KAAK,EAAE;AADC,6BAFH;AAKP4D,4BAAAA,QAAQ,EAAE;AACR5D,8BAAAA,KAAK,EAAE;AADC;AALH;AANH;AAFF,uBAFD;AAqBPuB,sBAAAA,WAAW,EAAE;AACX/B,wBAAAA,IAAI,EAAE,WADK;AAEXC,wBAAAA,QAAQ,EAAE,CACR,iBADQ,CAFC;AAKXC,wBAAAA,OAAO,EAAE;AACPmE,0BAAAA,eAAe,EAAE,EADV;AAEPC,0BAAAA,IAAI,EAAE;AACJ9D,4BAAAA,KAAK,EAAE;AADH;AAFC;AALE,uBArBN;AAiCP+D,sBAAAA,aAAa,EAAE;AACbvE,wBAAAA,IAAI,EAAE,WADO;AAEbwE,wBAAAA,eAAe,EAAE;AAFJ,uBAjCR;AAqCPC,sBAAAA,eAAe,EAAE,EArCV;AAsCPzE,sBAAAA,IAAI,EAAE;AAtCC;AARH;AAFG,iBADN;AAqDP6D,gBAAAA,SAAS,EAAE;AArDJ;AALH;AA1BU,WAhiBV;AAwnBVa,UAAAA,yBAAyB,EAAE;AACzB9E,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,8CADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADmB;AAKzBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN;AADH;AALJ,aALkB;AAiBzBI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPyE,gBAAAA,WAAW,EAAE;AACXnE,kBAAAA,KAAK,EAAE;AADI;AADN;AALH;AAjBiB,WAxnBjB;AAqpBVoE,UAAAA,SAAS,EAAE;AACThF,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,qBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADG;AAKTC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN;AADH;AALJ,aALE;AAiBTI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,WAFQ,EAGR,UAHQ,EAIR,cAJQ,EAKR,MALQ,CAFJ;AASNC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,KAAK,EAAE;AADI,iBADN;AAIP4B,gBAAAA,SAAS,EAAE,EAJJ;AAKPjC,gBAAAA,QAAQ,EAAE,EALH;AAMPkC,gBAAAA,YAAY,EAAE,EANP;AAOPjB,gBAAAA,IAAI,EAAE,EAPC;AAQPE,gBAAAA,IAAI,EAAE;AACJd,kBAAAA,KAAK,EAAE;AADH;AARC;AATH;AAjBC,WArpBD;AA6rBVqE,UAAAA,SAAS,EAAE;AACTjF,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,wCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADG;AAKTC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKPqC,gBAAAA,QAAQ,EAAE;AACRtC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN;AALH;AANJ,aALE;AAsBTI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,WAFQ,EAGR,UAHQ,EAIR,MAJQ,CAFJ;AAQNC,cAAAA,OAAO,EAAE;AACPsC,gBAAAA,OAAO,EAAE;AACPhC,kBAAAA,KAAK,EAAE;AADA,iBADF;AAIPM,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,KAAK,EAAE;AADI,iBAJN;AAOPO,gBAAAA,OAAO,EAAE;AACPf,kBAAAA,IAAI,EAAE;AADC,iBAPF;AAUPmB,gBAAAA,gBAAgB,EAAE;AAChBX,kBAAAA,KAAK,EAAE;AADS,iBAVX;AAaPiC,gBAAAA,SAAS,EAAE,EAbJ;AAcPC,gBAAAA,QAAQ,EAAE,EAdH;AAePtB,gBAAAA,IAAI,EAAE,EAfC;AAgBPE,gBAAAA,IAAI,EAAE;AACJd,kBAAAA,KAAK,EAAE;AADH;AAhBC;AARH;AAtBC,WA7rBD;AAivBVsE,UAAAA,WAAW,EAAE;AACXlF,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,4CADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,YAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKP2B,gBAAAA,UAAU,EAAE;AACV5B,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ;AALL;AANJ,aALI;AAsBXI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,QAFQ,EAGR,aAHQ,EAIR,YAJQ,CAFJ;AAQNC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,KAAK,EAAE;AADI,iBADN;AAIPO,gBAAAA,OAAO,EAAE;AACPf,kBAAAA,IAAI,EAAE;AADC,iBAJF;AAOPgB,gBAAAA,WAAW,EAAE,EAPN;AAQPG,gBAAAA,gBAAgB,EAAE;AAChBX,kBAAAA,KAAK,EAAE;AADS,iBARX;AAWP4C,gBAAAA,mBAAmB,EAAE;AACnB5C,kBAAAA,KAAK,EAAE;AADY,iBAXd;AAcPY,gBAAAA,IAAI,EAAE,EAdC;AAePiC,gBAAAA,cAAc,EAAE;AACd7C,kBAAAA,KAAK,EAAE;AADO,iBAfT;AAkBP8C,gBAAAA,MAAM,EAAE,EAlBD;AAmBPhC,gBAAAA,IAAI,EAAE;AACJd,kBAAAA,KAAK,EAAE;AADH,iBAnBC;AAsBP+C,gBAAAA,WAAW,EAAE,EAtBN;AAuBPvB,gBAAAA,UAAU,EAAE;AAvBL;AARH;AAtBG,WAjvBH;AA0yBV+C,UAAAA,mBAAmB,EAAE;AACnBnF,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,4CADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADa;AAKnBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACP4C,gBAAAA,UAAU,EAAE,EADL;AAEP3C,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBAFH;AAMP0D,gBAAAA,UAAU,EAAE;AACV/D,kBAAAA,IAAI,EAAE;AADI,iBANL;AASP6D,gBAAAA,SAAS,EAAE;AATJ;AANJ,aALY;AAuBnBpD,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,OADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP8E,gBAAAA,KAAK,EAAE;AACLhF,kBAAAA,IAAI,EAAE,MADD;AAELO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,QADQ,EAER,YAFQ,CAFJ;AAMNC,oBAAAA,OAAO,EAAE;AACPgC,sBAAAA,MAAM,EAAE,EADD;AAEPF,sBAAAA,UAAU,EAAE;AAFL;AANH;AAFH,iBADA;AAeP6B,gBAAAA,SAAS,EAAE;AAfJ;AALH;AAvBW,WA1yBX;AAy1BVoB,UAAAA,WAAW,EAAE;AACXrF,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,eADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP6D,gBAAAA,UAAU,EAAE;AACV3D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBADL;AAMP6D,gBAAAA,SAAS,EAAE;AACTzD,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AANJ;AAFJ,aALI;AAmBXI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPgF,gBAAAA,OAAO,EAAE;AACPlF,kBAAAA,IAAI,EAAE,MADC;AAEPO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,WADQ,EAER,UAFQ,EAGR,MAHQ,CAFJ;AAONC,oBAAAA,OAAO,EAAE;AACPkC,sBAAAA,SAAS,EAAE,EADJ;AAEPjC,sBAAAA,QAAQ,EAAE,EAFH;AAGPiB,sBAAAA,IAAI,EAAE;AAHC;AAPH;AAFD,iBADF;AAiBPyC,gBAAAA,SAAS,EAAE;AAjBJ;AALH;AAnBG,WAz1BH;AAs4BVsB,UAAAA,gBAAgB,EAAE;AAChBvF,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,mDADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADU;AAKhBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKPa,gBAAAA,OAAO,EAAE;AACPd,kBAAAA,QAAQ,EAAE,KADH;AAEPC,kBAAAA,YAAY,EAAE;AAFP,iBALF;AASP0D,gBAAAA,UAAU,EAAE;AACV3D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBATL;AAcP6D,gBAAAA,SAAS,EAAE;AACTzD,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBAdJ;AAkBP+E,gBAAAA,MAAM,EAAE;AACNhF,kBAAAA,QAAQ,EAAE,aADJ;AAENC,kBAAAA,YAAY,EAAE,QAFR;AAGNL,kBAAAA,IAAI,EAAE,MAHA;AAINO,kBAAAA,MAAM,EAAE;AAJF;AAlBD;AANJ,aALS;AAqChBE,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP2D,gBAAAA,SAAS,EAAE,EADJ;AAEPpC,gBAAAA,OAAO,EAAE;AACPzB,kBAAAA,IAAI,EAAE,MADC;AAEPO,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,KAAK,EAAE;AADD;AAFD;AAFF;AALH;AArCQ,WAt4BR;AA27BV6E,UAAAA,UAAU,EAAE;AACVzF,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,iCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADI;AAKVC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKP0D,gBAAAA,UAAU,EAAE;AACV3D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUP6D,gBAAAA,SAAS,EAAE;AACTzD,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAVJ;AALJ,aALG;AA0BVI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,QADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPI,gBAAAA,MAAM,EAAE;AACNN,kBAAAA,IAAI,EAAE,MADA;AAENO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,UADQ,EAER,SAFQ,EAGR,MAHQ,EAIR,WAJQ,EAKR,MALQ,CAFJ;AASNC,oBAAAA,OAAO,EAAE;AACPe,sBAAAA,QAAQ,EAAE,EADH;AAEPC,sBAAAA,OAAO,EAAE,EAFF;AAGPE,sBAAAA,IAAI,EAAE,EAHC;AAIPC,sBAAAA,SAAS,EAAE,EAJJ;AAKPrB,sBAAAA,IAAI,EAAE;AALC;AATH;AAFF,iBADD;AAqBP6D,gBAAAA,SAAS,EAAE;AArBJ;AALH;AA1BE,WA37BF;AAm/BVyB,UAAAA,WAAW,EAAE;AACX1F,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,kCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKP0D,gBAAAA,UAAU,EAAE;AACV3D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUP6D,gBAAAA,SAAS,EAAE;AACTzD,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAVJ;AALJ,aALI;AA0BXI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPqF,gBAAAA,OAAO,EAAE;AACPvF,kBAAAA,IAAI,EAAE,MADC;AAEPO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,WADQ,EAER,UAFQ,EAGR,MAHQ,CAFJ;AAONC,oBAAAA,OAAO,EAAE;AACPuC,sBAAAA,SAAS,EAAE,EADJ;AAEPC,sBAAAA,QAAQ,EAAE,EAFH;AAGPtB,sBAAAA,IAAI,EAAE;AAHC;AAPH;AAFD,iBADF;AAiBPyC,gBAAAA,SAAS,EAAE;AAjBJ;AALH;AA1BG,WAn/BH;AAuiCV2B,UAAAA,mBAAmB,EAAE;AACnB5F,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,KADJ;AAEJ3B,cAAAA,UAAU,EAAE,aAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADa;AAMnBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,KADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPuF,gBAAAA,GAAG,EAAE;AACHrF,kBAAAA,QAAQ,EAAE,KADP;AAEHC,kBAAAA,YAAY,EAAE;AAFX;AADE;AALJ,aANY;AAkBnBI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPoB,gBAAAA,IAAI,EAAE;AACJd,kBAAAA,KAAK,EAAE;AADH;AADC;AAFH,aAlBW;AA0BnBmB,YAAAA,UAAU,EAAE;AA1BO,WAviCX;AAmkCV+D,UAAAA,aAAa,EAAE;AACb9F,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,oCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADO;AAKbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKP0D,gBAAAA,UAAU,EAAE;AACV3D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUP6D,gBAAAA,SAAS,EAAE;AACTzD,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBAVJ;AAcPiD,gBAAAA,MAAM,EAAE;AACNlD,kBAAAA,QAAQ,EAAE,aADJ;AAENC,kBAAAA,YAAY,EAAE,QAFR;AAGNL,kBAAAA,IAAI,EAAE,MAHA;AAINO,kBAAAA,MAAM,EAAE;AAJF;AAdD;AALJ,aALM;AAgCbE,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP2D,gBAAAA,SAAS,EAAE,EADJ;AAEP8B,gBAAAA,SAAS,EAAE;AACT3F,kBAAAA,IAAI,EAAE,MADG;AAETO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,MADQ,EAER,QAFQ,EAGR,aAHQ,EAIR,YAJQ,CAFJ;AAQNC,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEPkC,sBAAAA,MAAM,EAAE,EAFD;AAGPC,sBAAAA,WAAW,EAAE,EAHN;AAIPvB,sBAAAA,UAAU,EAAE;AAJL;AARH;AAFC;AAFJ;AALH;AAhCK,WAnkCL;AA+nCV4D,UAAAA,yBAAyB,EAAE;AACzBhG,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,KADJ;AAEJ3B,cAAAA,UAAU,EAAE,8CAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADmB;AAMzBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,aAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKPsE,gBAAAA,WAAW,EAAE;AACXnE,kBAAAA,KAAK,EAAE;AADI;AALN;AANJ,aANkB;AAsBzBC,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAtBiB,WA/nCjB;AA0pCV2F,UAAAA,WAAW,EAAE;AACXjG,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,kCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKPC,gBAAAA,MAAM,EAAE;AACNN,kBAAAA,IAAI,EAAE,MADA;AAENO,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,KAAK,EAAE;AADD;AAFF,iBALD;AAWPsF,gBAAAA,MAAM,EAAE;AACNtF,kBAAAA,KAAK,EAAE;AADD,iBAXD;AAcPuD,gBAAAA,UAAU,EAAE;AACV/D,kBAAAA,IAAI,EAAE;AADI,iBAdL;AAiBP6D,gBAAAA,SAAS,EAAE,EAjBJ;AAkBPkC,gBAAAA,UAAU,EAAE,EAlBL;AAmBPC,gBAAAA,KAAK,EAAE;AACLhG,kBAAAA,IAAI,EAAE,MADD;AAELO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,SADQ,EAER,WAFQ,CAFJ;AAMNC,oBAAAA,OAAO,EAAE;AACPgB,sBAAAA,OAAO,EAAE,EADF;AAEP+E,sBAAAA,SAAS,EAAE;AAFJ;AANH;AAFH;AAnBA;AALJ,aALI;AA6CXxF,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,OADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP8E,gBAAAA,KAAK,EAAE;AACLhF,kBAAAA,IAAI,EAAE,MADD;AAELO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,QADQ,EAER,QAFQ,EAGR,YAHQ,CAFJ;AAONC,oBAAAA,OAAO,EAAE;AACPgC,sBAAAA,MAAM,EAAE,EADD;AAEP5B,sBAAAA,MAAM,EAAE;AACNN,wBAAAA,IAAI,EAAE,MADA;AAENO,wBAAAA,MAAM,EAAE;AACNC,0BAAAA,KAAK,EAAE;AADD;AAFF,uBAFD;AAQPc,sBAAAA,IAAI,EAAE;AACJd,wBAAAA,KAAK,EAAE;AADH,uBARC;AAWPwB,sBAAAA,UAAU,EAAE;AAXL;AAPH;AAFH,iBADA;AAyBP6B,gBAAAA,SAAS,EAAE;AAzBJ;AALH;AA7CG,WA1pCH;AAyuCVqC,UAAAA,kBAAkB,EAAE;AAClBtG,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,yDADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADY;AAKlBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPgC,gBAAAA,MAAM,EAAE;AACN9B,kBAAAA,QAAQ,EAAE,KADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR,iBADD;AAKPF,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASP8F,gBAAAA,OAAO,EAAE;AACPnG,kBAAAA,IAAI,EAAE,MADC;AAEPO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP0C,sBAAAA,OAAO,EAAE;AACP5C,wBAAAA,IAAI,EAAE,WADC;AAEPE,wBAAAA,OAAO,EAAE;AAFF,uBADF;AAKP2C,sBAAAA,OAAO,EAAE;AACP7C,wBAAAA,IAAI,EAAE,WADC;AAEPE,wBAAAA,OAAO,EAAE;AACPkG,0BAAAA,OAAO,EAAE;AACPpG,4BAAAA,IAAI,EAAE,MADC;AAEPO,4BAAAA,MAAM,EAAE;AAFD,2BADF;AAKPuC,0BAAAA,UAAU,EAAE;AALL;AAFF,uBALF;AAePC,sBAAAA,IAAI,EAAE;AACJ/C,wBAAAA,IAAI,EAAE,WADF;AAEJE,wBAAAA,OAAO,EAAE;AACPmG,0BAAAA,OAAO,EAAE;AADF;AAFL;AAfC,qBAFH;AAwBNrD,oBAAAA,KAAK,EAAE;AAxBD;AAFD,iBATF;AAsCPe,gBAAAA,UAAU,EAAE;AACV/D,kBAAAA,IAAI,EAAE;AADI,iBAtCL;AAyCP6D,gBAAAA,SAAS,EAAE;AAzCJ;AANJ,aALW;AAuDlBpD,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,cADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP2D,gBAAAA,SAAS,EAAE,EADJ;AAEPyC,gBAAAA,YAAY,EAAE;AACZtG,kBAAAA,IAAI,EAAE,MADM;AAEZO,kBAAAA,MAAM,EAAE;AACNP,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,iBADQ,EAER,SAFQ,EAGR,eAHQ,EAIR,MAJQ,CAFJ;AAQNC,oBAAAA,OAAO,EAAE;AACPqG,sBAAAA,eAAe,EAAE;AACfvG,wBAAAA,IAAI,EAAE,WADS;AAEfwE,wBAAAA,eAAe,EAAE;AAFF,uBADV;AAKPhC,sBAAAA,OAAO,EAAE;AACPxC,wBAAAA,IAAI,EAAE,WADC;AAEPE,wBAAAA,OAAO,EAAE;AACP0C,0BAAAA,OAAO,EAAE;AACPpC,4BAAAA,KAAK,EAAE;AADA,2BADF;AAIPqC,0BAAAA,OAAO,EAAE;AACP7C,4BAAAA,IAAI,EAAE,WADC;AAEPC,4BAAAA,QAAQ,EAAE,CACR,SADQ,EAER,uBAFQ,EAGR,YAHQ,CAFH;AAOPC,4BAAAA,OAAO,EAAE;AACPkG,8BAAAA,OAAO,EAAE,EADF;AAEPI,8BAAAA,qBAAqB,EAAE;AACrBxG,gCAAAA,IAAI,EAAE,WADe;AAErBwE,gCAAAA,eAAe,EAAE;AAFI,+BAFhB;AAMP1B,8BAAAA,UAAU,EAAE;AANL;AAPF,2BAJF;AAoBPC,0BAAAA,IAAI,EAAE;AACJvC,4BAAAA,KAAK,EAAE;AADH;AApBC,yBAFF;AA0BPwC,wBAAAA,KAAK,EAAE;AA1BA,uBALF;AAiCPjB,sBAAAA,WAAW,EAAE;AACXvB,wBAAAA,KAAK,EAAE;AADI,uBAjCN;AAoCP0C,sBAAAA,aAAa,EAAE,EApCR;AAqCP5B,sBAAAA,IAAI,EAAE;AACJd,wBAAAA,KAAK,EAAE;AADH,uBArCC;AAwCPR,sBAAAA,IAAI,EAAE;AAxCC;AARH;AAFI;AAFP;AALH;AAvDU,WAzuCV;AAg2CVyG,UAAAA,WAAW,EAAE;AACX7G,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,aADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,KADQ,EAER,MAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPuF,gBAAAA,GAAG,EAAE;AACHrF,kBAAAA,QAAQ,EAAE,KADP;AAEHC,kBAAAA,YAAY,EAAE;AAFX,iBADE;AAKPiB,gBAAAA,IAAI,EAAE;AACJd,kBAAAA,KAAK,EAAE;AADH;AALC;AANJ,aALI;AAqBXmB,YAAAA,UAAU,EAAE;AArBD,WAh2CH;AAu3CV+E,UAAAA,aAAa,EAAE;AACb9G,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,QADJ;AAEJ3B,cAAAA,UAAU,EAAE,aAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADO;AAMbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,KADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPuF,gBAAAA,GAAG,EAAE;AACHrF,kBAAAA,QAAQ,EAAE,KADP;AAEHC,kBAAAA,YAAY,EAAE;AAFX,iBADE;AAKPsG,gBAAAA,OAAO,EAAE;AACPvG,kBAAAA,QAAQ,EAAE,aADH;AAEPC,kBAAAA,YAAY,EAAE,SAFP;AAGPL,kBAAAA,IAAI,EAAE,MAHC;AAIPO,kBAAAA,MAAM,EAAE;AAJD;AALF;AANJ,aANM;AAyBboB,YAAAA,UAAU,EAAE;AAzBC,WAv3CL;AAk5CViF,UAAAA,UAAU,EAAE;AACVhH,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,KADJ;AAEJ3B,cAAAA,UAAU,EAAE,oCAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADI;AAMVC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,UAFQ,EAGR,QAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPgC,gBAAAA,MAAM,EAAE;AACN9B,kBAAAA,QAAQ,EAAE,KADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR,iBADD;AAKPF,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASPC,gBAAAA,MAAM,EAAE;AACNN,kBAAAA,IAAI,EAAE,MADA;AAENO,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,KAAK,EAAE;AADD;AAFF,iBATD;AAePuB,gBAAAA,WAAW,EAAE;AACXvB,kBAAAA,KAAK,EAAE;AADI;AAfN;AAPJ,aANG;AAiCVC,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAjCE,WAl5CF;AAw7CV2G,UAAAA,WAAW,EAAE;AACXjH,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,KADJ;AAEJ3B,cAAAA,UAAU,EAAE,sCAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADK;AAMXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPc,gBAAAA,WAAW,EAAE,EADN;AAEPb,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBAFH;AAMPa,gBAAAA,OAAO,EAAE;AACPd,kBAAAA,QAAQ,EAAE,KADH;AAEPC,kBAAAA,YAAY,EAAE;AAFP,iBANF;AAUPe,gBAAAA,IAAI,EAAE;AAVC;AANJ,aANI;AAyBXX,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAzBG;AA6BXyB,YAAAA,UAAU,EAAE;AA7BD,WAx7CH;AAu9CVmF,UAAAA,YAAY,EAAE;AACZlH,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,KADJ;AAEJ3B,cAAAA,UAAU,EAAE,wCAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADM;AAMZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPsC,gBAAAA,OAAO,EAAE;AACPhC,kBAAAA,KAAK,EAAE;AADA,iBADF;AAIPL,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBAJH;AAQPqC,gBAAAA,QAAQ,EAAE;AACRtC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBARH;AAYPe,gBAAAA,IAAI,EAAE;AAZC;AANJ,aANK;AA2BZX,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aA3BI;AA+BZyB,YAAAA,UAAU,EAAE;AA/BA,WAv9CJ;AAw/CVoF,UAAAA,cAAc,EAAE;AACdnH,YAAAA,IAAI,EAAE;AACJ4B,cAAAA,MAAM,EAAE,KADJ;AAEJ3B,cAAAA,UAAU,EAAE,4CAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADQ;AAMdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,YAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPc,gBAAAA,WAAW,EAAE,EADN;AAEPb,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBAFH;AAMP+C,gBAAAA,mBAAmB,EAAE;AACnB5C,kBAAAA,KAAK,EAAE;AADY,iBANd;AASPY,gBAAAA,IAAI,EAAE,EATC;AAUPiC,gBAAAA,cAAc,EAAE;AACd7C,kBAAAA,KAAK,EAAE;AADO,iBAVT;AAaP8C,gBAAAA,MAAM,EAAE,EAbD;AAcPtB,gBAAAA,UAAU,EAAE;AACV5B,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ;AAdL;AANJ,aANO;AAgCdI,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAhCM;AAoCdyB,YAAAA,UAAU,EAAE;AApCE;AAx/CN,SAdC;AA6iDbqF,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACFjH,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,IADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACPU,cAAAA,EAAE,EAAE;AADG;AALP,WADE;AAUNsG,UAAAA,EAAE,EAAE;AACFlH,YAAAA,IAAI,EAAE,WADJ;AAEFwE,YAAAA,eAAe,EAAE;AAFf,WAVE;AAcN2C,UAAAA,EAAE,EAAE;AACFnH,YAAAA,IAAI,EAAE,WADJ;AAEFwE,YAAAA,eAAe,EAAE;AAFf,WAdE;AAkBN4C,UAAAA,EAAE,EAAE;AACFpH,YAAAA,IAAI,EAAE,KADJ;AAEFqH,YAAAA,GAAG,EAAE,EAFH;AAGF3F,YAAAA,KAAK,EAAE;AAHL,WAlBE;AAuBN4F,UAAAA,EAAE,EAAE;AACFtH,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,QADQ,EAER,MAFQ,EAGR,OAHQ,CAFR;AAOFC,YAAAA,OAAO,EAAE;AACPqH,cAAAA,MAAM,EAAE;AACNvH,gBAAAA,IAAI,EAAE;AADA,eADD;AAIPoB,cAAAA,IAAI,EAAE,EAJC;AAKPM,cAAAA,KAAK,EAAE;AALA;AAPP,WAvBE;AAsCN8F,UAAAA,EAAE,EAAE;AACFxH,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,IADQ,EAER,OAFQ,CAFR;AAMFC,YAAAA,OAAO,EAAE;AACPU,cAAAA,EAAE,EAAE,EADG;AAEPc,cAAAA,KAAK,EAAE;AACL1B,gBAAAA,IAAI,EAAE,WADD;AAELE,gBAAAA,OAAO,EAAE;AACPuH,kBAAAA,YAAY,EAAE;AACZzH,oBAAAA,IAAI,EAAE;AADM,mBADP;AAIP0H,kBAAAA,WAAW,EAAE;AACX1H,oBAAAA,IAAI,EAAE;AADK,mBAJN;AAOP2H,kBAAAA,UAAU,EAAE;AACVnH,oBAAAA,KAAK,EAAE;AADG,mBAPL;AAUPoH,kBAAAA,WAAW,EAAE,EAVN;AAWPC,kBAAAA,YAAY,EAAE;AAXP,iBAFJ;AAeL7E,gBAAAA,KAAK,EAAE;AAfF;AAFA;AANP,WAtCE;AAiEN8E,UAAAA,GAAG,EAAE;AACH9H,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AAFN,WAjEC;AAqEN6H,UAAAA,GAAG,EAAE;AACH/H,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP8H,cAAAA,OAAO,EAAE;AADF,aAFN;AAKHhF,YAAAA,KAAK,EAAE;AALJ,WArEC;AA4ENiF,UAAAA,GAAG,EAAE;AACHjI,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPgI,cAAAA,KAAK,EAAE;AACLlI,gBAAAA,IAAI,EAAE,WADD;AAELE,gBAAAA,OAAO,EAAE;AACPiI,kBAAAA,QAAQ,EAAE;AACR3H,oBAAAA,KAAK,EAAE;AADC,mBADH;AAIP4H,kBAAAA,QAAQ,EAAE;AACR5H,oBAAAA,KAAK,EAAE;AADC;AAJH;AAFJ;AADA,aAFN;AAeHwC,YAAAA,KAAK,EAAE;AAfJ,WA5EC;AA6FNqF,UAAAA,GAAG,EAAE;AACHrI,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPoI,cAAAA,QAAQ,EAAE;AACRtI,gBAAAA,IAAI,EAAE,MADE;AAERO,gBAAAA,MAAM,EAAE;AACNP,kBAAAA,IAAI,EAAE,WADA;AAENE,kBAAAA,OAAO,EAAE;AACPqI,oBAAAA,UAAU,EAAE;AACVvI,sBAAAA,IAAI,EAAE,WADI;AAEVC,sBAAAA,QAAQ,EAAE,CACR,QADQ,CAFA;AAKVC,sBAAAA,OAAO,EAAE;AACPI,wBAAAA,MAAM,EAAE;AACNN,0BAAAA,IAAI,EAAE,MADA;AAENO,0BAAAA,MAAM,EAAE;AACNP,4BAAAA,IAAI,EAAE,WADA;AAENC,4BAAAA,QAAQ,EAAE,CACR,IADQ,CAFJ;AAKNC,4BAAAA,OAAO,EAAE;AACPU,8BAAAA,EAAE,EAAE;AADG;AALH;AAFF,yBADD;AAaPQ,wBAAAA,IAAI,EAAE;AAbC;AALC;AADL,mBAFH;AAyBN4B,kBAAAA,KAAK,EAAE;AAzBD;AAFA;AADH;AAFN,WA7FC;AAgINwF,UAAAA,GAAG,EAAE;AACHxI,YAAAA,IAAI,EAAE,WADH;AAEHC,YAAAA,QAAQ,EAAE,CACR,MADQ,EAER,aAFQ,CAFP;AAMHC,YAAAA,OAAO,EAAE;AACPuI,cAAAA,IAAI,EAAE,EADC;AAEPC,cAAAA,WAAW,EAAE;AAFN;AANN,WAhIC;AA2INC,UAAAA,GAAG,EAAE;AACH3I,YAAAA,IAAI,EAAE,WADH;AAEHC,YAAAA,QAAQ,EAAE,CACR,SADQ,CAFP;AAKHC,YAAAA,OAAO,EAAE;AACPmG,cAAAA,OAAO,EAAE;AADF;AALN,WA3IC;AAoJNuC,UAAAA,GAAG,EAAE;AACH5I,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP2I,cAAAA,aAAa,EAAE;AADR;AAFN,WApJC;AA0JNC,UAAAA,GAAG,EAAE;AACH9I,YAAAA,IAAI,EAAE,MADH;AAEHO,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPgB,gBAAAA,OAAO,EAAE;AADF;AALH;AAFL,WA1JC;AAsKN6H,UAAAA,GAAG,EAAE;AACH/I,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPuH,cAAAA,YAAY,EAAE;AACZzH,gBAAAA,IAAI,EAAE;AADM,eADP;AAIP0H,cAAAA,WAAW,EAAE;AACX1H,gBAAAA,IAAI,EAAE;AADK,eAJN;AAOP2H,cAAAA,UAAU,EAAE;AACVnH,gBAAAA,KAAK,EAAE;AADG,eAPL;AAUPoH,cAAAA,WAAW,EAAE,EAVN;AAWPC,cAAAA,YAAY,EAAE;AAXP,aAFN;AAeH7E,YAAAA,KAAK,EAAE;AAfJ,WAtKC;AAuLNgG,UAAAA,GAAG,EAAE;AACHhJ,YAAAA,IAAI,EAAE,WADH;AAEHC,YAAAA,QAAQ,EAAE,CACR,SADQ,CAFP;AAKHC,YAAAA,OAAO,EAAE;AACP+I,cAAAA,OAAO,EAAE;AACPjJ,gBAAAA,IAAI,EAAE;AADC,eADF;AAIPkJ,cAAAA,YAAY,EAAE;AACZlJ,gBAAAA,IAAI,EAAE,WADM;AAEZE,gBAAAA,OAAO,EAAE;AACPiJ,kBAAAA,QAAQ,EAAE;AACRnJ,oBAAAA,IAAI,EAAE,WADE;AAERC,oBAAAA,QAAQ,EAAE,CACR,QADQ,CAFF;AAKRC,oBAAAA,OAAO,EAAE;AACPI,sBAAAA,MAAM,EAAE;AACNN,wBAAAA,IAAI,EAAE,MADA;AAENO,wBAAAA,MAAM,EAAE;AACNC,0BAAAA,KAAK,EAAE;AADD;AAFF;AADD;AALD,mBADH;AAeP4I,kBAAAA,eAAe,EAAE;AACfpJ,oBAAAA,IAAI,EAAE,WADS;AAEfC,oBAAAA,QAAQ,EAAE,CACR,gBADQ,CAFK;AAKfC,oBAAAA,OAAO,EAAE;AACPmJ,sBAAAA,cAAc,EAAE;AACdrJ,wBAAAA,IAAI,EAAE;AADQ;AADT;AALM;AAfV;AAFG;AAJP;AALN,WAvLC;AAgONsJ,UAAAA,GAAG,EAAE;AACHtJ,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPqJ,cAAAA,MAAM,EAAE;AACNvJ,gBAAAA,IAAI,EAAE,MADA;AAENO,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,KAAK,EAAE;AADD;AAFF,eADD;AAOPgJ,cAAAA,KAAK,EAAE;AACLxJ,gBAAAA,IAAI,EAAE,WADD;AAELE,gBAAAA,OAAO,EAAE;AACPuJ,kBAAAA,QAAQ,EAAE;AACRjJ,oBAAAA,KAAK,EAAE;AADC,mBADH;AAIPkJ,kBAAAA,OAAO,EAAE;AACPlJ,oBAAAA,KAAK,EAAE;AADA,mBAJF;AAOPmJ,kBAAAA,WAAW,EAAE;AACXnJ,oBAAAA,KAAK,EAAE;AADI,mBAPN;AAUPoJ,kBAAAA,oBAAoB,EAAE;AACpBpJ,oBAAAA,KAAK,EAAE;AADa,mBAVf;AAaPqJ,kBAAAA,QAAQ,EAAE;AACRrJ,oBAAAA,KAAK,EAAE;AADC,mBAbH;AAgBPsJ,kBAAAA,iBAAiB,EAAE;AACjBtJ,oBAAAA,KAAK,EAAE;AADU;AAhBZ,iBAFJ;AAsBLwC,gBAAAA,KAAK,EAAE;AAtBF,eAPA;AA+BP+G,cAAAA,GAAG,EAAE;AACHvJ,gBAAAA,KAAK,EAAE;AADJ,eA/BE;AAkCPwJ,cAAAA,KAAK,EAAE;AACLhK,gBAAAA,IAAI,EAAE,MADD;AAELO,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,KAAK,EAAE;AADD;AAFH;AAlCA,aAFN;AA2CHwC,YAAAA,KAAK,EAAE;AA3CJ;AAhOC;AA7iDK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2022-10-03',\n    endpointPrefix: 'cases',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'ConnectCases',\n    serviceFullName: 'Amazon Connect Cases',\n    serviceId: 'ConnectCases',\n    signatureVersion: 'v4',\n    signingName: 'cases',\n    uid: 'connectcases-2022-10-03'\n  },\n  operations: {\n    BatchGetField: {\n      http: {\n        requestUri: '/domains/{domainId}/fields-batch',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'fields'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          fields: {\n            type: 'list',\n            member: {\n              shape: 'S4'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'errors',\n          'fields'\n        ],\n        members: {\n          errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'errorCode',\n                'id'\n              ],\n              members: {\n                errorCode: {},\n                id: {},\n                message: {}\n              }\n            }\n          },\n          fields: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'fieldArn',\n                'fieldId',\n                'name',\n                'namespace',\n                'type'\n              ],\n              members: {\n                createdTime: {\n                  shape: 'Sc'\n                },\n                deleted: {\n                  type: 'boolean'\n                },\n                description: {},\n                fieldArn: {},\n                fieldId: {},\n                lastModifiedTime: {\n                  shape: 'Sg'\n                },\n                name: {},\n                namespace: {},\n                tags: {\n                  shape: 'Sj'\n                },\n                type: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    BatchPutFieldOptions: {\n      http: {\n        method: 'PUT',\n        requestUri: '/domains/{domainId}/fields/{fieldId}/options',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'fieldId',\n          'options'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          fieldId: {\n            location: 'uri',\n            locationName: 'fieldId'\n          },\n          options: {\n            type: 'list',\n            member: {\n              shape: 'Sn'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'errorCode',\n                'message',\n                'value'\n              ],\n              members: {\n                errorCode: {},\n                message: {},\n                value: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateCase: {\n      http: {\n        requestUri: '/domains/{domainId}/cases',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'fields',\n          'templateId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          fields: {\n            type: 'list',\n            member: {\n              shape: 'Sx'\n            }\n          },\n          performedBy: {\n            shape: 'S12'\n          },\n          templateId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'caseArn',\n          'caseId'\n        ],\n        members: {\n          caseArn: {},\n          caseId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateDomain: {\n      http: {\n        requestUri: '/domains',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'domainArn',\n          'domainId',\n          'domainStatus'\n        ],\n        members: {\n          domainArn: {},\n          domainId: {},\n          domainStatus: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateField: {\n      http: {\n        requestUri: '/domains/{domainId}/fields',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'name',\n          'type'\n        ],\n        members: {\n          description: {},\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          name: {},\n          type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'fieldArn',\n          'fieldId'\n        ],\n        members: {\n          fieldArn: {},\n          fieldId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateLayout: {\n      http: {\n        requestUri: '/domains/{domainId}/layouts',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'content',\n          'domainId',\n          'name'\n        ],\n        members: {\n          content: {\n            shape: 'S1g'\n          },\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'layoutArn',\n          'layoutId'\n        ],\n        members: {\n          layoutArn: {},\n          layoutId: {}\n        }\n      }\n    },\n    CreateRelatedItem: {\n      http: {\n        requestUri: '/domains/{domainId}/cases/{caseId}/related-items/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'caseId',\n          'content',\n          'domainId',\n          'type'\n        ],\n        members: {\n          caseId: {\n            location: 'uri',\n            locationName: 'caseId'\n          },\n          content: {\n            type: 'structure',\n            members: {\n              comment: {\n                shape: 'S1v'\n              },\n              contact: {\n                type: 'structure',\n                required: [\n                  'contactArn'\n                ],\n                members: {\n                  contactArn: {}\n                }\n              },\n              file: {\n                shape: 'S20'\n              }\n            },\n            union: true\n          },\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          performedBy: {\n            shape: 'S12'\n          },\n          type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'relatedItemArn',\n          'relatedItemId'\n        ],\n        members: {\n          relatedItemArn: {},\n          relatedItemId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateTemplate: {\n      http: {\n        requestUri: '/domains/{domainId}/templates',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'name'\n        ],\n        members: {\n          description: {},\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          layoutConfiguration: {\n            shape: 'S28'\n          },\n          name: {},\n          requiredFields: {\n            shape: 'S2a'\n          },\n          status: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'templateArn',\n          'templateId'\n        ],\n        members: {\n          templateArn: {},\n          templateId: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteDomain: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/domains/{domainId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteField: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/domains/{domainId}/fields/{fieldId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'fieldId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          fieldId: {\n            location: 'uri',\n            locationName: 'fieldId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteLayout: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/domains/{domainId}/layouts/{layoutId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'layoutId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          layoutId: {\n            location: 'uri',\n            locationName: 'layoutId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteTemplate: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/domains/{domainId}/templates/{templateId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'templateId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          templateId: {\n            location: 'uri',\n            locationName: 'templateId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetCase: {\n      http: {\n        requestUri: '/domains/{domainId}/cases/{caseId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'caseId',\n          'domainId',\n          'fields'\n        ],\n        members: {\n          caseId: {\n            location: 'uri',\n            locationName: 'caseId'\n          },\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          fields: {\n            type: 'list',\n            member: {\n              shape: 'S4'\n            }\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'fields',\n          'templateId'\n        ],\n        members: {\n          fields: {\n            type: 'list',\n            member: {\n              shape: 'Sx'\n            }\n          },\n          nextToken: {},\n          tags: {\n            shape: 'Sj'\n          },\n          templateId: {}\n        }\n      }\n    },\n    GetCaseAuditEvents: {\n      http: {\n        requestUri: '/domains/{domainId}/cases/{caseId}/audit-history',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'caseId',\n          'domainId'\n        ],\n        members: {\n          caseId: {\n            location: 'uri',\n            locationName: 'caseId'\n          },\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'auditEvents'\n        ],\n        members: {\n          auditEvents: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'eventId',\n                'fields',\n                'performedTime',\n                'type'\n              ],\n              members: {\n                eventId: {},\n                fields: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    required: [\n                      'eventFieldId',\n                      'newValue'\n                    ],\n                    members: {\n                      eventFieldId: {},\n                      newValue: {\n                        shape: 'S31'\n                      },\n                      oldValue: {\n                        shape: 'S31'\n                      }\n                    }\n                  }\n                },\n                performedBy: {\n                  type: 'structure',\n                  required: [\n                    'iamPrincipalArn'\n                  ],\n                  members: {\n                    iamPrincipalArn: {},\n                    user: {\n                      shape: 'S12'\n                    }\n                  }\n                },\n                performedTime: {\n                  type: 'timestamp',\n                  timestampFormat: 'iso8601'\n                },\n                relatedItemType: {},\n                type: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetCaseEventConfiguration: {\n      http: {\n        requestUri: '/domains/{domainId}/case-event-configuration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'eventBridge'\n        ],\n        members: {\n          eventBridge: {\n            shape: 'S39'\n          }\n        }\n      }\n    },\n    GetDomain: {\n      http: {\n        requestUri: '/domains/{domainId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'createdTime',\n          'domainArn',\n          'domainId',\n          'domainStatus',\n          'name'\n        ],\n        members: {\n          createdTime: {\n            shape: 'Sc'\n          },\n          domainArn: {},\n          domainId: {},\n          domainStatus: {},\n          name: {},\n          tags: {\n            shape: 'Sj'\n          }\n        }\n      }\n    },\n    GetLayout: {\n      http: {\n        requestUri: '/domains/{domainId}/layouts/{layoutId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'layoutId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          layoutId: {\n            location: 'uri',\n            locationName: 'layoutId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'content',\n          'layoutArn',\n          'layoutId',\n          'name'\n        ],\n        members: {\n          content: {\n            shape: 'S1g'\n          },\n          createdTime: {\n            shape: 'Sc'\n          },\n          deleted: {\n            type: 'boolean'\n          },\n          lastModifiedTime: {\n            shape: 'Sg'\n          },\n          layoutArn: {},\n          layoutId: {},\n          name: {},\n          tags: {\n            shape: 'Sj'\n          }\n        }\n      }\n    },\n    GetTemplate: {\n      http: {\n        requestUri: '/domains/{domainId}/templates/{templateId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'templateId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          templateId: {\n            location: 'uri',\n            locationName: 'templateId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'name',\n          'status',\n          'templateArn',\n          'templateId'\n        ],\n        members: {\n          createdTime: {\n            shape: 'Sc'\n          },\n          deleted: {\n            type: 'boolean'\n          },\n          description: {},\n          lastModifiedTime: {\n            shape: 'Sg'\n          },\n          layoutConfiguration: {\n            shape: 'S28'\n          },\n          name: {},\n          requiredFields: {\n            shape: 'S2a'\n          },\n          status: {},\n          tags: {\n            shape: 'Sj'\n          },\n          templateArn: {},\n          templateId: {}\n        }\n      }\n    },\n    ListCasesForContact: {\n      http: {\n        requestUri: '/domains/{domainId}/list-cases-for-contact',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'contactArn',\n          'domainId'\n        ],\n        members: {\n          contactArn: {},\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'cases'\n        ],\n        members: {\n          cases: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'caseId',\n                'templateId'\n              ],\n              members: {\n                caseId: {},\n                templateId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDomains: {\n      http: {\n        requestUri: '/domains-list',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'domains'\n        ],\n        members: {\n          domains: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'domainArn',\n                'domainId',\n                'name'\n              ],\n              members: {\n                domainArn: {},\n                domainId: {},\n                name: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListFieldOptions: {\n      http: {\n        requestUri: '/domains/{domainId}/fields/{fieldId}/options-list',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'fieldId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          fieldId: {\n            location: 'uri',\n            locationName: 'fieldId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          values: {\n            location: 'querystring',\n            locationName: 'values',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'options'\n        ],\n        members: {\n          nextToken: {},\n          options: {\n            type: 'list',\n            member: {\n              shape: 'Sn'\n            }\n          }\n        }\n      }\n    },\n    ListFields: {\n      http: {\n        requestUri: '/domains/{domainId}/fields-list',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'fields'\n        ],\n        members: {\n          fields: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'fieldArn',\n                'fieldId',\n                'name',\n                'namespace',\n                'type'\n              ],\n              members: {\n                fieldArn: {},\n                fieldId: {},\n                name: {},\n                namespace: {},\n                type: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListLayouts: {\n      http: {\n        requestUri: '/domains/{domainId}/layouts-list',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'layouts'\n        ],\n        members: {\n          layouts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'layoutArn',\n                'layoutId',\n                'name'\n              ],\n              members: {\n                layoutArn: {},\n                layoutId: {},\n                name: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{arn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn'\n        ],\n        members: {\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sj'\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListTemplates: {\n      http: {\n        requestUri: '/domains/{domainId}/templates-list',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          status: {\n            location: 'querystring',\n            locationName: 'status',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'templates'\n        ],\n        members: {\n          nextToken: {},\n          templates: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'name',\n                'status',\n                'templateArn',\n                'templateId'\n              ],\n              members: {\n                name: {},\n                status: {},\n                templateArn: {},\n                templateId: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    PutCaseEventConfiguration: {\n      http: {\n        method: 'PUT',\n        requestUri: '/domains/{domainId}/case-event-configuration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'eventBridge'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          eventBridge: {\n            shape: 'S39'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    SearchCases: {\n      http: {\n        requestUri: '/domains/{domainId}/cases-search',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId'\n        ],\n        members: {\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          fields: {\n            type: 'list',\n            member: {\n              shape: 'S4'\n            }\n          },\n          filter: {\n            shape: 'S4k'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {},\n          searchTerm: {},\n          sorts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'fieldId',\n                'sortOrder'\n              ],\n              members: {\n                fieldId: {},\n                sortOrder: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'cases'\n        ],\n        members: {\n          cases: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'caseId',\n                'fields',\n                'templateId'\n              ],\n              members: {\n                caseId: {},\n                fields: {\n                  type: 'list',\n                  member: {\n                    shape: 'Sx'\n                  }\n                },\n                tags: {\n                  shape: 'Sj'\n                },\n                templateId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    SearchRelatedItems: {\n      http: {\n        requestUri: '/domains/{domainId}/cases/{caseId}/related-items-search',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'caseId',\n          'domainId'\n        ],\n        members: {\n          caseId: {\n            location: 'uri',\n            locationName: 'caseId'\n          },\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                comment: {\n                  type: 'structure',\n                  members: {}\n                },\n                contact: {\n                  type: 'structure',\n                  members: {\n                    channel: {\n                      type: 'list',\n                      member: {}\n                    },\n                    contactArn: {}\n                  }\n                },\n                file: {\n                  type: 'structure',\n                  members: {\n                    fileArn: {}\n                  }\n                }\n              },\n              union: true\n            }\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'relatedItems'\n        ],\n        members: {\n          nextToken: {},\n          relatedItems: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'associationTime',\n                'content',\n                'relatedItemId',\n                'type'\n              ],\n              members: {\n                associationTime: {\n                  type: 'timestamp',\n                  timestampFormat: 'iso8601'\n                },\n                content: {\n                  type: 'structure',\n                  members: {\n                    comment: {\n                      shape: 'S1v'\n                    },\n                    contact: {\n                      type: 'structure',\n                      required: [\n                        'channel',\n                        'connectedToSystemTime',\n                        'contactArn'\n                      ],\n                      members: {\n                        channel: {},\n                        connectedToSystemTime: {\n                          type: 'timestamp',\n                          timestampFormat: 'iso8601'\n                        },\n                        contactArn: {}\n                      }\n                    },\n                    file: {\n                      shape: 'S20'\n                    }\n                  },\n                  union: true\n                },\n                performedBy: {\n                  shape: 'S12'\n                },\n                relatedItemId: {},\n                tags: {\n                  shape: 'Sj'\n                },\n                type: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{arn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn',\n          'tags'\n        ],\n        members: {\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          },\n          tags: {\n            shape: 'Sj'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{arn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn',\n          'tagKeys'\n        ],\n        members: {\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateCase: {\n      http: {\n        method: 'PUT',\n        requestUri: '/domains/{domainId}/cases/{caseId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'caseId',\n          'domainId',\n          'fields'\n        ],\n        members: {\n          caseId: {\n            location: 'uri',\n            locationName: 'caseId'\n          },\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          fields: {\n            type: 'list',\n            member: {\n              shape: 'Sx'\n            }\n          },\n          performedBy: {\n            shape: 'S12'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateField: {\n      http: {\n        method: 'PUT',\n        requestUri: '/domains/{domainId}/fields/{fieldId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'fieldId'\n        ],\n        members: {\n          description: {},\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          fieldId: {\n            location: 'uri',\n            locationName: 'fieldId'\n          },\n          name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateLayout: {\n      http: {\n        method: 'PUT',\n        requestUri: '/domains/{domainId}/layouts/{layoutId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'layoutId'\n        ],\n        members: {\n          content: {\n            shape: 'S1g'\n          },\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          layoutId: {\n            location: 'uri',\n            locationName: 'layoutId'\n          },\n          name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateTemplate: {\n      http: {\n        method: 'PUT',\n        requestUri: '/domains/{domainId}/templates/{templateId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainId',\n          'templateId'\n        ],\n        members: {\n          description: {},\n          domainId: {\n            location: 'uri',\n            locationName: 'domainId'\n          },\n          layoutConfiguration: {\n            shape: 'S28'\n          },\n          name: {},\n          requiredFields: {\n            shape: 'S2a'\n          },\n          status: {},\n          templateId: {\n            location: 'uri',\n            locationName: 'templateId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'structure',\n      required: [\n        'id'\n      ],\n      members: {\n        id: {}\n      }\n    },\n    Sc: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    Sg: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    Sj: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sn: {\n      type: 'structure',\n      required: [\n        'active',\n        'name',\n        'value'\n      ],\n      members: {\n        active: {\n          type: 'boolean'\n        },\n        name: {},\n        value: {}\n      }\n    },\n    Sx: {\n      type: 'structure',\n      required: [\n        'id',\n        'value'\n      ],\n      members: {\n        id: {},\n        value: {\n          type: 'structure',\n          members: {\n            booleanValue: {\n              type: 'boolean'\n            },\n            doubleValue: {\n              type: 'double'\n            },\n            emptyValue: {\n              shape: 'S10'\n            },\n            stringValue: {},\n            userArnValue: {}\n          },\n          union: true\n        }\n      }\n    },\n    S10: {\n      type: 'structure',\n      members: {}\n    },\n    S12: {\n      type: 'structure',\n      members: {\n        userArn: {}\n      },\n      union: true\n    },\n    S1g: {\n      type: 'structure',\n      members: {\n        basic: {\n          type: 'structure',\n          members: {\n            moreInfo: {\n              shape: 'S1i'\n            },\n            topPanel: {\n              shape: 'S1i'\n            }\n          }\n        }\n      },\n      union: true\n    },\n    S1i: {\n      type: 'structure',\n      members: {\n        sections: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              fieldGroup: {\n                type: 'structure',\n                required: [\n                  'fields'\n                ],\n                members: {\n                  fields: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      required: [\n                        'id'\n                      ],\n                      members: {\n                        id: {}\n                      }\n                    }\n                  },\n                  name: {}\n                }\n              }\n            },\n            union: true\n          }\n        }\n      }\n    },\n    S1v: {\n      type: 'structure',\n      required: [\n        'body',\n        'contentType'\n      ],\n      members: {\n        body: {},\n        contentType: {}\n      }\n    },\n    S20: {\n      type: 'structure',\n      required: [\n        'fileArn'\n      ],\n      members: {\n        fileArn: {}\n      }\n    },\n    S28: {\n      type: 'structure',\n      members: {\n        defaultLayout: {}\n      }\n    },\n    S2a: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'fieldId'\n        ],\n        members: {\n          fieldId: {}\n        }\n      }\n    },\n    S31: {\n      type: 'structure',\n      members: {\n        booleanValue: {\n          type: 'boolean'\n        },\n        doubleValue: {\n          type: 'double'\n        },\n        emptyValue: {\n          shape: 'S10'\n        },\n        stringValue: {},\n        userArnValue: {}\n      },\n      union: true\n    },\n    S39: {\n      type: 'structure',\n      required: [\n        'enabled'\n      ],\n      members: {\n        enabled: {\n          type: 'boolean'\n        },\n        includedData: {\n          type: 'structure',\n          members: {\n            caseData: {\n              type: 'structure',\n              required: [\n                'fields'\n              ],\n              members: {\n                fields: {\n                  type: 'list',\n                  member: {\n                    shape: 'S4'\n                  }\n                }\n              }\n            },\n            relatedItemData: {\n              type: 'structure',\n              required: [\n                'includeContent'\n              ],\n              members: {\n                includeContent: {\n                  type: 'boolean'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S4k: {\n      type: 'structure',\n      members: {\n        andAll: {\n          type: 'list',\n          member: {\n            shape: 'S4k'\n          }\n        },\n        field: {\n          type: 'structure',\n          members: {\n            contains: {\n              shape: 'Sx'\n            },\n            equalTo: {\n              shape: 'Sx'\n            },\n            greaterThan: {\n              shape: 'Sx'\n            },\n            greaterThanOrEqualTo: {\n              shape: 'Sx'\n            },\n            lessThan: {\n              shape: 'Sx'\n            },\n            lessThanOrEqualTo: {\n              shape: 'Sx'\n            }\n          },\n          union: true\n        },\n        not: {\n          shape: 'S4k'\n        },\n        orAll: {\n          type: 'list',\n          member: {\n            shape: 'S4k'\n          }\n        }\n      },\n      union: true\n    }\n  }\n}"]}