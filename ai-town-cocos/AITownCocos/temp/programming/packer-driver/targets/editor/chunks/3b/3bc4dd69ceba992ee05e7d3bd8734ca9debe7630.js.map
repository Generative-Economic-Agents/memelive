{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/location-2020-11-19.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","protocol","protocols","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","AssociateTrackerConsumer","http","requestUri","responseCode","input","type","required","members","TrackerName","location","locationName","ConsumerArn","output","endpoint","hostPrefix","BatchDeleteDevicePositionHistory","DeviceIds","member","Errors","DeviceId","Error","shape","BatchDeleteGeofence","CollectionName","GeofenceIds","GeofenceId","BatchEvaluateGeofences","DevicePositionUpdates","SampleTime","BatchGetDevicePosition","DevicePositions","BatchPutGeofence","Entries","Geometry","GeofenceProperties","Successes","CreateTime","UpdateTime","BatchUpdateDevicePosition","Updates","CalculateRoute","CalculatorName","DeparturePosition","DestinationPosition","WaypointPositions","TravelMode","DepartureTime","DepartNow","DistanceUnit","IncludeLegGeometry","CarModeOptions","TruckModeOptions","ArrivalTime","OptimizeFor","Key","Legs","StartPosition","EndPosition","Distance","DurationSeconds","LineString","Steps","GeometryOffset","Summary","RouteBBox","DataSource","CalculateRouteMatrix","DeparturePositions","DestinationPositions","RouteMatrix","Code","Message","SnappedDeparturePositions","SnappedDestinationPositions","RouteCount","ErrorCount","CreateGeofenceCollection","PricingPlan","deprecated","deprecatedMessage","PricingPlanDataSource","Description","Tags","KmsKeyId","CollectionArn","idempotent","CreateKey","KeyName","Restrictions","ExpireTime","NoExpiry","KeyArn","CreateMap","MapName","Configuration","MapArn","CreatePlaceIndex","IndexName","DataSourceConfiguration","IndexArn","CreateRouteCalculator","CalculatorArn","CreateTracker","PositionFiltering","EventBridgeEnabled","KmsKeyEnableGeospatialQueries","TrackerArn","DeleteGeofenceCollection","method","DeleteKey","ForceDelete","DeleteMap","DeletePlaceIndex","DeleteRouteCalculator","DeleteTracker","DescribeGeofenceCollection","GeofenceCount","DescribeKey","DescribeMap","DescribePlaceIndex","DescribeRouteCalculator","DescribeTracker","DisassociateTrackerConsumer","ForecastGeofenceEvents","DeviceState","Position","Speed","TimeHorizonMinutes","SpeedUnit","NextToken","MaxResults","ForecastedEvents","EventId","IsDeviceInGeofence","NearestDistance","EventType","ForecastedBreachTime","GetDevicePosition","ReceivedTime","Accuracy","PositionProperties","GetDevicePositionHistory","StartTimeInclusive","EndTimeExclusive","GetGeofence","Status","GetMapGlyphs","FontStack","FontUnicodeRange","Blob","ContentType","CacheControl","payload","GetMapSprites","FileName","GetMapStyleDescriptor","GetMapTile","Z","X","Y","GetPlace","PlaceId","Language","Place","ListDevicePositions","FilterGeometry","Polygon","ListGeofenceCollections","ListGeofences","ListKeys","Filter","KeyStatus","ListMaps","ListPlaceIndexes","ListRouteCalculators","ListTagsForResource","ResourceArn","ListTrackerConsumers","ConsumerArns","ListTrackers","PutGeofence","SearchPlaceIndexForPosition","Results","SearchPlaceIndexForSuggestions","Text","sensitive","BiasPosition","FilterBBox","FilterCountries","FilterCategories","Categories","SupplementalCategories","SearchPlaceIndexForText","ResultBBox","Relevance","TagResource","UntagResource","TagKeys","UpdateGeofenceCollection","UpdateKey","ForceUpdate","UpdateMap","ConfigurationUpdate","PoliticalView","CustomLayers","UpdatePlaceIndex","UpdateRouteCalculator","UpdateTracker","VerifyDevicePosition","Ipv4Address","WiFiAccessPoints","MacAddress","Rss","CellSignals","LteCellDetails","CellId","Mcc","Mnc","LocalId","Earfcn","Pci","NetworkMeasurements","Rsrp","Rsrq","TimingAdvance","NrCapable","Tac","InferredState","DeviationDistance","ProxyDetected","shapes","Sb","Sl","Sm","timestampFormat","Sn","Sp","Horizontal","Sr","key","value","S13","S18","Circle","Center","Radius","Geobuf","S19","S1s","AvoidFerries","AvoidTolls","S1t","Dimensions","Length","Height","Width","Unit","Weight","Total","S23","S2h","S33","S39","AllowActions","AllowResources","AllowReferers","S3i","Style","S3l","S3q","IntendedUse","S5s","Label","Point","AddressNumber","Street","Neighborhood","Municipality","SubRegion","Region","Country","PostalCode","Interpolated","TimeZone","Name","Offset","UnitType","UnitNumber","SubMunicipality","S5w","S5y","S7o","S7q","S7t"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-11-19',\n    endpointPrefix: 'geo',\n    protocol: 'rest-json',\n    protocols: [\n      'rest-json'\n    ],\n    serviceFullName: 'Amazon Location Service',\n    serviceId: 'Location',\n    signatureVersion: 'v4',\n    signingName: 'geo',\n    uid: 'location-2020-11-19'\n  },\n  operations: {\n    AssociateTrackerConsumer: {\n      http: {\n        requestUri: '/tracking/v0/trackers/{TrackerName}/consumers',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'ConsumerArn'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          ConsumerArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpoint: {\n        hostPrefix: 'cp.tracking.'\n      }\n    },\n    BatchDeleteDevicePositionHistory: {\n      http: {\n        requestUri: '/tracking/v0/trackers/{TrackerName}/delete-positions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'DeviceIds'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          DeviceIds: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Errors'\n        ],\n        members: {\n          Errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'DeviceId',\n                'Error'\n              ],\n              members: {\n                DeviceId: {},\n                Error: {\n                  shape: 'Sb'\n                }\n              }\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'tracking.'\n      }\n    },\n    BatchDeleteGeofence: {\n      http: {\n        requestUri: '/geofencing/v0/collections/{CollectionName}/delete-geofences',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName',\n          'GeofenceIds'\n        ],\n        members: {\n          CollectionName: {\n            location: 'uri',\n            locationName: 'CollectionName'\n          },\n          GeofenceIds: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Errors'\n        ],\n        members: {\n          Errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'GeofenceId',\n                'Error'\n              ],\n              members: {\n                GeofenceId: {},\n                Error: {\n                  shape: 'Sb'\n                }\n              }\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'geofencing.'\n      }\n    },\n    BatchEvaluateGeofences: {\n      http: {\n        requestUri: '/geofencing/v0/collections/{CollectionName}/positions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName',\n          'DevicePositionUpdates'\n        ],\n        members: {\n          CollectionName: {\n            location: 'uri',\n            locationName: 'CollectionName'\n          },\n          DevicePositionUpdates: {\n            type: 'list',\n            member: {\n              shape: 'Sl'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Errors'\n        ],\n        members: {\n          Errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'DeviceId',\n                'SampleTime',\n                'Error'\n              ],\n              members: {\n                DeviceId: {},\n                SampleTime: {\n                  shape: 'Sm'\n                },\n                Error: {\n                  shape: 'Sb'\n                }\n              }\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'geofencing.'\n      }\n    },\n    BatchGetDevicePosition: {\n      http: {\n        requestUri: '/tracking/v0/trackers/{TrackerName}/get-positions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'DeviceIds'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          DeviceIds: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Errors',\n          'DevicePositions'\n        ],\n        members: {\n          Errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'DeviceId',\n                'Error'\n              ],\n              members: {\n                DeviceId: {},\n                Error: {\n                  shape: 'Sb'\n                }\n              }\n            }\n          },\n          DevicePositions: {\n            shape: 'S13'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'tracking.'\n      }\n    },\n    BatchPutGeofence: {\n      http: {\n        requestUri: '/geofencing/v0/collections/{CollectionName}/put-geofences',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName',\n          'Entries'\n        ],\n        members: {\n          CollectionName: {\n            location: 'uri',\n            locationName: 'CollectionName'\n          },\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'GeofenceId',\n                'Geometry'\n              ],\n              members: {\n                GeofenceId: {},\n                Geometry: {\n                  shape: 'S18'\n                },\n                GeofenceProperties: {\n                  shape: 'Sr'\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Successes',\n          'Errors'\n        ],\n        members: {\n          Successes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'GeofenceId',\n                'CreateTime',\n                'UpdateTime'\n              ],\n              members: {\n                GeofenceId: {},\n                CreateTime: {\n                  shape: 'Sm'\n                },\n                UpdateTime: {\n                  shape: 'Sm'\n                }\n              }\n            }\n          },\n          Errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'GeofenceId',\n                'Error'\n              ],\n              members: {\n                GeofenceId: {},\n                Error: {\n                  shape: 'Sb'\n                }\n              }\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'geofencing.'\n      }\n    },\n    BatchUpdateDevicePosition: {\n      http: {\n        requestUri: '/tracking/v0/trackers/{TrackerName}/positions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'Updates'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          Updates: {\n            type: 'list',\n            member: {\n              shape: 'Sl'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Errors'\n        ],\n        members: {\n          Errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'DeviceId',\n                'SampleTime',\n                'Error'\n              ],\n              members: {\n                DeviceId: {},\n                SampleTime: {\n                  shape: 'Sm'\n                },\n                Error: {\n                  shape: 'Sb'\n                }\n              }\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'tracking.'\n      }\n    },\n    CalculateRoute: {\n      http: {\n        requestUri: '/routes/v0/calculators/{CalculatorName}/calculate/route',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CalculatorName',\n          'DeparturePosition',\n          'DestinationPosition'\n        ],\n        members: {\n          CalculatorName: {\n            location: 'uri',\n            locationName: 'CalculatorName'\n          },\n          DeparturePosition: {\n            shape: 'Sn'\n          },\n          DestinationPosition: {\n            shape: 'Sn'\n          },\n          WaypointPositions: {\n            type: 'list',\n            member: {\n              shape: 'Sn'\n            }\n          },\n          TravelMode: {},\n          DepartureTime: {\n            shape: 'Sm'\n          },\n          DepartNow: {\n            type: 'boolean'\n          },\n          DistanceUnit: {},\n          IncludeLegGeometry: {\n            type: 'boolean'\n          },\n          CarModeOptions: {\n            shape: 'S1s'\n          },\n          TruckModeOptions: {\n            shape: 'S1t'\n          },\n          ArrivalTime: {\n            shape: 'Sm'\n          },\n          OptimizeFor: {},\n          Key: {\n            shape: 'S23',\n            location: 'querystring',\n            locationName: 'key'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Legs',\n          'Summary'\n        ],\n        members: {\n          Legs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'StartPosition',\n                'EndPosition',\n                'Distance',\n                'DurationSeconds',\n                'Steps'\n              ],\n              members: {\n                StartPosition: {\n                  shape: 'Sn'\n                },\n                EndPosition: {\n                  shape: 'Sn'\n                },\n                Distance: {\n                  type: 'double'\n                },\n                DurationSeconds: {\n                  type: 'double'\n                },\n                Geometry: {\n                  type: 'structure',\n                  members: {\n                    LineString: {\n                      type: 'list',\n                      member: {\n                        shape: 'Sn'\n                      }\n                    }\n                  }\n                },\n                Steps: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    required: [\n                      'StartPosition',\n                      'EndPosition',\n                      'Distance',\n                      'DurationSeconds'\n                    ],\n                    members: {\n                      StartPosition: {\n                        shape: 'Sn'\n                      },\n                      EndPosition: {\n                        shape: 'Sn'\n                      },\n                      Distance: {\n                        type: 'double'\n                      },\n                      DurationSeconds: {\n                        type: 'double'\n                      },\n                      GeometryOffset: {\n                        type: 'integer'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          Summary: {\n            type: 'structure',\n            required: [\n              'RouteBBox',\n              'DataSource',\n              'Distance',\n              'DurationSeconds',\n              'DistanceUnit'\n            ],\n            members: {\n              RouteBBox: {\n                shape: 'S2h'\n              },\n              DataSource: {},\n              Distance: {\n                type: 'double'\n              },\n              DurationSeconds: {\n                type: 'double'\n              },\n              DistanceUnit: {}\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'routes.'\n      }\n    },\n    CalculateRouteMatrix: {\n      http: {\n        requestUri: '/routes/v0/calculators/{CalculatorName}/calculate/route-matrix',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CalculatorName',\n          'DeparturePositions',\n          'DestinationPositions'\n        ],\n        members: {\n          CalculatorName: {\n            location: 'uri',\n            locationName: 'CalculatorName'\n          },\n          DeparturePositions: {\n            type: 'list',\n            member: {\n              shape: 'Sn'\n            }\n          },\n          DestinationPositions: {\n            type: 'list',\n            member: {\n              shape: 'Sn'\n            }\n          },\n          TravelMode: {},\n          DepartureTime: {\n            shape: 'Sm'\n          },\n          DepartNow: {\n            type: 'boolean'\n          },\n          DistanceUnit: {},\n          CarModeOptions: {\n            shape: 'S1s'\n          },\n          TruckModeOptions: {\n            shape: 'S1t'\n          },\n          Key: {\n            shape: 'S23',\n            location: 'querystring',\n            locationName: 'key'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'RouteMatrix',\n          'Summary'\n        ],\n        members: {\n          RouteMatrix: {\n            type: 'list',\n            member: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                members: {\n                  Distance: {\n                    type: 'double'\n                  },\n                  DurationSeconds: {\n                    type: 'double'\n                  },\n                  Error: {\n                    type: 'structure',\n                    required: [\n                      'Code'\n                    ],\n                    members: {\n                      Code: {},\n                      Message: {}\n                    }\n                  }\n                }\n              }\n            }\n          },\n          SnappedDeparturePositions: {\n            type: 'list',\n            member: {\n              shape: 'Sn'\n            }\n          },\n          SnappedDestinationPositions: {\n            type: 'list',\n            member: {\n              shape: 'Sn'\n            }\n          },\n          Summary: {\n            type: 'structure',\n            required: [\n              'DataSource',\n              'RouteCount',\n              'ErrorCount',\n              'DistanceUnit'\n            ],\n            members: {\n              DataSource: {},\n              RouteCount: {\n                type: 'integer'\n              },\n              ErrorCount: {\n                type: 'integer'\n              },\n              DistanceUnit: {}\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'routes.'\n      }\n    },\n    CreateGeofenceCollection: {\n      http: {\n        requestUri: '/geofencing/v0/collections',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName'\n        ],\n        members: {\n          CollectionName: {},\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. If included, the only allowed value is RequestBasedUsage.'\n          },\n          PricingPlanDataSource: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. No longer allowed.'\n          },\n          Description: {},\n          Tags: {\n            shape: 'S33'\n          },\n          KmsKeyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CollectionName',\n          'CollectionArn',\n          'CreateTime'\n        ],\n        members: {\n          CollectionName: {},\n          CollectionArn: {},\n          CreateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.geofencing.'\n      },\n      idempotent: true\n    },\n    CreateKey: {\n      http: {\n        requestUri: '/metadata/v0/keys',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'KeyName',\n          'Restrictions'\n        ],\n        members: {\n          KeyName: {},\n          Restrictions: {\n            shape: 'S39'\n          },\n          Description: {},\n          ExpireTime: {\n            shape: 'Sm'\n          },\n          NoExpiry: {\n            type: 'boolean'\n          },\n          Tags: {\n            shape: 'S33'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Key',\n          'KeyArn',\n          'KeyName',\n          'CreateTime'\n        ],\n        members: {\n          Key: {\n            shape: 'S23'\n          },\n          KeyArn: {},\n          KeyName: {},\n          CreateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.metadata.'\n      },\n      idempotent: true\n    },\n    CreateMap: {\n      http: {\n        requestUri: '/maps/v0/maps',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MapName',\n          'Configuration'\n        ],\n        members: {\n          MapName: {},\n          Configuration: {\n            shape: 'S3i'\n          },\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. If included, the only allowed value is RequestBasedUsage.'\n          },\n          Description: {},\n          Tags: {\n            shape: 'S33'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'MapName',\n          'MapArn',\n          'CreateTime'\n        ],\n        members: {\n          MapName: {},\n          MapArn: {},\n          CreateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.maps.'\n      },\n      idempotent: true\n    },\n    CreatePlaceIndex: {\n      http: {\n        requestUri: '/places/v0/indexes',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IndexName',\n          'DataSource'\n        ],\n        members: {\n          IndexName: {},\n          DataSource: {},\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. If included, the only allowed value is RequestBasedUsage.'\n          },\n          Description: {},\n          DataSourceConfiguration: {\n            shape: 'S3q'\n          },\n          Tags: {\n            shape: 'S33'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'IndexName',\n          'IndexArn',\n          'CreateTime'\n        ],\n        members: {\n          IndexName: {},\n          IndexArn: {},\n          CreateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.places.'\n      },\n      idempotent: true\n    },\n    CreateRouteCalculator: {\n      http: {\n        requestUri: '/routes/v0/calculators',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CalculatorName',\n          'DataSource'\n        ],\n        members: {\n          CalculatorName: {},\n          DataSource: {},\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. If included, the only allowed value is RequestBasedUsage.'\n          },\n          Description: {},\n          Tags: {\n            shape: 'S33'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CalculatorName',\n          'CalculatorArn',\n          'CreateTime'\n        ],\n        members: {\n          CalculatorName: {},\n          CalculatorArn: {},\n          CreateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.routes.'\n      },\n      idempotent: true\n    },\n    CreateTracker: {\n      http: {\n        requestUri: '/tracking/v0/trackers',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName'\n        ],\n        members: {\n          TrackerName: {},\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. If included, the only allowed value is RequestBasedUsage.'\n          },\n          KmsKeyId: {},\n          PricingPlanDataSource: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. No longer allowed.'\n          },\n          Description: {},\n          Tags: {\n            shape: 'S33'\n          },\n          PositionFiltering: {},\n          EventBridgeEnabled: {\n            type: 'boolean'\n          },\n          KmsKeyEnableGeospatialQueries: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'TrackerArn',\n          'CreateTime'\n        ],\n        members: {\n          TrackerName: {},\n          TrackerArn: {},\n          CreateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.tracking.'\n      },\n      idempotent: true\n    },\n    DeleteGeofenceCollection: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/geofencing/v0/collections/{CollectionName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName'\n        ],\n        members: {\n          CollectionName: {\n            location: 'uri',\n            locationName: 'CollectionName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpoint: {\n        hostPrefix: 'cp.geofencing.'\n      },\n      idempotent: true\n    },\n    DeleteKey: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/metadata/v0/keys/{KeyName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'KeyName'\n        ],\n        members: {\n          KeyName: {\n            location: 'uri',\n            locationName: 'KeyName'\n          },\n          ForceDelete: {\n            location: 'querystring',\n            locationName: 'forceDelete',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpoint: {\n        hostPrefix: 'cp.metadata.'\n      },\n      idempotent: true\n    },\n    DeleteMap: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/maps/v0/maps/{MapName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MapName'\n        ],\n        members: {\n          MapName: {\n            location: 'uri',\n            locationName: 'MapName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpoint: {\n        hostPrefix: 'cp.maps.'\n      },\n      idempotent: true\n    },\n    DeletePlaceIndex: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/places/v0/indexes/{IndexName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IndexName'\n        ],\n        members: {\n          IndexName: {\n            location: 'uri',\n            locationName: 'IndexName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpoint: {\n        hostPrefix: 'cp.places.'\n      },\n      idempotent: true\n    },\n    DeleteRouteCalculator: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/routes/v0/calculators/{CalculatorName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CalculatorName'\n        ],\n        members: {\n          CalculatorName: {\n            location: 'uri',\n            locationName: 'CalculatorName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpoint: {\n        hostPrefix: 'cp.routes.'\n      },\n      idempotent: true\n    },\n    DeleteTracker: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tracking/v0/trackers/{TrackerName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpoint: {\n        hostPrefix: 'cp.tracking.'\n      },\n      idempotent: true\n    },\n    DescribeGeofenceCollection: {\n      http: {\n        method: 'GET',\n        requestUri: '/geofencing/v0/collections/{CollectionName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName'\n        ],\n        members: {\n          CollectionName: {\n            location: 'uri',\n            locationName: 'CollectionName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CollectionName',\n          'CollectionArn',\n          'Description',\n          'CreateTime',\n          'UpdateTime'\n        ],\n        members: {\n          CollectionName: {},\n          CollectionArn: {},\n          Description: {},\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. Always returns RequestBasedUsage.'\n          },\n          PricingPlanDataSource: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. Unused.'\n          },\n          KmsKeyId: {},\n          Tags: {\n            shape: 'S33'\n          },\n          CreateTime: {\n            shape: 'Sm'\n          },\n          UpdateTime: {\n            shape: 'Sm'\n          },\n          GeofenceCount: {\n            type: 'integer'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.geofencing.'\n      }\n    },\n    DescribeKey: {\n      http: {\n        method: 'GET',\n        requestUri: '/metadata/v0/keys/{KeyName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'KeyName'\n        ],\n        members: {\n          KeyName: {\n            location: 'uri',\n            locationName: 'KeyName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Key',\n          'KeyArn',\n          'KeyName',\n          'Restrictions',\n          'CreateTime',\n          'ExpireTime',\n          'UpdateTime'\n        ],\n        members: {\n          Key: {\n            shape: 'S23'\n          },\n          KeyArn: {},\n          KeyName: {},\n          Restrictions: {\n            shape: 'S39'\n          },\n          CreateTime: {\n            shape: 'Sm'\n          },\n          ExpireTime: {\n            shape: 'Sm'\n          },\n          UpdateTime: {\n            shape: 'Sm'\n          },\n          Description: {},\n          Tags: {\n            shape: 'S33'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.metadata.'\n      }\n    },\n    DescribeMap: {\n      http: {\n        method: 'GET',\n        requestUri: '/maps/v0/maps/{MapName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MapName'\n        ],\n        members: {\n          MapName: {\n            location: 'uri',\n            locationName: 'MapName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'MapName',\n          'MapArn',\n          'DataSource',\n          'Configuration',\n          'Description',\n          'CreateTime',\n          'UpdateTime'\n        ],\n        members: {\n          MapName: {},\n          MapArn: {},\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. Always returns RequestBasedUsage.'\n          },\n          DataSource: {},\n          Configuration: {\n            shape: 'S3i'\n          },\n          Description: {},\n          Tags: {\n            shape: 'S33'\n          },\n          CreateTime: {\n            shape: 'Sm'\n          },\n          UpdateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.maps.'\n      }\n    },\n    DescribePlaceIndex: {\n      http: {\n        method: 'GET',\n        requestUri: '/places/v0/indexes/{IndexName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IndexName'\n        ],\n        members: {\n          IndexName: {\n            location: 'uri',\n            locationName: 'IndexName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'IndexName',\n          'IndexArn',\n          'Description',\n          'CreateTime',\n          'UpdateTime',\n          'DataSource',\n          'DataSourceConfiguration'\n        ],\n        members: {\n          IndexName: {},\n          IndexArn: {},\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. Always returns RequestBasedUsage.'\n          },\n          Description: {},\n          CreateTime: {\n            shape: 'Sm'\n          },\n          UpdateTime: {\n            shape: 'Sm'\n          },\n          DataSource: {},\n          DataSourceConfiguration: {\n            shape: 'S3q'\n          },\n          Tags: {\n            shape: 'S33'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.places.'\n      }\n    },\n    DescribeRouteCalculator: {\n      http: {\n        method: 'GET',\n        requestUri: '/routes/v0/calculators/{CalculatorName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CalculatorName'\n        ],\n        members: {\n          CalculatorName: {\n            location: 'uri',\n            locationName: 'CalculatorName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CalculatorName',\n          'CalculatorArn',\n          'Description',\n          'CreateTime',\n          'UpdateTime',\n          'DataSource'\n        ],\n        members: {\n          CalculatorName: {},\n          CalculatorArn: {},\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. Always returns RequestBasedUsage.'\n          },\n          Description: {},\n          CreateTime: {\n            shape: 'Sm'\n          },\n          UpdateTime: {\n            shape: 'Sm'\n          },\n          DataSource: {},\n          Tags: {\n            shape: 'S33'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.routes.'\n      }\n    },\n    DescribeTracker: {\n      http: {\n        method: 'GET',\n        requestUri: '/tracking/v0/trackers/{TrackerName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'TrackerArn',\n          'Description',\n          'CreateTime',\n          'UpdateTime'\n        ],\n        members: {\n          TrackerName: {},\n          TrackerArn: {},\n          Description: {},\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. Always returns RequestBasedUsage.'\n          },\n          PricingPlanDataSource: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. Unused.'\n          },\n          Tags: {\n            shape: 'S33'\n          },\n          CreateTime: {\n            shape: 'Sm'\n          },\n          UpdateTime: {\n            shape: 'Sm'\n          },\n          KmsKeyId: {},\n          PositionFiltering: {},\n          EventBridgeEnabled: {\n            type: 'boolean'\n          },\n          KmsKeyEnableGeospatialQueries: {\n            type: 'boolean'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.tracking.'\n      }\n    },\n    DisassociateTrackerConsumer: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tracking/v0/trackers/{TrackerName}/consumers/{ConsumerArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'ConsumerArn'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          ConsumerArn: {\n            location: 'uri',\n            locationName: 'ConsumerArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpoint: {\n        hostPrefix: 'cp.tracking.'\n      }\n    },\n    ForecastGeofenceEvents: {\n      http: {\n        requestUri: '/geofencing/v0/collections/{CollectionName}/forecast-geofence-events',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName',\n          'DeviceState'\n        ],\n        members: {\n          CollectionName: {\n            location: 'uri',\n            locationName: 'CollectionName'\n          },\n          DeviceState: {\n            type: 'structure',\n            required: [\n              'Position'\n            ],\n            members: {\n              Position: {\n                shape: 'Sn'\n              },\n              Speed: {\n                type: 'double'\n              }\n            }\n          },\n          TimeHorizonMinutes: {\n            type: 'double'\n          },\n          DistanceUnit: {},\n          SpeedUnit: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ForecastedEvents',\n          'DistanceUnit',\n          'SpeedUnit'\n        ],\n        members: {\n          ForecastedEvents: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'EventId',\n                'GeofenceId',\n                'IsDeviceInGeofence',\n                'NearestDistance',\n                'EventType'\n              ],\n              members: {\n                EventId: {},\n                GeofenceId: {},\n                IsDeviceInGeofence: {\n                  type: 'boolean'\n                },\n                NearestDistance: {\n                  type: 'double'\n                },\n                EventType: {},\n                ForecastedBreachTime: {\n                  shape: 'Sm'\n                },\n                GeofenceProperties: {\n                  shape: 'Sr'\n                }\n              }\n            }\n          },\n          NextToken: {},\n          DistanceUnit: {},\n          SpeedUnit: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'geofencing.'\n      }\n    },\n    GetDevicePosition: {\n      http: {\n        method: 'GET',\n        requestUri: '/tracking/v0/trackers/{TrackerName}/devices/{DeviceId}/positions/latest',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'DeviceId'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          DeviceId: {\n            location: 'uri',\n            locationName: 'DeviceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'SampleTime',\n          'ReceivedTime',\n          'Position'\n        ],\n        members: {\n          DeviceId: {},\n          SampleTime: {\n            shape: 'Sm'\n          },\n          ReceivedTime: {\n            shape: 'Sm'\n          },\n          Position: {\n            shape: 'Sn'\n          },\n          Accuracy: {\n            shape: 'Sp'\n          },\n          PositionProperties: {\n            shape: 'Sr'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'tracking.'\n      }\n    },\n    GetDevicePositionHistory: {\n      http: {\n        requestUri: '/tracking/v0/trackers/{TrackerName}/devices/{DeviceId}/list-positions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'DeviceId'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          DeviceId: {\n            location: 'uri',\n            locationName: 'DeviceId'\n          },\n          NextToken: {},\n          StartTimeInclusive: {\n            shape: 'Sm'\n          },\n          EndTimeExclusive: {\n            shape: 'Sm'\n          },\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'DevicePositions'\n        ],\n        members: {\n          DevicePositions: {\n            shape: 'S13'\n          },\n          NextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'tracking.'\n      }\n    },\n    GetGeofence: {\n      http: {\n        method: 'GET',\n        requestUri: '/geofencing/v0/collections/{CollectionName}/geofences/{GeofenceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName',\n          'GeofenceId'\n        ],\n        members: {\n          CollectionName: {\n            location: 'uri',\n            locationName: 'CollectionName'\n          },\n          GeofenceId: {\n            location: 'uri',\n            locationName: 'GeofenceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'GeofenceId',\n          'Geometry',\n          'Status',\n          'CreateTime',\n          'UpdateTime'\n        ],\n        members: {\n          GeofenceId: {},\n          Geometry: {\n            shape: 'S18'\n          },\n          Status: {},\n          CreateTime: {\n            shape: 'Sm'\n          },\n          UpdateTime: {\n            shape: 'Sm'\n          },\n          GeofenceProperties: {\n            shape: 'Sr'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'geofencing.'\n      }\n    },\n    GetMapGlyphs: {\n      http: {\n        method: 'GET',\n        requestUri: '/maps/v0/maps/{MapName}/glyphs/{FontStack}/{FontUnicodeRange}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MapName',\n          'FontStack',\n          'FontUnicodeRange'\n        ],\n        members: {\n          MapName: {\n            location: 'uri',\n            locationName: 'MapName'\n          },\n          FontStack: {\n            location: 'uri',\n            locationName: 'FontStack'\n          },\n          FontUnicodeRange: {\n            location: 'uri',\n            locationName: 'FontUnicodeRange'\n          },\n          Key: {\n            shape: 'S23',\n            location: 'querystring',\n            locationName: 'key'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Blob: {\n            type: 'blob'\n          },\n          ContentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          CacheControl: {\n            location: 'header',\n            locationName: 'Cache-Control'\n          }\n        },\n        payload: 'Blob'\n      },\n      endpoint: {\n        hostPrefix: 'maps.'\n      }\n    },\n    GetMapSprites: {\n      http: {\n        method: 'GET',\n        requestUri: '/maps/v0/maps/{MapName}/sprites/{FileName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MapName',\n          'FileName'\n        ],\n        members: {\n          MapName: {\n            location: 'uri',\n            locationName: 'MapName'\n          },\n          FileName: {\n            location: 'uri',\n            locationName: 'FileName'\n          },\n          Key: {\n            shape: 'S23',\n            location: 'querystring',\n            locationName: 'key'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Blob: {\n            type: 'blob'\n          },\n          ContentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          CacheControl: {\n            location: 'header',\n            locationName: 'Cache-Control'\n          }\n        },\n        payload: 'Blob'\n      },\n      endpoint: {\n        hostPrefix: 'maps.'\n      }\n    },\n    GetMapStyleDescriptor: {\n      http: {\n        method: 'GET',\n        requestUri: '/maps/v0/maps/{MapName}/style-descriptor',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MapName'\n        ],\n        members: {\n          MapName: {\n            location: 'uri',\n            locationName: 'MapName'\n          },\n          Key: {\n            shape: 'S23',\n            location: 'querystring',\n            locationName: 'key'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Blob: {\n            type: 'blob'\n          },\n          ContentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          CacheControl: {\n            location: 'header',\n            locationName: 'Cache-Control'\n          }\n        },\n        payload: 'Blob'\n      },\n      endpoint: {\n        hostPrefix: 'maps.'\n      }\n    },\n    GetMapTile: {\n      http: {\n        method: 'GET',\n        requestUri: '/maps/v0/maps/{MapName}/tiles/{Z}/{X}/{Y}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MapName',\n          'Z',\n          'X',\n          'Y'\n        ],\n        members: {\n          MapName: {\n            location: 'uri',\n            locationName: 'MapName'\n          },\n          Z: {\n            location: 'uri',\n            locationName: 'Z'\n          },\n          X: {\n            location: 'uri',\n            locationName: 'X'\n          },\n          Y: {\n            location: 'uri',\n            locationName: 'Y'\n          },\n          Key: {\n            shape: 'S23',\n            location: 'querystring',\n            locationName: 'key'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Blob: {\n            type: 'blob'\n          },\n          ContentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          CacheControl: {\n            location: 'header',\n            locationName: 'Cache-Control'\n          }\n        },\n        payload: 'Blob'\n      },\n      endpoint: {\n        hostPrefix: 'maps.'\n      }\n    },\n    GetPlace: {\n      http: {\n        method: 'GET',\n        requestUri: '/places/v0/indexes/{IndexName}/places/{PlaceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IndexName',\n          'PlaceId'\n        ],\n        members: {\n          IndexName: {\n            location: 'uri',\n            locationName: 'IndexName'\n          },\n          PlaceId: {\n            location: 'uri',\n            locationName: 'PlaceId'\n          },\n          Language: {\n            location: 'querystring',\n            locationName: 'language'\n          },\n          Key: {\n            shape: 'S23',\n            location: 'querystring',\n            locationName: 'key'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Place'\n        ],\n        members: {\n          Place: {\n            shape: 'S5s'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'places.'\n      }\n    },\n    ListDevicePositions: {\n      http: {\n        requestUri: '/tracking/v0/trackers/{TrackerName}/list-positions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          FilterGeometry: {\n            type: 'structure',\n            members: {\n              Polygon: {\n                shape: 'S19'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entries'\n        ],\n        members: {\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'DeviceId',\n                'SampleTime',\n                'Position'\n              ],\n              members: {\n                DeviceId: {},\n                SampleTime: {\n                  shape: 'Sm'\n                },\n                Position: {\n                  shape: 'Sn'\n                },\n                Accuracy: {\n                  shape: 'Sp'\n                },\n                PositionProperties: {\n                  shape: 'Sr'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'tracking.'\n      }\n    },\n    ListGeofenceCollections: {\n      http: {\n        requestUri: '/geofencing/v0/list-collections',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entries'\n        ],\n        members: {\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'CollectionName',\n                'Description',\n                'CreateTime',\n                'UpdateTime'\n              ],\n              members: {\n                CollectionName: {},\n                Description: {},\n                PricingPlan: {\n                  deprecated: true,\n                  deprecatedMessage: 'Deprecated. Always returns RequestBasedUsage.'\n                },\n                PricingPlanDataSource: {\n                  deprecated: true,\n                  deprecatedMessage: 'Deprecated. Unused.'\n                },\n                CreateTime: {\n                  shape: 'Sm'\n                },\n                UpdateTime: {\n                  shape: 'Sm'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.geofencing.'\n      }\n    },\n    ListGeofences: {\n      http: {\n        requestUri: '/geofencing/v0/collections/{CollectionName}/list-geofences',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName'\n        ],\n        members: {\n          CollectionName: {\n            location: 'uri',\n            locationName: 'CollectionName'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entries'\n        ],\n        members: {\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'GeofenceId',\n                'Geometry',\n                'Status',\n                'CreateTime',\n                'UpdateTime'\n              ],\n              members: {\n                GeofenceId: {},\n                Geometry: {\n                  shape: 'S18'\n                },\n                Status: {},\n                CreateTime: {\n                  shape: 'Sm'\n                },\n                UpdateTime: {\n                  shape: 'Sm'\n                },\n                GeofenceProperties: {\n                  shape: 'Sr'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'geofencing.'\n      }\n    },\n    ListKeys: {\n      http: {\n        requestUri: '/metadata/v0/list-keys',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          Filter: {\n            type: 'structure',\n            members: {\n              KeyStatus: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entries'\n        ],\n        members: {\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'KeyName',\n                'ExpireTime',\n                'Restrictions',\n                'CreateTime',\n                'UpdateTime'\n              ],\n              members: {\n                KeyName: {},\n                ExpireTime: {\n                  shape: 'Sm'\n                },\n                Description: {},\n                Restrictions: {\n                  shape: 'S39'\n                },\n                CreateTime: {\n                  shape: 'Sm'\n                },\n                UpdateTime: {\n                  shape: 'Sm'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.metadata.'\n      }\n    },\n    ListMaps: {\n      http: {\n        requestUri: '/maps/v0/list-maps',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entries'\n        ],\n        members: {\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'MapName',\n                'Description',\n                'DataSource',\n                'CreateTime',\n                'UpdateTime'\n              ],\n              members: {\n                MapName: {},\n                Description: {},\n                DataSource: {},\n                PricingPlan: {\n                  deprecated: true,\n                  deprecatedMessage: 'Deprecated. Always returns RequestBasedUsage.'\n                },\n                CreateTime: {\n                  shape: 'Sm'\n                },\n                UpdateTime: {\n                  shape: 'Sm'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.maps.'\n      }\n    },\n    ListPlaceIndexes: {\n      http: {\n        requestUri: '/places/v0/list-indexes',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entries'\n        ],\n        members: {\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'IndexName',\n                'Description',\n                'DataSource',\n                'CreateTime',\n                'UpdateTime'\n              ],\n              members: {\n                IndexName: {},\n                Description: {},\n                DataSource: {},\n                PricingPlan: {\n                  deprecated: true,\n                  deprecatedMessage: 'Deprecated. Always returns RequestBasedUsage.'\n                },\n                CreateTime: {\n                  shape: 'Sm'\n                },\n                UpdateTime: {\n                  shape: 'Sm'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.places.'\n      }\n    },\n    ListRouteCalculators: {\n      http: {\n        requestUri: '/routes/v0/list-calculators',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entries'\n        ],\n        members: {\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'CalculatorName',\n                'Description',\n                'DataSource',\n                'CreateTime',\n                'UpdateTime'\n              ],\n              members: {\n                CalculatorName: {},\n                Description: {},\n                DataSource: {},\n                PricingPlan: {\n                  deprecated: true,\n                  deprecatedMessage: 'Deprecated. Always returns RequestBasedUsage.'\n                },\n                CreateTime: {\n                  shape: 'Sm'\n                },\n                UpdateTime: {\n                  shape: 'Sm'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.routes.'\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S33'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.metadata.'\n      }\n    },\n    ListTrackerConsumers: {\n      http: {\n        requestUri: '/tracking/v0/trackers/{TrackerName}/list-consumers',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ConsumerArns'\n        ],\n        members: {\n          ConsumerArns: {\n            type: 'list',\n            member: {}\n          },\n          NextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.tracking.'\n      }\n    },\n    ListTrackers: {\n      http: {\n        requestUri: '/tracking/v0/list-trackers',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entries'\n        ],\n        members: {\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'TrackerName',\n                'Description',\n                'CreateTime',\n                'UpdateTime'\n              ],\n              members: {\n                TrackerName: {},\n                Description: {},\n                PricingPlan: {\n                  deprecated: true,\n                  deprecatedMessage: 'Deprecated. Always returns RequestBasedUsage.'\n                },\n                PricingPlanDataSource: {\n                  deprecated: true,\n                  deprecatedMessage: 'Deprecated. Unused.'\n                },\n                CreateTime: {\n                  shape: 'Sm'\n                },\n                UpdateTime: {\n                  shape: 'Sm'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.tracking.'\n      }\n    },\n    PutGeofence: {\n      http: {\n        method: 'PUT',\n        requestUri: '/geofencing/v0/collections/{CollectionName}/geofences/{GeofenceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName',\n          'GeofenceId',\n          'Geometry'\n        ],\n        members: {\n          CollectionName: {\n            location: 'uri',\n            locationName: 'CollectionName'\n          },\n          GeofenceId: {\n            location: 'uri',\n            locationName: 'GeofenceId'\n          },\n          Geometry: {\n            shape: 'S18'\n          },\n          GeofenceProperties: {\n            shape: 'Sr'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'GeofenceId',\n          'CreateTime',\n          'UpdateTime'\n        ],\n        members: {\n          GeofenceId: {},\n          CreateTime: {\n            shape: 'Sm'\n          },\n          UpdateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'geofencing.'\n      }\n    },\n    SearchPlaceIndexForPosition: {\n      http: {\n        requestUri: '/places/v0/indexes/{IndexName}/search/position',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IndexName',\n          'Position'\n        ],\n        members: {\n          IndexName: {\n            location: 'uri',\n            locationName: 'IndexName'\n          },\n          Position: {\n            shape: 'Sn'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          Language: {},\n          Key: {\n            shape: 'S23',\n            location: 'querystring',\n            locationName: 'key'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Summary',\n          'Results'\n        ],\n        members: {\n          Summary: {\n            type: 'structure',\n            required: [\n              'Position',\n              'DataSource'\n            ],\n            members: {\n              Position: {\n                shape: 'Sn'\n              },\n              MaxResults: {\n                type: 'integer'\n              },\n              DataSource: {},\n              Language: {}\n            }\n          },\n          Results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Place',\n                'Distance'\n              ],\n              members: {\n                Place: {\n                  shape: 'S5s'\n                },\n                Distance: {\n                  type: 'double'\n                },\n                PlaceId: {}\n              }\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'places.'\n      }\n    },\n    SearchPlaceIndexForSuggestions: {\n      http: {\n        requestUri: '/places/v0/indexes/{IndexName}/search/suggestions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IndexName',\n          'Text'\n        ],\n        members: {\n          IndexName: {\n            location: 'uri',\n            locationName: 'IndexName'\n          },\n          Text: {\n            type: 'string',\n            sensitive: true\n          },\n          BiasPosition: {\n            shape: 'Sn'\n          },\n          FilterBBox: {\n            shape: 'S2h'\n          },\n          FilterCountries: {\n            shape: 'S7o'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          Language: {},\n          FilterCategories: {\n            shape: 'S7q'\n          },\n          Key: {\n            shape: 'S23',\n            location: 'querystring',\n            locationName: 'key'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Summary',\n          'Results'\n        ],\n        members: {\n          Summary: {\n            type: 'structure',\n            required: [\n              'Text',\n              'DataSource'\n            ],\n            members: {\n              Text: {\n                shape: 'S7t'\n              },\n              BiasPosition: {\n                shape: 'Sn'\n              },\n              FilterBBox: {\n                shape: 'S2h'\n              },\n              FilterCountries: {\n                shape: 'S7o'\n              },\n              MaxResults: {\n                type: 'integer'\n              },\n              DataSource: {},\n              Language: {},\n              FilterCategories: {\n                shape: 'S7q'\n              }\n            }\n          },\n          Results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Text'\n              ],\n              members: {\n                Text: {},\n                PlaceId: {},\n                Categories: {\n                  shape: 'S5w'\n                },\n                SupplementalCategories: {\n                  shape: 'S5y'\n                }\n              }\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'places.'\n      }\n    },\n    SearchPlaceIndexForText: {\n      http: {\n        requestUri: '/places/v0/indexes/{IndexName}/search/text',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IndexName',\n          'Text'\n        ],\n        members: {\n          IndexName: {\n            location: 'uri',\n            locationName: 'IndexName'\n          },\n          Text: {\n            type: 'string',\n            sensitive: true\n          },\n          BiasPosition: {\n            shape: 'Sn'\n          },\n          FilterBBox: {\n            shape: 'S2h'\n          },\n          FilterCountries: {\n            shape: 'S7o'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          Language: {},\n          FilterCategories: {\n            shape: 'S7q'\n          },\n          Key: {\n            shape: 'S23',\n            location: 'querystring',\n            locationName: 'key'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Summary',\n          'Results'\n        ],\n        members: {\n          Summary: {\n            type: 'structure',\n            required: [\n              'Text',\n              'DataSource'\n            ],\n            members: {\n              Text: {\n                shape: 'S7t'\n              },\n              BiasPosition: {\n                shape: 'Sn'\n              },\n              FilterBBox: {\n                shape: 'S2h'\n              },\n              FilterCountries: {\n                shape: 'S7o'\n              },\n              MaxResults: {\n                type: 'integer'\n              },\n              ResultBBox: {\n                shape: 'S2h'\n              },\n              DataSource: {},\n              Language: {},\n              FilterCategories: {\n                shape: 'S7q'\n              }\n            }\n          },\n          Results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Place'\n              ],\n              members: {\n                Place: {\n                  shape: 'S5s'\n                },\n                Distance: {\n                  type: 'double'\n                },\n                Relevance: {\n                  type: 'double'\n                },\n                PlaceId: {}\n              }\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'places.'\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          Tags: {\n            shape: 'S33'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpoint: {\n        hostPrefix: 'cp.metadata.'\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpoint: {\n        hostPrefix: 'cp.metadata.'\n      },\n      idempotent: true\n    },\n    UpdateGeofenceCollection: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/geofencing/v0/collections/{CollectionName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionName'\n        ],\n        members: {\n          CollectionName: {\n            location: 'uri',\n            locationName: 'CollectionName'\n          },\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. If included, the only allowed value is RequestBasedUsage.'\n          },\n          PricingPlanDataSource: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. No longer allowed.'\n          },\n          Description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CollectionName',\n          'CollectionArn',\n          'UpdateTime'\n        ],\n        members: {\n          CollectionName: {},\n          CollectionArn: {},\n          UpdateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.geofencing.'\n      },\n      idempotent: true\n    },\n    UpdateKey: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/metadata/v0/keys/{KeyName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'KeyName'\n        ],\n        members: {\n          KeyName: {\n            location: 'uri',\n            locationName: 'KeyName'\n          },\n          Description: {},\n          ExpireTime: {\n            shape: 'Sm'\n          },\n          NoExpiry: {\n            type: 'boolean'\n          },\n          ForceUpdate: {\n            type: 'boolean'\n          },\n          Restrictions: {\n            shape: 'S39'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'KeyArn',\n          'KeyName',\n          'UpdateTime'\n        ],\n        members: {\n          KeyArn: {},\n          KeyName: {},\n          UpdateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.metadata.'\n      },\n      idempotent: true\n    },\n    UpdateMap: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/maps/v0/maps/{MapName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MapName'\n        ],\n        members: {\n          MapName: {\n            location: 'uri',\n            locationName: 'MapName'\n          },\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. If included, the only allowed value is RequestBasedUsage.'\n          },\n          Description: {},\n          ConfigurationUpdate: {\n            type: 'structure',\n            members: {\n              PoliticalView: {},\n              CustomLayers: {\n                shape: 'S3l'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'MapName',\n          'MapArn',\n          'UpdateTime'\n        ],\n        members: {\n          MapName: {},\n          MapArn: {},\n          UpdateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.maps.'\n      },\n      idempotent: true\n    },\n    UpdatePlaceIndex: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/places/v0/indexes/{IndexName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IndexName'\n        ],\n        members: {\n          IndexName: {\n            location: 'uri',\n            locationName: 'IndexName'\n          },\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. If included, the only allowed value is RequestBasedUsage.'\n          },\n          Description: {},\n          DataSourceConfiguration: {\n            shape: 'S3q'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'IndexName',\n          'IndexArn',\n          'UpdateTime'\n        ],\n        members: {\n          IndexName: {},\n          IndexArn: {},\n          UpdateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.places.'\n      },\n      idempotent: true\n    },\n    UpdateRouteCalculator: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/routes/v0/calculators/{CalculatorName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CalculatorName'\n        ],\n        members: {\n          CalculatorName: {\n            location: 'uri',\n            locationName: 'CalculatorName'\n          },\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. If included, the only allowed value is RequestBasedUsage.'\n          },\n          Description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CalculatorName',\n          'CalculatorArn',\n          'UpdateTime'\n        ],\n        members: {\n          CalculatorName: {},\n          CalculatorArn: {},\n          UpdateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.routes.'\n      },\n      idempotent: true\n    },\n    UpdateTracker: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/tracking/v0/trackers/{TrackerName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          PricingPlan: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. If included, the only allowed value is RequestBasedUsage.'\n          },\n          PricingPlanDataSource: {\n            deprecated: true,\n            deprecatedMessage: 'Deprecated. No longer allowed.'\n          },\n          Description: {},\n          PositionFiltering: {},\n          EventBridgeEnabled: {\n            type: 'boolean'\n          },\n          KmsKeyEnableGeospatialQueries: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'TrackerArn',\n          'UpdateTime'\n        ],\n        members: {\n          TrackerName: {},\n          TrackerArn: {},\n          UpdateTime: {\n            shape: 'Sm'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'cp.tracking.'\n      },\n      idempotent: true\n    },\n    VerifyDevicePosition: {\n      http: {\n        requestUri: '/tracking/v0/trackers/{TrackerName}/positions/verify',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrackerName',\n          'DeviceState'\n        ],\n        members: {\n          TrackerName: {\n            location: 'uri',\n            locationName: 'TrackerName'\n          },\n          DeviceState: {\n            type: 'structure',\n            required: [\n              'DeviceId',\n              'SampleTime',\n              'Position'\n            ],\n            members: {\n              DeviceId: {},\n              SampleTime: {\n                shape: 'Sm'\n              },\n              Position: {\n                shape: 'Sn'\n              },\n              Accuracy: {\n                shape: 'Sp'\n              },\n              Ipv4Address: {},\n              WiFiAccessPoints: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'MacAddress',\n                    'Rss'\n                  ],\n                  members: {\n                    MacAddress: {},\n                    Rss: {\n                      type: 'integer'\n                    }\n                  }\n                }\n              },\n              CellSignals: {\n                type: 'structure',\n                required: [\n                  'LteCellDetails'\n                ],\n                members: {\n                  LteCellDetails: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      required: [\n                        'CellId',\n                        'Mcc',\n                        'Mnc'\n                      ],\n                      members: {\n                        CellId: {\n                          type: 'integer'\n                        },\n                        Mcc: {\n                          type: 'integer'\n                        },\n                        Mnc: {\n                          type: 'integer'\n                        },\n                        LocalId: {\n                          type: 'structure',\n                          required: [\n                            'Earfcn',\n                            'Pci'\n                          ],\n                          members: {\n                            Earfcn: {\n                              type: 'integer'\n                            },\n                            Pci: {\n                              type: 'integer'\n                            }\n                          }\n                        },\n                        NetworkMeasurements: {\n                          type: 'list',\n                          member: {\n                            type: 'structure',\n                            required: [\n                              'Earfcn',\n                              'CellId',\n                              'Pci'\n                            ],\n                            members: {\n                              Earfcn: {\n                                type: 'integer'\n                              },\n                              CellId: {\n                                type: 'integer'\n                              },\n                              Pci: {\n                                type: 'integer'\n                              },\n                              Rsrp: {\n                                type: 'integer'\n                              },\n                              Rsrq: {\n                                type: 'float'\n                              }\n                            }\n                          }\n                        },\n                        TimingAdvance: {\n                          type: 'integer'\n                        },\n                        NrCapable: {\n                          type: 'boolean'\n                        },\n                        Rsrp: {\n                          type: 'integer'\n                        },\n                        Rsrq: {\n                          type: 'float'\n                        },\n                        Tac: {\n                          type: 'integer'\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          DistanceUnit: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'InferredState',\n          'DeviceId',\n          'SampleTime',\n          'ReceivedTime',\n          'DistanceUnit'\n        ],\n        members: {\n          InferredState: {\n            type: 'structure',\n            required: [\n              'ProxyDetected'\n            ],\n            members: {\n              Position: {\n                shape: 'Sn'\n              },\n              Accuracy: {\n                shape: 'Sp'\n              },\n              DeviationDistance: {\n                type: 'double'\n              },\n              ProxyDetected: {\n                type: 'boolean'\n              }\n            }\n          },\n          DeviceId: {},\n          SampleTime: {\n            shape: 'Sm'\n          },\n          ReceivedTime: {\n            shape: 'Sm'\n          },\n          DistanceUnit: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'tracking.'\n      }\n    }\n  },\n  shapes: {\n    Sb: {\n      type: 'structure',\n      members: {\n        Code: {},\n        Message: {}\n      }\n    },\n    Sl: {\n      type: 'structure',\n      required: [\n        'DeviceId',\n        'SampleTime',\n        'Position'\n      ],\n      members: {\n        DeviceId: {},\n        SampleTime: {\n          shape: 'Sm'\n        },\n        Position: {\n          shape: 'Sn'\n        },\n        Accuracy: {\n          shape: 'Sp'\n        },\n        PositionProperties: {\n          shape: 'Sr'\n        }\n      }\n    },\n    Sm: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    Sn: {\n      type: 'list',\n      member: {\n        type: 'double'\n      },\n      sensitive: true\n    },\n    Sp: {\n      type: 'structure',\n      required: [\n        'Horizontal'\n      ],\n      members: {\n        Horizontal: {\n          type: 'double'\n        }\n      }\n    },\n    Sr: {\n      type: 'map',\n      key: {},\n      value: {},\n      sensitive: true\n    },\n    S13: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'SampleTime',\n          'ReceivedTime',\n          'Position'\n        ],\n        members: {\n          DeviceId: {},\n          SampleTime: {\n            shape: 'Sm'\n          },\n          ReceivedTime: {\n            shape: 'Sm'\n          },\n          Position: {\n            shape: 'Sn'\n          },\n          Accuracy: {\n            shape: 'Sp'\n          },\n          PositionProperties: {\n            shape: 'Sr'\n          }\n        }\n      }\n    },\n    S18: {\n      type: 'structure',\n      members: {\n        Polygon: {\n          shape: 'S19'\n        },\n        Circle: {\n          type: 'structure',\n          required: [\n            'Center',\n            'Radius'\n          ],\n          members: {\n            Center: {\n              shape: 'Sn'\n            },\n            Radius: {\n              type: 'double'\n            }\n          },\n          sensitive: true\n        },\n        Geobuf: {\n          type: 'blob',\n          sensitive: true\n        }\n      }\n    },\n    S19: {\n      type: 'list',\n      member: {\n        type: 'list',\n        member: {\n          shape: 'Sn'\n        }\n      }\n    },\n    S1s: {\n      type: 'structure',\n      members: {\n        AvoidFerries: {\n          type: 'boolean'\n        },\n        AvoidTolls: {\n          type: 'boolean'\n        }\n      }\n    },\n    S1t: {\n      type: 'structure',\n      members: {\n        AvoidFerries: {\n          type: 'boolean'\n        },\n        AvoidTolls: {\n          type: 'boolean'\n        },\n        Dimensions: {\n          type: 'structure',\n          members: {\n            Length: {\n              type: 'double'\n            },\n            Height: {\n              type: 'double'\n            },\n            Width: {\n              type: 'double'\n            },\n            Unit: {}\n          }\n        },\n        Weight: {\n          type: 'structure',\n          members: {\n            Total: {\n              type: 'double'\n            },\n            Unit: {}\n          }\n        }\n      }\n    },\n    S23: {\n      type: 'string',\n      sensitive: true\n    },\n    S2h: {\n      type: 'list',\n      member: {\n        type: 'double'\n      },\n      sensitive: true\n    },\n    S33: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S39: {\n      type: 'structure',\n      required: [\n        'AllowActions',\n        'AllowResources'\n      ],\n      members: {\n        AllowActions: {\n          type: 'list',\n          member: {}\n        },\n        AllowResources: {\n          type: 'list',\n          member: {}\n        },\n        AllowReferers: {\n          type: 'list',\n          member: {}\n        }\n      }\n    },\n    S3i: {\n      type: 'structure',\n      required: [\n        'Style'\n      ],\n      members: {\n        Style: {},\n        PoliticalView: {},\n        CustomLayers: {\n          shape: 'S3l'\n        }\n      }\n    },\n    S3l: {\n      type: 'list',\n      member: {}\n    },\n    S3q: {\n      type: 'structure',\n      members: {\n        IntendedUse: {}\n      }\n    },\n    S5s: {\n      type: 'structure',\n      required: [\n        'Geometry'\n      ],\n      members: {\n        Label: {},\n        Geometry: {\n          type: 'structure',\n          members: {\n            Point: {\n              shape: 'Sn'\n            }\n          }\n        },\n        AddressNumber: {},\n        Street: {},\n        Neighborhood: {},\n        Municipality: {},\n        SubRegion: {},\n        Region: {},\n        Country: {},\n        PostalCode: {},\n        Interpolated: {\n          type: 'boolean'\n        },\n        TimeZone: {\n          type: 'structure',\n          required: [\n            'Name'\n          ],\n          members: {\n            Name: {},\n            Offset: {\n              type: 'integer'\n            }\n          }\n        },\n        UnitType: {},\n        UnitNumber: {},\n        Categories: {\n          shape: 'S5w'\n        },\n        SupplementalCategories: {\n          shape: 'S5y'\n        },\n        SubMunicipality: {}\n      }\n    },\n    S5w: {\n      type: 'list',\n      member: {}\n    },\n    S5y: {\n      type: 'list',\n      member: {}\n    },\n    S7o: {\n      type: 'list',\n      member: {}\n    },\n    S7q: {\n      type: 'list',\n      member: {}\n    },\n    S7t: {\n      type: 'string',\n      sensitive: true\n    }\n  }\n}"]}