{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/template.js"],"names":["template","string","options","guard","settings","templateSettings","imports","_","isIterateeCall","undefined","toString","assignInWith","customDefaultsAssignIn","importsKeys","keys","importsValues","baseValues","isEscaping","isEvaluating","index","interpolate","reNoMatch","source","reDelimiters","RegExp","escape","reInterpolate","reEsTemplate","evaluate","sourceURL","hasOwnProperty","call","replace","match","escapeValue","interpolateValue","esTemplateValue","evaluateValue","offset","slice","reUnescapedString","escapeStringChar","length","variable","reForbiddenIdentifierChars","test","Error","INVALID_TEMPL_VAR_ERROR_TEXT","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","result","attempt","Function","apply","isError","objectProto","Object","prototype"],"mappings":"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","sourcesContent":["import assignInWith from './assignInWith.js';\nimport attempt from './attempt.js';\nimport baseValues from './_baseValues.js';\nimport customDefaultsAssignIn from './_customDefaultsAssignIn.js';\nimport escapeStringChar from './_escapeStringChar.js';\nimport isError from './isError.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keys from './keys.js';\nimport reInterpolate from './_reInterpolate.js';\nimport templateSettings from './templateSettings.js';\nimport toString from './toString.js';\n\n/** Error message constants. */\nvar INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n/** Used to match empty string literals in compiled template source. */\nvar reEmptyStringLeading = /\\b__p \\+= '';/g,\n    reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n    reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n/**\n * Used to validate the `validate` option in `_.template` variable.\n *\n * Forbids characters which could potentially change the meaning of the function argument definition:\n * - \"(),\" (modification of function parameters)\n * - \"=\" (default value)\n * - \"[]{}\" (destructuring of function parameters)\n * - \"/\" (beginning of a comment)\n * - whitespace\n */\nvar reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n/**\n * Used to match\n * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n */\nvar reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n/** Used to ensure capturing order of template delimiters. */\nvar reNoMatch = /($^)/;\n\n/** Used to match unescaped characters in compiled string literals. */\nvar reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a compiled template function that can interpolate data properties\n * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n * properties may be accessed as free variables in the template. If a setting\n * object is given, it takes precedence over `_.templateSettings` values.\n *\n * **Note:** In the development build `_.template` utilizes\n * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n * for easier debugging.\n *\n * For more information on precompiling templates see\n * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n *\n * For more information on Chrome extension sandboxes see\n * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The template string.\n * @param {Object} [options={}] The options object.\n * @param {RegExp} [options.escape=_.templateSettings.escape]\n *  The HTML \"escape\" delimiter.\n * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n *  The \"evaluate\" delimiter.\n * @param {Object} [options.imports=_.templateSettings.imports]\n *  An object to import into the template as free variables.\n * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n *  The \"interpolate\" delimiter.\n * @param {string} [options.sourceURL='templateSources[n]']\n *  The sourceURL of the compiled template.\n * @param {string} [options.variable='obj']\n *  The data object variable name.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the compiled template function.\n * @example\n *\n * // Use the \"interpolate\" delimiter to create a compiled template.\n * var compiled = _.template('hello <%= user %>!');\n * compiled({ 'user': 'fred' });\n * // => 'hello fred!'\n *\n * // Use the HTML \"escape\" delimiter to escape data property values.\n * var compiled = _.template('<b><%- value %></b>');\n * compiled({ 'value': '<script>' });\n * // => '<b>&lt;script&gt;</b>'\n *\n * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // Use the internal `print` function in \"evaluate\" delimiters.\n * var compiled = _.template('<% print(\"hello \" + user); %>!');\n * compiled({ 'user': 'barney' });\n * // => 'hello barney!'\n *\n * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n * // Disable support by replacing the \"interpolate\" delimiter.\n * var compiled = _.template('hello ${ user }!');\n * compiled({ 'user': 'pebbles' });\n * // => 'hello pebbles!'\n *\n * // Use backslashes to treat delimiters as plain text.\n * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n * compiled({ 'value': 'ignored' });\n * // => '<%- value %>'\n *\n * // Use the `imports` option to import `jQuery` as `jq`.\n * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n * compiled(data);\n * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n *\n * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n * compiled.source;\n * // => function(data) {\n * //   var __t, __p = '';\n * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n * //   return __p;\n * // }\n *\n * // Use custom template delimiters.\n * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n * var compiled = _.template('hello {{ user }}!');\n * compiled({ 'user': 'mustache' });\n * // => 'hello mustache!'\n *\n * // Use the `source` property to inline compiled templates for meaningful\n * // line numbers in error messages and stack traces.\n * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n *   var JST = {\\\n *     \"main\": ' + _.template(mainText).source + '\\\n *   };\\\n * ');\n */\nfunction template(string, options, guard) {\n  // Based on John Resig's `tmpl` implementation\n  // (http://ejohn.org/blog/javascript-micro-templating/)\n  // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n  var settings = templateSettings.imports._.templateSettings || templateSettings;\n\n  if (guard && isIterateeCall(string, options, guard)) {\n    options = undefined;\n  }\n  string = toString(string);\n  options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n  var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n      importsKeys = keys(imports),\n      importsValues = baseValues(imports, importsKeys);\n\n  var isEscaping,\n      isEvaluating,\n      index = 0,\n      interpolate = options.interpolate || reNoMatch,\n      source = \"__p += '\";\n\n  // Compile the regexp to match each delimiter.\n  var reDelimiters = RegExp(\n    (options.escape || reNoMatch).source + '|' +\n    interpolate.source + '|' +\n    (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n    (options.evaluate || reNoMatch).source + '|$'\n  , 'g');\n\n  // Use a sourceURL for easier debugging.\n  // The sourceURL gets injected into the source that's eval-ed, so be careful\n  // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n  // and escape the comment, thus injecting code that gets evaled.\n  var sourceURL = hasOwnProperty.call(options, 'sourceURL')\n    ? ('//# sourceURL=' +\n       (options.sourceURL + '').replace(/\\s/g, ' ') +\n       '\\n')\n    : '';\n\n  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n    interpolateValue || (interpolateValue = esTemplateValue);\n\n    // Escape characters that can't be included in string literals.\n    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n    // Replace delimiters with snippets.\n    if (escapeValue) {\n      isEscaping = true;\n      source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n    }\n    if (evaluateValue) {\n      isEvaluating = true;\n      source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n    }\n    if (interpolateValue) {\n      source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n    }\n    index = offset + match.length;\n\n    // The JS engine embedded in Adobe products needs `match` returned in\n    // order to produce the correct `offset` value.\n    return match;\n  });\n\n  source += \"';\\n\";\n\n  // If `variable` is not specified wrap a with-statement around the generated\n  // code to add the data object to the top of the scope chain.\n  var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n  if (!variable) {\n    source = 'with (obj) {\\n' + source + '\\n}\\n';\n  }\n  // Throw an error if a forbidden character was found in `variable`, to prevent\n  // potential command injection attacks.\n  else if (reForbiddenIdentifierChars.test(variable)) {\n    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n  }\n\n  // Cleanup code by stripping empty strings.\n  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n    .replace(reEmptyStringMiddle, '$1')\n    .replace(reEmptyStringTrailing, '$1;');\n\n  // Frame code as the function body.\n  source = 'function(' + (variable || 'obj') + ') {\\n' +\n    (variable\n      ? ''\n      : 'obj || (obj = {});\\n'\n    ) +\n    \"var __t, __p = ''\" +\n    (isEscaping\n       ? ', __e = _.escape'\n       : ''\n    ) +\n    (isEvaluating\n      ? ', __j = Array.prototype.join;\\n' +\n        \"function print() { __p += __j.call(arguments, '') }\\n\"\n      : ';\\n'\n    ) +\n    source +\n    'return __p\\n}';\n\n  var result = attempt(function() {\n    return Function(importsKeys, sourceURL + 'return ' + source)\n      .apply(undefined, importsValues);\n  });\n\n  // Provide the compiled function's source by its `toString` method or\n  // the `source` property as a convenience for inlining compiled templates.\n  result.source = source;\n  if (isError(result)) {\n    throw result;\n  }\n  return result;\n}\n\nexport default template;\n"]}