{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/assets/src/core/base/ViewMediatorBase.ts"],"names":["ViewMediatorBase","director","Observer","mduManger","constructor","modu","tabBar","_openData","_defaultView","weeked","open","openData","self","onOpen","ons","onWeekup","console","log","view","load","loadScene","error","scene","currentMduId","moduleId","close","s","sleep","offs","dispose"],"mappings":";;;8GAKaA,gB;;;;;;;;;;;;;;;;;;;;;;;AALOC,MAAAA,Q,OAAAA,Q;;AACXC,MAAAA,Q,iBAAAA,Q;;AAEAC,MAAAA,S,iBAAAA,S;;;;;;;;;kCAEIH,gB,GAAN,MAAMA,gBAAN;AAAA;AAAA,gCAAwC;AAM7CI,QAAAA,WAAW,CAACC,IAAD,EAAmB;AAC5B;AAD4B,eALpBA,IAKoB;AAAA,eAJvBC,MAIuB;AAAA,eAHtBC,SAGsB;AAAA,eAFvBC,YAEuB,GAFD,EAEC;;AAahC;AACA;AACA;AACA;AAhBgC,eAiBvBC,MAjBuB,GAiBd,KAjBc;AAE5B,eAAKJ,IAAL,GAAYA,IAAZ;AACD;AACD;AACF;AACA;AACA;;;AACSK,QAAAA,IAAI,CAACC,QAAD,EAAuB;AAChC,cAAIC,IAAI,GAAG,IAAX,CADgC,CAEhC;;AACAA,UAAAA,IAAI,CAACC,MAAL,CAAYF,QAAZ;AACD;;AAMD;AACF;AACA;AACA;AACUE,QAAAA,MAAM,CAACF,QAAa,GAAG,IAAjB,EAA6B;AACzC,cAAIC,IAAI,GAAG,IAAX;AACAA,UAAAA,IAAI,CAACH,MAAL,GAAc,IAAd;AACAG,UAAAA,IAAI,CAACE,GAAL;AACAF,UAAAA,IAAI,CAACG,QAAL,CAAcJ,QAAd;AACD;AAED;AACF;AACA;AACA;;;AACSI,QAAAA,QAAQ,CAACJ,QAAa,GAAG,IAAjB,EAA6B;AAC1CK,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAUN,QAAQ,CAACO,IAA/B;AACA;AACJ;AACA;AACA;;AACG,cAAIC,IAAI,GAAGlB,QAAQ,CAACmB,SAAT,CAAmBT,QAAQ,CAACO,IAA5B,EAAiC,CAACG,KAAD,EAAaC,KAAb,KAA2B;AAClEN,YAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ,EAAkBC,KAAlB;AACH,WAFS,CAAX;;AAGC,cAAGH,IAAH,EAAQ;AACNH,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,YAAL,GAAkB,KAA9B;AACA;AAAA;AAAA,wCAAUe,YAAV,GAAyB,KAAKlB,IAAL,CAAUmB,QAAnC;AACD;AACF;AACC;;;AACOC,QAAAA,KAAK,GAAS;AACnB,cAAIC,CAAC,GAAG,IAAR;AACD;AAEH;;;AACOC,QAAAA,KAAK,GAAS;AACnB,cAAIf,IAAI,GAAG,IAAX;AACAA,UAAAA,IAAI,CAACH,MAAL,GAAc,KAAd;AACAG,UAAAA,IAAI,CAACgB,IAAL;AACD;AAED;;;AACOC,QAAAA,OAAO,GAAS;AACrB,cAAIjB,IAAI,GAAG,IAAX;AACA,eAAKe,KAAL;AACD;AAED;;;AACUb,QAAAA,GAAG,GAAS,CAAE;AAExB;;;AACUc,QAAAA,IAAI,GAAS,CAAE;;AA3EoB,O","sourcesContent":["import { Component, director, Scene } from \"cc\";\nimport { Observer } from \"../../utils/Observer\";\nimport ModuleBase from \"./ModuleBase\";\nimport { mduManger } from \"../../game/App\";\n\nexport class ViewMediatorBase extends Observer {\n  protected modu: ModuleBase;\n  public tabBar: any;\n  private _openData;\n  public _defaultView:string = \"\";\n\n  constructor(modu: ModuleBase) {\n    super();\n    this.modu = modu;\n  }\n  /**\n   * 执行mediator入口\n   * @param openData \n   */\n  public open(openData?: any): void {\n    let self = this;\n    //是否需要预先load 场景资源\n    self.onOpen(openData);\n  }\n/**\n * 记录此mediator是否处于活动状态\n * 若处于活动状态,则后台继续执行其业务逻辑\n */\n  public weeked = false;\n  /**\n   * .scene or .json 皮肤 加载完毕，\n   * @param openData\n   */\n  private onOpen(openData: any = null): void {\n    let self = this;\n    self.weeked = true;\n    self.ons();\n    self.onWeekup(openData);\n  }\n\n  /**\n   * 每次med打开完成时调用\n   * 处理模块及其场景打开前执行的逻辑\n   */\n  public onWeekup(openData: any = null): void {\n    console.log(\"打开view:\"+openData.view);\n    /**\n     * 调用cocos 场景打开的逻辑,\n     * 成功打开后直接替换上一场景,展示到舞台上\n     */\n   let load = director.loadScene(openData.view,(error:Error,scene:Scene)=>{\n        console.log(error,scene);\n    });\n    if(load){\n      console.log(this._defaultView+\"sss\");\n      mduManger.currentMduId = this.modu.moduleId;\n    }\n  }\n    /**面板关闭 */\n    public close(): void {\n      let s = this;\n    }\n\n  /**每次med关闭所有界面 */\n  public sleep(): void {\n    let self = this;\n    self.weeked = false;\n    self.offs();\n  }\n\n  /** 销毁 */\n  public dispose(): void {\n    let self = this;\n    this.sleep();\n  }\n\n  /** 开启侦听 */\n  protected ons(): void {}\n\n  /** 关闭侦听 */\n  protected offs(): void {}\n}\n"]}