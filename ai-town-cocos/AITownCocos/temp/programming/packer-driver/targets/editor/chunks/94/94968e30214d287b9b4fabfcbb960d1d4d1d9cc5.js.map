{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/_baseWhile.js"],"names":["baseWhile","array","predicate","isDrop","fromRight","length","index","baseSlice"],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,SAAT,CAAmBC,KAAnB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,SAA7C,EAAwD;AACtD,QAAIC,MAAM,GAAGJ,KAAK,CAACI,MAAnB;AAAA,QACIC,KAAK,GAAGF,SAAS,GAAGC,MAAH,GAAY,CAAC,CADlC;;AAGA,WAAO,CAACD,SAAS,GAAGE,KAAK,EAAR,GAAa,EAAEA,KAAF,GAAUD,MAAjC,KACLH,SAAS,CAACD,KAAK,CAACK,KAAD,CAAN,EAAeA,KAAf,EAAsBL,KAAtB,CADX,EACyC,CAAE;;AAE3C,WAAOE,MAAM,GACTI,SAAS,CAACN,KAAD,EAASG,SAAS,GAAG,CAAH,GAAOE,KAAzB,EAAkCF,SAAS,GAAGE,KAAK,GAAG,CAAX,GAAeD,MAA1D,CADA,GAETE,SAAS,CAACN,KAAD,EAASG,SAAS,GAAGE,KAAK,GAAG,CAAX,GAAe,CAAjC,EAAsCF,SAAS,GAAGC,MAAH,GAAYC,KAA3D,CAFb;AAGD;;;;AAvBMC,MAAAA,S;;;yBAyBQP,S","sourcesContent":["import baseSlice from './_baseSlice.js';\n\n/**\n * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n * without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseWhile(array, predicate, isDrop, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length) &&\n    predicate(array[index], index, array)) {}\n\n  return isDrop\n    ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n    : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n}\n\nexport default baseWhile;\n"]}