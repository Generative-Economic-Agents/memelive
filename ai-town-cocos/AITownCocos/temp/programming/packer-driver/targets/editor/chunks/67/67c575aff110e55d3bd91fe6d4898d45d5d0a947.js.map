{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/unescape.js"],"names":["unescape","string","toString","reHasEscapedHtml","test","replace","reEscapedHtml","unescapeHtmlChar","RegExp","source"],"mappings":";;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,QAAT,CAAkBC,MAAlB,EAA0B;AACxBA,IAAAA,MAAM,GAAGC,QAAQ,CAACD,MAAD,CAAjB;AACA,WAAQA,MAAM,IAAIE,gBAAgB,CAACC,IAAjB,CAAsBH,MAAtB,CAAX,GACHA,MAAM,CAACI,OAAP,CAAeC,aAAf,EAA8BC,gBAA9B,CADG,GAEHN,MAFJ;AAGD;;;;AA/BMC,MAAAA,Q;;AACAK,MAAAA,gB;;;AAEP;AACID,MAAAA,a,GAAgB,2B;AAChBH,MAAAA,gB,GAAmBK,MAAM,CAACF,aAAa,CAACG,MAAf,C;;yBA4BdT,Q","sourcesContent":["import toString from './toString.js';\nimport unescapeHtmlChar from './_unescapeHtmlChar.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nfunction unescape(string) {\n  string = toString(string);\n  return (string && reHasEscapedHtml.test(string))\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\n    : string;\n}\n\nexport default unescape;\n"]}