{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/internetmonitor-2021-06-03.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateMonitor","http","requestUri","responseCode","input","type","required","members","MonitorName","Resources","shape","ClientToken","idempotencyToken","Tags","MaxCityNetworksToMonitor","InternetMeasurementsLogDelivery","TrafficPercentageToMonitor","HealthEventsConfig","output","Arn","Status","idempotent","DeleteMonitor","method","location","locationName","GetHealthEvent","EventId","LinkedAccountId","EventArn","StartedAt","EndedAt","CreatedAt","LastUpdatedAt","ImpactedLocations","PercentOfTotalTrafficImpacted","ImpactType","HealthScoreThreshold","GetInternetEvent","ClientLocation","EventType","EventStatus","GetMonitor","MonitorArn","ModifiedAt","ProcessingStatus","ProcessingStatusInfo","GetQueryResults","QueryId","NextToken","MaxResults","Fields","member","Name","Type","Data","GetQueryStatus","ListHealthEvents","StartTime","EndTime","HealthEvents","ListInternetEvents","InternetEvents","ListMonitors","MonitorStatus","IncludeLinkedAccounts","Monitors","ListTagsForResource","ResourceArn","StartQuery","QueryType","FilterParameters","Field","Operator","Values","StopQuery","TagResource","UntagResource","TagKeys","UpdateMonitor","ResourcesToAdd","ResourcesToRemove","shapes","S3","S6","key","value","Sa","S3Config","BucketName","BucketPrefix","LogDeliveryStatus","Sf","AvailabilityScoreThreshold","PerformanceScoreThreshold","AvailabilityLocalHealthEventsConfig","PerformanceLocalHealthEventsConfig","Sh","MinTrafficImpact","Ss","timestampFormat","St","ASName","ASNumber","Country","Subdivision","Metro","City","Latitude","Longitude","CountryCode","SubdivisionCode","ServiceLocation","CausedBy","Networks","AsPath","NetworkEventType","InternetHealth","Availability","ExperienceScore","PercentOfClientLocationImpacted","Performance","RoundTripTime","P50","P90","P95","Ipv4Prefixes","Sz","S1b"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,iBAFR;AAGRC,UAAAA,WAAW,EAAE,KAHL;AAIRC,UAAAA,QAAQ,EAAE,WAJF;AAKRC,UAAAA,eAAe,EAAE,oCALT;AAMRC,UAAAA,SAAS,EAAE,iBANH;AAORC,UAAAA,gBAAgB,EAAE,IAPV;AAQRC,UAAAA,WAAW,EAAE,iBARL;AASRC,UAAAA,GAAG,EAAE;AATG,SAFG;AAabC,QAAAA,UAAU,EAAE;AACVC,UAAAA,aAAa,EAAE;AACbC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,qBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADO;AAKbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE,EADN;AAEPC,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,KAAK,EAAE;AADE,iBAFJ;AAKPC,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBALN;AAQPC,gBAAAA,IAAI,EAAE;AACJH,kBAAAA,KAAK,EAAE;AADH,iBARC;AAWPI,gBAAAA,wBAAwB,EAAE;AACxBT,kBAAAA,IAAI,EAAE;AADkB,iBAXnB;AAcPU,gBAAAA,+BAA+B,EAAE;AAC/BL,kBAAAA,KAAK,EAAE;AADwB,iBAd1B;AAiBPM,gBAAAA,0BAA0B,EAAE;AAC1BX,kBAAAA,IAAI,EAAE;AADoB,iBAjBrB;AAoBPY,gBAAAA,kBAAkB,EAAE;AAClBP,kBAAAA,KAAK,EAAE;AADW;AApBb;AALJ,aALM;AAmCbQ,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,KADQ,EAER,QAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,GAAG,EAAE,EADE;AAEPC,gBAAAA,MAAM,EAAE;AAFD;AANH,aAnCK;AA8CbC,YAAAA,UAAU,EAAE;AA9CC,WADL;AAiDVC,UAAAA,aAAa,EAAE;AACbrB,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,QADJ;AAEJrB,cAAAA,UAAU,EAAE,mCAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADO;AAMbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE;AACXgB,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AADN;AALJ,aANM;AAkBbP,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAlBK;AAsBbc,YAAAA,UAAU,EAAE;AAtBC,WAjDL;AAyEVK,UAAAA,cAAc,EAAE;AACdzB,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,KADJ;AAEJrB,cAAAA,UAAU,EAAE,0DAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADQ;AAMdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE;AACXgB,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPE,gBAAAA,OAAO,EAAE;AACPH,kBAAAA,QAAQ,EAAE,KADH;AAEPC,kBAAAA,YAAY,EAAE;AAFP,iBALF;AASPG,gBAAAA,eAAe,EAAE;AACfJ,kBAAAA,QAAQ,EAAE,aADK;AAEfC,kBAAAA,YAAY,EAAE;AAFC;AATV;AANJ,aANO;AA2BdP,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,UADQ,EAER,SAFQ,EAGR,WAHQ,EAIR,eAJQ,EAKR,mBALQ,EAMR,QANQ,EAOR,YAPQ,CAFJ;AAWNC,cAAAA,OAAO,EAAE;AACPsB,gBAAAA,QAAQ,EAAE,EADH;AAEPF,gBAAAA,OAAO,EAAE,EAFF;AAGPG,gBAAAA,SAAS,EAAE;AACTpB,kBAAAA,KAAK,EAAE;AADE,iBAHJ;AAMPqB,gBAAAA,OAAO,EAAE;AACPrB,kBAAAA,KAAK,EAAE;AADA,iBANF;AASPsB,gBAAAA,SAAS,EAAE;AACTtB,kBAAAA,KAAK,EAAE;AADE,iBATJ;AAYPuB,gBAAAA,aAAa,EAAE;AACbvB,kBAAAA,KAAK,EAAE;AADM,iBAZR;AAePwB,gBAAAA,iBAAiB,EAAE;AACjBxB,kBAAAA,KAAK,EAAE;AADU,iBAfZ;AAkBPU,gBAAAA,MAAM,EAAE,EAlBD;AAmBPe,gBAAAA,6BAA6B,EAAE;AAC7B9B,kBAAAA,IAAI,EAAE;AADuB,iBAnBxB;AAsBP+B,gBAAAA,UAAU,EAAE,EAtBL;AAuBPC,gBAAAA,oBAAoB,EAAE;AACpBhC,kBAAAA,IAAI,EAAE;AADc;AAvBf;AAXH;AA3BM,WAzEN;AA4IViC,UAAAA,gBAAgB,EAAE;AAChBrC,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,KADJ;AAEJrB,cAAAA,UAAU,EAAE,qCAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADU;AAMhBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPoB,gBAAAA,OAAO,EAAE;AACPH,kBAAAA,QAAQ,EAAE,KADH;AAEPC,kBAAAA,YAAY,EAAE;AAFP;AADF;AALJ,aANS;AAkBhBP,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,UAFQ,EAGR,WAHQ,EAIR,gBAJQ,EAKR,WALQ,EAMR,aANQ,CAFJ;AAUNC,cAAAA,OAAO,EAAE;AACPoB,gBAAAA,OAAO,EAAE,EADF;AAEPE,gBAAAA,QAAQ,EAAE,EAFH;AAGPC,gBAAAA,SAAS,EAAE;AACTpB,kBAAAA,KAAK,EAAE;AADE,iBAHJ;AAMPqB,gBAAAA,OAAO,EAAE;AACPrB,kBAAAA,KAAK,EAAE;AADA,iBANF;AASP6B,gBAAAA,cAAc,EAAE;AACd7B,kBAAAA,KAAK,EAAE;AADO,iBATT;AAYP8B,gBAAAA,SAAS,EAAE,EAZJ;AAaPC,gBAAAA,WAAW,EAAE;AAbN;AAVH;AAlBQ,WA5IR;AAyLVC,UAAAA,UAAU,EAAE;AACVzC,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,KADJ;AAEJrB,cAAAA,UAAU,EAAE,mCAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADI;AAMVC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE;AACXgB,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPG,gBAAAA,eAAe,EAAE;AACfJ,kBAAAA,QAAQ,EAAE,aADK;AAEfC,kBAAAA,YAAY,EAAE;AAFC;AALV;AALJ,aANG;AAsBVP,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,YAFQ,EAGR,WAHQ,EAIR,QAJQ,EAKR,WALQ,EAMR,YANQ,CAFJ;AAUNC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE,EADN;AAEPmC,gBAAAA,UAAU,EAAE,EAFL;AAGPlC,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,KAAK,EAAE;AADE,iBAHJ;AAMPU,gBAAAA,MAAM,EAAE,EAND;AAOPY,gBAAAA,SAAS,EAAE;AACTtB,kBAAAA,KAAK,EAAE;AADE,iBAPJ;AAUPkC,gBAAAA,UAAU,EAAE;AACVlC,kBAAAA,KAAK,EAAE;AADG,iBAVL;AAaPmC,gBAAAA,gBAAgB,EAAE,EAbX;AAcPC,gBAAAA,oBAAoB,EAAE,EAdf;AAePjC,gBAAAA,IAAI,EAAE;AACJH,kBAAAA,KAAK,EAAE;AADH,iBAfC;AAkBPI,gBAAAA,wBAAwB,EAAE;AACxBT,kBAAAA,IAAI,EAAE;AADkB,iBAlBnB;AAqBPU,gBAAAA,+BAA+B,EAAE;AAC/BL,kBAAAA,KAAK,EAAE;AADwB,iBArB1B;AAwBPM,gBAAAA,0BAA0B,EAAE;AAC1BX,kBAAAA,IAAI,EAAE;AADoB,iBAxBrB;AA2BPY,gBAAAA,kBAAkB,EAAE;AAClBP,kBAAAA,KAAK,EAAE;AADW;AA3Bb;AAVH;AAtBE,WAzLF;AA0PVqC,UAAAA,eAAe,EAAE;AACf9C,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,KADJ;AAEJrB,cAAAA,UAAU,EAAE,6DAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADS;AAMfC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE;AACXgB,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPuB,gBAAAA,OAAO,EAAE;AACPxB,kBAAAA,QAAQ,EAAE,KADH;AAEPC,kBAAAA,YAAY,EAAE;AAFP,iBALF;AASPwB,gBAAAA,SAAS,EAAE;AACTzB,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBATJ;AAaPyB,gBAAAA,UAAU,EAAE;AACV1B,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVpB,kBAAAA,IAAI,EAAE;AAHI;AAbL;AANJ,aANQ;AAgCfa,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,MAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACP4C,gBAAAA,MAAM,EAAE;AACN9C,kBAAAA,IAAI,EAAE,MADA;AAEN+C,kBAAAA,MAAM,EAAE;AACN/C,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP8C,sBAAAA,IAAI,EAAE,EADC;AAEPC,sBAAAA,IAAI,EAAE;AAFC;AAFH;AAFF,iBADD;AAWPC,gBAAAA,IAAI,EAAE;AACJlD,kBAAAA,IAAI,EAAE,MADF;AAEJ+C,kBAAAA,MAAM,EAAE;AACN/C,oBAAAA,IAAI,EAAE,MADA;AAEN+C,oBAAAA,MAAM,EAAE;AAFF;AAFJ,iBAXC;AAkBPH,gBAAAA,SAAS,EAAE;AAlBJ;AANH;AAhCO,WA1PP;AAsTVO,UAAAA,cAAc,EAAE;AACdvD,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,KADJ;AAEJrB,cAAAA,UAAU,EAAE,4DAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADQ;AAMdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE;AACXgB,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPuB,gBAAAA,OAAO,EAAE;AACPxB,kBAAAA,QAAQ,EAAE,KADH;AAEPC,kBAAAA,YAAY,EAAE;AAFP;AALF;AANJ,aANO;AAuBdP,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,QADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPa,gBAAAA,MAAM,EAAE;AADD;AALH;AAvBM,WAtTN;AAuVVqC,UAAAA,gBAAgB,EAAE;AAChBxD,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,KADJ;AAEJrB,cAAAA,UAAU,EAAE,gDAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADU;AAMhBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE;AACXgB,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPiC,gBAAAA,SAAS,EAAE;AACThD,kBAAAA,KAAK,EAAE,IADE;AAETc,kBAAAA,QAAQ,EAAE,aAFD;AAGTC,kBAAAA,YAAY,EAAE;AAHL,iBALJ;AAUPkC,gBAAAA,OAAO,EAAE;AACPjD,kBAAAA,KAAK,EAAE,IADA;AAEPc,kBAAAA,QAAQ,EAAE,aAFH;AAGPC,kBAAAA,YAAY,EAAE;AAHP,iBAVF;AAePwB,gBAAAA,SAAS,EAAE;AACTzB,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBAfJ;AAmBPyB,gBAAAA,UAAU,EAAE;AACV1B,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVpB,kBAAAA,IAAI,EAAE;AAHI,iBAnBL;AAwBPoC,gBAAAA,WAAW,EAAE;AACXjB,kBAAAA,QAAQ,EAAE,aADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBAxBN;AA4BPG,gBAAAA,eAAe,EAAE;AACfJ,kBAAAA,QAAQ,EAAE,aADK;AAEfC,kBAAAA,YAAY,EAAE;AAFC;AA5BV;AALJ,aANS;AA6ChBP,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,cADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,YAAY,EAAE;AACZvD,kBAAAA,IAAI,EAAE,MADM;AAEZ+C,kBAAAA,MAAM,EAAE;AACN/C,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,UADQ,EAER,SAFQ,EAGR,WAHQ,EAIR,eAJQ,EAKR,mBALQ,EAMR,QANQ,EAOR,YAPQ,CAFJ;AAWNC,oBAAAA,OAAO,EAAE;AACPsB,sBAAAA,QAAQ,EAAE,EADH;AAEPF,sBAAAA,OAAO,EAAE,EAFF;AAGPG,sBAAAA,SAAS,EAAE;AACTpB,wBAAAA,KAAK,EAAE;AADE,uBAHJ;AAMPqB,sBAAAA,OAAO,EAAE;AACPrB,wBAAAA,KAAK,EAAE;AADA,uBANF;AASPsB,sBAAAA,SAAS,EAAE;AACTtB,wBAAAA,KAAK,EAAE;AADE,uBATJ;AAYPuB,sBAAAA,aAAa,EAAE;AACbvB,wBAAAA,KAAK,EAAE;AADM,uBAZR;AAePwB,sBAAAA,iBAAiB,EAAE;AACjBxB,wBAAAA,KAAK,EAAE;AADU,uBAfZ;AAkBPU,sBAAAA,MAAM,EAAE,EAlBD;AAmBPe,sBAAAA,6BAA6B,EAAE;AAC7B9B,wBAAAA,IAAI,EAAE;AADuB,uBAnBxB;AAsBP+B,sBAAAA,UAAU,EAAE,EAtBL;AAuBPC,sBAAAA,oBAAoB,EAAE;AACpBhC,wBAAAA,IAAI,EAAE;AADc;AAvBf;AAXH;AAFI,iBADP;AA2CP4C,gBAAAA,SAAS,EAAE;AA3CJ;AALH;AA7CQ,WAvVR;AAwbVY,UAAAA,kBAAkB,EAAE;AAClB5D,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,KADJ;AAEJrB,cAAAA,UAAU,EAAE,2BAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADY;AAMlBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP0C,gBAAAA,SAAS,EAAE;AACTzB,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPyB,gBAAAA,UAAU,EAAE;AACV1B,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,yBAFJ;AAGVpB,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUPqD,gBAAAA,SAAS,EAAE;AACThD,kBAAAA,KAAK,EAAE,IADE;AAETc,kBAAAA,QAAQ,EAAE,aAFD;AAGTC,kBAAAA,YAAY,EAAE;AAHL,iBAVJ;AAePkC,gBAAAA,OAAO,EAAE;AACPjD,kBAAAA,KAAK,EAAE,IADA;AAEPc,kBAAAA,QAAQ,EAAE,aAFH;AAGPC,kBAAAA,YAAY,EAAE;AAHP,iBAfF;AAoBPgB,gBAAAA,WAAW,EAAE;AACXjB,kBAAAA,QAAQ,EAAE,aADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBApBN;AAwBPe,gBAAAA,SAAS,EAAE;AACThB,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAxBJ;AAFJ,aANW;AAsClBP,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,gBADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPuD,gBAAAA,cAAc,EAAE;AACdzD,kBAAAA,IAAI,EAAE,MADQ;AAEd+C,kBAAAA,MAAM,EAAE;AACN/C,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,SADQ,EAER,UAFQ,EAGR,WAHQ,EAIR,gBAJQ,EAKR,WALQ,EAMR,aANQ,CAFJ;AAUNC,oBAAAA,OAAO,EAAE;AACPoB,sBAAAA,OAAO,EAAE,EADF;AAEPE,sBAAAA,QAAQ,EAAE,EAFH;AAGPC,sBAAAA,SAAS,EAAE;AACTpB,wBAAAA,KAAK,EAAE;AADE,uBAHJ;AAMPqB,sBAAAA,OAAO,EAAE;AACPrB,wBAAAA,KAAK,EAAE;AADA,uBANF;AASP6B,sBAAAA,cAAc,EAAE;AACd7B,wBAAAA,KAAK,EAAE;AADO,uBATT;AAYP8B,sBAAAA,SAAS,EAAE,EAZJ;AAaPC,sBAAAA,WAAW,EAAE;AAbN;AAVH;AAFM,iBADT;AA8BPQ,gBAAAA,SAAS,EAAE;AA9BJ;AALH;AAtCU,WAxbV;AAqgBVc,UAAAA,YAAY,EAAE;AACZ9D,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,KADJ;AAEJrB,cAAAA,UAAU,EAAE,qBAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADM;AAMZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP0C,gBAAAA,SAAS,EAAE;AACTzB,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPyB,gBAAAA,UAAU,EAAE;AACV1B,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVpB,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUP2D,gBAAAA,aAAa,EAAE;AACbxC,kBAAAA,QAAQ,EAAE,aADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD,iBAVR;AAcPwC,gBAAAA,qBAAqB,EAAE;AACrBzC,kBAAAA,QAAQ,EAAE,aADW;AAErBC,kBAAAA,YAAY,EAAE,uBAFO;AAGrBpB,kBAAAA,IAAI,EAAE;AAHe;AAdhB;AAFJ,aANK;AA6BZa,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP2D,gBAAAA,QAAQ,EAAE;AACR7D,kBAAAA,IAAI,EAAE,MADE;AAER+C,kBAAAA,MAAM,EAAE;AACN/C,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,aADQ,EAER,YAFQ,EAGR,QAHQ,CAFJ;AAONC,oBAAAA,OAAO,EAAE;AACPC,sBAAAA,WAAW,EAAE,EADN;AAEPmC,sBAAAA,UAAU,EAAE,EAFL;AAGPvB,sBAAAA,MAAM,EAAE,EAHD;AAIPyB,sBAAAA,gBAAgB,EAAE;AAJX;AAPH;AAFA,iBADH;AAkBPI,gBAAAA,SAAS,EAAE;AAlBJ;AALH;AA7BI,WArgBJ;AA6jBVkB,UAAAA,mBAAmB,EAAE;AACnBlE,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,KADJ;AAEJrB,cAAAA,UAAU,EAAE,qBAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADa;AAMnBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP6D,gBAAAA,WAAW,EAAE;AACX5C,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AADN;AALJ,aANY;AAkBnBP,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPM,gBAAAA,IAAI,EAAE;AACJH,kBAAAA,KAAK,EAAE;AADH;AADC;AAFH;AAlBW,WA7jBX;AAwlBV2D,UAAAA,UAAU,EAAE;AACVpE,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,2CADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADI;AAKVC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,WAFQ,EAGR,SAHQ,EAIR,WAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE;AACXgB,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPiC,gBAAAA,SAAS,EAAE;AACThD,kBAAAA,KAAK,EAAE;AADE,iBALJ;AAQPiD,gBAAAA,OAAO,EAAE;AACPjD,kBAAAA,KAAK,EAAE;AADA,iBARF;AAWP4D,gBAAAA,SAAS,EAAE,EAXJ;AAYPC,gBAAAA,gBAAgB,EAAE;AAChBlE,kBAAAA,IAAI,EAAE,MADU;AAEhB+C,kBAAAA,MAAM,EAAE;AACN/C,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPiE,sBAAAA,KAAK,EAAE,EADA;AAEPC,sBAAAA,QAAQ,EAAE,EAFH;AAGPC,sBAAAA,MAAM,EAAE;AACNrE,wBAAAA,IAAI,EAAE,MADA;AAEN+C,wBAAAA,MAAM,EAAE;AAFF;AAHD;AAFH;AAFQ,iBAZX;AA0BPxB,gBAAAA,eAAe,EAAE;AA1BV;AARJ,aALG;AA0CVV,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPyC,gBAAAA,OAAO,EAAE;AADF;AALH;AA1CE,WAxlBF;AA4oBV2B,UAAAA,SAAS,EAAE;AACT1E,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,QADJ;AAEJrB,cAAAA,UAAU,EAAE,qDAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADG;AAMTC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE;AACXgB,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPuB,gBAAAA,OAAO,EAAE;AACPxB,kBAAAA,QAAQ,EAAE,KADH;AAEPC,kBAAAA,YAAY,EAAE;AAFP;AALF;AANJ,aANE;AAuBTP,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAvBC,WA5oBD;AAwqBVqE,UAAAA,WAAW,EAAE;AACX3E,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,qBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,MAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACP6D,gBAAAA,WAAW,EAAE;AACX5C,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPZ,gBAAAA,IAAI,EAAE;AACJH,kBAAAA,KAAK,EAAE;AADH;AALC;AANJ,aALI;AAqBXQ,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aArBG;AAyBXc,YAAAA,UAAU,EAAE;AAzBD,WAxqBH;AAmsBVwD,UAAAA,aAAa,EAAE;AACb5E,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,QADJ;AAEJrB,cAAAA,UAAU,EAAE,qBAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADO;AAMbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACP6D,gBAAAA,WAAW,EAAE;AACX5C,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPqD,gBAAAA,OAAO,EAAE;AACPtD,kBAAAA,QAAQ,EAAE,aADH;AAEPC,kBAAAA,YAAY,EAAE,SAFP;AAGPpB,kBAAAA,IAAI,EAAE,MAHC;AAIP+C,kBAAAA,MAAM,EAAE;AAJD;AALF;AANJ,aANM;AAyBblC,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAzBK;AA6Bbc,YAAAA,UAAU,EAAE;AA7BC,WAnsBL;AAkuBV0D,UAAAA,aAAa,EAAE;AACb9E,YAAAA,IAAI,EAAE;AACJsB,cAAAA,MAAM,EAAE,OADJ;AAEJrB,cAAAA,UAAU,EAAE,mCAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADO;AAMbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,WAAW,EAAE;AACXgB,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPuD,gBAAAA,cAAc,EAAE;AACdtE,kBAAAA,KAAK,EAAE;AADO,iBALT;AAQPuE,gBAAAA,iBAAiB,EAAE;AACjBvE,kBAAAA,KAAK,EAAE;AADU,iBARZ;AAWPU,gBAAAA,MAAM,EAAE,EAXD;AAYPT,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBAZN;AAePE,gBAAAA,wBAAwB,EAAE;AACxBT,kBAAAA,IAAI,EAAE;AADkB,iBAfnB;AAkBPU,gBAAAA,+BAA+B,EAAE;AAC/BL,kBAAAA,KAAK,EAAE;AADwB,iBAlB1B;AAqBPM,gBAAAA,0BAA0B,EAAE;AAC1BX,kBAAAA,IAAI,EAAE;AADoB,iBArBrB;AAwBPY,gBAAAA,kBAAkB,EAAE;AAClBP,kBAAAA,KAAK,EAAE;AADW;AAxBb;AALJ,aANM;AAwCbQ,YAAAA,MAAM,EAAE;AACNb,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,YADQ,EAER,QAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACPoC,gBAAAA,UAAU,EAAE,EADL;AAEPvB,gBAAAA,MAAM,EAAE;AAFD;AANH,aAxCK;AAmDbC,YAAAA,UAAU,EAAE;AAnDC;AAluBL,SAbC;AAqyBb6D,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACF9E,YAAAA,IAAI,EAAE,MADJ;AAEF+C,YAAAA,MAAM,EAAE;AAFN,WADE;AAKNgC,UAAAA,EAAE,EAAE;AACF/E,YAAAA,IAAI,EAAE,KADJ;AAEFgF,YAAAA,GAAG,EAAE,EAFH;AAGFC,YAAAA,KAAK,EAAE;AAHL,WALE;AAUNC,UAAAA,EAAE,EAAE;AACFlF,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACPiF,cAAAA,QAAQ,EAAE;AACRnF,gBAAAA,IAAI,EAAE,WADE;AAERE,gBAAAA,OAAO,EAAE;AACPkF,kBAAAA,UAAU,EAAE,EADL;AAEPC,kBAAAA,YAAY,EAAE,EAFP;AAGPC,kBAAAA,iBAAiB,EAAE;AAHZ;AAFD;AADH;AAFP,WAVE;AAuBNC,UAAAA,EAAE,EAAE;AACFvF,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACPsF,cAAAA,0BAA0B,EAAE;AAC1BxF,gBAAAA,IAAI,EAAE;AADoB,eADrB;AAIPyF,cAAAA,yBAAyB,EAAE;AACzBzF,gBAAAA,IAAI,EAAE;AADmB,eAJpB;AAOP0F,cAAAA,mCAAmC,EAAE;AACnCrF,gBAAAA,KAAK,EAAE;AAD4B,eAP9B;AAUPsF,cAAAA,kCAAkC,EAAE;AAClCtF,gBAAAA,KAAK,EAAE;AAD2B;AAV7B;AAFP,WAvBE;AAwCNuF,UAAAA,EAAE,EAAE;AACF5F,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACPa,cAAAA,MAAM,EAAE,EADD;AAEPiB,cAAAA,oBAAoB,EAAE;AACpBhC,gBAAAA,IAAI,EAAE;AADc,eAFf;AAKP6F,cAAAA,gBAAgB,EAAE;AAChB7F,gBAAAA,IAAI,EAAE;AADU;AALX;AAFP,WAxCE;AAoDN8F,UAAAA,EAAE,EAAE;AACF9F,YAAAA,IAAI,EAAE,WADJ;AAEF+F,YAAAA,eAAe,EAAE;AAFf,WApDE;AAwDNC,UAAAA,EAAE,EAAE;AACFhG,YAAAA,IAAI,EAAE,MADJ;AAEF+C,YAAAA,MAAM,EAAE;AACN/C,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,UAFQ,EAGR,SAHQ,EAIR,QAJQ,CAFJ;AAQNC,cAAAA,OAAO,EAAE;AACP+F,gBAAAA,MAAM,EAAE,EADD;AAEPC,gBAAAA,QAAQ,EAAE;AACRlG,kBAAAA,IAAI,EAAE;AADE,iBAFH;AAKPmG,gBAAAA,OAAO,EAAE,EALF;AAMPC,gBAAAA,WAAW,EAAE,EANN;AAOPC,gBAAAA,KAAK,EAAE,EAPA;AAQPC,gBAAAA,IAAI,EAAE,EARC;AASPC,gBAAAA,QAAQ,EAAE;AACRvG,kBAAAA,IAAI,EAAE;AADE,iBATH;AAYPwG,gBAAAA,SAAS,EAAE;AACTxG,kBAAAA,IAAI,EAAE;AADG,iBAZJ;AAePyG,gBAAAA,WAAW,EAAE,EAfN;AAgBPC,gBAAAA,eAAe,EAAE,EAhBV;AAiBPC,gBAAAA,eAAe,EAAE,EAjBV;AAkBP5F,gBAAAA,MAAM,EAAE,EAlBD;AAmBP6F,gBAAAA,QAAQ,EAAE;AACR5G,kBAAAA,IAAI,EAAE,WADE;AAERC,kBAAAA,QAAQ,EAAE,CACR,UADQ,EAER,QAFQ,EAGR,kBAHQ,CAFF;AAORC,kBAAAA,OAAO,EAAE;AACP2G,oBAAAA,QAAQ,EAAE;AACRxG,sBAAAA,KAAK,EAAE;AADC,qBADH;AAIPyG,oBAAAA,MAAM,EAAE;AACNzG,sBAAAA,KAAK,EAAE;AADD,qBAJD;AAOP0G,oBAAAA,gBAAgB,EAAE;AAPX;AAPD,iBAnBH;AAoCPC,gBAAAA,cAAc,EAAE;AACdhH,kBAAAA,IAAI,EAAE,WADQ;AAEdE,kBAAAA,OAAO,EAAE;AACP+G,oBAAAA,YAAY,EAAE;AACZjH,sBAAAA,IAAI,EAAE,WADM;AAEZE,sBAAAA,OAAO,EAAE;AACPgH,wBAAAA,eAAe,EAAE;AACflH,0BAAAA,IAAI,EAAE;AADS,yBADV;AAIP8B,wBAAAA,6BAA6B,EAAE;AAC7B9B,0BAAAA,IAAI,EAAE;AADuB,yBAJxB;AAOPmH,wBAAAA,+BAA+B,EAAE;AAC/BnH,0BAAAA,IAAI,EAAE;AADyB;AAP1B;AAFG,qBADP;AAePoH,oBAAAA,WAAW,EAAE;AACXpH,sBAAAA,IAAI,EAAE,WADK;AAEXE,sBAAAA,OAAO,EAAE;AACPgH,wBAAAA,eAAe,EAAE;AACflH,0BAAAA,IAAI,EAAE;AADS,yBADV;AAIP8B,wBAAAA,6BAA6B,EAAE;AAC7B9B,0BAAAA,IAAI,EAAE;AADuB,yBAJxB;AAOPmH,wBAAAA,+BAA+B,EAAE;AAC/BnH,0BAAAA,IAAI,EAAE;AADyB,yBAP1B;AAUPqH,wBAAAA,aAAa,EAAE;AACbrH,0BAAAA,IAAI,EAAE,WADO;AAEbE,0BAAAA,OAAO,EAAE;AACPoH,4BAAAA,GAAG,EAAE;AACHtH,8BAAAA,IAAI,EAAE;AADH,6BADE;AAIPuH,4BAAAA,GAAG,EAAE;AACHvH,8BAAAA,IAAI,EAAE;AADH,6BAJE;AAOPwH,4BAAAA,GAAG,EAAE;AACHxH,8BAAAA,IAAI,EAAE;AADH;AAPE;AAFI;AAVR;AAFE;AAfN;AAFK,iBApCT;AAmFPyH,gBAAAA,YAAY,EAAE;AACZzH,kBAAAA,IAAI,EAAE,MADM;AAEZ+C,kBAAAA,MAAM,EAAE;AAFI;AAnFP;AARH;AAFN,WAxDE;AA4JN2E,UAAAA,EAAE,EAAE;AACF1H,YAAAA,IAAI,EAAE,MADJ;AAEF+C,YAAAA,MAAM,EAAE;AACN/C,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,UAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACP+F,gBAAAA,MAAM,EAAE,EADD;AAEPC,gBAAAA,QAAQ,EAAE;AACRlG,kBAAAA,IAAI,EAAE;AADE;AAFH;AANH;AAFN,WA5JE;AA4KN2H,UAAAA,GAAG,EAAE;AACH3H,YAAAA,IAAI,EAAE,WADH;AAEHC,YAAAA,QAAQ,EAAE,CACR,QADQ,EAER,UAFQ,EAGR,SAHQ,EAIR,MAJQ,EAKR,UALQ,EAMR,WANQ,CAFP;AAUHC,YAAAA,OAAO,EAAE;AACP+F,cAAAA,MAAM,EAAE,EADD;AAEPC,cAAAA,QAAQ,EAAE;AACRlG,gBAAAA,IAAI,EAAE;AADE,eAFH;AAKPmG,cAAAA,OAAO,EAAE,EALF;AAMPC,cAAAA,WAAW,EAAE,EANN;AAOPC,cAAAA,KAAK,EAAE,EAPA;AAQPC,cAAAA,IAAI,EAAE,EARC;AASPC,cAAAA,QAAQ,EAAE;AACRvG,gBAAAA,IAAI,EAAE;AADE,eATH;AAYPwG,cAAAA,SAAS,EAAE;AACTxG,gBAAAA,IAAI,EAAE;AADG;AAZJ;AAVN;AA5KC;AAryBK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-06-03',\n    endpointPrefix: 'internetmonitor',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon CloudWatch Internet Monitor',\n    serviceId: 'InternetMonitor',\n    signatureVersion: 'v4',\n    signingName: 'internetmonitor',\n    uid: 'internetmonitor-2021-06-03'\n  },\n  operations: {\n    CreateMonitor: {\n      http: {\n        requestUri: '/v20210603/Monitors',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName'\n        ],\n        members: {\n          MonitorName: {},\n          Resources: {\n            shape: 'S3'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          },\n          Tags: {\n            shape: 'S6'\n          },\n          MaxCityNetworksToMonitor: {\n            type: 'integer'\n          },\n          InternetMeasurementsLogDelivery: {\n            shape: 'Sa'\n          },\n          TrafficPercentageToMonitor: {\n            type: 'integer'\n          },\n          HealthEventsConfig: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Arn',\n          'Status'\n        ],\n        members: {\n          Arn: {},\n          Status: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteMonitor: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v20210603/Monitors/{MonitorName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName'\n        ],\n        members: {\n          MonitorName: {\n            location: 'uri',\n            locationName: 'MonitorName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetHealthEvent: {\n      http: {\n        method: 'GET',\n        requestUri: '/v20210603/Monitors/{MonitorName}/HealthEvents/{EventId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName',\n          'EventId'\n        ],\n        members: {\n          MonitorName: {\n            location: 'uri',\n            locationName: 'MonitorName'\n          },\n          EventId: {\n            location: 'uri',\n            locationName: 'EventId'\n          },\n          LinkedAccountId: {\n            location: 'querystring',\n            locationName: 'LinkedAccountId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'EventArn',\n          'EventId',\n          'StartedAt',\n          'LastUpdatedAt',\n          'ImpactedLocations',\n          'Status',\n          'ImpactType'\n        ],\n        members: {\n          EventArn: {},\n          EventId: {},\n          StartedAt: {\n            shape: 'Ss'\n          },\n          EndedAt: {\n            shape: 'Ss'\n          },\n          CreatedAt: {\n            shape: 'Ss'\n          },\n          LastUpdatedAt: {\n            shape: 'Ss'\n          },\n          ImpactedLocations: {\n            shape: 'St'\n          },\n          Status: {},\n          PercentOfTotalTrafficImpacted: {\n            type: 'double'\n          },\n          ImpactType: {},\n          HealthScoreThreshold: {\n            type: 'double'\n          }\n        }\n      }\n    },\n    GetInternetEvent: {\n      http: {\n        method: 'GET',\n        requestUri: '/v20210603/InternetEvents/{EventId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'EventId'\n        ],\n        members: {\n          EventId: {\n            location: 'uri',\n            locationName: 'EventId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'EventId',\n          'EventArn',\n          'StartedAt',\n          'ClientLocation',\n          'EventType',\n          'EventStatus'\n        ],\n        members: {\n          EventId: {},\n          EventArn: {},\n          StartedAt: {\n            shape: 'Ss'\n          },\n          EndedAt: {\n            shape: 'Ss'\n          },\n          ClientLocation: {\n            shape: 'S1b'\n          },\n          EventType: {},\n          EventStatus: {}\n        }\n      }\n    },\n    GetMonitor: {\n      http: {\n        method: 'GET',\n        requestUri: '/v20210603/Monitors/{MonitorName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName'\n        ],\n        members: {\n          MonitorName: {\n            location: 'uri',\n            locationName: 'MonitorName'\n          },\n          LinkedAccountId: {\n            location: 'querystring',\n            locationName: 'LinkedAccountId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'MonitorName',\n          'MonitorArn',\n          'Resources',\n          'Status',\n          'CreatedAt',\n          'ModifiedAt'\n        ],\n        members: {\n          MonitorName: {},\n          MonitorArn: {},\n          Resources: {\n            shape: 'S3'\n          },\n          Status: {},\n          CreatedAt: {\n            shape: 'Ss'\n          },\n          ModifiedAt: {\n            shape: 'Ss'\n          },\n          ProcessingStatus: {},\n          ProcessingStatusInfo: {},\n          Tags: {\n            shape: 'S6'\n          },\n          MaxCityNetworksToMonitor: {\n            type: 'integer'\n          },\n          InternetMeasurementsLogDelivery: {\n            shape: 'Sa'\n          },\n          TrafficPercentageToMonitor: {\n            type: 'integer'\n          },\n          HealthEventsConfig: {\n            shape: 'Sf'\n          }\n        }\n      }\n    },\n    GetQueryResults: {\n      http: {\n        method: 'GET',\n        requestUri: '/v20210603/Monitors/{MonitorName}/Queries/{QueryId}/Results',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName',\n          'QueryId'\n        ],\n        members: {\n          MonitorName: {\n            location: 'uri',\n            locationName: 'MonitorName'\n          },\n          QueryId: {\n            location: 'uri',\n            locationName: 'QueryId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Fields',\n          'Data'\n        ],\n        members: {\n          Fields: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Name: {},\n                Type: {}\n              }\n            }\n          },\n          Data: {\n            type: 'list',\n            member: {\n              type: 'list',\n              member: {}\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetQueryStatus: {\n      http: {\n        method: 'GET',\n        requestUri: '/v20210603/Monitors/{MonitorName}/Queries/{QueryId}/Status',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName',\n          'QueryId'\n        ],\n        members: {\n          MonitorName: {\n            location: 'uri',\n            locationName: 'MonitorName'\n          },\n          QueryId: {\n            location: 'uri',\n            locationName: 'QueryId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Status'\n        ],\n        members: {\n          Status: {}\n        }\n      }\n    },\n    ListHealthEvents: {\n      http: {\n        method: 'GET',\n        requestUri: '/v20210603/Monitors/{MonitorName}/HealthEvents',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName'\n        ],\n        members: {\n          MonitorName: {\n            location: 'uri',\n            locationName: 'MonitorName'\n          },\n          StartTime: {\n            shape: 'Ss',\n            location: 'querystring',\n            locationName: 'StartTime'\n          },\n          EndTime: {\n            shape: 'Ss',\n            location: 'querystring',\n            locationName: 'EndTime'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          EventStatus: {\n            location: 'querystring',\n            locationName: 'EventStatus'\n          },\n          LinkedAccountId: {\n            location: 'querystring',\n            locationName: 'LinkedAccountId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HealthEvents'\n        ],\n        members: {\n          HealthEvents: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'EventArn',\n                'EventId',\n                'StartedAt',\n                'LastUpdatedAt',\n                'ImpactedLocations',\n                'Status',\n                'ImpactType'\n              ],\n              members: {\n                EventArn: {},\n                EventId: {},\n                StartedAt: {\n                  shape: 'Ss'\n                },\n                EndedAt: {\n                  shape: 'Ss'\n                },\n                CreatedAt: {\n                  shape: 'Ss'\n                },\n                LastUpdatedAt: {\n                  shape: 'Ss'\n                },\n                ImpactedLocations: {\n                  shape: 'St'\n                },\n                Status: {},\n                PercentOfTotalTrafficImpacted: {\n                  type: 'double'\n                },\n                ImpactType: {},\n                HealthScoreThreshold: {\n                  type: 'double'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListInternetEvents: {\n      http: {\n        method: 'GET',\n        requestUri: '/v20210603/InternetEvents',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'InternetEventMaxResults',\n            type: 'integer'\n          },\n          StartTime: {\n            shape: 'Ss',\n            location: 'querystring',\n            locationName: 'StartTime'\n          },\n          EndTime: {\n            shape: 'Ss',\n            location: 'querystring',\n            locationName: 'EndTime'\n          },\n          EventStatus: {\n            location: 'querystring',\n            locationName: 'EventStatus'\n          },\n          EventType: {\n            location: 'querystring',\n            locationName: 'EventType'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'InternetEvents'\n        ],\n        members: {\n          InternetEvents: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'EventId',\n                'EventArn',\n                'StartedAt',\n                'ClientLocation',\n                'EventType',\n                'EventStatus'\n              ],\n              members: {\n                EventId: {},\n                EventArn: {},\n                StartedAt: {\n                  shape: 'Ss'\n                },\n                EndedAt: {\n                  shape: 'Ss'\n                },\n                ClientLocation: {\n                  shape: 'S1b'\n                },\n                EventType: {},\n                EventStatus: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListMonitors: {\n      http: {\n        method: 'GET',\n        requestUri: '/v20210603/Monitors',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          MonitorStatus: {\n            location: 'querystring',\n            locationName: 'MonitorStatus'\n          },\n          IncludeLinkedAccounts: {\n            location: 'querystring',\n            locationName: 'IncludeLinkedAccounts',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Monitors'\n        ],\n        members: {\n          Monitors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'MonitorName',\n                'MonitorArn',\n                'Status'\n              ],\n              members: {\n                MonitorName: {},\n                MonitorArn: {},\n                Status: {},\n                ProcessingStatus: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S6'\n          }\n        }\n      }\n    },\n    StartQuery: {\n      http: {\n        requestUri: '/v20210603/Monitors/{MonitorName}/Queries',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName',\n          'StartTime',\n          'EndTime',\n          'QueryType'\n        ],\n        members: {\n          MonitorName: {\n            location: 'uri',\n            locationName: 'MonitorName'\n          },\n          StartTime: {\n            shape: 'Ss'\n          },\n          EndTime: {\n            shape: 'Ss'\n          },\n          QueryType: {},\n          FilterParameters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Field: {},\n                Operator: {},\n                Values: {\n                  type: 'list',\n                  member: {}\n                }\n              }\n            }\n          },\n          LinkedAccountId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'QueryId'\n        ],\n        members: {\n          QueryId: {}\n        }\n      }\n    },\n    StopQuery: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v20210603/Monitors/{MonitorName}/Queries/{QueryId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName',\n          'QueryId'\n        ],\n        members: {\n          MonitorName: {\n            location: 'uri',\n            locationName: 'MonitorName'\n          },\n          QueryId: {\n            location: 'uri',\n            locationName: 'QueryId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          Tags: {\n            shape: 'S6'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateMonitor: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/v20210603/Monitors/{MonitorName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName'\n        ],\n        members: {\n          MonitorName: {\n            location: 'uri',\n            locationName: 'MonitorName'\n          },\n          ResourcesToAdd: {\n            shape: 'S3'\n          },\n          ResourcesToRemove: {\n            shape: 'S3'\n          },\n          Status: {},\n          ClientToken: {\n            idempotencyToken: true\n          },\n          MaxCityNetworksToMonitor: {\n            type: 'integer'\n          },\n          InternetMeasurementsLogDelivery: {\n            shape: 'Sa'\n          },\n          TrafficPercentageToMonitor: {\n            type: 'integer'\n          },\n          HealthEventsConfig: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'MonitorArn',\n          'Status'\n        ],\n        members: {\n          MonitorArn: {},\n          Status: {}\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'list',\n      member: {}\n    },\n    S6: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sa: {\n      type: 'structure',\n      members: {\n        S3Config: {\n          type: 'structure',\n          members: {\n            BucketName: {},\n            BucketPrefix: {},\n            LogDeliveryStatus: {}\n          }\n        }\n      }\n    },\n    Sf: {\n      type: 'structure',\n      members: {\n        AvailabilityScoreThreshold: {\n          type: 'double'\n        },\n        PerformanceScoreThreshold: {\n          type: 'double'\n        },\n        AvailabilityLocalHealthEventsConfig: {\n          shape: 'Sh'\n        },\n        PerformanceLocalHealthEventsConfig: {\n          shape: 'Sh'\n        }\n      }\n    },\n    Sh: {\n      type: 'structure',\n      members: {\n        Status: {},\n        HealthScoreThreshold: {\n          type: 'double'\n        },\n        MinTrafficImpact: {\n          type: 'double'\n        }\n      }\n    },\n    Ss: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    St: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ASName',\n          'ASNumber',\n          'Country',\n          'Status'\n        ],\n        members: {\n          ASName: {},\n          ASNumber: {\n            type: 'long'\n          },\n          Country: {},\n          Subdivision: {},\n          Metro: {},\n          City: {},\n          Latitude: {\n            type: 'double'\n          },\n          Longitude: {\n            type: 'double'\n          },\n          CountryCode: {},\n          SubdivisionCode: {},\n          ServiceLocation: {},\n          Status: {},\n          CausedBy: {\n            type: 'structure',\n            required: [\n              'Networks',\n              'AsPath',\n              'NetworkEventType'\n            ],\n            members: {\n              Networks: {\n                shape: 'Sz'\n              },\n              AsPath: {\n                shape: 'Sz'\n              },\n              NetworkEventType: {}\n            }\n          },\n          InternetHealth: {\n            type: 'structure',\n            members: {\n              Availability: {\n                type: 'structure',\n                members: {\n                  ExperienceScore: {\n                    type: 'double'\n                  },\n                  PercentOfTotalTrafficImpacted: {\n                    type: 'double'\n                  },\n                  PercentOfClientLocationImpacted: {\n                    type: 'double'\n                  }\n                }\n              },\n              Performance: {\n                type: 'structure',\n                members: {\n                  ExperienceScore: {\n                    type: 'double'\n                  },\n                  PercentOfTotalTrafficImpacted: {\n                    type: 'double'\n                  },\n                  PercentOfClientLocationImpacted: {\n                    type: 'double'\n                  },\n                  RoundTripTime: {\n                    type: 'structure',\n                    members: {\n                      P50: {\n                        type: 'double'\n                      },\n                      P90: {\n                        type: 'double'\n                      },\n                      P95: {\n                        type: 'double'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          Ipv4Prefixes: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    Sz: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ASName',\n          'ASNumber'\n        ],\n        members: {\n          ASName: {},\n          ASNumber: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    S1b: {\n      type: 'structure',\n      required: [\n        'ASName',\n        'ASNumber',\n        'Country',\n        'City',\n        'Latitude',\n        'Longitude'\n      ],\n      members: {\n        ASName: {},\n        ASNumber: {\n          type: 'long'\n        },\n        Country: {},\n        Subdivision: {},\n        Metro: {},\n        City: {},\n        Latitude: {\n          type: 'double'\n        },\n        Longitude: {\n          type: 'double'\n        }\n      }\n    }\n  }\n}"]}