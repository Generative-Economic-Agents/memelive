{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/backup-2018-11-15.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","uid","operations","CancelLegalHold","http","method","requestUri","responseCode","input","type","required","members","LegalHoldId","location","locationName","CancelDescription","RetainRecordInDays","output","idempotent","CreateBackupPlan","BackupPlan","shape","BackupPlanTags","CreatorRequestId","BackupPlanId","BackupPlanArn","CreationDate","VersionId","AdvancedBackupSettings","CreateBackupSelection","BackupSelection","SelectionId","CreateBackupVault","BackupVaultName","BackupVaultTags","EncryptionKeyArn","BackupVaultArn","CreateFramework","FrameworkName","FrameworkDescription","FrameworkControls","IdempotencyToken","idempotencyToken","FrameworkTags","FrameworkArn","CreateLegalHold","Title","Description","RecoveryPointSelection","Tags","Status","LegalHoldArn","CreateLogicallyAirGappedBackupVault","MinRetentionDays","MaxRetentionDays","VaultState","CreateReportPlan","ReportPlanName","ReportPlanDescription","ReportDeliveryChannel","ReportSetting","ReportPlanTags","ReportPlanArn","CreationTime","CreateRestoreTestingPlan","RestoreTestingPlan","RestoreTestingPlanName","ScheduleExpression","ScheduleExpressionTimezone","StartWindowHours","RestoreTestingPlanArn","CreateRestoreTestingSelection","RestoreTestingSelection","IamRoleArn","ProtectedResourceArns","ProtectedResourceConditions","ProtectedResourceType","RestoreMetadataOverrides","RestoreTestingSelectionName","ValidationWindowHours","DeleteBackupPlan","DeletionDate","DeleteBackupSelection","DeleteBackupVault","DeleteBackupVaultAccessPolicy","DeleteBackupVaultLockConfiguration","DeleteBackupVaultNotifications","DeleteFramework","DeleteRecoveryPoint","RecoveryPointArn","DeleteReportPlan","DeleteRestoreTestingPlan","DeleteRestoreTestingSelection","DescribeBackupJob","BackupJobId","AccountId","ResourceArn","CompletionDate","State","StatusMessage","PercentDone","BackupSizeInBytes","CreatedBy","ResourceType","BytesTransferred","ExpectedCompletionDate","StartBy","BackupOptions","BackupType","ParentJobId","IsParent","NumberOfChildJobs","ChildJobsInState","key","value","ResourceName","InitiationDate","MessageCategory","DescribeBackupVault","BackupVaultAccountId","VaultType","NumberOfRecoveryPoints","Locked","LockDate","DescribeCopyJob","CopyJobId","CopyJob","DescribeFramework","DeploymentStatus","FrameworkStatus","DescribeGlobalSettings","GlobalSettings","LastUpdateTime","DescribeProtectedResource","LastBackupTime","LastBackupVaultArn","LastRecoveryPointArn","LatestRestoreExecutionTimeMinutes","LatestRestoreJobCreationDate","LatestRestoreRecoveryPointCreationDate","DescribeRecoveryPoint","SourceBackupVaultArn","CalculatedLifecycle","Lifecycle","IsEncrypted","StorageClass","LastRestoreTime","ParentRecoveryPointArn","CompositeMemberIdentifier","DescribeRegionSettings","ResourceTypeOptInPreference","ResourceTypeManagementPreference","DescribeReportJob","ReportJobId","ReportJob","DescribeReportPlan","ReportPlan","DescribeRestoreJob","RestoreJobId","ExpectedCompletionTimeMinutes","CreatedResourceArn","RecoveryPointCreationDate","ValidationStatus","ValidationStatusMessage","DeletionStatus","DeletionStatusMessage","DisassociateRecoveryPoint","DisassociateRecoveryPointFromParent","ExportBackupPlanTemplate","BackupPlanTemplateJson","GetBackupPlan","LastExecutionDate","GetBackupPlanFromJSON","GetBackupPlanFromTemplate","BackupPlanTemplateId","BackupPlanDocument","GetBackupSelection","GetBackupVaultAccessPolicy","Policy","GetBackupVaultNotifications","SNSTopicArn","BackupVaultEvents","GetLegalHold","CancellationDate","RetainRecordUntil","GetRecoveryPointRestoreMetadata","RestoreMetadata","GetRestoreJobMetadata","Metadata","GetRestoreTestingInferredMetadata","InferredMetadata","GetRestoreTestingPlan","LastExecutionTime","GetRestoreTestingSelection","GetSupportedResourceTypes","ResourceTypes","member","ListBackupJobSummaries","AggregationPeriod","MaxResults","NextToken","BackupJobSummaries","Region","Count","StartTime","EndTime","ListBackupJobs","ByResourceArn","ByState","ByBackupVaultName","ByCreatedBefore","ByCreatedAfter","ByResourceType","ByAccountId","ByCompleteAfter","ByCompleteBefore","ByParentJobId","ByMessageCategory","BackupJobs","ListBackupPlanTemplates","BackupPlanTemplatesList","BackupPlanTemplateName","ListBackupPlanVersions","BackupPlanVersionsList","ListBackupPlans","IncludeDeleted","BackupPlansList","ListBackupSelections","BackupSelectionsList","SelectionName","ListBackupVaults","ByVaultType","ByShared","BackupVaultList","ListCopyJobSummaries","CopyJobSummaries","ListCopyJobs","ByDestinationVaultArn","CopyJobs","ListFrameworks","Frameworks","NumberOfControls","ListLegalHolds","LegalHolds","ListProtectedResources","Results","ListProtectedResourcesByBackupVault","ListRecoveryPointsByBackupVault","ByBackupPlanId","ByParentRecoveryPointArn","RecoveryPoints","ListRecoveryPointsByLegalHold","ListRecoveryPointsByResource","ManagedByAWSBackupOnly","BackupSizeBytes","ListReportJobs","ByReportPlanName","ByCreationBefore","ByCreationAfter","ByStatus","ReportJobs","ListReportPlans","ReportPlans","ListRestoreJobSummaries","RestoreJobSummaries","ListRestoreJobs","ByRestoreTestingPlanArn","RestoreJobs","ListRestoreJobsByProtectedResource","ByRecoveryPointCreationDateAfter","ByRecoveryPointCreationDateBefore","ListRestoreTestingPlans","RestoreTestingPlans","ListRestoreTestingSelections","RestoreTestingSelections","ListTags","PutBackupVaultAccessPolicy","PutBackupVaultLockConfiguration","ChangeableForDays","PutBackupVaultNotifications","PutRestoreValidationResult","StartBackupJob","StartWindowMinutes","CompleteWindowMinutes","RecoveryPointTags","StartCopyJob","SourceBackupVaultName","DestinationBackupVaultArn","StartReportJob","StartRestoreJob","CopySourceTagsToRestoredResource","StopBackupJob","TagResource","UntagResource","TagKeyList","sensitive","UpdateBackupPlan","UpdateFramework","UpdateGlobalSettings","UpdateRecoveryPointLifecycle","UpdateRegionSettings","UpdateReportPlan","UpdateRestoreTestingPlan","UpdateTime","UpdateRestoreTestingSelection","shapes","S6","BackupPlanName","Rules","RuleName","TargetBackupVaultName","CompletionWindowMinutes","CopyActions","EnableContinuousBackup","Se","MoveToColdStorageAfterDays","DeleteAfterDays","OptInToArchiveForSupportedResources","Sg","Sj","Sn","Sq","Sw","Resources","ListOfTags","ConditionType","ConditionKey","ConditionValue","NotResources","Conditions","StringEquals","StringNotEquals","StringLike","StringNotLike","Sz","S16","S1e","ControlName","ControlInputParameters","ParameterName","ParameterValue","ControlScope","ComplianceResourceIds","ComplianceResourceTypes","S1o","S1r","VaultNames","ResourceIdentifiers","DateRange","FromDate","ToDate","S23","S3BucketName","S3KeyPrefix","Formats","S25","ReportTemplate","FrameworkArns","NumberOfFrameworks","Accounts","OrganizationUnits","Regions","S26","S2c","Algorithm","ExcludeVaults","IncludeVaults","RecoveryPointTypes","SelectionWindowDays","S2g","S2l","S2m","Key","Value","S35","BackupPlanVersion","BackupRuleId","S3e","SourceRecoveryPointArn","DestinationRecoveryPointArn","S3l","S3t","MoveToColdStorageAt","DeleteAt","S3x","S3z","S43","CompletionTime","ReportDestination","S3Keys","S47","LastAttemptedExecutionTime","LastSuccessfulExecutionTime","S4c","S4l","RuleId","S4z","S55","S64","S6z","S7s"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-11-15',\n    endpointPrefix: 'backup',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS Backup',\n    serviceId: 'Backup',\n    signatureVersion: 'v4',\n    uid: 'backup-2018-11-15'\n  },\n  operations: {\n    CancelLegalHold: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/legal-holds/{legalHoldId}',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LegalHoldId',\n          'CancelDescription'\n        ],\n        members: {\n          LegalHoldId: {\n            location: 'uri',\n            locationName: 'legalHoldId'\n          },\n          CancelDescription: {\n            location: 'querystring',\n            locationName: 'cancelDescription'\n          },\n          RetainRecordInDays: {\n            location: 'querystring',\n            locationName: 'retainRecordInDays',\n            type: 'long'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    CreateBackupPlan: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup/plans/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlan'\n        ],\n        members: {\n          BackupPlan: {\n            shape: 'S6'\n          },\n          BackupPlanTags: {\n            shape: 'Sg'\n          },\n          CreatorRequestId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupPlanId: {},\n          BackupPlanArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          VersionId: {},\n          AdvancedBackupSettings: {\n            shape: 'Sn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateBackupSelection: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup/plans/{backupPlanId}/selections/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanId',\n          'BackupSelection'\n        ],\n        members: {\n          BackupPlanId: {\n            location: 'uri',\n            locationName: 'backupPlanId'\n          },\n          BackupSelection: {\n            shape: 'Sw'\n          },\n          CreatorRequestId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SelectionId: {},\n          BackupPlanId: {},\n          CreationDate: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateBackupVault: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup-vaults/{backupVaultName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          BackupVaultTags: {\n            shape: 'Sg'\n          },\n          EncryptionKeyArn: {},\n          CreatorRequestId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupVaultName: {},\n          BackupVaultArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateFramework: {\n      http: {\n        requestUri: '/audit/frameworks'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'FrameworkName',\n          'FrameworkControls'\n        ],\n        members: {\n          FrameworkName: {},\n          FrameworkDescription: {},\n          FrameworkControls: {\n            shape: 'S1e'\n          },\n          IdempotencyToken: {\n            idempotencyToken: true\n          },\n          FrameworkTags: {\n            shape: 'S1o'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          FrameworkName: {},\n          FrameworkArn: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateLegalHold: {\n      http: {\n        requestUri: '/legal-holds/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Title',\n          'Description'\n        ],\n        members: {\n          Title: {},\n          Description: {},\n          IdempotencyToken: {},\n          RecoveryPointSelection: {\n            shape: 'S1r'\n          },\n          Tags: {\n            shape: 'Sg'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Title: {},\n          Status: {},\n          Description: {},\n          LegalHoldId: {},\n          LegalHoldArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          RecoveryPointSelection: {\n            shape: 'S1r'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateLogicallyAirGappedBackupVault: {\n      http: {\n        method: 'PUT',\n        requestUri: '/logically-air-gapped-backup-vaults/{backupVaultName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName',\n          'MinRetentionDays',\n          'MaxRetentionDays'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          BackupVaultTags: {\n            shape: 'Sg'\n          },\n          CreatorRequestId: {},\n          MinRetentionDays: {\n            type: 'long'\n          },\n          MaxRetentionDays: {\n            type: 'long'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupVaultName: {},\n          BackupVaultArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          VaultState: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateReportPlan: {\n      http: {\n        requestUri: '/audit/report-plans'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ReportPlanName',\n          'ReportDeliveryChannel',\n          'ReportSetting'\n        ],\n        members: {\n          ReportPlanName: {},\n          ReportPlanDescription: {},\n          ReportDeliveryChannel: {\n            shape: 'S23'\n          },\n          ReportSetting: {\n            shape: 'S25'\n          },\n          ReportPlanTags: {\n            shape: 'S1o'\n          },\n          IdempotencyToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReportPlanName: {},\n          ReportPlanArn: {},\n          CreationTime: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateRestoreTestingPlan: {\n      http: {\n        method: 'PUT',\n        requestUri: '/restore-testing/plans',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlan'\n        ],\n        members: {\n          CreatorRequestId: {},\n          RestoreTestingPlan: {\n            type: 'structure',\n            required: [\n              'RecoveryPointSelection',\n              'RestoreTestingPlanName',\n              'ScheduleExpression'\n            ],\n            members: {\n              RecoveryPointSelection: {\n                shape: 'S2c'\n              },\n              RestoreTestingPlanName: {},\n              ScheduleExpression: {},\n              ScheduleExpressionTimezone: {},\n              StartWindowHours: {\n                type: 'integer'\n              }\n            }\n          },\n          Tags: {\n            shape: 'S2g'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CreationTime',\n          'RestoreTestingPlanArn',\n          'RestoreTestingPlanName'\n        ],\n        members: {\n          CreationTime: {\n            type: 'timestamp'\n          },\n          RestoreTestingPlanArn: {},\n          RestoreTestingPlanName: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateRestoreTestingSelection: {\n      http: {\n        method: 'PUT',\n        requestUri: '/restore-testing/plans/{RestoreTestingPlanName}/selections',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlanName',\n          'RestoreTestingSelection'\n        ],\n        members: {\n          CreatorRequestId: {},\n          RestoreTestingPlanName: {\n            location: 'uri',\n            locationName: 'RestoreTestingPlanName'\n          },\n          RestoreTestingSelection: {\n            type: 'structure',\n            required: [\n              'IamRoleArn',\n              'ProtectedResourceType',\n              'RestoreTestingSelectionName'\n            ],\n            members: {\n              IamRoleArn: {},\n              ProtectedResourceArns: {\n                shape: 'S26'\n              },\n              ProtectedResourceConditions: {\n                shape: 'S2l'\n              },\n              ProtectedResourceType: {},\n              RestoreMetadataOverrides: {\n                shape: 'S2g'\n              },\n              RestoreTestingSelectionName: {},\n              ValidationWindowHours: {\n                type: 'integer'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CreationTime',\n          'RestoreTestingPlanArn',\n          'RestoreTestingPlanName',\n          'RestoreTestingSelectionName'\n        ],\n        members: {\n          CreationTime: {\n            type: 'timestamp'\n          },\n          RestoreTestingPlanArn: {},\n          RestoreTestingPlanName: {},\n          RestoreTestingSelectionName: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteBackupPlan: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/backup/plans/{backupPlanId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanId'\n        ],\n        members: {\n          BackupPlanId: {\n            location: 'uri',\n            locationName: 'backupPlanId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupPlanId: {},\n          BackupPlanArn: {},\n          DeletionDate: {\n            type: 'timestamp'\n          },\n          VersionId: {}\n        }\n      }\n    },\n    DeleteBackupSelection: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/backup/plans/{backupPlanId}/selections/{selectionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanId',\n          'SelectionId'\n        ],\n        members: {\n          BackupPlanId: {\n            location: 'uri',\n            locationName: 'backupPlanId'\n          },\n          SelectionId: {\n            location: 'uri',\n            locationName: 'selectionId'\n          }\n        }\n      }\n    },\n    DeleteBackupVault: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/backup-vaults/{backupVaultName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          }\n        }\n      }\n    },\n    DeleteBackupVaultAccessPolicy: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/backup-vaults/{backupVaultName}/access-policy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteBackupVaultLockConfiguration: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/backup-vaults/{backupVaultName}/vault-lock'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteBackupVaultNotifications: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/backup-vaults/{backupVaultName}/notification-configuration'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteFramework: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/audit/frameworks/{frameworkName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'FrameworkName'\n        ],\n        members: {\n          FrameworkName: {\n            location: 'uri',\n            locationName: 'frameworkName'\n          }\n        }\n      }\n    },\n    DeleteRecoveryPoint: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName',\n          'RecoveryPointArn'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          RecoveryPointArn: {\n            location: 'uri',\n            locationName: 'recoveryPointArn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteReportPlan: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/audit/report-plans/{reportPlanName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ReportPlanName'\n        ],\n        members: {\n          ReportPlanName: {\n            location: 'uri',\n            locationName: 'reportPlanName'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteRestoreTestingPlan: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/restore-testing/plans/{RestoreTestingPlanName}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlanName'\n        ],\n        members: {\n          RestoreTestingPlanName: {\n            location: 'uri',\n            locationName: 'RestoreTestingPlanName'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteRestoreTestingSelection: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/restore-testing/plans/{RestoreTestingPlanName}/selections/{RestoreTestingSelectionName}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlanName',\n          'RestoreTestingSelectionName'\n        ],\n        members: {\n          RestoreTestingPlanName: {\n            location: 'uri',\n            locationName: 'RestoreTestingPlanName'\n          },\n          RestoreTestingSelectionName: {\n            location: 'uri',\n            locationName: 'RestoreTestingSelectionName'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeBackupJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup-jobs/{backupJobId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupJobId'\n        ],\n        members: {\n          BackupJobId: {\n            location: 'uri',\n            locationName: 'backupJobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AccountId: {},\n          BackupJobId: {},\n          BackupVaultName: {},\n          BackupVaultArn: {},\n          RecoveryPointArn: {},\n          ResourceArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          CompletionDate: {\n            type: 'timestamp'\n          },\n          State: {},\n          StatusMessage: {},\n          PercentDone: {},\n          BackupSizeInBytes: {\n            type: 'long'\n          },\n          IamRoleArn: {},\n          CreatedBy: {\n            shape: 'S35'\n          },\n          ResourceType: {},\n          BytesTransferred: {\n            type: 'long'\n          },\n          ExpectedCompletionDate: {\n            type: 'timestamp'\n          },\n          StartBy: {\n            type: 'timestamp'\n          },\n          BackupOptions: {\n            shape: 'Sq'\n          },\n          BackupType: {},\n          ParentJobId: {},\n          IsParent: {\n            type: 'boolean'\n          },\n          NumberOfChildJobs: {\n            type: 'long'\n          },\n          ChildJobsInState: {\n            type: 'map',\n            key: {},\n            value: {\n              type: 'long'\n            }\n          },\n          ResourceName: {},\n          InitiationDate: {\n            type: 'timestamp'\n          },\n          MessageCategory: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeBackupVault: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup-vaults/{backupVaultName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          BackupVaultAccountId: {\n            location: 'querystring',\n            locationName: 'backupVaultAccountId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupVaultName: {},\n          BackupVaultArn: {},\n          VaultType: {},\n          EncryptionKeyArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          CreatorRequestId: {},\n          NumberOfRecoveryPoints: {\n            type: 'long'\n          },\n          Locked: {\n            type: 'boolean'\n          },\n          MinRetentionDays: {\n            type: 'long'\n          },\n          MaxRetentionDays: {\n            type: 'long'\n          },\n          LockDate: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeCopyJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/copy-jobs/{copyJobId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CopyJobId'\n        ],\n        members: {\n          CopyJobId: {\n            location: 'uri',\n            locationName: 'copyJobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CopyJob: {\n            shape: 'S3e'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeFramework: {\n      http: {\n        method: 'GET',\n        requestUri: '/audit/frameworks/{frameworkName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'FrameworkName'\n        ],\n        members: {\n          FrameworkName: {\n            location: 'uri',\n            locationName: 'frameworkName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          FrameworkName: {},\n          FrameworkArn: {},\n          FrameworkDescription: {},\n          FrameworkControls: {\n            shape: 'S1e'\n          },\n          CreationTime: {\n            type: 'timestamp'\n          },\n          DeploymentStatus: {},\n          FrameworkStatus: {},\n          IdempotencyToken: {}\n        }\n      }\n    },\n    DescribeGlobalSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-settings'\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GlobalSettings: {\n            shape: 'S3l'\n          },\n          LastUpdateTime: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    DescribeProtectedResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/resources/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceArn: {},\n          ResourceType: {},\n          LastBackupTime: {\n            type: 'timestamp'\n          },\n          ResourceName: {},\n          LastBackupVaultArn: {},\n          LastRecoveryPointArn: {},\n          LatestRestoreExecutionTimeMinutes: {\n            type: 'long'\n          },\n          LatestRestoreJobCreationDate: {\n            type: 'timestamp'\n          },\n          LatestRestoreRecoveryPointCreationDate: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeRecoveryPoint: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName',\n          'RecoveryPointArn'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          RecoveryPointArn: {\n            location: 'uri',\n            locationName: 'recoveryPointArn'\n          },\n          BackupVaultAccountId: {\n            location: 'querystring',\n            locationName: 'backupVaultAccountId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RecoveryPointArn: {},\n          BackupVaultName: {},\n          BackupVaultArn: {},\n          SourceBackupVaultArn: {},\n          ResourceArn: {},\n          ResourceType: {},\n          CreatedBy: {\n            shape: 'S35'\n          },\n          IamRoleArn: {},\n          Status: {},\n          StatusMessage: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          CompletionDate: {\n            type: 'timestamp'\n          },\n          BackupSizeInBytes: {\n            type: 'long'\n          },\n          CalculatedLifecycle: {\n            shape: 'S3t'\n          },\n          Lifecycle: {\n            shape: 'Se'\n          },\n          EncryptionKeyArn: {},\n          IsEncrypted: {\n            type: 'boolean'\n          },\n          StorageClass: {},\n          LastRestoreTime: {\n            type: 'timestamp'\n          },\n          ParentRecoveryPointArn: {},\n          CompositeMemberIdentifier: {},\n          IsParent: {\n            type: 'boolean'\n          },\n          ResourceName: {},\n          VaultType: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeRegionSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/account-settings'\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceTypeOptInPreference: {\n            shape: 'S3x'\n          },\n          ResourceTypeManagementPreference: {\n            shape: 'S3z'\n          }\n        }\n      }\n    },\n    DescribeReportJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/audit/report-jobs/{reportJobId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ReportJobId'\n        ],\n        members: {\n          ReportJobId: {\n            location: 'uri',\n            locationName: 'reportJobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReportJob: {\n            shape: 'S43'\n          }\n        }\n      }\n    },\n    DescribeReportPlan: {\n      http: {\n        method: 'GET',\n        requestUri: '/audit/report-plans/{reportPlanName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ReportPlanName'\n        ],\n        members: {\n          ReportPlanName: {\n            location: 'uri',\n            locationName: 'reportPlanName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReportPlan: {\n            shape: 'S47'\n          }\n        }\n      }\n    },\n    DescribeRestoreJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-jobs/{restoreJobId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreJobId'\n        ],\n        members: {\n          RestoreJobId: {\n            location: 'uri',\n            locationName: 'restoreJobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AccountId: {},\n          RestoreJobId: {},\n          RecoveryPointArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          CompletionDate: {\n            type: 'timestamp'\n          },\n          Status: {},\n          StatusMessage: {},\n          PercentDone: {},\n          BackupSizeInBytes: {\n            type: 'long'\n          },\n          IamRoleArn: {},\n          ExpectedCompletionTimeMinutes: {\n            type: 'long'\n          },\n          CreatedResourceArn: {},\n          ResourceType: {},\n          RecoveryPointCreationDate: {\n            type: 'timestamp'\n          },\n          CreatedBy: {\n            shape: 'S4c'\n          },\n          ValidationStatus: {},\n          ValidationStatusMessage: {},\n          DeletionStatus: {},\n          DeletionStatusMessage: {}\n        }\n      },\n      idempotent: true\n    },\n    DisassociateRecoveryPoint: {\n      http: {\n        requestUri: '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/disassociate'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName',\n          'RecoveryPointArn'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          RecoveryPointArn: {\n            location: 'uri',\n            locationName: 'recoveryPointArn'\n          }\n        }\n      }\n    },\n    DisassociateRecoveryPointFromParent: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/parentAssociation',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName',\n          'RecoveryPointArn'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          RecoveryPointArn: {\n            location: 'uri',\n            locationName: 'recoveryPointArn'\n          }\n        }\n      }\n    },\n    ExportBackupPlanTemplate: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup/plans/{backupPlanId}/toTemplate/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanId'\n        ],\n        members: {\n          BackupPlanId: {\n            location: 'uri',\n            locationName: 'backupPlanId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupPlanTemplateJson: {}\n        }\n      }\n    },\n    GetBackupPlan: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup/plans/{backupPlanId}/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanId'\n        ],\n        members: {\n          BackupPlanId: {\n            location: 'uri',\n            locationName: 'backupPlanId'\n          },\n          VersionId: {\n            location: 'querystring',\n            locationName: 'versionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupPlan: {\n            shape: 'S4l'\n          },\n          BackupPlanId: {},\n          BackupPlanArn: {},\n          VersionId: {},\n          CreatorRequestId: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          DeletionDate: {\n            type: 'timestamp'\n          },\n          LastExecutionDate: {\n            type: 'timestamp'\n          },\n          AdvancedBackupSettings: {\n            shape: 'Sn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetBackupPlanFromJSON: {\n      http: {\n        requestUri: '/backup/template/json/toPlan'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanTemplateJson'\n        ],\n        members: {\n          BackupPlanTemplateJson: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupPlan: {\n            shape: 'S4l'\n          }\n        }\n      }\n    },\n    GetBackupPlanFromTemplate: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup/template/plans/{templateId}/toPlan'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanTemplateId'\n        ],\n        members: {\n          BackupPlanTemplateId: {\n            location: 'uri',\n            locationName: 'templateId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupPlanDocument: {\n            shape: 'S4l'\n          }\n        }\n      }\n    },\n    GetBackupSelection: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup/plans/{backupPlanId}/selections/{selectionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanId',\n          'SelectionId'\n        ],\n        members: {\n          BackupPlanId: {\n            location: 'uri',\n            locationName: 'backupPlanId'\n          },\n          SelectionId: {\n            location: 'uri',\n            locationName: 'selectionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupSelection: {\n            shape: 'Sw'\n          },\n          SelectionId: {},\n          BackupPlanId: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          CreatorRequestId: {}\n        }\n      },\n      idempotent: true\n    },\n    GetBackupVaultAccessPolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup-vaults/{backupVaultName}/access-policy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupVaultName: {},\n          BackupVaultArn: {},\n          Policy: {}\n        }\n      },\n      idempotent: true\n    },\n    GetBackupVaultNotifications: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup-vaults/{backupVaultName}/notification-configuration'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupVaultName: {},\n          BackupVaultArn: {},\n          SNSTopicArn: {},\n          BackupVaultEvents: {\n            shape: 'S4z'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetLegalHold: {\n      http: {\n        method: 'GET',\n        requestUri: '/legal-holds/{legalHoldId}/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LegalHoldId'\n        ],\n        members: {\n          LegalHoldId: {\n            location: 'uri',\n            locationName: 'legalHoldId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Title: {},\n          Status: {},\n          Description: {},\n          CancelDescription: {},\n          LegalHoldId: {},\n          LegalHoldArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          CancellationDate: {\n            type: 'timestamp'\n          },\n          RetainRecordUntil: {\n            type: 'timestamp'\n          },\n          RecoveryPointSelection: {\n            shape: 'S1r'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetRecoveryPointRestoreMetadata: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/restore-metadata'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName',\n          'RecoveryPointArn'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          RecoveryPointArn: {\n            location: 'uri',\n            locationName: 'recoveryPointArn'\n          },\n          BackupVaultAccountId: {\n            location: 'querystring',\n            locationName: 'backupVaultAccountId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupVaultArn: {},\n          RecoveryPointArn: {},\n          RestoreMetadata: {\n            shape: 'S55'\n          },\n          ResourceType: {}\n        }\n      },\n      idempotent: true\n    },\n    GetRestoreJobMetadata: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-jobs/{restoreJobId}/metadata'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreJobId'\n        ],\n        members: {\n          RestoreJobId: {\n            location: 'uri',\n            locationName: 'restoreJobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RestoreJobId: {},\n          Metadata: {\n            shape: 'S55'\n          }\n        }\n      }\n    },\n    GetRestoreTestingInferredMetadata: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-testing/inferred-metadata',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName',\n          'RecoveryPointArn'\n        ],\n        members: {\n          BackupVaultAccountId: {\n            location: 'querystring',\n            locationName: 'BackupVaultAccountId'\n          },\n          BackupVaultName: {\n            location: 'querystring',\n            locationName: 'BackupVaultName'\n          },\n          RecoveryPointArn: {\n            location: 'querystring',\n            locationName: 'RecoveryPointArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'InferredMetadata'\n        ],\n        members: {\n          InferredMetadata: {\n            shape: 'S1o'\n          }\n        }\n      }\n    },\n    GetRestoreTestingPlan: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-testing/plans/{RestoreTestingPlanName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlanName'\n        ],\n        members: {\n          RestoreTestingPlanName: {\n            location: 'uri',\n            locationName: 'RestoreTestingPlanName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlan'\n        ],\n        members: {\n          RestoreTestingPlan: {\n            type: 'structure',\n            required: [\n              'CreationTime',\n              'RecoveryPointSelection',\n              'RestoreTestingPlanArn',\n              'RestoreTestingPlanName',\n              'ScheduleExpression'\n            ],\n            members: {\n              CreationTime: {\n                type: 'timestamp'\n              },\n              CreatorRequestId: {},\n              LastExecutionTime: {\n                type: 'timestamp'\n              },\n              LastUpdateTime: {\n                type: 'timestamp'\n              },\n              RecoveryPointSelection: {\n                shape: 'S2c'\n              },\n              RestoreTestingPlanArn: {},\n              RestoreTestingPlanName: {},\n              ScheduleExpression: {},\n              ScheduleExpressionTimezone: {},\n              StartWindowHours: {\n                type: 'integer'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetRestoreTestingSelection: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-testing/plans/{RestoreTestingPlanName}/selections/{RestoreTestingSelectionName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlanName',\n          'RestoreTestingSelectionName'\n        ],\n        members: {\n          RestoreTestingPlanName: {\n            location: 'uri',\n            locationName: 'RestoreTestingPlanName'\n          },\n          RestoreTestingSelectionName: {\n            location: 'uri',\n            locationName: 'RestoreTestingSelectionName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'RestoreTestingSelection'\n        ],\n        members: {\n          RestoreTestingSelection: {\n            type: 'structure',\n            required: [\n              'CreationTime',\n              'IamRoleArn',\n              'ProtectedResourceType',\n              'RestoreTestingPlanName',\n              'RestoreTestingSelectionName'\n            ],\n            members: {\n              CreationTime: {\n                type: 'timestamp'\n              },\n              CreatorRequestId: {},\n              IamRoleArn: {},\n              ProtectedResourceArns: {\n                shape: 'S26'\n              },\n              ProtectedResourceConditions: {\n                shape: 'S2l'\n              },\n              ProtectedResourceType: {},\n              RestoreMetadataOverrides: {\n                shape: 'S2g'\n              },\n              RestoreTestingPlanName: {},\n              RestoreTestingSelectionName: {},\n              ValidationWindowHours: {\n                type: 'integer'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetSupportedResourceTypes: {\n      http: {\n        method: 'GET',\n        requestUri: '/supported-resource-types'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceTypes: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    ListBackupJobSummaries: {\n      http: {\n        method: 'GET',\n        requestUri: '/audit/backup-job-summaries'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AccountId: {\n            location: 'querystring',\n            locationName: 'AccountId'\n          },\n          State: {\n            location: 'querystring',\n            locationName: 'State'\n          },\n          ResourceType: {\n            location: 'querystring',\n            locationName: 'ResourceType'\n          },\n          MessageCategory: {\n            location: 'querystring',\n            locationName: 'MessageCategory'\n          },\n          AggregationPeriod: {\n            location: 'querystring',\n            locationName: 'AggregationPeriod'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupJobSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Region: {},\n                AccountId: {},\n                State: {},\n                ResourceType: {},\n                MessageCategory: {},\n                Count: {\n                  type: 'integer'\n                },\n                StartTime: {\n                  type: 'timestamp'\n                },\n                EndTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          AggregationPeriod: {},\n          NextToken: {}\n        }\n      }\n    },\n    ListBackupJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup-jobs/'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          ByResourceArn: {\n            location: 'querystring',\n            locationName: 'resourceArn'\n          },\n          ByState: {\n            location: 'querystring',\n            locationName: 'state'\n          },\n          ByBackupVaultName: {\n            location: 'querystring',\n            locationName: 'backupVaultName'\n          },\n          ByCreatedBefore: {\n            location: 'querystring',\n            locationName: 'createdBefore',\n            type: 'timestamp'\n          },\n          ByCreatedAfter: {\n            location: 'querystring',\n            locationName: 'createdAfter',\n            type: 'timestamp'\n          },\n          ByResourceType: {\n            location: 'querystring',\n            locationName: 'resourceType'\n          },\n          ByAccountId: {\n            location: 'querystring',\n            locationName: 'accountId'\n          },\n          ByCompleteAfter: {\n            location: 'querystring',\n            locationName: 'completeAfter',\n            type: 'timestamp'\n          },\n          ByCompleteBefore: {\n            location: 'querystring',\n            locationName: 'completeBefore',\n            type: 'timestamp'\n          },\n          ByParentJobId: {\n            location: 'querystring',\n            locationName: 'parentJobId'\n          },\n          ByMessageCategory: {\n            location: 'querystring',\n            locationName: 'messageCategory'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AccountId: {},\n                BackupJobId: {},\n                BackupVaultName: {},\n                BackupVaultArn: {},\n                RecoveryPointArn: {},\n                ResourceArn: {},\n                CreationDate: {\n                  type: 'timestamp'\n                },\n                CompletionDate: {\n                  type: 'timestamp'\n                },\n                State: {},\n                StatusMessage: {},\n                PercentDone: {},\n                BackupSizeInBytes: {\n                  type: 'long'\n                },\n                IamRoleArn: {},\n                CreatedBy: {\n                  shape: 'S35'\n                },\n                ExpectedCompletionDate: {\n                  type: 'timestamp'\n                },\n                StartBy: {\n                  type: 'timestamp'\n                },\n                ResourceType: {},\n                BytesTransferred: {\n                  type: 'long'\n                },\n                BackupOptions: {\n                  shape: 'Sq'\n                },\n                BackupType: {},\n                ParentJobId: {},\n                IsParent: {\n                  type: 'boolean'\n                },\n                ResourceName: {},\n                InitiationDate: {\n                  type: 'timestamp'\n                },\n                MessageCategory: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListBackupPlanTemplates: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup/template/plans'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          BackupPlanTemplatesList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                BackupPlanTemplateId: {},\n                BackupPlanTemplateName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListBackupPlanVersions: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup/plans/{backupPlanId}/versions/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanId'\n        ],\n        members: {\n          BackupPlanId: {\n            location: 'uri',\n            locationName: 'backupPlanId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          BackupPlanVersionsList: {\n            type: 'list',\n            member: {\n              shape: 'S64'\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListBackupPlans: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup/plans/'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          IncludeDeleted: {\n            location: 'querystring',\n            locationName: 'includeDeleted',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          BackupPlansList: {\n            type: 'list',\n            member: {\n              shape: 'S64'\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListBackupSelections: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup/plans/{backupPlanId}/selections/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanId'\n        ],\n        members: {\n          BackupPlanId: {\n            location: 'uri',\n            locationName: 'backupPlanId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          BackupSelectionsList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                SelectionId: {},\n                SelectionName: {},\n                BackupPlanId: {},\n                CreationDate: {\n                  type: 'timestamp'\n                },\n                CreatorRequestId: {},\n                IamRoleArn: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListBackupVaults: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup-vaults/'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ByVaultType: {\n            location: 'querystring',\n            locationName: 'vaultType'\n          },\n          ByShared: {\n            location: 'querystring',\n            locationName: 'shared',\n            type: 'boolean'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupVaultList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                BackupVaultName: {},\n                BackupVaultArn: {},\n                CreationDate: {\n                  type: 'timestamp'\n                },\n                EncryptionKeyArn: {},\n                CreatorRequestId: {},\n                NumberOfRecoveryPoints: {\n                  type: 'long'\n                },\n                Locked: {\n                  type: 'boolean'\n                },\n                MinRetentionDays: {\n                  type: 'long'\n                },\n                MaxRetentionDays: {\n                  type: 'long'\n                },\n                LockDate: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListCopyJobSummaries: {\n      http: {\n        method: 'GET',\n        requestUri: '/audit/copy-job-summaries'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AccountId: {\n            location: 'querystring',\n            locationName: 'AccountId'\n          },\n          State: {\n            location: 'querystring',\n            locationName: 'State'\n          },\n          ResourceType: {\n            location: 'querystring',\n            locationName: 'ResourceType'\n          },\n          MessageCategory: {\n            location: 'querystring',\n            locationName: 'MessageCategory'\n          },\n          AggregationPeriod: {\n            location: 'querystring',\n            locationName: 'AggregationPeriod'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CopyJobSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Region: {},\n                AccountId: {},\n                State: {},\n                ResourceType: {},\n                MessageCategory: {},\n                Count: {\n                  type: 'integer'\n                },\n                StartTime: {\n                  type: 'timestamp'\n                },\n                EndTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          AggregationPeriod: {},\n          NextToken: {}\n        }\n      }\n    },\n    ListCopyJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/copy-jobs/'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          ByResourceArn: {\n            location: 'querystring',\n            locationName: 'resourceArn'\n          },\n          ByState: {\n            location: 'querystring',\n            locationName: 'state'\n          },\n          ByCreatedBefore: {\n            location: 'querystring',\n            locationName: 'createdBefore',\n            type: 'timestamp'\n          },\n          ByCreatedAfter: {\n            location: 'querystring',\n            locationName: 'createdAfter',\n            type: 'timestamp'\n          },\n          ByResourceType: {\n            location: 'querystring',\n            locationName: 'resourceType'\n          },\n          ByDestinationVaultArn: {\n            location: 'querystring',\n            locationName: 'destinationVaultArn'\n          },\n          ByAccountId: {\n            location: 'querystring',\n            locationName: 'accountId'\n          },\n          ByCompleteBefore: {\n            location: 'querystring',\n            locationName: 'completeBefore',\n            type: 'timestamp'\n          },\n          ByCompleteAfter: {\n            location: 'querystring',\n            locationName: 'completeAfter',\n            type: 'timestamp'\n          },\n          ByParentJobId: {\n            location: 'querystring',\n            locationName: 'parentJobId'\n          },\n          ByMessageCategory: {\n            location: 'querystring',\n            locationName: 'messageCategory'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CopyJobs: {\n            type: 'list',\n            member: {\n              shape: 'S3e'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListFrameworks: {\n      http: {\n        method: 'GET',\n        requestUri: '/audit/frameworks'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Frameworks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                FrameworkName: {},\n                FrameworkArn: {},\n                FrameworkDescription: {},\n                NumberOfControls: {\n                  type: 'integer'\n                },\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                DeploymentStatus: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListLegalHolds: {\n      http: {\n        method: 'GET',\n        requestUri: '/legal-holds/'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          LegalHolds: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Title: {},\n                Status: {},\n                Description: {},\n                LegalHoldId: {},\n                LegalHoldArn: {},\n                CreationDate: {\n                  type: 'timestamp'\n                },\n                CancellationDate: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListProtectedResources: {\n      http: {\n        method: 'GET',\n        requestUri: '/resources/'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Results: {\n            shape: 'S6z'\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListProtectedResourcesByBackupVault: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup-vaults/{backupVaultName}/resources/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          BackupVaultAccountId: {\n            location: 'querystring',\n            locationName: 'backupVaultAccountId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Results: {\n            shape: 'S6z'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListRecoveryPointsByBackupVault: {\n      http: {\n        method: 'GET',\n        requestUri: '/backup-vaults/{backupVaultName}/recovery-points/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          BackupVaultAccountId: {\n            location: 'querystring',\n            locationName: 'backupVaultAccountId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          ByResourceArn: {\n            location: 'querystring',\n            locationName: 'resourceArn'\n          },\n          ByResourceType: {\n            location: 'querystring',\n            locationName: 'resourceType'\n          },\n          ByBackupPlanId: {\n            location: 'querystring',\n            locationName: 'backupPlanId'\n          },\n          ByCreatedBefore: {\n            location: 'querystring',\n            locationName: 'createdBefore',\n            type: 'timestamp'\n          },\n          ByCreatedAfter: {\n            location: 'querystring',\n            locationName: 'createdAfter',\n            type: 'timestamp'\n          },\n          ByParentRecoveryPointArn: {\n            location: 'querystring',\n            locationName: 'parentRecoveryPointArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          RecoveryPoints: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RecoveryPointArn: {},\n                BackupVaultName: {},\n                BackupVaultArn: {},\n                SourceBackupVaultArn: {},\n                ResourceArn: {},\n                ResourceType: {},\n                CreatedBy: {\n                  shape: 'S35'\n                },\n                IamRoleArn: {},\n                Status: {},\n                StatusMessage: {},\n                CreationDate: {\n                  type: 'timestamp'\n                },\n                CompletionDate: {\n                  type: 'timestamp'\n                },\n                BackupSizeInBytes: {\n                  type: 'long'\n                },\n                CalculatedLifecycle: {\n                  shape: 'S3t'\n                },\n                Lifecycle: {\n                  shape: 'Se'\n                },\n                EncryptionKeyArn: {},\n                IsEncrypted: {\n                  type: 'boolean'\n                },\n                LastRestoreTime: {\n                  type: 'timestamp'\n                },\n                ParentRecoveryPointArn: {},\n                CompositeMemberIdentifier: {},\n                IsParent: {\n                  type: 'boolean'\n                },\n                ResourceName: {},\n                VaultType: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListRecoveryPointsByLegalHold: {\n      http: {\n        method: 'GET',\n        requestUri: '/legal-holds/{legalHoldId}/recovery-points'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LegalHoldId'\n        ],\n        members: {\n          LegalHoldId: {\n            location: 'uri',\n            locationName: 'legalHoldId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RecoveryPoints: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RecoveryPointArn: {},\n                ResourceArn: {},\n                ResourceType: {},\n                BackupVaultName: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListRecoveryPointsByResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/resources/{resourceArn}/recovery-points/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          ManagedByAWSBackupOnly: {\n            location: 'querystring',\n            locationName: 'managedByAWSBackupOnly',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          RecoveryPoints: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RecoveryPointArn: {},\n                CreationDate: {\n                  type: 'timestamp'\n                },\n                Status: {},\n                StatusMessage: {},\n                EncryptionKeyArn: {},\n                BackupSizeBytes: {\n                  type: 'long'\n                },\n                BackupVaultName: {},\n                IsParent: {\n                  type: 'boolean'\n                },\n                ParentRecoveryPointArn: {},\n                ResourceName: {},\n                VaultType: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListReportJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/audit/report-jobs'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ByReportPlanName: {\n            location: 'querystring',\n            locationName: 'ReportPlanName'\n          },\n          ByCreationBefore: {\n            location: 'querystring',\n            locationName: 'CreationBefore',\n            type: 'timestamp'\n          },\n          ByCreationAfter: {\n            location: 'querystring',\n            locationName: 'CreationAfter',\n            type: 'timestamp'\n          },\n          ByStatus: {\n            location: 'querystring',\n            locationName: 'Status'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReportJobs: {\n            type: 'list',\n            member: {\n              shape: 'S43'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListReportPlans: {\n      http: {\n        method: 'GET',\n        requestUri: '/audit/report-plans'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReportPlans: {\n            type: 'list',\n            member: {\n              shape: 'S47'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListRestoreJobSummaries: {\n      http: {\n        method: 'GET',\n        requestUri: '/audit/restore-job-summaries'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AccountId: {\n            location: 'querystring',\n            locationName: 'AccountId'\n          },\n          State: {\n            location: 'querystring',\n            locationName: 'State'\n          },\n          ResourceType: {\n            location: 'querystring',\n            locationName: 'ResourceType'\n          },\n          AggregationPeriod: {\n            location: 'querystring',\n            locationName: 'AggregationPeriod'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RestoreJobSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Region: {},\n                AccountId: {},\n                State: {},\n                ResourceType: {},\n                Count: {\n                  type: 'integer'\n                },\n                StartTime: {\n                  type: 'timestamp'\n                },\n                EndTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          AggregationPeriod: {},\n          NextToken: {}\n        }\n      }\n    },\n    ListRestoreJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-jobs/'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          ByAccountId: {\n            location: 'querystring',\n            locationName: 'accountId'\n          },\n          ByResourceType: {\n            location: 'querystring',\n            locationName: 'resourceType'\n          },\n          ByCreatedBefore: {\n            location: 'querystring',\n            locationName: 'createdBefore',\n            type: 'timestamp'\n          },\n          ByCreatedAfter: {\n            location: 'querystring',\n            locationName: 'createdAfter',\n            type: 'timestamp'\n          },\n          ByStatus: {\n            location: 'querystring',\n            locationName: 'status'\n          },\n          ByCompleteBefore: {\n            location: 'querystring',\n            locationName: 'completeBefore',\n            type: 'timestamp'\n          },\n          ByCompleteAfter: {\n            location: 'querystring',\n            locationName: 'completeAfter',\n            type: 'timestamp'\n          },\n          ByRestoreTestingPlanArn: {\n            location: 'querystring',\n            locationName: 'restoreTestingPlanArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RestoreJobs: {\n            shape: 'S7s'\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListRestoreJobsByProtectedResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/resources/{resourceArn}/restore-jobs/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          ByStatus: {\n            location: 'querystring',\n            locationName: 'status'\n          },\n          ByRecoveryPointCreationDateAfter: {\n            location: 'querystring',\n            locationName: 'recoveryPointCreationDateAfter',\n            type: 'timestamp'\n          },\n          ByRecoveryPointCreationDateBefore: {\n            location: 'querystring',\n            locationName: 'recoveryPointCreationDateBefore',\n            type: 'timestamp'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RestoreJobs: {\n            shape: 'S7s'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListRestoreTestingPlans: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-testing/plans',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlans'\n        ],\n        members: {\n          NextToken: {},\n          RestoreTestingPlans: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'CreationTime',\n                'RestoreTestingPlanArn',\n                'RestoreTestingPlanName',\n                'ScheduleExpression'\n              ],\n              members: {\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastExecutionTime: {\n                  type: 'timestamp'\n                },\n                LastUpdateTime: {\n                  type: 'timestamp'\n                },\n                RestoreTestingPlanArn: {},\n                RestoreTestingPlanName: {},\n                ScheduleExpression: {},\n                ScheduleExpressionTimezone: {},\n                StartWindowHours: {\n                  type: 'integer'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListRestoreTestingSelections: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-testing/plans/{RestoreTestingPlanName}/selections',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlanName'\n        ],\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          RestoreTestingPlanName: {\n            location: 'uri',\n            locationName: 'RestoreTestingPlanName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'RestoreTestingSelections'\n        ],\n        members: {\n          NextToken: {},\n          RestoreTestingSelections: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'CreationTime',\n                'IamRoleArn',\n                'ProtectedResourceType',\n                'RestoreTestingPlanName',\n                'RestoreTestingSelectionName'\n              ],\n              members: {\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                IamRoleArn: {},\n                ProtectedResourceType: {},\n                RestoreTestingPlanName: {},\n                RestoreTestingSelectionName: {},\n                ValidationWindowHours: {\n                  type: 'integer'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTags: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Tags: {\n            shape: 'Sg'\n          }\n        }\n      },\n      idempotent: true\n    },\n    PutBackupVaultAccessPolicy: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup-vaults/{backupVaultName}/access-policy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          Policy: {}\n        }\n      },\n      idempotent: true\n    },\n    PutBackupVaultLockConfiguration: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup-vaults/{backupVaultName}/vault-lock'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          MinRetentionDays: {\n            type: 'long'\n          },\n          MaxRetentionDays: {\n            type: 'long'\n          },\n          ChangeableForDays: {\n            type: 'long'\n          }\n        }\n      },\n      idempotent: true\n    },\n    PutBackupVaultNotifications: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup-vaults/{backupVaultName}/notification-configuration'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName',\n          'SNSTopicArn',\n          'BackupVaultEvents'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          SNSTopicArn: {},\n          BackupVaultEvents: {\n            shape: 'S4z'\n          }\n        }\n      },\n      idempotent: true\n    },\n    PutRestoreValidationResult: {\n      http: {\n        method: 'PUT',\n        requestUri: '/restore-jobs/{restoreJobId}/validations',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreJobId',\n          'ValidationStatus'\n        ],\n        members: {\n          RestoreJobId: {\n            location: 'uri',\n            locationName: 'restoreJobId'\n          },\n          ValidationStatus: {},\n          ValidationStatusMessage: {}\n        }\n      },\n      idempotent: true\n    },\n    StartBackupJob: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup-jobs'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName',\n          'ResourceArn',\n          'IamRoleArn'\n        ],\n        members: {\n          BackupVaultName: {},\n          ResourceArn: {},\n          IamRoleArn: {},\n          IdempotencyToken: {},\n          StartWindowMinutes: {\n            type: 'long'\n          },\n          CompleteWindowMinutes: {\n            type: 'long'\n          },\n          Lifecycle: {\n            shape: 'Se'\n          },\n          RecoveryPointTags: {\n            shape: 'Sg'\n          },\n          BackupOptions: {\n            shape: 'Sq'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupJobId: {},\n          RecoveryPointArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          IsParent: {\n            type: 'boolean'\n          }\n        }\n      },\n      idempotent: true\n    },\n    StartCopyJob: {\n      http: {\n        method: 'PUT',\n        requestUri: '/copy-jobs'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RecoveryPointArn',\n          'SourceBackupVaultName',\n          'DestinationBackupVaultArn',\n          'IamRoleArn'\n        ],\n        members: {\n          RecoveryPointArn: {},\n          SourceBackupVaultName: {},\n          DestinationBackupVaultArn: {},\n          IamRoleArn: {},\n          IdempotencyToken: {},\n          Lifecycle: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CopyJobId: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          IsParent: {\n            type: 'boolean'\n          }\n        }\n      },\n      idempotent: true\n    },\n    StartReportJob: {\n      http: {\n        requestUri: '/audit/report-jobs/{reportPlanName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ReportPlanName'\n        ],\n        members: {\n          ReportPlanName: {\n            location: 'uri',\n            locationName: 'reportPlanName'\n          },\n          IdempotencyToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReportJobId: {}\n        }\n      },\n      idempotent: true\n    },\n    StartRestoreJob: {\n      http: {\n        method: 'PUT',\n        requestUri: '/restore-jobs'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RecoveryPointArn',\n          'Metadata'\n        ],\n        members: {\n          RecoveryPointArn: {},\n          Metadata: {\n            shape: 'S55'\n          },\n          IamRoleArn: {},\n          IdempotencyToken: {},\n          ResourceType: {},\n          CopySourceTagsToRestoredResource: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RestoreJobId: {}\n        }\n      },\n      idempotent: true\n    },\n    StopBackupJob: {\n      http: {\n        requestUri: '/backup-jobs/{backupJobId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupJobId'\n        ],\n        members: {\n          BackupJobId: {\n            location: 'uri',\n            locationName: 'backupJobId'\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          Tags: {\n            shape: 'Sg'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      http: {\n        requestUri: '/untag/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeyList'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          TagKeyList: {\n            type: 'list',\n            member: {},\n            sensitive: true\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateBackupPlan: {\n      http: {\n        requestUri: '/backup/plans/{backupPlanId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupPlanId',\n          'BackupPlan'\n        ],\n        members: {\n          BackupPlanId: {\n            location: 'uri',\n            locationName: 'backupPlanId'\n          },\n          BackupPlan: {\n            shape: 'S6'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupPlanId: {},\n          BackupPlanArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          VersionId: {},\n          AdvancedBackupSettings: {\n            shape: 'Sn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateFramework: {\n      http: {\n        method: 'PUT',\n        requestUri: '/audit/frameworks/{frameworkName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'FrameworkName'\n        ],\n        members: {\n          FrameworkName: {\n            location: 'uri',\n            locationName: 'frameworkName'\n          },\n          FrameworkDescription: {},\n          FrameworkControls: {\n            shape: 'S1e'\n          },\n          IdempotencyToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          FrameworkName: {},\n          FrameworkArn: {},\n          CreationTime: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateGlobalSettings: {\n      http: {\n        method: 'PUT',\n        requestUri: '/global-settings'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          GlobalSettings: {\n            shape: 'S3l'\n          }\n        }\n      }\n    },\n    UpdateRecoveryPointLifecycle: {\n      http: {\n        requestUri: '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupVaultName',\n          'RecoveryPointArn'\n        ],\n        members: {\n          BackupVaultName: {\n            location: 'uri',\n            locationName: 'backupVaultName'\n          },\n          RecoveryPointArn: {\n            location: 'uri',\n            locationName: 'recoveryPointArn'\n          },\n          Lifecycle: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BackupVaultArn: {},\n          RecoveryPointArn: {},\n          Lifecycle: {\n            shape: 'Se'\n          },\n          CalculatedLifecycle: {\n            shape: 'S3t'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateRegionSettings: {\n      http: {\n        method: 'PUT',\n        requestUri: '/account-settings'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceTypeOptInPreference: {\n            shape: 'S3x'\n          },\n          ResourceTypeManagementPreference: {\n            shape: 'S3z'\n          }\n        }\n      }\n    },\n    UpdateReportPlan: {\n      http: {\n        method: 'PUT',\n        requestUri: '/audit/report-plans/{reportPlanName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ReportPlanName'\n        ],\n        members: {\n          ReportPlanName: {\n            location: 'uri',\n            locationName: 'reportPlanName'\n          },\n          ReportPlanDescription: {},\n          ReportDeliveryChannel: {\n            shape: 'S23'\n          },\n          ReportSetting: {\n            shape: 'S25'\n          },\n          IdempotencyToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReportPlanName: {},\n          ReportPlanArn: {},\n          CreationTime: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateRestoreTestingPlan: {\n      http: {\n        method: 'PUT',\n        requestUri: '/restore-testing/plans/{RestoreTestingPlanName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlan',\n          'RestoreTestingPlanName'\n        ],\n        members: {\n          RestoreTestingPlan: {\n            type: 'structure',\n            members: {\n              RecoveryPointSelection: {\n                shape: 'S2c'\n              },\n              ScheduleExpression: {},\n              ScheduleExpressionTimezone: {},\n              StartWindowHours: {\n                type: 'integer'\n              }\n            }\n          },\n          RestoreTestingPlanName: {\n            location: 'uri',\n            locationName: 'RestoreTestingPlanName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CreationTime',\n          'RestoreTestingPlanArn',\n          'RestoreTestingPlanName',\n          'UpdateTime'\n        ],\n        members: {\n          CreationTime: {\n            type: 'timestamp'\n          },\n          RestoreTestingPlanArn: {},\n          RestoreTestingPlanName: {},\n          UpdateTime: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateRestoreTestingSelection: {\n      http: {\n        method: 'PUT',\n        requestUri: '/restore-testing/plans/{RestoreTestingPlanName}/selections/{RestoreTestingSelectionName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RestoreTestingPlanName',\n          'RestoreTestingSelection',\n          'RestoreTestingSelectionName'\n        ],\n        members: {\n          RestoreTestingPlanName: {\n            location: 'uri',\n            locationName: 'RestoreTestingPlanName'\n          },\n          RestoreTestingSelection: {\n            type: 'structure',\n            members: {\n              IamRoleArn: {},\n              ProtectedResourceArns: {\n                shape: 'S26'\n              },\n              ProtectedResourceConditions: {\n                shape: 'S2l'\n              },\n              RestoreMetadataOverrides: {\n                shape: 'S2g'\n              },\n              ValidationWindowHours: {\n                type: 'integer'\n              }\n            }\n          },\n          RestoreTestingSelectionName: {\n            location: 'uri',\n            locationName: 'RestoreTestingSelectionName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CreationTime',\n          'RestoreTestingPlanArn',\n          'RestoreTestingPlanName',\n          'RestoreTestingSelectionName',\n          'UpdateTime'\n        ],\n        members: {\n          CreationTime: {\n            type: 'timestamp'\n          },\n          RestoreTestingPlanArn: {},\n          RestoreTestingPlanName: {},\n          RestoreTestingSelectionName: {},\n          UpdateTime: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S6: {\n      type: 'structure',\n      required: [\n        'BackupPlanName',\n        'Rules'\n      ],\n      members: {\n        BackupPlanName: {},\n        Rules: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'RuleName',\n              'TargetBackupVaultName'\n            ],\n            members: {\n              RuleName: {},\n              TargetBackupVaultName: {},\n              ScheduleExpression: {},\n              StartWindowMinutes: {\n                type: 'long'\n              },\n              CompletionWindowMinutes: {\n                type: 'long'\n              },\n              Lifecycle: {\n                shape: 'Se'\n              },\n              RecoveryPointTags: {\n                shape: 'Sg'\n              },\n              CopyActions: {\n                shape: 'Sj'\n              },\n              EnableContinuousBackup: {\n                type: 'boolean'\n              },\n              ScheduleExpressionTimezone: {}\n            }\n          }\n        },\n        AdvancedBackupSettings: {\n          shape: 'Sn'\n        }\n      }\n    },\n    Se: {\n      type: 'structure',\n      members: {\n        MoveToColdStorageAfterDays: {\n          type: 'long'\n        },\n        DeleteAfterDays: {\n          type: 'long'\n        },\n        OptInToArchiveForSupportedResources: {\n          type: 'boolean'\n        }\n      }\n    },\n    Sg: {\n      type: 'map',\n      key: {},\n      value: {},\n      sensitive: true\n    },\n    Sj: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'DestinationBackupVaultArn'\n        ],\n        members: {\n          Lifecycle: {\n            shape: 'Se'\n          },\n          DestinationBackupVaultArn: {}\n        }\n      }\n    },\n    Sn: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          ResourceType: {},\n          BackupOptions: {\n            shape: 'Sq'\n          }\n        }\n      }\n    },\n    Sq: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sw: {\n      type: 'structure',\n      required: [\n        'SelectionName',\n        'IamRoleArn'\n      ],\n      members: {\n        SelectionName: {},\n        IamRoleArn: {},\n        Resources: {\n          shape: 'Sz'\n        },\n        ListOfTags: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'ConditionType',\n              'ConditionKey',\n              'ConditionValue'\n            ],\n            members: {\n              ConditionType: {},\n              ConditionKey: {},\n              ConditionValue: {}\n            }\n          }\n        },\n        NotResources: {\n          shape: 'Sz'\n        },\n        Conditions: {\n          type: 'structure',\n          members: {\n            StringEquals: {\n              shape: 'S16'\n            },\n            StringNotEquals: {\n              shape: 'S16'\n            },\n            StringLike: {\n              shape: 'S16'\n            },\n            StringNotLike: {\n              shape: 'S16'\n            }\n          }\n        }\n      }\n    },\n    Sz: {\n      type: 'list',\n      member: {}\n    },\n    S16: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          ConditionKey: {},\n          ConditionValue: {}\n        }\n      }\n    },\n    S1e: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ControlName'\n        ],\n        members: {\n          ControlName: {},\n          ControlInputParameters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ParameterName: {},\n                ParameterValue: {}\n              }\n            }\n          },\n          ControlScope: {\n            type: 'structure',\n            members: {\n              ComplianceResourceIds: {\n                type: 'list',\n                member: {}\n              },\n              ComplianceResourceTypes: {\n                type: 'list',\n                member: {}\n              },\n              Tags: {\n                shape: 'S1o'\n              }\n            }\n          }\n        }\n      }\n    },\n    S1o: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1r: {\n      type: 'structure',\n      members: {\n        VaultNames: {\n          type: 'list',\n          member: {}\n        },\n        ResourceIdentifiers: {\n          type: 'list',\n          member: {}\n        },\n        DateRange: {\n          type: 'structure',\n          required: [\n            'FromDate',\n            'ToDate'\n          ],\n          members: {\n            FromDate: {\n              type: 'timestamp'\n            },\n            ToDate: {\n              type: 'timestamp'\n            }\n          }\n        }\n      }\n    },\n    S23: {\n      type: 'structure',\n      required: [\n        'S3BucketName'\n      ],\n      members: {\n        S3BucketName: {},\n        S3KeyPrefix: {},\n        Formats: {\n          type: 'list',\n          member: {}\n        }\n      }\n    },\n    S25: {\n      type: 'structure',\n      required: [\n        'ReportTemplate'\n      ],\n      members: {\n        ReportTemplate: {},\n        FrameworkArns: {\n          shape: 'S26'\n        },\n        NumberOfFrameworks: {\n          type: 'integer'\n        },\n        Accounts: {\n          shape: 'S26'\n        },\n        OrganizationUnits: {\n          shape: 'S26'\n        },\n        Regions: {\n          shape: 'S26'\n        }\n      }\n    },\n    S26: {\n      type: 'list',\n      member: {}\n    },\n    S2c: {\n      type: 'structure',\n      members: {\n        Algorithm: {},\n        ExcludeVaults: {\n          shape: 'S26'\n        },\n        IncludeVaults: {\n          shape: 'S26'\n        },\n        RecoveryPointTypes: {\n          type: 'list',\n          member: {}\n        },\n        SelectionWindowDays: {\n          type: 'integer'\n        }\n      }\n    },\n    S2g: {\n      type: 'map',\n      key: {},\n      value: {},\n      sensitive: true\n    },\n    S2l: {\n      type: 'structure',\n      members: {\n        StringEquals: {\n          shape: 'S2m'\n        },\n        StringNotEquals: {\n          shape: 'S2m'\n        }\n      }\n    },\n    S2m: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    S35: {\n      type: 'structure',\n      members: {\n        BackupPlanId: {},\n        BackupPlanArn: {},\n        BackupPlanVersion: {},\n        BackupRuleId: {}\n      }\n    },\n    S3e: {\n      type: 'structure',\n      members: {\n        AccountId: {},\n        CopyJobId: {},\n        SourceBackupVaultArn: {},\n        SourceRecoveryPointArn: {},\n        DestinationBackupVaultArn: {},\n        DestinationRecoveryPointArn: {},\n        ResourceArn: {},\n        CreationDate: {\n          type: 'timestamp'\n        },\n        CompletionDate: {\n          type: 'timestamp'\n        },\n        State: {},\n        StatusMessage: {},\n        BackupSizeInBytes: {\n          type: 'long'\n        },\n        IamRoleArn: {},\n        CreatedBy: {\n          shape: 'S35'\n        },\n        ResourceType: {},\n        ParentJobId: {},\n        IsParent: {\n          type: 'boolean'\n        },\n        CompositeMemberIdentifier: {},\n        NumberOfChildJobs: {\n          type: 'long'\n        },\n        ChildJobsInState: {\n          type: 'map',\n          key: {},\n          value: {\n            type: 'long'\n          }\n        },\n        ResourceName: {},\n        MessageCategory: {}\n      }\n    },\n    S3l: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S3t: {\n      type: 'structure',\n      members: {\n        MoveToColdStorageAt: {\n          type: 'timestamp'\n        },\n        DeleteAt: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S3x: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'boolean'\n      }\n    },\n    S3z: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'boolean'\n      }\n    },\n    S43: {\n      type: 'structure',\n      members: {\n        ReportJobId: {},\n        ReportPlanArn: {},\n        ReportTemplate: {},\n        CreationTime: {\n          type: 'timestamp'\n        },\n        CompletionTime: {\n          type: 'timestamp'\n        },\n        Status: {},\n        StatusMessage: {},\n        ReportDestination: {\n          type: 'structure',\n          members: {\n            S3BucketName: {},\n            S3Keys: {\n              shape: 'S26'\n            }\n          }\n        }\n      }\n    },\n    S47: {\n      type: 'structure',\n      members: {\n        ReportPlanArn: {},\n        ReportPlanName: {},\n        ReportPlanDescription: {},\n        ReportSetting: {\n          shape: 'S25'\n        },\n        ReportDeliveryChannel: {\n          shape: 'S23'\n        },\n        DeploymentStatus: {},\n        CreationTime: {\n          type: 'timestamp'\n        },\n        LastAttemptedExecutionTime: {\n          type: 'timestamp'\n        },\n        LastSuccessfulExecutionTime: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S4c: {\n      type: 'structure',\n      members: {\n        RestoreTestingPlanArn: {}\n      }\n    },\n    S4l: {\n      type: 'structure',\n      required: [\n        'BackupPlanName',\n        'Rules'\n      ],\n      members: {\n        BackupPlanName: {},\n        Rules: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'RuleName',\n              'TargetBackupVaultName'\n            ],\n            members: {\n              RuleName: {},\n              TargetBackupVaultName: {},\n              ScheduleExpression: {},\n              StartWindowMinutes: {\n                type: 'long'\n              },\n              CompletionWindowMinutes: {\n                type: 'long'\n              },\n              Lifecycle: {\n                shape: 'Se'\n              },\n              RecoveryPointTags: {\n                shape: 'Sg'\n              },\n              RuleId: {},\n              CopyActions: {\n                shape: 'Sj'\n              },\n              EnableContinuousBackup: {\n                type: 'boolean'\n              },\n              ScheduleExpressionTimezone: {}\n            }\n          }\n        },\n        AdvancedBackupSettings: {\n          shape: 'Sn'\n        }\n      }\n    },\n    S4z: {\n      type: 'list',\n      member: {}\n    },\n    S55: {\n      type: 'map',\n      key: {},\n      value: {},\n      sensitive: true\n    },\n    S64: {\n      type: 'structure',\n      members: {\n        BackupPlanArn: {},\n        BackupPlanId: {},\n        CreationDate: {\n          type: 'timestamp'\n        },\n        DeletionDate: {\n          type: 'timestamp'\n        },\n        VersionId: {},\n        BackupPlanName: {},\n        CreatorRequestId: {},\n        LastExecutionDate: {\n          type: 'timestamp'\n        },\n        AdvancedBackupSettings: {\n          shape: 'Sn'\n        }\n      }\n    },\n    S6z: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          ResourceArn: {},\n          ResourceType: {},\n          LastBackupTime: {\n            type: 'timestamp'\n          },\n          ResourceName: {},\n          LastBackupVaultArn: {},\n          LastRecoveryPointArn: {}\n        }\n      }\n    },\n    S7s: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          AccountId: {},\n          RestoreJobId: {},\n          RecoveryPointArn: {},\n          CreationDate: {\n            type: 'timestamp'\n          },\n          CompletionDate: {\n            type: 'timestamp'\n          },\n          Status: {},\n          StatusMessage: {},\n          PercentDone: {},\n          BackupSizeInBytes: {\n            type: 'long'\n          },\n          IamRoleArn: {},\n          ExpectedCompletionTimeMinutes: {\n            type: 'long'\n          },\n          CreatedResourceArn: {},\n          ResourceType: {},\n          RecoveryPointCreationDate: {\n            type: 'timestamp'\n          },\n          CreatedBy: {\n            shape: 'S4c'\n          },\n          ValidationStatus: {},\n          ValidationStatusMessage: {},\n          DeletionStatus: {},\n          DeletionStatusMessage: {}\n        }\n      }\n    }\n  }\n}"]}