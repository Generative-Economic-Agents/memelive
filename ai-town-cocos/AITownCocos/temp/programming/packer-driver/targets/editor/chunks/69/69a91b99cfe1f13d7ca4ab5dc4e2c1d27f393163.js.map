{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/services/s3util.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","AWS","regionUtil","s3util","isArnInParam","req","paramName","inputShape","service","api","operations","operation","input","inputMembers","members","params","util","ARN","validate","validateArnService","parsedArn","_parsedArn","error","Error","code","message","validateArnAccount","exec","accountId","validateS3AccessPointArn","delimiter","resource","length","split","accessPoint","accessPointPrefix","dnsCompatibleBucketName","match","validateOutpostsArn","indexOf","outpostId","dnsHostRegex","RegExp","test","validateOutpostsAccessPointArn","validateArnRegion","options","undefined","useArnRegion","loadUseArnRegionConfig","regionFromArn","region","clientRegion","config","useFipsEndpoint","allowFipsEndpoint","getEndpointSuffix","useAccelerateEndpoint","useDualstackEndpoint","envName","configName","originalConfig","_originalConfig","s3UseArnRegion","isNode","process","env","value","trim","toLowerCase","retryable","profiles","profile","getProfilesFromSharedConfig","iniLoader","AWS_PROFILE","defaultProfile","e","validatePopulateUriFromArn","endpoint","s3ForcePathStyle","bucketName","b","domain","ipAddress","dots","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nimport { __cjsMetaURL as _req0} from '../region_config';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n var regionUtil = require('../region_config');\n\n var s3util = {\n   /**\n    * @api private\n    */\n   isArnInParam: function isArnInParam(req, paramName) {\n     var inputShape = (req.service.api.operations[req.operation] || {}).input || {};\n     var inputMembers = inputShape.members || {};\n     if (!req.params[paramName] || !inputMembers[paramName]) return false;\n     return AWS.util.ARN.validate(req.params[paramName]);\n   },\n\n   /**\n    * Validate service component from ARN supplied in Bucket parameter\n    */\n   validateArnService: function validateArnService(req) {\n     var parsedArn = req._parsedArn;\n\n     if (parsedArn.service !== 's3'\n       && parsedArn.service !== 's3-outposts'\n       && parsedArn.service !== 's3-object-lambda') {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidARN',\n         message: 'expect \\'s3\\' or \\'s3-outposts\\' or \\'s3-object-lambda\\' in ARN service component'\n       });\n     }\n   },\n\n   /**\n    * Validate account ID from ARN supplied in Bucket parameter is a valid account\n    */\n   validateArnAccount: function validateArnAccount(req) {\n     var parsedArn = req._parsedArn;\n\n     if (!/[0-9]{12}/.exec(parsedArn.accountId)) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidARN',\n         message: 'ARN accountID does not match regex \"[0-9]{12}\"'\n       });\n     }\n   },\n\n   /**\n    * Validate ARN supplied in Bucket parameter is a valid access point ARN\n    */\n   validateS3AccessPointArn: function validateS3AccessPointArn(req) {\n     var parsedArn = req._parsedArn;\n\n     //can be ':' or '/'\n     var delimiter = parsedArn.resource['accesspoint'.length];\n\n     if (parsedArn.resource.split(delimiter).length !== 2) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidARN',\n         message: 'Access Point ARN should have one resource accesspoint/{accesspointName}'\n       });\n     }\n\n     var accessPoint = parsedArn.resource.split(delimiter)[1];\n     var accessPointPrefix = accessPoint + '-' + parsedArn.accountId;\n     if (!s3util.dnsCompatibleBucketName(accessPointPrefix) || accessPointPrefix.match(/\\./)) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidARN',\n         message: 'Access point resource in ARN is not DNS compatible. Got ' + accessPoint\n       });\n     }\n\n     //set parsed valid access point\n     req._parsedArn.accessPoint = accessPoint;\n   },\n\n   /**\n    * Validate Outposts ARN supplied in Bucket parameter is a valid outposts ARN\n    */\n   validateOutpostsArn: function validateOutpostsArn(req) {\n     var parsedArn = req._parsedArn;\n\n     if (\n       parsedArn.resource.indexOf('outpost:') !== 0 &&\n       parsedArn.resource.indexOf('outpost/') !== 0\n     ) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidARN',\n         message: 'ARN resource should begin with \\'outpost/\\''\n       });\n     }\n\n     //can be ':' or '/'\n     var delimiter = parsedArn.resource['outpost'.length];\n     var outpostId = parsedArn.resource.split(delimiter)[1];\n     var dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n     if (!dnsHostRegex.test(outpostId)) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidARN',\n         message: 'Outpost resource in ARN is not DNS compatible. Got ' + outpostId\n       });\n     }\n     req._parsedArn.outpostId = outpostId;\n   },\n\n   /**\n    * Validate Outposts ARN supplied in Bucket parameter is a valid outposts ARN\n    */\n   validateOutpostsAccessPointArn: function validateOutpostsAccessPointArn(req) {\n     var parsedArn = req._parsedArn;\n\n     //can be ':' or '/'\n     var delimiter = parsedArn.resource['outpost'.length];\n\n     if (parsedArn.resource.split(delimiter).length !== 4) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidARN',\n         message: 'Outposts ARN should have two resources outpost/{outpostId}/accesspoint/{accesspointName}'\n       });\n     }\n\n     var accessPoint = parsedArn.resource.split(delimiter)[3];\n     var accessPointPrefix = accessPoint + '-' + parsedArn.accountId;\n     if (!s3util.dnsCompatibleBucketName(accessPointPrefix) || accessPointPrefix.match(/\\./)) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidARN',\n         message: 'Access point resource in ARN is not DNS compatible. Got ' + accessPoint\n       });\n     }\n\n     //set parsed valid access point\n     req._parsedArn.accessPoint = accessPoint;\n   },\n\n   /**\n    * Validate region field in ARN supplied in Bucket parameter is a valid region\n    */\n   validateArnRegion: function validateArnRegion(req, options) {\n     if (options === undefined) {\n       options = {};\n     }\n\n     var useArnRegion = s3util.loadUseArnRegionConfig(req);\n     var regionFromArn = req._parsedArn.region;\n     var clientRegion = req.service.config.region;\n     var useFipsEndpoint = req.service.config.useFipsEndpoint;\n     var allowFipsEndpoint = options.allowFipsEndpoint || false;\n\n     if (!regionFromArn) {\n       var message = 'ARN region is empty';\n       if (req._parsedArn.service === 's3') {\n         message = message + '\\nYou may want to use multi-regional ARN. The feature is not supported in current SDK. ' +\n         'You should consider switching to V3(https://github.com/aws/aws-sdk-js-v3).';\n       }\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidARN',\n         message: message\n       });\n     }\n\n     if (useFipsEndpoint && !allowFipsEndpoint) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidConfiguration',\n         message: 'ARN endpoint is not compatible with FIPS region'\n       });\n     }\n\n     if (regionFromArn.indexOf('fips') >= 0) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidConfiguration',\n         message: 'FIPS region not allowed in ARN'\n       });\n     }\n\n     if (!useArnRegion && regionFromArn !== clientRegion) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidConfiguration',\n         message: 'Configured region conflicts with access point region'\n       });\n     } else if (\n       useArnRegion &&\n       regionUtil.getEndpointSuffix(regionFromArn) !== regionUtil.getEndpointSuffix(clientRegion)\n     ) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidConfiguration',\n         message: 'Configured region and access point region not in same partition'\n       });\n     }\n\n     if (req.service.config.useAccelerateEndpoint) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidConfiguration',\n         message: 'useAccelerateEndpoint config is not supported with access point ARN'\n       });\n     }\n\n     if (req._parsedArn.service === 's3-outposts' && req.service.config.useDualstackEndpoint) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidConfiguration',\n         message: 'Dualstack is not supported with outposts access point ARN'\n       });\n     }\n   },\n\n   loadUseArnRegionConfig: function loadUseArnRegionConfig(req) {\n     var envName = 'AWS_S3_USE_ARN_REGION';\n     var configName = 's3_use_arn_region';\n     var useArnRegion = true;\n     var originalConfig = req.service._originalConfig || {};\n     if (req.service.config.s3UseArnRegion !== undefined) {\n       return req.service.config.s3UseArnRegion;\n     } else if (originalConfig.s3UseArnRegion !== undefined) {\n       useArnRegion = originalConfig.s3UseArnRegion === true;\n     } else if (AWS.util.isNode()) {\n       //load from environmental variable AWS_USE_ARN_REGION\n       if (process.env[envName]) {\n         var value = process.env[envName].trim().toLowerCase();\n         if (['false', 'true'].indexOf(value) < 0) {\n           throw AWS.util.error(new Error(), {\n             code: 'InvalidConfiguration',\n             message: envName + ' only accepts true or false. Got ' + process.env[envName],\n             retryable: false\n           });\n         }\n         useArnRegion = value === 'true';\n       } else {  //load from shared config property use_arn_region\n         var profiles = {};\n         var profile = {};\n         try {\n           profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);\n           profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];\n         } catch (e) {}\n         if (profile[configName]) {\n           if (['false', 'true'].indexOf(profile[configName].trim().toLowerCase()) < 0) {\n             throw AWS.util.error(new Error(), {\n               code: 'InvalidConfiguration',\n               message: configName + ' only accepts true or false. Got ' + profile[configName],\n               retryable: false\n             });\n           }\n           useArnRegion = profile[configName].trim().toLowerCase() === 'true';\n         }\n       }\n     }\n     req.service.config.s3UseArnRegion = useArnRegion;\n     return useArnRegion;\n   },\n\n   /**\n    * Validations before URI can be populated\n    */\n   validatePopulateUriFromArn: function validatePopulateUriFromArn(req) {\n     if (req.service._originalConfig && req.service._originalConfig.endpoint) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidConfiguration',\n         message: 'Custom endpoint is not compatible with access point ARN'\n       });\n     }\n\n     if (req.service.config.s3ForcePathStyle) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidConfiguration',\n         message: 'Cannot construct path-style endpoint with access point'\n       });\n     }\n   },\n\n   /**\n    * Returns true if the bucket name is DNS compatible.  Buckets created\n    * outside of the classic region MUST be DNS compatible.\n    *\n    * @api private\n    */\n   dnsCompatibleBucketName: function dnsCompatibleBucketName(bucketName) {\n     var b = bucketName;\n     var domain = new RegExp(/^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/);\n     var ipAddress = new RegExp(/(\\d+\\.){3}\\d+/);\n     var dots = new RegExp(/\\.\\./);\n     return (b.match(domain) && !b.match(ipAddress) && !b.match(dots)) ? true : false;\n   },\n };\n\n /**\n  * @api private\n  */\n module.exports = s3util;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n  '../region_config': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}