{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/opsworks-2013-02-18.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","AssignInstance","input","type","required","members","InstanceId","LayerIds","shape","AssignVolume","VolumeId","AssociateElasticIp","ElasticIp","AttachElasticLoadBalancer","ElasticLoadBalancerName","LayerId","CloneStack","SourceStackId","Name","Region","VpcId","Attributes","ServiceRoleArn","DefaultInstanceProfileArn","DefaultOs","HostnameTheme","DefaultAvailabilityZone","DefaultSubnetId","CustomJson","ConfigurationManager","ChefConfiguration","UseCustomCookbooks","UseOpsworksSecurityGroups","CustomCookbooksSource","DefaultSshKeyName","ClonePermissions","CloneAppIds","DefaultRootDeviceType","AgentVersion","output","StackId","CreateApp","Shortname","Description","DataSources","Type","AppSource","Domains","EnableSsl","SslConfiguration","Environment","AppId","CreateDeployment","InstanceIds","Command","Comment","DeploymentId","CreateInstance","InstanceType","AutoScalingType","Hostname","Os","AmiId","SshKeyName","AvailabilityZone","VirtualizationType","SubnetId","Architecture","RootDeviceType","BlockDeviceMappings","InstallUpdatesOnBoot","EbsOptimized","Tenancy","CreateLayer","CloudWatchLogsConfiguration","CustomInstanceProfileArn","CustomSecurityGroupIds","Packages","VolumeConfigurations","EnableAutoHealing","AutoAssignElasticIps","AutoAssignPublicIps","CustomRecipes","UseEbsOptimizedInstances","LifecycleEventConfiguration","CreateStack","CreateUserProfile","IamUserArn","SshUsername","SshPublicKey","AllowSelfManagement","DeleteApp","DeleteInstance","DeleteElasticIp","DeleteVolumes","DeleteLayer","DeleteStack","DeleteUserProfile","DeregisterEcsCluster","EcsClusterArn","DeregisterElasticIp","DeregisterInstance","DeregisterRdsDbInstance","RdsDbInstanceArn","DeregisterVolume","DescribeAgentVersions","AgentVersions","member","Version","DescribeApps","AppIds","Apps","CreatedAt","DescribeCommands","CommandIds","Commands","CommandId","AcknowledgedAt","CompletedAt","Status","ExitCode","LogUrl","DescribeDeployments","DeploymentIds","Deployments","Duration","DescribeEcsClusters","EcsClusterArns","NextToken","MaxResults","EcsClusters","EcsClusterName","RegisteredAt","DescribeElasticIps","Ips","ElasticIps","Ip","Domain","DescribeElasticLoadBalancers","ElasticLoadBalancers","DnsName","AvailabilityZones","SubnetIds","Ec2InstanceIds","DescribeInstances","Instances","Arn","Ec2InstanceId","EcsContainerInstanceArn","InfrastructureClass","InstanceProfileArn","LastServiceErrorId","Platform","PrivateDns","PrivateIp","PublicDns","PublicIp","RegisteredBy","ReportedAgentVersion","ReportedOs","Family","RootDeviceVolumeId","SecurityGroupIds","SshHostDsaKeyFingerprint","SshHostRsaKeyFingerprint","DescribeLayers","Layers","DefaultSecurityGroupNames","DefaultRecipes","DescribeLoadBasedAutoScaling","LoadBasedAutoScalingConfigurations","Enable","UpScaling","DownScaling","DescribeMyUserProfile","UserProfile","DescribeOperatingSystems","OperatingSystems","Id","ConfigurationManagers","ReportedName","ReportedVersion","Supported","DescribePermissions","Permissions","AllowSsh","AllowSudo","Level","DescribeRaidArrays","RaidArrayIds","RaidArrays","RaidArrayId","RaidLevel","NumberOfDisks","Size","Device","MountPoint","VolumeType","Iops","DescribeRdsDbInstances","RdsDbInstanceArns","RdsDbInstances","DbInstanceIdentifier","DbUser","DbPassword","Address","Engine","MissingOnRds","DescribeServiceErrors","ServiceErrorIds","ServiceErrors","ServiceErrorId","Message","DescribeStackProvisioningParameters","AgentInstallerUrl","Parameters","key","value","DescribeStackSummary","StackSummary","LayersCount","AppsCount","InstancesCount","Assigning","Booting","ConnectionLost","Deregistering","Online","Pending","Rebooting","Registered","Registering","Requested","RunningSetup","SetupFailed","ShuttingDown","StartFailed","StopFailed","Stopped","Stopping","Terminated","Terminating","Unassigning","DescribeStacks","StackIds","Stacks","DescribeTimeBasedAutoScaling","TimeBasedAutoScalingConfigurations","AutoScalingSchedule","DescribeUserProfiles","IamUserArns","UserProfiles","DescribeVolumes","VolumeIds","Volumes","Ec2VolumeId","Encrypted","DetachElasticLoadBalancer","DisassociateElasticIp","GetHostnameSuggestion","GrantAccess","ValidForInMinutes","TemporaryCredential","Username","Password","ListTags","ResourceArn","Tags","RebootInstance","RegisterEcsCluster","RegisterElasticIp","RegisterInstance","RsaPublicKey","RsaPublicKeyFingerprint","InstanceIdentity","Document","Signature","RegisterRdsDbInstance","RegisterVolume","SetLoadBasedAutoScaling","SetPermission","SetTimeBasedAutoScaling","StartInstance","StartStack","StopInstance","Force","StopStack","TagResource","UnassignInstance","UnassignVolume","UntagResource","TagKeys","UpdateApp","UpdateElasticIp","UpdateInstance","UpdateLayer","UpdateMyUserProfile","UpdateRdsDbInstance","UpdateStack","UpdateUserProfile","UpdateVolume","shapes","S3","S8","Sa","Sb","ManageBerkshelf","BerkshelfVersion","Sd","Url","SshKey","Revision","Si","DatabaseName","Sl","Certificate","PrivateKey","Chain","Sm","So","Key","Value","Secure","Ss","Args","Sz","DeviceName","NoDevice","VirtualName","Ebs","SnapshotId","VolumeSize","DeleteOnTermination","S17","S19","Enabled","LogStreams","LogGroupName","DatetimeFormat","TimeZone","File","FileFingerprintLines","MultiLineStartPattern","InitialPosition","Encoding","BufferDuration","BatchCount","BatchSize","S1f","S1h","Setup","Configure","Deploy","Undeploy","Shutdown","S1i","ExecutionTimeout","DelayUntilElbConnectionsDrained","S36","InstanceCount","ThresholdsWaitTime","IgnoreMetricsTime","CpuThreshold","MemoryThreshold","LoadThreshold","Alarms","S4b","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","S4c","S50"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,UAFR;AAGRC,UAAAA,WAAW,EAAE,KAHL;AAIRC,UAAAA,QAAQ,EAAE,MAJF;AAKRC,UAAAA,SAAS,EAAE,CACT,MADS,CALH;AAQRC,UAAAA,eAAe,EAAE,cART;AASRC,UAAAA,SAAS,EAAE,UATH;AAURC,UAAAA,gBAAgB,EAAE,IAVV;AAWRC,UAAAA,YAAY,EAAE,mBAXN;AAYRC,UAAAA,GAAG,EAAE;AAZG,SAFG;AAgBbC,QAAAA,UAAU,EAAE;AACVC,UAAAA,cAAc,EAAE;AACdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE,EADL;AAEPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,KAAK,EAAE;AADC;AAFH;AANJ;AADO,WADN;AAgBVC,UAAAA,YAAY,EAAE;AACZP,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPK,gBAAAA,QAAQ,EAAE,EADH;AAEPJ,gBAAAA,UAAU,EAAE;AAFL;AALJ;AADK,WAhBJ;AA4BVK,UAAAA,kBAAkB,EAAE;AAClBT,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPO,gBAAAA,SAAS,EAAE,EADJ;AAEPN,gBAAAA,UAAU,EAAE;AAFL;AALJ;AADW,WA5BV;AAwCVO,UAAAA,yBAAyB,EAAE;AACzBX,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,yBADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPS,gBAAAA,uBAAuB,EAAE,EADlB;AAEPC,gBAAAA,OAAO,EAAE;AAFF;AANJ;AADkB,WAxCjB;AAqDVC,UAAAA,UAAU,EAAE;AACVd,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,gBAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,aAAa,EAAE,EADR;AAEPC,gBAAAA,IAAI,EAAE,EAFC;AAGPC,gBAAAA,MAAM,EAAE,EAHD;AAIPC,gBAAAA,KAAK,EAAE,EAJA;AAKPC,gBAAAA,UAAU,EAAE;AACVb,kBAAAA,KAAK,EAAE;AADG,iBALL;AAQPc,gBAAAA,cAAc,EAAE,EART;AASPC,gBAAAA,yBAAyB,EAAE,EATpB;AAUPC,gBAAAA,SAAS,EAAE,EAVJ;AAWPC,gBAAAA,aAAa,EAAE,EAXR;AAYPC,gBAAAA,uBAAuB,EAAE,EAZlB;AAaPC,gBAAAA,eAAe,EAAE,EAbV;AAcPC,gBAAAA,UAAU,EAAE,EAdL;AAePC,gBAAAA,oBAAoB,EAAE;AACpBrB,kBAAAA,KAAK,EAAE;AADa,iBAff;AAkBPsB,gBAAAA,iBAAiB,EAAE;AACjBtB,kBAAAA,KAAK,EAAE;AADU,iBAlBZ;AAqBPuB,gBAAAA,kBAAkB,EAAE;AAClB5B,kBAAAA,IAAI,EAAE;AADY,iBArBb;AAwBP6B,gBAAAA,yBAAyB,EAAE;AACzB7B,kBAAAA,IAAI,EAAE;AADmB,iBAxBpB;AA2BP8B,gBAAAA,qBAAqB,EAAE;AACrBzB,kBAAAA,KAAK,EAAE;AADc,iBA3BhB;AA8BP0B,gBAAAA,iBAAiB,EAAE,EA9BZ;AA+BPC,gBAAAA,gBAAgB,EAAE;AAChBhC,kBAAAA,IAAI,EAAE;AADU,iBA/BX;AAkCPiC,gBAAAA,WAAW,EAAE;AACX5B,kBAAAA,KAAK,EAAE;AADI,iBAlCN;AAqCP6B,gBAAAA,qBAAqB,EAAE,EArChB;AAsCPC,gBAAAA,YAAY,EAAE;AAtCP;AANJ,aADG;AAgDVC,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE;AADF;AAFH;AAhDE,WArDF;AA4GVC,UAAAA,SAAS,EAAE;AACTvC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,MAFQ,EAGR,MAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPE,gBAAAA,SAAS,EAAE,EAFJ;AAGPxB,gBAAAA,IAAI,EAAE,EAHC;AAIPyB,gBAAAA,WAAW,EAAE,EAJN;AAKPC,gBAAAA,WAAW,EAAE;AACXpC,kBAAAA,KAAK,EAAE;AADI,iBALN;AAQPqC,gBAAAA,IAAI,EAAE,EARC;AASPC,gBAAAA,SAAS,EAAE;AACTtC,kBAAAA,KAAK,EAAE;AADE,iBATJ;AAYPuC,gBAAAA,OAAO,EAAE;AACPvC,kBAAAA,KAAK,EAAE;AADA,iBAZF;AAePwC,gBAAAA,SAAS,EAAE;AACT7C,kBAAAA,IAAI,EAAE;AADG,iBAfJ;AAkBP8C,gBAAAA,gBAAgB,EAAE;AAChBzC,kBAAAA,KAAK,EAAE;AADS,iBAlBX;AAqBPa,gBAAAA,UAAU,EAAE;AACVb,kBAAAA,KAAK,EAAE;AADG,iBArBL;AAwBP0C,gBAAAA,WAAW,EAAE;AACX1C,kBAAAA,KAAK,EAAE;AADI;AAxBN;AAPJ,aADE;AAqCT+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP8C,gBAAAA,KAAK,EAAE;AADA;AAFH;AArCC,WA5GD;AAwJVC,UAAAA,gBAAgB,EAAE;AAChBlD,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPW,gBAAAA,KAAK,EAAE,EAFA;AAGPE,gBAAAA,WAAW,EAAE;AACX7C,kBAAAA,KAAK,EAAE;AADI,iBAHN;AAMPD,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,KAAK,EAAE;AADC,iBANH;AASP8C,gBAAAA,OAAO,EAAE;AACP9C,kBAAAA,KAAK,EAAE;AADA,iBATF;AAYP+C,gBAAAA,OAAO,EAAE,EAZF;AAaP3B,gBAAAA,UAAU,EAAE;AAbL;AANJ,aADS;AAuBhBW,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmD,gBAAAA,YAAY,EAAE;AADP;AAFH;AAvBQ,WAxJR;AAsLVC,UAAAA,cAAc,EAAE;AACdvD,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,UAFQ,EAGR,cAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPjC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,KAAK,EAAE;AADC,iBAFH;AAKPkD,gBAAAA,YAAY,EAAE,EALP;AAMPC,gBAAAA,eAAe,EAAE,EANV;AAOPC,gBAAAA,QAAQ,EAAE,EAPH;AAQPC,gBAAAA,EAAE,EAAE,EARG;AASPC,gBAAAA,KAAK,EAAE,EATA;AAUPC,gBAAAA,UAAU,EAAE,EAVL;AAWPC,gBAAAA,gBAAgB,EAAE,EAXX;AAYPC,gBAAAA,kBAAkB,EAAE,EAZb;AAaPC,gBAAAA,QAAQ,EAAE,EAbH;AAcPC,gBAAAA,YAAY,EAAE,EAdP;AAePC,gBAAAA,cAAc,EAAE,EAfT;AAgBPC,gBAAAA,mBAAmB,EAAE;AACnB7D,kBAAAA,KAAK,EAAE;AADY,iBAhBd;AAmBP8D,gBAAAA,oBAAoB,EAAE;AACpBnE,kBAAAA,IAAI,EAAE;AADc,iBAnBf;AAsBPoE,gBAAAA,YAAY,EAAE;AACZpE,kBAAAA,IAAI,EAAE;AADM,iBAtBP;AAyBPmC,gBAAAA,YAAY,EAAE,EAzBP;AA0BPkC,gBAAAA,OAAO,EAAE;AA1BF;AAPJ,aADO;AAqCdjC,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AADL;AAFH;AArCM,WAtLN;AAkOVmE,UAAAA,WAAW,EAAE;AACXvE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,MAFQ,EAGR,MAHQ,EAIR,WAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPK,gBAAAA,IAAI,EAAE,EAFC;AAGP3B,gBAAAA,IAAI,EAAE,EAHC;AAIPwB,gBAAAA,SAAS,EAAE,EAJJ;AAKPrB,gBAAAA,UAAU,EAAE;AACVb,kBAAAA,KAAK,EAAE;AADG,iBALL;AAQPkE,gBAAAA,2BAA2B,EAAE;AAC3BlE,kBAAAA,KAAK,EAAE;AADoB,iBARtB;AAWPmE,gBAAAA,wBAAwB,EAAE,EAXnB;AAYP/C,gBAAAA,UAAU,EAAE,EAZL;AAaPgD,gBAAAA,sBAAsB,EAAE;AACtBpE,kBAAAA,KAAK,EAAE;AADe,iBAbjB;AAgBPqE,gBAAAA,QAAQ,EAAE;AACRrE,kBAAAA,KAAK,EAAE;AADC,iBAhBH;AAmBPsE,gBAAAA,oBAAoB,EAAE;AACpBtE,kBAAAA,KAAK,EAAE;AADa,iBAnBf;AAsBPuE,gBAAAA,iBAAiB,EAAE;AACjB5E,kBAAAA,IAAI,EAAE;AADW,iBAtBZ;AAyBP6E,gBAAAA,oBAAoB,EAAE;AACpB7E,kBAAAA,IAAI,EAAE;AADc,iBAzBf;AA4BP8E,gBAAAA,mBAAmB,EAAE;AACnB9E,kBAAAA,IAAI,EAAE;AADa,iBA5Bd;AA+BP+E,gBAAAA,aAAa,EAAE;AACb1E,kBAAAA,KAAK,EAAE;AADM,iBA/BR;AAkCP8D,gBAAAA,oBAAoB,EAAE;AACpBnE,kBAAAA,IAAI,EAAE;AADc,iBAlCf;AAqCPgF,gBAAAA,wBAAwB,EAAE;AACxBhF,kBAAAA,IAAI,EAAE;AADkB,iBArCnB;AAwCPiF,gBAAAA,2BAA2B,EAAE;AAC3B5E,kBAAAA,KAAK,EAAE;AADoB;AAxCtB;AARJ,aADI;AAsDX+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPU,gBAAAA,OAAO,EAAE;AADF;AAFH;AAtDG,WAlOH;AA+RVsE,UAAAA,WAAW,EAAE;AACXnF,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,QAFQ,EAGR,gBAHQ,EAIR,2BAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPa,gBAAAA,IAAI,EAAE,EADC;AAEPC,gBAAAA,MAAM,EAAE,EAFD;AAGPC,gBAAAA,KAAK,EAAE,EAHA;AAIPC,gBAAAA,UAAU,EAAE;AACVb,kBAAAA,KAAK,EAAE;AADG,iBAJL;AAOPc,gBAAAA,cAAc,EAAE,EAPT;AAQPC,gBAAAA,yBAAyB,EAAE,EARpB;AASPC,gBAAAA,SAAS,EAAE,EATJ;AAUPC,gBAAAA,aAAa,EAAE,EAVR;AAWPC,gBAAAA,uBAAuB,EAAE,EAXlB;AAYPC,gBAAAA,eAAe,EAAE,EAZV;AAaPC,gBAAAA,UAAU,EAAE,EAbL;AAcPC,gBAAAA,oBAAoB,EAAE;AACpBrB,kBAAAA,KAAK,EAAE;AADa,iBAdf;AAiBPsB,gBAAAA,iBAAiB,EAAE;AACjBtB,kBAAAA,KAAK,EAAE;AADU,iBAjBZ;AAoBPuB,gBAAAA,kBAAkB,EAAE;AAClB5B,kBAAAA,IAAI,EAAE;AADY,iBApBb;AAuBP6B,gBAAAA,yBAAyB,EAAE;AACzB7B,kBAAAA,IAAI,EAAE;AADmB,iBAvBpB;AA0BP8B,gBAAAA,qBAAqB,EAAE;AACrBzB,kBAAAA,KAAK,EAAE;AADc,iBA1BhB;AA6BP0B,gBAAAA,iBAAiB,EAAE,EA7BZ;AA8BPG,gBAAAA,qBAAqB,EAAE,EA9BhB;AA+BPC,gBAAAA,YAAY,EAAE;AA/BP;AARJ,aADI;AA2CXC,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE;AADF;AAFH;AA3CG,WA/RH;AAiVV8C,UAAAA,iBAAiB,EAAE;AACjBpF,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPkF,gBAAAA,UAAU,EAAE,EADL;AAEPC,gBAAAA,WAAW,EAAE,EAFN;AAGPC,gBAAAA,YAAY,EAAE,EAHP;AAIPC,gBAAAA,mBAAmB,EAAE;AACnBvF,kBAAAA,IAAI,EAAE;AADa;AAJd;AALJ,aADU;AAejBoC,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPkF,gBAAAA,UAAU,EAAE;AADL;AAFH;AAfS,WAjVT;AAuWVI,UAAAA,SAAS,EAAE;AACTzF,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,OADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP8C,gBAAAA,KAAK,EAAE;AADA;AALJ;AADE,WAvWD;AAkXVyC,UAAAA,cAAc,EAAE;AACd1F,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE,EADL;AAEPuF,gBAAAA,eAAe,EAAE;AACf1F,kBAAAA,IAAI,EAAE;AADS,iBAFV;AAKP2F,gBAAAA,aAAa,EAAE;AACb3F,kBAAAA,IAAI,EAAE;AADO;AALR;AALJ;AADO,WAlXN;AAmYV4F,UAAAA,WAAW,EAAE;AACX7F,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPU,gBAAAA,OAAO,EAAE;AADF;AALJ;AADI,WAnYH;AA8YViF,UAAAA,WAAW,EAAE;AACX9F,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE;AADF;AALJ;AADI,WA9YH;AAyZVyD,UAAAA,iBAAiB,EAAE;AACjB/F,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPkF,gBAAAA,UAAU,EAAE;AADL;AALJ;AADU,WAzZT;AAoaVW,UAAAA,oBAAoB,EAAE;AACpBhG,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP8F,gBAAAA,aAAa,EAAE;AADR;AALJ;AADa,WApaZ;AA+aVC,UAAAA,mBAAmB,EAAE;AACnBlG,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPO,gBAAAA,SAAS,EAAE;AADJ;AALJ;AADY,WA/aX;AA0bVyF,UAAAA,kBAAkB,EAAE;AAClBnG,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AADL;AALJ;AADW,WA1bV;AAqcVgG,UAAAA,uBAAuB,EAAE;AACvBpG,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,kBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPkG,gBAAAA,gBAAgB,EAAE;AADX;AALJ;AADgB,WArcf;AAgdVC,UAAAA,gBAAgB,EAAE;AAChBtG,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPK,gBAAAA,QAAQ,EAAE;AADH;AALJ;AADS,WAhdR;AA2dV+F,UAAAA,qBAAqB,EAAE;AACrBvG,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPX,gBAAAA,oBAAoB,EAAE;AACpBrB,kBAAAA,KAAK,EAAE;AADa;AAFf;AAFJ,aADc;AAUrB+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqG,gBAAAA,aAAa,EAAE;AACbvG,kBAAAA,IAAI,EAAE,MADO;AAEbwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPuG,sBAAAA,OAAO,EAAE,EADF;AAEP/E,sBAAAA,oBAAoB,EAAE;AACpBrB,wBAAAA,KAAK,EAAE;AADa;AAFf;AAFH;AAFK;AADR;AAFH;AAVa,WA3db;AAufVqG,UAAAA,YAAY,EAAE;AACZ3G,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPsE,gBAAAA,MAAM,EAAE;AACNtG,kBAAAA,KAAK,EAAE;AADD;AAFD;AAFJ,aADK;AAUZ+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP0G,gBAAAA,IAAI,EAAE;AACJ5G,kBAAAA,IAAI,EAAE,MADF;AAEJwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP8C,sBAAAA,KAAK,EAAE,EADA;AAEPX,sBAAAA,OAAO,EAAE,EAFF;AAGPE,sBAAAA,SAAS,EAAE,EAHJ;AAIPxB,sBAAAA,IAAI,EAAE,EAJC;AAKPyB,sBAAAA,WAAW,EAAE,EALN;AAMPC,sBAAAA,WAAW,EAAE;AACXpC,wBAAAA,KAAK,EAAE;AADI,uBANN;AASPqC,sBAAAA,IAAI,EAAE,EATC;AAUPC,sBAAAA,SAAS,EAAE;AACTtC,wBAAAA,KAAK,EAAE;AADE,uBAVJ;AAaPuC,sBAAAA,OAAO,EAAE;AACPvC,wBAAAA,KAAK,EAAE;AADA,uBAbF;AAgBPwC,sBAAAA,SAAS,EAAE;AACT7C,wBAAAA,IAAI,EAAE;AADG,uBAhBJ;AAmBP8C,sBAAAA,gBAAgB,EAAE;AAChBzC,wBAAAA,KAAK,EAAE;AADS,uBAnBX;AAsBPa,sBAAAA,UAAU,EAAE;AACVb,wBAAAA,KAAK,EAAE;AADG,uBAtBL;AAyBPwG,sBAAAA,SAAS,EAAE,EAzBJ;AA0BP9D,sBAAAA,WAAW,EAAE;AACX1C,wBAAAA,KAAK,EAAE;AADI;AA1BN;AAFH;AAFJ;AADC;AAFH;AAVI,WAvfJ;AA2iBVyG,UAAAA,gBAAgB,EAAE;AAChB/G,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPmD,gBAAAA,YAAY,EAAE,EADP;AAEPlD,gBAAAA,UAAU,EAAE,EAFL;AAGP4G,gBAAAA,UAAU,EAAE;AACV1G,kBAAAA,KAAK,EAAE;AADG;AAHL;AAFJ,aADS;AAWhB+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP8G,gBAAAA,QAAQ,EAAE;AACRhH,kBAAAA,IAAI,EAAE,MADE;AAERwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP+G,sBAAAA,SAAS,EAAE,EADJ;AAEP9G,sBAAAA,UAAU,EAAE,EAFL;AAGPkD,sBAAAA,YAAY,EAAE,EAHP;AAIPwD,sBAAAA,SAAS,EAAE,EAJJ;AAKPK,sBAAAA,cAAc,EAAE,EALT;AAMPC,sBAAAA,WAAW,EAAE,EANN;AAOPC,sBAAAA,MAAM,EAAE,EAPD;AAQPC,sBAAAA,QAAQ,EAAE;AACRrH,wBAAAA,IAAI,EAAE;AADE,uBARH;AAWPsH,sBAAAA,MAAM,EAAE,EAXD;AAYP5E,sBAAAA,IAAI,EAAE;AAZC;AAFH;AAFA;AADH;AAFH;AAXQ,WA3iBR;AAglBV6E,UAAAA,mBAAmB,EAAE;AACnBxH,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPW,gBAAAA,KAAK,EAAE,EAFA;AAGPwE,gBAAAA,aAAa,EAAE;AACbnH,kBAAAA,KAAK,EAAE;AADM;AAHR;AAFJ,aADY;AAWnB+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPuH,gBAAAA,WAAW,EAAE;AACXzH,kBAAAA,IAAI,EAAE,MADK;AAEXwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPmD,sBAAAA,YAAY,EAAE,EADP;AAEPhB,sBAAAA,OAAO,EAAE,EAFF;AAGPW,sBAAAA,KAAK,EAAE,EAHA;AAIP6D,sBAAAA,SAAS,EAAE,EAJJ;AAKPM,sBAAAA,WAAW,EAAE,EALN;AAMPO,sBAAAA,QAAQ,EAAE;AACR1H,wBAAAA,IAAI,EAAE;AADE,uBANH;AASPoF,sBAAAA,UAAU,EAAE,EATL;AAUPhC,sBAAAA,OAAO,EAAE,EAVF;AAWPD,sBAAAA,OAAO,EAAE;AACP9C,wBAAAA,KAAK,EAAE;AADA,uBAXF;AAcP+G,sBAAAA,MAAM,EAAE,EAdD;AAeP3F,sBAAAA,UAAU,EAAE,EAfL;AAgBPyB,sBAAAA,WAAW,EAAE;AACX7C,wBAAAA,KAAK,EAAE;AADI;AAhBN;AAFH;AAFG;AADN;AAFH;AAXW,WAhlBX;AA2nBVsH,UAAAA,mBAAmB,EAAE;AACnB5H,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP0H,gBAAAA,cAAc,EAAE;AACdvH,kBAAAA,KAAK,EAAE;AADO,iBADT;AAIPgC,gBAAAA,OAAO,EAAE,EAJF;AAKPwF,gBAAAA,SAAS,EAAE,EALJ;AAMPC,gBAAAA,UAAU,EAAE;AACV9H,kBAAAA,IAAI,EAAE;AADI;AANL;AAFJ,aADY;AAcnBoC,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP6H,gBAAAA,WAAW,EAAE;AACX/H,kBAAAA,IAAI,EAAE,MADK;AAEXwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP8F,sBAAAA,aAAa,EAAE,EADR;AAEPgC,sBAAAA,cAAc,EAAE,EAFT;AAGP3F,sBAAAA,OAAO,EAAE,EAHF;AAIP4F,sBAAAA,YAAY,EAAE;AAJP;AAFH;AAFG,iBADN;AAaPJ,gBAAAA,SAAS,EAAE;AAbJ;AAFH;AAdW,WA3nBX;AA4pBVK,UAAAA,kBAAkB,EAAE;AAClBnI,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE,EADL;AAEPkC,gBAAAA,OAAO,EAAE,EAFF;AAGP8F,gBAAAA,GAAG,EAAE;AACH9H,kBAAAA,KAAK,EAAE;AADJ;AAHE;AAFJ,aADW;AAWlB+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPkI,gBAAAA,UAAU,EAAE;AACVpI,kBAAAA,IAAI,EAAE,MADI;AAEVwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPmI,sBAAAA,EAAE,EAAE,EADG;AAEPtH,sBAAAA,IAAI,EAAE,EAFC;AAGPuH,sBAAAA,MAAM,EAAE,EAHD;AAIPtH,sBAAAA,MAAM,EAAE,EAJD;AAKPb,sBAAAA,UAAU,EAAE;AALL;AAFH;AAFE;AADL;AAFH;AAXU,WA5pBV;AA0rBVoI,UAAAA,4BAA4B,EAAE;AAC5BxI,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPjC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,KAAK,EAAE;AADC;AAFH;AAFJ,aADqB;AAU5B+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPsI,gBAAAA,oBAAoB,EAAE;AACpBxI,kBAAAA,IAAI,EAAE,MADc;AAEpBwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPS,sBAAAA,uBAAuB,EAAE,EADlB;AAEPK,sBAAAA,MAAM,EAAE,EAFD;AAGPyH,sBAAAA,OAAO,EAAE,EAHF;AAIPpG,sBAAAA,OAAO,EAAE,EAJF;AAKPzB,sBAAAA,OAAO,EAAE,EALF;AAMPK,sBAAAA,KAAK,EAAE,EANA;AAOPyH,sBAAAA,iBAAiB,EAAE;AACjBrI,wBAAAA,KAAK,EAAE;AADU,uBAPZ;AAUPsI,sBAAAA,SAAS,EAAE;AACTtI,wBAAAA,KAAK,EAAE;AADE,uBAVJ;AAaPuI,sBAAAA,cAAc,EAAE;AACdvI,wBAAAA,KAAK,EAAE;AADO;AAbT;AAFH;AAFY;AADf;AAFH;AAVoB,WA1rBpB;AAiuBVwI,UAAAA,iBAAiB,EAAE;AACjB9I,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPzB,gBAAAA,OAAO,EAAE,EAFF;AAGPsC,gBAAAA,WAAW,EAAE;AACX7C,kBAAAA,KAAK,EAAE;AADI;AAHN;AAFJ,aADU;AAWjB+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP4I,gBAAAA,SAAS,EAAE;AACT9I,kBAAAA,IAAI,EAAE,MADG;AAETwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPiC,sBAAAA,YAAY,EAAE,EADP;AAEPwB,sBAAAA,KAAK,EAAE,EAFA;AAGPK,sBAAAA,YAAY,EAAE,EAHP;AAIP+E,sBAAAA,GAAG,EAAE,EAJE;AAKPvF,sBAAAA,eAAe,EAAE,EALV;AAMPK,sBAAAA,gBAAgB,EAAE,EANX;AAOPK,sBAAAA,mBAAmB,EAAE;AACnB7D,wBAAAA,KAAK,EAAE;AADY,uBAPd;AAUPwG,sBAAAA,SAAS,EAAE,EAVJ;AAWPzC,sBAAAA,YAAY,EAAE;AACZpE,wBAAAA,IAAI,EAAE;AADM,uBAXP;AAcPgJ,sBAAAA,aAAa,EAAE,EAdR;AAePhD,sBAAAA,aAAa,EAAE,EAfR;AAgBPiD,sBAAAA,uBAAuB,EAAE,EAhBlB;AAiBPxI,sBAAAA,SAAS,EAAE,EAjBJ;AAkBPgD,sBAAAA,QAAQ,EAAE,EAlBH;AAmBPyF,sBAAAA,mBAAmB,EAAE,EAnBd;AAoBP/E,sBAAAA,oBAAoB,EAAE;AACpBnE,wBAAAA,IAAI,EAAE;AADc,uBApBf;AAuBPG,sBAAAA,UAAU,EAAE,EAvBL;AAwBPgJ,sBAAAA,kBAAkB,EAAE,EAxBb;AAyBP5F,sBAAAA,YAAY,EAAE,EAzBP;AA0BP6F,sBAAAA,kBAAkB,EAAE,EA1Bb;AA2BPhJ,sBAAAA,QAAQ,EAAE;AACRC,wBAAAA,KAAK,EAAE;AADC,uBA3BH;AA8BPqD,sBAAAA,EAAE,EAAE,EA9BG;AA+BP2F,sBAAAA,QAAQ,EAAE,EA/BH;AAgCPC,sBAAAA,UAAU,EAAE,EAhCL;AAiCPC,sBAAAA,SAAS,EAAE,EAjCJ;AAkCPC,sBAAAA,SAAS,EAAE,EAlCJ;AAmCPC,sBAAAA,QAAQ,EAAE,EAnCH;AAoCPC,sBAAAA,YAAY,EAAE,EApCP;AAqCPC,sBAAAA,oBAAoB,EAAE,EArCf;AAsCPC,sBAAAA,UAAU,EAAE;AACV5J,wBAAAA,IAAI,EAAE,WADI;AAEVE,wBAAAA,OAAO,EAAE;AACP2J,0BAAAA,MAAM,EAAE,EADD;AAEP9I,0BAAAA,IAAI,EAAE,EAFC;AAGP0F,0BAAAA,OAAO,EAAE;AAHF;AAFC,uBAtCL;AA8CPxC,sBAAAA,cAAc,EAAE,EA9CT;AA+CP6F,sBAAAA,kBAAkB,EAAE,EA/Cb;AAgDPC,sBAAAA,gBAAgB,EAAE;AAChB1J,wBAAAA,KAAK,EAAE;AADS,uBAhDX;AAmDP2J,sBAAAA,wBAAwB,EAAE,EAnDnB;AAoDPC,sBAAAA,wBAAwB,EAAE,EApDnB;AAqDPrG,sBAAAA,UAAU,EAAE,EArDL;AAsDPvB,sBAAAA,OAAO,EAAE,EAtDF;AAuDP+E,sBAAAA,MAAM,EAAE,EAvDD;AAwDPrD,sBAAAA,QAAQ,EAAE,EAxDH;AAyDPM,sBAAAA,OAAO,EAAE,EAzDF;AA0DPP,sBAAAA,kBAAkB,EAAE;AA1Db;AAFH;AAFC;AADJ;AAFH;AAXS,WAjuBT;AAozBVoG,UAAAA,cAAc,EAAE;AACdnK,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPjC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,KAAK,EAAE;AADC;AAFH;AAFJ,aADO;AAUd+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiK,gBAAAA,MAAM,EAAE;AACNnK,kBAAAA,IAAI,EAAE,MADA;AAENwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP6I,sBAAAA,GAAG,EAAE,EADE;AAEP1G,sBAAAA,OAAO,EAAE,EAFF;AAGPzB,sBAAAA,OAAO,EAAE,EAHF;AAIP8B,sBAAAA,IAAI,EAAE,EAJC;AAKP3B,sBAAAA,IAAI,EAAE,EALC;AAMPwB,sBAAAA,SAAS,EAAE,EANJ;AAOPrB,sBAAAA,UAAU,EAAE;AACVb,wBAAAA,KAAK,EAAE;AADG,uBAPL;AAUPkE,sBAAAA,2BAA2B,EAAE;AAC3BlE,wBAAAA,KAAK,EAAE;AADoB,uBAVtB;AAaPmE,sBAAAA,wBAAwB,EAAE,EAbnB;AAcP/C,sBAAAA,UAAU,EAAE,EAdL;AAePgD,sBAAAA,sBAAsB,EAAE;AACtBpE,wBAAAA,KAAK,EAAE;AADe,uBAfjB;AAkBP+J,sBAAAA,yBAAyB,EAAE;AACzB/J,wBAAAA,KAAK,EAAE;AADkB,uBAlBpB;AAqBPqE,sBAAAA,QAAQ,EAAE;AACRrE,wBAAAA,KAAK,EAAE;AADC,uBArBH;AAwBPsE,sBAAAA,oBAAoB,EAAE;AACpBtE,wBAAAA,KAAK,EAAE;AADa,uBAxBf;AA2BPuE,sBAAAA,iBAAiB,EAAE;AACjB5E,wBAAAA,IAAI,EAAE;AADW,uBA3BZ;AA8BP6E,sBAAAA,oBAAoB,EAAE;AACpB7E,wBAAAA,IAAI,EAAE;AADc,uBA9Bf;AAiCP8E,sBAAAA,mBAAmB,EAAE;AACnB9E,wBAAAA,IAAI,EAAE;AADa,uBAjCd;AAoCPqK,sBAAAA,cAAc,EAAE;AACdhK,wBAAAA,KAAK,EAAE;AADO,uBApCT;AAuCP0E,sBAAAA,aAAa,EAAE;AACb1E,wBAAAA,KAAK,EAAE;AADM,uBAvCR;AA0CPwG,sBAAAA,SAAS,EAAE,EA1CJ;AA2CP1C,sBAAAA,oBAAoB,EAAE;AACpBnE,wBAAAA,IAAI,EAAE;AADc,uBA3Cf;AA8CPgF,sBAAAA,wBAAwB,EAAE;AACxBhF,wBAAAA,IAAI,EAAE;AADkB,uBA9CnB;AAiDPiF,sBAAAA,2BAA2B,EAAE;AAC3B5E,wBAAAA,KAAK,EAAE;AADoB;AAjDtB;AAFH;AAFF;AADD;AAFH;AAVM,WApzBN;AA+3BViK,UAAAA,4BAA4B,EAAE;AAC5BvK,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPE,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,KAAK,EAAE;AADC;AADH;AALJ,aADqB;AAY5B+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqK,gBAAAA,kCAAkC,EAAE;AAClCvK,kBAAAA,IAAI,EAAE,MAD4B;AAElCwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPU,sBAAAA,OAAO,EAAE,EADF;AAEP4J,sBAAAA,MAAM,EAAE;AACNxK,wBAAAA,IAAI,EAAE;AADA,uBAFD;AAKPyK,sBAAAA,SAAS,EAAE;AACTpK,wBAAAA,KAAK,EAAE;AADE,uBALJ;AAQPqK,sBAAAA,WAAW,EAAE;AACXrK,wBAAAA,KAAK,EAAE;AADI;AARN;AAFH;AAF0B;AAD7B;AAFH;AAZoB,WA/3BpB;AAm6BVsK,UAAAA,qBAAqB,EAAE;AACrBvI,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP0K,gBAAAA,WAAW,EAAE;AACX5K,kBAAAA,IAAI,EAAE,WADK;AAEXE,kBAAAA,OAAO,EAAE;AACPkF,oBAAAA,UAAU,EAAE,EADL;AAEPrE,oBAAAA,IAAI,EAAE,EAFC;AAGPsE,oBAAAA,WAAW,EAAE,EAHN;AAIPC,oBAAAA,YAAY,EAAE;AAJP;AAFE;AADN;AAFH;AADa,WAn6Bb;AAm7BVuF,UAAAA,wBAAwB,EAAE;AACxBzI,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP4K,gBAAAA,gBAAgB,EAAE;AAChB9K,kBAAAA,IAAI,EAAE,MADU;AAEhBwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPa,sBAAAA,IAAI,EAAE,EADC;AAEPgK,sBAAAA,EAAE,EAAE,EAFG;AAGPrI,sBAAAA,IAAI,EAAE,EAHC;AAIPsI,sBAAAA,qBAAqB,EAAE;AACrBhL,wBAAAA,IAAI,EAAE,MADe;AAErBwG,wBAAAA,MAAM,EAAE;AACNxG,0BAAAA,IAAI,EAAE,WADA;AAENE,0BAAAA,OAAO,EAAE;AACPa,4BAAAA,IAAI,EAAE,EADC;AAEP0F,4BAAAA,OAAO,EAAE;AAFF;AAFH;AAFa,uBAJhB;AAcPwE,sBAAAA,YAAY,EAAE,EAdP;AAePC,sBAAAA,eAAe,EAAE,EAfV;AAgBPC,sBAAAA,SAAS,EAAE;AACTnL,wBAAAA,IAAI,EAAE;AADG;AAhBJ;AAFH;AAFQ;AADX;AAFH;AADgB,WAn7BhB;AAo9BVoL,UAAAA,mBAAmB,EAAE;AACnBrL,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPkF,gBAAAA,UAAU,EAAE,EADL;AAEP/C,gBAAAA,OAAO,EAAE;AAFF;AAFJ,aADY;AAQnBD,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmL,gBAAAA,WAAW,EAAE;AACXrL,kBAAAA,IAAI,EAAE,MADK;AAEXwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPmC,sBAAAA,OAAO,EAAE,EADF;AAEP+C,sBAAAA,UAAU,EAAE,EAFL;AAGPkG,sBAAAA,QAAQ,EAAE;AACRtL,wBAAAA,IAAI,EAAE;AADE,uBAHH;AAMPuL,sBAAAA,SAAS,EAAE;AACTvL,wBAAAA,IAAI,EAAE;AADG,uBANJ;AASPwL,sBAAAA,KAAK,EAAE;AATA;AAFH;AAFG;AADN;AAFH;AARW,WAp9BX;AAm/BVC,UAAAA,kBAAkB,EAAE;AAClB1L,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE,EADL;AAEPkC,gBAAAA,OAAO,EAAE,EAFF;AAGPqJ,gBAAAA,YAAY,EAAE;AACZrL,kBAAAA,KAAK,EAAE;AADK;AAHP;AAFJ,aADW;AAWlB+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPyL,gBAAAA,UAAU,EAAE;AACV3L,kBAAAA,IAAI,EAAE,MADI;AAEVwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP0L,sBAAAA,WAAW,EAAE,EADN;AAEPzL,sBAAAA,UAAU,EAAE,EAFL;AAGPY,sBAAAA,IAAI,EAAE,EAHC;AAIP8K,sBAAAA,SAAS,EAAE;AACT7L,wBAAAA,IAAI,EAAE;AADG,uBAJJ;AAOP8L,sBAAAA,aAAa,EAAE;AACb9L,wBAAAA,IAAI,EAAE;AADO,uBAPR;AAUP+L,sBAAAA,IAAI,EAAE;AACJ/L,wBAAAA,IAAI,EAAE;AADF,uBAVC;AAaPgM,sBAAAA,MAAM,EAAE,EAbD;AAcPC,sBAAAA,UAAU,EAAE,EAdL;AAePpI,sBAAAA,gBAAgB,EAAE,EAfX;AAgBPgD,sBAAAA,SAAS,EAAE,EAhBJ;AAiBPxE,sBAAAA,OAAO,EAAE,EAjBF;AAkBP6J,sBAAAA,UAAU,EAAE,EAlBL;AAmBPC,sBAAAA,IAAI,EAAE;AACJnM,wBAAAA,IAAI,EAAE;AADF;AAnBC;AAFH;AAFE;AADL;AAFH;AAXU,WAn/BV;AAiiCVoM,UAAAA,sBAAsB,EAAE;AACtBrM,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPgK,gBAAAA,iBAAiB,EAAE;AACjBhM,kBAAAA,KAAK,EAAE;AADU;AAFZ;AALJ,aADe;AAatB+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPoM,gBAAAA,cAAc,EAAE;AACdtM,kBAAAA,IAAI,EAAE,MADQ;AAEdwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkG,sBAAAA,gBAAgB,EAAE,EADX;AAEPmG,sBAAAA,oBAAoB,EAAE,EAFf;AAGPC,sBAAAA,MAAM,EAAE,EAHD;AAIPC,sBAAAA,UAAU,EAAE,EAJL;AAKPzL,sBAAAA,MAAM,EAAE,EALD;AAMP0L,sBAAAA,OAAO,EAAE,EANF;AAOPC,sBAAAA,MAAM,EAAE,EAPD;AAQPtK,sBAAAA,OAAO,EAAE,EARF;AASPuK,sBAAAA,YAAY,EAAE;AACZ5M,wBAAAA,IAAI,EAAE;AADM;AATP;AAFH;AAFM;AADT;AAFH;AAbc,WAjiCd;AAukCV6M,UAAAA,qBAAqB,EAAE;AACrB9M,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPlC,gBAAAA,UAAU,EAAE,EAFL;AAGP2M,gBAAAA,eAAe,EAAE;AACfzM,kBAAAA,KAAK,EAAE;AADQ;AAHV;AAFJ,aADc;AAWrB+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP6M,gBAAAA,aAAa,EAAE;AACb/M,kBAAAA,IAAI,EAAE,MADO;AAEbwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP8M,sBAAAA,cAAc,EAAE,EADT;AAEP3K,sBAAAA,OAAO,EAAE,EAFF;AAGPlC,sBAAAA,UAAU,EAAE,EAHL;AAIPuC,sBAAAA,IAAI,EAAE,EAJC;AAKPuK,sBAAAA,OAAO,EAAE,EALF;AAMPpG,sBAAAA,SAAS,EAAE;AANJ;AAFH;AAFK;AADR;AAFH;AAXa,WAvkCb;AAsmCVqG,UAAAA,mCAAmC,EAAE;AACnCnN,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE;AADF;AALJ,aAD4B;AAUnCD,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiN,gBAAAA,iBAAiB,EAAE,EADZ;AAEPC,gBAAAA,UAAU,EAAE;AACVpN,kBAAAA,IAAI,EAAE,KADI;AAEVqN,kBAAAA,GAAG,EAAE,EAFK;AAGVC,kBAAAA,KAAK,EAAE;AAHG;AAFL;AAFH;AAV2B,WAtmC3B;AA4nCVC,UAAAA,oBAAoB,EAAE;AACpBxN,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE;AADF;AALJ,aADa;AAUpBD,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPsN,gBAAAA,YAAY,EAAE;AACZxN,kBAAAA,IAAI,EAAE,WADM;AAEZE,kBAAAA,OAAO,EAAE;AACPmC,oBAAAA,OAAO,EAAE,EADF;AAEPtB,oBAAAA,IAAI,EAAE,EAFC;AAGPgI,oBAAAA,GAAG,EAAE,EAHE;AAIP0E,oBAAAA,WAAW,EAAE;AACXzN,sBAAAA,IAAI,EAAE;AADK,qBAJN;AAOP0N,oBAAAA,SAAS,EAAE;AACT1N,sBAAAA,IAAI,EAAE;AADG,qBAPJ;AAUP2N,oBAAAA,cAAc,EAAE;AACd3N,sBAAAA,IAAI,EAAE,WADQ;AAEdE,sBAAAA,OAAO,EAAE;AACP0N,wBAAAA,SAAS,EAAE;AACT5N,0BAAAA,IAAI,EAAE;AADG,yBADJ;AAIP6N,wBAAAA,OAAO,EAAE;AACP7N,0BAAAA,IAAI,EAAE;AADC,yBAJF;AAOP8N,wBAAAA,cAAc,EAAE;AACd9N,0BAAAA,IAAI,EAAE;AADQ,yBAPT;AAUP+N,wBAAAA,aAAa,EAAE;AACb/N,0BAAAA,IAAI,EAAE;AADO,yBAVR;AAaPgO,wBAAAA,MAAM,EAAE;AACNhO,0BAAAA,IAAI,EAAE;AADA,yBAbD;AAgBPiO,wBAAAA,OAAO,EAAE;AACPjO,0BAAAA,IAAI,EAAE;AADC,yBAhBF;AAmBPkO,wBAAAA,SAAS,EAAE;AACTlO,0BAAAA,IAAI,EAAE;AADG,yBAnBJ;AAsBPmO,wBAAAA,UAAU,EAAE;AACVnO,0BAAAA,IAAI,EAAE;AADI,yBAtBL;AAyBPoO,wBAAAA,WAAW,EAAE;AACXpO,0BAAAA,IAAI,EAAE;AADK,yBAzBN;AA4BPqO,wBAAAA,SAAS,EAAE;AACTrO,0BAAAA,IAAI,EAAE;AADG,yBA5BJ;AA+BPsO,wBAAAA,YAAY,EAAE;AACZtO,0BAAAA,IAAI,EAAE;AADM,yBA/BP;AAkCPuO,wBAAAA,WAAW,EAAE;AACXvO,0BAAAA,IAAI,EAAE;AADK,yBAlCN;AAqCPwO,wBAAAA,YAAY,EAAE;AACZxO,0BAAAA,IAAI,EAAE;AADM,yBArCP;AAwCPyO,wBAAAA,WAAW,EAAE;AACXzO,0BAAAA,IAAI,EAAE;AADK,yBAxCN;AA2CP0O,wBAAAA,UAAU,EAAE;AACV1O,0BAAAA,IAAI,EAAE;AADI,yBA3CL;AA8CP2O,wBAAAA,OAAO,EAAE;AACP3O,0BAAAA,IAAI,EAAE;AADC,yBA9CF;AAiDP4O,wBAAAA,QAAQ,EAAE;AACR5O,0BAAAA,IAAI,EAAE;AADE,yBAjDH;AAoDP6O,wBAAAA,UAAU,EAAE;AACV7O,0BAAAA,IAAI,EAAE;AADI,yBApDL;AAuDP8O,wBAAAA,WAAW,EAAE;AACX9O,0BAAAA,IAAI,EAAE;AADK,yBAvDN;AA0DP+O,wBAAAA,WAAW,EAAE;AACX/O,0BAAAA,IAAI,EAAE;AADK;AA1DN;AAFK;AAVT;AAFG;AADP;AAFH;AAVY,WA5nCZ;AA2tCVgP,UAAAA,cAAc,EAAE;AACdjP,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP+O,gBAAAA,QAAQ,EAAE;AACR5O,kBAAAA,KAAK,EAAE;AADC;AADH;AAFJ,aADO;AASd+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPgP,gBAAAA,MAAM,EAAE;AACNlP,kBAAAA,IAAI,EAAE,MADA;AAENwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPmC,sBAAAA,OAAO,EAAE,EADF;AAEPtB,sBAAAA,IAAI,EAAE,EAFC;AAGPgI,sBAAAA,GAAG,EAAE,EAHE;AAIP/H,sBAAAA,MAAM,EAAE,EAJD;AAKPC,sBAAAA,KAAK,EAAE,EALA;AAMPC,sBAAAA,UAAU,EAAE;AACVb,wBAAAA,KAAK,EAAE;AADG,uBANL;AASPc,sBAAAA,cAAc,EAAE,EATT;AAUPC,sBAAAA,yBAAyB,EAAE,EAVpB;AAWPC,sBAAAA,SAAS,EAAE,EAXJ;AAYPC,sBAAAA,aAAa,EAAE,EAZR;AAaPC,sBAAAA,uBAAuB,EAAE,EAblB;AAcPC,sBAAAA,eAAe,EAAE,EAdV;AAePC,sBAAAA,UAAU,EAAE,EAfL;AAgBPC,sBAAAA,oBAAoB,EAAE;AACpBrB,wBAAAA,KAAK,EAAE;AADa,uBAhBf;AAmBPsB,sBAAAA,iBAAiB,EAAE;AACjBtB,wBAAAA,KAAK,EAAE;AADU,uBAnBZ;AAsBPuB,sBAAAA,kBAAkB,EAAE;AAClB5B,wBAAAA,IAAI,EAAE;AADY,uBAtBb;AAyBP6B,sBAAAA,yBAAyB,EAAE;AACzB7B,wBAAAA,IAAI,EAAE;AADmB,uBAzBpB;AA4BP8B,sBAAAA,qBAAqB,EAAE;AACrBzB,wBAAAA,KAAK,EAAE;AADc,uBA5BhB;AA+BP0B,sBAAAA,iBAAiB,EAAE,EA/BZ;AAgCP8E,sBAAAA,SAAS,EAAE,EAhCJ;AAiCP3E,sBAAAA,qBAAqB,EAAE,EAjChB;AAkCPC,sBAAAA,YAAY,EAAE;AAlCP;AAFH;AAFF;AADD;AAFH;AATM,WA3tCN;AAoxCVgN,UAAAA,4BAA4B,EAAE;AAC5BpP,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPgD,gBAAAA,WAAW,EAAE;AACX7C,kBAAAA,KAAK,EAAE;AADI;AADN;AALJ,aADqB;AAY5B+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPkP,gBAAAA,kCAAkC,EAAE;AAClCpP,kBAAAA,IAAI,EAAE,MAD4B;AAElCwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPC,sBAAAA,UAAU,EAAE,EADL;AAEPkP,sBAAAA,mBAAmB,EAAE;AACnBhP,wBAAAA,KAAK,EAAE;AADY;AAFd;AAFH;AAF0B;AAD7B;AAFH;AAZoB,WApxCpB;AAkzCViP,UAAAA,oBAAoB,EAAE;AACpBvP,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPqP,gBAAAA,WAAW,EAAE;AACXlP,kBAAAA,KAAK,EAAE;AADI;AADN;AAFJ,aADa;AASpB+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPsP,gBAAAA,YAAY,EAAE;AACZxP,kBAAAA,IAAI,EAAE,MADM;AAEZwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkF,sBAAAA,UAAU,EAAE,EADL;AAEPrE,sBAAAA,IAAI,EAAE,EAFC;AAGPsE,sBAAAA,WAAW,EAAE,EAHN;AAIPC,sBAAAA,YAAY,EAAE,EAJP;AAKPC,sBAAAA,mBAAmB,EAAE;AACnBvF,wBAAAA,IAAI,EAAE;AADa;AALd;AAFH;AAFI;AADP;AAFH;AATY,WAlzCZ;AAg1CVyP,UAAAA,eAAe,EAAE;AACf1P,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE,EADL;AAEPkC,gBAAAA,OAAO,EAAE,EAFF;AAGPuJ,gBAAAA,WAAW,EAAE,EAHN;AAIP8D,gBAAAA,SAAS,EAAE;AACTrP,kBAAAA,KAAK,EAAE;AADE;AAJJ;AAFJ,aADQ;AAYf+B,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPyP,gBAAAA,OAAO,EAAE;AACP3P,kBAAAA,IAAI,EAAE,MADC;AAEPwG,kBAAAA,MAAM,EAAE;AACNxG,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPK,sBAAAA,QAAQ,EAAE,EADH;AAEPqP,sBAAAA,WAAW,EAAE,EAFN;AAGP7O,sBAAAA,IAAI,EAAE,EAHC;AAIP6K,sBAAAA,WAAW,EAAE,EAJN;AAKPzL,sBAAAA,UAAU,EAAE,EALL;AAMPiH,sBAAAA,MAAM,EAAE,EAND;AAOP2E,sBAAAA,IAAI,EAAE;AACJ/L,wBAAAA,IAAI,EAAE;AADF,uBAPC;AAUPgM,sBAAAA,MAAM,EAAE,EAVD;AAWPC,sBAAAA,UAAU,EAAE,EAXL;AAYPjL,sBAAAA,MAAM,EAAE,EAZD;AAaP6C,sBAAAA,gBAAgB,EAAE,EAbX;AAcPqI,sBAAAA,UAAU,EAAE,EAdL;AAePC,sBAAAA,IAAI,EAAE;AACJnM,wBAAAA,IAAI,EAAE;AADF,uBAfC;AAkBP6P,sBAAAA,SAAS,EAAE;AACT7P,wBAAAA,IAAI,EAAE;AADG;AAlBJ;AAFH;AAFD;AADF;AAFH;AAZO,WAh1CP;AA83CV8P,UAAAA,yBAAyB,EAAE;AACzB/P,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,yBADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPS,gBAAAA,uBAAuB,EAAE,EADlB;AAEPC,gBAAAA,OAAO,EAAE;AAFF;AANJ;AADkB,WA93CjB;AA24CVmP,UAAAA,qBAAqB,EAAE;AACrBhQ,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPO,gBAAAA,SAAS,EAAE;AADJ;AALJ;AADc,WA34Cb;AAs5CVuP,UAAAA,qBAAqB,EAAE;AACrBjQ,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPU,gBAAAA,OAAO,EAAE;AADF;AALJ,aADc;AAUrBwB,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPU,gBAAAA,OAAO,EAAE,EADF;AAEP6C,gBAAAA,QAAQ,EAAE;AAFH;AAFH;AAVa,WAt5Cb;AAw6CVwM,UAAAA,WAAW,EAAE;AACXlQ,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE,EADL;AAEP+P,gBAAAA,iBAAiB,EAAE;AACjBlQ,kBAAAA,IAAI,EAAE;AADW;AAFZ;AALJ,aADI;AAaXoC,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiQ,gBAAAA,mBAAmB,EAAE;AACnBnQ,kBAAAA,IAAI,EAAE,WADa;AAEnBE,kBAAAA,OAAO,EAAE;AACPkQ,oBAAAA,QAAQ,EAAE,EADH;AAEPC,oBAAAA,QAAQ,EAAE,EAFH;AAGPH,oBAAAA,iBAAiB,EAAE;AACjBlQ,sBAAAA,IAAI,EAAE;AADW,qBAHZ;AAMPG,oBAAAA,UAAU,EAAE;AANL;AAFU;AADd;AAFH;AAbG,WAx6CH;AAs8CVmQ,UAAAA,QAAQ,EAAE;AACRvQ,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPqQ,gBAAAA,WAAW,EAAE,EADN;AAEPzI,gBAAAA,UAAU,EAAE;AACV9H,kBAAAA,IAAI,EAAE;AADI,iBAFL;AAKP6H,gBAAAA,SAAS,EAAE;AALJ;AALJ,aADC;AAcRzF,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPsQ,gBAAAA,IAAI,EAAE;AACJnQ,kBAAAA,KAAK,EAAE;AADH,iBADC;AAIPwH,gBAAAA,SAAS,EAAE;AAJJ;AAFH;AAdA,WAt8CA;AA89CV4I,UAAAA,cAAc,EAAE;AACd1Q,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AADL;AALJ;AADO,WA99CN;AAy+CVuQ,UAAAA,kBAAkB,EAAE;AAClB3Q,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACP8F,gBAAAA,aAAa,EAAE,EADR;AAEP3D,gBAAAA,OAAO,EAAE;AAFF;AANJ,aADW;AAYlBD,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP8F,gBAAAA,aAAa,EAAE;AADR;AAFH;AAZU,WAz+CV;AA4/CV2K,UAAAA,iBAAiB,EAAE;AACjB5Q,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPO,gBAAAA,SAAS,EAAE,EADJ;AAEP4B,gBAAAA,OAAO,EAAE;AAFF;AANJ,aADU;AAYjBD,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPO,gBAAAA,SAAS,EAAE;AADJ;AAFH;AAZS,WA5/CT;AA+gDVmQ,UAAAA,gBAAgB,EAAE;AAChB7Q,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPoB,gBAAAA,QAAQ,EAAE,EAFH;AAGPgG,gBAAAA,QAAQ,EAAE,EAHH;AAIPF,gBAAAA,SAAS,EAAE,EAJJ;AAKPsH,gBAAAA,YAAY,EAAE,EALP;AAMPC,gBAAAA,uBAAuB,EAAE,EANlB;AAOPC,gBAAAA,gBAAgB,EAAE;AAChB/Q,kBAAAA,IAAI,EAAE,WADU;AAEhBE,kBAAAA,OAAO,EAAE;AACP8Q,oBAAAA,QAAQ,EAAE,EADH;AAEPC,oBAAAA,SAAS,EAAE;AAFJ;AAFO;AAPX;AALJ,aADS;AAsBhB7O,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AADL;AAFH;AAtBQ,WA/gDR;AA4iDV+Q,UAAAA,qBAAqB,EAAE;AACrBnR,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,kBAFQ,EAGR,QAHQ,EAIR,YAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEP+D,gBAAAA,gBAAgB,EAAE,EAFX;AAGPoG,gBAAAA,MAAM,EAAE,EAHD;AAIPC,gBAAAA,UAAU,EAAE;AAJL;AARJ;AADc,WA5iDb;AA6jDV0E,UAAAA,cAAc,EAAE;AACdpR,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP0P,gBAAAA,WAAW,EAAE,EADN;AAEPvN,gBAAAA,OAAO,EAAE;AAFF;AALJ,aADO;AAWdD,YAAAA,MAAM,EAAE;AACNpC,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPK,gBAAAA,QAAQ,EAAE;AADH;AAFH;AAXM,WA7jDN;AA+kDV6Q,UAAAA,uBAAuB,EAAE;AACvBrR,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPU,gBAAAA,OAAO,EAAE,EADF;AAEP4J,gBAAAA,MAAM,EAAE;AACNxK,kBAAAA,IAAI,EAAE;AADA,iBAFD;AAKPyK,gBAAAA,SAAS,EAAE;AACTpK,kBAAAA,KAAK,EAAE;AADE,iBALJ;AAQPqK,gBAAAA,WAAW,EAAE;AACXrK,kBAAAA,KAAK,EAAE;AADI;AARN;AALJ;AADgB,WA/kDf;AAmmDVgR,UAAAA,aAAa,EAAE;AACbtR,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,YAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEP+C,gBAAAA,UAAU,EAAE,EAFL;AAGPkG,gBAAAA,QAAQ,EAAE;AACRtL,kBAAAA,IAAI,EAAE;AADE,iBAHH;AAMPuL,gBAAAA,SAAS,EAAE;AACTvL,kBAAAA,IAAI,EAAE;AADG,iBANJ;AASPwL,gBAAAA,KAAK,EAAE;AATA;AANJ;AADM,WAnmDL;AAunDV8F,UAAAA,uBAAuB,EAAE;AACvBvR,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE,EADL;AAEPkP,gBAAAA,mBAAmB,EAAE;AACnBhP,kBAAAA,KAAK,EAAE;AADY;AAFd;AALJ;AADgB,WAvnDf;AAqoDVkR,UAAAA,aAAa,EAAE;AACbxR,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AADL;AALJ;AADM,WAroDL;AAgpDVqR,UAAAA,UAAU,EAAE;AACVzR,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE;AADF;AALJ;AADG,WAhpDF;AA2pDVoP,UAAAA,YAAY,EAAE;AACZ1R,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE,EADL;AAEPuR,gBAAAA,KAAK,EAAE;AACL1R,kBAAAA,IAAI,EAAE;AADD;AAFA;AALJ;AADK,WA3pDJ;AAyqDV2R,UAAAA,SAAS,EAAE;AACT5R,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE;AADF;AALJ;AADE,WAzqDD;AAorDVuP,UAAAA,WAAW,EAAE;AACX7R,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,MAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPqQ,gBAAAA,WAAW,EAAE,EADN;AAEPC,gBAAAA,IAAI,EAAE;AACJnQ,kBAAAA,KAAK,EAAE;AADH;AAFC;AANJ;AADI,WAprDH;AAmsDVwR,UAAAA,gBAAgB,EAAE;AAChB9R,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AADL;AALJ;AADS,WAnsDR;AA8sDV2R,UAAAA,cAAc,EAAE;AACd/R,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPK,gBAAAA,QAAQ,EAAE;AADH;AALJ;AADO,WA9sDN;AAytDVwR,UAAAA,aAAa,EAAE;AACbhS,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPqQ,gBAAAA,WAAW,EAAE,EADN;AAEPyB,gBAAAA,OAAO,EAAE;AACPhS,kBAAAA,IAAI,EAAE,MADC;AAEPwG,kBAAAA,MAAM,EAAE;AAFD;AAFF;AANJ;AADM,WAztDL;AAyuDVyL,UAAAA,SAAS,EAAE;AACTlS,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,OADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP8C,gBAAAA,KAAK,EAAE,EADA;AAEPjC,gBAAAA,IAAI,EAAE,EAFC;AAGPyB,gBAAAA,WAAW,EAAE,EAHN;AAIPC,gBAAAA,WAAW,EAAE;AACXpC,kBAAAA,KAAK,EAAE;AADI,iBAJN;AAOPqC,gBAAAA,IAAI,EAAE,EAPC;AAQPC,gBAAAA,SAAS,EAAE;AACTtC,kBAAAA,KAAK,EAAE;AADE,iBARJ;AAWPuC,gBAAAA,OAAO,EAAE;AACPvC,kBAAAA,KAAK,EAAE;AADA,iBAXF;AAcPwC,gBAAAA,SAAS,EAAE;AACT7C,kBAAAA,IAAI,EAAE;AADG,iBAdJ;AAiBP8C,gBAAAA,gBAAgB,EAAE;AAChBzC,kBAAAA,KAAK,EAAE;AADS,iBAjBX;AAoBPa,gBAAAA,UAAU,EAAE;AACVb,kBAAAA,KAAK,EAAE;AADG,iBApBL;AAuBP0C,gBAAAA,WAAW,EAAE;AACX1C,kBAAAA,KAAK,EAAE;AADI;AAvBN;AALJ;AADE,WAzuDD;AA4wDV6R,UAAAA,eAAe,EAAE;AACfnS,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPO,gBAAAA,SAAS,EAAE,EADJ;AAEPM,gBAAAA,IAAI,EAAE;AAFC;AALJ;AADQ,WA5wDP;AAwxDVoR,UAAAA,cAAc,EAAE;AACdpS,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE,EADL;AAEPC,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,KAAK,EAAE;AADC,iBAFH;AAKPkD,gBAAAA,YAAY,EAAE,EALP;AAMPC,gBAAAA,eAAe,EAAE,EANV;AAOPC,gBAAAA,QAAQ,EAAE,EAPH;AAQPC,gBAAAA,EAAE,EAAE,EARG;AASPC,gBAAAA,KAAK,EAAE,EATA;AAUPC,gBAAAA,UAAU,EAAE,EAVL;AAWPI,gBAAAA,YAAY,EAAE,EAXP;AAYPG,gBAAAA,oBAAoB,EAAE;AACpBnE,kBAAAA,IAAI,EAAE;AADc,iBAZf;AAePoE,gBAAAA,YAAY,EAAE;AACZpE,kBAAAA,IAAI,EAAE;AADM,iBAfP;AAkBPmC,gBAAAA,YAAY,EAAE;AAlBP;AALJ;AADO,WAxxDN;AAozDViQ,UAAAA,WAAW,EAAE;AACXrS,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPU,gBAAAA,OAAO,EAAE,EADF;AAEPG,gBAAAA,IAAI,EAAE,EAFC;AAGPwB,gBAAAA,SAAS,EAAE,EAHJ;AAIPrB,gBAAAA,UAAU,EAAE;AACVb,kBAAAA,KAAK,EAAE;AADG,iBAJL;AAOPkE,gBAAAA,2BAA2B,EAAE;AAC3BlE,kBAAAA,KAAK,EAAE;AADoB,iBAPtB;AAUPmE,gBAAAA,wBAAwB,EAAE,EAVnB;AAWP/C,gBAAAA,UAAU,EAAE,EAXL;AAYPgD,gBAAAA,sBAAsB,EAAE;AACtBpE,kBAAAA,KAAK,EAAE;AADe,iBAZjB;AAePqE,gBAAAA,QAAQ,EAAE;AACRrE,kBAAAA,KAAK,EAAE;AADC,iBAfH;AAkBPsE,gBAAAA,oBAAoB,EAAE;AACpBtE,kBAAAA,KAAK,EAAE;AADa,iBAlBf;AAqBPuE,gBAAAA,iBAAiB,EAAE;AACjB5E,kBAAAA,IAAI,EAAE;AADW,iBArBZ;AAwBP6E,gBAAAA,oBAAoB,EAAE;AACpB7E,kBAAAA,IAAI,EAAE;AADc,iBAxBf;AA2BP8E,gBAAAA,mBAAmB,EAAE;AACnB9E,kBAAAA,IAAI,EAAE;AADa,iBA3Bd;AA8BP+E,gBAAAA,aAAa,EAAE;AACb1E,kBAAAA,KAAK,EAAE;AADM,iBA9BR;AAiCP8D,gBAAAA,oBAAoB,EAAE;AACpBnE,kBAAAA,IAAI,EAAE;AADc,iBAjCf;AAoCPgF,gBAAAA,wBAAwB,EAAE;AACxBhF,kBAAAA,IAAI,EAAE;AADkB,iBApCnB;AAuCPiF,gBAAAA,2BAA2B,EAAE;AAC3B5E,kBAAAA,KAAK,EAAE;AADoB;AAvCtB;AALJ;AADI,WApzDH;AAu2DVgS,UAAAA,mBAAmB,EAAE;AACnBtS,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPoF,gBAAAA,YAAY,EAAE;AADP;AAFJ;AADY,WAv2DX;AA+2DVgN,UAAAA,mBAAmB,EAAE;AACnBvS,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,kBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPkG,gBAAAA,gBAAgB,EAAE,EADX;AAEPoG,gBAAAA,MAAM,EAAE,EAFD;AAGPC,gBAAAA,UAAU,EAAE;AAHL;AALJ;AADY,WA/2DX;AA43DV8F,UAAAA,WAAW,EAAE;AACXxS,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,OAAO,EAAE,EADF;AAEPtB,gBAAAA,IAAI,EAAE,EAFC;AAGPG,gBAAAA,UAAU,EAAE;AACVb,kBAAAA,KAAK,EAAE;AADG,iBAHL;AAMPc,gBAAAA,cAAc,EAAE,EANT;AAOPC,gBAAAA,yBAAyB,EAAE,EAPpB;AAQPC,gBAAAA,SAAS,EAAE,EARJ;AASPC,gBAAAA,aAAa,EAAE,EATR;AAUPC,gBAAAA,uBAAuB,EAAE,EAVlB;AAWPC,gBAAAA,eAAe,EAAE,EAXV;AAYPC,gBAAAA,UAAU,EAAE,EAZL;AAaPC,gBAAAA,oBAAoB,EAAE;AACpBrB,kBAAAA,KAAK,EAAE;AADa,iBAbf;AAgBPsB,gBAAAA,iBAAiB,EAAE;AACjBtB,kBAAAA,KAAK,EAAE;AADU,iBAhBZ;AAmBPuB,gBAAAA,kBAAkB,EAAE;AAClB5B,kBAAAA,IAAI,EAAE;AADY,iBAnBb;AAsBP8B,gBAAAA,qBAAqB,EAAE;AACrBzB,kBAAAA,KAAK,EAAE;AADc,iBAtBhB;AAyBP0B,gBAAAA,iBAAiB,EAAE,EAzBZ;AA0BPG,gBAAAA,qBAAqB,EAAE,EA1BhB;AA2BPL,gBAAAA,yBAAyB,EAAE;AACzB7B,kBAAAA,IAAI,EAAE;AADmB,iBA3BpB;AA8BPmC,gBAAAA,YAAY,EAAE;AA9BP;AALJ;AADI,WA53DH;AAo6DVqQ,UAAAA,iBAAiB,EAAE;AACjBzS,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPkF,gBAAAA,UAAU,EAAE,EADL;AAEPC,gBAAAA,WAAW,EAAE,EAFN;AAGPC,gBAAAA,YAAY,EAAE,EAHP;AAIPC,gBAAAA,mBAAmB,EAAE;AACnBvF,kBAAAA,IAAI,EAAE;AADa;AAJd;AALJ;AADU,WAp6DT;AAo7DVyS,UAAAA,YAAY,EAAE;AACZ1S,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,UADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPK,gBAAAA,QAAQ,EAAE,EADH;AAEPQ,gBAAAA,IAAI,EAAE,EAFC;AAGPkL,gBAAAA,UAAU,EAAE;AAHL;AALJ;AADK;AAp7DJ,SAhBC;AAk9DbyG,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACF3S,YAAAA,IAAI,EAAE,MADJ;AAEFwG,YAAAA,MAAM,EAAE;AAFN,WADE;AAKNoM,UAAAA,EAAE,EAAE;AACF5S,YAAAA,IAAI,EAAE,KADJ;AAEFqN,YAAAA,GAAG,EAAE,EAFH;AAGFC,YAAAA,KAAK,EAAE;AAHL,WALE;AAUNuF,UAAAA,EAAE,EAAE;AACF7S,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACPa,cAAAA,IAAI,EAAE,EADC;AAEP0F,cAAAA,OAAO,EAAE;AAFF;AAFP,WAVE;AAiBNqM,UAAAA,EAAE,EAAE;AACF9S,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACP6S,cAAAA,eAAe,EAAE;AACf/S,gBAAAA,IAAI,EAAE;AADS,eADV;AAIPgT,cAAAA,gBAAgB,EAAE;AAJX;AAFP,WAjBE;AA0BNC,UAAAA,EAAE,EAAE;AACFjT,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACPwC,cAAAA,IAAI,EAAE,EADC;AAEPwQ,cAAAA,GAAG,EAAE,EAFE;AAGP9C,cAAAA,QAAQ,EAAE,EAHH;AAIPC,cAAAA,QAAQ,EAAE,EAJH;AAKP8C,cAAAA,MAAM,EAAE,EALD;AAMPC,cAAAA,QAAQ,EAAE;AANH;AAFP,WA1BE;AAqCNC,UAAAA,EAAE,EAAE;AACFrT,YAAAA,IAAI,EAAE,MADJ;AAEFwG,YAAAA,MAAM,EAAE;AACNxG,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPwC,gBAAAA,IAAI,EAAE,EADC;AAEPqG,gBAAAA,GAAG,EAAE,EAFE;AAGPuK,gBAAAA,YAAY,EAAE;AAHP;AAFH;AAFN,WArCE;AAgDNC,UAAAA,EAAE,EAAE;AACFvT,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,aADQ,EAER,YAFQ,CAFR;AAMFC,YAAAA,OAAO,EAAE;AACPsT,cAAAA,WAAW,EAAE,EADN;AAEPC,cAAAA,UAAU,EAAE,EAFL;AAGPC,cAAAA,KAAK,EAAE;AAHA;AANP,WAhDE;AA4DNC,UAAAA,EAAE,EAAE;AACF3T,YAAAA,IAAI,EAAE,KADJ;AAEFqN,YAAAA,GAAG,EAAE,EAFH;AAGFC,YAAAA,KAAK,EAAE;AAHL,WA5DE;AAiENsG,UAAAA,EAAE,EAAE;AACF5T,YAAAA,IAAI,EAAE,MADJ;AAEFwG,YAAAA,MAAM,EAAE;AACNxG,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,KADQ,EAER,OAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACP2T,gBAAAA,GAAG,EAAE,EADE;AAEPC,gBAAAA,KAAK,EAAE,EAFA;AAGPC,gBAAAA,MAAM,EAAE;AACN/T,kBAAAA,IAAI,EAAE;AADA;AAHD;AANH;AAFN,WAjEE;AAkFNgU,UAAAA,EAAE,EAAE;AACFhU,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,MADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACPa,cAAAA,IAAI,EAAE,EADC;AAEPkT,cAAAA,IAAI,EAAE;AACJjU,gBAAAA,IAAI,EAAE,KADF;AAEJqN,gBAAAA,GAAG,EAAE,EAFD;AAGJC,gBAAAA,KAAK,EAAE;AACLjN,kBAAAA,KAAK,EAAE;AADF;AAHH;AAFC;AALP,WAlFE;AAkGN6T,UAAAA,EAAE,EAAE;AACFlU,YAAAA,IAAI,EAAE,MADJ;AAEFwG,YAAAA,MAAM,EAAE;AACNxG,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiU,gBAAAA,UAAU,EAAE,EADL;AAEPC,gBAAAA,QAAQ,EAAE,EAFH;AAGPC,gBAAAA,WAAW,EAAE,EAHN;AAIPC,gBAAAA,GAAG,EAAE;AACHtU,kBAAAA,IAAI,EAAE,WADH;AAEHE,kBAAAA,OAAO,EAAE;AACPqU,oBAAAA,UAAU,EAAE,EADL;AAEPpI,oBAAAA,IAAI,EAAE;AACJnM,sBAAAA,IAAI,EAAE;AADF,qBAFC;AAKPwU,oBAAAA,UAAU,EAAE;AACVxU,sBAAAA,IAAI,EAAE;AADI,qBALL;AAQPkM,oBAAAA,UAAU,EAAE,EARL;AASPuI,oBAAAA,mBAAmB,EAAE;AACnBzU,sBAAAA,IAAI,EAAE;AADa;AATd;AAFN;AAJE;AAFH;AAFN,WAlGE;AA6HN0U,UAAAA,GAAG,EAAE;AACH1U,YAAAA,IAAI,EAAE,KADH;AAEHqN,YAAAA,GAAG,EAAE,EAFF;AAGHC,YAAAA,KAAK,EAAE;AAHJ,WA7HC;AAkINqH,UAAAA,GAAG,EAAE;AACH3U,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP0U,cAAAA,OAAO,EAAE;AACP5U,gBAAAA,IAAI,EAAE;AADC,eADF;AAIP6U,cAAAA,UAAU,EAAE;AACV7U,gBAAAA,IAAI,EAAE,MADI;AAEVwG,gBAAAA,MAAM,EAAE;AACNxG,kBAAAA,IAAI,EAAE,WADA;AAENE,kBAAAA,OAAO,EAAE;AACP4U,oBAAAA,YAAY,EAAE,EADP;AAEPC,oBAAAA,cAAc,EAAE,EAFT;AAGPC,oBAAAA,QAAQ,EAAE,EAHH;AAIPC,oBAAAA,IAAI,EAAE,EAJC;AAKPC,oBAAAA,oBAAoB,EAAE,EALf;AAMPC,oBAAAA,qBAAqB,EAAE,EANhB;AAOPC,oBAAAA,eAAe,EAAE,EAPV;AAQPC,oBAAAA,QAAQ,EAAE,EARH;AASPC,oBAAAA,cAAc,EAAE;AACdtV,sBAAAA,IAAI,EAAE;AADQ,qBATT;AAYPuV,oBAAAA,UAAU,EAAE;AACVvV,sBAAAA,IAAI,EAAE;AADI,qBAZL;AAePwV,oBAAAA,SAAS,EAAE;AACTxV,sBAAAA,IAAI,EAAE;AADG;AAfJ;AAFH;AAFE;AAJL;AAFN,WAlIC;AAmKNyV,UAAAA,GAAG,EAAE;AACHzV,YAAAA,IAAI,EAAE,MADH;AAEHwG,YAAAA,MAAM,EAAE;AACNxG,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,YADQ,EAER,eAFQ,EAGR,MAHQ,CAFJ;AAONC,cAAAA,OAAO,EAAE;AACP+L,gBAAAA,UAAU,EAAE,EADL;AAEPJ,gBAAAA,SAAS,EAAE;AACT7L,kBAAAA,IAAI,EAAE;AADG,iBAFJ;AAKP8L,gBAAAA,aAAa,EAAE;AACb9L,kBAAAA,IAAI,EAAE;AADO,iBALR;AAQP+L,gBAAAA,IAAI,EAAE;AACJ/L,kBAAAA,IAAI,EAAE;AADF,iBARC;AAWPkM,gBAAAA,UAAU,EAAE,EAXL;AAYPC,gBAAAA,IAAI,EAAE;AACJnM,kBAAAA,IAAI,EAAE;AADF,iBAZC;AAeP6P,gBAAAA,SAAS,EAAE;AACT7P,kBAAAA,IAAI,EAAE;AADG;AAfJ;AAPH;AAFL,WAnKC;AAiMN0V,UAAAA,GAAG,EAAE;AACH1V,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPyV,cAAAA,KAAK,EAAE;AACLtV,gBAAAA,KAAK,EAAE;AADF,eADA;AAIPuV,cAAAA,SAAS,EAAE;AACTvV,gBAAAA,KAAK,EAAE;AADE,eAJJ;AAOPwV,cAAAA,MAAM,EAAE;AACNxV,gBAAAA,KAAK,EAAE;AADD,eAPD;AAUPyV,cAAAA,QAAQ,EAAE;AACRzV,gBAAAA,KAAK,EAAE;AADC,eAVH;AAaP0V,cAAAA,QAAQ,EAAE;AACR1V,gBAAAA,KAAK,EAAE;AADC;AAbH;AAFN,WAjMC;AAqNN2V,UAAAA,GAAG,EAAE;AACHhW,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP6V,cAAAA,QAAQ,EAAE;AACR/V,gBAAAA,IAAI,EAAE,WADE;AAERE,gBAAAA,OAAO,EAAE;AACP+V,kBAAAA,gBAAgB,EAAE;AAChBjW,oBAAAA,IAAI,EAAE;AADU,mBADX;AAIPkW,kBAAAA,+BAA+B,EAAE;AAC/BlW,oBAAAA,IAAI,EAAE;AADyB;AAJ1B;AAFD;AADH;AAFN,WArNC;AAqONmW,UAAAA,GAAG,EAAE;AACHnW,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPkW,cAAAA,aAAa,EAAE;AACbpW,gBAAAA,IAAI,EAAE;AADO,eADR;AAIPqW,cAAAA,kBAAkB,EAAE;AAClBrW,gBAAAA,IAAI,EAAE;AADY,eAJb;AAOPsW,cAAAA,iBAAiB,EAAE;AACjBtW,gBAAAA,IAAI,EAAE;AADW,eAPZ;AAUPuW,cAAAA,YAAY,EAAE;AACZvW,gBAAAA,IAAI,EAAE;AADM,eAVP;AAaPwW,cAAAA,eAAe,EAAE;AACfxW,gBAAAA,IAAI,EAAE;AADS,eAbV;AAgBPyW,cAAAA,aAAa,EAAE;AACbzW,gBAAAA,IAAI,EAAE;AADO,eAhBR;AAmBP0W,cAAAA,MAAM,EAAE;AACNrW,gBAAAA,KAAK,EAAE;AADD;AAnBD;AAFN,WArOC;AA+PNsW,UAAAA,GAAG,EAAE;AACH3W,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP0W,cAAAA,MAAM,EAAE;AACNvW,gBAAAA,KAAK,EAAE;AADD,eADD;AAIPwW,cAAAA,OAAO,EAAE;AACPxW,gBAAAA,KAAK,EAAE;AADA,eAJF;AAOPyW,cAAAA,SAAS,EAAE;AACTzW,gBAAAA,KAAK,EAAE;AADE,eAPJ;AAUP0W,cAAAA,QAAQ,EAAE;AACR1W,gBAAAA,KAAK,EAAE;AADC,eAVH;AAaP2W,cAAAA,MAAM,EAAE;AACN3W,gBAAAA,KAAK,EAAE;AADD,eAbD;AAgBP4W,cAAAA,QAAQ,EAAE;AACR5W,gBAAAA,KAAK,EAAE;AADC,eAhBH;AAmBP6W,cAAAA,MAAM,EAAE;AACN7W,gBAAAA,KAAK,EAAE;AADD;AAnBD;AAFN,WA/PC;AAyRN8W,UAAAA,GAAG,EAAE;AACHnX,YAAAA,IAAI,EAAE,KADH;AAEHqN,YAAAA,GAAG,EAAE,EAFF;AAGHC,YAAAA,KAAK,EAAE;AAHJ,WAzRC;AA8RN8J,UAAAA,GAAG,EAAE;AACHpX,YAAAA,IAAI,EAAE,KADH;AAEHqN,YAAAA,GAAG,EAAE,EAFF;AAGHC,YAAAA,KAAK,EAAE;AAHJ;AA9RC;AAl9DK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2013-02-18',\n    endpointPrefix: 'opsworks',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceFullName: 'AWS OpsWorks',\n    serviceId: 'OpsWorks',\n    signatureVersion: 'v4',\n    targetPrefix: 'OpsWorks_20130218',\n    uid: 'opsworks-2013-02-18'\n  },\n  operations: {\n    AssignInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId',\n          'LayerIds'\n        ],\n        members: {\n          InstanceId: {},\n          LayerIds: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    AssignVolume: {\n      input: {\n        type: 'structure',\n        required: [\n          'VolumeId'\n        ],\n        members: {\n          VolumeId: {},\n          InstanceId: {}\n        }\n      }\n    },\n    AssociateElasticIp: {\n      input: {\n        type: 'structure',\n        required: [\n          'ElasticIp'\n        ],\n        members: {\n          ElasticIp: {},\n          InstanceId: {}\n        }\n      }\n    },\n    AttachElasticLoadBalancer: {\n      input: {\n        type: 'structure',\n        required: [\n          'ElasticLoadBalancerName',\n          'LayerId'\n        ],\n        members: {\n          ElasticLoadBalancerName: {},\n          LayerId: {}\n        }\n      }\n    },\n    CloneStack: {\n      input: {\n        type: 'structure',\n        required: [\n          'SourceStackId',\n          'ServiceRoleArn'\n        ],\n        members: {\n          SourceStackId: {},\n          Name: {},\n          Region: {},\n          VpcId: {},\n          Attributes: {\n            shape: 'S8'\n          },\n          ServiceRoleArn: {},\n          DefaultInstanceProfileArn: {},\n          DefaultOs: {},\n          HostnameTheme: {},\n          DefaultAvailabilityZone: {},\n          DefaultSubnetId: {},\n          CustomJson: {},\n          ConfigurationManager: {\n            shape: 'Sa'\n          },\n          ChefConfiguration: {\n            shape: 'Sb'\n          },\n          UseCustomCookbooks: {\n            type: 'boolean'\n          },\n          UseOpsworksSecurityGroups: {\n            type: 'boolean'\n          },\n          CustomCookbooksSource: {\n            shape: 'Sd'\n          },\n          DefaultSshKeyName: {},\n          ClonePermissions: {\n            type: 'boolean'\n          },\n          CloneAppIds: {\n            shape: 'S3'\n          },\n          DefaultRootDeviceType: {},\n          AgentVersion: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          StackId: {}\n        }\n      }\n    },\n    CreateApp: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId',\n          'Name',\n          'Type'\n        ],\n        members: {\n          StackId: {},\n          Shortname: {},\n          Name: {},\n          Description: {},\n          DataSources: {\n            shape: 'Si'\n          },\n          Type: {},\n          AppSource: {\n            shape: 'Sd'\n          },\n          Domains: {\n            shape: 'S3'\n          },\n          EnableSsl: {\n            type: 'boolean'\n          },\n          SslConfiguration: {\n            shape: 'Sl'\n          },\n          Attributes: {\n            shape: 'Sm'\n          },\n          Environment: {\n            shape: 'So'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {}\n        }\n      }\n    },\n    CreateDeployment: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId',\n          'Command'\n        ],\n        members: {\n          StackId: {},\n          AppId: {},\n          InstanceIds: {\n            shape: 'S3'\n          },\n          LayerIds: {\n            shape: 'S3'\n          },\n          Command: {\n            shape: 'Ss'\n          },\n          Comment: {},\n          CustomJson: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DeploymentId: {}\n        }\n      }\n    },\n    CreateInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId',\n          'LayerIds',\n          'InstanceType'\n        ],\n        members: {\n          StackId: {},\n          LayerIds: {\n            shape: 'S3'\n          },\n          InstanceType: {},\n          AutoScalingType: {},\n          Hostname: {},\n          Os: {},\n          AmiId: {},\n          SshKeyName: {},\n          AvailabilityZone: {},\n          VirtualizationType: {},\n          SubnetId: {},\n          Architecture: {},\n          RootDeviceType: {},\n          BlockDeviceMappings: {\n            shape: 'Sz'\n          },\n          InstallUpdatesOnBoot: {\n            type: 'boolean'\n          },\n          EbsOptimized: {\n            type: 'boolean'\n          },\n          AgentVersion: {},\n          Tenancy: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          InstanceId: {}\n        }\n      }\n    },\n    CreateLayer: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId',\n          'Type',\n          'Name',\n          'Shortname'\n        ],\n        members: {\n          StackId: {},\n          Type: {},\n          Name: {},\n          Shortname: {},\n          Attributes: {\n            shape: 'S17'\n          },\n          CloudWatchLogsConfiguration: {\n            shape: 'S19'\n          },\n          CustomInstanceProfileArn: {},\n          CustomJson: {},\n          CustomSecurityGroupIds: {\n            shape: 'S3'\n          },\n          Packages: {\n            shape: 'S3'\n          },\n          VolumeConfigurations: {\n            shape: 'S1f'\n          },\n          EnableAutoHealing: {\n            type: 'boolean'\n          },\n          AutoAssignElasticIps: {\n            type: 'boolean'\n          },\n          AutoAssignPublicIps: {\n            type: 'boolean'\n          },\n          CustomRecipes: {\n            shape: 'S1h'\n          },\n          InstallUpdatesOnBoot: {\n            type: 'boolean'\n          },\n          UseEbsOptimizedInstances: {\n            type: 'boolean'\n          },\n          LifecycleEventConfiguration: {\n            shape: 'S1i'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LayerId: {}\n        }\n      }\n    },\n    CreateStack: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name',\n          'Region',\n          'ServiceRoleArn',\n          'DefaultInstanceProfileArn'\n        ],\n        members: {\n          Name: {},\n          Region: {},\n          VpcId: {},\n          Attributes: {\n            shape: 'S8'\n          },\n          ServiceRoleArn: {},\n          DefaultInstanceProfileArn: {},\n          DefaultOs: {},\n          HostnameTheme: {},\n          DefaultAvailabilityZone: {},\n          DefaultSubnetId: {},\n          CustomJson: {},\n          ConfigurationManager: {\n            shape: 'Sa'\n          },\n          ChefConfiguration: {\n            shape: 'Sb'\n          },\n          UseCustomCookbooks: {\n            type: 'boolean'\n          },\n          UseOpsworksSecurityGroups: {\n            type: 'boolean'\n          },\n          CustomCookbooksSource: {\n            shape: 'Sd'\n          },\n          DefaultSshKeyName: {},\n          DefaultRootDeviceType: {},\n          AgentVersion: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          StackId: {}\n        }\n      }\n    },\n    CreateUserProfile: {\n      input: {\n        type: 'structure',\n        required: [\n          'IamUserArn'\n        ],\n        members: {\n          IamUserArn: {},\n          SshUsername: {},\n          SshPublicKey: {},\n          AllowSelfManagement: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IamUserArn: {}\n        }\n      }\n    },\n    DeleteApp: {\n      input: {\n        type: 'structure',\n        required: [\n          'AppId'\n        ],\n        members: {\n          AppId: {}\n        }\n      }\n    },\n    DeleteInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId'\n        ],\n        members: {\n          InstanceId: {},\n          DeleteElasticIp: {\n            type: 'boolean'\n          },\n          DeleteVolumes: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    DeleteLayer: {\n      input: {\n        type: 'structure',\n        required: [\n          'LayerId'\n        ],\n        members: {\n          LayerId: {}\n        }\n      }\n    },\n    DeleteStack: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId'\n        ],\n        members: {\n          StackId: {}\n        }\n      }\n    },\n    DeleteUserProfile: {\n      input: {\n        type: 'structure',\n        required: [\n          'IamUserArn'\n        ],\n        members: {\n          IamUserArn: {}\n        }\n      }\n    },\n    DeregisterEcsCluster: {\n      input: {\n        type: 'structure',\n        required: [\n          'EcsClusterArn'\n        ],\n        members: {\n          EcsClusterArn: {}\n        }\n      }\n    },\n    DeregisterElasticIp: {\n      input: {\n        type: 'structure',\n        required: [\n          'ElasticIp'\n        ],\n        members: {\n          ElasticIp: {}\n        }\n      }\n    },\n    DeregisterInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId'\n        ],\n        members: {\n          InstanceId: {}\n        }\n      }\n    },\n    DeregisterRdsDbInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'RdsDbInstanceArn'\n        ],\n        members: {\n          RdsDbInstanceArn: {}\n        }\n      }\n    },\n    DeregisterVolume: {\n      input: {\n        type: 'structure',\n        required: [\n          'VolumeId'\n        ],\n        members: {\n          VolumeId: {}\n        }\n      }\n    },\n    DescribeAgentVersions: {\n      input: {\n        type: 'structure',\n        members: {\n          StackId: {},\n          ConfigurationManager: {\n            shape: 'Sa'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AgentVersions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Version: {},\n                ConfigurationManager: {\n                  shape: 'Sa'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeApps: {\n      input: {\n        type: 'structure',\n        members: {\n          StackId: {},\n          AppIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Apps: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AppId: {},\n                StackId: {},\n                Shortname: {},\n                Name: {},\n                Description: {},\n                DataSources: {\n                  shape: 'Si'\n                },\n                Type: {},\n                AppSource: {\n                  shape: 'Sd'\n                },\n                Domains: {\n                  shape: 'S3'\n                },\n                EnableSsl: {\n                  type: 'boolean'\n                },\n                SslConfiguration: {\n                  shape: 'Sl'\n                },\n                Attributes: {\n                  shape: 'Sm'\n                },\n                CreatedAt: {},\n                Environment: {\n                  shape: 'So'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeCommands: {\n      input: {\n        type: 'structure',\n        members: {\n          DeploymentId: {},\n          InstanceId: {},\n          CommandIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Commands: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CommandId: {},\n                InstanceId: {},\n                DeploymentId: {},\n                CreatedAt: {},\n                AcknowledgedAt: {},\n                CompletedAt: {},\n                Status: {},\n                ExitCode: {\n                  type: 'integer'\n                },\n                LogUrl: {},\n                Type: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeDeployments: {\n      input: {\n        type: 'structure',\n        members: {\n          StackId: {},\n          AppId: {},\n          DeploymentIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Deployments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DeploymentId: {},\n                StackId: {},\n                AppId: {},\n                CreatedAt: {},\n                CompletedAt: {},\n                Duration: {\n                  type: 'integer'\n                },\n                IamUserArn: {},\n                Comment: {},\n                Command: {\n                  shape: 'Ss'\n                },\n                Status: {},\n                CustomJson: {},\n                InstanceIds: {\n                  shape: 'S3'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeEcsClusters: {\n      input: {\n        type: 'structure',\n        members: {\n          EcsClusterArns: {\n            shape: 'S3'\n          },\n          StackId: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EcsClusters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                EcsClusterArn: {},\n                EcsClusterName: {},\n                StackId: {},\n                RegisteredAt: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeElasticIps: {\n      input: {\n        type: 'structure',\n        members: {\n          InstanceId: {},\n          StackId: {},\n          Ips: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ElasticIps: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Ip: {},\n                Name: {},\n                Domain: {},\n                Region: {},\n                InstanceId: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeElasticLoadBalancers: {\n      input: {\n        type: 'structure',\n        members: {\n          StackId: {},\n          LayerIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ElasticLoadBalancers: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ElasticLoadBalancerName: {},\n                Region: {},\n                DnsName: {},\n                StackId: {},\n                LayerId: {},\n                VpcId: {},\n                AvailabilityZones: {\n                  shape: 'S3'\n                },\n                SubnetIds: {\n                  shape: 'S3'\n                },\n                Ec2InstanceIds: {\n                  shape: 'S3'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeInstances: {\n      input: {\n        type: 'structure',\n        members: {\n          StackId: {},\n          LayerId: {},\n          InstanceIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Instances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AgentVersion: {},\n                AmiId: {},\n                Architecture: {},\n                Arn: {},\n                AutoScalingType: {},\n                AvailabilityZone: {},\n                BlockDeviceMappings: {\n                  shape: 'Sz'\n                },\n                CreatedAt: {},\n                EbsOptimized: {\n                  type: 'boolean'\n                },\n                Ec2InstanceId: {},\n                EcsClusterArn: {},\n                EcsContainerInstanceArn: {},\n                ElasticIp: {},\n                Hostname: {},\n                InfrastructureClass: {},\n                InstallUpdatesOnBoot: {\n                  type: 'boolean'\n                },\n                InstanceId: {},\n                InstanceProfileArn: {},\n                InstanceType: {},\n                LastServiceErrorId: {},\n                LayerIds: {\n                  shape: 'S3'\n                },\n                Os: {},\n                Platform: {},\n                PrivateDns: {},\n                PrivateIp: {},\n                PublicDns: {},\n                PublicIp: {},\n                RegisteredBy: {},\n                ReportedAgentVersion: {},\n                ReportedOs: {\n                  type: 'structure',\n                  members: {\n                    Family: {},\n                    Name: {},\n                    Version: {}\n                  }\n                },\n                RootDeviceType: {},\n                RootDeviceVolumeId: {},\n                SecurityGroupIds: {\n                  shape: 'S3'\n                },\n                SshHostDsaKeyFingerprint: {},\n                SshHostRsaKeyFingerprint: {},\n                SshKeyName: {},\n                StackId: {},\n                Status: {},\n                SubnetId: {},\n                Tenancy: {},\n                VirtualizationType: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeLayers: {\n      input: {\n        type: 'structure',\n        members: {\n          StackId: {},\n          LayerIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Layers: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Arn: {},\n                StackId: {},\n                LayerId: {},\n                Type: {},\n                Name: {},\n                Shortname: {},\n                Attributes: {\n                  shape: 'S17'\n                },\n                CloudWatchLogsConfiguration: {\n                  shape: 'S19'\n                },\n                CustomInstanceProfileArn: {},\n                CustomJson: {},\n                CustomSecurityGroupIds: {\n                  shape: 'S3'\n                },\n                DefaultSecurityGroupNames: {\n                  shape: 'S3'\n                },\n                Packages: {\n                  shape: 'S3'\n                },\n                VolumeConfigurations: {\n                  shape: 'S1f'\n                },\n                EnableAutoHealing: {\n                  type: 'boolean'\n                },\n                AutoAssignElasticIps: {\n                  type: 'boolean'\n                },\n                AutoAssignPublicIps: {\n                  type: 'boolean'\n                },\n                DefaultRecipes: {\n                  shape: 'S1h'\n                },\n                CustomRecipes: {\n                  shape: 'S1h'\n                },\n                CreatedAt: {},\n                InstallUpdatesOnBoot: {\n                  type: 'boolean'\n                },\n                UseEbsOptimizedInstances: {\n                  type: 'boolean'\n                },\n                LifecycleEventConfiguration: {\n                  shape: 'S1i'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeLoadBasedAutoScaling: {\n      input: {\n        type: 'structure',\n        required: [\n          'LayerIds'\n        ],\n        members: {\n          LayerIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LoadBasedAutoScalingConfigurations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                LayerId: {},\n                Enable: {\n                  type: 'boolean'\n                },\n                UpScaling: {\n                  shape: 'S36'\n                },\n                DownScaling: {\n                  shape: 'S36'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeMyUserProfile: {\n      output: {\n        type: 'structure',\n        members: {\n          UserProfile: {\n            type: 'structure',\n            members: {\n              IamUserArn: {},\n              Name: {},\n              SshUsername: {},\n              SshPublicKey: {}\n            }\n          }\n        }\n      }\n    },\n    DescribeOperatingSystems: {\n      output: {\n        type: 'structure',\n        members: {\n          OperatingSystems: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Name: {},\n                Id: {},\n                Type: {},\n                ConfigurationManagers: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      Name: {},\n                      Version: {}\n                    }\n                  }\n                },\n                ReportedName: {},\n                ReportedVersion: {},\n                Supported: {\n                  type: 'boolean'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribePermissions: {\n      input: {\n        type: 'structure',\n        members: {\n          IamUserArn: {},\n          StackId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Permissions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                StackId: {},\n                IamUserArn: {},\n                AllowSsh: {\n                  type: 'boolean'\n                },\n                AllowSudo: {\n                  type: 'boolean'\n                },\n                Level: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeRaidArrays: {\n      input: {\n        type: 'structure',\n        members: {\n          InstanceId: {},\n          StackId: {},\n          RaidArrayIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RaidArrays: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RaidArrayId: {},\n                InstanceId: {},\n                Name: {},\n                RaidLevel: {\n                  type: 'integer'\n                },\n                NumberOfDisks: {\n                  type: 'integer'\n                },\n                Size: {\n                  type: 'integer'\n                },\n                Device: {},\n                MountPoint: {},\n                AvailabilityZone: {},\n                CreatedAt: {},\n                StackId: {},\n                VolumeType: {},\n                Iops: {\n                  type: 'integer'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeRdsDbInstances: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId'\n        ],\n        members: {\n          StackId: {},\n          RdsDbInstanceArns: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RdsDbInstances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RdsDbInstanceArn: {},\n                DbInstanceIdentifier: {},\n                DbUser: {},\n                DbPassword: {},\n                Region: {},\n                Address: {},\n                Engine: {},\n                StackId: {},\n                MissingOnRds: {\n                  type: 'boolean'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeServiceErrors: {\n      input: {\n        type: 'structure',\n        members: {\n          StackId: {},\n          InstanceId: {},\n          ServiceErrorIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ServiceErrors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ServiceErrorId: {},\n                StackId: {},\n                InstanceId: {},\n                Type: {},\n                Message: {},\n                CreatedAt: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeStackProvisioningParameters: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId'\n        ],\n        members: {\n          StackId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AgentInstallerUrl: {},\n          Parameters: {\n            type: 'map',\n            key: {},\n            value: {}\n          }\n        }\n      }\n    },\n    DescribeStackSummary: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId'\n        ],\n        members: {\n          StackId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          StackSummary: {\n            type: 'structure',\n            members: {\n              StackId: {},\n              Name: {},\n              Arn: {},\n              LayersCount: {\n                type: 'integer'\n              },\n              AppsCount: {\n                type: 'integer'\n              },\n              InstancesCount: {\n                type: 'structure',\n                members: {\n                  Assigning: {\n                    type: 'integer'\n                  },\n                  Booting: {\n                    type: 'integer'\n                  },\n                  ConnectionLost: {\n                    type: 'integer'\n                  },\n                  Deregistering: {\n                    type: 'integer'\n                  },\n                  Online: {\n                    type: 'integer'\n                  },\n                  Pending: {\n                    type: 'integer'\n                  },\n                  Rebooting: {\n                    type: 'integer'\n                  },\n                  Registered: {\n                    type: 'integer'\n                  },\n                  Registering: {\n                    type: 'integer'\n                  },\n                  Requested: {\n                    type: 'integer'\n                  },\n                  RunningSetup: {\n                    type: 'integer'\n                  },\n                  SetupFailed: {\n                    type: 'integer'\n                  },\n                  ShuttingDown: {\n                    type: 'integer'\n                  },\n                  StartFailed: {\n                    type: 'integer'\n                  },\n                  StopFailed: {\n                    type: 'integer'\n                  },\n                  Stopped: {\n                    type: 'integer'\n                  },\n                  Stopping: {\n                    type: 'integer'\n                  },\n                  Terminated: {\n                    type: 'integer'\n                  },\n                  Terminating: {\n                    type: 'integer'\n                  },\n                  Unassigning: {\n                    type: 'integer'\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeStacks: {\n      input: {\n        type: 'structure',\n        members: {\n          StackIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Stacks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                StackId: {},\n                Name: {},\n                Arn: {},\n                Region: {},\n                VpcId: {},\n                Attributes: {\n                  shape: 'S8'\n                },\n                ServiceRoleArn: {},\n                DefaultInstanceProfileArn: {},\n                DefaultOs: {},\n                HostnameTheme: {},\n                DefaultAvailabilityZone: {},\n                DefaultSubnetId: {},\n                CustomJson: {},\n                ConfigurationManager: {\n                  shape: 'Sa'\n                },\n                ChefConfiguration: {\n                  shape: 'Sb'\n                },\n                UseCustomCookbooks: {\n                  type: 'boolean'\n                },\n                UseOpsworksSecurityGroups: {\n                  type: 'boolean'\n                },\n                CustomCookbooksSource: {\n                  shape: 'Sd'\n                },\n                DefaultSshKeyName: {},\n                CreatedAt: {},\n                DefaultRootDeviceType: {},\n                AgentVersion: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeTimeBasedAutoScaling: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceIds'\n        ],\n        members: {\n          InstanceIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TimeBasedAutoScalingConfigurations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                InstanceId: {},\n                AutoScalingSchedule: {\n                  shape: 'S4b'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeUserProfiles: {\n      input: {\n        type: 'structure',\n        members: {\n          IamUserArns: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          UserProfiles: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                IamUserArn: {},\n                Name: {},\n                SshUsername: {},\n                SshPublicKey: {},\n                AllowSelfManagement: {\n                  type: 'boolean'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeVolumes: {\n      input: {\n        type: 'structure',\n        members: {\n          InstanceId: {},\n          StackId: {},\n          RaidArrayId: {},\n          VolumeIds: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Volumes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                VolumeId: {},\n                Ec2VolumeId: {},\n                Name: {},\n                RaidArrayId: {},\n                InstanceId: {},\n                Status: {},\n                Size: {\n                  type: 'integer'\n                },\n                Device: {},\n                MountPoint: {},\n                Region: {},\n                AvailabilityZone: {},\n                VolumeType: {},\n                Iops: {\n                  type: 'integer'\n                },\n                Encrypted: {\n                  type: 'boolean'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DetachElasticLoadBalancer: {\n      input: {\n        type: 'structure',\n        required: [\n          'ElasticLoadBalancerName',\n          'LayerId'\n        ],\n        members: {\n          ElasticLoadBalancerName: {},\n          LayerId: {}\n        }\n      }\n    },\n    DisassociateElasticIp: {\n      input: {\n        type: 'structure',\n        required: [\n          'ElasticIp'\n        ],\n        members: {\n          ElasticIp: {}\n        }\n      }\n    },\n    GetHostnameSuggestion: {\n      input: {\n        type: 'structure',\n        required: [\n          'LayerId'\n        ],\n        members: {\n          LayerId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LayerId: {},\n          Hostname: {}\n        }\n      }\n    },\n    GrantAccess: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId'\n        ],\n        members: {\n          InstanceId: {},\n          ValidForInMinutes: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TemporaryCredential: {\n            type: 'structure',\n            members: {\n              Username: {},\n              Password: {},\n              ValidForInMinutes: {\n                type: 'integer'\n              },\n              InstanceId: {}\n            }\n          }\n        }\n      }\n    },\n    ListTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S50'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    RebootInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId'\n        ],\n        members: {\n          InstanceId: {}\n        }\n      }\n    },\n    RegisterEcsCluster: {\n      input: {\n        type: 'structure',\n        required: [\n          'EcsClusterArn',\n          'StackId'\n        ],\n        members: {\n          EcsClusterArn: {},\n          StackId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EcsClusterArn: {}\n        }\n      }\n    },\n    RegisterElasticIp: {\n      input: {\n        type: 'structure',\n        required: [\n          'ElasticIp',\n          'StackId'\n        ],\n        members: {\n          ElasticIp: {},\n          StackId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ElasticIp: {}\n        }\n      }\n    },\n    RegisterInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId'\n        ],\n        members: {\n          StackId: {},\n          Hostname: {},\n          PublicIp: {},\n          PrivateIp: {},\n          RsaPublicKey: {},\n          RsaPublicKeyFingerprint: {},\n          InstanceIdentity: {\n            type: 'structure',\n            members: {\n              Document: {},\n              Signature: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          InstanceId: {}\n        }\n      }\n    },\n    RegisterRdsDbInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId',\n          'RdsDbInstanceArn',\n          'DbUser',\n          'DbPassword'\n        ],\n        members: {\n          StackId: {},\n          RdsDbInstanceArn: {},\n          DbUser: {},\n          DbPassword: {}\n        }\n      }\n    },\n    RegisterVolume: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId'\n        ],\n        members: {\n          Ec2VolumeId: {},\n          StackId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          VolumeId: {}\n        }\n      }\n    },\n    SetLoadBasedAutoScaling: {\n      input: {\n        type: 'structure',\n        required: [\n          'LayerId'\n        ],\n        members: {\n          LayerId: {},\n          Enable: {\n            type: 'boolean'\n          },\n          UpScaling: {\n            shape: 'S36'\n          },\n          DownScaling: {\n            shape: 'S36'\n          }\n        }\n      }\n    },\n    SetPermission: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId',\n          'IamUserArn'\n        ],\n        members: {\n          StackId: {},\n          IamUserArn: {},\n          AllowSsh: {\n            type: 'boolean'\n          },\n          AllowSudo: {\n            type: 'boolean'\n          },\n          Level: {}\n        }\n      }\n    },\n    SetTimeBasedAutoScaling: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId'\n        ],\n        members: {\n          InstanceId: {},\n          AutoScalingSchedule: {\n            shape: 'S4b'\n          }\n        }\n      }\n    },\n    StartInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId'\n        ],\n        members: {\n          InstanceId: {}\n        }\n      }\n    },\n    StartStack: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId'\n        ],\n        members: {\n          StackId: {}\n        }\n      }\n    },\n    StopInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId'\n        ],\n        members: {\n          InstanceId: {},\n          Force: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    StopStack: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId'\n        ],\n        members: {\n          StackId: {}\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {},\n          Tags: {\n            shape: 'S50'\n          }\n        }\n      }\n    },\n    UnassignInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId'\n        ],\n        members: {\n          InstanceId: {}\n        }\n      }\n    },\n    UnassignVolume: {\n      input: {\n        type: 'structure',\n        required: [\n          'VolumeId'\n        ],\n        members: {\n          VolumeId: {}\n        }\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {},\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    UpdateApp: {\n      input: {\n        type: 'structure',\n        required: [\n          'AppId'\n        ],\n        members: {\n          AppId: {},\n          Name: {},\n          Description: {},\n          DataSources: {\n            shape: 'Si'\n          },\n          Type: {},\n          AppSource: {\n            shape: 'Sd'\n          },\n          Domains: {\n            shape: 'S3'\n          },\n          EnableSsl: {\n            type: 'boolean'\n          },\n          SslConfiguration: {\n            shape: 'Sl'\n          },\n          Attributes: {\n            shape: 'Sm'\n          },\n          Environment: {\n            shape: 'So'\n          }\n        }\n      }\n    },\n    UpdateElasticIp: {\n      input: {\n        type: 'structure',\n        required: [\n          'ElasticIp'\n        ],\n        members: {\n          ElasticIp: {},\n          Name: {}\n        }\n      }\n    },\n    UpdateInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId'\n        ],\n        members: {\n          InstanceId: {},\n          LayerIds: {\n            shape: 'S3'\n          },\n          InstanceType: {},\n          AutoScalingType: {},\n          Hostname: {},\n          Os: {},\n          AmiId: {},\n          SshKeyName: {},\n          Architecture: {},\n          InstallUpdatesOnBoot: {\n            type: 'boolean'\n          },\n          EbsOptimized: {\n            type: 'boolean'\n          },\n          AgentVersion: {}\n        }\n      }\n    },\n    UpdateLayer: {\n      input: {\n        type: 'structure',\n        required: [\n          'LayerId'\n        ],\n        members: {\n          LayerId: {},\n          Name: {},\n          Shortname: {},\n          Attributes: {\n            shape: 'S17'\n          },\n          CloudWatchLogsConfiguration: {\n            shape: 'S19'\n          },\n          CustomInstanceProfileArn: {},\n          CustomJson: {},\n          CustomSecurityGroupIds: {\n            shape: 'S3'\n          },\n          Packages: {\n            shape: 'S3'\n          },\n          VolumeConfigurations: {\n            shape: 'S1f'\n          },\n          EnableAutoHealing: {\n            type: 'boolean'\n          },\n          AutoAssignElasticIps: {\n            type: 'boolean'\n          },\n          AutoAssignPublicIps: {\n            type: 'boolean'\n          },\n          CustomRecipes: {\n            shape: 'S1h'\n          },\n          InstallUpdatesOnBoot: {\n            type: 'boolean'\n          },\n          UseEbsOptimizedInstances: {\n            type: 'boolean'\n          },\n          LifecycleEventConfiguration: {\n            shape: 'S1i'\n          }\n        }\n      }\n    },\n    UpdateMyUserProfile: {\n      input: {\n        type: 'structure',\n        members: {\n          SshPublicKey: {}\n        }\n      }\n    },\n    UpdateRdsDbInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'RdsDbInstanceArn'\n        ],\n        members: {\n          RdsDbInstanceArn: {},\n          DbUser: {},\n          DbPassword: {}\n        }\n      }\n    },\n    UpdateStack: {\n      input: {\n        type: 'structure',\n        required: [\n          'StackId'\n        ],\n        members: {\n          StackId: {},\n          Name: {},\n          Attributes: {\n            shape: 'S8'\n          },\n          ServiceRoleArn: {},\n          DefaultInstanceProfileArn: {},\n          DefaultOs: {},\n          HostnameTheme: {},\n          DefaultAvailabilityZone: {},\n          DefaultSubnetId: {},\n          CustomJson: {},\n          ConfigurationManager: {\n            shape: 'Sa'\n          },\n          ChefConfiguration: {\n            shape: 'Sb'\n          },\n          UseCustomCookbooks: {\n            type: 'boolean'\n          },\n          CustomCookbooksSource: {\n            shape: 'Sd'\n          },\n          DefaultSshKeyName: {},\n          DefaultRootDeviceType: {},\n          UseOpsworksSecurityGroups: {\n            type: 'boolean'\n          },\n          AgentVersion: {}\n        }\n      }\n    },\n    UpdateUserProfile: {\n      input: {\n        type: 'structure',\n        required: [\n          'IamUserArn'\n        ],\n        members: {\n          IamUserArn: {},\n          SshUsername: {},\n          SshPublicKey: {},\n          AllowSelfManagement: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    UpdateVolume: {\n      input: {\n        type: 'structure',\n        required: [\n          'VolumeId'\n        ],\n        members: {\n          VolumeId: {},\n          Name: {},\n          MountPoint: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'list',\n      member: {}\n    },\n    S8: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sa: {\n      type: 'structure',\n      members: {\n        Name: {},\n        Version: {}\n      }\n    },\n    Sb: {\n      type: 'structure',\n      members: {\n        ManageBerkshelf: {\n          type: 'boolean'\n        },\n        BerkshelfVersion: {}\n      }\n    },\n    Sd: {\n      type: 'structure',\n      members: {\n        Type: {},\n        Url: {},\n        Username: {},\n        Password: {},\n        SshKey: {},\n        Revision: {}\n      }\n    },\n    Si: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Type: {},\n          Arn: {},\n          DatabaseName: {}\n        }\n      }\n    },\n    Sl: {\n      type: 'structure',\n      required: [\n        'Certificate',\n        'PrivateKey'\n      ],\n      members: {\n        Certificate: {},\n        PrivateKey: {},\n        Chain: {}\n      }\n    },\n    Sm: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    So: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {},\n          Value: {},\n          Secure: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    Ss: {\n      type: 'structure',\n      required: [\n        'Name'\n      ],\n      members: {\n        Name: {},\n        Args: {\n          type: 'map',\n          key: {},\n          value: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    Sz: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          DeviceName: {},\n          NoDevice: {},\n          VirtualName: {},\n          Ebs: {\n            type: 'structure',\n            members: {\n              SnapshotId: {},\n              Iops: {\n                type: 'integer'\n              },\n              VolumeSize: {\n                type: 'integer'\n              },\n              VolumeType: {},\n              DeleteOnTermination: {\n                type: 'boolean'\n              }\n            }\n          }\n        }\n      }\n    },\n    S17: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S19: {\n      type: 'structure',\n      members: {\n        Enabled: {\n          type: 'boolean'\n        },\n        LogStreams: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              LogGroupName: {},\n              DatetimeFormat: {},\n              TimeZone: {},\n              File: {},\n              FileFingerprintLines: {},\n              MultiLineStartPattern: {},\n              InitialPosition: {},\n              Encoding: {},\n              BufferDuration: {\n                type: 'integer'\n              },\n              BatchCount: {\n                type: 'integer'\n              },\n              BatchSize: {\n                type: 'integer'\n              }\n            }\n          }\n        }\n      }\n    },\n    S1f: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'MountPoint',\n          'NumberOfDisks',\n          'Size'\n        ],\n        members: {\n          MountPoint: {},\n          RaidLevel: {\n            type: 'integer'\n          },\n          NumberOfDisks: {\n            type: 'integer'\n          },\n          Size: {\n            type: 'integer'\n          },\n          VolumeType: {},\n          Iops: {\n            type: 'integer'\n          },\n          Encrypted: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    S1h: {\n      type: 'structure',\n      members: {\n        Setup: {\n          shape: 'S3'\n        },\n        Configure: {\n          shape: 'S3'\n        },\n        Deploy: {\n          shape: 'S3'\n        },\n        Undeploy: {\n          shape: 'S3'\n        },\n        Shutdown: {\n          shape: 'S3'\n        }\n      }\n    },\n    S1i: {\n      type: 'structure',\n      members: {\n        Shutdown: {\n          type: 'structure',\n          members: {\n            ExecutionTimeout: {\n              type: 'integer'\n            },\n            DelayUntilElbConnectionsDrained: {\n              type: 'boolean'\n            }\n          }\n        }\n      }\n    },\n    S36: {\n      type: 'structure',\n      members: {\n        InstanceCount: {\n          type: 'integer'\n        },\n        ThresholdsWaitTime: {\n          type: 'integer'\n        },\n        IgnoreMetricsTime: {\n          type: 'integer'\n        },\n        CpuThreshold: {\n          type: 'double'\n        },\n        MemoryThreshold: {\n          type: 'double'\n        },\n        LoadThreshold: {\n          type: 'double'\n        },\n        Alarms: {\n          shape: 'S3'\n        }\n      }\n    },\n    S4b: {\n      type: 'structure',\n      members: {\n        Monday: {\n          shape: 'S4c'\n        },\n        Tuesday: {\n          shape: 'S4c'\n        },\n        Wednesday: {\n          shape: 'S4c'\n        },\n        Thursday: {\n          shape: 'S4c'\n        },\n        Friday: {\n          shape: 'S4c'\n        },\n        Saturday: {\n          shape: 'S4c'\n        },\n        Sunday: {\n          shape: 'S4c'\n        }\n      }\n    },\n    S4c: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S50: {\n      type: 'map',\n      key: {},\n      value: {}\n    }\n  }\n}"]}