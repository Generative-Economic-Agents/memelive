{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/services/dynamodb.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","AWS","util","update","DynamoDB","prototype","setupRequestListeners","request","service","config","dynamoDbCrc32","removeListener","EventListeners","Json","EXTRACT_DATA","addListener","checkCrc32","resp","httpResponse","streaming","crc32IsValid","data","error","Error","code","message","retryable","haltHandlersOnError","crc","headers","parseInt","crypto","crc32","body","defaultRetryCount","retryDelays","retryCount","err","retryDelayOptions","copy","base","delay","calculateRetryDelay","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nimport { __cjsMetaURL as _req0} from '../dynamodb/document_client';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n require('../dynamodb/document_client');\n\n AWS.util.update(AWS.DynamoDB.prototype, {\n   /**\n    * @api private\n    */\n   setupRequestListeners: function setupRequestListeners(request) {\n     if (request.service.config.dynamoDbCrc32) {\n       request.removeListener('extractData', AWS.EventListeners.Json.EXTRACT_DATA);\n       request.addListener('extractData', this.checkCrc32);\n       request.addListener('extractData', AWS.EventListeners.Json.EXTRACT_DATA);\n     }\n   },\n\n   /**\n    * @api private\n    */\n   checkCrc32: function checkCrc32(resp) {\n     if (!resp.httpResponse.streaming && !resp.request.service.crc32IsValid(resp)) {\n       resp.data = null;\n       resp.error = AWS.util.error(new Error(), {\n         code: 'CRC32CheckFailed',\n         message: 'CRC32 integrity check failed',\n         retryable: true\n       });\n       resp.request.haltHandlersOnError();\n       throw (resp.error);\n     }\n   },\n\n   /**\n    * @api private\n    */\n   crc32IsValid: function crc32IsValid(resp) {\n     var crc = resp.httpResponse.headers['x-amz-crc32'];\n     if (!crc) return true; // no (valid) CRC32 header\n     return parseInt(crc, 10) === AWS.util.crypto.crc32(resp.httpResponse.body);\n   },\n\n   /**\n    * @api private\n    */\n   defaultRetryCount: 10,\n\n   /**\n    * @api private\n    */\n   retryDelays: function retryDelays(retryCount, err) {\n     var retryDelayOptions = AWS.util.copy(this.config.retryDelayOptions);\n\n     if (typeof retryDelayOptions.base !== 'number') {\n         retryDelayOptions.base = 50; // default for dynamodb\n     }\n     var delay = AWS.util.calculateRetryDelay(retryCount, retryDelayOptions, err);\n     return delay;\n   }\n });\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n  '../dynamodb/document_client': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}