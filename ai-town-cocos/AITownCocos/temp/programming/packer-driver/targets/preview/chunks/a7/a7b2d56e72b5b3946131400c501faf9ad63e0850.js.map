{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/schemas-2019-12-02.min.json"],"names":["metadata","apiVersion","endpointPrefix","signingName","serviceFullName","serviceId","protocol","jsonVersion","uid","signatureVersion","operations","CreateDiscoverer","http","requestUri","responseCode","input","type","members","Description","SourceArn","CrossAccount","Tags","shape","locationName","required","output","DiscovererArn","DiscovererId","State","CreateRegistry","RegistryName","location","RegistryArn","CreateSchema","Content","SchemaName","Type","LastModified","SchemaArn","SchemaVersion","VersionCreatedDate","DeleteDiscoverer","method","DeleteRegistry","DeleteResourcePolicy","DeleteSchema","DeleteSchemaVersion","DescribeCodeBinding","Language","CreationDate","Status","DescribeDiscoverer","DescribeRegistry","DescribeSchema","ExportSchema","GetCodeBindingSource","Body","payload","GetDiscoveredSchema","Events","member","GetResourcePolicy","Policy","jsonvalue","RevisionId","ListDiscoverers","DiscovererIdPrefix","Limit","NextToken","SourceArnPrefix","Discoverers","ListRegistries","RegistryNamePrefix","Scope","Registries","ListSchemaVersions","SchemaVersions","ListSchemas","SchemaNamePrefix","Schemas","VersionCount","ListTagsForResource","ResourceArn","PutCodeBinding","PutResourcePolicy","SearchSchemas","Keywords","CreatedDate","StartDiscoverer","StopDiscoverer","TagResource","UntagResource","TagKeys","UpdateDiscoverer","UpdateRegistry","UpdateSchema","ClientTokenId","idempotencyToken","shapes","S5","key","value","Sf","timestampFormat"],"mappings":"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","sourcesContent":["export default {\n  metadata: {\n    apiVersion: '2019-12-02',\n    endpointPrefix: 'schemas',\n    signingName: 'schemas',\n    serviceFullName: 'Schemas',\n    serviceId: 'schemas',\n    protocol: 'rest-json',\n    jsonVersion: '1.1',\n    uid: 'schemas-2019-12-02',\n    signatureVersion: 'v4'\n  },\n  operations: {\n    CreateDiscoverer: {\n      http: {\n        requestUri: '/v1/discoverers',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Description: {},\n          SourceArn: {},\n          CrossAccount: {\n            type: 'boolean'\n          },\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        },\n        required: [\n          'SourceArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Description: {},\n          DiscovererArn: {},\n          DiscovererId: {},\n          SourceArn: {},\n          State: {},\n          CrossAccount: {\n            type: 'boolean'\n          },\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    CreateRegistry: {\n      http: {\n        requestUri: '/v1/registries/name/{registryName}',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Description: {},\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        },\n        required: [\n          'RegistryName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Description: {},\n          RegistryArn: {},\n          RegistryName: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    CreateSchema: {\n      http: {\n        requestUri: '/v1/registries/name/{registryName}/schemas/name/{schemaName}',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Content: {},\n          Description: {},\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          },\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          },\n          Type: {}\n        },\n        required: [\n          'RegistryName',\n          'SchemaName',\n          'Type',\n          'Content'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Description: {},\n          LastModified: {\n            shape: 'Sf'\n          },\n          SchemaArn: {},\n          SchemaName: {},\n          SchemaVersion: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          },\n          Type: {},\n          VersionCreatedDate: {\n            shape: 'Sf'\n          }\n        }\n      }\n    },\n    DeleteDiscoverer: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/discoverers/id/{discovererId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        members: {\n          DiscovererId: {\n            location: 'uri',\n            locationName: 'discovererId'\n          }\n        },\n        required: [\n          'DiscovererId'\n        ]\n      }\n    },\n    DeleteRegistry: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/registries/name/{registryName}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          }\n        },\n        required: [\n          'RegistryName'\n        ]\n      }\n    },\n    DeleteResourcePolicy: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/policy',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RegistryName: {\n            location: 'querystring',\n            locationName: 'registryName'\n          }\n        }\n      }\n    },\n    DeleteSchema: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/registries/name/{registryName}/schemas/name/{schemaName}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          }\n        },\n        required: [\n          'RegistryName',\n          'SchemaName'\n        ]\n      }\n    },\n    DeleteSchemaVersion: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/registries/name/{registryName}/schemas/name/{schemaName}/version/{schemaVersion}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          },\n          SchemaVersion: {\n            location: 'uri',\n            locationName: 'schemaVersion'\n          }\n        },\n        required: [\n          'SchemaVersion',\n          'RegistryName',\n          'SchemaName'\n        ]\n      }\n    },\n    DescribeCodeBinding: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Language: {\n            location: 'uri',\n            locationName: 'language'\n          },\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          },\n          SchemaVersion: {\n            location: 'querystring',\n            locationName: 'schemaVersion'\n          }\n        },\n        required: [\n          'RegistryName',\n          'SchemaName',\n          'Language'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CreationDate: {\n            shape: 'Sf'\n          },\n          LastModified: {\n            shape: 'Sf'\n          },\n          SchemaVersion: {},\n          Status: {}\n        }\n      }\n    },\n    DescribeDiscoverer: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/discoverers/id/{discovererId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          DiscovererId: {\n            location: 'uri',\n            locationName: 'discovererId'\n          }\n        },\n        required: [\n          'DiscovererId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Description: {},\n          DiscovererArn: {},\n          DiscovererId: {},\n          SourceArn: {},\n          State: {},\n          CrossAccount: {\n            type: 'boolean'\n          },\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    DescribeRegistry: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/registries/name/{registryName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          }\n        },\n        required: [\n          'RegistryName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Description: {},\n          RegistryArn: {},\n          RegistryName: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    DescribeSchema: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/registries/name/{registryName}/schemas/name/{schemaName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          },\n          SchemaVersion: {\n            location: 'querystring',\n            locationName: 'schemaVersion'\n          }\n        },\n        required: [\n          'RegistryName',\n          'SchemaName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Content: {},\n          Description: {},\n          LastModified: {\n            shape: 'Sf'\n          },\n          SchemaArn: {},\n          SchemaName: {},\n          SchemaVersion: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          },\n          Type: {},\n          VersionCreatedDate: {\n            shape: 'Sf'\n          }\n        }\n      }\n    },\n    ExportSchema: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/registries/name/{registryName}/schemas/name/{schemaName}/export',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          },\n          SchemaVersion: {\n            location: 'querystring',\n            locationName: 'schemaVersion'\n          },\n          Type: {\n            location: 'querystring',\n            locationName: 'type'\n          }\n        },\n        required: [\n          'RegistryName',\n          'SchemaName',\n          'Type'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Content: {},\n          SchemaArn: {},\n          SchemaName: {},\n          SchemaVersion: {},\n          Type: {}\n        }\n      }\n    },\n    GetCodeBindingSource: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}/source',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Language: {\n            location: 'uri',\n            locationName: 'language'\n          },\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          },\n          SchemaVersion: {\n            location: 'querystring',\n            locationName: 'schemaVersion'\n          }\n        },\n        required: [\n          'RegistryName',\n          'SchemaName',\n          'Language'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Body: {\n            type: 'blob'\n          }\n        },\n        payload: 'Body'\n      }\n    },\n    GetDiscoveredSchema: {\n      http: {\n        requestUri: '/v1/discover',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Events: {\n            type: 'list',\n            member: {}\n          },\n          Type: {}\n        },\n        required: [\n          'Type',\n          'Events'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Content: {}\n        }\n      }\n    },\n    GetResourcePolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/policy',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RegistryName: {\n            location: 'querystring',\n            locationName: 'registryName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Policy: {\n            jsonvalue: true\n          },\n          RevisionId: {}\n        }\n      }\n    },\n    ListDiscoverers: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/discoverers',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          DiscovererIdPrefix: {\n            location: 'querystring',\n            locationName: 'discovererIdPrefix'\n          },\n          Limit: {\n            location: 'querystring',\n            locationName: 'limit',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          SourceArnPrefix: {\n            location: 'querystring',\n            locationName: 'sourceArnPrefix'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Discoverers: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DiscovererArn: {},\n                DiscovererId: {},\n                SourceArn: {},\n                State: {},\n                CrossAccount: {\n                  type: 'boolean'\n                },\n                Tags: {\n                  shape: 'S5',\n                  locationName: 'tags'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListRegistries: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/registries',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Limit: {\n            location: 'querystring',\n            locationName: 'limit',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          RegistryNamePrefix: {\n            location: 'querystring',\n            locationName: 'registryNamePrefix'\n          },\n          Scope: {\n            location: 'querystring',\n            locationName: 'scope'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Registries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RegistryArn: {},\n                RegistryName: {},\n                Tags: {\n                  shape: 'S5',\n                  locationName: 'tags'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListSchemaVersions: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/registries/name/{registryName}/schemas/name/{schemaName}/versions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Limit: {\n            location: 'querystring',\n            locationName: 'limit',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          }\n        },\n        required: [\n          'RegistryName',\n          'SchemaName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          SchemaVersions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                SchemaArn: {},\n                SchemaName: {},\n                SchemaVersion: {},\n                Type: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListSchemas: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/registries/name/{registryName}/schemas',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Limit: {\n            location: 'querystring',\n            locationName: 'limit',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaNamePrefix: {\n            location: 'querystring',\n            locationName: 'schemaNamePrefix'\n          }\n        },\n        required: [\n          'RegistryName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Schemas: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                LastModified: {\n                  shape: 'Sf'\n                },\n                SchemaArn: {},\n                SchemaName: {},\n                Tags: {\n                  shape: 'S5',\n                  locationName: 'tags'\n                },\n                VersionCount: {\n                  type: 'long'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resource-arn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resource-arn'\n          }\n        },\n        required: [\n          'ResourceArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    PutCodeBinding: {\n      http: {\n        requestUri: '/v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Language: {\n            location: 'uri',\n            locationName: 'language'\n          },\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          },\n          SchemaVersion: {\n            location: 'querystring',\n            locationName: 'schemaVersion'\n          }\n        },\n        required: [\n          'RegistryName',\n          'SchemaName',\n          'Language'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CreationDate: {\n            shape: 'Sf'\n          },\n          LastModified: {\n            shape: 'Sf'\n          },\n          SchemaVersion: {},\n          Status: {}\n        }\n      }\n    },\n    PutResourcePolicy: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/policy',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Policy: {\n            jsonvalue: true\n          },\n          RegistryName: {\n            location: 'querystring',\n            locationName: 'registryName'\n          },\n          RevisionId: {}\n        },\n        required: [\n          'Policy'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Policy: {\n            jsonvalue: true\n          },\n          RevisionId: {}\n        }\n      }\n    },\n    SearchSchemas: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/registries/name/{registryName}/schemas/search',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Keywords: {\n            location: 'querystring',\n            locationName: 'keywords'\n          },\n          Limit: {\n            location: 'querystring',\n            locationName: 'limit',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          }\n        },\n        required: [\n          'RegistryName',\n          'Keywords'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Schemas: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RegistryName: {},\n                SchemaArn: {},\n                SchemaName: {},\n                SchemaVersions: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      CreatedDate: {\n                        shape: 'Sf'\n                      },\n                      SchemaVersion: {},\n                      Type: {}\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    StartDiscoverer: {\n      http: {\n        requestUri: '/v1/discoverers/id/{discovererId}/start',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          DiscovererId: {\n            location: 'uri',\n            locationName: 'discovererId'\n          }\n        },\n        required: [\n          'DiscovererId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DiscovererId: {},\n          State: {}\n        }\n      }\n    },\n    StopDiscoverer: {\n      http: {\n        requestUri: '/v1/discoverers/id/{discovererId}/stop',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          DiscovererId: {\n            location: 'uri',\n            locationName: 'discovererId'\n          }\n        },\n        required: [\n          'DiscovererId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DiscovererId: {},\n          State: {}\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resource-arn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resource-arn'\n          },\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        },\n        required: [\n          'ResourceArn',\n          'Tags'\n        ]\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resource-arn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resource-arn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        },\n        required: [\n          'TagKeys',\n          'ResourceArn'\n        ]\n      }\n    },\n    UpdateDiscoverer: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/discoverers/id/{discovererId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Description: {},\n          DiscovererId: {\n            location: 'uri',\n            locationName: 'discovererId'\n          },\n          CrossAccount: {\n            type: 'boolean'\n          }\n        },\n        required: [\n          'DiscovererId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Description: {},\n          DiscovererArn: {},\n          DiscovererId: {},\n          SourceArn: {},\n          State: {},\n          CrossAccount: {\n            type: 'boolean'\n          },\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    UpdateRegistry: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/registries/name/{registryName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Description: {},\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          }\n        },\n        required: [\n          'RegistryName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Description: {},\n          RegistryArn: {},\n          RegistryName: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    UpdateSchema: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/registries/name/{registryName}/schemas/name/{schemaName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ClientTokenId: {\n            idempotencyToken: true\n          },\n          Content: {},\n          Description: {},\n          RegistryName: {\n            location: 'uri',\n            locationName: 'registryName'\n          },\n          SchemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          },\n          Type: {}\n        },\n        required: [\n          'RegistryName',\n          'SchemaName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Description: {},\n          LastModified: {\n            shape: 'Sf'\n          },\n          SchemaArn: {},\n          SchemaName: {},\n          SchemaVersion: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          },\n          Type: {},\n          VersionCreatedDate: {\n            shape: 'Sf'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sf: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    }\n  }\n}"]}