{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/cloudtrail-2013-11-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","AddTags","input","type","required","members","ResourceId","TagsList","shape","output","idempotent","CancelQuery","EventDataStore","deprecated","deprecatedMessage","QueryId","QueryStatus","CreateChannel","Name","Source","Destinations","Tags","ChannelArn","CreateEventDataStore","AdvancedEventSelectors","MultiRegionEnabled","OrganizationEnabled","RetentionPeriod","TerminationProtectionEnabled","KmsKeyId","StartIngestion","BillingMode","EventDataStoreArn","Status","CreatedTimestamp","UpdatedTimestamp","CreateTrail","S3BucketName","S3KeyPrefix","SnsTopicName","IncludeGlobalServiceEvents","IsMultiRegionTrail","EnableLogFileValidation","CloudWatchLogsLogGroupArn","CloudWatchLogsRoleArn","IsOrganizationTrail","SnsTopicARN","TrailARN","LogFileValidationEnabled","DeleteChannel","Channel","DeleteEventDataStore","DeleteResourcePolicy","ResourceArn","DeleteTrail","DeregisterOrganizationDelegatedAdmin","DelegatedAdminAccountId","DescribeQuery","QueryAlias","QueryString","QueryStatistics","EventsMatched","EventsScanned","BytesScanned","ExecutionTimeInMillis","CreationTime","ErrorMessage","DeliveryS3Uri","DeliveryStatus","DescribeTrails","trailNameList","member","includeShadowTrails","trailList","DisableFederation","FederationStatus","EnableFederation","FederationRoleArn","GetChannel","SourceConfig","ApplyToAllRegions","IngestionStatus","LatestIngestionSuccessTime","LatestIngestionSuccessEventID","LatestIngestionErrorCode","LatestIngestionAttemptTime","LatestIngestionAttemptEventID","GetEventDataStore","PartitionKeys","Type","GetEventSelectors","TrailName","EventSelectors","GetImport","ImportId","ImportSource","StartEventTime","EndEventTime","ImportStatus","ImportStatistics","GetInsightSelectors","InsightSelectors","InsightsDestination","GetQueryResults","NextToken","MaxQueryResults","ResultsCount","TotalResultsCount","QueryResultRows","key","value","GetResourcePolicy","ResourcePolicy","GetTrail","Trail","GetTrailStatus","IsLogging","LatestDeliveryError","LatestNotificationError","LatestDeliveryTime","LatestNotificationTime","StartLoggingTime","StopLoggingTime","LatestCloudWatchLogsDeliveryError","LatestCloudWatchLogsDeliveryTime","LatestDigestDeliveryTime","LatestDigestDeliveryError","LatestDeliveryAttemptTime","LatestNotificationAttemptTime","LatestNotificationAttemptSucceeded","LatestDeliveryAttemptSucceeded","TimeLoggingStarted","TimeLoggingStopped","ListChannels","MaxResults","Channels","ListEventDataStores","EventDataStores","ListImportFailures","Failures","Location","ErrorType","LastUpdatedTime","ListImports","Destination","Imports","ListInsightsMetricData","EventSource","EventName","InsightType","ErrorCode","StartTime","EndTime","Period","DataType","Timestamps","Values","ListPublicKeys","PublicKeyList","Value","ValidityStartTime","ValidityEndTime","Fingerprint","ListQueries","Queries","ListTags","ResourceIdList","ResourceTagList","ListTrails","Trails","HomeRegion","LookupEvents","LookupAttributes","AttributeKey","AttributeValue","EventCategory","Events","EventId","ReadOnly","AccessKeyId","EventTime","Username","Resources","ResourceType","ResourceName","CloudTrailEvent","PutEventSelectors","PutInsightSelectors","PutResourcePolicy","RegisterOrganizationDelegatedAdmin","MemberAccountId","RemoveTags","RestoreEventDataStore","StartEventDataStoreIngestion","StartImport","StartLogging","StartQuery","QueryStatement","QueryParameters","StopEventDataStoreIngestion","StopImport","StopLogging","UpdateChannel","UpdateEventDataStore","UpdateTrail","shapes","S3","Key","Sg","So","FieldSelectors","Field","Equals","StartsWith","EndsWith","NotEquals","NotStartsWith","NotEndsWith","Su","S1w","HasCustomEventSelectors","HasInsightSelectors","S2f","ReadWriteType","IncludeManagementEvents","DataResources","ExcludeManagementEventSources","S2o","S2p","S3LocationUri","S3BucketRegion","S3BucketAccessRoleArn","S2s","PrefixesFound","PrefixesCompleted","FilesCompleted","EventsCompleted","FailedEntries","S2v"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2013-11-01',\n    endpointPrefix: 'cloudtrail',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceAbbreviation: 'CloudTrail',\n    serviceFullName: 'AWS CloudTrail',\n    serviceId: 'CloudTrail',\n    signatureVersion: 'v4',\n    targetPrefix: 'com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101',\n    uid: 'cloudtrail-2013-11-01'\n  },\n  operations: {\n    AddTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceId',\n          'TagsList'\n        ],\n        members: {\n          ResourceId: {},\n          TagsList: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    CancelQuery: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueryId'\n        ],\n        members: {\n          EventDataStore: {\n            deprecated: true,\n            deprecatedMessage: 'EventDataStore is no longer required by CancelQueryRequest'\n          },\n          QueryId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'QueryId',\n          'QueryStatus'\n        ],\n        members: {\n          QueryId: {},\n          QueryStatus: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateChannel: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name',\n          'Source',\n          'Destinations'\n        ],\n        members: {\n          Name: {},\n          Source: {},\n          Destinations: {\n            shape: 'Sg'\n          },\n          Tags: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ChannelArn: {},\n          Name: {},\n          Source: {},\n          Destinations: {\n            shape: 'Sg'\n          },\n          Tags: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    CreateEventDataStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {},\n          AdvancedEventSelectors: {\n            shape: 'So'\n          },\n          MultiRegionEnabled: {\n            type: 'boolean'\n          },\n          OrganizationEnabled: {\n            type: 'boolean'\n          },\n          RetentionPeriod: {\n            type: 'integer'\n          },\n          TerminationProtectionEnabled: {\n            type: 'boolean'\n          },\n          TagsList: {\n            shape: 'S3'\n          },\n          KmsKeyId: {},\n          StartIngestion: {\n            type: 'boolean'\n          },\n          BillingMode: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EventDataStoreArn: {},\n          Name: {},\n          Status: {},\n          AdvancedEventSelectors: {\n            shape: 'So'\n          },\n          MultiRegionEnabled: {\n            type: 'boolean'\n          },\n          OrganizationEnabled: {\n            type: 'boolean'\n          },\n          RetentionPeriod: {\n            type: 'integer'\n          },\n          TerminationProtectionEnabled: {\n            type: 'boolean'\n          },\n          TagsList: {\n            shape: 'S3'\n          },\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          UpdatedTimestamp: {\n            type: 'timestamp'\n          },\n          KmsKeyId: {},\n          BillingMode: {}\n        }\n      }\n    },\n    CreateTrail: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name',\n          'S3BucketName'\n        ],\n        members: {\n          Name: {},\n          S3BucketName: {},\n          S3KeyPrefix: {},\n          SnsTopicName: {},\n          IncludeGlobalServiceEvents: {\n            type: 'boolean'\n          },\n          IsMultiRegionTrail: {\n            type: 'boolean'\n          },\n          EnableLogFileValidation: {\n            type: 'boolean'\n          },\n          CloudWatchLogsLogGroupArn: {},\n          CloudWatchLogsRoleArn: {},\n          KmsKeyId: {},\n          IsOrganizationTrail: {\n            type: 'boolean'\n          },\n          TagsList: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Name: {},\n          S3BucketName: {},\n          S3KeyPrefix: {},\n          SnsTopicName: {\n            deprecated: true\n          },\n          SnsTopicARN: {},\n          IncludeGlobalServiceEvents: {\n            type: 'boolean'\n          },\n          IsMultiRegionTrail: {\n            type: 'boolean'\n          },\n          TrailARN: {},\n          LogFileValidationEnabled: {\n            type: 'boolean'\n          },\n          CloudWatchLogsLogGroupArn: {},\n          CloudWatchLogsRoleArn: {},\n          KmsKeyId: {},\n          IsOrganizationTrail: {\n            type: 'boolean'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteChannel: {\n      input: {\n        type: 'structure',\n        required: [\n          'Channel'\n        ],\n        members: {\n          Channel: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteEventDataStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'EventDataStore'\n        ],\n        members: {\n          EventDataStore: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteResourcePolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteTrail: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeregisterOrganizationDelegatedAdmin: {\n      input: {\n        type: 'structure',\n        required: [\n          'DelegatedAdminAccountId'\n        ],\n        members: {\n          DelegatedAdminAccountId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DescribeQuery: {\n      input: {\n        type: 'structure',\n        members: {\n          EventDataStore: {\n            deprecated: true,\n            deprecatedMessage: 'EventDataStore is no longer required by DescribeQueryRequest'\n          },\n          QueryId: {},\n          QueryAlias: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          QueryId: {},\n          QueryString: {},\n          QueryStatus: {},\n          QueryStatistics: {\n            type: 'structure',\n            members: {\n              EventsMatched: {\n                type: 'long'\n              },\n              EventsScanned: {\n                type: 'long'\n              },\n              BytesScanned: {\n                type: 'long'\n              },\n              ExecutionTimeInMillis: {\n                type: 'integer'\n              },\n              CreationTime: {\n                type: 'timestamp'\n              }\n            }\n          },\n          ErrorMessage: {},\n          DeliveryS3Uri: {},\n          DeliveryStatus: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeTrails: {\n      input: {\n        type: 'structure',\n        members: {\n          trailNameList: {\n            type: 'list',\n            member: {}\n          },\n          includeShadowTrails: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          trailList: {\n            type: 'list',\n            member: {\n              shape: 'S1w'\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DisableFederation: {\n      input: {\n        type: 'structure',\n        required: [\n          'EventDataStore'\n        ],\n        members: {\n          EventDataStore: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EventDataStoreArn: {},\n          FederationStatus: {}\n        }\n      }\n    },\n    EnableFederation: {\n      input: {\n        type: 'structure',\n        required: [\n          'EventDataStore',\n          'FederationRoleArn'\n        ],\n        members: {\n          EventDataStore: {},\n          FederationRoleArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EventDataStoreArn: {},\n          FederationStatus: {},\n          FederationRoleArn: {}\n        }\n      }\n    },\n    GetChannel: {\n      input: {\n        type: 'structure',\n        required: [\n          'Channel'\n        ],\n        members: {\n          Channel: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ChannelArn: {},\n          Name: {},\n          Source: {},\n          SourceConfig: {\n            type: 'structure',\n            members: {\n              ApplyToAllRegions: {\n                type: 'boolean'\n              },\n              AdvancedEventSelectors: {\n                shape: 'So'\n              }\n            }\n          },\n          Destinations: {\n            shape: 'Sg'\n          },\n          IngestionStatus: {\n            type: 'structure',\n            members: {\n              LatestIngestionSuccessTime: {\n                type: 'timestamp'\n              },\n              LatestIngestionSuccessEventID: {},\n              LatestIngestionErrorCode: {},\n              LatestIngestionAttemptTime: {\n                type: 'timestamp'\n              },\n              LatestIngestionAttemptEventID: {}\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetEventDataStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'EventDataStore'\n        ],\n        members: {\n          EventDataStore: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EventDataStoreArn: {},\n          Name: {},\n          Status: {},\n          AdvancedEventSelectors: {\n            shape: 'So'\n          },\n          MultiRegionEnabled: {\n            type: 'boolean'\n          },\n          OrganizationEnabled: {\n            type: 'boolean'\n          },\n          RetentionPeriod: {\n            type: 'integer'\n          },\n          TerminationProtectionEnabled: {\n            type: 'boolean'\n          },\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          UpdatedTimestamp: {\n            type: 'timestamp'\n          },\n          KmsKeyId: {},\n          BillingMode: {},\n          FederationStatus: {},\n          FederationRoleArn: {},\n          PartitionKeys: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Name',\n                'Type'\n              ],\n              members: {\n                Name: {},\n                Type: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetEventSelectors: {\n      input: {\n        type: 'structure',\n        required: [\n          'TrailName'\n        ],\n        members: {\n          TrailName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TrailARN: {},\n          EventSelectors: {\n            shape: 'S2f'\n          },\n          AdvancedEventSelectors: {\n            shape: 'So'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetImport: {\n      input: {\n        type: 'structure',\n        required: [\n          'ImportId'\n        ],\n        members: {\n          ImportId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ImportId: {},\n          Destinations: {\n            shape: 'S2o'\n          },\n          ImportSource: {\n            shape: 'S2p'\n          },\n          StartEventTime: {\n            type: 'timestamp'\n          },\n          EndEventTime: {\n            type: 'timestamp'\n          },\n          ImportStatus: {},\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          UpdatedTimestamp: {\n            type: 'timestamp'\n          },\n          ImportStatistics: {\n            shape: 'S2s'\n          }\n        }\n      }\n    },\n    GetInsightSelectors: {\n      input: {\n        type: 'structure',\n        members: {\n          TrailName: {},\n          EventDataStore: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TrailARN: {},\n          InsightSelectors: {\n            shape: 'S2v'\n          },\n          EventDataStoreArn: {},\n          InsightsDestination: {}\n        }\n      },\n      idempotent: true\n    },\n    GetQueryResults: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueryId'\n        ],\n        members: {\n          EventDataStore: {\n            deprecated: true,\n            deprecatedMessage: 'EventDataStore is no longer required by GetQueryResultsRequest'\n          },\n          QueryId: {},\n          NextToken: {},\n          MaxQueryResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          QueryStatus: {},\n          QueryStatistics: {\n            type: 'structure',\n            members: {\n              ResultsCount: {\n                type: 'integer'\n              },\n              TotalResultsCount: {\n                type: 'integer'\n              },\n              BytesScanned: {\n                type: 'long'\n              }\n            }\n          },\n          QueryResultRows: {\n            type: 'list',\n            member: {\n              type: 'list',\n              member: {\n                type: 'map',\n                key: {},\n                value: {}\n              }\n            }\n          },\n          NextToken: {},\n          ErrorMessage: {}\n        }\n      }\n    },\n    GetResourcePolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceArn: {},\n          ResourcePolicy: {}\n        }\n      },\n      idempotent: true\n    },\n    GetTrail: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Trail: {\n            shape: 'S1w'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetTrailStatus: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IsLogging: {\n            type: 'boolean'\n          },\n          LatestDeliveryError: {},\n          LatestNotificationError: {},\n          LatestDeliveryTime: {\n            type: 'timestamp'\n          },\n          LatestNotificationTime: {\n            type: 'timestamp'\n          },\n          StartLoggingTime: {\n            type: 'timestamp'\n          },\n          StopLoggingTime: {\n            type: 'timestamp'\n          },\n          LatestCloudWatchLogsDeliveryError: {},\n          LatestCloudWatchLogsDeliveryTime: {\n            type: 'timestamp'\n          },\n          LatestDigestDeliveryTime: {\n            type: 'timestamp'\n          },\n          LatestDigestDeliveryError: {},\n          LatestDeliveryAttemptTime: {},\n          LatestNotificationAttemptTime: {},\n          LatestNotificationAttemptSucceeded: {},\n          LatestDeliveryAttemptSucceeded: {},\n          TimeLoggingStarted: {},\n          TimeLoggingStopped: {}\n        }\n      },\n      idempotent: true\n    },\n    ListChannels: {\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Channels: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ChannelArn: {},\n                Name: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListEventDataStores: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EventDataStores: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                EventDataStoreArn: {},\n                Name: {},\n                TerminationProtectionEnabled: {\n                  deprecated: true,\n                  deprecatedMessage: 'TerminationProtectionEnabled is no longer returned by ListEventDataStores',\n                  type: 'boolean'\n                },\n                Status: {\n                  deprecated: true,\n                  deprecatedMessage: 'Status is no longer returned by ListEventDataStores'\n                },\n                AdvancedEventSelectors: {\n                  shape: 'So',\n                  deprecated: true,\n                  deprecatedMessage: 'AdvancedEventSelectors is no longer returned by ListEventDataStores'\n                },\n                MultiRegionEnabled: {\n                  deprecated: true,\n                  deprecatedMessage: 'MultiRegionEnabled is no longer returned by ListEventDataStores',\n                  type: 'boolean'\n                },\n                OrganizationEnabled: {\n                  deprecated: true,\n                  deprecatedMessage: 'OrganizationEnabled is no longer returned by ListEventDataStores',\n                  type: 'boolean'\n                },\n                RetentionPeriod: {\n                  deprecated: true,\n                  deprecatedMessage: 'RetentionPeriod is no longer returned by ListEventDataStores',\n                  type: 'integer'\n                },\n                CreatedTimestamp: {\n                  deprecated: true,\n                  deprecatedMessage: 'CreatedTimestamp is no longer returned by ListEventDataStores',\n                  type: 'timestamp'\n                },\n                UpdatedTimestamp: {\n                  deprecated: true,\n                  deprecatedMessage: 'UpdatedTimestamp is no longer returned by ListEventDataStores',\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListImportFailures: {\n      input: {\n        type: 'structure',\n        required: [\n          'ImportId'\n        ],\n        members: {\n          ImportId: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Failures: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Location: {},\n                Status: {},\n                ErrorType: {},\n                ErrorMessage: {},\n                LastUpdatedTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListImports: {\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          Destination: {},\n          ImportStatus: {},\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Imports: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ImportId: {},\n                ImportStatus: {},\n                Destinations: {\n                  shape: 'S2o'\n                },\n                CreatedTimestamp: {\n                  type: 'timestamp'\n                },\n                UpdatedTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListInsightsMetricData: {\n      input: {\n        type: 'structure',\n        required: [\n          'EventSource',\n          'EventName',\n          'InsightType'\n        ],\n        members: {\n          EventSource: {},\n          EventName: {},\n          InsightType: {},\n          ErrorCode: {},\n          StartTime: {\n            type: 'timestamp'\n          },\n          EndTime: {\n            type: 'timestamp'\n          },\n          Period: {\n            type: 'integer'\n          },\n          DataType: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EventSource: {},\n          EventName: {},\n          InsightType: {},\n          ErrorCode: {},\n          Timestamps: {\n            type: 'list',\n            member: {\n              type: 'timestamp'\n            }\n          },\n          Values: {\n            type: 'list',\n            member: {\n              type: 'double'\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListPublicKeys: {\n      input: {\n        type: 'structure',\n        members: {\n          StartTime: {\n            type: 'timestamp'\n          },\n          EndTime: {\n            type: 'timestamp'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PublicKeyList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Value: {\n                  type: 'blob'\n                },\n                ValidityStartTime: {\n                  type: 'timestamp'\n                },\n                ValidityEndTime: {\n                  type: 'timestamp'\n                },\n                Fingerprint: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListQueries: {\n      input: {\n        type: 'structure',\n        required: [\n          'EventDataStore'\n        ],\n        members: {\n          EventDataStore: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          StartTime: {\n            type: 'timestamp'\n          },\n          EndTime: {\n            type: 'timestamp'\n          },\n          QueryStatus: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Queries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                QueryId: {},\n                QueryStatus: {},\n                CreationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceIdList'\n        ],\n        members: {\n          ResourceIdList: {\n            type: 'list',\n            member: {}\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceTagList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ResourceId: {},\n                TagsList: {\n                  shape: 'S3'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListTrails: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Trails: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                TrailARN: {},\n                Name: {},\n                HomeRegion: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    LookupEvents: {\n      input: {\n        type: 'structure',\n        members: {\n          LookupAttributes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'AttributeKey',\n                'AttributeValue'\n              ],\n              members: {\n                AttributeKey: {},\n                AttributeValue: {}\n              }\n            }\n          },\n          StartTime: {\n            type: 'timestamp'\n          },\n          EndTime: {\n            type: 'timestamp'\n          },\n          EventCategory: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Events: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                EventId: {},\n                EventName: {},\n                ReadOnly: {},\n                AccessKeyId: {},\n                EventTime: {\n                  type: 'timestamp'\n                },\n                EventSource: {},\n                Username: {},\n                Resources: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      ResourceType: {},\n                      ResourceName: {}\n                    }\n                  }\n                },\n                CloudTrailEvent: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    PutEventSelectors: {\n      input: {\n        type: 'structure',\n        required: [\n          'TrailName'\n        ],\n        members: {\n          TrailName: {},\n          EventSelectors: {\n            shape: 'S2f'\n          },\n          AdvancedEventSelectors: {\n            shape: 'So'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TrailARN: {},\n          EventSelectors: {\n            shape: 'S2f'\n          },\n          AdvancedEventSelectors: {\n            shape: 'So'\n          }\n        }\n      },\n      idempotent: true\n    },\n    PutInsightSelectors: {\n      input: {\n        type: 'structure',\n        required: [\n          'InsightSelectors'\n        ],\n        members: {\n          TrailName: {},\n          InsightSelectors: {\n            shape: 'S2v'\n          },\n          EventDataStore: {},\n          InsightsDestination: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TrailARN: {},\n          InsightSelectors: {\n            shape: 'S2v'\n          },\n          EventDataStoreArn: {},\n          InsightsDestination: {}\n        }\n      },\n      idempotent: true\n    },\n    PutResourcePolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'ResourcePolicy'\n        ],\n        members: {\n          ResourceArn: {},\n          ResourcePolicy: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceArn: {},\n          ResourcePolicy: {}\n        }\n      },\n      idempotent: true\n    },\n    RegisterOrganizationDelegatedAdmin: {\n      input: {\n        type: 'structure',\n        required: [\n          'MemberAccountId'\n        ],\n        members: {\n          MemberAccountId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    RemoveTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceId',\n          'TagsList'\n        ],\n        members: {\n          ResourceId: {},\n          TagsList: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    RestoreEventDataStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'EventDataStore'\n        ],\n        members: {\n          EventDataStore: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EventDataStoreArn: {},\n          Name: {},\n          Status: {},\n          AdvancedEventSelectors: {\n            shape: 'So'\n          },\n          MultiRegionEnabled: {\n            type: 'boolean'\n          },\n          OrganizationEnabled: {\n            type: 'boolean'\n          },\n          RetentionPeriod: {\n            type: 'integer'\n          },\n          TerminationProtectionEnabled: {\n            type: 'boolean'\n          },\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          UpdatedTimestamp: {\n            type: 'timestamp'\n          },\n          KmsKeyId: {},\n          BillingMode: {}\n        }\n      }\n    },\n    StartEventDataStoreIngestion: {\n      input: {\n        type: 'structure',\n        required: [\n          'EventDataStore'\n        ],\n        members: {\n          EventDataStore: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    StartImport: {\n      input: {\n        type: 'structure',\n        members: {\n          Destinations: {\n            shape: 'S2o'\n          },\n          ImportSource: {\n            shape: 'S2p'\n          },\n          StartEventTime: {\n            type: 'timestamp'\n          },\n          EndEventTime: {\n            type: 'timestamp'\n          },\n          ImportId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ImportId: {},\n          Destinations: {\n            shape: 'S2o'\n          },\n          ImportSource: {\n            shape: 'S2p'\n          },\n          StartEventTime: {\n            type: 'timestamp'\n          },\n          EndEventTime: {\n            type: 'timestamp'\n          },\n          ImportStatus: {},\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          UpdatedTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    StartLogging: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    StartQuery: {\n      input: {\n        type: 'structure',\n        members: {\n          QueryStatement: {},\n          DeliveryS3Uri: {},\n          QueryAlias: {},\n          QueryParameters: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          QueryId: {}\n        }\n      },\n      idempotent: true\n    },\n    StopEventDataStoreIngestion: {\n      input: {\n        type: 'structure',\n        required: [\n          'EventDataStore'\n        ],\n        members: {\n          EventDataStore: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    StopImport: {\n      input: {\n        type: 'structure',\n        required: [\n          'ImportId'\n        ],\n        members: {\n          ImportId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ImportId: {},\n          ImportSource: {\n            shape: 'S2p'\n          },\n          Destinations: {\n            shape: 'S2o'\n          },\n          ImportStatus: {},\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          UpdatedTimestamp: {\n            type: 'timestamp'\n          },\n          StartEventTime: {\n            type: 'timestamp'\n          },\n          EndEventTime: {\n            type: 'timestamp'\n          },\n          ImportStatistics: {\n            shape: 'S2s'\n          }\n        }\n      }\n    },\n    StopLogging: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateChannel: {\n      input: {\n        type: 'structure',\n        required: [\n          'Channel'\n        ],\n        members: {\n          Channel: {},\n          Destinations: {\n            shape: 'Sg'\n          },\n          Name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ChannelArn: {},\n          Name: {},\n          Source: {},\n          Destinations: {\n            shape: 'Sg'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateEventDataStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'EventDataStore'\n        ],\n        members: {\n          EventDataStore: {},\n          Name: {},\n          AdvancedEventSelectors: {\n            shape: 'So'\n          },\n          MultiRegionEnabled: {\n            type: 'boolean'\n          },\n          OrganizationEnabled: {\n            type: 'boolean'\n          },\n          RetentionPeriod: {\n            type: 'integer'\n          },\n          TerminationProtectionEnabled: {\n            type: 'boolean'\n          },\n          KmsKeyId: {},\n          BillingMode: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EventDataStoreArn: {},\n          Name: {},\n          Status: {},\n          AdvancedEventSelectors: {\n            shape: 'So'\n          },\n          MultiRegionEnabled: {\n            type: 'boolean'\n          },\n          OrganizationEnabled: {\n            type: 'boolean'\n          },\n          RetentionPeriod: {\n            type: 'integer'\n          },\n          TerminationProtectionEnabled: {\n            type: 'boolean'\n          },\n          CreatedTimestamp: {\n            type: 'timestamp'\n          },\n          UpdatedTimestamp: {\n            type: 'timestamp'\n          },\n          KmsKeyId: {},\n          BillingMode: {},\n          FederationStatus: {},\n          FederationRoleArn: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateTrail: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {},\n          S3BucketName: {},\n          S3KeyPrefix: {},\n          SnsTopicName: {},\n          IncludeGlobalServiceEvents: {\n            type: 'boolean'\n          },\n          IsMultiRegionTrail: {\n            type: 'boolean'\n          },\n          EnableLogFileValidation: {\n            type: 'boolean'\n          },\n          CloudWatchLogsLogGroupArn: {},\n          CloudWatchLogsRoleArn: {},\n          KmsKeyId: {},\n          IsOrganizationTrail: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Name: {},\n          S3BucketName: {},\n          S3KeyPrefix: {},\n          SnsTopicName: {\n            deprecated: true\n          },\n          SnsTopicARN: {},\n          IncludeGlobalServiceEvents: {\n            type: 'boolean'\n          },\n          IsMultiRegionTrail: {\n            type: 'boolean'\n          },\n          TrailARN: {},\n          LogFileValidationEnabled: {\n            type: 'boolean'\n          },\n          CloudWatchLogsLogGroupArn: {},\n          CloudWatchLogsRoleArn: {},\n          KmsKeyId: {},\n          IsOrganizationTrail: {\n            type: 'boolean'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sg: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Type',\n          'Location'\n        ],\n        members: {\n          Type: {},\n          Location: {}\n        }\n      }\n    },\n    So: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'FieldSelectors'\n        ],\n        members: {\n          Name: {},\n          FieldSelectors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Field'\n              ],\n              members: {\n                Field: {},\n                Equals: {\n                  shape: 'Su'\n                },\n                StartsWith: {\n                  shape: 'Su'\n                },\n                EndsWith: {\n                  shape: 'Su'\n                },\n                NotEquals: {\n                  shape: 'Su'\n                },\n                NotStartsWith: {\n                  shape: 'Su'\n                },\n                NotEndsWith: {\n                  shape: 'Su'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    Su: {\n      type: 'list',\n      member: {}\n    },\n    S1w: {\n      type: 'structure',\n      members: {\n        Name: {},\n        S3BucketName: {},\n        S3KeyPrefix: {},\n        SnsTopicName: {\n          deprecated: true\n        },\n        SnsTopicARN: {},\n        IncludeGlobalServiceEvents: {\n          type: 'boolean'\n        },\n        IsMultiRegionTrail: {\n          type: 'boolean'\n        },\n        HomeRegion: {},\n        TrailARN: {},\n        LogFileValidationEnabled: {\n          type: 'boolean'\n        },\n        CloudWatchLogsLogGroupArn: {},\n        CloudWatchLogsRoleArn: {},\n        KmsKeyId: {},\n        HasCustomEventSelectors: {\n          type: 'boolean'\n        },\n        HasInsightSelectors: {\n          type: 'boolean'\n        },\n        IsOrganizationTrail: {\n          type: 'boolean'\n        }\n      }\n    },\n    S2f: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          ReadWriteType: {},\n          IncludeManagementEvents: {\n            type: 'boolean'\n          },\n          DataResources: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Type: {},\n                Values: {\n                  type: 'list',\n                  member: {}\n                }\n              }\n            }\n          },\n          ExcludeManagementEventSources: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    S2o: {\n      type: 'list',\n      member: {}\n    },\n    S2p: {\n      type: 'structure',\n      required: [\n        'S3'\n      ],\n      members: {\n        S3: {\n          type: 'structure',\n          required: [\n            'S3LocationUri',\n            'S3BucketRegion',\n            'S3BucketAccessRoleArn'\n          ],\n          members: {\n            S3LocationUri: {},\n            S3BucketRegion: {},\n            S3BucketAccessRoleArn: {}\n          }\n        }\n      }\n    },\n    S2s: {\n      type: 'structure',\n      members: {\n        PrefixesFound: {\n          type: 'long'\n        },\n        PrefixesCompleted: {\n          type: 'long'\n        },\n        FilesCompleted: {\n          type: 'long'\n        },\n        EventsCompleted: {\n          type: 'long'\n        },\n        FailedEntries: {\n          type: 'long'\n        }\n      }\n    },\n    S2v: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          InsightType: {}\n        }\n      }\n    }\n  }\n}"]}