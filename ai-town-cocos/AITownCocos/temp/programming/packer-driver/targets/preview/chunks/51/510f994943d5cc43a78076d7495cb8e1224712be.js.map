{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/mediastore-data-2017-09-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","DeleteObject","http","method","requestUri","input","type","required","members","Path","location","locationName","output","DescribeObject","ETag","ContentType","ContentLength","CacheControl","LastModified","GetObject","Range","Body","shape","ContentRange","StatusCode","payload","ListItems","MaxResults","NextToken","Items","member","Name","Type","PutObject","StorageClass","UploadAvailability","ContentSHA256","authtype","shapes","Se","streaming"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,iBAFR;AAGRC,UAAAA,QAAQ,EAAE,WAHF;AAIRC,UAAAA,mBAAmB,EAAE,iBAJb;AAKRC,UAAAA,eAAe,EAAE,qCALT;AAMRC,UAAAA,SAAS,EAAE,iBANH;AAORC,UAAAA,gBAAgB,EAAE,IAPV;AAQRC,UAAAA,WAAW,EAAE,YARL;AASRC,UAAAA,GAAG,EAAE;AATG,SAFG;AAabC,QAAAA,UAAU,EAAE;AACVC,UAAAA,YAAY,EAAE;AACZC,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,QADJ;AAEJC,cAAAA,UAAU,EAAE;AAFR,aADM;AAKZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,QAAQ,EAAE,KADN;AAEJC,kBAAAA,YAAY,EAAE;AAFV;AADC;AALJ,aALK;AAiBZC,YAAAA,MAAM,EAAE;AACNN,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAjBI,WADJ;AAuBVK,UAAAA,cAAc,EAAE;AACdX,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,MADJ;AAEJC,cAAAA,UAAU,EAAE;AAFR,aADQ;AAKdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,QAAQ,EAAE,KADN;AAEJC,kBAAAA,YAAY,EAAE;AAFV;AADC;AALJ,aALO;AAiBdC,YAAAA,MAAM,EAAE;AACNN,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPM,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,QAAQ,EAAE,QADN;AAEJC,kBAAAA,YAAY,EAAE;AAFV,iBADC;AAKPI,gBAAAA,WAAW,EAAE;AACXL,kBAAAA,QAAQ,EAAE,QADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBALN;AASPK,gBAAAA,aAAa,EAAE;AACbN,kBAAAA,QAAQ,EAAE,QADG;AAEbC,kBAAAA,YAAY,EAAE,gBAFD;AAGbL,kBAAAA,IAAI,EAAE;AAHO,iBATR;AAcPW,gBAAAA,YAAY,EAAE;AACZP,kBAAAA,QAAQ,EAAE,QADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF,iBAdP;AAkBPO,gBAAAA,YAAY,EAAE;AACZR,kBAAAA,QAAQ,EAAE,QADE;AAEZC,kBAAAA,YAAY,EAAE,eAFF;AAGZL,kBAAAA,IAAI,EAAE;AAHM;AAlBP;AAFH;AAjBM,WAvBN;AAoEVa,UAAAA,SAAS,EAAE;AACTjB,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,KADJ;AAEJC,cAAAA,UAAU,EAAE;AAFR,aADG;AAKTC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,QAAQ,EAAE,KADN;AAEJC,kBAAAA,YAAY,EAAE;AAFV,iBADC;AAKPS,gBAAAA,KAAK,EAAE;AACLV,kBAAAA,QAAQ,EAAE,QADL;AAELC,kBAAAA,YAAY,EAAE;AAFT;AALA;AALJ,aALE;AAqBTC,YAAAA,MAAM,EAAE;AACNN,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPa,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH,iBADC;AAIPL,gBAAAA,YAAY,EAAE;AACZP,kBAAAA,QAAQ,EAAE,QADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF,iBAJP;AAQPY,gBAAAA,YAAY,EAAE;AACZb,kBAAAA,QAAQ,EAAE,QADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF,iBARP;AAYPK,gBAAAA,aAAa,EAAE;AACbN,kBAAAA,QAAQ,EAAE,QADG;AAEbC,kBAAAA,YAAY,EAAE,gBAFD;AAGbL,kBAAAA,IAAI,EAAE;AAHO,iBAZR;AAiBPS,gBAAAA,WAAW,EAAE;AACXL,kBAAAA,QAAQ,EAAE,QADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBAjBN;AAqBPG,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,QAAQ,EAAE,QADN;AAEJC,kBAAAA,YAAY,EAAE;AAFV,iBArBC;AAyBPO,gBAAAA,YAAY,EAAE;AACZR,kBAAAA,QAAQ,EAAE,QADE;AAEZC,kBAAAA,YAAY,EAAE,eAFF;AAGZL,kBAAAA,IAAI,EAAE;AAHM,iBAzBP;AA8BPkB,gBAAAA,UAAU,EAAE;AACVd,kBAAAA,QAAQ,EAAE,YADA;AAEVJ,kBAAAA,IAAI,EAAE;AAFI;AA9BL,eALH;AAwCNmB,cAAAA,OAAO,EAAE;AAxCH;AArBC,WApED;AAoIVC,UAAAA,SAAS,EAAE;AACTxB,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE;AADJ,aADG;AAITE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,QAAQ,EAAE,aADN;AAEJC,kBAAAA,YAAY,EAAE;AAFV,iBADC;AAKPgB,gBAAAA,UAAU,EAAE;AACVjB,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUPsB,gBAAAA,SAAS,EAAE;AACTlB,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAVJ;AAFJ,aAJE;AAsBTC,YAAAA,MAAM,EAAE;AACNN,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqB,gBAAAA,KAAK,EAAE;AACLvB,kBAAAA,IAAI,EAAE,MADD;AAELwB,kBAAAA,MAAM,EAAE;AACNxB,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPuB,sBAAAA,IAAI,EAAE,EADC;AAEPC,sBAAAA,IAAI,EAAE,EAFC;AAGPlB,sBAAAA,IAAI,EAAE,EAHC;AAIPI,sBAAAA,YAAY,EAAE;AACZZ,wBAAAA,IAAI,EAAE;AADM,uBAJP;AAOPS,sBAAAA,WAAW,EAAE,EAPN;AAQPC,sBAAAA,aAAa,EAAE;AACbV,wBAAAA,IAAI,EAAE;AADO;AARR;AAFH;AAFH,iBADA;AAmBPsB,gBAAAA,SAAS,EAAE;AAnBJ;AAFH;AAtBC,WApID;AAmLVK,UAAAA,SAAS,EAAE;AACT/B,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,KADJ;AAEJC,cAAAA,UAAU,EAAE;AAFR,aADG;AAKTC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,MAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPa,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH,iBADC;AAIPb,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,QAAQ,EAAE,KADN;AAEJC,kBAAAA,YAAY,EAAE;AAFV,iBAJC;AAQPI,gBAAAA,WAAW,EAAE;AACXL,kBAAAA,QAAQ,EAAE,QADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBARN;AAYPM,gBAAAA,YAAY,EAAE;AACZP,kBAAAA,QAAQ,EAAE,QADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF,iBAZP;AAgBPuB,gBAAAA,YAAY,EAAE;AACZxB,kBAAAA,QAAQ,EAAE,QADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF,iBAhBP;AAoBPwB,gBAAAA,kBAAkB,EAAE;AAClBzB,kBAAAA,QAAQ,EAAE,QADQ;AAElBC,kBAAAA,YAAY,EAAE;AAFI;AApBb,eANJ;AA+BLc,cAAAA,OAAO,EAAE;AA/BJ,aALE;AAsCTb,YAAAA,MAAM,EAAE;AACNN,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP4B,gBAAAA,aAAa,EAAE,EADR;AAEPtB,gBAAAA,IAAI,EAAE,EAFC;AAGPoB,gBAAAA,YAAY,EAAE;AAHP;AAFH,aAtCC;AA8CTG,YAAAA,QAAQ,EAAE;AA9CD;AAnLD,SAbC;AAiPbC,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACFjC,YAAAA,IAAI,EAAE,MADJ;AAEFkC,YAAAA,SAAS,EAAE;AAFT;AADE;AAjPK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2017-09-01',\n    endpointPrefix: 'data.mediastore',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'MediaStore Data',\n    serviceFullName: 'AWS Elemental MediaStore Data Plane',\n    serviceId: 'MediaStore Data',\n    signatureVersion: 'v4',\n    signingName: 'mediastore',\n    uid: 'mediastore-data-2017-09-01'\n  },\n  operations: {\n    DeleteObject: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/{Path+}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Path'\n        ],\n        members: {\n          Path: {\n            location: 'uri',\n            locationName: 'Path'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DescribeObject: {\n      http: {\n        method: 'HEAD',\n        requestUri: '/{Path+}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Path'\n        ],\n        members: {\n          Path: {\n            location: 'uri',\n            locationName: 'Path'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ETag: {\n            location: 'header',\n            locationName: 'ETag'\n          },\n          ContentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          ContentLength: {\n            location: 'header',\n            locationName: 'Content-Length',\n            type: 'long'\n          },\n          CacheControl: {\n            location: 'header',\n            locationName: 'Cache-Control'\n          },\n          LastModified: {\n            location: 'header',\n            locationName: 'Last-Modified',\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetObject: {\n      http: {\n        method: 'GET',\n        requestUri: '/{Path+}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Path'\n        ],\n        members: {\n          Path: {\n            location: 'uri',\n            locationName: 'Path'\n          },\n          Range: {\n            location: 'header',\n            locationName: 'Range'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'StatusCode'\n        ],\n        members: {\n          Body: {\n            shape: 'Se'\n          },\n          CacheControl: {\n            location: 'header',\n            locationName: 'Cache-Control'\n          },\n          ContentRange: {\n            location: 'header',\n            locationName: 'Content-Range'\n          },\n          ContentLength: {\n            location: 'header',\n            locationName: 'Content-Length',\n            type: 'long'\n          },\n          ContentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          ETag: {\n            location: 'header',\n            locationName: 'ETag'\n          },\n          LastModified: {\n            location: 'header',\n            locationName: 'Last-Modified',\n            type: 'timestamp'\n          },\n          StatusCode: {\n            location: 'statusCode',\n            type: 'integer'\n          }\n        },\n        payload: 'Body'\n      }\n    },\n    ListItems: {\n      http: {\n        method: 'GET'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Path: {\n            location: 'querystring',\n            locationName: 'Path'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Name: {},\n                Type: {},\n                ETag: {},\n                LastModified: {\n                  type: 'timestamp'\n                },\n                ContentType: {},\n                ContentLength: {\n                  type: 'long'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    PutObject: {\n      http: {\n        method: 'PUT',\n        requestUri: '/{Path+}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Body',\n          'Path'\n        ],\n        members: {\n          Body: {\n            shape: 'Se'\n          },\n          Path: {\n            location: 'uri',\n            locationName: 'Path'\n          },\n          ContentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          CacheControl: {\n            location: 'header',\n            locationName: 'Cache-Control'\n          },\n          StorageClass: {\n            location: 'header',\n            locationName: 'x-amz-storage-class'\n          },\n          UploadAvailability: {\n            location: 'header',\n            locationName: 'x-amz-upload-availability'\n          }\n        },\n        payload: 'Body'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ContentSHA256: {},\n          ETag: {},\n          StorageClass: {}\n        }\n      },\n      authtype: 'v4-unsigned-body'\n    }\n  },\n  shapes: {\n    Se: {\n      type: 'blob',\n      streaming: true\n    }\n  }\n}"]}