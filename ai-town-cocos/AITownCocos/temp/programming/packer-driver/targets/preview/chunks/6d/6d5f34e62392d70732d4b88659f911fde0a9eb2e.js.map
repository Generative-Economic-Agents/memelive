{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/support-app-2021-08-20.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateSlackChannelConfiguration","http","requestUri","responseCode","input","type","required","members","channelId","channelName","channelRoleArn","notifyOnAddCorrespondenceToCase","notifyOnCaseSeverity","notifyOnCreateOrReopenCase","notifyOnResolveCase","teamId","output","DeleteAccountAlias","DeleteSlackChannelConfiguration","DeleteSlackWorkspaceConfiguration","GetAccountAlias","accountAlias","ListSlackChannelConfigurations","nextToken","slackChannelConfigurations","member","ListSlackWorkspaceConfigurations","slackWorkspaceConfigurations","allowOrganizationMemberAccount","teamName","PutAccountAlias","RegisterSlackWorkspaceForOrganization","accountType","UpdateSlackChannelConfiguration","shapes"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-08-20',\n    endpointPrefix: 'supportapp',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'SupportApp',\n    serviceFullName: 'AWS Support App',\n    serviceId: 'Support App',\n    signatureVersion: 'v4',\n    signingName: 'supportapp',\n    uid: 'support-app-2021-08-20'\n  },\n  operations: {\n    CreateSlackChannelConfiguration: {\n      http: {\n        requestUri: '/control/create-slack-channel-configuration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'channelId',\n          'channelRoleArn',\n          'notifyOnCaseSeverity',\n          'teamId'\n        ],\n        members: {\n          channelId: {},\n          channelName: {},\n          channelRoleArn: {},\n          notifyOnAddCorrespondenceToCase: {\n            type: 'boolean'\n          },\n          notifyOnCaseSeverity: {},\n          notifyOnCreateOrReopenCase: {\n            type: 'boolean'\n          },\n          notifyOnResolveCase: {\n            type: 'boolean'\n          },\n          teamId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteAccountAlias: {\n      http: {\n        requestUri: '/control/delete-account-alias',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteSlackChannelConfiguration: {\n      http: {\n        requestUri: '/control/delete-slack-channel-configuration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'channelId',\n          'teamId'\n        ],\n        members: {\n          channelId: {},\n          teamId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteSlackWorkspaceConfiguration: {\n      http: {\n        requestUri: '/control/delete-slack-workspace-configuration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'teamId'\n        ],\n        members: {\n          teamId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    GetAccountAlias: {\n      http: {\n        requestUri: '/control/get-account-alias',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          accountAlias: {}\n        }\n      }\n    },\n    ListSlackChannelConfigurations: {\n      http: {\n        requestUri: '/control/list-slack-channel-configurations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'slackChannelConfigurations'\n        ],\n        members: {\n          nextToken: {},\n          slackChannelConfigurations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'channelId',\n                'teamId'\n              ],\n              members: {\n                channelId: {},\n                channelName: {},\n                channelRoleArn: {},\n                notifyOnAddCorrespondenceToCase: {\n                  type: 'boolean'\n                },\n                notifyOnCaseSeverity: {},\n                notifyOnCreateOrReopenCase: {\n                  type: 'boolean'\n                },\n                notifyOnResolveCase: {\n                  type: 'boolean'\n                },\n                teamId: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListSlackWorkspaceConfigurations: {\n      http: {\n        requestUri: '/control/list-slack-workspace-configurations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          slackWorkspaceConfigurations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'teamId'\n              ],\n              members: {\n                allowOrganizationMemberAccount: {\n                  type: 'boolean'\n                },\n                teamId: {},\n                teamName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    PutAccountAlias: {\n      http: {\n        requestUri: '/control/put-account-alias',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accountAlias'\n        ],\n        members: {\n          accountAlias: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    RegisterSlackWorkspaceForOrganization: {\n      http: {\n        requestUri: '/control/register-slack-workspace-for-organization',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'teamId'\n        ],\n        members: {\n          teamId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          accountType: {},\n          teamId: {},\n          teamName: {}\n        }\n      }\n    },\n    UpdateSlackChannelConfiguration: {\n      http: {\n        requestUri: '/control/update-slack-channel-configuration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'channelId',\n          'teamId'\n        ],\n        members: {\n          channelId: {},\n          channelName: {},\n          channelRoleArn: {},\n          notifyOnAddCorrespondenceToCase: {\n            type: 'boolean'\n          },\n          notifyOnCaseSeverity: {},\n          notifyOnCreateOrReopenCase: {\n            type: 'boolean'\n          },\n          notifyOnResolveCase: {\n            type: 'boolean'\n          },\n          teamId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          channelId: {},\n          channelName: {},\n          channelRoleArn: {},\n          notifyOnAddCorrespondenceToCase: {\n            type: 'boolean'\n          },\n          notifyOnCaseSeverity: {},\n          notifyOnCreateOrReopenCase: {\n            type: 'boolean'\n          },\n          notifyOnResolveCase: {\n            type: 'boolean'\n          },\n          teamId: {}\n        }\n      }\n    }\n  },\n  shapes: {}\n}"]}