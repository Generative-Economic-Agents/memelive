{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/_toKey.js"],"names":["toKey","value","isSymbol","result","INFINITY"],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAI,OAAOA,KAAP,IAAgB,QAAhB,IAA4BC,QAAQ,CAACD,KAAD,CAAxC,EAAiD;AAC/C,aAAOA,KAAP;AACD;;AACD,QAAIE,MAAM,GAAIF,KAAK,GAAG,EAAtB;AACA,WAAQE,MAAM,IAAI,GAAV,IAAkB,IAAIF,KAAL,IAAe,CAACG,QAAlC,GAA8C,IAA9C,GAAqDD,MAA5D;AACD;;;;AAlBMD,MAAAA,Q;;;AAEP;AACIE,MAAAA,Q,GAAW,IAAI,C;;yBAiBJJ,K","sourcesContent":["import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n"]}