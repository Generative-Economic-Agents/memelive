{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/sshpk/lib/key.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","_req5","_req6","_req7","_req8","_req9","_req10","_req11","_req12","_req13","_req14","_req15","_req16","_req17","url","define","exports","require","module","__filename","__dirname","Key","assert","algs","crypto","Fingerprint","Signature","DiffieHellman","errs","utils","PrivateKey","edCompat","e","InvalidAlgorithmError","KeyParseError","formats","opts","object","arrayOfObject","parts","string","type","optionalString","comment","algInfo","info","partLookup","i","length","part","name","undefined","source","_rfc4253Cache","_hashCache","sz","curve","data","toString","curves","size","szPart","sizePart","countZeros","prototype","toBuffer","format","options","optionalObject","write","hash","algo","toLowerCase","hashAlgs","cacheKey","buf","pkcs8","pkcs8ToBuffer","Error","createHash","update","digest","fingerprint","algorithm","hashType","defaultHashAlgorithm","hashAlgo","createVerify","Verifier","v","nm","err","toUpperCase","message","match","ok","oldVerify","verify","bind","key","self","signature","fmt","isSignature","hashAlgorithm","Buffer","isBuffer","TypeError","createDiffieHellman","createDH","parse","buffer","filename","k","read","toPublic","isKey","obj","ver","isCompatible","_sshpkApiVersion","_oldVersionDetect","func","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'assert-plus';\nimport { __cjsMetaURL as _req0} from './algs';\nimport { __cjsMetaURL as _req1} from 'crypto';\nimport { __cjsMetaURL as _req2} from './fingerprint';\nimport { __cjsMetaURL as _req3} from './signature';\nimport { __cjsMetaURL as _req4} from './dhe';\nimport { __cjsMetaURL as _req5} from './errors';\nimport { __cjsMetaURL as _req6} from './utils';\nimport { __cjsMetaURL as _req7} from './private-key';\nimport { __cjsMetaURL as _req8} from './ed-compat';\nimport { __cjsMetaURL as _req9} from './formats/auto';\nimport { __cjsMetaURL as _req10} from './formats/pem';\nimport { __cjsMetaURL as _req11} from './formats/pkcs1';\nimport { __cjsMetaURL as _req12} from './formats/pkcs8';\nimport { __cjsMetaURL as _req13} from './formats/rfc4253';\nimport { __cjsMetaURL as _req14} from './formats/ssh';\nimport { __cjsMetaURL as _req15} from './formats/ssh-private';\nimport { __cjsMetaURL as _req16} from './formats/dnssec';\nimport { __cjsMetaURL as _req17} from './formats/putty';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // Copyright 2018 Joyent, Inc.\n\n module.exports = Key;\n\n var assert = require('assert-plus');\n var algs = require('./algs');\n var crypto = require('crypto');\n var Fingerprint = require('./fingerprint');\n var Signature = require('./signature');\n var DiffieHellman = require('./dhe').DiffieHellman;\n var errs = require('./errors');\n var utils = require('./utils');\n var PrivateKey = require('./private-key');\n var edCompat;\n\n try {\n \tedCompat = require('./ed-compat');\n } catch (e) {\n \t/* Just continue through, and bail out if we try to use it. */\n }\n\n var InvalidAlgorithmError = errs.InvalidAlgorithmError;\n var KeyParseError = errs.KeyParseError;\n\n var formats = {};\n formats['auto'] = require('./formats/auto');\n formats['pem'] = require('./formats/pem');\n formats['pkcs1'] = require('./formats/pkcs1');\n formats['pkcs8'] = require('./formats/pkcs8');\n formats['rfc4253'] = require('./formats/rfc4253');\n formats['ssh'] = require('./formats/ssh');\n formats['ssh-private'] = require('./formats/ssh-private');\n formats['openssh'] = formats['ssh-private'];\n formats['dnssec'] = require('./formats/dnssec');\n formats['putty'] = require('./formats/putty');\n formats['ppk'] = formats['putty'];\n\n function Key(opts) {\n \tassert.object(opts, 'options');\n \tassert.arrayOfObject(opts.parts, 'options.parts');\n \tassert.string(opts.type, 'options.type');\n \tassert.optionalString(opts.comment, 'options.comment');\n\n \tvar algInfo = algs.info[opts.type];\n \tif (typeof (algInfo) !== 'object')\n \t\tthrow (new InvalidAlgorithmError(opts.type));\n\n \tvar partLookup = {};\n \tfor (var i = 0; i < opts.parts.length; ++i) {\n \t\tvar part = opts.parts[i];\n \t\tpartLookup[part.name] = part;\n \t}\n\n \tthis.type = opts.type;\n \tthis.parts = opts.parts;\n \tthis.part = partLookup;\n \tthis.comment = undefined;\n \tthis.source = opts.source;\n\n \t/* for speeding up hashing/fingerprint operations */\n \tthis._rfc4253Cache = opts._rfc4253Cache;\n \tthis._hashCache = {};\n\n \tvar sz;\n \tthis.curve = undefined;\n \tif (this.type === 'ecdsa') {\n \t\tvar curve = this.part.curve.data.toString();\n \t\tthis.curve = curve;\n \t\tsz = algs.curves[curve].size;\n \t} else if (this.type === 'ed25519' || this.type === 'curve25519') {\n \t\tsz = 256;\n \t\tthis.curve = 'curve25519';\n \t} else {\n \t\tvar szPart = this.part[algInfo.sizePart];\n \t\tsz = szPart.data.length;\n \t\tsz = sz * 8 - utils.countZeros(szPart.data);\n \t}\n \tthis.size = sz;\n }\n\n Key.formats = formats;\n\n Key.prototype.toBuffer = function (format, options) {\n \tif (format === undefined)\n \t\tformat = 'ssh';\n \tassert.string(format, 'format');\n \tassert.object(formats[format], 'formats[format]');\n \tassert.optionalObject(options, 'options');\n\n \tif (format === 'rfc4253') {\n \t\tif (this._rfc4253Cache === undefined)\n \t\t\tthis._rfc4253Cache = formats['rfc4253'].write(this);\n \t\treturn (this._rfc4253Cache);\n \t}\n\n \treturn (formats[format].write(this, options));\n };\n\n Key.prototype.toString = function (format, options) {\n \treturn (this.toBuffer(format, options).toString());\n };\n\n Key.prototype.hash = function (algo, type) {\n \tassert.string(algo, 'algorithm');\n \tassert.optionalString(type, 'type');\n \tif (type === undefined)\n \t\ttype = 'ssh';\n \talgo = algo.toLowerCase();\n \tif (algs.hashAlgs[algo] === undefined)\n \t\tthrow (new InvalidAlgorithmError(algo));\n\n \tvar cacheKey = algo + '||' + type;\n \tif (this._hashCache[cacheKey])\n \t\treturn (this._hashCache[cacheKey]);\n\n \tvar buf;\n \tif (type === 'ssh') {\n \t\tbuf = this.toBuffer('rfc4253');\n \t} else if (type === 'spki') {\n \t\tbuf = formats.pkcs8.pkcs8ToBuffer(this);\n \t} else {\n \t\tthrow (new Error('Hash type ' + type + ' not supported'));\n \t}\n \tvar hash = crypto.createHash(algo).update(buf).digest();\n \tthis._hashCache[cacheKey] = hash;\n \treturn (hash);\n };\n\n Key.prototype.fingerprint = function (algo, type) {\n \tif (algo === undefined)\n \t\talgo = 'sha256';\n \tif (type === undefined)\n \t\ttype = 'ssh';\n \tassert.string(algo, 'algorithm');\n \tassert.string(type, 'type');\n \tvar opts = {\n \t\ttype: 'key',\n \t\thash: this.hash(algo, type),\n \t\talgorithm: algo,\n \t\thashType: type\n \t};\n \treturn (new Fingerprint(opts));\n };\n\n Key.prototype.defaultHashAlgorithm = function () {\n \tvar hashAlgo = 'sha1';\n \tif (this.type === 'rsa')\n \t\thashAlgo = 'sha256';\n \tif (this.type === 'dsa' && this.size > 1024)\n \t\thashAlgo = 'sha256';\n \tif (this.type === 'ed25519')\n \t\thashAlgo = 'sha512';\n \tif (this.type === 'ecdsa') {\n \t\tif (this.size <= 256)\n \t\t\thashAlgo = 'sha256';\n \t\telse if (this.size <= 384)\n \t\t\thashAlgo = 'sha384';\n \t\telse\n \t\t\thashAlgo = 'sha512';\n \t}\n \treturn (hashAlgo);\n };\n\n Key.prototype.createVerify = function (hashAlgo) {\n \tif (hashAlgo === undefined)\n \t\thashAlgo = this.defaultHashAlgorithm();\n \tassert.string(hashAlgo, 'hash algorithm');\n\n \t/* ED25519 is not supported by OpenSSL, use a javascript impl. */\n \tif (this.type === 'ed25519' && edCompat !== undefined)\n \t\treturn (new edCompat.Verifier(this, hashAlgo));\n \tif (this.type === 'curve25519')\n \t\tthrow (new Error('Curve25519 keys are not suitable for ' +\n \t\t    'signing or verification'));\n\n \tvar v, nm, err;\n \ttry {\n \t\tnm = hashAlgo.toUpperCase();\n \t\tv = crypto.createVerify(nm);\n \t} catch (e) {\n \t\terr = e;\n \t}\n \tif (v === undefined || (err instanceof Error &&\n \t    err.message.match(/Unknown message digest/))) {\n \t\tnm = 'RSA-';\n \t\tnm += hashAlgo.toUpperCase();\n \t\tv = crypto.createVerify(nm);\n \t}\n \tassert.ok(v, 'failed to create verifier');\n \tvar oldVerify = v.verify.bind(v);\n \tvar key = this.toBuffer('pkcs8');\n \tvar curve = this.curve;\n \tvar self = this;\n \tv.verify = function (signature, fmt) {\n \t\tif (Signature.isSignature(signature, [2, 0])) {\n \t\t\tif (signature.type !== self.type)\n \t\t\t\treturn (false);\n \t\t\tif (signature.hashAlgorithm &&\n \t\t\t    signature.hashAlgorithm !== hashAlgo)\n \t\t\t\treturn (false);\n \t\t\tif (signature.curve && self.type === 'ecdsa' &&\n \t\t\t    signature.curve !== curve)\n \t\t\t\treturn (false);\n \t\t\treturn (oldVerify(key, signature.toBuffer('asn1')));\n\n \t\t} else if (typeof (signature) === 'string' ||\n \t\t    Buffer.isBuffer(signature)) {\n \t\t\treturn (oldVerify(key, signature, fmt));\n\n \t\t/*\n \t\t * Avoid doing this on valid arguments, walking the prototype\n \t\t * chain can be quite slow.\n \t\t */\n \t\t} else if (Signature.isSignature(signature, [1, 0])) {\n \t\t\tthrow (new Error('signature was created by too old ' +\n \t\t\t    'a version of sshpk and cannot be verified'));\n\n \t\t} else {\n \t\t\tthrow (new TypeError('signature must be a string, ' +\n \t\t\t    'Buffer, or Signature object'));\n \t\t}\n \t};\n \treturn (v);\n };\n\n Key.prototype.createDiffieHellman = function () {\n \tif (this.type === 'rsa')\n \t\tthrow (new Error('RSA keys do not support Diffie-Hellman'));\n\n \treturn (new DiffieHellman(this));\n };\n Key.prototype.createDH = Key.prototype.createDiffieHellman;\n\n Key.parse = function (data, format, options) {\n \tif (typeof (data) !== 'string')\n \t\tassert.buffer(data, 'data');\n \tif (format === undefined)\n \t\tformat = 'auto';\n \tassert.string(format, 'format');\n \tif (typeof (options) === 'string')\n \t\toptions = { filename: options };\n \tassert.optionalObject(options, 'options');\n \tif (options === undefined)\n \t\toptions = {};\n \tassert.optionalString(options.filename, 'options.filename');\n \tif (options.filename === undefined)\n \t\toptions.filename = '(unnamed)';\n\n \tassert.object(formats[format], 'formats[format]');\n\n \ttry {\n \t\tvar k = formats[format].read(data, options);\n \t\tif (k instanceof PrivateKey)\n \t\t\tk = k.toPublic();\n \t\tif (!k.comment)\n \t\t\tk.comment = options.filename;\n \t\treturn (k);\n \t} catch (e) {\n \t\tif (e.name === 'KeyEncryptedError')\n \t\t\tthrow (e);\n \t\tthrow (new KeyParseError(options.filename, format, e));\n \t}\n };\n\n Key.isKey = function (obj, ver) {\n \treturn (utils.isCompatible(obj, Key, ver));\n };\n\n /*\n  * API versions for Key:\n  * [1,0] -- initial ver, may take Signature for createVerify or may not\n  * [1,1] -- added pkcs1, pkcs8 formats\n  * [1,2] -- added auto, ssh-private, openssh formats\n  * [1,3] -- added defaultHashAlgorithm\n  * [1,4] -- added ed support, createDH\n  * [1,5] -- first explicitly tagged version\n  * [1,6] -- changed ed25519 part names\n  * [1,7] -- spki hash types\n  */\n Key.prototype._sshpkApiVersion = [1, 7];\n\n Key._oldVersionDetect = function (obj) {\n \tassert.func(obj.toBuffer);\n \tassert.func(obj.fingerprint);\n \tif (obj.createDH)\n \t\treturn ([1, 4]);\n \tif (obj.defaultHashAlgorithm)\n \t\treturn ([1, 3]);\n \tif (obj.formats['auto'])\n \t\treturn ([1, 2]);\n \tif (obj.formats['pkcs1'])\n \t\treturn ([1, 1]);\n \treturn ([1, 0]);\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'assert-plus': _req,\n  './algs': _req0,\n  'crypto': _req1,\n  './fingerprint': _req2,\n  './signature': _req3,\n  './dhe': _req4,\n  './errors': _req5,\n  './utils': _req6,\n  './private-key': _req7,\n  './ed-compat': _req8,\n  './formats/auto': _req9,\n  './formats/pem': _req10,\n  './formats/pkcs1': _req11,\n  './formats/pkcs8': _req12,\n  './formats/rfc4253': _req13,\n  './formats/ssh': _req14,\n  './formats/ssh-private': _req15,\n  './formats/dnssec': _req16,\n  './formats/putty': _req17,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}