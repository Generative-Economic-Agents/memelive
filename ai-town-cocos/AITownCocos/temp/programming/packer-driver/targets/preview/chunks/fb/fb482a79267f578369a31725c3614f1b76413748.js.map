{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/toSafeInteger.js"],"names":["toSafeInteger","value","baseClamp","toInteger","MAX_SAFE_INTEGER"],"mappings":";;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,WAAOA,KAAK,GACRC,SAAS,CAACC,SAAS,CAACF,KAAD,CAAV,EAAmB,CAACG,gBAApB,EAAsCA,gBAAtC,CADD,GAEPH,KAAK,KAAK,CAAV,GAAcA,KAAd,GAAsB,CAF3B;AAGD;;;;AAlCMC,MAAAA,S;;AACAC,MAAAA,S;;;AAEP;AACIC,MAAAA,gB,GAAmB,gB;;yBAgCRJ,a","sourcesContent":["import baseClamp from './_baseClamp.js';\nimport toInteger from './toInteger.js';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Converts `value` to a safe integer. A safe integer can be compared and\n * represented correctly.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toSafeInteger(3.2);\n * // => 3\n *\n * _.toSafeInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toSafeInteger(Infinity);\n * // => 9007199254740991\n *\n * _.toSafeInteger('3.2');\n * // => 3\n */\nfunction toSafeInteger(value) {\n  return value\n    ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n    : (value === 0 ? value : 0);\n}\n\nexport default toSafeInteger;\n"]}