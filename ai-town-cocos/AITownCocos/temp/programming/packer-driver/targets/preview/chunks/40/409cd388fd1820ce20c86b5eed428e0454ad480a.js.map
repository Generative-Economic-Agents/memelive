{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/connectparticipant-2018-09-07.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CompleteAttachmentUpload","http","requestUri","input","type","required","members","AttachmentIds","member","ClientToken","idempotencyToken","ConnectionToken","location","locationName","output","CreateParticipantConnection","Type","ParticipantToken","ConnectParticipant","Websocket","Url","ConnectionExpiry","ConnectionCredentials","Expiry","DescribeView","method","ViewToken","View","Id","Arn","Name","sensitive","Version","Content","InputSchema","Template","Actions","DisconnectParticipant","GetAttachment","AttachmentId","UrlExpiry","GetTranscript","ContactId","MaxResults","NextToken","ScanDirection","SortOrder","StartPosition","AbsoluteTime","MostRecent","InitialContactId","Transcript","ContentType","ParticipantId","DisplayName","ParticipantRole","Attachments","AttachmentName","Status","MessageMetadata","MessageId","Receipts","DeliveredTimestamp","ReadTimestamp","RecipientParticipantId","RelatedContactId","SendEvent","SendMessage","StartAttachmentUpload","AttachmentSizeInBytes","UploadMetadata","HeadersToInclude","key","value","shapes"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-09-07',\n    endpointPrefix: 'participant.connect',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'Amazon Connect Participant',\n    serviceFullName: 'Amazon Connect Participant Service',\n    serviceId: 'ConnectParticipant',\n    signatureVersion: 'v4',\n    signingName: 'execute-api',\n    uid: 'connectparticipant-2018-09-07'\n  },\n  operations: {\n    CompleteAttachmentUpload: {\n      http: {\n        requestUri: '/participant/complete-attachment-upload'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AttachmentIds',\n          'ClientToken',\n          'ConnectionToken'\n        ],\n        members: {\n          AttachmentIds: {\n            type: 'list',\n            member: {}\n          },\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ConnectionToken: {\n            location: 'header',\n            locationName: 'X-Amz-Bearer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateParticipantConnection: {\n      http: {\n        requestUri: '/participant/connection'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ParticipantToken'\n        ],\n        members: {\n          Type: {\n            type: 'list',\n            member: {}\n          },\n          ParticipantToken: {\n            location: 'header',\n            locationName: 'X-Amz-Bearer'\n          },\n          ConnectParticipant: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Websocket: {\n            type: 'structure',\n            members: {\n              Url: {},\n              ConnectionExpiry: {}\n            }\n          },\n          ConnectionCredentials: {\n            type: 'structure',\n            members: {\n              ConnectionToken: {},\n              Expiry: {}\n            }\n          }\n        }\n      }\n    },\n    DescribeView: {\n      http: {\n        method: 'GET',\n        requestUri: '/participant/views/{ViewToken}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ViewToken',\n          'ConnectionToken'\n        ],\n        members: {\n          ViewToken: {\n            location: 'uri',\n            locationName: 'ViewToken'\n          },\n          ConnectionToken: {\n            location: 'header',\n            locationName: 'X-Amz-Bearer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          View: {\n            type: 'structure',\n            members: {\n              Id: {},\n              Arn: {},\n              Name: {\n                type: 'string',\n                sensitive: true\n              },\n              Version: {\n                type: 'integer'\n              },\n              Content: {\n                type: 'structure',\n                members: {\n                  InputSchema: {\n                    type: 'string',\n                    sensitive: true\n                  },\n                  Template: {\n                    type: 'string',\n                    sensitive: true\n                  },\n                  Actions: {\n                    type: 'list',\n                    member: {\n                      type: 'string',\n                      sensitive: true\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DisconnectParticipant: {\n      http: {\n        requestUri: '/participant/disconnect'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectionToken'\n        ],\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ConnectionToken: {\n            location: 'header',\n            locationName: 'X-Amz-Bearer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    GetAttachment: {\n      http: {\n        requestUri: '/participant/attachment'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AttachmentId',\n          'ConnectionToken'\n        ],\n        members: {\n          AttachmentId: {},\n          ConnectionToken: {\n            location: 'header',\n            locationName: 'X-Amz-Bearer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Url: {},\n          UrlExpiry: {}\n        }\n      }\n    },\n    GetTranscript: {\n      http: {\n        requestUri: '/participant/transcript'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectionToken'\n        ],\n        members: {\n          ContactId: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          ScanDirection: {},\n          SortOrder: {},\n          StartPosition: {\n            type: 'structure',\n            members: {\n              Id: {},\n              AbsoluteTime: {},\n              MostRecent: {\n                type: 'integer'\n              }\n            }\n          },\n          ConnectionToken: {\n            location: 'header',\n            locationName: 'X-Amz-Bearer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          InitialContactId: {},\n          Transcript: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AbsoluteTime: {},\n                Content: {},\n                ContentType: {},\n                Id: {},\n                Type: {},\n                ParticipantId: {},\n                DisplayName: {},\n                ParticipantRole: {},\n                Attachments: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      ContentType: {},\n                      AttachmentId: {},\n                      AttachmentName: {},\n                      Status: {}\n                    }\n                  }\n                },\n                MessageMetadata: {\n                  type: 'structure',\n                  members: {\n                    MessageId: {},\n                    Receipts: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          DeliveredTimestamp: {},\n                          ReadTimestamp: {},\n                          RecipientParticipantId: {}\n                        }\n                      }\n                    }\n                  }\n                },\n                RelatedContactId: {},\n                ContactId: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    SendEvent: {\n      http: {\n        requestUri: '/participant/event'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ContentType',\n          'ConnectionToken'\n        ],\n        members: {\n          ContentType: {},\n          Content: {},\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ConnectionToken: {\n            location: 'header',\n            locationName: 'X-Amz-Bearer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Id: {},\n          AbsoluteTime: {}\n        }\n      }\n    },\n    SendMessage: {\n      http: {\n        requestUri: '/participant/message'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ContentType',\n          'Content',\n          'ConnectionToken'\n        ],\n        members: {\n          ContentType: {},\n          Content: {},\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ConnectionToken: {\n            location: 'header',\n            locationName: 'X-Amz-Bearer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Id: {},\n          AbsoluteTime: {}\n        }\n      }\n    },\n    StartAttachmentUpload: {\n      http: {\n        requestUri: '/participant/start-attachment-upload'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ContentType',\n          'AttachmentSizeInBytes',\n          'AttachmentName',\n          'ClientToken',\n          'ConnectionToken'\n        ],\n        members: {\n          ContentType: {},\n          AttachmentSizeInBytes: {\n            type: 'long'\n          },\n          AttachmentName: {},\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ConnectionToken: {\n            location: 'header',\n            locationName: 'X-Amz-Bearer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AttachmentId: {},\n          UploadMetadata: {\n            type: 'structure',\n            members: {\n              Url: {},\n              UrlExpiry: {},\n              HeadersToInclude: {\n                type: 'map',\n                key: {},\n                value: {}\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  shapes: {}\n}"]}