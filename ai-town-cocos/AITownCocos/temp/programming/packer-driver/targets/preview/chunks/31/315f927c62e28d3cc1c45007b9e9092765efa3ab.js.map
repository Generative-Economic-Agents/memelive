{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","eventMessageChunker","parseEvent","createEventStream","body","parser","model","eventMessages","events","i","length","push","_cjsExports","_createEventStream"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;;8BAGHA,Y,GAAe,cAAYE,G;;AACjCJ,MAAAA,UAAU,CAACK,MAAX,CAAkBH,YAAlB,EAAgC,UAAUI,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,mBAAmB,GAAGJ,OAAO,CAAC,uCAAD,CAAP,CAAiDI,mBAA3E;;AACA,YAAIC,UAAU,GAAGL,OAAO,CAAC,eAAD,CAAP,CAAyBK,UAA1C;;AAEA,iBAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgD;AAC5C,cAAIC,aAAa,GAAGN,mBAAmB,CAACG,IAAD,CAAvC;AAEA,cAAII,MAAM,GAAG,EAAb;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAAa,CAACG,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CD,YAAAA,MAAM,CAACG,IAAP,CAAYT,UAAU,CAACG,MAAD,EAASE,aAAa,CAACE,CAAD,CAAtB,EAA2BH,KAA3B,CAAtB;AACH;;AAED,iBAAOE,MAAP;AACH;AAED;AACD;AACA;;;AACCV,QAAAA,MAAM,CAACF,OAAP,GAAiB;AACbO,UAAAA,iBAAiB,EAAEA;AADN,SAAjB,CAtB0F,CA2B3F;;AAEA,2BAAAS,WAAW,GAAGd,MAAM,CAACF,OAArB;;AACAiB,QAAAA,kBAAkB,GAAGf,MAAM,CAACF,OAAP,CAAeO,iBAApC;AAEC,OAhCD,EAgCG,OAAO;AACR,iDAAyCZ,IADjC;AAER,yBAAiBE;AAFT,OAAP,CAhCH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../event-stream/event-message-chunker';\nimport { __cjsMetaURL as _req0} from './parse-event';\nlet _cjsExports;\nlet _createEventStream;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var eventMessageChunker = require('../event-stream/event-message-chunker').eventMessageChunker;\n var parseEvent = require('./parse-event').parseEvent;\n\n function createEventStream(body, parser, model) {\n     var eventMessages = eventMessageChunker(body);\n\n     var events = [];\n\n     for (var i = 0; i < eventMessages.length; i++) {\n         events.push(parseEvent(parser, eventMessages[i], model));\n     }\n\n     return events;\n }\n\n /**\n  * @api private\n  */\n module.exports = {\n     createEventStream: createEventStream\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_createEventStream = module.exports.createEventStream;\n\n}, () => ({\n  '../event-stream/event-message-chunker': _req,\n  './parse-event': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}