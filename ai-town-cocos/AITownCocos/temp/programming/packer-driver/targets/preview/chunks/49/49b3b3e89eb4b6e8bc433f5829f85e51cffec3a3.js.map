{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/wellarchitected-2020-03-31.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","AssociateLenses","http","method","requestUri","input","type","required","members","WorkloadId","location","locationName","LensAliases","shape","AssociateProfiles","ProfileArns","CreateLensShare","LensAlias","SharedWith","ClientRequestToken","idempotencyToken","output","ShareId","CreateLensVersion","LensVersion","IsMajorVersion","LensArn","CreateMilestone","MilestoneName","MilestoneNumber","CreateProfile","ProfileName","ProfileDescription","ProfileQuestions","Tags","ProfileArn","ProfileVersion","CreateProfileShare","CreateReviewTemplate","TemplateName","Description","Lenses","Notes","TemplateArn","CreateTemplateShare","CreateWorkload","WorkloadName","Environment","AccountIds","AwsRegions","NonAwsRegions","PillarPriorities","ArchitecturalDesign","ReviewOwner","IndustryType","Industry","DiscoveryConfig","Applications","member","ReviewTemplateArns","JiraConfiguration","WorkloadArn","CreateWorkloadShare","PermissionType","DeleteLens","LensStatus","DeleteLensShare","DeleteProfile","DeleteProfileShare","DeleteReviewTemplate","DeleteTemplateShare","DeleteWorkload","DeleteWorkloadShare","DisassociateLenses","DisassociateProfiles","ExportLens","LensJSON","GetAnswer","QuestionId","Answer","GetConsolidatedReport","Format","IncludeSharedResources","NextToken","MaxResults","Metrics","MetricType","RiskCounts","UpdatedAt","Pillars","PillarId","Questions","Risk","BestPractices","ChoiceId","ChoiceTitle","LensesAppliedCount","Base64String","GetGlobalSettings","OrganizationSharingStatus","DiscoveryIntegrationStatus","IntegrationStatus","IssueManagementStatus","IssueManagementType","Subdomain","JiraProjectKey","StatusMessage","GetLens","Lens","Name","Owner","ShareInvitationId","GetLensReview","LensReview","GetLensReviewReport","LensReviewReport","GetLensVersionDifference","BaseLensVersion","TargetLensVersion","LatestLensVersion","VersionDifferences","PillarDifferences","PillarName","DifferenceStatus","QuestionDifferences","QuestionTitle","GetMilestone","Milestone","RecordedAt","Workload","GetProfile","Profile","GetProfileTemplate","ProfileTemplate","TemplateQuestions","QuestionDescription","QuestionChoices","ChoiceDescription","MinSelectedChoices","MaxSelectedChoices","CreatedAt","GetReviewTemplate","ReviewTemplate","GetReviewTemplateAnswer","GetReviewTemplateLensReview","GetWorkload","ImportLens","JSONString","Status","ListAnswers","QuestionPriority","AnswerSummaries","Choices","SelectedChoices","ChoiceAnswerSummaries","IsApplicable","Reason","QuestionType","ListCheckDetails","CheckDetails","Id","Provider","AccountId","FlaggedResources","ListCheckSummaries","CheckSummaries","AccountSummary","key","value","ListLensReviewImprovements","ImprovementSummaries","ImprovementPlanUrl","ImprovementPlans","DisplayText","ListLensReviews","LensReviewSummaries","LensName","Profiles","PrioritizedRiskCounts","ListLensShares","SharedWithPrefix","LensShareSummaries","ListLenses","LensType","LensSummaries","ListMilestones","MilestoneSummaries","WorkloadSummary","ListNotifications","ResourceArn","NotificationSummaries","Type","LensUpgradeSummary","CurrentLensVersion","ResourceName","ListProfileNotifications","CurrentProfileVersion","LatestProfileVersion","ListProfileShares","ProfileShareSummaries","ListProfiles","ProfileNamePrefix","ProfileOwnerType","ProfileSummaries","ListReviewTemplateAnswers","AnswerStatus","ListReviewTemplates","ReviewTemplates","UpdateStatus","ListShareInvitations","WorkloadNamePrefix","LensNamePrefix","ShareResourceType","TemplateNamePrefix","ShareInvitationSummaries","SharedBy","ListTagsForResource","ListTemplateShares","TemplateShareSummaries","ListWorkloadShares","WorkloadShareSummaries","ListWorkloads","WorkloadSummaries","TagResource","UntagResource","TagKeys","UpdateAnswer","ChoiceUpdates","UpdateGlobalSettings","UpdateIntegration","IntegratingService","UpdateLensReview","LensNotes","PillarNotes","UpdateProfile","UpdateReviewTemplate","LensesToAssociate","LensesToDisassociate","UpdateReviewTemplateAnswer","UpdateReviewTemplateLensReview","UpdateShareInvitation","ShareInvitationAction","ShareInvitation","UpdateWorkload","IsReviewOwnerUpdateAcknowledged","ImprovementStatus","UpdateWorkloadShare","WorkloadShare","UpgradeLensReview","UpgradeProfileVersion","UpgradeReviewTemplateLensReview","shapes","S3","S6","Sp","SelectedChoiceIds","Su","S14","S1e","S1g","S1i","S1k","S1q","S1r","TrustedAdvisorIntegrationStatus","WorkloadResourceDefinition","S1v","S1z","S2o","HelpfulResourceUrl","HelpfulResourceDisplayText","ChoiceAnswers","S2u","Title","HelpfulResource","ImprovementPlan","AdditionalResources","Content","S2y","Url","S35","S36","S3e","JiraIssueUrl","LastSyncedTime","S3q","S4j","PillarReviewSummaries","S4o","SelectedPillars","SelectedQuestionIds","S4t","S59","ReviewRestrictionDate","S5f","S5w","QuestionCounts","S5x","S62","S66","S6k","S7w","S9o","S9x","Sa2"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-03-31',\n    endpointPrefix: 'wellarchitected',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'Well-Architected',\n    serviceFullName: 'AWS Well-Architected Tool',\n    serviceId: 'WellArchitected',\n    signatureVersion: 'v4',\n    signingName: 'wellarchitected',\n    uid: 'wellarchitected-2020-03-31'\n  },\n  operations: {\n    AssociateLenses: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/workloads/{WorkloadId}/associateLenses'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensAliases'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          LensAliases: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    AssociateProfiles: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/workloads/{WorkloadId}/associateProfiles'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'ProfileArns'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          ProfileArns: {\n            shape: 'S6'\n          }\n        }\n      }\n    },\n    CreateLensShare: {\n      http: {\n        requestUri: '/lenses/{LensAlias}/shares'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LensAlias',\n          'SharedWith',\n          'ClientRequestToken'\n        ],\n        members: {\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          SharedWith: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ShareId: {}\n        }\n      }\n    },\n    CreateLensVersion: {\n      http: {\n        requestUri: '/lenses/{LensAlias}/versions'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LensAlias',\n          'LensVersion',\n          'ClientRequestToken'\n        ],\n        members: {\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          LensVersion: {},\n          IsMajorVersion: {\n            type: 'boolean'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LensArn: {},\n          LensVersion: {}\n        }\n      }\n    },\n    CreateMilestone: {\n      http: {\n        requestUri: '/workloads/{WorkloadId}/milestones'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'MilestoneName',\n          'ClientRequestToken'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          MilestoneName: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          MilestoneNumber: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    CreateProfile: {\n      http: {\n        requestUri: '/profiles'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProfileName',\n          'ProfileDescription',\n          'ProfileQuestions',\n          'ClientRequestToken'\n        ],\n        members: {\n          ProfileName: {},\n          ProfileDescription: {},\n          ProfileQuestions: {\n            shape: 'Sp'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          Tags: {\n            shape: 'Su'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ProfileArn: {},\n          ProfileVersion: {}\n        }\n      }\n    },\n    CreateProfileShare: {\n      http: {\n        requestUri: '/profiles/{ProfileArn}/shares'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProfileArn',\n          'SharedWith',\n          'ClientRequestToken'\n        ],\n        members: {\n          ProfileArn: {\n            location: 'uri',\n            locationName: 'ProfileArn'\n          },\n          SharedWith: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ShareId: {},\n          ProfileArn: {}\n        }\n      }\n    },\n    CreateReviewTemplate: {\n      http: {\n        requestUri: '/reviewTemplates'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateName',\n          'Description',\n          'Lenses',\n          'ClientRequestToken'\n        ],\n        members: {\n          TemplateName: {},\n          Description: {},\n          Lenses: {\n            shape: 'S14'\n          },\n          Notes: {},\n          Tags: {\n            shape: 'Su'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TemplateArn: {}\n        }\n      }\n    },\n    CreateTemplateShare: {\n      http: {\n        requestUri: '/templates/shares/{TemplateArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn',\n          'SharedWith',\n          'ClientRequestToken'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          SharedWith: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TemplateArn: {},\n          ShareId: {}\n        }\n      }\n    },\n    CreateWorkload: {\n      http: {\n        requestUri: '/workloads'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadName',\n          'Description',\n          'Environment',\n          'Lenses',\n          'ClientRequestToken'\n        ],\n        members: {\n          WorkloadName: {},\n          Description: {},\n          Environment: {},\n          AccountIds: {\n            shape: 'S1e'\n          },\n          AwsRegions: {\n            shape: 'S1g'\n          },\n          NonAwsRegions: {\n            shape: 'S1i'\n          },\n          PillarPriorities: {\n            shape: 'S1k'\n          },\n          ArchitecturalDesign: {},\n          ReviewOwner: {},\n          IndustryType: {},\n          Industry: {},\n          Lenses: {\n            shape: 'S1q'\n          },\n          Notes: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          Tags: {\n            shape: 'Su'\n          },\n          DiscoveryConfig: {\n            shape: 'S1r'\n          },\n          Applications: {\n            shape: 'S1v'\n          },\n          ProfileArns: {\n            type: 'list',\n            member: {}\n          },\n          ReviewTemplateArns: {\n            type: 'list',\n            member: {}\n          },\n          JiraConfiguration: {\n            shape: 'S1z'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          WorkloadArn: {}\n        }\n      }\n    },\n    CreateWorkloadShare: {\n      http: {\n        requestUri: '/workloads/{WorkloadId}/shares'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'SharedWith',\n          'PermissionType',\n          'ClientRequestToken'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          SharedWith: {},\n          PermissionType: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          ShareId: {}\n        }\n      }\n    },\n    DeleteLens: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/lenses/{LensAlias}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LensAlias',\n          'ClientRequestToken',\n          'LensStatus'\n        ],\n        members: {\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'ClientRequestToken'\n          },\n          LensStatus: {\n            location: 'querystring',\n            locationName: 'LensStatus'\n          }\n        }\n      }\n    },\n    DeleteLensShare: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/lenses/{LensAlias}/shares/{ShareId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ShareId',\n          'LensAlias',\n          'ClientRequestToken'\n        ],\n        members: {\n          ShareId: {\n            location: 'uri',\n            locationName: 'ShareId'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'ClientRequestToken'\n          }\n        }\n      }\n    },\n    DeleteProfile: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/profiles/{ProfileArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProfileArn',\n          'ClientRequestToken'\n        ],\n        members: {\n          ProfileArn: {\n            location: 'uri',\n            locationName: 'ProfileArn'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'ClientRequestToken'\n          }\n        }\n      }\n    },\n    DeleteProfileShare: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/profiles/{ProfileArn}/shares/{ShareId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ShareId',\n          'ProfileArn',\n          'ClientRequestToken'\n        ],\n        members: {\n          ShareId: {\n            location: 'uri',\n            locationName: 'ShareId'\n          },\n          ProfileArn: {\n            location: 'uri',\n            locationName: 'ProfileArn'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'ClientRequestToken'\n          }\n        }\n      }\n    },\n    DeleteReviewTemplate: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/reviewTemplates/{TemplateArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn',\n          'ClientRequestToken'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'ClientRequestToken'\n          }\n        }\n      }\n    },\n    DeleteTemplateShare: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/templates/shares/{TemplateArn}/{ShareId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ShareId',\n          'TemplateArn',\n          'ClientRequestToken'\n        ],\n        members: {\n          ShareId: {\n            location: 'uri',\n            locationName: 'ShareId'\n          },\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'ClientRequestToken'\n          }\n        }\n      }\n    },\n    DeleteWorkload: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/workloads/{WorkloadId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'ClientRequestToken'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'ClientRequestToken'\n          }\n        }\n      }\n    },\n    DeleteWorkloadShare: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/workloads/{WorkloadId}/shares/{ShareId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ShareId',\n          'WorkloadId',\n          'ClientRequestToken'\n        ],\n        members: {\n          ShareId: {\n            location: 'uri',\n            locationName: 'ShareId'\n          },\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'ClientRequestToken'\n          }\n        }\n      }\n    },\n    DisassociateLenses: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/workloads/{WorkloadId}/disassociateLenses'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensAliases'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          LensAliases: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    DisassociateProfiles: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/workloads/{WorkloadId}/disassociateProfiles'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'ProfileArns'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          ProfileArns: {\n            shape: 'S6'\n          }\n        }\n      }\n    },\n    ExportLens: {\n      http: {\n        method: 'GET',\n        requestUri: '/lenses/{LensAlias}/export'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LensAlias'\n        ],\n        members: {\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          LensVersion: {\n            location: 'querystring',\n            locationName: 'LensVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LensJSON: {}\n        }\n      }\n    },\n    GetAnswer: {\n      http: {\n        method: 'GET',\n        requestUri: '/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers/{QuestionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensAlias',\n          'QuestionId'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          QuestionId: {\n            location: 'uri',\n            locationName: 'QuestionId'\n          },\n          MilestoneNumber: {\n            location: 'querystring',\n            locationName: 'MilestoneNumber',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          MilestoneNumber: {\n            type: 'integer'\n          },\n          LensAlias: {},\n          LensArn: {},\n          Answer: {\n            shape: 'S2o'\n          }\n        }\n      }\n    },\n    GetConsolidatedReport: {\n      http: {\n        method: 'GET',\n        requestUri: '/consolidatedReport'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Format'\n        ],\n        members: {\n          Format: {\n            location: 'querystring',\n            locationName: 'Format'\n          },\n          IncludeSharedResources: {\n            location: 'querystring',\n            locationName: 'IncludeSharedResources',\n            type: 'boolean'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Metrics: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                MetricType: {},\n                RiskCounts: {\n                  shape: 'S3q'\n                },\n                WorkloadId: {},\n                WorkloadName: {},\n                WorkloadArn: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                },\n                Lenses: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      LensArn: {},\n                      Pillars: {\n                        type: 'list',\n                        member: {\n                          type: 'structure',\n                          members: {\n                            PillarId: {},\n                            RiskCounts: {\n                              shape: 'S3q'\n                            },\n                            Questions: {\n                              type: 'list',\n                              member: {\n                                type: 'structure',\n                                members: {\n                                  QuestionId: {},\n                                  Risk: {},\n                                  BestPractices: {\n                                    type: 'list',\n                                    member: {\n                                      type: 'structure',\n                                      members: {\n                                        ChoiceId: {},\n                                        ChoiceTitle: {}\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      },\n                      RiskCounts: {\n                        shape: 'S3q'\n                      }\n                    }\n                  }\n                },\n                LensesAppliedCount: {\n                  type: 'integer'\n                }\n              }\n            }\n          },\n          NextToken: {},\n          Base64String: {}\n        }\n      }\n    },\n    GetGlobalSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-settings'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OrganizationSharingStatus: {},\n          DiscoveryIntegrationStatus: {},\n          JiraConfiguration: {\n            type: 'structure',\n            members: {\n              IntegrationStatus: {},\n              IssueManagementStatus: {},\n              IssueManagementType: {},\n              Subdomain: {},\n              JiraProjectKey: {},\n              StatusMessage: {}\n            }\n          }\n        }\n      }\n    },\n    GetLens: {\n      http: {\n        method: 'GET',\n        requestUri: '/lenses/{LensAlias}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LensAlias'\n        ],\n        members: {\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          LensVersion: {\n            location: 'querystring',\n            locationName: 'LensVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Lens: {\n            type: 'structure',\n            members: {\n              LensArn: {},\n              LensVersion: {},\n              Name: {},\n              Description: {},\n              Owner: {},\n              ShareInvitationId: {},\n              Tags: {\n                shape: 'Su'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetLensReview: {\n      http: {\n        method: 'GET',\n        requestUri: '/workloads/{WorkloadId}/lensReviews/{LensAlias}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensAlias'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          MilestoneNumber: {\n            location: 'querystring',\n            locationName: 'MilestoneNumber',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          MilestoneNumber: {\n            type: 'integer'\n          },\n          LensReview: {\n            shape: 'S4j'\n          }\n        }\n      }\n    },\n    GetLensReviewReport: {\n      http: {\n        method: 'GET',\n        requestUri: '/workloads/{WorkloadId}/lensReviews/{LensAlias}/report'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensAlias'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          MilestoneNumber: {\n            location: 'querystring',\n            locationName: 'MilestoneNumber',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          MilestoneNumber: {\n            type: 'integer'\n          },\n          LensReviewReport: {\n            type: 'structure',\n            members: {\n              LensAlias: {},\n              LensArn: {},\n              Base64String: {}\n            }\n          }\n        }\n      }\n    },\n    GetLensVersionDifference: {\n      http: {\n        method: 'GET',\n        requestUri: '/lenses/{LensAlias}/versionDifference'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LensAlias'\n        ],\n        members: {\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          BaseLensVersion: {\n            location: 'querystring',\n            locationName: 'BaseLensVersion'\n          },\n          TargetLensVersion: {\n            location: 'querystring',\n            locationName: 'TargetLensVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LensAlias: {},\n          LensArn: {},\n          BaseLensVersion: {},\n          TargetLensVersion: {},\n          LatestLensVersion: {},\n          VersionDifferences: {\n            type: 'structure',\n            members: {\n              PillarDifferences: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    PillarId: {},\n                    PillarName: {},\n                    DifferenceStatus: {},\n                    QuestionDifferences: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          QuestionId: {},\n                          QuestionTitle: {},\n                          DifferenceStatus: {}\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    GetMilestone: {\n      http: {\n        method: 'GET',\n        requestUri: '/workloads/{WorkloadId}/milestones/{MilestoneNumber}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'MilestoneNumber'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          MilestoneNumber: {\n            location: 'uri',\n            locationName: 'MilestoneNumber',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          Milestone: {\n            type: 'structure',\n            members: {\n              MilestoneNumber: {\n                type: 'integer'\n              },\n              MilestoneName: {},\n              RecordedAt: {\n                type: 'timestamp'\n              },\n              Workload: {\n                shape: 'S59'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetProfile: {\n      http: {\n        method: 'GET',\n        requestUri: '/profiles/{ProfileArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProfileArn'\n        ],\n        members: {\n          ProfileArn: {\n            location: 'uri',\n            locationName: 'ProfileArn'\n          },\n          ProfileVersion: {\n            location: 'querystring',\n            locationName: 'ProfileVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Profile: {\n            shape: 'S5f'\n          }\n        }\n      }\n    },\n    GetProfileTemplate: {\n      http: {\n        method: 'GET',\n        requestUri: '/profileTemplate'\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ProfileTemplate: {\n            type: 'structure',\n            members: {\n              TemplateName: {},\n              TemplateQuestions: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    QuestionId: {},\n                    QuestionTitle: {},\n                    QuestionDescription: {},\n                    QuestionChoices: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          ChoiceId: {},\n                          ChoiceTitle: {},\n                          ChoiceDescription: {}\n                        }\n                      }\n                    },\n                    MinSelectedChoices: {\n                      type: 'integer'\n                    },\n                    MaxSelectedChoices: {\n                      type: 'integer'\n                    }\n                  }\n                }\n              },\n              CreatedAt: {\n                type: 'timestamp'\n              },\n              UpdatedAt: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetReviewTemplate: {\n      http: {\n        method: 'GET',\n        requestUri: '/reviewTemplates/{TemplateArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReviewTemplate: {\n            shape: 'S5w'\n          }\n        }\n      }\n    },\n    GetReviewTemplateAnswer: {\n      http: {\n        method: 'GET',\n        requestUri: '/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/answers/{QuestionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn',\n          'LensAlias',\n          'QuestionId'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          QuestionId: {\n            location: 'uri',\n            locationName: 'QuestionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TemplateArn: {},\n          LensAlias: {},\n          Answer: {\n            shape: 'S62'\n          }\n        }\n      }\n    },\n    GetReviewTemplateLensReview: {\n      http: {\n        method: 'GET',\n        requestUri: '/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn',\n          'LensAlias'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TemplateArn: {},\n          LensReview: {\n            shape: 'S66'\n          }\n        }\n      }\n    },\n    GetWorkload: {\n      http: {\n        method: 'GET',\n        requestUri: '/workloads/{WorkloadId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Workload: {\n            shape: 'S59'\n          }\n        }\n      }\n    },\n    ImportLens: {\n      http: {\n        method: 'PUT',\n        requestUri: '/importLens'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'JSONString',\n          'ClientRequestToken'\n        ],\n        members: {\n          LensAlias: {},\n          JSONString: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          Tags: {\n            shape: 'Su'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LensArn: {},\n          Status: {}\n        }\n      }\n    },\n    ListAnswers: {\n      http: {\n        method: 'GET',\n        requestUri: '/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensAlias'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          PillarId: {\n            location: 'querystring',\n            locationName: 'PillarId'\n          },\n          MilestoneNumber: {\n            location: 'querystring',\n            locationName: 'MilestoneNumber',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          QuestionPriority: {\n            location: 'querystring',\n            locationName: 'QuestionPriority'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          MilestoneNumber: {\n            type: 'integer'\n          },\n          LensAlias: {},\n          LensArn: {},\n          AnswerSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                QuestionId: {},\n                PillarId: {},\n                QuestionTitle: {},\n                Choices: {\n                  shape: 'S2u'\n                },\n                SelectedChoices: {\n                  shape: 'S35'\n                },\n                ChoiceAnswerSummaries: {\n                  shape: 'S6k'\n                },\n                IsApplicable: {\n                  type: 'boolean'\n                },\n                Risk: {},\n                Reason: {},\n                QuestionType: {},\n                JiraConfiguration: {\n                  shape: 'S3e'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListCheckDetails: {\n      http: {\n        requestUri: '/workloads/{WorkloadId}/checks'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensArn',\n          'PillarId',\n          'QuestionId',\n          'ChoiceId'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          LensArn: {},\n          PillarId: {},\n          QuestionId: {},\n          ChoiceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CheckDetails: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {},\n                Name: {},\n                Description: {},\n                Provider: {},\n                LensArn: {},\n                PillarId: {},\n                QuestionId: {},\n                ChoiceId: {},\n                Status: {},\n                AccountId: {},\n                FlaggedResources: {\n                  type: 'integer'\n                },\n                Reason: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListCheckSummaries: {\n      http: {\n        requestUri: '/workloads/{WorkloadId}/checkSummaries'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensArn',\n          'PillarId',\n          'QuestionId',\n          'ChoiceId'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          LensArn: {},\n          PillarId: {},\n          QuestionId: {},\n          ChoiceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CheckSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {},\n                Name: {},\n                Provider: {},\n                Description: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                },\n                LensArn: {},\n                PillarId: {},\n                QuestionId: {},\n                ChoiceId: {},\n                Status: {},\n                AccountSummary: {\n                  type: 'map',\n                  key: {},\n                  value: {\n                    type: 'integer'\n                  }\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListLensReviewImprovements: {\n      http: {\n        method: 'GET',\n        requestUri: '/workloads/{WorkloadId}/lensReviews/{LensAlias}/improvements'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensAlias'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          PillarId: {\n            location: 'querystring',\n            locationName: 'PillarId'\n          },\n          MilestoneNumber: {\n            location: 'querystring',\n            locationName: 'MilestoneNumber',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          QuestionPriority: {\n            location: 'querystring',\n            locationName: 'QuestionPriority'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          MilestoneNumber: {\n            type: 'integer'\n          },\n          LensAlias: {},\n          LensArn: {},\n          ImprovementSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                QuestionId: {},\n                PillarId: {},\n                QuestionTitle: {},\n                Risk: {},\n                ImprovementPlanUrl: {},\n                ImprovementPlans: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      ChoiceId: {},\n                      DisplayText: {},\n                      ImprovementPlanUrl: {}\n                    }\n                  }\n                },\n                JiraConfiguration: {\n                  shape: 'S3e'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListLensReviews: {\n      http: {\n        method: 'GET',\n        requestUri: '/workloads/{WorkloadId}/lensReviews'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          MilestoneNumber: {\n            location: 'querystring',\n            locationName: 'MilestoneNumber',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          MilestoneNumber: {\n            type: 'integer'\n          },\n          LensReviewSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                LensAlias: {},\n                LensArn: {},\n                LensVersion: {},\n                LensName: {},\n                LensStatus: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                },\n                RiskCounts: {\n                  shape: 'S3q'\n                },\n                Profiles: {\n                  shape: 'S4t'\n                },\n                PrioritizedRiskCounts: {\n                  shape: 'S3q'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListLensShares: {\n      http: {\n        method: 'GET',\n        requestUri: '/lenses/{LensAlias}/shares'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LensAlias'\n        ],\n        members: {\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          SharedWithPrefix: {\n            location: 'querystring',\n            locationName: 'SharedWithPrefix'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          Status: {\n            location: 'querystring',\n            locationName: 'Status'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LensShareSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ShareId: {},\n                SharedWith: {},\n                Status: {},\n                StatusMessage: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListLenses: {\n      http: {\n        method: 'GET',\n        requestUri: '/lenses'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          LensType: {\n            location: 'querystring',\n            locationName: 'LensType'\n          },\n          LensStatus: {\n            location: 'querystring',\n            locationName: 'LensStatus'\n          },\n          LensName: {\n            location: 'querystring',\n            locationName: 'LensName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LensSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                LensArn: {},\n                LensAlias: {},\n                LensName: {},\n                LensType: {},\n                Description: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                UpdatedAt: {\n                  type: 'timestamp'\n                },\n                LensVersion: {},\n                Owner: {},\n                LensStatus: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListMilestones: {\n      http: {\n        requestUri: '/workloads/{WorkloadId}/milestonesSummaries'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          MilestoneSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                MilestoneNumber: {\n                  type: 'integer'\n                },\n                MilestoneName: {},\n                RecordedAt: {\n                  type: 'timestamp'\n                },\n                WorkloadSummary: {\n                  shape: 'S7w'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListNotifications: {\n      http: {\n        requestUri: '/notifications'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          ResourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NotificationSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Type: {},\n                LensUpgradeSummary: {\n                  type: 'structure',\n                  members: {\n                    WorkloadId: {},\n                    WorkloadName: {},\n                    LensAlias: {},\n                    LensArn: {},\n                    CurrentLensVersion: {},\n                    LatestLensVersion: {},\n                    ResourceArn: {},\n                    ResourceName: {}\n                  }\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListProfileNotifications: {\n      http: {\n        method: 'GET',\n        requestUri: '/profileNotifications/'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          WorkloadId: {\n            location: 'querystring',\n            locationName: 'WorkloadId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NotificationSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CurrentProfileVersion: {},\n                LatestProfileVersion: {},\n                Type: {},\n                ProfileArn: {},\n                ProfileName: {},\n                WorkloadId: {},\n                WorkloadName: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListProfileShares: {\n      http: {\n        method: 'GET',\n        requestUri: '/profiles/{ProfileArn}/shares'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProfileArn'\n        ],\n        members: {\n          ProfileArn: {\n            location: 'uri',\n            locationName: 'ProfileArn'\n          },\n          SharedWithPrefix: {\n            location: 'querystring',\n            locationName: 'SharedWithPrefix'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          Status: {\n            location: 'querystring',\n            locationName: 'Status'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ProfileShareSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ShareId: {},\n                SharedWith: {},\n                Status: {},\n                StatusMessage: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListProfiles: {\n      http: {\n        method: 'GET',\n        requestUri: '/profileSummaries'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ProfileNamePrefix: {\n            location: 'querystring',\n            locationName: 'ProfileNamePrefix'\n          },\n          ProfileOwnerType: {\n            location: 'querystring',\n            locationName: 'ProfileOwnerType'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ProfileSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ProfileArn: {},\n                ProfileVersion: {},\n                ProfileName: {},\n                ProfileDescription: {},\n                Owner: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                UpdatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListReviewTemplateAnswers: {\n      http: {\n        method: 'GET',\n        requestUri: '/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/answers'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn',\n          'LensAlias'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          PillarId: {\n            location: 'querystring',\n            locationName: 'PillarId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TemplateArn: {},\n          LensAlias: {},\n          AnswerSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                QuestionId: {},\n                PillarId: {},\n                QuestionTitle: {},\n                Choices: {\n                  shape: 'S2u'\n                },\n                SelectedChoices: {\n                  shape: 'S35'\n                },\n                ChoiceAnswerSummaries: {\n                  shape: 'S6k'\n                },\n                IsApplicable: {\n                  type: 'boolean'\n                },\n                AnswerStatus: {},\n                Reason: {},\n                QuestionType: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListReviewTemplates: {\n      http: {\n        method: 'GET',\n        requestUri: '/reviewTemplates'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReviewTemplates: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Description: {},\n                Lenses: {\n                  shape: 'S14'\n                },\n                Owner: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                },\n                TemplateArn: {},\n                TemplateName: {},\n                UpdateStatus: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListShareInvitations: {\n      http: {\n        method: 'GET',\n        requestUri: '/shareInvitations'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          WorkloadNamePrefix: {\n            location: 'querystring',\n            locationName: 'WorkloadNamePrefix'\n          },\n          LensNamePrefix: {\n            location: 'querystring',\n            locationName: 'LensNamePrefix'\n          },\n          ShareResourceType: {\n            location: 'querystring',\n            locationName: 'ShareResourceType'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          ProfileNamePrefix: {\n            location: 'querystring',\n            locationName: 'ProfileNamePrefix'\n          },\n          TemplateNamePrefix: {\n            location: 'querystring',\n            locationName: 'TemplateNamePrefix'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ShareInvitationSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ShareInvitationId: {},\n                SharedBy: {},\n                SharedWith: {},\n                PermissionType: {},\n                ShareResourceType: {},\n                WorkloadName: {},\n                WorkloadId: {},\n                LensName: {},\n                LensArn: {},\n                ProfileName: {},\n                ProfileArn: {},\n                TemplateName: {},\n                TemplateArn: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{WorkloadArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadArn'\n        ],\n        members: {\n          WorkloadArn: {\n            location: 'uri',\n            locationName: 'WorkloadArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Su'\n          }\n        }\n      }\n    },\n    ListTemplateShares: {\n      http: {\n        method: 'GET',\n        requestUri: '/templates/shares/{TemplateArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          SharedWithPrefix: {\n            location: 'querystring',\n            locationName: 'SharedWithPrefix'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          Status: {\n            location: 'querystring',\n            locationName: 'Status'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TemplateArn: {},\n          TemplateShareSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ShareId: {},\n                SharedWith: {},\n                Status: {},\n                StatusMessage: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListWorkloadShares: {\n      http: {\n        method: 'GET',\n        requestUri: '/workloads/{WorkloadId}/shares'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          SharedWithPrefix: {\n            location: 'querystring',\n            locationName: 'SharedWithPrefix'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          Status: {\n            location: 'querystring',\n            locationName: 'Status'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          WorkloadShareSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ShareId: {},\n                SharedWith: {},\n                PermissionType: {},\n                Status: {},\n                StatusMessage: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListWorkloads: {\n      http: {\n        requestUri: '/workloadsSummaries'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          WorkloadNamePrefix: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadSummaries: {\n            type: 'list',\n            member: {\n              shape: 'S7w'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{WorkloadArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadArn',\n          'Tags'\n        ],\n        members: {\n          WorkloadArn: {\n            location: 'uri',\n            locationName: 'WorkloadArn'\n          },\n          Tags: {\n            shape: 'Su'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{WorkloadArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadArn',\n          'TagKeys'\n        ],\n        members: {\n          WorkloadArn: {\n            location: 'uri',\n            locationName: 'WorkloadArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateAnswer: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers/{QuestionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensAlias',\n          'QuestionId'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          QuestionId: {\n            location: 'uri',\n            locationName: 'QuestionId'\n          },\n          SelectedChoices: {\n            shape: 'S35'\n          },\n          ChoiceUpdates: {\n            shape: 'S9o'\n          },\n          Notes: {},\n          IsApplicable: {\n            type: 'boolean'\n          },\n          Reason: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          LensAlias: {},\n          LensArn: {},\n          Answer: {\n            shape: 'S2o'\n          }\n        }\n      }\n    },\n    UpdateGlobalSettings: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/global-settings'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          OrganizationSharingStatus: {},\n          DiscoveryIntegrationStatus: {},\n          JiraConfiguration: {\n            type: 'structure',\n            members: {\n              IssueManagementStatus: {},\n              IssueManagementType: {},\n              JiraProjectKey: {},\n              IntegrationStatus: {}\n            }\n          }\n        }\n      }\n    },\n    UpdateIntegration: {\n      http: {\n        requestUri: '/workloads/{WorkloadId}/updateIntegration'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'ClientRequestToken',\n          'IntegratingService'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          IntegratingService: {}\n        }\n      }\n    },\n    UpdateLensReview: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/workloads/{WorkloadId}/lensReviews/{LensAlias}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensAlias'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          LensNotes: {},\n          PillarNotes: {\n            shape: 'S9x'\n          },\n          JiraConfiguration: {\n            shape: 'S4o'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          LensReview: {\n            shape: 'S4j'\n          }\n        }\n      }\n    },\n    UpdateProfile: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/profiles/{ProfileArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProfileArn'\n        ],\n        members: {\n          ProfileArn: {\n            location: 'uri',\n            locationName: 'ProfileArn'\n          },\n          ProfileDescription: {},\n          ProfileQuestions: {\n            shape: 'Sp'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Profile: {\n            shape: 'S5f'\n          }\n        }\n      }\n    },\n    UpdateReviewTemplate: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/reviewTemplates/{TemplateArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          TemplateName: {},\n          Description: {},\n          Notes: {},\n          LensesToAssociate: {\n            shape: 'Sa2'\n          },\n          LensesToDisassociate: {\n            shape: 'Sa2'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ReviewTemplate: {\n            shape: 'S5w'\n          }\n        }\n      }\n    },\n    UpdateReviewTemplateAnswer: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/answers/{QuestionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn',\n          'LensAlias',\n          'QuestionId'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          QuestionId: {\n            location: 'uri',\n            locationName: 'QuestionId'\n          },\n          SelectedChoices: {\n            shape: 'S35'\n          },\n          ChoiceUpdates: {\n            shape: 'S9o'\n          },\n          Notes: {},\n          IsApplicable: {\n            type: 'boolean'\n          },\n          Reason: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TemplateArn: {},\n          LensAlias: {},\n          Answer: {\n            shape: 'S62'\n          }\n        }\n      }\n    },\n    UpdateReviewTemplateLensReview: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn',\n          'LensAlias'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          LensNotes: {},\n          PillarNotes: {\n            shape: 'S9x'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TemplateArn: {},\n          LensReview: {\n            shape: 'S66'\n          }\n        }\n      }\n    },\n    UpdateShareInvitation: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/shareInvitations/{ShareInvitationId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ShareInvitationId',\n          'ShareInvitationAction'\n        ],\n        members: {\n          ShareInvitationId: {\n            location: 'uri',\n            locationName: 'ShareInvitationId'\n          },\n          ShareInvitationAction: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ShareInvitation: {\n            type: 'structure',\n            members: {\n              ShareInvitationId: {},\n              ShareResourceType: {},\n              WorkloadId: {},\n              LensAlias: {},\n              LensArn: {},\n              ProfileArn: {},\n              TemplateArn: {}\n            }\n          }\n        }\n      }\n    },\n    UpdateWorkload: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/workloads/{WorkloadId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          WorkloadName: {},\n          Description: {},\n          Environment: {},\n          AccountIds: {\n            shape: 'S1e'\n          },\n          AwsRegions: {\n            shape: 'S1g'\n          },\n          NonAwsRegions: {\n            shape: 'S1i'\n          },\n          PillarPriorities: {\n            shape: 'S1k'\n          },\n          ArchitecturalDesign: {},\n          ReviewOwner: {},\n          IsReviewOwnerUpdateAcknowledged: {\n            type: 'boolean'\n          },\n          IndustryType: {},\n          Industry: {},\n          Notes: {},\n          ImprovementStatus: {},\n          DiscoveryConfig: {\n            shape: 'S1r'\n          },\n          Applications: {\n            shape: 'S1v'\n          },\n          JiraConfiguration: {\n            shape: 'S1z'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Workload: {\n            shape: 'S59'\n          }\n        }\n      }\n    },\n    UpdateWorkloadShare: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/workloads/{WorkloadId}/shares/{ShareId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ShareId',\n          'WorkloadId',\n          'PermissionType'\n        ],\n        members: {\n          ShareId: {\n            location: 'uri',\n            locationName: 'ShareId'\n          },\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          PermissionType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WorkloadId: {},\n          WorkloadShare: {\n            type: 'structure',\n            members: {\n              ShareId: {},\n              SharedBy: {},\n              SharedWith: {},\n              PermissionType: {},\n              Status: {},\n              WorkloadName: {},\n              WorkloadId: {}\n            }\n          }\n        }\n      }\n    },\n    UpgradeLensReview: {\n      http: {\n        method: 'PUT',\n        requestUri: '/workloads/{WorkloadId}/lensReviews/{LensAlias}/upgrade'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'LensAlias',\n          'MilestoneName'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          MilestoneName: {},\n          ClientRequestToken: {}\n        }\n      }\n    },\n    UpgradeProfileVersion: {\n      http: {\n        method: 'PUT',\n        requestUri: '/workloads/{WorkloadId}/profiles/{ProfileArn}/upgrade'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'WorkloadId',\n          'ProfileArn'\n        ],\n        members: {\n          WorkloadId: {\n            location: 'uri',\n            locationName: 'WorkloadId'\n          },\n          ProfileArn: {\n            location: 'uri',\n            locationName: 'ProfileArn'\n          },\n          MilestoneName: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          }\n        }\n      }\n    },\n    UpgradeReviewTemplateLensReview: {\n      http: {\n        method: 'PUT',\n        requestUri: '/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/upgrade'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn',\n          'LensAlias'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          },\n          LensAlias: {\n            location: 'uri',\n            locationName: 'LensAlias'\n          },\n          ClientRequestToken: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'list',\n      member: {}\n    },\n    S6: {\n      type: 'list',\n      member: {}\n    },\n    Sp: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          QuestionId: {},\n          SelectedChoiceIds: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    Su: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S14: {\n      type: 'list',\n      member: {}\n    },\n    S1e: {\n      type: 'list',\n      member: {}\n    },\n    S1g: {\n      type: 'list',\n      member: {}\n    },\n    S1i: {\n      type: 'list',\n      member: {}\n    },\n    S1k: {\n      type: 'list',\n      member: {}\n    },\n    S1q: {\n      type: 'list',\n      member: {}\n    },\n    S1r: {\n      type: 'structure',\n      members: {\n        TrustedAdvisorIntegrationStatus: {},\n        WorkloadResourceDefinition: {\n          type: 'list',\n          member: {}\n        }\n      }\n    },\n    S1v: {\n      type: 'list',\n      member: {}\n    },\n    S1z: {\n      type: 'structure',\n      members: {\n        IssueManagementStatus: {},\n        IssueManagementType: {},\n        JiraProjectKey: {}\n      }\n    },\n    S2o: {\n      type: 'structure',\n      members: {\n        QuestionId: {},\n        PillarId: {},\n        QuestionTitle: {},\n        QuestionDescription: {},\n        ImprovementPlanUrl: {},\n        HelpfulResourceUrl: {},\n        HelpfulResourceDisplayText: {},\n        Choices: {\n          shape: 'S2u'\n        },\n        SelectedChoices: {\n          shape: 'S35'\n        },\n        ChoiceAnswers: {\n          shape: 'S36'\n        },\n        IsApplicable: {\n          type: 'boolean'\n        },\n        Risk: {},\n        Notes: {},\n        Reason: {},\n        JiraConfiguration: {\n          shape: 'S3e'\n        }\n      }\n    },\n    S2u: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          ChoiceId: {},\n          Title: {},\n          Description: {},\n          HelpfulResource: {\n            shape: 'S2y'\n          },\n          ImprovementPlan: {\n            shape: 'S2y'\n          },\n          AdditionalResources: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Type: {},\n                Content: {\n                  type: 'list',\n                  member: {\n                    shape: 'S2y'\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S2y: {\n      type: 'structure',\n      members: {\n        DisplayText: {},\n        Url: {}\n      }\n    },\n    S35: {\n      type: 'list',\n      member: {}\n    },\n    S36: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          ChoiceId: {},\n          Status: {},\n          Reason: {},\n          Notes: {}\n        }\n      }\n    },\n    S3e: {\n      type: 'structure',\n      members: {\n        JiraIssueUrl: {},\n        LastSyncedTime: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S3q: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'integer'\n      }\n    },\n    S4j: {\n      type: 'structure',\n      members: {\n        LensAlias: {},\n        LensArn: {},\n        LensVersion: {},\n        LensName: {},\n        LensStatus: {},\n        PillarReviewSummaries: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              PillarId: {},\n              PillarName: {},\n              Notes: {},\n              RiskCounts: {\n                shape: 'S3q'\n              },\n              PrioritizedRiskCounts: {\n                shape: 'S3q'\n              }\n            }\n          }\n        },\n        JiraConfiguration: {\n          shape: 'S4o'\n        },\n        UpdatedAt: {\n          type: 'timestamp'\n        },\n        Notes: {},\n        RiskCounts: {\n          shape: 'S3q'\n        },\n        NextToken: {},\n        Profiles: {\n          shape: 'S4t'\n        },\n        PrioritizedRiskCounts: {\n          shape: 'S3q'\n        }\n      }\n    },\n    S4o: {\n      type: 'structure',\n      members: {\n        SelectedPillars: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              PillarId: {},\n              SelectedQuestionIds: {\n                type: 'list',\n                member: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    S4t: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          ProfileArn: {},\n          ProfileVersion: {}\n        }\n      }\n    },\n    S59: {\n      type: 'structure',\n      members: {\n        WorkloadId: {},\n        WorkloadArn: {},\n        WorkloadName: {},\n        Description: {},\n        Environment: {},\n        UpdatedAt: {\n          type: 'timestamp'\n        },\n        AccountIds: {\n          shape: 'S1e'\n        },\n        AwsRegions: {\n          shape: 'S1g'\n        },\n        NonAwsRegions: {\n          shape: 'S1i'\n        },\n        ArchitecturalDesign: {},\n        ReviewOwner: {},\n        ReviewRestrictionDate: {\n          type: 'timestamp'\n        },\n        IsReviewOwnerUpdateAcknowledged: {\n          type: 'boolean'\n        },\n        IndustryType: {},\n        Industry: {},\n        Notes: {},\n        ImprovementStatus: {},\n        RiskCounts: {\n          shape: 'S3q'\n        },\n        PillarPriorities: {\n          shape: 'S1k'\n        },\n        Lenses: {\n          shape: 'S1q'\n        },\n        Owner: {},\n        ShareInvitationId: {},\n        Tags: {\n          shape: 'Su'\n        },\n        DiscoveryConfig: {\n          shape: 'S1r'\n        },\n        Applications: {\n          shape: 'S1v'\n        },\n        Profiles: {\n          shape: 'S4t'\n        },\n        PrioritizedRiskCounts: {\n          shape: 'S3q'\n        },\n        JiraConfiguration: {\n          type: 'structure',\n          members: {\n            IssueManagementStatus: {},\n            IssueManagementType: {},\n            JiraProjectKey: {},\n            StatusMessage: {}\n          }\n        }\n      }\n    },\n    S5f: {\n      type: 'structure',\n      members: {\n        ProfileArn: {},\n        ProfileVersion: {},\n        ProfileName: {},\n        ProfileDescription: {},\n        ProfileQuestions: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              QuestionId: {},\n              QuestionTitle: {},\n              QuestionDescription: {},\n              QuestionChoices: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    ChoiceId: {},\n                    ChoiceTitle: {},\n                    ChoiceDescription: {}\n                  }\n                }\n              },\n              SelectedChoiceIds: {\n                type: 'list',\n                member: {}\n              },\n              MinSelectedChoices: {\n                type: 'integer'\n              },\n              MaxSelectedChoices: {\n                type: 'integer'\n              }\n            }\n          }\n        },\n        Owner: {},\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        UpdatedAt: {\n          type: 'timestamp'\n        },\n        ShareInvitationId: {},\n        Tags: {\n          shape: 'Su'\n        }\n      }\n    },\n    S5w: {\n      type: 'structure',\n      members: {\n        Description: {},\n        Lenses: {\n          shape: 'S14'\n        },\n        Notes: {},\n        QuestionCounts: {\n          shape: 'S5x'\n        },\n        Owner: {},\n        UpdatedAt: {\n          type: 'timestamp'\n        },\n        TemplateArn: {},\n        TemplateName: {},\n        Tags: {\n          shape: 'Su'\n        },\n        UpdateStatus: {},\n        ShareInvitationId: {}\n      }\n    },\n    S5x: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'integer'\n      }\n    },\n    S62: {\n      type: 'structure',\n      members: {\n        QuestionId: {},\n        PillarId: {},\n        QuestionTitle: {},\n        QuestionDescription: {},\n        ImprovementPlanUrl: {},\n        HelpfulResourceUrl: {},\n        HelpfulResourceDisplayText: {},\n        Choices: {\n          shape: 'S2u'\n        },\n        SelectedChoices: {\n          shape: 'S35'\n        },\n        ChoiceAnswers: {\n          shape: 'S36'\n        },\n        IsApplicable: {\n          type: 'boolean'\n        },\n        AnswerStatus: {},\n        Notes: {},\n        Reason: {}\n      }\n    },\n    S66: {\n      type: 'structure',\n      members: {\n        LensAlias: {},\n        LensArn: {},\n        LensVersion: {},\n        LensName: {},\n        LensStatus: {},\n        PillarReviewSummaries: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              PillarId: {},\n              PillarName: {},\n              Notes: {},\n              QuestionCounts: {\n                shape: 'S5x'\n              }\n            }\n          }\n        },\n        UpdatedAt: {\n          type: 'timestamp'\n        },\n        Notes: {},\n        QuestionCounts: {\n          shape: 'S5x'\n        },\n        NextToken: {}\n      }\n    },\n    S6k: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          ChoiceId: {},\n          Status: {},\n          Reason: {}\n        }\n      }\n    },\n    S7w: {\n      type: 'structure',\n      members: {\n        WorkloadId: {},\n        WorkloadArn: {},\n        WorkloadName: {},\n        Owner: {},\n        UpdatedAt: {\n          type: 'timestamp'\n        },\n        Lenses: {\n          shape: 'S1q'\n        },\n        RiskCounts: {\n          shape: 'S3q'\n        },\n        ImprovementStatus: {},\n        Profiles: {\n          shape: 'S4t'\n        },\n        PrioritizedRiskCounts: {\n          shape: 'S3q'\n        }\n      }\n    },\n    S9o: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        required: [\n          'Status'\n        ],\n        members: {\n          Status: {},\n          Reason: {},\n          Notes: {}\n        }\n      }\n    },\n    S9x: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sa2: {\n      type: 'list',\n      member: {}\n    }\n  }\n}"]}