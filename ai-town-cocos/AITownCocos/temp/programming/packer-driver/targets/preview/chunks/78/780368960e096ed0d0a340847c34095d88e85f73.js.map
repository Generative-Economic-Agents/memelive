{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/panorama-2019-07-24.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateApplicationInstance","http","requestUri","responseCode","input","type","required","members","ApplicationInstanceIdToReplace","DefaultRuntimeContextDevice","Description","ManifestOverridesPayload","shape","ManifestPayload","Name","RuntimeRoleArn","Tags","output","ApplicationInstanceId","CreateJobForDevices","DeviceIds","member","DeviceJobConfig","OTAJobConfig","AllowMajorVersionUpdate","ImageVersion","JobType","Jobs","DeviceId","JobId","CreateNodeFromTemplateJob","JobTags","NodeDescription","NodeName","OutputPackageName","OutputPackageVersion","TemplateParameters","TemplateType","CreatePackage","PackageName","Arn","PackageId","StorageLocation","CreatePackageImportJob","ClientToken","InputConfig","OutputConfig","DeleteDevice","method","location","locationName","DeletePackage","ForceDelete","DeregisterPackageVersion","OwnerAccount","PackageVersion","PatchVersion","UpdatedLatestPatchVersion","DescribeApplicationInstance","CreatedTime","DefaultRuntimeContextDeviceName","HealthStatus","LastUpdatedTime","RuntimeContextStates","Status","StatusDescription","DescribeApplicationInstanceDetails","DescribeDevice","AlternateSoftwares","Version","Brand","CurrentNetworkingStatus","Ethernet0Status","Ethernet1Status","NtpStatus","ConnectionStatus","IpAddress","NtpServerName","CurrentSoftware","DeviceAggregatedStatus","DeviceConnectionStatus","LatestAlternateSoftware","LatestDeviceJob","LatestSoftware","LeaseExpirationTime","NetworkingConfiguration","ProvisioningStatus","SerialNumber","Type","DescribeDeviceJob","DeviceArn","DeviceName","DeviceType","DescribeNode","NodeId","AssetName","Category","NodeInterface","Inputs","DefaultValue","MaxConnections","Outputs","PackageArn","DescribeNodeFromTemplateJob","StatusMessage","DescribePackage","ReadAccessPrincipalArns","WriteAccessPrincipalArns","DescribePackageImportJob","Output","OutputS3Location","BucketName","ObjectKey","DescribePackageVersion","IsLatestPatch","RegisteredTime","ListApplicationInstanceDependencies","MaxResults","NextToken","PackageObjects","ListApplicationInstanceNodeInstances","NodeInstances","CurrentStatus","NodeInstanceId","PackagePatchVersion","ListApplicationInstances","StatusFilter","ApplicationInstances","ListDevices","DeviceAggregatedStatusFilter","NameFilter","SortBy","SortOrder","Devices","ListDevicesJobs","DeviceJobs","ListNodeFromTemplateJobs","NodeFromTemplateJobs","ListNodes","Nodes","ListPackageImportJobs","PackageImportJobs","ListPackages","Packages","ListTagsForResource","ResourceArn","ProvisionDevice","Certificates","IotThingName","RegisterPackageVersion","MarkLatest","RemoveApplicationInstance","SignalApplicationInstanceNodeInstances","NodeSignals","Signal","TagResource","UntagResource","TagKeys","UpdateDeviceMetadata","shapes","S5","PayloadData","union","S7","Sb","key","value","Ss","ResourceType","Sy","sensitive","S17","BinaryPrefixLocation","Bucket","GeneratedPrefixLocation","ManifestPrefixLocation","RepoPrefixLocation","S1c","PackageVersionInputConfig","S3Location","Region","S1j","PackageVersionOutputConfig","S21","DesiredState","DeviceReportedStatus","DeviceReportedTime","RuntimeContextName","S2j","HwAddress","S2u","S2y","Ethernet0","Ethernet1","Ntp","NtpServers","S2z","ConnectionType","StaticIpConnectionInfo","DefaultGateway","Dns","Mask","S3z"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2019-07-24',\n    endpointPrefix: 'panorama',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'Panorama',\n    serviceFullName: 'AWS Panorama',\n    serviceId: 'Panorama',\n    signatureVersion: 'v4',\n    signingName: 'panorama',\n    uid: 'panorama-2019-07-24'\n  },\n  operations: {\n    CreateApplicationInstance: {\n      http: {\n        requestUri: '/application-instances',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'DefaultRuntimeContextDevice',\n          'ManifestPayload'\n        ],\n        members: {\n          ApplicationInstanceIdToReplace: {},\n          DefaultRuntimeContextDevice: {},\n          Description: {},\n          ManifestOverridesPayload: {\n            shape: 'S5'\n          },\n          ManifestPayload: {\n            shape: 'S7'\n          },\n          Name: {},\n          RuntimeRoleArn: {},\n          Tags: {\n            shape: 'Sb'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ApplicationInstanceId'\n        ],\n        members: {\n          ApplicationInstanceId: {}\n        }\n      }\n    },\n    CreateJobForDevices: {\n      http: {\n        requestUri: '/jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'DeviceIds',\n          'JobType'\n        ],\n        members: {\n          DeviceIds: {\n            type: 'list',\n            member: {}\n          },\n          DeviceJobConfig: {\n            type: 'structure',\n            members: {\n              OTAJobConfig: {\n                type: 'structure',\n                required: [\n                  'ImageVersion'\n                ],\n                members: {\n                  AllowMajorVersionUpdate: {\n                    type: 'boolean'\n                  },\n                  ImageVersion: {}\n                }\n              }\n            }\n          },\n          JobType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Jobs'\n        ],\n        members: {\n          Jobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DeviceId: {},\n                JobId: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    CreateNodeFromTemplateJob: {\n      http: {\n        requestUri: '/packages/template-job',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NodeName',\n          'OutputPackageName',\n          'OutputPackageVersion',\n          'TemplateParameters',\n          'TemplateType'\n        ],\n        members: {\n          JobTags: {\n            shape: 'Ss'\n          },\n          NodeDescription: {},\n          NodeName: {},\n          OutputPackageName: {},\n          OutputPackageVersion: {},\n          TemplateParameters: {\n            shape: 'Sy'\n          },\n          TemplateType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    CreatePackage: {\n      http: {\n        requestUri: '/packages',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'PackageName'\n        ],\n        members: {\n          PackageName: {},\n          Tags: {\n            shape: 'Sb'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'StorageLocation'\n        ],\n        members: {\n          Arn: {},\n          PackageId: {},\n          StorageLocation: {\n            shape: 'S17'\n          }\n        }\n      }\n    },\n    CreatePackageImportJob: {\n      http: {\n        requestUri: '/packages/import-jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ClientToken',\n          'InputConfig',\n          'JobType',\n          'OutputConfig'\n        ],\n        members: {\n          ClientToken: {},\n          InputConfig: {\n            shape: 'S1c'\n          },\n          JobTags: {\n            shape: 'Ss'\n          },\n          JobType: {},\n          OutputConfig: {\n            shape: 'S1j'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    DeleteDevice: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/devices/{DeviceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'DeviceId'\n        ],\n        members: {\n          DeviceId: {\n            location: 'uri',\n            locationName: 'DeviceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DeviceId: {}\n        }\n      }\n    },\n    DeletePackage: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/packages/{PackageId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'PackageId'\n        ],\n        members: {\n          ForceDelete: {\n            location: 'querystring',\n            locationName: 'ForceDelete',\n            type: 'boolean'\n          },\n          PackageId: {\n            location: 'uri',\n            locationName: 'PackageId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeregisterPackageVersion: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/packages/{PackageId}/versions/{PackageVersion}/patch/{PatchVersion}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'PackageId',\n          'PackageVersion',\n          'PatchVersion'\n        ],\n        members: {\n          OwnerAccount: {\n            location: 'querystring',\n            locationName: 'OwnerAccount'\n          },\n          PackageId: {\n            location: 'uri',\n            locationName: 'PackageId'\n          },\n          PackageVersion: {\n            location: 'uri',\n            locationName: 'PackageVersion'\n          },\n          PatchVersion: {\n            location: 'uri',\n            locationName: 'PatchVersion'\n          },\n          UpdatedLatestPatchVersion: {\n            location: 'querystring',\n            locationName: 'UpdatedLatestPatchVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DescribeApplicationInstance: {\n      http: {\n        method: 'GET',\n        requestUri: '/application-instances/{ApplicationInstanceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ApplicationInstanceId'\n        ],\n        members: {\n          ApplicationInstanceId: {\n            location: 'uri',\n            locationName: 'ApplicationInstanceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ApplicationInstanceId: {},\n          ApplicationInstanceIdToReplace: {},\n          Arn: {},\n          CreatedTime: {\n            type: 'timestamp'\n          },\n          DefaultRuntimeContextDevice: {},\n          DefaultRuntimeContextDeviceName: {},\n          Description: {},\n          HealthStatus: {},\n          LastUpdatedTime: {\n            type: 'timestamp'\n          },\n          Name: {},\n          RuntimeContextStates: {\n            shape: 'S21'\n          },\n          RuntimeRoleArn: {},\n          Status: {},\n          StatusDescription: {},\n          Tags: {\n            shape: 'Sb'\n          }\n        }\n      }\n    },\n    DescribeApplicationInstanceDetails: {\n      http: {\n        method: 'GET',\n        requestUri: '/application-instances/{ApplicationInstanceId}/details',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ApplicationInstanceId'\n        ],\n        members: {\n          ApplicationInstanceId: {\n            location: 'uri',\n            locationName: 'ApplicationInstanceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ApplicationInstanceId: {},\n          ApplicationInstanceIdToReplace: {},\n          CreatedTime: {\n            type: 'timestamp'\n          },\n          DefaultRuntimeContextDevice: {},\n          Description: {},\n          ManifestOverridesPayload: {\n            shape: 'S5'\n          },\n          ManifestPayload: {\n            shape: 'S7'\n          },\n          Name: {}\n        }\n      }\n    },\n    DescribeDevice: {\n      http: {\n        method: 'GET',\n        requestUri: '/devices/{DeviceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'DeviceId'\n        ],\n        members: {\n          DeviceId: {\n            location: 'uri',\n            locationName: 'DeviceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AlternateSoftwares: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Version: {}\n              }\n            }\n          },\n          Arn: {},\n          Brand: {},\n          CreatedTime: {\n            type: 'timestamp'\n          },\n          CurrentNetworkingStatus: {\n            type: 'structure',\n            members: {\n              Ethernet0Status: {\n                shape: 'S2j'\n              },\n              Ethernet1Status: {\n                shape: 'S2j'\n              },\n              LastUpdatedTime: {\n                type: 'timestamp'\n              },\n              NtpStatus: {\n                type: 'structure',\n                members: {\n                  ConnectionStatus: {},\n                  IpAddress: {},\n                  NtpServerName: {}\n                }\n              }\n            }\n          },\n          CurrentSoftware: {},\n          Description: {},\n          DeviceAggregatedStatus: {},\n          DeviceConnectionStatus: {},\n          DeviceId: {},\n          LatestAlternateSoftware: {},\n          LatestDeviceJob: {\n            shape: 'S2u'\n          },\n          LatestSoftware: {},\n          LeaseExpirationTime: {\n            type: 'timestamp'\n          },\n          Name: {},\n          NetworkingConfiguration: {\n            shape: 'S2y'\n          },\n          ProvisioningStatus: {},\n          SerialNumber: {},\n          Tags: {\n            shape: 'Sb'\n          },\n          Type: {}\n        }\n      }\n    },\n    DescribeDeviceJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/jobs/{JobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {\n            location: 'uri',\n            locationName: 'JobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CreatedTime: {\n            type: 'timestamp'\n          },\n          DeviceArn: {},\n          DeviceId: {},\n          DeviceName: {},\n          DeviceType: {},\n          ImageVersion: {},\n          JobId: {},\n          JobType: {},\n          Status: {}\n        }\n      }\n    },\n    DescribeNode: {\n      http: {\n        method: 'GET',\n        requestUri: '/nodes/{NodeId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NodeId'\n        ],\n        members: {\n          NodeId: {\n            location: 'uri',\n            locationName: 'NodeId'\n          },\n          OwnerAccount: {\n            location: 'querystring',\n            locationName: 'OwnerAccount'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Category',\n          'CreatedTime',\n          'Description',\n          'LastUpdatedTime',\n          'Name',\n          'NodeId',\n          'NodeInterface',\n          'OwnerAccount',\n          'PackageId',\n          'PackageName',\n          'PackageVersion',\n          'PatchVersion'\n        ],\n        members: {\n          AssetName: {},\n          Category: {},\n          CreatedTime: {\n            type: 'timestamp'\n          },\n          Description: {},\n          LastUpdatedTime: {\n            type: 'timestamp'\n          },\n          Name: {},\n          NodeId: {},\n          NodeInterface: {\n            type: 'structure',\n            required: [\n              'Inputs',\n              'Outputs'\n            ],\n            members: {\n              Inputs: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    DefaultValue: {},\n                    Description: {},\n                    MaxConnections: {\n                      type: 'integer'\n                    },\n                    Name: {},\n                    Type: {}\n                  }\n                }\n              },\n              Outputs: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    Description: {},\n                    Name: {},\n                    Type: {}\n                  }\n                }\n              }\n            }\n          },\n          OwnerAccount: {},\n          PackageArn: {},\n          PackageId: {},\n          PackageName: {},\n          PackageVersion: {},\n          PatchVersion: {}\n        }\n      }\n    },\n    DescribeNodeFromTemplateJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/packages/template-job/{JobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {\n            location: 'uri',\n            locationName: 'JobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CreatedTime',\n          'JobId',\n          'LastUpdatedTime',\n          'NodeName',\n          'OutputPackageName',\n          'OutputPackageVersion',\n          'Status',\n          'StatusMessage',\n          'TemplateParameters',\n          'TemplateType'\n        ],\n        members: {\n          CreatedTime: {\n            type: 'timestamp'\n          },\n          JobId: {},\n          JobTags: {\n            shape: 'Ss'\n          },\n          LastUpdatedTime: {\n            type: 'timestamp'\n          },\n          NodeDescription: {},\n          NodeName: {},\n          OutputPackageName: {},\n          OutputPackageVersion: {},\n          Status: {},\n          StatusMessage: {},\n          TemplateParameters: {\n            shape: 'Sy'\n          },\n          TemplateType: {}\n        }\n      }\n    },\n    DescribePackage: {\n      http: {\n        method: 'GET',\n        requestUri: '/packages/metadata/{PackageId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'PackageId'\n        ],\n        members: {\n          PackageId: {\n            location: 'uri',\n            locationName: 'PackageId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Arn',\n          'CreatedTime',\n          'PackageId',\n          'PackageName',\n          'StorageLocation',\n          'Tags'\n        ],\n        members: {\n          Arn: {},\n          CreatedTime: {\n            type: 'timestamp'\n          },\n          PackageId: {},\n          PackageName: {},\n          ReadAccessPrincipalArns: {\n            shape: 'S3z'\n          },\n          StorageLocation: {\n            shape: 'S17'\n          },\n          Tags: {\n            shape: 'Sb'\n          },\n          WriteAccessPrincipalArns: {\n            shape: 'S3z'\n          }\n        }\n      }\n    },\n    DescribePackageImportJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/packages/import-jobs/{JobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {\n            location: 'uri',\n            locationName: 'JobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CreatedTime',\n          'InputConfig',\n          'JobId',\n          'JobType',\n          'LastUpdatedTime',\n          'Output',\n          'OutputConfig',\n          'Status',\n          'StatusMessage'\n        ],\n        members: {\n          ClientToken: {},\n          CreatedTime: {\n            type: 'timestamp'\n          },\n          InputConfig: {\n            shape: 'S1c'\n          },\n          JobId: {},\n          JobTags: {\n            shape: 'Ss'\n          },\n          JobType: {},\n          LastUpdatedTime: {\n            type: 'timestamp'\n          },\n          Output: {\n            type: 'structure',\n            required: [\n              'OutputS3Location',\n              'PackageId',\n              'PackageVersion',\n              'PatchVersion'\n            ],\n            members: {\n              OutputS3Location: {\n                type: 'structure',\n                required: [\n                  'BucketName',\n                  'ObjectKey'\n                ],\n                members: {\n                  BucketName: {},\n                  ObjectKey: {}\n                }\n              },\n              PackageId: {},\n              PackageVersion: {},\n              PatchVersion: {}\n            }\n          },\n          OutputConfig: {\n            shape: 'S1j'\n          },\n          Status: {},\n          StatusMessage: {}\n        }\n      }\n    },\n    DescribePackageVersion: {\n      http: {\n        method: 'GET',\n        requestUri: '/packages/metadata/{PackageId}/versions/{PackageVersion}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'PackageId',\n          'PackageVersion'\n        ],\n        members: {\n          OwnerAccount: {\n            location: 'querystring',\n            locationName: 'OwnerAccount'\n          },\n          PackageId: {\n            location: 'uri',\n            locationName: 'PackageId'\n          },\n          PackageVersion: {\n            location: 'uri',\n            locationName: 'PackageVersion'\n          },\n          PatchVersion: {\n            location: 'querystring',\n            locationName: 'PatchVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'IsLatestPatch',\n          'PackageId',\n          'PackageName',\n          'PackageVersion',\n          'PatchVersion',\n          'Status'\n        ],\n        members: {\n          IsLatestPatch: {\n            type: 'boolean'\n          },\n          OwnerAccount: {},\n          PackageArn: {},\n          PackageId: {},\n          PackageName: {},\n          PackageVersion: {},\n          PatchVersion: {},\n          RegisteredTime: {\n            type: 'timestamp'\n          },\n          Status: {},\n          StatusDescription: {}\n        }\n      }\n    },\n    ListApplicationInstanceDependencies: {\n      http: {\n        method: 'GET',\n        requestUri: '/application-instances/{ApplicationInstanceId}/package-dependencies',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ApplicationInstanceId'\n        ],\n        members: {\n          ApplicationInstanceId: {\n            location: 'uri',\n            locationName: 'ApplicationInstanceId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          PackageObjects: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Name',\n                'PackageVersion',\n                'PatchVersion'\n              ],\n              members: {\n                Name: {},\n                PackageVersion: {},\n                PatchVersion: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListApplicationInstanceNodeInstances: {\n      http: {\n        method: 'GET',\n        requestUri: '/application-instances/{ApplicationInstanceId}/node-instances',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ApplicationInstanceId'\n        ],\n        members: {\n          ApplicationInstanceId: {\n            location: 'uri',\n            locationName: 'ApplicationInstanceId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          NodeInstances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'CurrentStatus',\n                'NodeInstanceId'\n              ],\n              members: {\n                CurrentStatus: {},\n                NodeId: {},\n                NodeInstanceId: {},\n                NodeName: {},\n                PackageName: {},\n                PackagePatchVersion: {},\n                PackageVersion: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListApplicationInstances: {\n      http: {\n        method: 'GET',\n        requestUri: '/application-instances',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          DeviceId: {\n            location: 'querystring',\n            locationName: 'deviceId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          StatusFilter: {\n            location: 'querystring',\n            locationName: 'statusFilter'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ApplicationInstances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ApplicationInstanceId: {},\n                Arn: {},\n                CreatedTime: {\n                  type: 'timestamp'\n                },\n                DefaultRuntimeContextDevice: {},\n                DefaultRuntimeContextDeviceName: {},\n                Description: {},\n                HealthStatus: {},\n                Name: {},\n                RuntimeContextStates: {\n                  shape: 'S21'\n                },\n                Status: {},\n                StatusDescription: {},\n                Tags: {\n                  shape: 'Sb'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListDevices: {\n      http: {\n        method: 'GET',\n        requestUri: '/devices',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          DeviceAggregatedStatusFilter: {\n            location: 'querystring',\n            locationName: 'DeviceAggregatedStatusFilter'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NameFilter: {\n            location: 'querystring',\n            locationName: 'NameFilter'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          SortBy: {\n            location: 'querystring',\n            locationName: 'SortBy'\n          },\n          SortOrder: {\n            location: 'querystring',\n            locationName: 'SortOrder'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Devices'\n        ],\n        members: {\n          Devices: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Brand: {},\n                CreatedTime: {\n                  type: 'timestamp'\n                },\n                CurrentSoftware: {},\n                Description: {},\n                DeviceAggregatedStatus: {},\n                DeviceId: {},\n                LastUpdatedTime: {\n                  type: 'timestamp'\n                },\n                LatestDeviceJob: {\n                  shape: 'S2u'\n                },\n                LeaseExpirationTime: {\n                  type: 'timestamp'\n                },\n                Name: {},\n                ProvisioningStatus: {},\n                Tags: {\n                  shape: 'Sb'\n                },\n                Type: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListDevicesJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          DeviceId: {\n            location: 'querystring',\n            locationName: 'DeviceId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DeviceJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CreatedTime: {\n                  type: 'timestamp'\n                },\n                DeviceId: {},\n                DeviceName: {},\n                JobId: {},\n                JobType: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListNodeFromTemplateJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/packages/template-job',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'NodeFromTemplateJobs'\n        ],\n        members: {\n          NextToken: {},\n          NodeFromTemplateJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CreatedTime: {\n                  type: 'timestamp'\n                },\n                JobId: {},\n                NodeName: {},\n                Status: {},\n                StatusMessage: {},\n                TemplateType: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListNodes: {\n      http: {\n        method: 'GET',\n        requestUri: '/nodes',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Category: {\n            location: 'querystring',\n            locationName: 'category'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          OwnerAccount: {\n            location: 'querystring',\n            locationName: 'ownerAccount'\n          },\n          PackageName: {\n            location: 'querystring',\n            locationName: 'packageName'\n          },\n          PackageVersion: {\n            location: 'querystring',\n            locationName: 'packageVersion'\n          },\n          PatchVersion: {\n            location: 'querystring',\n            locationName: 'patchVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Nodes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Category',\n                'CreatedTime',\n                'Name',\n                'NodeId',\n                'PackageId',\n                'PackageName',\n                'PackageVersion',\n                'PatchVersion'\n              ],\n              members: {\n                Category: {},\n                CreatedTime: {\n                  type: 'timestamp'\n                },\n                Description: {},\n                Name: {},\n                NodeId: {},\n                OwnerAccount: {},\n                PackageArn: {},\n                PackageId: {},\n                PackageName: {},\n                PackageVersion: {},\n                PatchVersion: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListPackageImportJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/packages/import-jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'PackageImportJobs'\n        ],\n        members: {\n          NextToken: {},\n          PackageImportJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CreatedTime: {\n                  type: 'timestamp'\n                },\n                JobId: {},\n                JobType: {},\n                LastUpdatedTime: {\n                  type: 'timestamp'\n                },\n                Status: {},\n                StatusMessage: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListPackages: {\n      http: {\n        method: 'GET',\n        requestUri: '/packages',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Packages: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Arn: {},\n                CreatedTime: {\n                  type: 'timestamp'\n                },\n                PackageId: {},\n                PackageName: {},\n                Tags: {\n                  shape: 'Sb'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Sb'\n          }\n        }\n      }\n    },\n    ProvisionDevice: {\n      http: {\n        requestUri: '/devices',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Description: {},\n          Name: {},\n          NetworkingConfiguration: {\n            shape: 'S2y'\n          },\n          Tags: {\n            shape: 'Sb'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Arn',\n          'Status'\n        ],\n        members: {\n          Arn: {},\n          Certificates: {\n            type: 'blob'\n          },\n          DeviceId: {},\n          IotThingName: {},\n          Status: {}\n        }\n      }\n    },\n    RegisterPackageVersion: {\n      http: {\n        method: 'PUT',\n        requestUri: '/packages/{PackageId}/versions/{PackageVersion}/patch/{PatchVersion}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'PackageId',\n          'PackageVersion',\n          'PatchVersion'\n        ],\n        members: {\n          MarkLatest: {\n            type: 'boolean'\n          },\n          OwnerAccount: {},\n          PackageId: {\n            location: 'uri',\n            locationName: 'PackageId'\n          },\n          PackageVersion: {\n            location: 'uri',\n            locationName: 'PackageVersion'\n          },\n          PatchVersion: {\n            location: 'uri',\n            locationName: 'PatchVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    RemoveApplicationInstance: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/application-instances/{ApplicationInstanceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ApplicationInstanceId'\n        ],\n        members: {\n          ApplicationInstanceId: {\n            location: 'uri',\n            locationName: 'ApplicationInstanceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    SignalApplicationInstanceNodeInstances: {\n      http: {\n        method: 'PUT',\n        requestUri: '/application-instances/{ApplicationInstanceId}/node-signals',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ApplicationInstanceId',\n          'NodeSignals'\n        ],\n        members: {\n          ApplicationInstanceId: {\n            location: 'uri',\n            locationName: 'ApplicationInstanceId'\n          },\n          NodeSignals: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'NodeInstanceId',\n                'Signal'\n              ],\n              members: {\n                NodeInstanceId: {},\n                Signal: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ApplicationInstanceId'\n        ],\n        members: {\n          ApplicationInstanceId: {}\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          Tags: {\n            shape: 'Sb'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateDeviceMetadata: {\n      http: {\n        method: 'PUT',\n        requestUri: '/devices/{DeviceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'DeviceId'\n        ],\n        members: {\n          Description: {},\n          DeviceId: {\n            location: 'uri',\n            locationName: 'DeviceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DeviceId: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'structure',\n      members: {\n        PayloadData: {}\n      },\n      union: true\n    },\n    S7: {\n      type: 'structure',\n      members: {\n        PayloadData: {}\n      },\n      union: true\n    },\n    Sb: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Ss: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ResourceType',\n          'Tags'\n        ],\n        members: {\n          ResourceType: {},\n          Tags: {\n            shape: 'Sb'\n          }\n        }\n      }\n    },\n    Sy: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'string',\n        sensitive: true\n      }\n    },\n    S17: {\n      type: 'structure',\n      required: [\n        'BinaryPrefixLocation',\n        'Bucket',\n        'GeneratedPrefixLocation',\n        'ManifestPrefixLocation',\n        'RepoPrefixLocation'\n      ],\n      members: {\n        BinaryPrefixLocation: {},\n        Bucket: {},\n        GeneratedPrefixLocation: {},\n        ManifestPrefixLocation: {},\n        RepoPrefixLocation: {}\n      }\n    },\n    S1c: {\n      type: 'structure',\n      members: {\n        PackageVersionInputConfig: {\n          type: 'structure',\n          required: [\n            'S3Location'\n          ],\n          members: {\n            S3Location: {\n              type: 'structure',\n              required: [\n                'BucketName',\n                'ObjectKey'\n              ],\n              members: {\n                BucketName: {},\n                ObjectKey: {},\n                Region: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    S1j: {\n      type: 'structure',\n      members: {\n        PackageVersionOutputConfig: {\n          type: 'structure',\n          required: [\n            'PackageName',\n            'PackageVersion'\n          ],\n          members: {\n            MarkLatest: {\n              type: 'boolean'\n            },\n            PackageName: {},\n            PackageVersion: {}\n          }\n        }\n      }\n    },\n    S21: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'DesiredState',\n          'DeviceReportedStatus',\n          'DeviceReportedTime',\n          'RuntimeContextName'\n        ],\n        members: {\n          DesiredState: {},\n          DeviceReportedStatus: {},\n          DeviceReportedTime: {\n            type: 'timestamp'\n          },\n          RuntimeContextName: {}\n        }\n      }\n    },\n    S2j: {\n      type: 'structure',\n      members: {\n        ConnectionStatus: {},\n        HwAddress: {},\n        IpAddress: {}\n      }\n    },\n    S2u: {\n      type: 'structure',\n      members: {\n        ImageVersion: {},\n        JobType: {},\n        Status: {}\n      }\n    },\n    S2y: {\n      type: 'structure',\n      members: {\n        Ethernet0: {\n          shape: 'S2z'\n        },\n        Ethernet1: {\n          shape: 'S2z'\n        },\n        Ntp: {\n          type: 'structure',\n          required: [\n            'NtpServers'\n          ],\n          members: {\n            NtpServers: {\n              type: 'list',\n              member: {}\n            }\n          }\n        }\n      }\n    },\n    S2z: {\n      type: 'structure',\n      required: [\n        'ConnectionType'\n      ],\n      members: {\n        ConnectionType: {},\n        StaticIpConnectionInfo: {\n          type: 'structure',\n          required: [\n            'DefaultGateway',\n            'Dns',\n            'IpAddress',\n            'Mask'\n          ],\n          members: {\n            DefaultGateway: {},\n            Dns: {\n              type: 'list',\n              member: {}\n            },\n            IpAddress: {},\n            Mask: {}\n          }\n        }\n      }\n    },\n    S3z: {\n      type: 'list',\n      member: {}\n    }\n  }\n}"]}