{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/ebs-2019-11-02.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","uid","operations","CompleteSnapshot","http","requestUri","responseCode","input","type","required","members","SnapshotId","location","locationName","ChangedBlocksCount","Checksum","ChecksumAlgorithm","ChecksumAggregationMethod","output","Status","GetSnapshotBlock","method","BlockIndex","BlockToken","DataLength","BlockData","shape","payload","ListChangedBlocks","FirstSnapshotId","SecondSnapshotId","NextToken","MaxResults","StartingBlockIndex","ChangedBlocks","member","FirstBlockToken","SecondBlockToken","sensitive","ExpiryTime","VolumeSize","BlockSize","ListSnapshotBlocks","Blocks","PutSnapshotBlock","Progress","authtype","StartSnapshot","ParentSnapshotId","Tags","Description","ClientToken","idempotencyToken","Encrypted","KmsKeyArn","Timeout","OwnerId","StartTime","SseType","shapes","Se","streaming","Sw","Key","Value","S13"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,KAFR;AAGRC,UAAAA,WAAW,EAAE,KAHL;AAIRC,UAAAA,QAAQ,EAAE,WAJF;AAKRC,UAAAA,mBAAmB,EAAE,YALb;AAMRC,UAAAA,eAAe,EAAE,4BANT;AAORC,UAAAA,SAAS,EAAE,KAPH;AAQRC,UAAAA,gBAAgB,EAAE,IARV;AASRC,UAAAA,GAAG,EAAE;AATG,SAFG;AAabC,QAAAA,UAAU,EAAE;AACVC,UAAAA,gBAAgB,EAAE;AAChBC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,oCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADU;AAKhBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,EAER,oBAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AACVC,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ,iBADL;AAKPC,gBAAAA,kBAAkB,EAAE;AAClBF,kBAAAA,QAAQ,EAAE,QADQ;AAElBC,kBAAAA,YAAY,EAAE,0BAFI;AAGlBL,kBAAAA,IAAI,EAAE;AAHY,iBALb;AAUPO,gBAAAA,QAAQ,EAAE;AACRH,kBAAAA,QAAQ,EAAE,QADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBAVH;AAcPG,gBAAAA,iBAAiB,EAAE;AACjBJ,kBAAAA,QAAQ,EAAE,QADO;AAEjBC,kBAAAA,YAAY,EAAE;AAFG,iBAdZ;AAkBPI,gBAAAA,yBAAyB,EAAE;AACzBL,kBAAAA,QAAQ,EAAE,QADe;AAEzBC,kBAAAA,YAAY,EAAE;AAFW;AAlBpB;AANJ,aALS;AAmChBK,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPS,gBAAAA,MAAM,EAAE;AADD;AAFH;AAnCQ,WADR;AA2CVC,UAAAA,gBAAgB,EAAE;AAChBhB,YAAAA,IAAI,EAAE;AACJiB,cAAAA,MAAM,EAAE,KADJ;AAEJhB,cAAAA,UAAU,EAAE;AAFR,aADU;AAKhBE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,EAER,YAFQ,EAGR,YAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AACVC,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ,iBADL;AAKPS,gBAAAA,UAAU,EAAE;AACVV,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUPe,gBAAAA,UAAU,EAAE;AACVX,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ;AAVL;AAPJ,aALS;AA4BhBK,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPc,gBAAAA,UAAU,EAAE;AACVZ,kBAAAA,QAAQ,EAAE,QADA;AAEVC,kBAAAA,YAAY,EAAE,mBAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBADL;AAMPiB,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,KAAK,EAAE;AADE,iBANJ;AASPX,gBAAAA,QAAQ,EAAE;AACRH,kBAAAA,QAAQ,EAAE,QADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBATH;AAaPG,gBAAAA,iBAAiB,EAAE;AACjBJ,kBAAAA,QAAQ,EAAE,QADO;AAEjBC,kBAAAA,YAAY,EAAE;AAFG;AAbZ,eAFH;AAoBNc,cAAAA,OAAO,EAAE;AApBH;AA5BQ,WA3CR;AA8FVC,UAAAA,iBAAiB,EAAE;AACjBxB,YAAAA,IAAI,EAAE;AACJiB,cAAAA,MAAM,EAAE,KADJ;AAEJhB,cAAAA,UAAU,EAAE;AAFR,aADW;AAKjBE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,kBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmB,gBAAAA,eAAe,EAAE;AACfjB,kBAAAA,QAAQ,EAAE,aADK;AAEfC,kBAAAA,YAAY,EAAE;AAFC,iBADV;AAKPiB,gBAAAA,gBAAgB,EAAE;AAChBlB,kBAAAA,QAAQ,EAAE,KADM;AAEhBC,kBAAAA,YAAY,EAAE;AAFE,iBALX;AASPkB,gBAAAA,SAAS,EAAE;AACTnB,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBATJ;AAaPmB,gBAAAA,UAAU,EAAE;AACVpB,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBAbL;AAkBPyB,gBAAAA,kBAAkB,EAAE;AAClBrB,kBAAAA,QAAQ,EAAE,aADQ;AAElBC,kBAAAA,YAAY,EAAE,oBAFI;AAGlBL,kBAAAA,IAAI,EAAE;AAHY;AAlBb;AALJ,aALU;AAmCjBU,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,aAAa,EAAE;AACb1B,kBAAAA,IAAI,EAAE,MADO;AAEb2B,kBAAAA,MAAM,EAAE;AACN3B,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPY,sBAAAA,UAAU,EAAE;AACVd,wBAAAA,IAAI,EAAE;AADI,uBADL;AAIP4B,sBAAAA,eAAe,EAAE,EAJV;AAKPC,sBAAAA,gBAAgB,EAAE;AALX,qBAFH;AASNC,oBAAAA,SAAS,EAAE;AATL;AAFK,iBADR;AAePC,gBAAAA,UAAU,EAAE;AACV/B,kBAAAA,IAAI,EAAE;AADI,iBAfL;AAkBPgC,gBAAAA,UAAU,EAAE;AACVhC,kBAAAA,IAAI,EAAE;AADI,iBAlBL;AAqBPiC,gBAAAA,SAAS,EAAE;AACTjC,kBAAAA,IAAI,EAAE;AADG,iBArBJ;AAwBPuB,gBAAAA,SAAS,EAAE;AAxBJ;AAFH;AAnCS,WA9FT;AA+JVW,UAAAA,kBAAkB,EAAE;AAClBtC,YAAAA,IAAI,EAAE;AACJiB,cAAAA,MAAM,EAAE,KADJ;AAEJhB,cAAAA,UAAU,EAAE;AAFR,aADY;AAKlBE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AACVC,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ,iBADL;AAKPkB,gBAAAA,SAAS,EAAE;AACTnB,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBALJ;AASPmB,gBAAAA,UAAU,EAAE;AACVpB,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBATL;AAcPyB,gBAAAA,kBAAkB,EAAE;AAClBrB,kBAAAA,QAAQ,EAAE,aADQ;AAElBC,kBAAAA,YAAY,EAAE,oBAFI;AAGlBL,kBAAAA,IAAI,EAAE;AAHY;AAdb;AALJ,aALW;AA+BlBU,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiC,gBAAAA,MAAM,EAAE;AACNnC,kBAAAA,IAAI,EAAE,MADA;AAEN2B,kBAAAA,MAAM,EAAE;AACN3B,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPY,sBAAAA,UAAU,EAAE;AACVd,wBAAAA,IAAI,EAAE;AADI,uBADL;AAIPe,sBAAAA,UAAU,EAAE;AAJL;AAFH,mBAFF;AAWNe,kBAAAA,SAAS,EAAE;AAXL,iBADD;AAcPC,gBAAAA,UAAU,EAAE;AACV/B,kBAAAA,IAAI,EAAE;AADI,iBAdL;AAiBPgC,gBAAAA,UAAU,EAAE;AACVhC,kBAAAA,IAAI,EAAE;AADI,iBAjBL;AAoBPiC,gBAAAA,SAAS,EAAE;AACTjC,kBAAAA,IAAI,EAAE;AADG,iBApBJ;AAuBPuB,gBAAAA,SAAS,EAAE;AAvBJ;AAFH;AA/BU,WA/JV;AA2NVa,UAAAA,gBAAgB,EAAE;AAChBxC,YAAAA,IAAI,EAAE;AACJiB,cAAAA,MAAM,EAAE,KADJ;AAEJhB,cAAAA,UAAU,EAAE,6CAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADU;AAMhBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,EAER,YAFQ,EAGR,WAHQ,EAIR,YAJQ,EAKR,UALQ,EAMR,mBANQ,CAFL;AAULC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,UAAU,EAAE;AACVC,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ,iBADL;AAKPS,gBAAAA,UAAU,EAAE;AACVV,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUPiB,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,KAAK,EAAE;AADE,iBAVJ;AAaPF,gBAAAA,UAAU,EAAE;AACVZ,kBAAAA,QAAQ,EAAE,QADA;AAEVC,kBAAAA,YAAY,EAAE,mBAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBAbL;AAkBPqC,gBAAAA,QAAQ,EAAE;AACRjC,kBAAAA,QAAQ,EAAE,QADF;AAERC,kBAAAA,YAAY,EAAE,gBAFN;AAGRL,kBAAAA,IAAI,EAAE;AAHE,iBAlBH;AAuBPO,gBAAAA,QAAQ,EAAE;AACRH,kBAAAA,QAAQ,EAAE,QADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBAvBH;AA2BPG,gBAAAA,iBAAiB,EAAE;AACjBJ,kBAAAA,QAAQ,EAAE,QADO;AAEjBC,kBAAAA,YAAY,EAAE;AAFG;AA3BZ,eAVJ;AA0CLc,cAAAA,OAAO,EAAE;AA1CJ,aANS;AAkDhBT,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPK,gBAAAA,QAAQ,EAAE;AACRH,kBAAAA,QAAQ,EAAE,QADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBADH;AAKPG,gBAAAA,iBAAiB,EAAE;AACjBJ,kBAAAA,QAAQ,EAAE,QADO;AAEjBC,kBAAAA,YAAY,EAAE;AAFG;AALZ;AAFH,aAlDQ;AA+DhBiC,YAAAA,QAAQ,EAAE;AA/DM,WA3NR;AA4RVC,UAAAA,aAAa,EAAE;AACb3C,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,YADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADO;AAKbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP8B,gBAAAA,UAAU,EAAE;AACVhC,kBAAAA,IAAI,EAAE;AADI,iBADL;AAIPwC,gBAAAA,gBAAgB,EAAE,EAJX;AAKPC,gBAAAA,IAAI,EAAE;AACJvB,kBAAAA,KAAK,EAAE;AADH,iBALC;AAQPwB,gBAAAA,WAAW,EAAE,EARN;AASPC,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBATN;AAYPC,gBAAAA,SAAS,EAAE;AACT7C,kBAAAA,IAAI,EAAE;AADG,iBAZJ;AAeP8C,gBAAAA,SAAS,EAAE;AACT5B,kBAAAA,KAAK,EAAE;AADE,iBAfJ;AAkBP6B,gBAAAA,OAAO,EAAE;AACP/C,kBAAAA,IAAI,EAAE;AADC;AAlBF;AALJ,aALM;AAiCbU,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPwC,gBAAAA,WAAW,EAAE,EADN;AAEPvC,gBAAAA,UAAU,EAAE,EAFL;AAGP6C,gBAAAA,OAAO,EAAE,EAHF;AAIPrC,gBAAAA,MAAM,EAAE,EAJD;AAKPsC,gBAAAA,SAAS,EAAE;AACTjD,kBAAAA,IAAI,EAAE;AADG,iBALJ;AAQPgC,gBAAAA,UAAU,EAAE;AACVhC,kBAAAA,IAAI,EAAE;AADI,iBARL;AAWPiC,gBAAAA,SAAS,EAAE;AACTjC,kBAAAA,IAAI,EAAE;AADG,iBAXJ;AAcPyC,gBAAAA,IAAI,EAAE;AACJvB,kBAAAA,KAAK,EAAE;AADH,iBAdC;AAiBPsB,gBAAAA,gBAAgB,EAAE,EAjBX;AAkBPM,gBAAAA,SAAS,EAAE;AACT5B,kBAAAA,KAAK,EAAE;AADE,iBAlBJ;AAqBPgC,gBAAAA,OAAO,EAAE;AArBF;AAFH;AAjCK;AA5RL,SAbC;AAsWbC,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACFpD,YAAAA,IAAI,EAAE,MADJ;AAEF8B,YAAAA,SAAS,EAAE,IAFT;AAGFuB,YAAAA,SAAS,EAAE;AAHT,WADE;AAMNC,UAAAA,EAAE,EAAE;AACFtD,YAAAA,IAAI,EAAE,MADJ;AAEF2B,YAAAA,MAAM,EAAE;AACN3B,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,GAAG,EAAE,EADE;AAEPC,gBAAAA,KAAK,EAAE;AAFA;AAFH;AAFN,WANE;AAgBNC,UAAAA,GAAG,EAAE;AACHzD,YAAAA,IAAI,EAAE,QADH;AAEH8B,YAAAA,SAAS,EAAE;AAFR;AAhBC;AAtWK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2019-11-02',\n    endpointPrefix: 'ebs',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'Amazon EBS',\n    serviceFullName: 'Amazon Elastic Block Store',\n    serviceId: 'EBS',\n    signatureVersion: 'v4',\n    uid: 'ebs-2019-11-02'\n  },\n  operations: {\n    CompleteSnapshot: {\n      http: {\n        requestUri: '/snapshots/completion/{snapshotId}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'SnapshotId',\n          'ChangedBlocksCount'\n        ],\n        members: {\n          SnapshotId: {\n            location: 'uri',\n            locationName: 'snapshotId'\n          },\n          ChangedBlocksCount: {\n            location: 'header',\n            locationName: 'x-amz-ChangedBlocksCount',\n            type: 'integer'\n          },\n          Checksum: {\n            location: 'header',\n            locationName: 'x-amz-Checksum'\n          },\n          ChecksumAlgorithm: {\n            location: 'header',\n            locationName: 'x-amz-Checksum-Algorithm'\n          },\n          ChecksumAggregationMethod: {\n            location: 'header',\n            locationName: 'x-amz-Checksum-Aggregation-Method'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Status: {}\n        }\n      }\n    },\n    GetSnapshotBlock: {\n      http: {\n        method: 'GET',\n        requestUri: '/snapshots/{snapshotId}/blocks/{blockIndex}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'SnapshotId',\n          'BlockIndex',\n          'BlockToken'\n        ],\n        members: {\n          SnapshotId: {\n            location: 'uri',\n            locationName: 'snapshotId'\n          },\n          BlockIndex: {\n            location: 'uri',\n            locationName: 'blockIndex',\n            type: 'integer'\n          },\n          BlockToken: {\n            location: 'querystring',\n            locationName: 'blockToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DataLength: {\n            location: 'header',\n            locationName: 'x-amz-Data-Length',\n            type: 'integer'\n          },\n          BlockData: {\n            shape: 'Se'\n          },\n          Checksum: {\n            location: 'header',\n            locationName: 'x-amz-Checksum'\n          },\n          ChecksumAlgorithm: {\n            location: 'header',\n            locationName: 'x-amz-Checksum-Algorithm'\n          }\n        },\n        payload: 'BlockData'\n      }\n    },\n    ListChangedBlocks: {\n      http: {\n        method: 'GET',\n        requestUri: '/snapshots/{secondSnapshotId}/changedblocks'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'SecondSnapshotId'\n        ],\n        members: {\n          FirstSnapshotId: {\n            location: 'querystring',\n            locationName: 'firstSnapshotId'\n          },\n          SecondSnapshotId: {\n            location: 'uri',\n            locationName: 'secondSnapshotId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'pageToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          StartingBlockIndex: {\n            location: 'querystring',\n            locationName: 'startingBlockIndex',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ChangedBlocks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                BlockIndex: {\n                  type: 'integer'\n                },\n                FirstBlockToken: {},\n                SecondBlockToken: {}\n              },\n              sensitive: true\n            }\n          },\n          ExpiryTime: {\n            type: 'timestamp'\n          },\n          VolumeSize: {\n            type: 'long'\n          },\n          BlockSize: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListSnapshotBlocks: {\n      http: {\n        method: 'GET',\n        requestUri: '/snapshots/{snapshotId}/blocks'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'SnapshotId'\n        ],\n        members: {\n          SnapshotId: {\n            location: 'uri',\n            locationName: 'snapshotId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'pageToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          StartingBlockIndex: {\n            location: 'querystring',\n            locationName: 'startingBlockIndex',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Blocks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                BlockIndex: {\n                  type: 'integer'\n                },\n                BlockToken: {}\n              }\n            },\n            sensitive: true\n          },\n          ExpiryTime: {\n            type: 'timestamp'\n          },\n          VolumeSize: {\n            type: 'long'\n          },\n          BlockSize: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    PutSnapshotBlock: {\n      http: {\n        method: 'PUT',\n        requestUri: '/snapshots/{snapshotId}/blocks/{blockIndex}',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'SnapshotId',\n          'BlockIndex',\n          'BlockData',\n          'DataLength',\n          'Checksum',\n          'ChecksumAlgorithm'\n        ],\n        members: {\n          SnapshotId: {\n            location: 'uri',\n            locationName: 'snapshotId'\n          },\n          BlockIndex: {\n            location: 'uri',\n            locationName: 'blockIndex',\n            type: 'integer'\n          },\n          BlockData: {\n            shape: 'Se'\n          },\n          DataLength: {\n            location: 'header',\n            locationName: 'x-amz-Data-Length',\n            type: 'integer'\n          },\n          Progress: {\n            location: 'header',\n            locationName: 'x-amz-Progress',\n            type: 'integer'\n          },\n          Checksum: {\n            location: 'header',\n            locationName: 'x-amz-Checksum'\n          },\n          ChecksumAlgorithm: {\n            location: 'header',\n            locationName: 'x-amz-Checksum-Algorithm'\n          }\n        },\n        payload: 'BlockData'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Checksum: {\n            location: 'header',\n            locationName: 'x-amz-Checksum'\n          },\n          ChecksumAlgorithm: {\n            location: 'header',\n            locationName: 'x-amz-Checksum-Algorithm'\n          }\n        }\n      },\n      authtype: 'v4-unsigned-body'\n    },\n    StartSnapshot: {\n      http: {\n        requestUri: '/snapshots',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'VolumeSize'\n        ],\n        members: {\n          VolumeSize: {\n            type: 'long'\n          },\n          ParentSnapshotId: {},\n          Tags: {\n            shape: 'Sw'\n          },\n          Description: {},\n          ClientToken: {\n            idempotencyToken: true\n          },\n          Encrypted: {\n            type: 'boolean'\n          },\n          KmsKeyArn: {\n            shape: 'S13'\n          },\n          Timeout: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Description: {},\n          SnapshotId: {},\n          OwnerId: {},\n          Status: {},\n          StartTime: {\n            type: 'timestamp'\n          },\n          VolumeSize: {\n            type: 'long'\n          },\n          BlockSize: {\n            type: 'integer'\n          },\n          Tags: {\n            shape: 'Sw'\n          },\n          ParentSnapshotId: {},\n          KmsKeyArn: {\n            shape: 'S13'\n          },\n          SseType: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    Se: {\n      type: 'blob',\n      sensitive: true,\n      streaming: true\n    },\n    Sw: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    S13: {\n      type: 'string',\n      sensitive: true\n    }\n  }\n}"]}