{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/amplify-2017-07-25.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateApp","http","requestUri","input","type","required","members","name","description","repository","platform","iamServiceRoleArn","oauthToken","shape","accessToken","environmentVariables","enableBranchAutoBuild","enableBranchAutoDeletion","enableBasicAuth","basicAuthCredentials","customRules","tags","buildSpec","customHeaders","enableAutoBranchCreation","autoBranchCreationPatterns","autoBranchCreationConfig","output","app","CreateBackendEnvironment","appId","location","locationName","environmentName","stackName","deploymentArtifacts","backendEnvironment","CreateBranch","branchName","stage","framework","enableNotification","enableAutoBuild","enablePerformanceMode","ttl","displayName","enablePullRequestPreview","pullRequestEnvironmentName","backendEnvironmentArn","backend","branch","CreateDeployment","fileMap","key","value","jobId","fileUploadUrls","zipUploadUrl","CreateDomainAssociation","domainName","enableAutoSubDomain","subDomainSettings","autoSubDomainCreationPatterns","autoSubDomainIAMRole","certificateSettings","domainAssociation","CreateWebhook","webhook","DeleteApp","method","DeleteBackendEnvironment","DeleteBranch","DeleteDomainAssociation","DeleteJob","jobSummary","DeleteWebhook","webhookId","GenerateAccessLogs","startTime","endTime","logUrl","GetApp","GetArtifactUrl","artifactId","artifactUrl","GetBackendEnvironment","GetBranch","GetDomainAssociation","GetJob","job","summary","steps","member","stepName","status","artifactsUrl","testArtifactsUrl","testConfigUrl","screenshots","statusReason","context","GetWebhook","ListApps","nextToken","maxResults","apps","ListArtifacts","artifacts","artifactFileName","ListBackendEnvironments","backendEnvironments","ListBranches","branches","ListDomainAssociations","domainAssociations","ListJobs","jobSummaries","ListTagsForResource","resourceArn","ListWebhooks","webhooks","StartDeployment","sourceUrl","StartJob","jobType","jobReason","commitId","commitMessage","commitTime","StopJob","TagResource","UntagResource","tagKeys","UpdateApp","UpdateBranch","UpdateDomainAssociation","UpdateWebhook","shapes","S7","sensitive","S8","S9","Sf","Sg","source","target","condition","Sm","Sp","Ss","Su","S12","appArn","createTime","updateTime","defaultDomain","productionBranch","lastDeployTime","thumbnailUrl","repositoryCloneMethod","S1i","S1o","stackArn","S1r","branchArn","customDomains","activeJobId","totalNumberOfJobs","associatedResources","destinationBranch","sourceBranch","S2a","S2b","prefix","S2d","S2g","customCertificateArn","S2k","domainAssociationArn","domainStatus","updateStatus","certificateVerificationDNSRecord","subDomains","subDomainSetting","verified","dnsRecord","certificate","S2x","webhookArn","webhookUrl","S3b","jobArn"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2017-07-25',\n    endpointPrefix: 'amplify',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    protocols: [\n      'rest-json'\n    ],\n    serviceAbbreviation: 'Amplify',\n    serviceFullName: 'AWS Amplify',\n    serviceId: 'Amplify',\n    signatureVersion: 'v4',\n    signingName: 'amplify',\n    uid: 'amplify-2017-07-25'\n  },\n  operations: {\n    CreateApp: {\n      http: {\n        requestUri: '/apps'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {},\n          description: {},\n          repository: {},\n          platform: {},\n          iamServiceRoleArn: {},\n          oauthToken: {\n            shape: 'S7'\n          },\n          accessToken: {\n            shape: 'S8'\n          },\n          environmentVariables: {\n            shape: 'S9'\n          },\n          enableBranchAutoBuild: {\n            type: 'boolean'\n          },\n          enableBranchAutoDeletion: {\n            type: 'boolean'\n          },\n          enableBasicAuth: {\n            type: 'boolean'\n          },\n          basicAuthCredentials: {\n            shape: 'Sf'\n          },\n          customRules: {\n            shape: 'Sg'\n          },\n          tags: {\n            shape: 'Sm'\n          },\n          buildSpec: {\n            shape: 'Sp'\n          },\n          customHeaders: {},\n          enableAutoBranchCreation: {\n            type: 'boolean'\n          },\n          autoBranchCreationPatterns: {\n            shape: 'Ss'\n          },\n          autoBranchCreationConfig: {\n            shape: 'Su'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'app'\n        ],\n        members: {\n          app: {\n            shape: 'S12'\n          }\n        }\n      }\n    },\n    CreateBackendEnvironment: {\n      http: {\n        requestUri: '/apps/{appId}/backendenvironments'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {},\n          stackName: {},\n          deploymentArtifacts: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'backendEnvironment'\n        ],\n        members: {\n          backendEnvironment: {\n            shape: 'S1i'\n          }\n        }\n      }\n    },\n    CreateBranch: {\n      http: {\n        requestUri: '/apps/{appId}/branches'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {},\n          description: {},\n          stage: {},\n          framework: {},\n          enableNotification: {\n            type: 'boolean'\n          },\n          enableAutoBuild: {\n            type: 'boolean'\n          },\n          environmentVariables: {\n            shape: 'S9'\n          },\n          basicAuthCredentials: {\n            shape: 'Sf'\n          },\n          enableBasicAuth: {\n            type: 'boolean'\n          },\n          enablePerformanceMode: {\n            type: 'boolean'\n          },\n          tags: {\n            shape: 'Sm'\n          },\n          buildSpec: {\n            shape: 'Sp'\n          },\n          ttl: {},\n          displayName: {},\n          enablePullRequestPreview: {\n            type: 'boolean'\n          },\n          pullRequestEnvironmentName: {},\n          backendEnvironmentArn: {},\n          backend: {\n            shape: 'S1o'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'branch'\n        ],\n        members: {\n          branch: {\n            shape: 'S1r'\n          }\n        }\n      }\n    },\n    CreateDeployment: {\n      http: {\n        requestUri: '/apps/{appId}/branches/{branchName}/deployments'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          },\n          fileMap: {\n            type: 'map',\n            key: {},\n            value: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'fileUploadUrls',\n          'zipUploadUrl'\n        ],\n        members: {\n          jobId: {},\n          fileUploadUrls: {\n            type: 'map',\n            key: {},\n            value: {}\n          },\n          zipUploadUrl: {}\n        }\n      }\n    },\n    CreateDomainAssociation: {\n      http: {\n        requestUri: '/apps/{appId}/domains'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'domainName',\n          'subDomainSettings'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          domainName: {},\n          enableAutoSubDomain: {\n            type: 'boolean'\n          },\n          subDomainSettings: {\n            shape: 'S2a'\n          },\n          autoSubDomainCreationPatterns: {\n            shape: 'S2d'\n          },\n          autoSubDomainIAMRole: {},\n          certificateSettings: {\n            shape: 'S2g'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'domainAssociation'\n        ],\n        members: {\n          domainAssociation: {\n            shape: 'S2k'\n          }\n        }\n      }\n    },\n    CreateWebhook: {\n      http: {\n        requestUri: '/apps/{appId}/webhooks'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {},\n          description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'webhook'\n        ],\n        members: {\n          webhook: {\n            shape: 'S2x'\n          }\n        }\n      }\n    },\n    DeleteApp: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/apps/{appId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'app'\n        ],\n        members: {\n          app: {\n            shape: 'S12'\n          }\n        }\n      }\n    },\n    DeleteBackendEnvironment: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/apps/{appId}/backendenvironments/{environmentName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'backendEnvironment'\n        ],\n        members: {\n          backendEnvironment: {\n            shape: 'S1i'\n          }\n        }\n      }\n    },\n    DeleteBranch: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/apps/{appId}/branches/{branchName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'branch'\n        ],\n        members: {\n          branch: {\n            shape: 'S1r'\n          }\n        }\n      }\n    },\n    DeleteDomainAssociation: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/apps/{appId}/domains/{domainName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'domainName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          domainName: {\n            location: 'uri',\n            locationName: 'domainName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'domainAssociation'\n        ],\n        members: {\n          domainAssociation: {\n            shape: 'S2k'\n          }\n        }\n      }\n    },\n    DeleteJob: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/apps/{appId}/branches/{branchName}/jobs/{jobId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName',\n          'jobId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          },\n          jobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobSummary'\n        ],\n        members: {\n          jobSummary: {\n            shape: 'S3b'\n          }\n        }\n      }\n    },\n    DeleteWebhook: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/webhooks/{webhookId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'webhookId'\n        ],\n        members: {\n          webhookId: {\n            location: 'uri',\n            locationName: 'webhookId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'webhook'\n        ],\n        members: {\n          webhook: {\n            shape: 'S2x'\n          }\n        }\n      }\n    },\n    GenerateAccessLogs: {\n      http: {\n        requestUri: '/apps/{appId}/accesslogs'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'domainName',\n          'appId'\n        ],\n        members: {\n          startTime: {\n            type: 'timestamp'\n          },\n          endTime: {\n            type: 'timestamp'\n          },\n          domainName: {},\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          logUrl: {}\n        }\n      }\n    },\n    GetApp: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'app'\n        ],\n        members: {\n          app: {\n            shape: 'S12'\n          }\n        }\n      }\n    },\n    GetArtifactUrl: {\n      http: {\n        method: 'GET',\n        requestUri: '/artifacts/{artifactId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'artifactId'\n        ],\n        members: {\n          artifactId: {\n            location: 'uri',\n            locationName: 'artifactId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'artifactId',\n          'artifactUrl'\n        ],\n        members: {\n          artifactId: {},\n          artifactUrl: {}\n        }\n      }\n    },\n    GetBackendEnvironment: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}/backendenvironments/{environmentName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'backendEnvironment'\n        ],\n        members: {\n          backendEnvironment: {\n            shape: 'S1i'\n          }\n        }\n      }\n    },\n    GetBranch: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}/branches/{branchName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'branch'\n        ],\n        members: {\n          branch: {\n            shape: 'S1r'\n          }\n        }\n      }\n    },\n    GetDomainAssociation: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}/domains/{domainName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'domainName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          domainName: {\n            location: 'uri',\n            locationName: 'domainName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'domainAssociation'\n        ],\n        members: {\n          domainAssociation: {\n            shape: 'S2k'\n          }\n        }\n      }\n    },\n    GetJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}/branches/{branchName}/jobs/{jobId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName',\n          'jobId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          },\n          jobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'job'\n        ],\n        members: {\n          job: {\n            type: 'structure',\n            required: [\n              'summary',\n              'steps'\n            ],\n            members: {\n              summary: {\n                shape: 'S3b'\n              },\n              steps: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'stepName',\n                    'startTime',\n                    'status',\n                    'endTime'\n                  ],\n                  members: {\n                    stepName: {},\n                    startTime: {\n                      type: 'timestamp'\n                    },\n                    status: {},\n                    endTime: {\n                      type: 'timestamp'\n                    },\n                    logUrl: {},\n                    artifactsUrl: {},\n                    testArtifactsUrl: {},\n                    testConfigUrl: {},\n                    screenshots: {\n                      type: 'map',\n                      key: {},\n                      value: {}\n                    },\n                    statusReason: {},\n                    context: {}\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    GetWebhook: {\n      http: {\n        method: 'GET',\n        requestUri: '/webhooks/{webhookId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'webhookId'\n        ],\n        members: {\n          webhookId: {\n            location: 'uri',\n            locationName: 'webhookId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'webhook'\n        ],\n        members: {\n          webhook: {\n            shape: 'S2x'\n          }\n        }\n      }\n    },\n    ListApps: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'apps'\n        ],\n        members: {\n          apps: {\n            type: 'list',\n            member: {\n              shape: 'S12'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListArtifacts: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}/branches/{branchName}/jobs/{jobId}/artifacts'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName',\n          'jobId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          },\n          jobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'artifacts'\n        ],\n        members: {\n          artifacts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'artifactFileName',\n                'artifactId'\n              ],\n              members: {\n                artifactFileName: {},\n                artifactId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListBackendEnvironments: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}/backendenvironments'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'querystring',\n            locationName: 'environmentName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'backendEnvironments'\n        ],\n        members: {\n          backendEnvironments: {\n            type: 'list',\n            member: {\n              shape: 'S1i'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListBranches: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}/branches'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'branches'\n        ],\n        members: {\n          branches: {\n            type: 'list',\n            member: {\n              shape: 'S1r'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDomainAssociations: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}/domains'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'domainAssociations'\n        ],\n        members: {\n          domainAssociations: {\n            type: 'list',\n            member: {\n              shape: 'S2k'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}/branches/{branchName}/jobs'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobSummaries'\n        ],\n        members: {\n          jobSummaries: {\n            type: 'list',\n            member: {\n              shape: 'S3b'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sm'\n          }\n        }\n      }\n    },\n    ListWebhooks: {\n      http: {\n        method: 'GET',\n        requestUri: '/apps/{appId}/webhooks'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'webhooks'\n        ],\n        members: {\n          webhooks: {\n            type: 'list',\n            member: {\n              shape: 'S2x'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    StartDeployment: {\n      http: {\n        requestUri: '/apps/{appId}/branches/{branchName}/deployments/start'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          },\n          jobId: {},\n          sourceUrl: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobSummary'\n        ],\n        members: {\n          jobSummary: {\n            shape: 'S3b'\n          }\n        }\n      }\n    },\n    StartJob: {\n      http: {\n        requestUri: '/apps/{appId}/branches/{branchName}/jobs'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName',\n          'jobType'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          },\n          jobId: {},\n          jobType: {},\n          jobReason: {},\n          commitId: {},\n          commitMessage: {},\n          commitTime: {\n            type: 'timestamp'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobSummary'\n        ],\n        members: {\n          jobSummary: {\n            shape: 'S3b'\n          }\n        }\n      }\n    },\n    StopJob: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/apps/{appId}/branches/{branchName}/jobs/{jobId}/stop'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName',\n          'jobId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          },\n          jobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobSummary'\n        ],\n        members: {\n          jobSummary: {\n            shape: 'S3b'\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateApp: {\n      http: {\n        requestUri: '/apps/{appId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          name: {},\n          description: {},\n          platform: {},\n          iamServiceRoleArn: {},\n          environmentVariables: {\n            shape: 'S9'\n          },\n          enableBranchAutoBuild: {\n            type: 'boolean'\n          },\n          enableBranchAutoDeletion: {\n            type: 'boolean'\n          },\n          enableBasicAuth: {\n            type: 'boolean'\n          },\n          basicAuthCredentials: {\n            shape: 'Sf'\n          },\n          customRules: {\n            shape: 'Sg'\n          },\n          buildSpec: {\n            shape: 'Sp'\n          },\n          customHeaders: {},\n          enableAutoBranchCreation: {\n            type: 'boolean'\n          },\n          autoBranchCreationPatterns: {\n            shape: 'Ss'\n          },\n          autoBranchCreationConfig: {\n            shape: 'Su'\n          },\n          repository: {},\n          oauthToken: {\n            shape: 'S7'\n          },\n          accessToken: {\n            shape: 'S8'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'app'\n        ],\n        members: {\n          app: {\n            shape: 'S12'\n          }\n        }\n      }\n    },\n    UpdateBranch: {\n      http: {\n        requestUri: '/apps/{appId}/branches/{branchName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'branchName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          branchName: {\n            location: 'uri',\n            locationName: 'branchName'\n          },\n          description: {},\n          framework: {},\n          stage: {},\n          enableNotification: {\n            type: 'boolean'\n          },\n          enableAutoBuild: {\n            type: 'boolean'\n          },\n          environmentVariables: {\n            shape: 'S9'\n          },\n          basicAuthCredentials: {\n            shape: 'Sf'\n          },\n          enableBasicAuth: {\n            type: 'boolean'\n          },\n          enablePerformanceMode: {\n            type: 'boolean'\n          },\n          buildSpec: {\n            shape: 'Sp'\n          },\n          ttl: {},\n          displayName: {},\n          enablePullRequestPreview: {\n            type: 'boolean'\n          },\n          pullRequestEnvironmentName: {},\n          backendEnvironmentArn: {},\n          backend: {\n            shape: 'S1o'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'branch'\n        ],\n        members: {\n          branch: {\n            shape: 'S1r'\n          }\n        }\n      }\n    },\n    UpdateDomainAssociation: {\n      http: {\n        requestUri: '/apps/{appId}/domains/{domainName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'domainName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          domainName: {\n            location: 'uri',\n            locationName: 'domainName'\n          },\n          enableAutoSubDomain: {\n            type: 'boolean'\n          },\n          subDomainSettings: {\n            shape: 'S2a'\n          },\n          autoSubDomainCreationPatterns: {\n            shape: 'S2d'\n          },\n          autoSubDomainIAMRole: {},\n          certificateSettings: {\n            shape: 'S2g'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'domainAssociation'\n        ],\n        members: {\n          domainAssociation: {\n            shape: 'S2k'\n          }\n        }\n      }\n    },\n    UpdateWebhook: {\n      http: {\n        requestUri: '/webhooks/{webhookId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'webhookId'\n        ],\n        members: {\n          webhookId: {\n            location: 'uri',\n            locationName: 'webhookId'\n          },\n          branchName: {},\n          description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'webhook'\n        ],\n        members: {\n          webhook: {\n            shape: 'S2x'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S7: {\n      type: 'string',\n      sensitive: true\n    },\n    S8: {\n      type: 'string',\n      sensitive: true\n    },\n    S9: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sf: {\n      type: 'string',\n      sensitive: true\n    },\n    Sg: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'source',\n          'target'\n        ],\n        members: {\n          source: {},\n          target: {},\n          status: {},\n          condition: {}\n        }\n      }\n    },\n    Sm: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sp: {\n      type: 'string',\n      sensitive: true\n    },\n    Ss: {\n      type: 'list',\n      member: {}\n    },\n    Su: {\n      type: 'structure',\n      members: {\n        stage: {},\n        framework: {},\n        enableAutoBuild: {\n          type: 'boolean'\n        },\n        environmentVariables: {\n          shape: 'S9'\n        },\n        basicAuthCredentials: {\n          shape: 'Sf'\n        },\n        enableBasicAuth: {\n          type: 'boolean'\n        },\n        enablePerformanceMode: {\n          type: 'boolean'\n        },\n        buildSpec: {\n          shape: 'Sp'\n        },\n        enablePullRequestPreview: {\n          type: 'boolean'\n        },\n        pullRequestEnvironmentName: {}\n      }\n    },\n    S12: {\n      type: 'structure',\n      required: [\n        'appId',\n        'appArn',\n        'name',\n        'description',\n        'repository',\n        'platform',\n        'createTime',\n        'updateTime',\n        'environmentVariables',\n        'defaultDomain',\n        'enableBranchAutoBuild',\n        'enableBasicAuth'\n      ],\n      members: {\n        appId: {},\n        appArn: {},\n        name: {},\n        tags: {\n          shape: 'Sm'\n        },\n        description: {},\n        repository: {},\n        platform: {},\n        createTime: {\n          type: 'timestamp'\n        },\n        updateTime: {\n          type: 'timestamp'\n        },\n        iamServiceRoleArn: {},\n        environmentVariables: {\n          shape: 'S9'\n        },\n        defaultDomain: {},\n        enableBranchAutoBuild: {\n          type: 'boolean'\n        },\n        enableBranchAutoDeletion: {\n          type: 'boolean'\n        },\n        enableBasicAuth: {\n          type: 'boolean'\n        },\n        basicAuthCredentials: {\n          shape: 'Sf'\n        },\n        customRules: {\n          shape: 'Sg'\n        },\n        productionBranch: {\n          type: 'structure',\n          members: {\n            lastDeployTime: {\n              type: 'timestamp'\n            },\n            status: {},\n            thumbnailUrl: {},\n            branchName: {}\n          }\n        },\n        buildSpec: {\n          shape: 'Sp'\n        },\n        customHeaders: {},\n        enableAutoBranchCreation: {\n          type: 'boolean'\n        },\n        autoBranchCreationPatterns: {\n          shape: 'Ss'\n        },\n        autoBranchCreationConfig: {\n          shape: 'Su'\n        },\n        repositoryCloneMethod: {}\n      }\n    },\n    S1i: {\n      type: 'structure',\n      required: [\n        'backendEnvironmentArn',\n        'environmentName',\n        'createTime',\n        'updateTime'\n      ],\n      members: {\n        backendEnvironmentArn: {},\n        environmentName: {},\n        stackName: {},\n        deploymentArtifacts: {},\n        createTime: {\n          type: 'timestamp'\n        },\n        updateTime: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S1o: {\n      type: 'structure',\n      members: {\n        stackArn: {}\n      }\n    },\n    S1r: {\n      type: 'structure',\n      required: [\n        'branchArn',\n        'branchName',\n        'description',\n        'stage',\n        'displayName',\n        'enableNotification',\n        'createTime',\n        'updateTime',\n        'environmentVariables',\n        'enableAutoBuild',\n        'customDomains',\n        'framework',\n        'activeJobId',\n        'totalNumberOfJobs',\n        'enableBasicAuth',\n        'ttl',\n        'enablePullRequestPreview'\n      ],\n      members: {\n        branchArn: {},\n        branchName: {},\n        description: {},\n        tags: {\n          shape: 'Sm'\n        },\n        stage: {},\n        displayName: {},\n        enableNotification: {\n          type: 'boolean'\n        },\n        createTime: {\n          type: 'timestamp'\n        },\n        updateTime: {\n          type: 'timestamp'\n        },\n        environmentVariables: {\n          shape: 'S9'\n        },\n        enableAutoBuild: {\n          type: 'boolean'\n        },\n        customDomains: {\n          type: 'list',\n          member: {}\n        },\n        framework: {},\n        activeJobId: {},\n        totalNumberOfJobs: {},\n        enableBasicAuth: {\n          type: 'boolean'\n        },\n        enablePerformanceMode: {\n          type: 'boolean'\n        },\n        thumbnailUrl: {},\n        basicAuthCredentials: {\n          shape: 'Sf'\n        },\n        buildSpec: {\n          shape: 'Sp'\n        },\n        ttl: {},\n        associatedResources: {\n          type: 'list',\n          member: {}\n        },\n        enablePullRequestPreview: {\n          type: 'boolean'\n        },\n        pullRequestEnvironmentName: {},\n        destinationBranch: {},\n        sourceBranch: {},\n        backendEnvironmentArn: {},\n        backend: {\n          shape: 'S1o'\n        }\n      }\n    },\n    S2a: {\n      type: 'list',\n      member: {\n        shape: 'S2b'\n      }\n    },\n    S2b: {\n      type: 'structure',\n      required: [\n        'prefix',\n        'branchName'\n      ],\n      members: {\n        prefix: {},\n        branchName: {}\n      }\n    },\n    S2d: {\n      type: 'list',\n      member: {}\n    },\n    S2g: {\n      type: 'structure',\n      required: [\n        'type'\n      ],\n      members: {\n        type: {},\n        customCertificateArn: {}\n      }\n    },\n    S2k: {\n      type: 'structure',\n      required: [\n        'domainAssociationArn',\n        'domainName',\n        'enableAutoSubDomain',\n        'domainStatus',\n        'statusReason',\n        'subDomains'\n      ],\n      members: {\n        domainAssociationArn: {},\n        domainName: {},\n        enableAutoSubDomain: {\n          type: 'boolean'\n        },\n        autoSubDomainCreationPatterns: {\n          shape: 'S2d'\n        },\n        autoSubDomainIAMRole: {},\n        domainStatus: {},\n        updateStatus: {},\n        statusReason: {},\n        certificateVerificationDNSRecord: {},\n        subDomains: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'subDomainSetting',\n              'verified',\n              'dnsRecord'\n            ],\n            members: {\n              subDomainSetting: {\n                shape: 'S2b'\n              },\n              verified: {\n                type: 'boolean'\n              },\n              dnsRecord: {}\n            }\n          }\n        },\n        certificate: {\n          type: 'structure',\n          required: [\n            'type'\n          ],\n          members: {\n            type: {},\n            customCertificateArn: {},\n            certificateVerificationDNSRecord: {}\n          }\n        }\n      }\n    },\n    S2x: {\n      type: 'structure',\n      required: [\n        'webhookArn',\n        'webhookId',\n        'webhookUrl',\n        'branchName',\n        'description',\n        'createTime',\n        'updateTime'\n      ],\n      members: {\n        webhookArn: {},\n        webhookId: {},\n        webhookUrl: {},\n        branchName: {},\n        description: {},\n        createTime: {\n          type: 'timestamp'\n        },\n        updateTime: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S3b: {\n      type: 'structure',\n      required: [\n        'jobArn',\n        'jobId',\n        'commitId',\n        'commitMessage',\n        'commitTime',\n        'startTime',\n        'status',\n        'jobType'\n      ],\n      members: {\n        jobArn: {},\n        jobId: {},\n        commitId: {},\n        commitMessage: {},\n        commitTime: {\n          type: 'timestamp'\n        },\n        startTime: {\n          type: 'timestamp'\n        },\n        status: {},\n        endTime: {\n          type: 'timestamp'\n        },\n        jobType: {}\n      }\n    }\n  }\n}"]}