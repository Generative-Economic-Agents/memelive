{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/networkmanager-2019-07-05.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","AcceptAttachment","http","requestUri","input","type","required","members","AttachmentId","location","locationName","output","Attachment","shape","AssociateConnectPeer","GlobalNetworkId","ConnectPeerId","DeviceId","LinkId","ConnectPeerAssociation","AssociateCustomerGateway","CustomerGatewayArn","CustomerGatewayAssociation","AssociateLink","LinkAssociation","AssociateTransitGatewayConnectPeer","TransitGatewayConnectPeerArn","TransitGatewayConnectPeerAssociation","CreateConnectAttachment","CoreNetworkId","EdgeLocation","TransportAttachmentId","Options","Tags","ClientToken","idempotencyToken","ConnectAttachment","CreateConnectPeer","ConnectAttachmentId","CoreNetworkAddress","PeerAddress","BgpOptions","PeerAsn","InsideCidrBlocks","SubnetArn","ConnectPeer","CreateConnection","ConnectedDeviceId","ConnectedLinkId","Description","Connection","CreateCoreNetwork","PolicyDocument","CoreNetwork","CreateDevice","AWSLocation","Type","Vendor","Model","SerialNumber","Location","SiteId","Device","CreateGlobalNetwork","GlobalNetwork","CreateLink","Bandwidth","Provider","Link","CreateSite","Site","CreateSiteToSiteVpnAttachment","VpnConnectionArn","SiteToSiteVpnAttachment","CreateTransitGatewayPeering","TransitGatewayArn","TransitGatewayPeering","CreateTransitGatewayRouteTableAttachment","PeeringId","TransitGatewayRouteTableArn","TransitGatewayRouteTableAttachment","CreateVpcAttachment","VpcArn","SubnetArns","VpcAttachment","DeleteAttachment","method","DeleteConnectPeer","DeleteConnection","ConnectionId","DeleteCoreNetwork","DeleteCoreNetworkPolicyVersion","PolicyVersionId","CoreNetworkPolicy","DeleteDevice","DeleteGlobalNetwork","DeleteLink","DeletePeering","Peering","DeleteResourcePolicy","ResourceArn","DeleteSite","DeregisterTransitGateway","TransitGatewayRegistration","DescribeGlobalNetworks","GlobalNetworkIds","member","MaxResults","NextToken","GlobalNetworks","DisassociateConnectPeer","DisassociateCustomerGateway","DisassociateLink","DisassociateTransitGatewayConnectPeer","ExecuteCoreNetworkChangeSet","GetConnectAttachment","GetConnectPeer","GetConnectPeerAssociations","ConnectPeerIds","ConnectPeerAssociations","GetConnections","ConnectionIds","Connections","GetCoreNetwork","GetCoreNetworkChangeEvents","CoreNetworkChangeEvents","Action","IdentifierPath","EventTime","Status","Values","SegmentName","Cidr","GetCoreNetworkChangeSet","CoreNetworkChanges","Identifier","PreviousValues","NewValues","GetCoreNetworkPolicy","Alias","GetCustomerGatewayAssociations","CustomerGatewayArns","CustomerGatewayAssociations","GetDevices","DeviceIds","Devices","GetLinkAssociations","LinkAssociations","GetLinks","LinkIds","Links","GetNetworkResourceCounts","ResourceType","NetworkResourceCounts","Count","GetNetworkResourceRelationships","RegisteredGatewayArn","AwsRegion","AccountId","Relationships","From","To","GetNetworkResources","NetworkResources","ResourceId","Definition","DefinitionTimestamp","Metadata","GetNetworkRoutes","RouteTableIdentifier","CoreNetworkSegmentEdge","ExactCidrMatches","LongestPrefixMatches","SubnetOfMatches","SupernetOfMatches","PrefixListIds","States","Types","DestinationFilters","key","value","RouteTableArn","RouteTableType","RouteTableTimestamp","NetworkRoutes","DestinationCidrBlock","Destinations","CoreNetworkAttachmentId","TransitGatewayAttachmentId","PrefixListId","State","GetNetworkTelemetry","NetworkTelemetry","Address","Health","Timestamp","GetResourcePolicy","jsonvalue","GetRouteAnalysis","RouteAnalysisId","RouteAnalysis","GetSiteToSiteVpnAttachment","GetSites","SiteIds","Sites","GetTransitGatewayConnectPeerAssociations","TransitGatewayConnectPeerArns","TransitGatewayConnectPeerAssociations","GetTransitGatewayPeering","GetTransitGatewayRegistrations","TransitGatewayArns","TransitGatewayRegistrations","GetTransitGatewayRouteTableAttachment","GetVpcAttachment","ListAttachments","AttachmentType","Attachments","ListConnectPeers","ConnectPeers","ConnectPeerState","CreatedAt","ListCoreNetworkPolicyVersions","CoreNetworkPolicyVersions","ChangeSetState","ListCoreNetworks","CoreNetworks","CoreNetworkArn","OwnerAccountId","ListOrganizationServiceAccessStatus","OrganizationStatus","ListPeerings","PeeringType","Peerings","ListTagsForResource","TagList","PutCoreNetworkPolicy","LatestVersionId","PutResourcePolicy","RegisterTransitGateway","RejectAttachment","RestoreCoreNetworkPolicyVersion","StartOrganizationServiceAccessUpdate","StartRouteAnalysis","Source","Destination","IncludeReturnPath","UseMiddleboxes","TagResource","UntagResource","TagKeys","UpdateConnection","UpdateCoreNetwork","UpdateDevice","UpdateGlobalNetwork","UpdateLink","UpdateNetworkResourceMetadata","UpdateSite","UpdateVpcAttachment","AddSubnetArns","RemoveSubnetArns","shapes","S4","AttachmentPolicyRuleNumber","ProposedSegmentChange","UpdatedAt","Se","Key","Value","Sq","Sv","Sz","LinkAssociationState","S14","S17","Protocol","S1b","S1g","S1j","Configuration","BgpConfigurations","CoreNetworkAsn","S1q","ConnectionArn","S1x","Segments","Name","EdgeLocations","SharedSegments","Edges","Asn","S21","S25","Zone","S26","Latitude","Longitude","sensitive","S29","DeviceArn","S2e","GlobalNetworkArn","S2i","UploadSpeed","DownloadSpeed","S2k","LinkArn","S2p","SiteArn","S2v","S2z","TransitGatewayPeeringAttachmentId","S30","S38","S3b","S3c","Ipv6Support","ApplianceModeSupport","S3f","S3q","PolicyErrors","ErrorCode","Message","Path","S4a","Code","S5j","DestinationIdentifier","S6d","S6g","S78","StartTimestamp","ForwardPath","ReturnPath","S7a","TransitGatewayAttachmentArn","IpAddress","S7c","CompletionStatus","ResultCode","ReasonCode","ReasonContext","Sequence","Resource","NameTag","IsMiddlebox","S8n","OrganizationId","OrganizationAwsServiceAccessStatus","SLRDeploymentStatus","AccountStatusList","S9d"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2019-07-05',\n    endpointPrefix: 'networkmanager',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'NetworkManager',\n    serviceFullName: 'AWS Network Manager',\n    serviceId: 'NetworkManager',\n    signatureVersion: 'v4',\n    signingName: 'networkmanager',\n    uid: 'networkmanager-2019-07-05'\n  },\n  operations: {\n    AcceptAttachment: {\n      http: {\n        requestUri: '/attachments/{attachmentId}/accept'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AttachmentId'\n        ],\n        members: {\n          AttachmentId: {\n            location: 'uri',\n            locationName: 'attachmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Attachment: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    AssociateConnectPeer: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/connect-peer-associations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'ConnectPeerId',\n          'DeviceId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          ConnectPeerId: {},\n          DeviceId: {},\n          LinkId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConnectPeerAssociation: {\n            shape: 'Sq'\n          }\n        }\n      }\n    },\n    AssociateCustomerGateway: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/customer-gateway-associations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CustomerGatewayArn',\n          'GlobalNetworkId',\n          'DeviceId'\n        ],\n        members: {\n          CustomerGatewayArn: {},\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          DeviceId: {},\n          LinkId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CustomerGatewayAssociation: {\n            shape: 'Sv'\n          }\n        }\n      }\n    },\n    AssociateLink: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/link-associations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'DeviceId',\n          'LinkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          DeviceId: {},\n          LinkId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LinkAssociation: {\n            shape: 'Sz'\n          }\n        }\n      }\n    },\n    AssociateTransitGatewayConnectPeer: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/transit-gateway-connect-peer-associations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'TransitGatewayConnectPeerArn',\n          'DeviceId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          TransitGatewayConnectPeerArn: {},\n          DeviceId: {},\n          LinkId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TransitGatewayConnectPeerAssociation: {\n            shape: 'S14'\n          }\n        }\n      }\n    },\n    CreateConnectAttachment: {\n      http: {\n        requestUri: '/connect-attachments'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId',\n          'EdgeLocation',\n          'TransportAttachmentId',\n          'Options'\n        ],\n        members: {\n          CoreNetworkId: {},\n          EdgeLocation: {},\n          TransportAttachmentId: {},\n          Options: {\n            shape: 'S17'\n          },\n          Tags: {\n            shape: 'Se'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConnectAttachment: {\n            shape: 'S1b'\n          }\n        }\n      }\n    },\n    CreateConnectPeer: {\n      http: {\n        requestUri: '/connect-peers'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectAttachmentId',\n          'PeerAddress'\n        ],\n        members: {\n          ConnectAttachmentId: {},\n          CoreNetworkAddress: {},\n          PeerAddress: {},\n          BgpOptions: {\n            type: 'structure',\n            members: {\n              PeerAsn: {\n                type: 'long'\n              }\n            }\n          },\n          InsideCidrBlocks: {\n            shape: 'S1g'\n          },\n          Tags: {\n            shape: 'Se'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          },\n          SubnetArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConnectPeer: {\n            shape: 'S1j'\n          }\n        }\n      }\n    },\n    CreateConnection: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/connections'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'DeviceId',\n          'ConnectedDeviceId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          DeviceId: {},\n          ConnectedDeviceId: {},\n          LinkId: {},\n          ConnectedLinkId: {},\n          Description: {},\n          Tags: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Connection: {\n            shape: 'S1q'\n          }\n        }\n      }\n    },\n    CreateCoreNetwork: {\n      http: {\n        requestUri: '/core-networks'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {},\n          Description: {},\n          Tags: {\n            shape: 'Se'\n          },\n          PolicyDocument: {},\n          ClientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetwork: {\n            shape: 'S1x'\n          }\n        }\n      }\n    },\n    CreateDevice: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/devices'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          AWSLocation: {\n            shape: 'S25'\n          },\n          Description: {},\n          Type: {},\n          Vendor: {},\n          Model: {},\n          SerialNumber: {},\n          Location: {\n            shape: 'S26'\n          },\n          SiteId: {},\n          Tags: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Device: {\n            shape: 'S29'\n          }\n        }\n      }\n    },\n    CreateGlobalNetwork: {\n      http: {\n        requestUri: '/global-networks'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Description: {},\n          Tags: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GlobalNetwork: {\n            shape: 'S2e'\n          }\n        }\n      }\n    },\n    CreateLink: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/links'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'Bandwidth',\n          'SiteId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          Description: {},\n          Type: {},\n          Bandwidth: {\n            shape: 'S2i'\n          },\n          Provider: {},\n          SiteId: {},\n          Tags: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Link: {\n            shape: 'S2k'\n          }\n        }\n      }\n    },\n    CreateSite: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/sites'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          Description: {},\n          Location: {\n            shape: 'S26'\n          },\n          Tags: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Site: {\n            shape: 'S2p'\n          }\n        }\n      }\n    },\n    CreateSiteToSiteVpnAttachment: {\n      http: {\n        requestUri: '/site-to-site-vpn-attachments'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId',\n          'VpnConnectionArn'\n        ],\n        members: {\n          CoreNetworkId: {},\n          VpnConnectionArn: {},\n          Tags: {\n            shape: 'Se'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SiteToSiteVpnAttachment: {\n            shape: 'S2v'\n          }\n        }\n      }\n    },\n    CreateTransitGatewayPeering: {\n      http: {\n        requestUri: '/transit-gateway-peerings'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId',\n          'TransitGatewayArn'\n        ],\n        members: {\n          CoreNetworkId: {},\n          TransitGatewayArn: {},\n          Tags: {\n            shape: 'Se'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TransitGatewayPeering: {\n            shape: 'S2z'\n          }\n        }\n      }\n    },\n    CreateTransitGatewayRouteTableAttachment: {\n      http: {\n        requestUri: '/transit-gateway-route-table-attachments'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'PeeringId',\n          'TransitGatewayRouteTableArn'\n        ],\n        members: {\n          PeeringId: {},\n          TransitGatewayRouteTableArn: {},\n          Tags: {\n            shape: 'Se'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TransitGatewayRouteTableAttachment: {\n            shape: 'S38'\n          }\n        }\n      }\n    },\n    CreateVpcAttachment: {\n      http: {\n        requestUri: '/vpc-attachments'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId',\n          'VpcArn',\n          'SubnetArns'\n        ],\n        members: {\n          CoreNetworkId: {},\n          VpcArn: {},\n          SubnetArns: {\n            shape: 'S3b'\n          },\n          Options: {\n            shape: 'S3c'\n          },\n          Tags: {\n            shape: 'Se'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          VpcAttachment: {\n            shape: 'S3f'\n          }\n        }\n      }\n    },\n    DeleteAttachment: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/attachments/{attachmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AttachmentId'\n        ],\n        members: {\n          AttachmentId: {\n            location: 'uri',\n            locationName: 'attachmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Attachment: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    DeleteConnectPeer: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/connect-peers/{connectPeerId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectPeerId'\n        ],\n        members: {\n          ConnectPeerId: {\n            location: 'uri',\n            locationName: 'connectPeerId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConnectPeer: {\n            shape: 'S1j'\n          }\n        }\n      }\n    },\n    DeleteConnection: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/global-networks/{globalNetworkId}/connections/{connectionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'ConnectionId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          ConnectionId: {\n            location: 'uri',\n            locationName: 'connectionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Connection: {\n            shape: 'S1q'\n          }\n        }\n      }\n    },\n    DeleteCoreNetwork: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/core-networks/{coreNetworkId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetwork: {\n            shape: 'S1x'\n          }\n        }\n      }\n    },\n    DeleteCoreNetworkPolicyVersion: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/core-networks/{coreNetworkId}/core-network-policy-versions/{policyVersionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId',\n          'PolicyVersionId'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          },\n          PolicyVersionId: {\n            location: 'uri',\n            locationName: 'policyVersionId',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetworkPolicy: {\n            shape: 'S3q'\n          }\n        }\n      }\n    },\n    DeleteDevice: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/global-networks/{globalNetworkId}/devices/{deviceId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'DeviceId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          DeviceId: {\n            location: 'uri',\n            locationName: 'deviceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Device: {\n            shape: 'S29'\n          }\n        }\n      }\n    },\n    DeleteGlobalNetwork: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/global-networks/{globalNetworkId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GlobalNetwork: {\n            shape: 'S2e'\n          }\n        }\n      }\n    },\n    DeleteLink: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/global-networks/{globalNetworkId}/links/{linkId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'LinkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          LinkId: {\n            location: 'uri',\n            locationName: 'linkId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Link: {\n            shape: 'S2k'\n          }\n        }\n      }\n    },\n    DeletePeering: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/peerings/{peeringId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'PeeringId'\n        ],\n        members: {\n          PeeringId: {\n            location: 'uri',\n            locationName: 'peeringId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Peering: {\n            shape: 'S30'\n          }\n        }\n      }\n    },\n    DeleteResourcePolicy: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/resource-policy/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteSite: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/global-networks/{globalNetworkId}/sites/{siteId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'SiteId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          SiteId: {\n            location: 'uri',\n            locationName: 'siteId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Site: {\n            shape: 'S2p'\n          }\n        }\n      }\n    },\n    DeregisterTransitGateway: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/global-networks/{globalNetworkId}/transit-gateway-registrations/{transitGatewayArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'TransitGatewayArn'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          TransitGatewayArn: {\n            location: 'uri',\n            locationName: 'transitGatewayArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TransitGatewayRegistration: {\n            shape: 'S4a'\n          }\n        }\n      }\n    },\n    DescribeGlobalNetworks: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          GlobalNetworkIds: {\n            location: 'querystring',\n            locationName: 'globalNetworkIds',\n            type: 'list',\n            member: {}\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GlobalNetworks: {\n            type: 'list',\n            member: {\n              shape: 'S2e'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DisassociateConnectPeer: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/global-networks/{globalNetworkId}/connect-peer-associations/{connectPeerId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'ConnectPeerId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          ConnectPeerId: {\n            location: 'uri',\n            locationName: 'connectPeerId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConnectPeerAssociation: {\n            shape: 'Sq'\n          }\n        }\n      }\n    },\n    DisassociateCustomerGateway: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/global-networks/{globalNetworkId}/customer-gateway-associations/{customerGatewayArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'CustomerGatewayArn'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          CustomerGatewayArn: {\n            location: 'uri',\n            locationName: 'customerGatewayArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CustomerGatewayAssociation: {\n            shape: 'Sv'\n          }\n        }\n      }\n    },\n    DisassociateLink: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/global-networks/{globalNetworkId}/link-associations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'DeviceId',\n          'LinkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          DeviceId: {\n            location: 'querystring',\n            locationName: 'deviceId'\n          },\n          LinkId: {\n            location: 'querystring',\n            locationName: 'linkId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LinkAssociation: {\n            shape: 'Sz'\n          }\n        }\n      }\n    },\n    DisassociateTransitGatewayConnectPeer: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/global-networks/{globalNetworkId}/transit-gateway-connect-peer-associations/{transitGatewayConnectPeerArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'TransitGatewayConnectPeerArn'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          TransitGatewayConnectPeerArn: {\n            location: 'uri',\n            locationName: 'transitGatewayConnectPeerArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TransitGatewayConnectPeerAssociation: {\n            shape: 'S14'\n          }\n        }\n      }\n    },\n    ExecuteCoreNetworkChangeSet: {\n      http: {\n        requestUri: '/core-networks/{coreNetworkId}/core-network-change-sets/{policyVersionId}/execute'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId',\n          'PolicyVersionId'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          },\n          PolicyVersionId: {\n            location: 'uri',\n            locationName: 'policyVersionId',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    GetConnectAttachment: {\n      http: {\n        method: 'GET',\n        requestUri: '/connect-attachments/{attachmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AttachmentId'\n        ],\n        members: {\n          AttachmentId: {\n            location: 'uri',\n            locationName: 'attachmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConnectAttachment: {\n            shape: 'S1b'\n          }\n        }\n      }\n    },\n    GetConnectPeer: {\n      http: {\n        method: 'GET',\n        requestUri: '/connect-peers/{connectPeerId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectPeerId'\n        ],\n        members: {\n          ConnectPeerId: {\n            location: 'uri',\n            locationName: 'connectPeerId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConnectPeer: {\n            shape: 'S1j'\n          }\n        }\n      }\n    },\n    GetConnectPeerAssociations: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/connect-peer-associations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          ConnectPeerIds: {\n            location: 'querystring',\n            locationName: 'connectPeerIds',\n            type: 'list',\n            member: {}\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConnectPeerAssociations: {\n            type: 'list',\n            member: {\n              shape: 'Sq'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetConnections: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/connections'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          ConnectionIds: {\n            location: 'querystring',\n            locationName: 'connectionIds',\n            type: 'list',\n            member: {}\n          },\n          DeviceId: {\n            location: 'querystring',\n            locationName: 'deviceId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Connections: {\n            type: 'list',\n            member: {\n              shape: 'S1q'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetCoreNetwork: {\n      http: {\n        method: 'GET',\n        requestUri: '/core-networks/{coreNetworkId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetwork: {\n            shape: 'S1x'\n          }\n        }\n      }\n    },\n    GetCoreNetworkChangeEvents: {\n      http: {\n        method: 'GET',\n        requestUri: '/core-networks/{coreNetworkId}/core-network-change-events/{policyVersionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId',\n          'PolicyVersionId'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          },\n          PolicyVersionId: {\n            location: 'uri',\n            locationName: 'policyVersionId',\n            type: 'integer'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetworkChangeEvents: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Type: {},\n                Action: {},\n                IdentifierPath: {},\n                EventTime: {\n                  type: 'timestamp'\n                },\n                Status: {},\n                Values: {\n                  type: 'structure',\n                  members: {\n                    EdgeLocation: {},\n                    SegmentName: {},\n                    AttachmentId: {},\n                    Cidr: {}\n                  }\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetCoreNetworkChangeSet: {\n      http: {\n        method: 'GET',\n        requestUri: '/core-networks/{coreNetworkId}/core-network-change-sets/{policyVersionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId',\n          'PolicyVersionId'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          },\n          PolicyVersionId: {\n            location: 'uri',\n            locationName: 'policyVersionId',\n            type: 'integer'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetworkChanges: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Type: {},\n                Action: {},\n                Identifier: {},\n                PreviousValues: {\n                  shape: 'S5j'\n                },\n                NewValues: {\n                  shape: 'S5j'\n                },\n                IdentifierPath: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetCoreNetworkPolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/core-networks/{coreNetworkId}/core-network-policy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          },\n          PolicyVersionId: {\n            location: 'querystring',\n            locationName: 'policyVersionId',\n            type: 'integer'\n          },\n          Alias: {\n            location: 'querystring',\n            locationName: 'alias'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetworkPolicy: {\n            shape: 'S3q'\n          }\n        }\n      }\n    },\n    GetCustomerGatewayAssociations: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/customer-gateway-associations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          CustomerGatewayArns: {\n            location: 'querystring',\n            locationName: 'customerGatewayArns',\n            type: 'list',\n            member: {}\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CustomerGatewayAssociations: {\n            type: 'list',\n            member: {\n              shape: 'Sv'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetDevices: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/devices'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          DeviceIds: {\n            location: 'querystring',\n            locationName: 'deviceIds',\n            type: 'list',\n            member: {}\n          },\n          SiteId: {\n            location: 'querystring',\n            locationName: 'siteId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Devices: {\n            type: 'list',\n            member: {\n              shape: 'S29'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetLinkAssociations: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/link-associations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          DeviceId: {\n            location: 'querystring',\n            locationName: 'deviceId'\n          },\n          LinkId: {\n            location: 'querystring',\n            locationName: 'linkId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          LinkAssociations: {\n            type: 'list',\n            member: {\n              shape: 'Sz'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetLinks: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/links'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          LinkIds: {\n            location: 'querystring',\n            locationName: 'linkIds',\n            type: 'list',\n            member: {}\n          },\n          SiteId: {\n            location: 'querystring',\n            locationName: 'siteId'\n          },\n          Type: {\n            location: 'querystring',\n            locationName: 'type'\n          },\n          Provider: {\n            location: 'querystring',\n            locationName: 'provider'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Links: {\n            type: 'list',\n            member: {\n              shape: 'S2k'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetNetworkResourceCounts: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/network-resource-count'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          ResourceType: {\n            location: 'querystring',\n            locationName: 'resourceType'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NetworkResourceCounts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ResourceType: {},\n                Count: {\n                  type: 'integer'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetNetworkResourceRelationships: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/network-resource-relationships'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          CoreNetworkId: {\n            location: 'querystring',\n            locationName: 'coreNetworkId'\n          },\n          RegisteredGatewayArn: {\n            location: 'querystring',\n            locationName: 'registeredGatewayArn'\n          },\n          AwsRegion: {\n            location: 'querystring',\n            locationName: 'awsRegion'\n          },\n          AccountId: {\n            location: 'querystring',\n            locationName: 'accountId'\n          },\n          ResourceType: {\n            location: 'querystring',\n            locationName: 'resourceType'\n          },\n          ResourceArn: {\n            location: 'querystring',\n            locationName: 'resourceArn'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Relationships: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                From: {},\n                To: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetNetworkResources: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/network-resources'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          CoreNetworkId: {\n            location: 'querystring',\n            locationName: 'coreNetworkId'\n          },\n          RegisteredGatewayArn: {\n            location: 'querystring',\n            locationName: 'registeredGatewayArn'\n          },\n          AwsRegion: {\n            location: 'querystring',\n            locationName: 'awsRegion'\n          },\n          AccountId: {\n            location: 'querystring',\n            locationName: 'accountId'\n          },\n          ResourceType: {\n            location: 'querystring',\n            locationName: 'resourceType'\n          },\n          ResourceArn: {\n            location: 'querystring',\n            locationName: 'resourceArn'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NetworkResources: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RegisteredGatewayArn: {},\n                CoreNetworkId: {},\n                AwsRegion: {},\n                AccountId: {},\n                ResourceType: {},\n                ResourceId: {},\n                ResourceArn: {},\n                Definition: {},\n                DefinitionTimestamp: {\n                  type: 'timestamp'\n                },\n                Tags: {\n                  shape: 'Se'\n                },\n                Metadata: {\n                  shape: 'S6d'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetNetworkRoutes: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/network-routes'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'RouteTableIdentifier'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          RouteTableIdentifier: {\n            type: 'structure',\n            members: {\n              TransitGatewayRouteTableArn: {},\n              CoreNetworkSegmentEdge: {\n                shape: 'S6g'\n              }\n            }\n          },\n          ExactCidrMatches: {\n            shape: 'S1g'\n          },\n          LongestPrefixMatches: {\n            shape: 'S1g'\n          },\n          SubnetOfMatches: {\n            shape: 'S1g'\n          },\n          SupernetOfMatches: {\n            shape: 'S1g'\n          },\n          PrefixListIds: {\n            shape: 'S1g'\n          },\n          States: {\n            type: 'list',\n            member: {}\n          },\n          Types: {\n            type: 'list',\n            member: {}\n          },\n          DestinationFilters: {\n            type: 'map',\n            key: {},\n            value: {\n              type: 'list',\n              member: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RouteTableArn: {},\n          CoreNetworkSegmentEdge: {\n            shape: 'S6g'\n          },\n          RouteTableType: {},\n          RouteTableTimestamp: {\n            type: 'timestamp'\n          },\n          NetworkRoutes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DestinationCidrBlock: {},\n                Destinations: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      CoreNetworkAttachmentId: {},\n                      TransitGatewayAttachmentId: {},\n                      SegmentName: {},\n                      EdgeLocation: {},\n                      ResourceType: {},\n                      ResourceId: {}\n                    }\n                  }\n                },\n                PrefixListId: {},\n                State: {},\n                Type: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    GetNetworkTelemetry: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/network-telemetry'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          CoreNetworkId: {\n            location: 'querystring',\n            locationName: 'coreNetworkId'\n          },\n          RegisteredGatewayArn: {\n            location: 'querystring',\n            locationName: 'registeredGatewayArn'\n          },\n          AwsRegion: {\n            location: 'querystring',\n            locationName: 'awsRegion'\n          },\n          AccountId: {\n            location: 'querystring',\n            locationName: 'accountId'\n          },\n          ResourceType: {\n            location: 'querystring',\n            locationName: 'resourceType'\n          },\n          ResourceArn: {\n            location: 'querystring',\n            locationName: 'resourceArn'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NetworkTelemetry: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RegisteredGatewayArn: {},\n                CoreNetworkId: {},\n                AwsRegion: {},\n                AccountId: {},\n                ResourceType: {},\n                ResourceId: {},\n                ResourceArn: {},\n                Address: {},\n                Health: {\n                  type: 'structure',\n                  members: {\n                    Type: {},\n                    Status: {},\n                    Timestamp: {\n                      type: 'timestamp'\n                    }\n                  }\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetResourcePolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/resource-policy/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PolicyDocument: {\n            jsonvalue: true\n          }\n        }\n      }\n    },\n    GetRouteAnalysis: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/route-analyses/{routeAnalysisId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'RouteAnalysisId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          RouteAnalysisId: {\n            location: 'uri',\n            locationName: 'routeAnalysisId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RouteAnalysis: {\n            shape: 'S78'\n          }\n        }\n      }\n    },\n    GetSiteToSiteVpnAttachment: {\n      http: {\n        method: 'GET',\n        requestUri: '/site-to-site-vpn-attachments/{attachmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AttachmentId'\n        ],\n        members: {\n          AttachmentId: {\n            location: 'uri',\n            locationName: 'attachmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SiteToSiteVpnAttachment: {\n            shape: 'S2v'\n          }\n        }\n      }\n    },\n    GetSites: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/sites'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          SiteIds: {\n            location: 'querystring',\n            locationName: 'siteIds',\n            type: 'list',\n            member: {}\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Sites: {\n            type: 'list',\n            member: {\n              shape: 'S2p'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetTransitGatewayConnectPeerAssociations: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/transit-gateway-connect-peer-associations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          TransitGatewayConnectPeerArns: {\n            location: 'querystring',\n            locationName: 'transitGatewayConnectPeerArns',\n            type: 'list',\n            member: {}\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TransitGatewayConnectPeerAssociations: {\n            type: 'list',\n            member: {\n              shape: 'S14'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetTransitGatewayPeering: {\n      http: {\n        method: 'GET',\n        requestUri: '/transit-gateway-peerings/{peeringId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'PeeringId'\n        ],\n        members: {\n          PeeringId: {\n            location: 'uri',\n            locationName: 'peeringId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TransitGatewayPeering: {\n            shape: 'S2z'\n          }\n        }\n      }\n    },\n    GetTransitGatewayRegistrations: {\n      http: {\n        method: 'GET',\n        requestUri: '/global-networks/{globalNetworkId}/transit-gateway-registrations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          TransitGatewayArns: {\n            location: 'querystring',\n            locationName: 'transitGatewayArns',\n            type: 'list',\n            member: {}\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TransitGatewayRegistrations: {\n            type: 'list',\n            member: {\n              shape: 'S4a'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetTransitGatewayRouteTableAttachment: {\n      http: {\n        method: 'GET',\n        requestUri: '/transit-gateway-route-table-attachments/{attachmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AttachmentId'\n        ],\n        members: {\n          AttachmentId: {\n            location: 'uri',\n            locationName: 'attachmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TransitGatewayRouteTableAttachment: {\n            shape: 'S38'\n          }\n        }\n      }\n    },\n    GetVpcAttachment: {\n      http: {\n        method: 'GET',\n        requestUri: '/vpc-attachments/{attachmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AttachmentId'\n        ],\n        members: {\n          AttachmentId: {\n            location: 'uri',\n            locationName: 'attachmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          VpcAttachment: {\n            shape: 'S3f'\n          }\n        }\n      }\n    },\n    ListAttachments: {\n      http: {\n        method: 'GET',\n        requestUri: '/attachments'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          CoreNetworkId: {\n            location: 'querystring',\n            locationName: 'coreNetworkId'\n          },\n          AttachmentType: {\n            location: 'querystring',\n            locationName: 'attachmentType'\n          },\n          EdgeLocation: {\n            location: 'querystring',\n            locationName: 'edgeLocation'\n          },\n          State: {\n            location: 'querystring',\n            locationName: 'state'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Attachments: {\n            type: 'list',\n            member: {\n              shape: 'S4'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListConnectPeers: {\n      http: {\n        method: 'GET',\n        requestUri: '/connect-peers'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          CoreNetworkId: {\n            location: 'querystring',\n            locationName: 'coreNetworkId'\n          },\n          ConnectAttachmentId: {\n            location: 'querystring',\n            locationName: 'connectAttachmentId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConnectPeers: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CoreNetworkId: {},\n                ConnectAttachmentId: {},\n                ConnectPeerId: {},\n                EdgeLocation: {},\n                ConnectPeerState: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                Tags: {\n                  shape: 'Se'\n                },\n                SubnetArn: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListCoreNetworkPolicyVersions: {\n      http: {\n        method: 'GET',\n        requestUri: '/core-networks/{coreNetworkId}/core-network-policy-versions'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetworkPolicyVersions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CoreNetworkId: {},\n                PolicyVersionId: {\n                  type: 'integer'\n                },\n                Alias: {},\n                Description: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                ChangeSetState: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListCoreNetworks: {\n      http: {\n        method: 'GET',\n        requestUri: '/core-networks'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetworks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CoreNetworkId: {},\n                CoreNetworkArn: {},\n                GlobalNetworkId: {},\n                OwnerAccountId: {},\n                State: {},\n                Description: {},\n                Tags: {\n                  shape: 'Se'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListOrganizationServiceAccessStatus: {\n      http: {\n        method: 'GET',\n        requestUri: '/organizations/service-access'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OrganizationStatus: {\n            shape: 'S8n'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListPeerings: {\n      http: {\n        method: 'GET',\n        requestUri: '/peerings'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          CoreNetworkId: {\n            location: 'querystring',\n            locationName: 'coreNetworkId'\n          },\n          PeeringType: {\n            location: 'querystring',\n            locationName: 'peeringType'\n          },\n          EdgeLocation: {\n            location: 'querystring',\n            locationName: 'edgeLocation'\n          },\n          State: {\n            location: 'querystring',\n            locationName: 'state'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Peerings: {\n            type: 'list',\n            member: {\n              shape: 'S30'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TagList: {\n            shape: 'Se'\n          }\n        }\n      }\n    },\n    PutCoreNetworkPolicy: {\n      http: {\n        requestUri: '/core-networks/{coreNetworkId}/core-network-policy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId',\n          'PolicyDocument'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          },\n          PolicyDocument: {\n            jsonvalue: true\n          },\n          Description: {},\n          LatestVersionId: {\n            type: 'integer'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetworkPolicy: {\n            shape: 'S3q'\n          }\n        }\n      }\n    },\n    PutResourcePolicy: {\n      http: {\n        requestUri: '/resource-policy/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'PolicyDocument',\n          'ResourceArn'\n        ],\n        members: {\n          PolicyDocument: {\n            jsonvalue: true\n          },\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    RegisterTransitGateway: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/transit-gateway-registrations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'TransitGatewayArn'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          TransitGatewayArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TransitGatewayRegistration: {\n            shape: 'S4a'\n          }\n        }\n      }\n    },\n    RejectAttachment: {\n      http: {\n        requestUri: '/attachments/{attachmentId}/reject'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AttachmentId'\n        ],\n        members: {\n          AttachmentId: {\n            location: 'uri',\n            locationName: 'attachmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Attachment: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    RestoreCoreNetworkPolicyVersion: {\n      http: {\n        requestUri: '/core-networks/{coreNetworkId}/core-network-policy-versions/{policyVersionId}/restore'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId',\n          'PolicyVersionId'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          },\n          PolicyVersionId: {\n            location: 'uri',\n            locationName: 'policyVersionId',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetworkPolicy: {\n            shape: 'S3q'\n          }\n        }\n      }\n    },\n    StartOrganizationServiceAccessUpdate: {\n      http: {\n        requestUri: '/organizations/service-access'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Action'\n        ],\n        members: {\n          Action: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OrganizationStatus: {\n            shape: 'S8n'\n          }\n        }\n      }\n    },\n    StartRouteAnalysis: {\n      http: {\n        requestUri: '/global-networks/{globalNetworkId}/route-analyses'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'Source',\n          'Destination'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          Source: {\n            shape: 'S9d'\n          },\n          Destination: {\n            shape: 'S9d'\n          },\n          IncludeReturnPath: {\n            type: 'boolean'\n          },\n          UseMiddleboxes: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RouteAnalysis: {\n            shape: 'S78'\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          Tags: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateConnection: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/global-networks/{globalNetworkId}/connections/{connectionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'ConnectionId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          ConnectionId: {\n            location: 'uri',\n            locationName: 'connectionId'\n          },\n          LinkId: {},\n          ConnectedLinkId: {},\n          Description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Connection: {\n            shape: 'S1q'\n          }\n        }\n      }\n    },\n    UpdateCoreNetwork: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/core-networks/{coreNetworkId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CoreNetworkId'\n        ],\n        members: {\n          CoreNetworkId: {\n            location: 'uri',\n            locationName: 'coreNetworkId'\n          },\n          Description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CoreNetwork: {\n            shape: 'S1x'\n          }\n        }\n      }\n    },\n    UpdateDevice: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/global-networks/{globalNetworkId}/devices/{deviceId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'DeviceId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          DeviceId: {\n            location: 'uri',\n            locationName: 'deviceId'\n          },\n          AWSLocation: {\n            shape: 'S25'\n          },\n          Description: {},\n          Type: {},\n          Vendor: {},\n          Model: {},\n          SerialNumber: {},\n          Location: {\n            shape: 'S26'\n          },\n          SiteId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Device: {\n            shape: 'S29'\n          }\n        }\n      }\n    },\n    UpdateGlobalNetwork: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/global-networks/{globalNetworkId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          Description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GlobalNetwork: {\n            shape: 'S2e'\n          }\n        }\n      }\n    },\n    UpdateLink: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/global-networks/{globalNetworkId}/links/{linkId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'LinkId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          LinkId: {\n            location: 'uri',\n            locationName: 'linkId'\n          },\n          Description: {},\n          Type: {},\n          Bandwidth: {\n            shape: 'S2i'\n          },\n          Provider: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Link: {\n            shape: 'S2k'\n          }\n        }\n      }\n    },\n    UpdateNetworkResourceMetadata: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/global-networks/{globalNetworkId}/network-resources/{resourceArn}/metadata'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'ResourceArn',\n          'Metadata'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          Metadata: {\n            shape: 'S6d'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceArn: {},\n          Metadata: {\n            shape: 'S6d'\n          }\n        }\n      }\n    },\n    UpdateSite: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/global-networks/{globalNetworkId}/sites/{siteId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GlobalNetworkId',\n          'SiteId'\n        ],\n        members: {\n          GlobalNetworkId: {\n            location: 'uri',\n            locationName: 'globalNetworkId'\n          },\n          SiteId: {\n            location: 'uri',\n            locationName: 'siteId'\n          },\n          Description: {},\n          Location: {\n            shape: 'S26'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Site: {\n            shape: 'S2p'\n          }\n        }\n      }\n    },\n    UpdateVpcAttachment: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/vpc-attachments/{attachmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AttachmentId'\n        ],\n        members: {\n          AttachmentId: {\n            location: 'uri',\n            locationName: 'attachmentId'\n          },\n          AddSubnetArns: {\n            shape: 'S3b'\n          },\n          RemoveSubnetArns: {\n            shape: 'S3b'\n          },\n          Options: {\n            shape: 'S3c'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          VpcAttachment: {\n            shape: 'S3f'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'structure',\n      members: {\n        CoreNetworkId: {},\n        CoreNetworkArn: {},\n        AttachmentId: {},\n        OwnerAccountId: {},\n        AttachmentType: {},\n        State: {},\n        EdgeLocation: {},\n        ResourceArn: {},\n        AttachmentPolicyRuleNumber: {\n          type: 'integer'\n        },\n        SegmentName: {},\n        Tags: {\n          shape: 'Se'\n        },\n        ProposedSegmentChange: {\n          type: 'structure',\n          members: {\n            Tags: {\n              shape: 'Se'\n            },\n            AttachmentPolicyRuleNumber: {\n              type: 'integer'\n            },\n            SegmentName: {}\n          }\n        },\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        UpdatedAt: {\n          type: 'timestamp'\n        }\n      }\n    },\n    Se: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sq: {\n      type: 'structure',\n      members: {\n        ConnectPeerId: {},\n        GlobalNetworkId: {},\n        DeviceId: {},\n        LinkId: {},\n        State: {}\n      }\n    },\n    Sv: {\n      type: 'structure',\n      members: {\n        CustomerGatewayArn: {},\n        GlobalNetworkId: {},\n        DeviceId: {},\n        LinkId: {},\n        State: {}\n      }\n    },\n    Sz: {\n      type: 'structure',\n      members: {\n        GlobalNetworkId: {},\n        DeviceId: {},\n        LinkId: {},\n        LinkAssociationState: {}\n      }\n    },\n    S14: {\n      type: 'structure',\n      members: {\n        TransitGatewayConnectPeerArn: {},\n        GlobalNetworkId: {},\n        DeviceId: {},\n        LinkId: {},\n        State: {}\n      }\n    },\n    S17: {\n      type: 'structure',\n      members: {\n        Protocol: {}\n      }\n    },\n    S1b: {\n      type: 'structure',\n      members: {\n        Attachment: {\n          shape: 'S4'\n        },\n        TransportAttachmentId: {},\n        Options: {\n          shape: 'S17'\n        }\n      }\n    },\n    S1g: {\n      type: 'list',\n      member: {}\n    },\n    S1j: {\n      type: 'structure',\n      members: {\n        CoreNetworkId: {},\n        ConnectAttachmentId: {},\n        ConnectPeerId: {},\n        EdgeLocation: {},\n        State: {},\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        Configuration: {\n          type: 'structure',\n          members: {\n            CoreNetworkAddress: {},\n            PeerAddress: {},\n            InsideCidrBlocks: {\n              shape: 'S1g'\n            },\n            Protocol: {},\n            BgpConfigurations: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                members: {\n                  CoreNetworkAsn: {\n                    type: 'long'\n                  },\n                  PeerAsn: {\n                    type: 'long'\n                  },\n                  CoreNetworkAddress: {},\n                  PeerAddress: {}\n                }\n              }\n            }\n          }\n        },\n        Tags: {\n          shape: 'Se'\n        },\n        SubnetArn: {}\n      }\n    },\n    S1q: {\n      type: 'structure',\n      members: {\n        ConnectionId: {},\n        ConnectionArn: {},\n        GlobalNetworkId: {},\n        DeviceId: {},\n        ConnectedDeviceId: {},\n        LinkId: {},\n        ConnectedLinkId: {},\n        Description: {},\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        State: {},\n        Tags: {\n          shape: 'Se'\n        }\n      }\n    },\n    S1x: {\n      type: 'structure',\n      members: {\n        GlobalNetworkId: {},\n        CoreNetworkId: {},\n        CoreNetworkArn: {},\n        Description: {},\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        State: {},\n        Segments: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              Name: {},\n              EdgeLocations: {\n                shape: 'S21'\n              },\n              SharedSegments: {\n                shape: 'S1g'\n              }\n            }\n          }\n        },\n        Edges: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              EdgeLocation: {},\n              Asn: {\n                type: 'long'\n              },\n              InsideCidrBlocks: {\n                shape: 'S1g'\n              }\n            }\n          }\n        },\n        Tags: {\n          shape: 'Se'\n        }\n      }\n    },\n    S21: {\n      type: 'list',\n      member: {}\n    },\n    S25: {\n      type: 'structure',\n      members: {\n        Zone: {},\n        SubnetArn: {}\n      }\n    },\n    S26: {\n      type: 'structure',\n      members: {\n        Address: {},\n        Latitude: {},\n        Longitude: {}\n      },\n      sensitive: true\n    },\n    S29: {\n      type: 'structure',\n      members: {\n        DeviceId: {},\n        DeviceArn: {},\n        GlobalNetworkId: {},\n        AWSLocation: {\n          shape: 'S25'\n        },\n        Description: {},\n        Type: {},\n        Vendor: {},\n        Model: {},\n        SerialNumber: {},\n        Location: {\n          shape: 'S26'\n        },\n        SiteId: {},\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        State: {},\n        Tags: {\n          shape: 'Se'\n        }\n      }\n    },\n    S2e: {\n      type: 'structure',\n      members: {\n        GlobalNetworkId: {},\n        GlobalNetworkArn: {},\n        Description: {},\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        State: {},\n        Tags: {\n          shape: 'Se'\n        }\n      }\n    },\n    S2i: {\n      type: 'structure',\n      members: {\n        UploadSpeed: {\n          type: 'integer'\n        },\n        DownloadSpeed: {\n          type: 'integer'\n        }\n      }\n    },\n    S2k: {\n      type: 'structure',\n      members: {\n        LinkId: {},\n        LinkArn: {},\n        GlobalNetworkId: {},\n        SiteId: {},\n        Description: {},\n        Type: {},\n        Bandwidth: {\n          shape: 'S2i'\n        },\n        Provider: {},\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        State: {},\n        Tags: {\n          shape: 'Se'\n        }\n      }\n    },\n    S2p: {\n      type: 'structure',\n      members: {\n        SiteId: {},\n        SiteArn: {},\n        GlobalNetworkId: {},\n        Description: {},\n        Location: {\n          shape: 'S26'\n        },\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        State: {},\n        Tags: {\n          shape: 'Se'\n        }\n      }\n    },\n    S2v: {\n      type: 'structure',\n      members: {\n        Attachment: {\n          shape: 'S4'\n        },\n        VpnConnectionArn: {}\n      }\n    },\n    S2z: {\n      type: 'structure',\n      members: {\n        Peering: {\n          shape: 'S30'\n        },\n        TransitGatewayArn: {},\n        TransitGatewayPeeringAttachmentId: {}\n      }\n    },\n    S30: {\n      type: 'structure',\n      members: {\n        CoreNetworkId: {},\n        CoreNetworkArn: {},\n        PeeringId: {},\n        OwnerAccountId: {},\n        PeeringType: {},\n        State: {},\n        EdgeLocation: {},\n        ResourceArn: {},\n        Tags: {\n          shape: 'Se'\n        },\n        CreatedAt: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S38: {\n      type: 'structure',\n      members: {\n        Attachment: {\n          shape: 'S4'\n        },\n        PeeringId: {},\n        TransitGatewayRouteTableArn: {}\n      }\n    },\n    S3b: {\n      type: 'list',\n      member: {}\n    },\n    S3c: {\n      type: 'structure',\n      members: {\n        Ipv6Support: {\n          type: 'boolean'\n        },\n        ApplianceModeSupport: {\n          type: 'boolean'\n        }\n      }\n    },\n    S3f: {\n      type: 'structure',\n      members: {\n        Attachment: {\n          shape: 'S4'\n        },\n        SubnetArns: {\n          shape: 'S3b'\n        },\n        Options: {\n          shape: 'S3c'\n        }\n      }\n    },\n    S3q: {\n      type: 'structure',\n      members: {\n        CoreNetworkId: {},\n        PolicyVersionId: {\n          type: 'integer'\n        },\n        Alias: {},\n        Description: {},\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        ChangeSetState: {},\n        PolicyErrors: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'ErrorCode',\n              'Message'\n            ],\n            members: {\n              ErrorCode: {},\n              Message: {},\n              Path: {}\n            }\n          }\n        },\n        PolicyDocument: {\n          jsonvalue: true\n        }\n      }\n    },\n    S4a: {\n      type: 'structure',\n      members: {\n        GlobalNetworkId: {},\n        TransitGatewayArn: {},\n        State: {\n          type: 'structure',\n          members: {\n            Code: {},\n            Message: {}\n          }\n        }\n      }\n    },\n    S5j: {\n      type: 'structure',\n      members: {\n        SegmentName: {},\n        EdgeLocations: {\n          shape: 'S21'\n        },\n        Asn: {\n          type: 'long'\n        },\n        Cidr: {},\n        DestinationIdentifier: {},\n        InsideCidrBlocks: {\n          shape: 'S1g'\n        },\n        SharedSegments: {\n          shape: 'S1g'\n        }\n      }\n    },\n    S6d: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S6g: {\n      type: 'structure',\n      members: {\n        CoreNetworkId: {},\n        SegmentName: {},\n        EdgeLocation: {}\n      }\n    },\n    S78: {\n      type: 'structure',\n      members: {\n        GlobalNetworkId: {},\n        OwnerAccountId: {},\n        RouteAnalysisId: {},\n        StartTimestamp: {\n          type: 'timestamp'\n        },\n        Status: {},\n        Source: {\n          shape: 'S7a'\n        },\n        Destination: {\n          shape: 'S7a'\n        },\n        IncludeReturnPath: {\n          type: 'boolean'\n        },\n        UseMiddleboxes: {\n          type: 'boolean'\n        },\n        ForwardPath: {\n          shape: 'S7c'\n        },\n        ReturnPath: {\n          shape: 'S7c'\n        }\n      }\n    },\n    S7a: {\n      type: 'structure',\n      members: {\n        TransitGatewayAttachmentArn: {},\n        TransitGatewayArn: {},\n        IpAddress: {}\n      }\n    },\n    S7c: {\n      type: 'structure',\n      members: {\n        CompletionStatus: {\n          type: 'structure',\n          members: {\n            ResultCode: {},\n            ReasonCode: {},\n            ReasonContext: {\n              type: 'map',\n              key: {},\n              value: {}\n            }\n          }\n        },\n        Path: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              Sequence: {\n                type: 'integer'\n              },\n              Resource: {\n                type: 'structure',\n                members: {\n                  RegisteredGatewayArn: {},\n                  ResourceArn: {},\n                  ResourceType: {},\n                  Definition: {},\n                  NameTag: {},\n                  IsMiddlebox: {\n                    type: 'boolean'\n                  }\n                }\n              },\n              DestinationCidrBlock: {}\n            }\n          }\n        }\n      }\n    },\n    S8n: {\n      type: 'structure',\n      members: {\n        OrganizationId: {},\n        OrganizationAwsServiceAccessStatus: {},\n        SLRDeploymentStatus: {},\n        AccountStatusList: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              AccountId: {},\n              SLRDeploymentStatus: {}\n            }\n          }\n        }\n      }\n    },\n    S9d: {\n      type: 'structure',\n      members: {\n        TransitGatewayAttachmentArn: {},\n        IpAddress: {}\n      }\n    }\n  }\n}"]}