{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/cloudformation-2010-05-15.waiters2.json"],"names":["version","waiters","StackExists","delay","operation","maxAttempts","acceptors","matcher","expected","state","StackCreateComplete","description","argument","StackDeleteComplete","StackUpdateComplete","StackImportComplete","StackRollbackComplete","ChangeSetCreateComplete","TypeRegistrationComplete"],"mappings":"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","sourcesContent":["export default {\n  version: 2,\n  waiters: {\n    StackExists: {\n      delay: 5,\n      operation: 'DescribeStacks',\n      maxAttempts: 20,\n      acceptors: [\n        {\n          matcher: 'status',\n          expected: 200,\n          state: 'success'\n        },\n        {\n          matcher: 'error',\n          expected: 'ValidationError',\n          state: 'retry'\n        }\n      ]\n    },\n    StackCreateComplete: {\n      delay: 30,\n      operation: 'DescribeStacks',\n      maxAttempts: 120,\n      description: 'Wait until stack status is CREATE_COMPLETE.',\n      acceptors: [\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'CREATE_COMPLETE',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_COMPLETE',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_IN_PROGRESS',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_COMPLETE_CLEANUP_IN_PROGRESS',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_FAILED',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_ROLLBACK_IN_PROGRESS',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_ROLLBACK_FAILED',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_ROLLBACK_COMPLETE',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'CREATE_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'DELETE_COMPLETE',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'DELETE_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'ROLLBACK_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'ROLLBACK_COMPLETE',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          expected: 'ValidationError',\n          matcher: 'error',\n          state: 'failure'\n        }\n      ]\n    },\n    StackDeleteComplete: {\n      delay: 30,\n      operation: 'DescribeStacks',\n      maxAttempts: 120,\n      description: 'Wait until stack status is DELETE_COMPLETE.',\n      acceptors: [\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'DELETE_COMPLETE',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          expected: 'ValidationError',\n          matcher: 'error',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'DELETE_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'CREATE_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'ROLLBACK_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_ROLLBACK_IN_PROGRESS',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_ROLLBACK_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_ROLLBACK_COMPLETE',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_COMPLETE',\n          matcher: 'pathAny',\n          state: 'failure'\n        }\n      ]\n    },\n    StackUpdateComplete: {\n      delay: 30,\n      maxAttempts: 120,\n      operation: 'DescribeStacks',\n      description: 'Wait until stack status is UPDATE_COMPLETE.',\n      acceptors: [\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_COMPLETE',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          expected: 'UPDATE_FAILED',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'Stacks[].StackStatus'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_ROLLBACK_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          expected: 'UPDATE_ROLLBACK_COMPLETE',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'Stacks[].StackStatus'\n        },\n        {\n          expected: 'ValidationError',\n          matcher: 'error',\n          state: 'failure'\n        }\n      ]\n    },\n    StackImportComplete: {\n      delay: 30,\n      maxAttempts: 120,\n      operation: 'DescribeStacks',\n      description: 'Wait until stack status is IMPORT_COMPLETE.',\n      acceptors: [\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'IMPORT_COMPLETE',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          expected: 'ROLLBACK_COMPLETE',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'Stacks[].StackStatus'\n        },\n        {\n          expected: 'ROLLBACK_FAILED',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'Stacks[].StackStatus'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'IMPORT_ROLLBACK_IN_PROGRESS',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'IMPORT_ROLLBACK_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          expected: 'IMPORT_ROLLBACK_COMPLETE',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'Stacks[].StackStatus'\n        },\n        {\n          expected: 'ValidationError',\n          matcher: 'error',\n          state: 'failure'\n        }\n      ]\n    },\n    StackRollbackComplete: {\n      delay: 30,\n      operation: 'DescribeStacks',\n      maxAttempts: 120,\n      description: 'Wait until stack status is UPDATE_ROLLBACK_COMPLETE.',\n      acceptors: [\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_ROLLBACK_COMPLETE',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'UPDATE_ROLLBACK_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          argument: 'Stacks[].StackStatus',\n          expected: 'DELETE_FAILED',\n          matcher: 'pathAny',\n          state: 'failure'\n        },\n        {\n          expected: 'ValidationError',\n          matcher: 'error',\n          state: 'failure'\n        }\n      ]\n    },\n    ChangeSetCreateComplete: {\n      delay: 30,\n      operation: 'DescribeChangeSet',\n      maxAttempts: 120,\n      description: 'Wait until change set status is CREATE_COMPLETE.',\n      acceptors: [\n        {\n          argument: 'Status',\n          expected: 'CREATE_COMPLETE',\n          matcher: 'path',\n          state: 'success'\n        },\n        {\n          argument: 'Status',\n          expected: 'FAILED',\n          matcher: 'path',\n          state: 'failure'\n        },\n        {\n          expected: 'ValidationError',\n          matcher: 'error',\n          state: 'failure'\n        }\n      ]\n    },\n    TypeRegistrationComplete: {\n      delay: 30,\n      operation: 'DescribeTypeRegistration',\n      maxAttempts: 120,\n      description: 'Wait until type registration is COMPLETE.',\n      acceptors: [\n        {\n          argument: 'ProgressStatus',\n          expected: 'COMPLETE',\n          matcher: 'path',\n          state: 'success'\n        },\n        {\n          argument: 'ProgressStatus',\n          expected: 'FAILED',\n          matcher: 'path',\n          state: 'failure'\n        }\n      ]\n    }\n  }\n}"]}