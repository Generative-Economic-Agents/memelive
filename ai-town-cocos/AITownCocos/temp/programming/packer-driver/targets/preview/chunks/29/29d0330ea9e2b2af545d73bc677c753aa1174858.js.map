{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/debounce.js"],"names":["debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","FUNC_ERROR_TEXT","toNumber","isObject","nativeMax","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","nativeMin","shouldInvoke","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","arguments","Math","max","min"],"mappings":"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","sourcesContent":["import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n"]}