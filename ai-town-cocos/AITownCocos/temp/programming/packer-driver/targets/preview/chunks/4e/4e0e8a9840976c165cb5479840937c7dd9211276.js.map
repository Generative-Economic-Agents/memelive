{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/ecs-2014-11-13.waiters2.json"],"names":["version","waiters","TasksRunning","delay","operation","maxAttempts","acceptors","expected","matcher","state","argument","TasksStopped","ServicesStable","ServicesInactive"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,CADI;AAEbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,YAAY,EAAE;AACZC,YAAAA,KAAK,EAAE,CADK;AAEZC,YAAAA,SAAS,EAAE,eAFC;AAGZC,YAAAA,WAAW,EAAE,GAHD;AAIZC,YAAAA,SAAS,EAAE,CACT;AACEC,cAAAA,QAAQ,EAAE,SADZ;AAEEC,cAAAA,OAAO,EAAE,SAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aADS,EAOT;AACEH,cAAAA,QAAQ,EAAE,SADZ;AAEEC,cAAAA,OAAO,EAAE,SAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aAPS,EAaT;AACEH,cAAAA,QAAQ,EAAE,SADZ;AAEEC,cAAAA,OAAO,EAAE,SAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aAbS;AAJC,WADP;AA0BPC,UAAAA,YAAY,EAAE;AACZR,YAAAA,KAAK,EAAE,CADK;AAEZC,YAAAA,SAAS,EAAE,eAFC;AAGZC,YAAAA,WAAW,EAAE,GAHD;AAIZC,YAAAA,SAAS,EAAE,CACT;AACEC,cAAAA,QAAQ,EAAE,SADZ;AAEEC,cAAAA,OAAO,EAAE,SAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aADS;AAJC,WA1BP;AAuCPE,UAAAA,cAAc,EAAE;AACdT,YAAAA,KAAK,EAAE,EADO;AAEdC,YAAAA,SAAS,EAAE,kBAFG;AAGdC,YAAAA,WAAW,EAAE,EAHC;AAIdC,YAAAA,SAAS,EAAE,CACT;AACEC,cAAAA,QAAQ,EAAE,SADZ;AAEEC,cAAAA,OAAO,EAAE,SAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aADS,EAOT;AACEH,cAAAA,QAAQ,EAAE,UADZ;AAEEC,cAAAA,OAAO,EAAE,SAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aAPS,EAaT;AACEH,cAAAA,QAAQ,EAAE,UADZ;AAEEC,cAAAA,OAAO,EAAE,SAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aAbS,EAmBT;AACEH,cAAAA,QAAQ,EAAE,IADZ;AAEEC,cAAAA,OAAO,EAAE,MAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aAnBS;AAJG,WAvCT;AAsEPG,UAAAA,gBAAgB,EAAE;AAChBV,YAAAA,KAAK,EAAE,EADS;AAEhBC,YAAAA,SAAS,EAAE,kBAFK;AAGhBC,YAAAA,WAAW,EAAE,EAHG;AAIhBC,YAAAA,SAAS,EAAE,CACT;AACEC,cAAAA,QAAQ,EAAE,SADZ;AAEEC,cAAAA,OAAO,EAAE,SAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aADS,EAOT;AACEH,cAAAA,QAAQ,EAAE,UADZ;AAEEC,cAAAA,OAAO,EAAE,SAFX;AAGEC,cAAAA,KAAK,EAAE,SAHT;AAIEC,cAAAA,QAAQ,EAAE;AAJZ,aAPS;AAJK;AAtEX;AAFI,O","sourcesContent":["export default {\n  version: 2,\n  waiters: {\n    TasksRunning: {\n      delay: 6,\n      operation: 'DescribeTasks',\n      maxAttempts: 100,\n      acceptors: [\n        {\n          expected: 'STOPPED',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'tasks[].lastStatus'\n        },\n        {\n          expected: 'MISSING',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'failures[].reason'\n        },\n        {\n          expected: 'RUNNING',\n          matcher: 'pathAll',\n          state: 'success',\n          argument: 'tasks[].lastStatus'\n        }\n      ]\n    },\n    TasksStopped: {\n      delay: 6,\n      operation: 'DescribeTasks',\n      maxAttempts: 100,\n      acceptors: [\n        {\n          expected: 'STOPPED',\n          matcher: 'pathAll',\n          state: 'success',\n          argument: 'tasks[].lastStatus'\n        }\n      ]\n    },\n    ServicesStable: {\n      delay: 15,\n      operation: 'DescribeServices',\n      maxAttempts: 40,\n      acceptors: [\n        {\n          expected: 'MISSING',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'failures[].reason'\n        },\n        {\n          expected: 'DRAINING',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'services[].status'\n        },\n        {\n          expected: 'INACTIVE',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'services[].status'\n        },\n        {\n          expected: true,\n          matcher: 'path',\n          state: 'success',\n          argument: 'length(services[?!(length(deployments) == `1` && runningCount == desiredCount)]) == `0`'\n        }\n      ]\n    },\n    ServicesInactive: {\n      delay: 15,\n      operation: 'DescribeServices',\n      maxAttempts: 40,\n      acceptors: [\n        {\n          expected: 'MISSING',\n          matcher: 'pathAny',\n          state: 'failure',\n          argument: 'failures[].reason'\n        },\n        {\n          expected: 'INACTIVE',\n          matcher: 'pathAny',\n          state: 'success',\n          argument: 'services[].status'\n        }\n      ]\n    }\n  }\n}"]}