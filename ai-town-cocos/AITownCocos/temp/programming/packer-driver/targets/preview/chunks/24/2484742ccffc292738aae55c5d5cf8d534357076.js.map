{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/runtime.lex-2016-11-28.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","DeleteSession","http","method","requestUri","input","type","required","members","botName","location","locationName","botAlias","userId","output","sessionId","GetSession","checkpointLabelFilter","recentIntentSummaryView","shape","sessionAttributes","dialogAction","activeContexts","PostContent","jsonvalue","requestAttributes","contentType","accept","inputStream","payload","intentName","nluIntentConfidence","alternativeIntents","slots","sentimentResponse","message","deprecated","deprecatedMessage","encodedMessage","messageFormat","dialogState","slotToElicit","inputTranscript","encodedInputTranscript","sensitive","audioStream","botVersion","authtype","PostText","inputText","member","sentimentLabel","sentimentScore","responseCard","genericAttachments","title","subTitle","attachmentLinkUrl","imageUrl","buttons","text","value","PutSession","shapes","Sa","checkpointLabel","confirmationStatus","dialogActionType","fulfillmentState","Sd","key","Sh","Si","Sk","name","timeToLive","timeToLiveInSeconds","turnsToLive","parameters","St","Sw","streaming","Sx","Sz","S15","score"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2016-11-28',\n    endpointPrefix: 'runtime.lex',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon Lex Runtime Service',\n    serviceId: 'Lex Runtime Service',\n    signatureVersion: 'v4',\n    signingName: 'lex',\n    uid: 'runtime.lex-2016-11-28'\n  },\n  operations: {\n    DeleteSession: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/bot/{botName}/alias/{botAlias}/user/{userId}/session'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botName',\n          'botAlias',\n          'userId'\n        ],\n        members: {\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          botAlias: {\n            location: 'uri',\n            locationName: 'botAlias'\n          },\n          userId: {\n            location: 'uri',\n            locationName: 'userId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          botName: {},\n          botAlias: {},\n          userId: {},\n          sessionId: {}\n        }\n      }\n    },\n    GetSession: {\n      http: {\n        method: 'GET',\n        requestUri: '/bot/{botName}/alias/{botAlias}/user/{userId}/session/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botName',\n          'botAlias',\n          'userId'\n        ],\n        members: {\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          botAlias: {\n            location: 'uri',\n            locationName: 'botAlias'\n          },\n          userId: {\n            location: 'uri',\n            locationName: 'userId'\n          },\n          checkpointLabelFilter: {\n            location: 'querystring',\n            locationName: 'checkpointLabelFilter'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          recentIntentSummaryView: {\n            shape: 'Sa'\n          },\n          sessionAttributes: {\n            shape: 'Sd'\n          },\n          sessionId: {},\n          dialogAction: {\n            shape: 'Sh'\n          },\n          activeContexts: {\n            shape: 'Sk'\n          }\n        }\n      }\n    },\n    PostContent: {\n      http: {\n        requestUri: '/bot/{botName}/alias/{botAlias}/user/{userId}/content'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botName',\n          'botAlias',\n          'userId',\n          'contentType',\n          'inputStream'\n        ],\n        members: {\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          botAlias: {\n            location: 'uri',\n            locationName: 'botAlias'\n          },\n          userId: {\n            location: 'uri',\n            locationName: 'userId'\n          },\n          sessionAttributes: {\n            shape: 'St',\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-session-attributes'\n          },\n          requestAttributes: {\n            shape: 'St',\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-request-attributes'\n          },\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          accept: {\n            location: 'header',\n            locationName: 'Accept'\n          },\n          inputStream: {\n            shape: 'Sw'\n          },\n          activeContexts: {\n            shape: 'Sx',\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-active-contexts'\n          }\n        },\n        payload: 'inputStream'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          intentName: {\n            location: 'header',\n            locationName: 'x-amz-lex-intent-name'\n          },\n          nluIntentConfidence: {\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-nlu-intent-confidence'\n          },\n          alternativeIntents: {\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-alternative-intents'\n          },\n          slots: {\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-slots'\n          },\n          sessionAttributes: {\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-session-attributes'\n          },\n          sentimentResponse: {\n            location: 'header',\n            locationName: 'x-amz-lex-sentiment'\n          },\n          message: {\n            shape: 'Si',\n            deprecated: true,\n            deprecatedMessage: 'The message field is deprecated, use the encodedMessage field instead. The message field is available only in the de-DE, en-AU, en-GB, en-US, es-419, es-ES, es-US, fr-CA, fr-FR and it-IT locales.',\n            location: 'header',\n            locationName: 'x-amz-lex-message'\n          },\n          encodedMessage: {\n            shape: 'Sz',\n            location: 'header',\n            locationName: 'x-amz-lex-encoded-message'\n          },\n          messageFormat: {\n            location: 'header',\n            locationName: 'x-amz-lex-message-format'\n          },\n          dialogState: {\n            location: 'header',\n            locationName: 'x-amz-lex-dialog-state'\n          },\n          slotToElicit: {\n            location: 'header',\n            locationName: 'x-amz-lex-slot-to-elicit'\n          },\n          inputTranscript: {\n            deprecated: true,\n            deprecatedMessage: 'The inputTranscript field is deprecated, use the encodedInputTranscript field instead. The inputTranscript field is available only in the de-DE, en-AU, en-GB, en-US, es-419, es-ES, es-US, fr-CA, fr-FR and it-IT locales.',\n            location: 'header',\n            locationName: 'x-amz-lex-input-transcript'\n          },\n          encodedInputTranscript: {\n            location: 'header',\n            locationName: 'x-amz-lex-encoded-input-transcript',\n            type: 'string',\n            sensitive: true\n          },\n          audioStream: {\n            shape: 'Sw'\n          },\n          botVersion: {\n            location: 'header',\n            locationName: 'x-amz-lex-bot-version'\n          },\n          sessionId: {\n            location: 'header',\n            locationName: 'x-amz-lex-session-id'\n          },\n          activeContexts: {\n            shape: 'Sx',\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-active-contexts'\n          }\n        },\n        payload: 'audioStream'\n      },\n      authtype: 'v4-unsigned-body'\n    },\n    PostText: {\n      http: {\n        requestUri: '/bot/{botName}/alias/{botAlias}/user/{userId}/text'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botName',\n          'botAlias',\n          'userId',\n          'inputText'\n        ],\n        members: {\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          botAlias: {\n            location: 'uri',\n            locationName: 'botAlias'\n          },\n          userId: {\n            location: 'uri',\n            locationName: 'userId'\n          },\n          sessionAttributes: {\n            shape: 'Sd'\n          },\n          requestAttributes: {\n            shape: 'Sd'\n          },\n          inputText: {\n            shape: 'Si'\n          },\n          activeContexts: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          intentName: {},\n          nluIntentConfidence: {\n            shape: 'S15'\n          },\n          alternativeIntents: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                intentName: {},\n                nluIntentConfidence: {\n                  shape: 'S15'\n                },\n                slots: {\n                  shape: 'Sd'\n                }\n              }\n            }\n          },\n          slots: {\n            shape: 'Sd'\n          },\n          sessionAttributes: {\n            shape: 'Sd'\n          },\n          message: {\n            shape: 'Si'\n          },\n          sentimentResponse: {\n            type: 'structure',\n            members: {\n              sentimentLabel: {},\n              sentimentScore: {}\n            }\n          },\n          messageFormat: {},\n          dialogState: {},\n          slotToElicit: {},\n          responseCard: {\n            type: 'structure',\n            members: {\n              version: {},\n              contentType: {},\n              genericAttachments: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    title: {},\n                    subTitle: {},\n                    attachmentLinkUrl: {},\n                    imageUrl: {},\n                    buttons: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        required: [\n                          'text',\n                          'value'\n                        ],\n                        members: {\n                          text: {},\n                          value: {}\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          sessionId: {},\n          botVersion: {},\n          activeContexts: {\n            shape: 'Sk'\n          }\n        }\n      }\n    },\n    PutSession: {\n      http: {\n        requestUri: '/bot/{botName}/alias/{botAlias}/user/{userId}/session'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botName',\n          'botAlias',\n          'userId'\n        ],\n        members: {\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          botAlias: {\n            location: 'uri',\n            locationName: 'botAlias'\n          },\n          userId: {\n            location: 'uri',\n            locationName: 'userId'\n          },\n          sessionAttributes: {\n            shape: 'Sd'\n          },\n          dialogAction: {\n            shape: 'Sh'\n          },\n          recentIntentSummaryView: {\n            shape: 'Sa'\n          },\n          accept: {\n            location: 'header',\n            locationName: 'Accept'\n          },\n          activeContexts: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          intentName: {\n            location: 'header',\n            locationName: 'x-amz-lex-intent-name'\n          },\n          slots: {\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-slots'\n          },\n          sessionAttributes: {\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-session-attributes'\n          },\n          message: {\n            shape: 'Si',\n            deprecated: true,\n            deprecatedMessage: 'The message field is deprecated, use the encodedMessage field instead. The message field is available only in the de-DE, en-AU, en-GB, en-US, es-419, es-ES, es-US, fr-CA, fr-FR and it-IT locales.',\n            location: 'header',\n            locationName: 'x-amz-lex-message'\n          },\n          encodedMessage: {\n            shape: 'Sz',\n            location: 'header',\n            locationName: 'x-amz-lex-encoded-message'\n          },\n          messageFormat: {\n            location: 'header',\n            locationName: 'x-amz-lex-message-format'\n          },\n          dialogState: {\n            location: 'header',\n            locationName: 'x-amz-lex-dialog-state'\n          },\n          slotToElicit: {\n            location: 'header',\n            locationName: 'x-amz-lex-slot-to-elicit'\n          },\n          audioStream: {\n            shape: 'Sw'\n          },\n          sessionId: {\n            location: 'header',\n            locationName: 'x-amz-lex-session-id'\n          },\n          activeContexts: {\n            shape: 'Sx',\n            jsonvalue: true,\n            location: 'header',\n            locationName: 'x-amz-lex-active-contexts'\n          }\n        },\n        payload: 'audioStream'\n      }\n    }\n  },\n  shapes: {\n    Sa: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'dialogActionType'\n        ],\n        members: {\n          intentName: {},\n          checkpointLabel: {},\n          slots: {\n            shape: 'Sd'\n          },\n          confirmationStatus: {},\n          dialogActionType: {},\n          fulfillmentState: {},\n          slotToElicit: {}\n        }\n      }\n    },\n    Sd: {\n      type: 'map',\n      key: {},\n      value: {},\n      sensitive: true\n    },\n    Sh: {\n      type: 'structure',\n      required: [\n        'type'\n      ],\n      members: {\n        type: {},\n        intentName: {},\n        slots: {\n          shape: 'Sd'\n        },\n        slotToElicit: {},\n        fulfillmentState: {},\n        message: {\n          shape: 'Si'\n        },\n        messageFormat: {}\n      }\n    },\n    Si: {\n      type: 'string',\n      sensitive: true\n    },\n    Sk: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name',\n          'timeToLive',\n          'parameters'\n        ],\n        members: {\n          name: {},\n          timeToLive: {\n            type: 'structure',\n            members: {\n              timeToLiveInSeconds: {\n                type: 'integer'\n              },\n              turnsToLive: {\n                type: 'integer'\n              }\n            }\n          },\n          parameters: {\n            type: 'map',\n            key: {},\n            value: {\n              shape: 'Si'\n            }\n          }\n        }\n      },\n      sensitive: true\n    },\n    St: {\n      type: 'string',\n      sensitive: true\n    },\n    Sw: {\n      type: 'blob',\n      streaming: true\n    },\n    Sx: {\n      type: 'string',\n      sensitive: true\n    },\n    Sz: {\n      type: 'string',\n      sensitive: true\n    },\n    S15: {\n      type: 'structure',\n      members: {\n        score: {\n          type: 'double'\n        }\n      }\n    }\n  }\n}"]}