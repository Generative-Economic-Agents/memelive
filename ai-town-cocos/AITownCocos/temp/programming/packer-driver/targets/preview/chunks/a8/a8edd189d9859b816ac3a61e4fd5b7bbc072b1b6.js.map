{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/isSymbol.js"],"names":["isSymbol","value","isObjectLike","baseGetTag","symbolTag"],"mappings":";;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,WAAO,OAAOA,KAAP,IAAgB,QAAhB,IACJC,YAAY,CAACD,KAAD,CAAZ,IAAuBE,UAAU,CAACF,KAAD,CAAV,IAAqBG,SAD/C;AAED;;;;AA1BMD,MAAAA,U;;AACAD,MAAAA,Y;;;AAEP;AACIE,MAAAA,S,GAAY,iB;;yBAwBDJ,Q","sourcesContent":["import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n"]}