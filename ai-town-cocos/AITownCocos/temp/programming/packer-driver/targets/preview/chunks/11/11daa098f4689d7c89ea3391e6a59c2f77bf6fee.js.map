{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/indexOf.js"],"names":["indexOf","array","value","fromIndex","length","index","toInteger","nativeMax","baseIndexOf","Math","max"],"mappings":";;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,OAAT,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,SAA/B,EAA0C;AACxC,QAAIC,MAAM,GAAGH,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBA,KAAK,CAACG,MAAvC;;AACA,QAAI,CAACA,MAAL,EAAa;AACX,aAAO,CAAC,CAAR;AACD;;AACD,QAAIC,KAAK,GAAGF,SAAS,IAAI,IAAb,GAAoB,CAApB,GAAwBG,SAAS,CAACH,SAAD,CAA7C;;AACA,QAAIE,KAAK,GAAG,CAAZ,EAAe;AACbA,MAAAA,KAAK,GAAGE,SAAS,CAACH,MAAM,GAAGC,KAAV,EAAiB,CAAjB,CAAjB;AACD;;AACD,WAAOG,WAAW,CAACP,KAAD,EAAQC,KAAR,EAAeG,KAAf,CAAlB;AACD;;;;AAvCMG,MAAAA,W;;AACAF,MAAAA,S;;;AAEP;AACIC,MAAAA,S,GAAYE,IAAI,CAACC,G;;yBAqCNV,O","sourcesContent":["import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n"]}