{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/pca-connector-ad-2018-05-10.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateConnector","http","requestUri","responseCode","input","type","required","members","CertificateAuthorityArn","ClientToken","idempotencyToken","DirectoryId","Tags","shape","VpcInformation","output","ConnectorArn","CreateDirectoryRegistration","DirectoryRegistrationArn","CreateServicePrincipalName","location","locationName","idempotent","CreateTemplate","Definition","Name","TemplateArn","CreateTemplateGroupAccessControlEntry","AccessRights","GroupDisplayName","GroupSecurityIdentifier","DeleteConnector","method","DeleteDirectoryRegistration","DeleteServicePrincipalName","DeleteTemplate","DeleteTemplateGroupAccessControlEntry","GetConnector","Connector","Arn","CertificateEnrollmentPolicyServerEndpoint","CreatedAt","Status","StatusReason","UpdatedAt","GetDirectoryRegistration","DirectoryRegistration","GetServicePrincipalName","ServicePrincipalName","GetTemplate","Template","ObjectIdentifier","PolicySchema","Revision","GetTemplateGroupAccessControlEntry","AccessControlEntry","ListConnectors","MaxResults","NextToken","Connectors","member","ListDirectoryRegistrations","DirectoryRegistrations","ListServicePrincipalNames","ServicePrincipalNames","ListTagsForResource","ResourceArn","ListTemplateGroupAccessControlEntries","AccessControlEntries","ListTemplates","Templates","TagResource","UntagResource","TagKeys","UpdateTemplate","ReenrollAllCertificateHolders","UpdateTemplateGroupAccessControlEntry","shapes","S5","key","value","S7","SecurityGroupIds","Sh","TemplateV2","CertificateValidity","EnrollmentFlags","EnableKeyReuseOnNtTokenKeysetStorageFull","IncludeSymmetricAlgorithms","NoSecurityExtension","RemoveInvalidCertificateFromPersonalStore","UserInteractionRequired","Extensions","ApplicationPolicies","KeyUsage","GeneralFlags","AutoEnrollment","MachineType","PrivateKeyAttributes","CryptoProviders","KeySpec","MinimalKeyLength","PrivateKeyFlags","ClientVersion","ExportableKey","StrongKeyProtectionRequired","SubjectNameFlags","RequireCommonName","RequireDirectoryPath","RequireDnsAsCn","RequireEmail","SanRequireDirectoryGuid","SanRequireDns","SanRequireDomainDns","SanRequireEmail","SanRequireSpn","SanRequireUpn","SupersededTemplates","TemplateV3","HashAlgorithm","Algorithm","KeyUsageProperty","RequireAlternateSignatureAlgorithm","TemplateV4","RequireSameKeyRenewal","UseLegacyProvider","union","Sj","RenewalPeriod","ValidityPeriod","Sk","Period","PeriodType","Sq","Critical","Policies","PolicyObjectIdentifier","PolicyType","Sv","UsageFlags","DataEncipherment","DigitalSignature","KeyAgreement","KeyEncipherment","NonRepudiation","Sz","S16","S1f","PropertyFlags","Decrypt","Sign","PropertyType","S1y","AutoEnroll","Enroll","S2r","MajorRevision","MinorRevision"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,kBAFR;AAGRC,UAAAA,WAAW,EAAE,KAHL;AAIRC,UAAAA,QAAQ,EAAE,WAJF;AAKRC,UAAAA,eAAe,EAAE,gBALT;AAMRC,UAAAA,SAAS,EAAE,kBANH;AAORC,UAAAA,gBAAgB,EAAE,IAPV;AAQRC,UAAAA,WAAW,EAAE,kBARL;AASRC,UAAAA,GAAG,EAAE;AATG,SAFG;AAabC,QAAAA,UAAU,EAAE;AACVC,UAAAA,eAAe,EAAE;AACfC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,aADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADS;AAKfC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,yBADQ,EAER,aAFQ,EAGR,gBAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,uBAAuB,EAAE,EADlB;AAEPC,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBAFN;AAKPC,gBAAAA,WAAW,EAAE,EALN;AAMPC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH,iBANC;AASPC,gBAAAA,cAAc,EAAE;AACdD,kBAAAA,KAAK,EAAE;AADO;AATT;AAPJ,aALQ;AA0BfE,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPS,gBAAAA,YAAY,EAAE;AADP;AAFH;AA1BO,WADP;AAkCVC,UAAAA,2BAA2B,EAAE;AAC3BhB,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,yBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADqB;AAK3BC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPE,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBADN;AAIPC,gBAAAA,WAAW,EAAE,EAJN;AAKPC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH;AALC;AALJ,aALoB;AAoB3BE,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPW,gBAAAA,wBAAwB,EAAE;AADnB;AAFH;AApBmB,WAlCnB;AA6DVC,UAAAA,0BAA0B,EAAE;AAC1BlB,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,yFADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADoB;AAK1BC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,EAER,0BAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPE,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBADN;AAIPM,gBAAAA,YAAY,EAAE;AACZI,kBAAAA,QAAQ,EAAE,KADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF,iBAJP;AAQPH,gBAAAA,wBAAwB,EAAE;AACxBE,kBAAAA,QAAQ,EAAE,KADc;AAExBC,kBAAAA,YAAY,EAAE;AAFU;AARnB;AANJ,aALmB;AAyB1BC,YAAAA,UAAU,EAAE;AAzBc,WA7DlB;AAwFVC,UAAAA,cAAc,EAAE;AACdtB,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,YADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADQ;AAKdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,EAER,YAFQ,EAGR,MAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPE,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBADN;AAIPM,gBAAAA,YAAY,EAAE,EAJP;AAKPQ,gBAAAA,UAAU,EAAE;AACVX,kBAAAA,KAAK,EAAE;AADG,iBALL;AAQPY,gBAAAA,IAAI,EAAE,EARC;AASPb,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH;AATC;AAPJ,aALO;AA0BdE,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmB,gBAAAA,WAAW,EAAE;AADN;AAFH;AA1BM,WAxFN;AAyHVC,UAAAA,qCAAqC,EAAE;AACrC1B,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,+CADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aAD+B;AAKrCC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,EAER,kBAFQ,EAGR,yBAHQ,EAIR,aAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPqB,gBAAAA,YAAY,EAAE;AACZf,kBAAAA,KAAK,EAAE;AADK,iBADP;AAIPJ,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBAJN;AAOPmB,gBAAAA,gBAAgB,EAAE,EAPX;AAQPC,gBAAAA,uBAAuB,EAAE,EARlB;AASPJ,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AATN;AARJ,aAL8B;AA4BrCC,YAAAA,UAAU,EAAE;AA5ByB,WAzH7B;AAuJVS,UAAAA,eAAe,EAAE;AACf9B,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,QADJ;AAEJ9B,cAAAA,UAAU,EAAE,4BAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADS;AAMfC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPS,gBAAAA,YAAY,EAAE;AACZI,kBAAAA,QAAQ,EAAE,KADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF;AADP;AALJ,aANQ;AAkBfC,YAAAA,UAAU,EAAE;AAlBG,WAvJP;AA2KVW,UAAAA,2BAA2B,EAAE;AAC3BhC,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,QADJ;AAEJ9B,cAAAA,UAAU,EAAE,oDAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADqB;AAM3BC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,0BADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPW,gBAAAA,wBAAwB,EAAE;AACxBE,kBAAAA,QAAQ,EAAE,KADc;AAExBC,kBAAAA,YAAY,EAAE;AAFU;AADnB;AALJ,aANoB;AAkB3BC,YAAAA,UAAU,EAAE;AAlBe,WA3KnB;AA+LVY,UAAAA,0BAA0B,EAAE;AAC1BjC,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,QADJ;AAEJ9B,cAAAA,UAAU,EAAE,yFAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADoB;AAM1BC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,EAER,0BAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPS,gBAAAA,YAAY,EAAE;AACZI,kBAAAA,QAAQ,EAAE,KADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF,iBADP;AAKPH,gBAAAA,wBAAwB,EAAE;AACxBE,kBAAAA,QAAQ,EAAE,KADc;AAExBC,kBAAAA,YAAY,EAAE;AAFU;AALnB;AANJ,aANmB;AAuB1BC,YAAAA,UAAU,EAAE;AAvBc,WA/LlB;AAwNVa,UAAAA,cAAc,EAAE;AACdlC,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,QADJ;AAEJ9B,cAAAA,UAAU,EAAE,0BAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADQ;AAMdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmB,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AADN;AALJ,aANO;AAkBdC,YAAAA,UAAU,EAAE;AAlBE,WAxNN;AA4OVc,UAAAA,qCAAqC,EAAE;AACrCnC,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,QADJ;AAEJ9B,cAAAA,UAAU,EAAE,yEAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aAD+B;AAMrCC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,yBADQ,EAER,aAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPuB,gBAAAA,uBAAuB,EAAE;AACvBV,kBAAAA,QAAQ,EAAE,KADa;AAEvBC,kBAAAA,YAAY,EAAE;AAFS,iBADlB;AAKPK,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AALN;AANJ,aAN8B;AAuBrCC,YAAAA,UAAU,EAAE;AAvByB,WA5O7B;AAqQVe,UAAAA,YAAY,EAAE;AACZpC,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,4BAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADM;AAMZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPS,gBAAAA,YAAY,EAAE;AACZI,kBAAAA,QAAQ,EAAE,KADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF;AADP;AALJ,aANK;AAkBZN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP+B,gBAAAA,SAAS,EAAE;AACTjC,kBAAAA,IAAI,EAAE,WADG;AAETE,kBAAAA,OAAO,EAAE;AACPgC,oBAAAA,GAAG,EAAE,EADE;AAEP/B,oBAAAA,uBAAuB,EAAE,EAFlB;AAGPgC,oBAAAA,yCAAyC,EAAE,EAHpC;AAIPC,oBAAAA,SAAS,EAAE;AACTpC,sBAAAA,IAAI,EAAE;AADG,qBAJJ;AAOPM,oBAAAA,WAAW,EAAE,EAPN;AAQP+B,oBAAAA,MAAM,EAAE,EARD;AASPC,oBAAAA,YAAY,EAAE,EATP;AAUPC,oBAAAA,SAAS,EAAE;AACTvC,sBAAAA,IAAI,EAAE;AADG,qBAVJ;AAaPS,oBAAAA,cAAc,EAAE;AACdD,sBAAAA,KAAK,EAAE;AADO;AAbT;AAFA;AADJ;AAFH;AAlBI,WArQJ;AAiTVgC,UAAAA,wBAAwB,EAAE;AACxB5C,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,oDAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADkB;AAMxBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,0BADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPW,gBAAAA,wBAAwB,EAAE;AACxBE,kBAAAA,QAAQ,EAAE,KADc;AAExBC,kBAAAA,YAAY,EAAE;AAFU;AADnB;AALJ,aANiB;AAkBxBN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPuC,gBAAAA,qBAAqB,EAAE;AACrBzC,kBAAAA,IAAI,EAAE,WADe;AAErBE,kBAAAA,OAAO,EAAE;AACPgC,oBAAAA,GAAG,EAAE,EADE;AAEPE,oBAAAA,SAAS,EAAE;AACTpC,sBAAAA,IAAI,EAAE;AADG,qBAFJ;AAKPM,oBAAAA,WAAW,EAAE,EALN;AAMP+B,oBAAAA,MAAM,EAAE,EAND;AAOPC,oBAAAA,YAAY,EAAE,EAPP;AAQPC,oBAAAA,SAAS,EAAE;AACTvC,sBAAAA,IAAI,EAAE;AADG;AARJ;AAFY;AADhB;AAFH;AAlBgB,WAjThB;AAwVV0C,UAAAA,uBAAuB,EAAE;AACvB9C,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,yFAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADiB;AAMvBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,EAER,0BAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPS,gBAAAA,YAAY,EAAE;AACZI,kBAAAA,QAAQ,EAAE,KADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF,iBADP;AAKPH,gBAAAA,wBAAwB,EAAE;AACxBE,kBAAAA,QAAQ,EAAE,KADc;AAExBC,kBAAAA,YAAY,EAAE;AAFU;AALnB;AANJ,aANgB;AAuBvBN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPyC,gBAAAA,oBAAoB,EAAE;AACpB3C,kBAAAA,IAAI,EAAE,WADc;AAEpBE,kBAAAA,OAAO,EAAE;AACPS,oBAAAA,YAAY,EAAE,EADP;AAEPyB,oBAAAA,SAAS,EAAE;AACTpC,sBAAAA,IAAI,EAAE;AADG,qBAFJ;AAKPa,oBAAAA,wBAAwB,EAAE,EALnB;AAMPwB,oBAAAA,MAAM,EAAE,EAND;AAOPC,oBAAAA,YAAY,EAAE,EAPP;AAQPC,oBAAAA,SAAS,EAAE;AACTvC,sBAAAA,IAAI,EAAE;AADG;AARJ;AAFW;AADf;AAFH;AAvBe,WAxVf;AAoYV4C,UAAAA,WAAW,EAAE;AACXhD,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,0BAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADK;AAMXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmB,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AADN;AALJ,aANI;AAkBXN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP2C,gBAAAA,QAAQ,EAAE;AACR7C,kBAAAA,IAAI,EAAE,WADE;AAERE,kBAAAA,OAAO,EAAE;AACPgC,oBAAAA,GAAG,EAAE,EADE;AAEPvB,oBAAAA,YAAY,EAAE,EAFP;AAGPyB,oBAAAA,SAAS,EAAE;AACTpC,sBAAAA,IAAI,EAAE;AADG,qBAHJ;AAMPmB,oBAAAA,UAAU,EAAE;AACVX,sBAAAA,KAAK,EAAE;AADG,qBANL;AASPY,oBAAAA,IAAI,EAAE,EATC;AAUP0B,oBAAAA,gBAAgB,EAAE,EAVX;AAWPC,oBAAAA,YAAY,EAAE;AACZ/C,sBAAAA,IAAI,EAAE;AADM,qBAXP;AAcPgD,oBAAAA,QAAQ,EAAE;AACRxC,sBAAAA,KAAK,EAAE;AADC,qBAdH;AAiBP6B,oBAAAA,MAAM,EAAE,EAjBD;AAkBPE,oBAAAA,SAAS,EAAE;AACTvC,sBAAAA,IAAI,EAAE;AADG;AAlBJ;AAFD;AADH;AAFH;AAlBG,WApYH;AAqbViD,UAAAA,kCAAkC,EAAE;AAClCrD,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,yEAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aAD4B;AAMlCC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,yBADQ,EAER,aAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPuB,gBAAAA,uBAAuB,EAAE;AACvBV,kBAAAA,QAAQ,EAAE,KADa;AAEvBC,kBAAAA,YAAY,EAAE;AAFS,iBADlB;AAKPK,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AALN;AANJ,aAN2B;AAuBlCN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPgD,gBAAAA,kBAAkB,EAAE;AAClBlD,kBAAAA,IAAI,EAAE,WADY;AAElBE,kBAAAA,OAAO,EAAE;AACPqB,oBAAAA,YAAY,EAAE;AACZf,sBAAAA,KAAK,EAAE;AADK,qBADP;AAIP4B,oBAAAA,SAAS,EAAE;AACTpC,sBAAAA,IAAI,EAAE;AADG,qBAJJ;AAOPwB,oBAAAA,gBAAgB,EAAE,EAPX;AAQPC,oBAAAA,uBAAuB,EAAE,EARlB;AASPJ,oBAAAA,WAAW,EAAE,EATN;AAUPkB,oBAAAA,SAAS,EAAE;AACTvC,sBAAAA,IAAI,EAAE;AADG;AAVJ;AAFS;AADb;AAFH;AAvB0B,WArb1B;AAmeVmD,UAAAA,cAAc,EAAE;AACdvD,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,aAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADQ;AAMdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPkD,gBAAAA,UAAU,EAAE;AACVrC,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBADL;AAMPqD,gBAAAA,SAAS,EAAE;AACTtC,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AANJ;AAFJ,aANO;AAoBdN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPoD,gBAAAA,UAAU,EAAE;AACVtD,kBAAAA,IAAI,EAAE,MADI;AAEVuD,kBAAAA,MAAM,EAAE;AACNvD,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPgC,sBAAAA,GAAG,EAAE,EADE;AAEP/B,sBAAAA,uBAAuB,EAAE,EAFlB;AAGPgC,sBAAAA,yCAAyC,EAAE,EAHpC;AAIPC,sBAAAA,SAAS,EAAE;AACTpC,wBAAAA,IAAI,EAAE;AADG,uBAJJ;AAOPM,sBAAAA,WAAW,EAAE,EAPN;AAQP+B,sBAAAA,MAAM,EAAE,EARD;AASPC,sBAAAA,YAAY,EAAE,EATP;AAUPC,sBAAAA,SAAS,EAAE;AACTvC,wBAAAA,IAAI,EAAE;AADG,uBAVJ;AAaPS,sBAAAA,cAAc,EAAE;AACdD,wBAAAA,KAAK,EAAE;AADO;AAbT;AAFH;AAFE,iBADL;AAwBP6C,gBAAAA,SAAS,EAAE;AAxBJ;AAFH;AApBM,WAneN;AAqhBVG,UAAAA,0BAA0B,EAAE;AAC1B5D,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,yBAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADoB;AAM1BC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPkD,gBAAAA,UAAU,EAAE;AACVrC,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBADL;AAMPqD,gBAAAA,SAAS,EAAE;AACTtC,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AANJ;AAFJ,aANmB;AAoB1BN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPuD,gBAAAA,sBAAsB,EAAE;AACtBzD,kBAAAA,IAAI,EAAE,MADgB;AAEtBuD,kBAAAA,MAAM,EAAE;AACNvD,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPgC,sBAAAA,GAAG,EAAE,EADE;AAEPE,sBAAAA,SAAS,EAAE;AACTpC,wBAAAA,IAAI,EAAE;AADG,uBAFJ;AAKPM,sBAAAA,WAAW,EAAE,EALN;AAMP+B,sBAAAA,MAAM,EAAE,EAND;AAOPC,sBAAAA,YAAY,EAAE,EAPP;AAQPC,sBAAAA,SAAS,EAAE;AACTvC,wBAAAA,IAAI,EAAE;AADG;AARJ;AAFH;AAFc,iBADjB;AAmBPqD,gBAAAA,SAAS,EAAE;AAnBJ;AAFH;AApBkB,WArhBlB;AAkkBVK,UAAAA,yBAAyB,EAAE;AACzB9D,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,0EAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADmB;AAMzBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,0BADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPW,gBAAAA,wBAAwB,EAAE;AACxBE,kBAAAA,QAAQ,EAAE,KADc;AAExBC,kBAAAA,YAAY,EAAE;AAFU,iBADnB;AAKPoC,gBAAAA,UAAU,EAAE;AACVrC,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUPqD,gBAAAA,SAAS,EAAE;AACTtC,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAVJ;AALJ,aANkB;AA2BzBN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmD,gBAAAA,SAAS,EAAE,EADJ;AAEPM,gBAAAA,qBAAqB,EAAE;AACrB3D,kBAAAA,IAAI,EAAE,MADe;AAErBuD,kBAAAA,MAAM,EAAE;AACNvD,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPS,sBAAAA,YAAY,EAAE,EADP;AAEPyB,sBAAAA,SAAS,EAAE;AACTpC,wBAAAA,IAAI,EAAE;AADG,uBAFJ;AAKPa,sBAAAA,wBAAwB,EAAE,EALnB;AAMPwB,sBAAAA,MAAM,EAAE,EAND;AAOPC,sBAAAA,YAAY,EAAE,EAPP;AAQPC,sBAAAA,SAAS,EAAE;AACTvC,wBAAAA,IAAI,EAAE;AADG;AARJ;AAFH;AAFa;AAFhB;AAFH;AA3BiB,WAlkBjB;AAsnBV4D,UAAAA,mBAAmB,EAAE;AACnBhE,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,qBAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADa;AAMnBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP2D,gBAAAA,WAAW,EAAE;AACX9C,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AADN;AALJ,aANY;AAkBnBN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPK,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH;AADC;AAFH;AAlBW,WAtnBX;AAipBVsD,UAAAA,qCAAqC,EAAE;AACrClE,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,+CAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aAD+B;AAMrCC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPkD,gBAAAA,UAAU,EAAE;AACVrC,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBADL;AAMPqD,gBAAAA,SAAS,EAAE;AACTtC,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBANJ;AAUPK,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AAVN;AALJ,aAN8B;AA2BrCN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP6D,gBAAAA,oBAAoB,EAAE;AACpB/D,kBAAAA,IAAI,EAAE,MADc;AAEpBuD,kBAAAA,MAAM,EAAE;AACNvD,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPqB,sBAAAA,YAAY,EAAE;AACZf,wBAAAA,KAAK,EAAE;AADK,uBADP;AAIP4B,sBAAAA,SAAS,EAAE;AACTpC,wBAAAA,IAAI,EAAE;AADG,uBAJJ;AAOPwB,sBAAAA,gBAAgB,EAAE,EAPX;AAQPC,sBAAAA,uBAAuB,EAAE,EARlB;AASPJ,sBAAAA,WAAW,EAAE,EATN;AAUPkB,sBAAAA,SAAS,EAAE;AACTvC,wBAAAA,IAAI,EAAE;AADG;AAVJ;AAFH;AAFY,iBADf;AAqBPqD,gBAAAA,SAAS,EAAE;AArBJ;AAFH;AA3B6B,WAjpB7B;AAusBVW,UAAAA,aAAa,EAAE;AACbpE,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,KADJ;AAEJ9B,cAAAA,UAAU,EAAE,YAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADO;AAMbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPS,gBAAAA,YAAY,EAAE;AACZI,kBAAAA,QAAQ,EAAE,aADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF,iBADP;AAKPoC,gBAAAA,UAAU,EAAE;AACVrC,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUPqD,gBAAAA,SAAS,EAAE;AACTtC,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAVJ;AALJ,aANM;AA2BbN,YAAAA,MAAM,EAAE;AACNV,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmD,gBAAAA,SAAS,EAAE,EADJ;AAEPY,gBAAAA,SAAS,EAAE;AACTjE,kBAAAA,IAAI,EAAE,MADG;AAETuD,kBAAAA,MAAM,EAAE;AACNvD,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPgC,sBAAAA,GAAG,EAAE,EADE;AAEPvB,sBAAAA,YAAY,EAAE,EAFP;AAGPyB,sBAAAA,SAAS,EAAE;AACTpC,wBAAAA,IAAI,EAAE;AADG,uBAHJ;AAMPmB,sBAAAA,UAAU,EAAE;AACVX,wBAAAA,KAAK,EAAE;AADG,uBANL;AASPY,sBAAAA,IAAI,EAAE,EATC;AAUP0B,sBAAAA,gBAAgB,EAAE,EAVX;AAWPC,sBAAAA,YAAY,EAAE;AACZ/C,wBAAAA,IAAI,EAAE;AADM,uBAXP;AAcPgD,sBAAAA,QAAQ,EAAE;AACRxC,wBAAAA,KAAK,EAAE;AADC,uBAdH;AAiBP6B,sBAAAA,MAAM,EAAE,EAjBD;AAkBPE,sBAAAA,SAAS,EAAE;AACTvC,wBAAAA,IAAI,EAAE;AADG;AAlBJ;AAFH;AAFC;AAFJ;AAFH;AA3BK,WAvsBL;AAqwBVkE,UAAAA,WAAW,EAAE;AACXtE,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,qBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,MAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACP2D,gBAAAA,WAAW,EAAE;AACX9C,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPT,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH;AALC;AANJ;AALI,WArwBH;AA2xBV2D,UAAAA,aAAa,EAAE;AACbvE,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,QADJ;AAEJ9B,cAAAA,UAAU,EAAE,qBAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADO;AAMbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACP2D,gBAAAA,WAAW,EAAE;AACX9C,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPoD,gBAAAA,OAAO,EAAE;AACPrD,kBAAAA,QAAQ,EAAE,aADH;AAEPC,kBAAAA,YAAY,EAAE,SAFP;AAGPhB,kBAAAA,IAAI,EAAE,MAHC;AAIPuD,kBAAAA,MAAM,EAAE;AAJD;AALF;AANJ,aANM;AAyBbtC,YAAAA,UAAU,EAAE;AAzBC,WA3xBL;AAszBVoD,UAAAA,cAAc,EAAE;AACdzE,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,OADJ;AAEJ9B,cAAAA,UAAU,EAAE,0BAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADQ;AAMdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPiB,gBAAAA,UAAU,EAAE;AACVX,kBAAAA,KAAK,EAAE;AADG,iBADL;AAIP8D,gBAAAA,6BAA6B,EAAE;AAC7BtE,kBAAAA,IAAI,EAAE;AADuB,iBAJxB;AAOPqB,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AAPN;AALJ;AANO,WAtzBN;AA+0BVuD,UAAAA,qCAAqC,EAAE;AACrC3E,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,MAAM,EAAE,OADJ;AAEJ9B,cAAAA,UAAU,EAAE,yEAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aAD+B;AAMrCC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,yBADQ,EAER,aAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPqB,gBAAAA,YAAY,EAAE;AACZf,kBAAAA,KAAK,EAAE;AADK,iBADP;AAIPgB,gBAAAA,gBAAgB,EAAE,EAJX;AAKPC,gBAAAA,uBAAuB,EAAE;AACvBV,kBAAAA,QAAQ,EAAE,KADa;AAEvBC,kBAAAA,YAAY,EAAE;AAFS,iBALlB;AASPK,gBAAAA,WAAW,EAAE;AACXN,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AATN;AANJ;AAN8B;AA/0B7B,SAbC;AAy3BbwD,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACFzE,YAAAA,IAAI,EAAE,KADJ;AAEF0E,YAAAA,GAAG,EAAE,EAFH;AAGFC,YAAAA,KAAK,EAAE;AAHL,WADE;AAMNC,UAAAA,EAAE,EAAE;AACF5E,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,kBADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACP2E,cAAAA,gBAAgB,EAAE;AAChB7E,gBAAAA,IAAI,EAAE,MADU;AAEhBuD,gBAAAA,MAAM,EAAE;AAFQ;AADX;AALP,WANE;AAkBNuB,UAAAA,EAAE,EAAE;AACF9E,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACP6E,cAAAA,UAAU,EAAE;AACV/E,gBAAAA,IAAI,EAAE,WADI;AAEVC,gBAAAA,QAAQ,EAAE,CACR,qBADQ,EAER,iBAFQ,EAGR,YAHQ,EAIR,cAJQ,EAKR,sBALQ,EAMR,iBANQ,EAOR,kBAPQ,CAFA;AAWVC,gBAAAA,OAAO,EAAE;AACP8E,kBAAAA,mBAAmB,EAAE;AACnBxE,oBAAAA,KAAK,EAAE;AADY,mBADd;AAIPyE,kBAAAA,eAAe,EAAE;AACfjF,oBAAAA,IAAI,EAAE,WADS;AAEfE,oBAAAA,OAAO,EAAE;AACPgF,sBAAAA,wCAAwC,EAAE;AACxClF,wBAAAA,IAAI,EAAE;AADkC,uBADnC;AAIPmF,sBAAAA,0BAA0B,EAAE;AAC1BnF,wBAAAA,IAAI,EAAE;AADoB,uBAJrB;AAOPoF,sBAAAA,mBAAmB,EAAE;AACnBpF,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPqF,sBAAAA,yCAAyC,EAAE;AACzCrF,wBAAAA,IAAI,EAAE;AADmC,uBAVpC;AAaPsF,sBAAAA,uBAAuB,EAAE;AACvBtF,wBAAAA,IAAI,EAAE;AADiB;AAblB;AAFM,mBAJV;AAwBPuF,kBAAAA,UAAU,EAAE;AACVvF,oBAAAA,IAAI,EAAE,WADI;AAEVC,oBAAAA,QAAQ,EAAE,CACR,UADQ,CAFA;AAKVC,oBAAAA,OAAO,EAAE;AACPsF,sBAAAA,mBAAmB,EAAE;AACnBhF,wBAAAA,KAAK,EAAE;AADY,uBADd;AAIPiF,sBAAAA,QAAQ,EAAE;AACRjF,wBAAAA,KAAK,EAAE;AADC;AAJH;AALC,mBAxBL;AAsCPkF,kBAAAA,YAAY,EAAE;AACZ1F,oBAAAA,IAAI,EAAE,WADM;AAEZE,oBAAAA,OAAO,EAAE;AACPyF,sBAAAA,cAAc,EAAE;AACd3F,wBAAAA,IAAI,EAAE;AADQ,uBADT;AAIP4F,sBAAAA,WAAW,EAAE;AACX5F,wBAAAA,IAAI,EAAE;AADK;AAJN;AAFG,mBAtCP;AAiDP6F,kBAAAA,oBAAoB,EAAE;AACpB7F,oBAAAA,IAAI,EAAE,WADc;AAEpBC,oBAAAA,QAAQ,EAAE,CACR,SADQ,EAER,kBAFQ,CAFU;AAMpBC,oBAAAA,OAAO,EAAE;AACP4F,sBAAAA,eAAe,EAAE;AACftF,wBAAAA,KAAK,EAAE;AADQ,uBADV;AAIPuF,sBAAAA,OAAO,EAAE,EAJF;AAKPC,sBAAAA,gBAAgB,EAAE;AAChBhG,wBAAAA,IAAI,EAAE;AADU;AALX;AANW,mBAjDf;AAiEPiG,kBAAAA,eAAe,EAAE;AACfjG,oBAAAA,IAAI,EAAE,WADS;AAEfC,oBAAAA,QAAQ,EAAE,CACR,eADQ,CAFK;AAKfC,oBAAAA,OAAO,EAAE;AACPgG,sBAAAA,aAAa,EAAE,EADR;AAEPC,sBAAAA,aAAa,EAAE;AACbnG,wBAAAA,IAAI,EAAE;AADO,uBAFR;AAKPoG,sBAAAA,2BAA2B,EAAE;AAC3BpG,wBAAAA,IAAI,EAAE;AADqB;AALtB;AALM,mBAjEV;AAgFPqG,kBAAAA,gBAAgB,EAAE;AAChBrG,oBAAAA,IAAI,EAAE,WADU;AAEhBE,oBAAAA,OAAO,EAAE;AACPoG,sBAAAA,iBAAiB,EAAE;AACjBtG,wBAAAA,IAAI,EAAE;AADW,uBADZ;AAIPuG,sBAAAA,oBAAoB,EAAE;AACpBvG,wBAAAA,IAAI,EAAE;AADc,uBAJf;AAOPwG,sBAAAA,cAAc,EAAE;AACdxG,wBAAAA,IAAI,EAAE;AADQ,uBAPT;AAUPyG,sBAAAA,YAAY,EAAE;AACZzG,wBAAAA,IAAI,EAAE;AADM,uBAVP;AAaP0G,sBAAAA,uBAAuB,EAAE;AACvB1G,wBAAAA,IAAI,EAAE;AADiB,uBAblB;AAgBP2G,sBAAAA,aAAa,EAAE;AACb3G,wBAAAA,IAAI,EAAE;AADO,uBAhBR;AAmBP4G,sBAAAA,mBAAmB,EAAE;AACnB5G,wBAAAA,IAAI,EAAE;AADa,uBAnBd;AAsBP6G,sBAAAA,eAAe,EAAE;AACf7G,wBAAAA,IAAI,EAAE;AADS,uBAtBV;AAyBP8G,sBAAAA,aAAa,EAAE;AACb9G,wBAAAA,IAAI,EAAE;AADO,uBAzBR;AA4BP+G,sBAAAA,aAAa,EAAE;AACb/G,wBAAAA,IAAI,EAAE;AADO;AA5BR;AAFO,mBAhFX;AAmHPgH,kBAAAA,mBAAmB,EAAE;AACnBxG,oBAAAA,KAAK,EAAE;AADY;AAnHd;AAXC,eADL;AAoIPyG,cAAAA,UAAU,EAAE;AACVjH,gBAAAA,IAAI,EAAE,WADI;AAEVC,gBAAAA,QAAQ,EAAE,CACR,qBADQ,EAER,iBAFQ,EAGR,YAHQ,EAIR,cAJQ,EAKR,eALQ,EAMR,sBANQ,EAOR,iBAPQ,EAQR,kBARQ,CAFA;AAYVC,gBAAAA,OAAO,EAAE;AACP8E,kBAAAA,mBAAmB,EAAE;AACnBxE,oBAAAA,KAAK,EAAE;AADY,mBADd;AAIPyE,kBAAAA,eAAe,EAAE;AACfjF,oBAAAA,IAAI,EAAE,WADS;AAEfE,oBAAAA,OAAO,EAAE;AACPgF,sBAAAA,wCAAwC,EAAE;AACxClF,wBAAAA,IAAI,EAAE;AADkC,uBADnC;AAIPmF,sBAAAA,0BAA0B,EAAE;AAC1BnF,wBAAAA,IAAI,EAAE;AADoB,uBAJrB;AAOPoF,sBAAAA,mBAAmB,EAAE;AACnBpF,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPqF,sBAAAA,yCAAyC,EAAE;AACzCrF,wBAAAA,IAAI,EAAE;AADmC,uBAVpC;AAaPsF,sBAAAA,uBAAuB,EAAE;AACvBtF,wBAAAA,IAAI,EAAE;AADiB;AAblB;AAFM,mBAJV;AAwBPuF,kBAAAA,UAAU,EAAE;AACVvF,oBAAAA,IAAI,EAAE,WADI;AAEVC,oBAAAA,QAAQ,EAAE,CACR,UADQ,CAFA;AAKVC,oBAAAA,OAAO,EAAE;AACPsF,sBAAAA,mBAAmB,EAAE;AACnBhF,wBAAAA,KAAK,EAAE;AADY,uBADd;AAIPiF,sBAAAA,QAAQ,EAAE;AACRjF,wBAAAA,KAAK,EAAE;AADC;AAJH;AALC,mBAxBL;AAsCPkF,kBAAAA,YAAY,EAAE;AACZ1F,oBAAAA,IAAI,EAAE,WADM;AAEZE,oBAAAA,OAAO,EAAE;AACPyF,sBAAAA,cAAc,EAAE;AACd3F,wBAAAA,IAAI,EAAE;AADQ,uBADT;AAIP4F,sBAAAA,WAAW,EAAE;AACX5F,wBAAAA,IAAI,EAAE;AADK;AAJN;AAFG,mBAtCP;AAiDPkH,kBAAAA,aAAa,EAAE,EAjDR;AAkDPrB,kBAAAA,oBAAoB,EAAE;AACpB7F,oBAAAA,IAAI,EAAE,WADc;AAEpBC,oBAAAA,QAAQ,EAAE,CACR,WADQ,EAER,SAFQ,EAGR,kBAHQ,EAIR,kBAJQ,CAFU;AAQpBC,oBAAAA,OAAO,EAAE;AACPiH,sBAAAA,SAAS,EAAE,EADJ;AAEPrB,sBAAAA,eAAe,EAAE;AACftF,wBAAAA,KAAK,EAAE;AADQ,uBAFV;AAKPuF,sBAAAA,OAAO,EAAE,EALF;AAMPqB,sBAAAA,gBAAgB,EAAE;AAChB5G,wBAAAA,KAAK,EAAE;AADS,uBANX;AASPwF,sBAAAA,gBAAgB,EAAE;AAChBhG,wBAAAA,IAAI,EAAE;AADU;AATX;AARW,mBAlDf;AAwEPiG,kBAAAA,eAAe,EAAE;AACfjG,oBAAAA,IAAI,EAAE,WADS;AAEfC,oBAAAA,QAAQ,EAAE,CACR,eADQ,CAFK;AAKfC,oBAAAA,OAAO,EAAE;AACPgG,sBAAAA,aAAa,EAAE,EADR;AAEPC,sBAAAA,aAAa,EAAE;AACbnG,wBAAAA,IAAI,EAAE;AADO,uBAFR;AAKPqH,sBAAAA,kCAAkC,EAAE;AAClCrH,wBAAAA,IAAI,EAAE;AAD4B,uBAL7B;AAQPoG,sBAAAA,2BAA2B,EAAE;AAC3BpG,wBAAAA,IAAI,EAAE;AADqB;AARtB;AALM,mBAxEV;AA0FPqG,kBAAAA,gBAAgB,EAAE;AAChBrG,oBAAAA,IAAI,EAAE,WADU;AAEhBE,oBAAAA,OAAO,EAAE;AACPoG,sBAAAA,iBAAiB,EAAE;AACjBtG,wBAAAA,IAAI,EAAE;AADW,uBADZ;AAIPuG,sBAAAA,oBAAoB,EAAE;AACpBvG,wBAAAA,IAAI,EAAE;AADc,uBAJf;AAOPwG,sBAAAA,cAAc,EAAE;AACdxG,wBAAAA,IAAI,EAAE;AADQ,uBAPT;AAUPyG,sBAAAA,YAAY,EAAE;AACZzG,wBAAAA,IAAI,EAAE;AADM,uBAVP;AAaP0G,sBAAAA,uBAAuB,EAAE;AACvB1G,wBAAAA,IAAI,EAAE;AADiB,uBAblB;AAgBP2G,sBAAAA,aAAa,EAAE;AACb3G,wBAAAA,IAAI,EAAE;AADO,uBAhBR;AAmBP4G,sBAAAA,mBAAmB,EAAE;AACnB5G,wBAAAA,IAAI,EAAE;AADa,uBAnBd;AAsBP6G,sBAAAA,eAAe,EAAE;AACf7G,wBAAAA,IAAI,EAAE;AADS,uBAtBV;AAyBP8G,sBAAAA,aAAa,EAAE;AACb9G,wBAAAA,IAAI,EAAE;AADO,uBAzBR;AA4BP+G,sBAAAA,aAAa,EAAE;AACb/G,wBAAAA,IAAI,EAAE;AADO;AA5BR;AAFO,mBA1FX;AA6HPgH,kBAAAA,mBAAmB,EAAE;AACnBxG,oBAAAA,KAAK,EAAE;AADY;AA7Hd;AAZC,eApIL;AAkRP8G,cAAAA,UAAU,EAAE;AACVtH,gBAAAA,IAAI,EAAE,WADI;AAEVC,gBAAAA,QAAQ,EAAE,CACR,qBADQ,EAER,iBAFQ,EAGR,YAHQ,EAIR,cAJQ,EAKR,sBALQ,EAMR,iBANQ,EAOR,kBAPQ,CAFA;AAWVC,gBAAAA,OAAO,EAAE;AACP8E,kBAAAA,mBAAmB,EAAE;AACnBxE,oBAAAA,KAAK,EAAE;AADY,mBADd;AAIPyE,kBAAAA,eAAe,EAAE;AACfjF,oBAAAA,IAAI,EAAE,WADS;AAEfE,oBAAAA,OAAO,EAAE;AACPgF,sBAAAA,wCAAwC,EAAE;AACxClF,wBAAAA,IAAI,EAAE;AADkC,uBADnC;AAIPmF,sBAAAA,0BAA0B,EAAE;AAC1BnF,wBAAAA,IAAI,EAAE;AADoB,uBAJrB;AAOPoF,sBAAAA,mBAAmB,EAAE;AACnBpF,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPqF,sBAAAA,yCAAyC,EAAE;AACzCrF,wBAAAA,IAAI,EAAE;AADmC,uBAVpC;AAaPsF,sBAAAA,uBAAuB,EAAE;AACvBtF,wBAAAA,IAAI,EAAE;AADiB;AAblB;AAFM,mBAJV;AAwBPuF,kBAAAA,UAAU,EAAE;AACVvF,oBAAAA,IAAI,EAAE,WADI;AAEVC,oBAAAA,QAAQ,EAAE,CACR,UADQ,CAFA;AAKVC,oBAAAA,OAAO,EAAE;AACPsF,sBAAAA,mBAAmB,EAAE;AACnBhF,wBAAAA,KAAK,EAAE;AADY,uBADd;AAIPiF,sBAAAA,QAAQ,EAAE;AACRjF,wBAAAA,KAAK,EAAE;AADC;AAJH;AALC,mBAxBL;AAsCPkF,kBAAAA,YAAY,EAAE;AACZ1F,oBAAAA,IAAI,EAAE,WADM;AAEZE,oBAAAA,OAAO,EAAE;AACPyF,sBAAAA,cAAc,EAAE;AACd3F,wBAAAA,IAAI,EAAE;AADQ,uBADT;AAIP4F,sBAAAA,WAAW,EAAE;AACX5F,wBAAAA,IAAI,EAAE;AADK;AAJN;AAFG,mBAtCP;AAiDPkH,kBAAAA,aAAa,EAAE,EAjDR;AAkDPrB,kBAAAA,oBAAoB,EAAE;AACpB7F,oBAAAA,IAAI,EAAE,WADc;AAEpBC,oBAAAA,QAAQ,EAAE,CACR,SADQ,EAER,kBAFQ,CAFU;AAMpBC,oBAAAA,OAAO,EAAE;AACPiH,sBAAAA,SAAS,EAAE,EADJ;AAEPrB,sBAAAA,eAAe,EAAE;AACftF,wBAAAA,KAAK,EAAE;AADQ,uBAFV;AAKPuF,sBAAAA,OAAO,EAAE,EALF;AAMPqB,sBAAAA,gBAAgB,EAAE;AAChB5G,wBAAAA,KAAK,EAAE;AADS,uBANX;AASPwF,sBAAAA,gBAAgB,EAAE;AAChBhG,wBAAAA,IAAI,EAAE;AADU;AATX;AANW,mBAlDf;AAsEPiG,kBAAAA,eAAe,EAAE;AACfjG,oBAAAA,IAAI,EAAE,WADS;AAEfC,oBAAAA,QAAQ,EAAE,CACR,eADQ,CAFK;AAKfC,oBAAAA,OAAO,EAAE;AACPgG,sBAAAA,aAAa,EAAE,EADR;AAEPC,sBAAAA,aAAa,EAAE;AACbnG,wBAAAA,IAAI,EAAE;AADO,uBAFR;AAKPqH,sBAAAA,kCAAkC,EAAE;AAClCrH,wBAAAA,IAAI,EAAE;AAD4B,uBAL7B;AAQPuH,sBAAAA,qBAAqB,EAAE;AACrBvH,wBAAAA,IAAI,EAAE;AADe,uBARhB;AAWPoG,sBAAAA,2BAA2B,EAAE;AAC3BpG,wBAAAA,IAAI,EAAE;AADqB,uBAXtB;AAcPwH,sBAAAA,iBAAiB,EAAE;AACjBxH,wBAAAA,IAAI,EAAE;AADW;AAdZ;AALM,mBAtEV;AA8FPqG,kBAAAA,gBAAgB,EAAE;AAChBrG,oBAAAA,IAAI,EAAE,WADU;AAEhBE,oBAAAA,OAAO,EAAE;AACPoG,sBAAAA,iBAAiB,EAAE;AACjBtG,wBAAAA,IAAI,EAAE;AADW,uBADZ;AAIPuG,sBAAAA,oBAAoB,EAAE;AACpBvG,wBAAAA,IAAI,EAAE;AADc,uBAJf;AAOPwG,sBAAAA,cAAc,EAAE;AACdxG,wBAAAA,IAAI,EAAE;AADQ,uBAPT;AAUPyG,sBAAAA,YAAY,EAAE;AACZzG,wBAAAA,IAAI,EAAE;AADM,uBAVP;AAaP0G,sBAAAA,uBAAuB,EAAE;AACvB1G,wBAAAA,IAAI,EAAE;AADiB,uBAblB;AAgBP2G,sBAAAA,aAAa,EAAE;AACb3G,wBAAAA,IAAI,EAAE;AADO,uBAhBR;AAmBP4G,sBAAAA,mBAAmB,EAAE;AACnB5G,wBAAAA,IAAI,EAAE;AADa,uBAnBd;AAsBP6G,sBAAAA,eAAe,EAAE;AACf7G,wBAAAA,IAAI,EAAE;AADS,uBAtBV;AAyBP8G,sBAAAA,aAAa,EAAE;AACb9G,wBAAAA,IAAI,EAAE;AADO,uBAzBR;AA4BP+G,sBAAAA,aAAa,EAAE;AACb/G,wBAAAA,IAAI,EAAE;AADO;AA5BR;AAFO,mBA9FX;AAiIPgH,kBAAAA,mBAAmB,EAAE;AACnBxG,oBAAAA,KAAK,EAAE;AADY;AAjId;AAXC;AAlRL,aAFP;AAsaFiH,YAAAA,KAAK,EAAE;AAtaL,WAlBE;AA0bNC,UAAAA,EAAE,EAAE;AACF1H,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,eADQ,EAER,gBAFQ,CAFR;AAMFC,YAAAA,OAAO,EAAE;AACPyH,cAAAA,aAAa,EAAE;AACbnH,gBAAAA,KAAK,EAAE;AADM,eADR;AAIPoH,cAAAA,cAAc,EAAE;AACdpH,gBAAAA,KAAK,EAAE;AADO;AAJT;AANP,WA1bE;AAycNqH,UAAAA,EAAE,EAAE;AACF7H,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,QADQ,EAER,YAFQ,CAFR;AAMFC,YAAAA,OAAO,EAAE;AACP4H,cAAAA,MAAM,EAAE;AACN9H,gBAAAA,IAAI,EAAE;AADA,eADD;AAIP+H,cAAAA,UAAU,EAAE;AAJL;AANP,WAzcE;AAsdNC,UAAAA,EAAE,EAAE;AACFhI,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,UADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACP+H,cAAAA,QAAQ,EAAE;AACRjI,gBAAAA,IAAI,EAAE;AADE,eADH;AAIPkI,cAAAA,QAAQ,EAAE;AACRlI,gBAAAA,IAAI,EAAE,MADE;AAERuD,gBAAAA,MAAM,EAAE;AACNvD,kBAAAA,IAAI,EAAE,WADA;AAENE,kBAAAA,OAAO,EAAE;AACPiI,oBAAAA,sBAAsB,EAAE,EADjB;AAEPC,oBAAAA,UAAU,EAAE;AAFL,mBAFH;AAMNX,kBAAAA,KAAK,EAAE;AAND;AAFA;AAJH;AALP,WAtdE;AA4eNY,UAAAA,EAAE,EAAE;AACFrI,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,YADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACP+H,cAAAA,QAAQ,EAAE;AACRjI,gBAAAA,IAAI,EAAE;AADE,eADH;AAIPsI,cAAAA,UAAU,EAAE;AACVtI,gBAAAA,IAAI,EAAE,WADI;AAEVE,gBAAAA,OAAO,EAAE;AACPqI,kBAAAA,gBAAgB,EAAE;AAChBvI,oBAAAA,IAAI,EAAE;AADU,mBADX;AAIPwI,kBAAAA,gBAAgB,EAAE;AAChBxI,oBAAAA,IAAI,EAAE;AADU,mBAJX;AAOPyI,kBAAAA,YAAY,EAAE;AACZzI,oBAAAA,IAAI,EAAE;AADM,mBAPP;AAUP0I,kBAAAA,eAAe,EAAE;AACf1I,oBAAAA,IAAI,EAAE;AADS,mBAVV;AAaP2I,kBAAAA,cAAc,EAAE;AACd3I,oBAAAA,IAAI,EAAE;AADQ;AAbT;AAFC;AAJL;AALP,WA5eE;AA2gBN4I,UAAAA,EAAE,EAAE;AACF5I,YAAAA,IAAI,EAAE,MADJ;AAEFuD,YAAAA,MAAM,EAAE;AAFN,WA3gBE;AA+gBNsF,UAAAA,GAAG,EAAE;AACH7I,YAAAA,IAAI,EAAE,MADH;AAEHuD,YAAAA,MAAM,EAAE;AAFL,WA/gBC;AAmhBNuF,UAAAA,GAAG,EAAE;AACH9I,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP6I,cAAAA,aAAa,EAAE;AACb/I,gBAAAA,IAAI,EAAE,WADO;AAEbE,gBAAAA,OAAO,EAAE;AACP8I,kBAAAA,OAAO,EAAE;AACPhJ,oBAAAA,IAAI,EAAE;AADC,mBADF;AAIPyI,kBAAAA,YAAY,EAAE;AACZzI,oBAAAA,IAAI,EAAE;AADM,mBAJP;AAOPiJ,kBAAAA,IAAI,EAAE;AACJjJ,oBAAAA,IAAI,EAAE;AADF;AAPC;AAFI,eADR;AAePkJ,cAAAA,YAAY,EAAE;AAfP,aAFN;AAmBHzB,YAAAA,KAAK,EAAE;AAnBJ,WAnhBC;AAwiBN0B,UAAAA,GAAG,EAAE;AACHnJ,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPkJ,cAAAA,UAAU,EAAE,EADL;AAEPC,cAAAA,MAAM,EAAE;AAFD;AAFN,WAxiBC;AA+iBNC,UAAAA,GAAG,EAAE;AACHtJ,YAAAA,IAAI,EAAE,WADH;AAEHC,YAAAA,QAAQ,EAAE,CACR,eADQ,EAER,eAFQ,CAFP;AAMHC,YAAAA,OAAO,EAAE;AACPqJ,cAAAA,aAAa,EAAE;AACbvJ,gBAAAA,IAAI,EAAE;AADO,eADR;AAIPwJ,cAAAA,aAAa,EAAE;AACbxJ,gBAAAA,IAAI,EAAE;AADO;AAJR;AANN;AA/iBC;AAz3BK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-05-10',\n    endpointPrefix: 'pca-connector-ad',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'PcaConnectorAd',\n    serviceId: 'Pca Connector Ad',\n    signatureVersion: 'v4',\n    signingName: 'pca-connector-ad',\n    uid: 'pca-connector-ad-2018-05-10'\n  },\n  operations: {\n    CreateConnector: {\n      http: {\n        requestUri: '/connectors',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateAuthorityArn',\n          'DirectoryId',\n          'VpcInformation'\n        ],\n        members: {\n          CertificateAuthorityArn: {},\n          ClientToken: {\n            idempotencyToken: true\n          },\n          DirectoryId: {},\n          Tags: {\n            shape: 'S5'\n          },\n          VpcInformation: {\n            shape: 'S7'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConnectorArn: {}\n        }\n      }\n    },\n    CreateDirectoryRegistration: {\n      http: {\n        requestUri: '/directoryRegistrations',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryId'\n        ],\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          DirectoryId: {},\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryRegistrationArn: {}\n        }\n      }\n    },\n    CreateServicePrincipalName: {\n      http: {\n        requestUri: '/directoryRegistrations/{DirectoryRegistrationArn}/servicePrincipalNames/{ConnectorArn}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectorArn',\n          'DirectoryRegistrationArn'\n        ],\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ConnectorArn: {\n            location: 'uri',\n            locationName: 'ConnectorArn'\n          },\n          DirectoryRegistrationArn: {\n            location: 'uri',\n            locationName: 'DirectoryRegistrationArn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateTemplate: {\n      http: {\n        requestUri: '/templates',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectorArn',\n          'Definition',\n          'Name'\n        ],\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ConnectorArn: {},\n          Definition: {\n            shape: 'Sh'\n          },\n          Name: {},\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TemplateArn: {}\n        }\n      }\n    },\n    CreateTemplateGroupAccessControlEntry: {\n      http: {\n        requestUri: '/templates/{TemplateArn}/accessControlEntries',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AccessRights',\n          'GroupDisplayName',\n          'GroupSecurityIdentifier',\n          'TemplateArn'\n        ],\n        members: {\n          AccessRights: {\n            shape: 'S1y'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          },\n          GroupDisplayName: {},\n          GroupSecurityIdentifier: {},\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteConnector: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/connectors/{ConnectorArn}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectorArn'\n        ],\n        members: {\n          ConnectorArn: {\n            location: 'uri',\n            locationName: 'ConnectorArn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteDirectoryRegistration: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/directoryRegistrations/{DirectoryRegistrationArn}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryRegistrationArn'\n        ],\n        members: {\n          DirectoryRegistrationArn: {\n            location: 'uri',\n            locationName: 'DirectoryRegistrationArn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteServicePrincipalName: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/directoryRegistrations/{DirectoryRegistrationArn}/servicePrincipalNames/{ConnectorArn}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectorArn',\n          'DirectoryRegistrationArn'\n        ],\n        members: {\n          ConnectorArn: {\n            location: 'uri',\n            locationName: 'ConnectorArn'\n          },\n          DirectoryRegistrationArn: {\n            location: 'uri',\n            locationName: 'DirectoryRegistrationArn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteTemplate: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/templates/{TemplateArn}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteTemplateGroupAccessControlEntry: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/templates/{TemplateArn}/accessControlEntries/{GroupSecurityIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GroupSecurityIdentifier',\n          'TemplateArn'\n        ],\n        members: {\n          GroupSecurityIdentifier: {\n            location: 'uri',\n            locationName: 'GroupSecurityIdentifier'\n          },\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetConnector: {\n      http: {\n        method: 'GET',\n        requestUri: '/connectors/{ConnectorArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectorArn'\n        ],\n        members: {\n          ConnectorArn: {\n            location: 'uri',\n            locationName: 'ConnectorArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Connector: {\n            type: 'structure',\n            members: {\n              Arn: {},\n              CertificateAuthorityArn: {},\n              CertificateEnrollmentPolicyServerEndpoint: {},\n              CreatedAt: {\n                type: 'timestamp'\n              },\n              DirectoryId: {},\n              Status: {},\n              StatusReason: {},\n              UpdatedAt: {\n                type: 'timestamp'\n              },\n              VpcInformation: {\n                shape: 'S7'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetDirectoryRegistration: {\n      http: {\n        method: 'GET',\n        requestUri: '/directoryRegistrations/{DirectoryRegistrationArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryRegistrationArn'\n        ],\n        members: {\n          DirectoryRegistrationArn: {\n            location: 'uri',\n            locationName: 'DirectoryRegistrationArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryRegistration: {\n            type: 'structure',\n            members: {\n              Arn: {},\n              CreatedAt: {\n                type: 'timestamp'\n              },\n              DirectoryId: {},\n              Status: {},\n              StatusReason: {},\n              UpdatedAt: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetServicePrincipalName: {\n      http: {\n        method: 'GET',\n        requestUri: '/directoryRegistrations/{DirectoryRegistrationArn}/servicePrincipalNames/{ConnectorArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectorArn',\n          'DirectoryRegistrationArn'\n        ],\n        members: {\n          ConnectorArn: {\n            location: 'uri',\n            locationName: 'ConnectorArn'\n          },\n          DirectoryRegistrationArn: {\n            location: 'uri',\n            locationName: 'DirectoryRegistrationArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ServicePrincipalName: {\n            type: 'structure',\n            members: {\n              ConnectorArn: {},\n              CreatedAt: {\n                type: 'timestamp'\n              },\n              DirectoryRegistrationArn: {},\n              Status: {},\n              StatusReason: {},\n              UpdatedAt: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetTemplate: {\n      http: {\n        method: 'GET',\n        requestUri: '/templates/{TemplateArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn'\n        ],\n        members: {\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Template: {\n            type: 'structure',\n            members: {\n              Arn: {},\n              ConnectorArn: {},\n              CreatedAt: {\n                type: 'timestamp'\n              },\n              Definition: {\n                shape: 'Sh'\n              },\n              Name: {},\n              ObjectIdentifier: {},\n              PolicySchema: {\n                type: 'integer'\n              },\n              Revision: {\n                shape: 'S2r'\n              },\n              Status: {},\n              UpdatedAt: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetTemplateGroupAccessControlEntry: {\n      http: {\n        method: 'GET',\n        requestUri: '/templates/{TemplateArn}/accessControlEntries/{GroupSecurityIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GroupSecurityIdentifier',\n          'TemplateArn'\n        ],\n        members: {\n          GroupSecurityIdentifier: {\n            location: 'uri',\n            locationName: 'GroupSecurityIdentifier'\n          },\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AccessControlEntry: {\n            type: 'structure',\n            members: {\n              AccessRights: {\n                shape: 'S1y'\n              },\n              CreatedAt: {\n                type: 'timestamp'\n              },\n              GroupDisplayName: {},\n              GroupSecurityIdentifier: {},\n              TemplateArn: {},\n              UpdatedAt: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    ListConnectors: {\n      http: {\n        method: 'GET',\n        requestUri: '/connectors',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Connectors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Arn: {},\n                CertificateAuthorityArn: {},\n                CertificateEnrollmentPolicyServerEndpoint: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                DirectoryId: {},\n                Status: {},\n                StatusReason: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                },\n                VpcInformation: {\n                  shape: 'S7'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListDirectoryRegistrations: {\n      http: {\n        method: 'GET',\n        requestUri: '/directoryRegistrations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DirectoryRegistrations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Arn: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                DirectoryId: {},\n                Status: {},\n                StatusReason: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListServicePrincipalNames: {\n      http: {\n        method: 'GET',\n        requestUri: '/directoryRegistrations/{DirectoryRegistrationArn}/servicePrincipalNames',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'DirectoryRegistrationArn'\n        ],\n        members: {\n          DirectoryRegistrationArn: {\n            location: 'uri',\n            locationName: 'DirectoryRegistrationArn'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          ServicePrincipalNames: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ConnectorArn: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                DirectoryRegistrationArn: {},\n                Status: {},\n                StatusReason: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    ListTemplateGroupAccessControlEntries: {\n      http: {\n        method: 'GET',\n        requestUri: '/templates/{TemplateArn}/accessControlEntries',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn'\n        ],\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AccessControlEntries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AccessRights: {\n                  shape: 'S1y'\n                },\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                GroupDisplayName: {},\n                GroupSecurityIdentifier: {},\n                TemplateArn: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTemplates: {\n      http: {\n        method: 'GET',\n        requestUri: '/templates',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ConnectorArn'\n        ],\n        members: {\n          ConnectorArn: {\n            location: 'querystring',\n            locationName: 'ConnectorArn'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Templates: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Arn: {},\n                ConnectorArn: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                Definition: {\n                  shape: 'Sh'\n                },\n                Name: {},\n                ObjectIdentifier: {},\n                PolicySchema: {\n                  type: 'integer'\n                },\n                Revision: {\n                  shape: 'S2r'\n                },\n                Status: {},\n                UpdatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateTemplate: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/templates/{TemplateArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TemplateArn'\n        ],\n        members: {\n          Definition: {\n            shape: 'Sh'\n          },\n          ReenrollAllCertificateHolders: {\n            type: 'boolean'\n          },\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          }\n        }\n      }\n    },\n    UpdateTemplateGroupAccessControlEntry: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/templates/{TemplateArn}/accessControlEntries/{GroupSecurityIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'GroupSecurityIdentifier',\n          'TemplateArn'\n        ],\n        members: {\n          AccessRights: {\n            shape: 'S1y'\n          },\n          GroupDisplayName: {},\n          GroupSecurityIdentifier: {\n            location: 'uri',\n            locationName: 'GroupSecurityIdentifier'\n          },\n          TemplateArn: {\n            location: 'uri',\n            locationName: 'TemplateArn'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S7: {\n      type: 'structure',\n      required: [\n        'SecurityGroupIds'\n      ],\n      members: {\n        SecurityGroupIds: {\n          type: 'list',\n          member: {}\n        }\n      }\n    },\n    Sh: {\n      type: 'structure',\n      members: {\n        TemplateV2: {\n          type: 'structure',\n          required: [\n            'CertificateValidity',\n            'EnrollmentFlags',\n            'Extensions',\n            'GeneralFlags',\n            'PrivateKeyAttributes',\n            'PrivateKeyFlags',\n            'SubjectNameFlags'\n          ],\n          members: {\n            CertificateValidity: {\n              shape: 'Sj'\n            },\n            EnrollmentFlags: {\n              type: 'structure',\n              members: {\n                EnableKeyReuseOnNtTokenKeysetStorageFull: {\n                  type: 'boolean'\n                },\n                IncludeSymmetricAlgorithms: {\n                  type: 'boolean'\n                },\n                NoSecurityExtension: {\n                  type: 'boolean'\n                },\n                RemoveInvalidCertificateFromPersonalStore: {\n                  type: 'boolean'\n                },\n                UserInteractionRequired: {\n                  type: 'boolean'\n                }\n              }\n            },\n            Extensions: {\n              type: 'structure',\n              required: [\n                'KeyUsage'\n              ],\n              members: {\n                ApplicationPolicies: {\n                  shape: 'Sq'\n                },\n                KeyUsage: {\n                  shape: 'Sv'\n                }\n              }\n            },\n            GeneralFlags: {\n              type: 'structure',\n              members: {\n                AutoEnrollment: {\n                  type: 'boolean'\n                },\n                MachineType: {\n                  type: 'boolean'\n                }\n              }\n            },\n            PrivateKeyAttributes: {\n              type: 'structure',\n              required: [\n                'KeySpec',\n                'MinimalKeyLength'\n              ],\n              members: {\n                CryptoProviders: {\n                  shape: 'Sz'\n                },\n                KeySpec: {},\n                MinimalKeyLength: {\n                  type: 'integer'\n                }\n              }\n            },\n            PrivateKeyFlags: {\n              type: 'structure',\n              required: [\n                'ClientVersion'\n              ],\n              members: {\n                ClientVersion: {},\n                ExportableKey: {\n                  type: 'boolean'\n                },\n                StrongKeyProtectionRequired: {\n                  type: 'boolean'\n                }\n              }\n            },\n            SubjectNameFlags: {\n              type: 'structure',\n              members: {\n                RequireCommonName: {\n                  type: 'boolean'\n                },\n                RequireDirectoryPath: {\n                  type: 'boolean'\n                },\n                RequireDnsAsCn: {\n                  type: 'boolean'\n                },\n                RequireEmail: {\n                  type: 'boolean'\n                },\n                SanRequireDirectoryGuid: {\n                  type: 'boolean'\n                },\n                SanRequireDns: {\n                  type: 'boolean'\n                },\n                SanRequireDomainDns: {\n                  type: 'boolean'\n                },\n                SanRequireEmail: {\n                  type: 'boolean'\n                },\n                SanRequireSpn: {\n                  type: 'boolean'\n                },\n                SanRequireUpn: {\n                  type: 'boolean'\n                }\n              }\n            },\n            SupersededTemplates: {\n              shape: 'S16'\n            }\n          }\n        },\n        TemplateV3: {\n          type: 'structure',\n          required: [\n            'CertificateValidity',\n            'EnrollmentFlags',\n            'Extensions',\n            'GeneralFlags',\n            'HashAlgorithm',\n            'PrivateKeyAttributes',\n            'PrivateKeyFlags',\n            'SubjectNameFlags'\n          ],\n          members: {\n            CertificateValidity: {\n              shape: 'Sj'\n            },\n            EnrollmentFlags: {\n              type: 'structure',\n              members: {\n                EnableKeyReuseOnNtTokenKeysetStorageFull: {\n                  type: 'boolean'\n                },\n                IncludeSymmetricAlgorithms: {\n                  type: 'boolean'\n                },\n                NoSecurityExtension: {\n                  type: 'boolean'\n                },\n                RemoveInvalidCertificateFromPersonalStore: {\n                  type: 'boolean'\n                },\n                UserInteractionRequired: {\n                  type: 'boolean'\n                }\n              }\n            },\n            Extensions: {\n              type: 'structure',\n              required: [\n                'KeyUsage'\n              ],\n              members: {\n                ApplicationPolicies: {\n                  shape: 'Sq'\n                },\n                KeyUsage: {\n                  shape: 'Sv'\n                }\n              }\n            },\n            GeneralFlags: {\n              type: 'structure',\n              members: {\n                AutoEnrollment: {\n                  type: 'boolean'\n                },\n                MachineType: {\n                  type: 'boolean'\n                }\n              }\n            },\n            HashAlgorithm: {},\n            PrivateKeyAttributes: {\n              type: 'structure',\n              required: [\n                'Algorithm',\n                'KeySpec',\n                'KeyUsageProperty',\n                'MinimalKeyLength'\n              ],\n              members: {\n                Algorithm: {},\n                CryptoProviders: {\n                  shape: 'Sz'\n                },\n                KeySpec: {},\n                KeyUsageProperty: {\n                  shape: 'S1f'\n                },\n                MinimalKeyLength: {\n                  type: 'integer'\n                }\n              }\n            },\n            PrivateKeyFlags: {\n              type: 'structure',\n              required: [\n                'ClientVersion'\n              ],\n              members: {\n                ClientVersion: {},\n                ExportableKey: {\n                  type: 'boolean'\n                },\n                RequireAlternateSignatureAlgorithm: {\n                  type: 'boolean'\n                },\n                StrongKeyProtectionRequired: {\n                  type: 'boolean'\n                }\n              }\n            },\n            SubjectNameFlags: {\n              type: 'structure',\n              members: {\n                RequireCommonName: {\n                  type: 'boolean'\n                },\n                RequireDirectoryPath: {\n                  type: 'boolean'\n                },\n                RequireDnsAsCn: {\n                  type: 'boolean'\n                },\n                RequireEmail: {\n                  type: 'boolean'\n                },\n                SanRequireDirectoryGuid: {\n                  type: 'boolean'\n                },\n                SanRequireDns: {\n                  type: 'boolean'\n                },\n                SanRequireDomainDns: {\n                  type: 'boolean'\n                },\n                SanRequireEmail: {\n                  type: 'boolean'\n                },\n                SanRequireSpn: {\n                  type: 'boolean'\n                },\n                SanRequireUpn: {\n                  type: 'boolean'\n                }\n              }\n            },\n            SupersededTemplates: {\n              shape: 'S16'\n            }\n          }\n        },\n        TemplateV4: {\n          type: 'structure',\n          required: [\n            'CertificateValidity',\n            'EnrollmentFlags',\n            'Extensions',\n            'GeneralFlags',\n            'PrivateKeyAttributes',\n            'PrivateKeyFlags',\n            'SubjectNameFlags'\n          ],\n          members: {\n            CertificateValidity: {\n              shape: 'Sj'\n            },\n            EnrollmentFlags: {\n              type: 'structure',\n              members: {\n                EnableKeyReuseOnNtTokenKeysetStorageFull: {\n                  type: 'boolean'\n                },\n                IncludeSymmetricAlgorithms: {\n                  type: 'boolean'\n                },\n                NoSecurityExtension: {\n                  type: 'boolean'\n                },\n                RemoveInvalidCertificateFromPersonalStore: {\n                  type: 'boolean'\n                },\n                UserInteractionRequired: {\n                  type: 'boolean'\n                }\n              }\n            },\n            Extensions: {\n              type: 'structure',\n              required: [\n                'KeyUsage'\n              ],\n              members: {\n                ApplicationPolicies: {\n                  shape: 'Sq'\n                },\n                KeyUsage: {\n                  shape: 'Sv'\n                }\n              }\n            },\n            GeneralFlags: {\n              type: 'structure',\n              members: {\n                AutoEnrollment: {\n                  type: 'boolean'\n                },\n                MachineType: {\n                  type: 'boolean'\n                }\n              }\n            },\n            HashAlgorithm: {},\n            PrivateKeyAttributes: {\n              type: 'structure',\n              required: [\n                'KeySpec',\n                'MinimalKeyLength'\n              ],\n              members: {\n                Algorithm: {},\n                CryptoProviders: {\n                  shape: 'Sz'\n                },\n                KeySpec: {},\n                KeyUsageProperty: {\n                  shape: 'S1f'\n                },\n                MinimalKeyLength: {\n                  type: 'integer'\n                }\n              }\n            },\n            PrivateKeyFlags: {\n              type: 'structure',\n              required: [\n                'ClientVersion'\n              ],\n              members: {\n                ClientVersion: {},\n                ExportableKey: {\n                  type: 'boolean'\n                },\n                RequireAlternateSignatureAlgorithm: {\n                  type: 'boolean'\n                },\n                RequireSameKeyRenewal: {\n                  type: 'boolean'\n                },\n                StrongKeyProtectionRequired: {\n                  type: 'boolean'\n                },\n                UseLegacyProvider: {\n                  type: 'boolean'\n                }\n              }\n            },\n            SubjectNameFlags: {\n              type: 'structure',\n              members: {\n                RequireCommonName: {\n                  type: 'boolean'\n                },\n                RequireDirectoryPath: {\n                  type: 'boolean'\n                },\n                RequireDnsAsCn: {\n                  type: 'boolean'\n                },\n                RequireEmail: {\n                  type: 'boolean'\n                },\n                SanRequireDirectoryGuid: {\n                  type: 'boolean'\n                },\n                SanRequireDns: {\n                  type: 'boolean'\n                },\n                SanRequireDomainDns: {\n                  type: 'boolean'\n                },\n                SanRequireEmail: {\n                  type: 'boolean'\n                },\n                SanRequireSpn: {\n                  type: 'boolean'\n                },\n                SanRequireUpn: {\n                  type: 'boolean'\n                }\n              }\n            },\n            SupersededTemplates: {\n              shape: 'S16'\n            }\n          }\n        }\n      },\n      union: true\n    },\n    Sj: {\n      type: 'structure',\n      required: [\n        'RenewalPeriod',\n        'ValidityPeriod'\n      ],\n      members: {\n        RenewalPeriod: {\n          shape: 'Sk'\n        },\n        ValidityPeriod: {\n          shape: 'Sk'\n        }\n      }\n    },\n    Sk: {\n      type: 'structure',\n      required: [\n        'Period',\n        'PeriodType'\n      ],\n      members: {\n        Period: {\n          type: 'long'\n        },\n        PeriodType: {}\n      }\n    },\n    Sq: {\n      type: 'structure',\n      required: [\n        'Policies'\n      ],\n      members: {\n        Critical: {\n          type: 'boolean'\n        },\n        Policies: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              PolicyObjectIdentifier: {},\n              PolicyType: {}\n            },\n            union: true\n          }\n        }\n      }\n    },\n    Sv: {\n      type: 'structure',\n      required: [\n        'UsageFlags'\n      ],\n      members: {\n        Critical: {\n          type: 'boolean'\n        },\n        UsageFlags: {\n          type: 'structure',\n          members: {\n            DataEncipherment: {\n              type: 'boolean'\n            },\n            DigitalSignature: {\n              type: 'boolean'\n            },\n            KeyAgreement: {\n              type: 'boolean'\n            },\n            KeyEncipherment: {\n              type: 'boolean'\n            },\n            NonRepudiation: {\n              type: 'boolean'\n            }\n          }\n        }\n      }\n    },\n    Sz: {\n      type: 'list',\n      member: {}\n    },\n    S16: {\n      type: 'list',\n      member: {}\n    },\n    S1f: {\n      type: 'structure',\n      members: {\n        PropertyFlags: {\n          type: 'structure',\n          members: {\n            Decrypt: {\n              type: 'boolean'\n            },\n            KeyAgreement: {\n              type: 'boolean'\n            },\n            Sign: {\n              type: 'boolean'\n            }\n          }\n        },\n        PropertyType: {}\n      },\n      union: true\n    },\n    S1y: {\n      type: 'structure',\n      members: {\n        AutoEnroll: {},\n        Enroll: {}\n      }\n    },\n    S2r: {\n      type: 'structure',\n      required: [\n        'MajorRevision',\n        'MinorRevision'\n      ],\n      members: {\n        MajorRevision: {\n          type: 'integer'\n        },\n        MinorRevision: {\n          type: 'integer'\n        }\n      }\n    }\n  }\n}"]}