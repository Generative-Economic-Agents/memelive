{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/route53-recovery-control-config-2020-11-02.min.json"],"names":["metadata","apiVersion","endpointPrefix","signingName","serviceFullName","serviceId","protocol","jsonVersion","uid","signatureVersion","operations","CreateCluster","http","requestUri","responseCode","input","type","members","ClientToken","idempotencyToken","ClusterName","Tags","shape","required","output","Cluster","CreateControlPanel","ClusterArn","ControlPanelName","ControlPanel","CreateRoutingControl","ControlPanelArn","RoutingControlName","RoutingControl","CreateSafetyRule","AssertionRule","AssertedControls","Name","RuleConfig","WaitPeriodMs","GatingRule","GatingControls","TargetControls","DeleteCluster","method","location","locationName","DeleteControlPanel","DeleteRoutingControl","RoutingControlArn","DeleteSafetyRule","SafetyRuleArn","DescribeCluster","DescribeControlPanel","DescribeRoutingControl","DescribeSafetyRule","GetResourcePolicy","ResourceArn","Policy","ListAssociatedRoute53HealthChecks","MaxResults","NextToken","HealthCheckIds","member","ListClusters","Clusters","ListControlPanels","ControlPanels","ListRoutingControls","RoutingControls","ListSafetyRules","SafetyRules","ASSERTION","GATING","ListTagsForResource","TagResource","UntagResource","TagKeys","UpdateControlPanel","UpdateRoutingControl","UpdateSafetyRule","AssertionRuleUpdate","GatingRuleUpdate","shapes","S3","key","value","S7","ClusterEndpoints","Endpoint","Region","Status","Owner","Sh","DefaultControlPanel","RoutingControlCount","Sm","Sp","Sq","Inverted","Threshold","Type","Su","Sv"],"mappings":"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","sourcesContent":["export default {\n  metadata: {\n    apiVersion: '2020-11-02',\n    endpointPrefix: 'route53-recovery-control-config',\n    signingName: 'route53-recovery-control-config',\n    serviceFullName: 'AWS Route53 Recovery Control Config',\n    serviceId: 'Route53 Recovery Control Config',\n    protocol: 'rest-json',\n    jsonVersion: '1.1',\n    uid: 'route53-recovery-control-config-2020-11-02',\n    signatureVersion: 'v4'\n  },\n  operations: {\n    CreateCluster: {\n      http: {\n        requestUri: '/cluster',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ClusterName: {},\n          Tags: {\n            shape: 'S3'\n          }\n        },\n        required: [\n          'ClusterName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Cluster: {\n            shape: 'S7'\n          }\n        }\n      }\n    },\n    CreateControlPanel: {\n      http: {\n        requestUri: '/controlpanel',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ClusterArn: {},\n          ControlPanelName: {},\n          Tags: {\n            shape: 'S3'\n          }\n        },\n        required: [\n          'ClusterArn',\n          'ControlPanelName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ControlPanel: {\n            shape: 'Sh'\n          }\n        }\n      }\n    },\n    CreateRoutingControl: {\n      http: {\n        requestUri: '/routingcontrol',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ClientToken: {\n            idempotencyToken: true\n          },\n          ClusterArn: {},\n          ControlPanelArn: {},\n          RoutingControlName: {}\n        },\n        required: [\n          'ClusterArn',\n          'RoutingControlName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RoutingControl: {\n            shape: 'Sm'\n          }\n        }\n      }\n    },\n    CreateSafetyRule: {\n      http: {\n        requestUri: '/safetyrule',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AssertionRule: {\n            type: 'structure',\n            members: {\n              AssertedControls: {\n                shape: 'Sp'\n              },\n              ControlPanelArn: {},\n              Name: {},\n              RuleConfig: {\n                shape: 'Sq'\n              },\n              WaitPeriodMs: {\n                type: 'integer'\n              }\n            },\n            required: [\n              'ControlPanelArn',\n              'AssertedControls',\n              'RuleConfig',\n              'WaitPeriodMs',\n              'Name'\n            ]\n          },\n          ClientToken: {\n            idempotencyToken: true\n          },\n          GatingRule: {\n            type: 'structure',\n            members: {\n              ControlPanelArn: {},\n              GatingControls: {\n                shape: 'Sp'\n              },\n              Name: {},\n              RuleConfig: {\n                shape: 'Sq'\n              },\n              TargetControls: {\n                shape: 'Sp'\n              },\n              WaitPeriodMs: {\n                type: 'integer'\n              }\n            },\n            required: [\n              'TargetControls',\n              'ControlPanelArn',\n              'GatingControls',\n              'RuleConfig',\n              'WaitPeriodMs',\n              'Name'\n            ]\n          },\n          Tags: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AssertionRule: {\n            shape: 'Su'\n          },\n          GatingRule: {\n            shape: 'Sv'\n          }\n        }\n      }\n    },\n    DeleteCluster: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/cluster/{ClusterArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ClusterArn: {\n            location: 'uri',\n            locationName: 'ClusterArn'\n          }\n        },\n        required: [\n          'ClusterArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteControlPanel: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/controlpanel/{ControlPanelArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ControlPanelArn: {\n            location: 'uri',\n            locationName: 'ControlPanelArn'\n          }\n        },\n        required: [\n          'ControlPanelArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteRoutingControl: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/routingcontrol/{RoutingControlArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RoutingControlArn: {\n            location: 'uri',\n            locationName: 'RoutingControlArn'\n          }\n        },\n        required: [\n          'RoutingControlArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteSafetyRule: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/safetyrule/{SafetyRuleArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          SafetyRuleArn: {\n            location: 'uri',\n            locationName: 'SafetyRuleArn'\n          }\n        },\n        required: [\n          'SafetyRuleArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DescribeCluster: {\n      http: {\n        method: 'GET',\n        requestUri: '/cluster/{ClusterArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ClusterArn: {\n            location: 'uri',\n            locationName: 'ClusterArn'\n          }\n        },\n        required: [\n          'ClusterArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Cluster: {\n            shape: 'S7'\n          }\n        }\n      }\n    },\n    DescribeControlPanel: {\n      http: {\n        method: 'GET',\n        requestUri: '/controlpanel/{ControlPanelArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ControlPanelArn: {\n            location: 'uri',\n            locationName: 'ControlPanelArn'\n          }\n        },\n        required: [\n          'ControlPanelArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ControlPanel: {\n            shape: 'Sh'\n          }\n        }\n      }\n    },\n    DescribeRoutingControl: {\n      http: {\n        method: 'GET',\n        requestUri: '/routingcontrol/{RoutingControlArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RoutingControlArn: {\n            location: 'uri',\n            locationName: 'RoutingControlArn'\n          }\n        },\n        required: [\n          'RoutingControlArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RoutingControl: {\n            shape: 'Sm'\n          }\n        }\n      }\n    },\n    DescribeSafetyRule: {\n      http: {\n        method: 'GET',\n        requestUri: '/safetyrule/{SafetyRuleArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          SafetyRuleArn: {\n            location: 'uri',\n            locationName: 'SafetyRuleArn'\n          }\n        },\n        required: [\n          'SafetyRuleArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AssertionRule: {\n            shape: 'Su'\n          },\n          GatingRule: {\n            shape: 'Sv'\n          }\n        }\n      }\n    },\n    GetResourcePolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/resourcePolicy/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          }\n        },\n        required: [\n          'ResourceArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Policy: {}\n        }\n      }\n    },\n    ListAssociatedRoute53HealthChecks: {\n      http: {\n        method: 'GET',\n        requestUri: '/routingcontrol/{RoutingControlArn}/associatedRoute53HealthChecks',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          },\n          RoutingControlArn: {\n            location: 'uri',\n            locationName: 'RoutingControlArn'\n          }\n        },\n        required: [\n          'RoutingControlArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HealthCheckIds: {\n            type: 'list',\n            member: {}\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListClusters: {\n      http: {\n        method: 'GET',\n        requestUri: '/cluster',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Clusters: {\n            type: 'list',\n            member: {\n              shape: 'S7'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListControlPanels: {\n      http: {\n        method: 'GET',\n        requestUri: '/controlpanels',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ClusterArn: {\n            location: 'querystring',\n            locationName: 'ClusterArn'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ControlPanels: {\n            type: 'list',\n            member: {\n              shape: 'Sh'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListRoutingControls: {\n      http: {\n        method: 'GET',\n        requestUri: '/controlpanel/{ControlPanelArn}/routingcontrols',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ControlPanelArn: {\n            location: 'uri',\n            locationName: 'ControlPanelArn'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        },\n        required: [\n          'ControlPanelArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          RoutingControls: {\n            type: 'list',\n            member: {\n              shape: 'Sm'\n            }\n          }\n        }\n      }\n    },\n    ListSafetyRules: {\n      http: {\n        method: 'GET',\n        requestUri: '/controlpanel/{ControlPanelArn}/safetyrules',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ControlPanelArn: {\n            location: 'uri',\n            locationName: 'ControlPanelArn'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'MaxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'NextToken'\n          }\n        },\n        required: [\n          'ControlPanelArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          SafetyRules: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ASSERTION: {\n                  shape: 'Su'\n                },\n                GATING: {\n                  shape: 'Sv'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          }\n        },\n        required: [\n          'ResourceArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          Tags: {\n            shape: 'S3'\n          }\n        },\n        required: [\n          'ResourceArn',\n          'Tags'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'TagKeys',\n            type: 'list',\n            member: {}\n          }\n        },\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateControlPanel: {\n      http: {\n        method: 'PUT',\n        requestUri: '/controlpanel',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ControlPanelArn: {},\n          ControlPanelName: {}\n        },\n        required: [\n          'ControlPanelArn',\n          'ControlPanelName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ControlPanel: {\n            shape: 'Sh'\n          }\n        }\n      }\n    },\n    UpdateRoutingControl: {\n      http: {\n        method: 'PUT',\n        requestUri: '/routingcontrol',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          RoutingControlArn: {},\n          RoutingControlName: {}\n        },\n        required: [\n          'RoutingControlName',\n          'RoutingControlArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RoutingControl: {\n            shape: 'Sm'\n          }\n        }\n      }\n    },\n    UpdateSafetyRule: {\n      http: {\n        method: 'PUT',\n        requestUri: '/safetyrule',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AssertionRuleUpdate: {\n            type: 'structure',\n            members: {\n              Name: {},\n              SafetyRuleArn: {},\n              WaitPeriodMs: {\n                type: 'integer'\n              }\n            },\n            required: [\n              'SafetyRuleArn',\n              'WaitPeriodMs',\n              'Name'\n            ]\n          },\n          GatingRuleUpdate: {\n            type: 'structure',\n            members: {\n              Name: {},\n              SafetyRuleArn: {},\n              WaitPeriodMs: {\n                type: 'integer'\n              }\n            },\n            required: [\n              'SafetyRuleArn',\n              'WaitPeriodMs',\n              'Name'\n            ]\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AssertionRule: {\n            shape: 'Su'\n          },\n          GatingRule: {\n            shape: 'Sv'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S7: {\n      type: 'structure',\n      members: {\n        ClusterArn: {},\n        ClusterEndpoints: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              Endpoint: {},\n              Region: {}\n            }\n          }\n        },\n        Name: {},\n        Status: {},\n        Owner: {}\n      }\n    },\n    Sh: {\n      type: 'structure',\n      members: {\n        ClusterArn: {},\n        ControlPanelArn: {},\n        DefaultControlPanel: {\n          type: 'boolean'\n        },\n        Name: {},\n        RoutingControlCount: {\n          type: 'integer'\n        },\n        Status: {},\n        Owner: {}\n      }\n    },\n    Sm: {\n      type: 'structure',\n      members: {\n        ControlPanelArn: {},\n        Name: {},\n        RoutingControlArn: {},\n        Status: {},\n        Owner: {}\n      }\n    },\n    Sp: {\n      type: 'list',\n      member: {}\n    },\n    Sq: {\n      type: 'structure',\n      members: {\n        Inverted: {\n          type: 'boolean'\n        },\n        Threshold: {\n          type: 'integer'\n        },\n        Type: {}\n      },\n      required: [\n        'Type',\n        'Inverted',\n        'Threshold'\n      ]\n    },\n    Su: {\n      type: 'structure',\n      members: {\n        AssertedControls: {\n          shape: 'Sp'\n        },\n        ControlPanelArn: {},\n        Name: {},\n        RuleConfig: {\n          shape: 'Sq'\n        },\n        SafetyRuleArn: {},\n        Status: {},\n        WaitPeriodMs: {\n          type: 'integer'\n        },\n        Owner: {}\n      },\n      required: [\n        'Status',\n        'ControlPanelArn',\n        'SafetyRuleArn',\n        'AssertedControls',\n        'RuleConfig',\n        'WaitPeriodMs',\n        'Name'\n      ]\n    },\n    Sv: {\n      type: 'structure',\n      members: {\n        ControlPanelArn: {},\n        GatingControls: {\n          shape: 'Sp'\n        },\n        Name: {},\n        RuleConfig: {\n          shape: 'Sq'\n        },\n        SafetyRuleArn: {},\n        Status: {},\n        TargetControls: {\n          shape: 'Sp'\n        },\n        WaitPeriodMs: {\n          type: 'integer'\n        },\n        Owner: {}\n      },\n      required: [\n        'Status',\n        'TargetControls',\n        'ControlPanelArn',\n        'SafetyRuleArn',\n        'GatingControls',\n        'RuleConfig',\n        'WaitPeriodMs',\n        'Name'\n      ]\n    }\n  }\n}"]}