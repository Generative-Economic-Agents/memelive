{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/cognito-sync-2014-06-30.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","uid","operations","BulkPublish","http","requestUri","responseCode","input","type","required","members","IdentityPoolId","location","locationName","output","DeleteDataset","method","IdentityId","DatasetName","Dataset","shape","DescribeDataset","DescribeIdentityPoolUsage","IdentityPoolUsage","DescribeIdentityUsage","IdentityUsage","LastModifiedDate","DatasetCount","DataStorage","GetBulkPublishDetails","BulkPublishStartTime","BulkPublishCompleteTime","BulkPublishStatus","FailureMessage","GetCognitoEvents","Events","GetIdentityPoolConfiguration","PushSync","CognitoStreams","ListDatasets","NextToken","MaxResults","Datasets","member","Count","ListIdentityPoolUsage","IdentityPoolUsages","ListRecords","LastSyncCount","SyncSessionToken","Records","DatasetSyncCount","LastModifiedBy","MergedDatasetNames","DatasetExists","DatasetDeletedAfterRequestedSyncCount","RegisterDevice","Platform","Token","DeviceId","SetCognitoEvents","SetIdentityPoolConfiguration","SubscribeToDataset","UnsubscribeFromDataset","UpdateRecords","RecordPatches","Op","Key","Value","SyncCount","DeviceLastModifiedDate","ClientContext","shapes","S8","CreationDate","NumRecords","Sg","SyncSessionsCount","Sq","key","value","Sv","ApplicationArns","RoleArn","Sz","StreamName","StreamingStatus","S1c"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2014-06-30',\n    endpointPrefix: 'cognito-sync',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon Cognito Sync',\n    serviceId: 'Cognito Sync',\n    signatureVersion: 'v4',\n    uid: 'cognito-sync-2014-06-30'\n  },\n  operations: {\n    BulkPublish: {\n      http: {\n        requestUri: '/identitypools/{IdentityPoolId}/bulkpublish',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPoolId: {}\n        }\n      }\n    },\n    DeleteDataset: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'IdentityId',\n          'DatasetName'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          IdentityId: {\n            location: 'uri',\n            locationName: 'IdentityId'\n          },\n          DatasetName: {\n            location: 'uri',\n            locationName: 'DatasetName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Dataset: {\n            shape: 'S8'\n          }\n        }\n      }\n    },\n    DescribeDataset: {\n      http: {\n        method: 'GET',\n        requestUri: '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'IdentityId',\n          'DatasetName'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          IdentityId: {\n            location: 'uri',\n            locationName: 'IdentityId'\n          },\n          DatasetName: {\n            location: 'uri',\n            locationName: 'DatasetName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Dataset: {\n            shape: 'S8'\n          }\n        }\n      }\n    },\n    DescribeIdentityPoolUsage: {\n      http: {\n        method: 'GET',\n        requestUri: '/identitypools/{IdentityPoolId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPoolUsage: {\n            shape: 'Sg'\n          }\n        }\n      }\n    },\n    DescribeIdentityUsage: {\n      http: {\n        method: 'GET',\n        requestUri: '/identitypools/{IdentityPoolId}/identities/{IdentityId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'IdentityId'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          IdentityId: {\n            location: 'uri',\n            locationName: 'IdentityId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityUsage: {\n            type: 'structure',\n            members: {\n              IdentityId: {},\n              IdentityPoolId: {},\n              LastModifiedDate: {\n                type: 'timestamp'\n              },\n              DatasetCount: {\n                type: 'integer'\n              },\n              DataStorage: {\n                type: 'long'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetBulkPublishDetails: {\n      http: {\n        requestUri: '/identitypools/{IdentityPoolId}/getBulkPublishDetails',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPoolId: {},\n          BulkPublishStartTime: {\n            type: 'timestamp'\n          },\n          BulkPublishCompleteTime: {\n            type: 'timestamp'\n          },\n          BulkPublishStatus: {},\n          FailureMessage: {}\n        }\n      }\n    },\n    GetCognitoEvents: {\n      http: {\n        method: 'GET',\n        requestUri: '/identitypools/{IdentityPoolId}/events',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Events: {\n            shape: 'Sq'\n          }\n        }\n      }\n    },\n    GetIdentityPoolConfiguration: {\n      http: {\n        method: 'GET',\n        requestUri: '/identitypools/{IdentityPoolId}/configuration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPoolId: {},\n          PushSync: {\n            shape: 'Sv'\n          },\n          CognitoStreams: {\n            shape: 'Sz'\n          }\n        }\n      }\n    },\n    ListDatasets: {\n      http: {\n        method: 'GET',\n        requestUri: '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityId',\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          IdentityId: {\n            location: 'uri',\n            locationName: 'IdentityId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Datasets: {\n            type: 'list',\n            member: {\n              shape: 'S8'\n            }\n          },\n          Count: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListIdentityPoolUsage: {\n      http: {\n        method: 'GET',\n        requestUri: '/identitypools',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPoolUsages: {\n            type: 'list',\n            member: {\n              shape: 'Sg'\n            }\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          Count: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListRecords: {\n      http: {\n        method: 'GET',\n        requestUri: '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/records',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'IdentityId',\n          'DatasetName'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          IdentityId: {\n            location: 'uri',\n            locationName: 'IdentityId'\n          },\n          DatasetName: {\n            location: 'uri',\n            locationName: 'DatasetName'\n          },\n          LastSyncCount: {\n            location: 'querystring',\n            locationName: 'lastSyncCount',\n            type: 'long'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          SyncSessionToken: {\n            location: 'querystring',\n            locationName: 'syncSessionToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Records: {\n            shape: 'S1c'\n          },\n          NextToken: {},\n          Count: {\n            type: 'integer'\n          },\n          DatasetSyncCount: {\n            type: 'long'\n          },\n          LastModifiedBy: {},\n          MergedDatasetNames: {\n            type: 'list',\n            member: {}\n          },\n          DatasetExists: {\n            type: 'boolean'\n          },\n          DatasetDeletedAfterRequestedSyncCount: {\n            type: 'boolean'\n          },\n          SyncSessionToken: {}\n        }\n      }\n    },\n    RegisterDevice: {\n      http: {\n        requestUri: '/identitypools/{IdentityPoolId}/identity/{IdentityId}/device',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'IdentityId',\n          'Platform',\n          'Token'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          IdentityId: {\n            location: 'uri',\n            locationName: 'IdentityId'\n          },\n          Platform: {},\n          Token: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DeviceId: {}\n        }\n      }\n    },\n    SetCognitoEvents: {\n      http: {\n        requestUri: '/identitypools/{IdentityPoolId}/events',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'Events'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          Events: {\n            shape: 'Sq'\n          }\n        }\n      }\n    },\n    SetIdentityPoolConfiguration: {\n      http: {\n        requestUri: '/identitypools/{IdentityPoolId}/configuration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          PushSync: {\n            shape: 'Sv'\n          },\n          CognitoStreams: {\n            shape: 'Sz'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPoolId: {},\n          PushSync: {\n            shape: 'Sv'\n          },\n          CognitoStreams: {\n            shape: 'Sz'\n          }\n        }\n      }\n    },\n    SubscribeToDataset: {\n      http: {\n        requestUri: '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'IdentityId',\n          'DatasetName',\n          'DeviceId'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          IdentityId: {\n            location: 'uri',\n            locationName: 'IdentityId'\n          },\n          DatasetName: {\n            location: 'uri',\n            locationName: 'DatasetName'\n          },\n          DeviceId: {\n            location: 'uri',\n            locationName: 'DeviceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UnsubscribeFromDataset: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'IdentityId',\n          'DatasetName',\n          'DeviceId'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          IdentityId: {\n            location: 'uri',\n            locationName: 'IdentityId'\n          },\n          DatasetName: {\n            location: 'uri',\n            locationName: 'DatasetName'\n          },\n          DeviceId: {\n            location: 'uri',\n            locationName: 'DeviceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateRecords: {\n      http: {\n        requestUri: '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'IdentityId',\n          'DatasetName',\n          'SyncSessionToken'\n        ],\n        members: {\n          IdentityPoolId: {\n            location: 'uri',\n            locationName: 'IdentityPoolId'\n          },\n          IdentityId: {\n            location: 'uri',\n            locationName: 'IdentityId'\n          },\n          DatasetName: {\n            location: 'uri',\n            locationName: 'DatasetName'\n          },\n          DeviceId: {},\n          RecordPatches: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Op',\n                'Key',\n                'SyncCount'\n              ],\n              members: {\n                Op: {},\n                Key: {},\n                Value: {},\n                SyncCount: {\n                  type: 'long'\n                },\n                DeviceLastModifiedDate: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          SyncSessionToken: {},\n          ClientContext: {\n            location: 'header',\n            locationName: 'x-amz-Client-Context'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Records: {\n            shape: 'S1c'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S8: {\n      type: 'structure',\n      members: {\n        IdentityId: {},\n        DatasetName: {},\n        CreationDate: {\n          type: 'timestamp'\n        },\n        LastModifiedDate: {\n          type: 'timestamp'\n        },\n        LastModifiedBy: {},\n        DataStorage: {\n          type: 'long'\n        },\n        NumRecords: {\n          type: 'long'\n        }\n      }\n    },\n    Sg: {\n      type: 'structure',\n      members: {\n        IdentityPoolId: {},\n        SyncSessionsCount: {\n          type: 'long'\n        },\n        DataStorage: {\n          type: 'long'\n        },\n        LastModifiedDate: {\n          type: 'timestamp'\n        }\n      }\n    },\n    Sq: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sv: {\n      type: 'structure',\n      members: {\n        ApplicationArns: {\n          type: 'list',\n          member: {}\n        },\n        RoleArn: {}\n      }\n    },\n    Sz: {\n      type: 'structure',\n      members: {\n        StreamName: {},\n        RoleArn: {},\n        StreamingStatus: {}\n      }\n    },\n    S1c: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Key: {},\n          Value: {},\n          SyncCount: {\n            type: 'long'\n          },\n          LastModifiedDate: {\n            type: 'timestamp'\n          },\n          LastModifiedBy: {},\n          DeviceLastModifiedDate: {\n            type: 'timestamp'\n          }\n        }\n      }\n    }\n  }\n}"]}