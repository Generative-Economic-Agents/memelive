{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/sax/lib/sax.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","sax","parser","strict","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","buffers","EVENTS","clearBuffers","q","c","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","tag","error","noscript","state","S","BEGIN","strictEntities","ENTITIES","Object","create","XML_ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","position","line","column","emit","o","F","prototype","newf","keys","a","i","hasOwnProperty","push","checkBufferLength","maxAllowed","Math","max","maxActual","l","length","len","closeText","emitNode","cdata","script","m","flushBuffers","end","write","resume","close","flush","Stream","ex","streamWraps","filter","ev","apply","_parser","writable","readable","me","onend","onerror","er","_decoder","forEach","defineProperty","get","set","h","removeAllListeners","on","enumerable","configurable","constructor","value","data","Buffer","isBuffer","SD","StringDecoder","toString","chunk","handler","indexOf","args","arguments","Array","splice","call","whitespace","number","letter","quote","attribEnd","CDATA","DOCTYPE","XML_NAMESPACE","XMLNS_NAMESPACE","xml","charClass","nameStart","nameBody","entityStart","entityBody","str","split","reduce","s","isRegExp","is","charclass","match","not","STATE","BEGIN_WHITESPACE","TEXT","TEXT_ENTITY","OPEN_WAKA","SGML_DECL","SGML_DECL_QUOTED","DOCTYPE_QUOTED","DOCTYPE_DTD","DOCTYPE_DTD_QUOTED","COMMENT_STARTING","COMMENT","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST","PROC_INST_BODY","PROC_INST_ENDING","OPEN_TAG","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_CLOSED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG","CLOSE_TAG_SAW_WHITE","SCRIPT","SCRIPT_ENDING","key","e","String","fromCharCode","event","nodeType","textNode","textopts","text","trim","normalize","replace","Error","strictFail","message","newTag","tagName","parent","name","attributes","qname","attribute","qualName","prefix","local","attrib","attribName","attribValue","qn","openTag","selfClosing","uri","JSON","stringify","p","nv","isSelfClosing","toLowerCase","closeTag","t","closeTo","pop","x","n","parseEntity","entity","entityLC","num","numStr","charAt","slice","parseInt","fromCodePoint","beginWhiteSpace","startTagPosition","result","starti","substring","sgmlDecl","procInstName","procInstBody","pad","join","toUpperCase","comment","doctype","body","returnState","buffer","stringFromCharCode","floor","MAX_SIZE","codeUnits","highSurrogate","lowSurrogate","index","codePoint","Number","isFinite","RangeError","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'stream';\nimport { __cjsMetaURL as _req0} from 'string_decoder';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n ;(function (sax) { // wrapper for non-node envs\n   sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n   sax.SAXParser = SAXParser\n   sax.SAXStream = SAXStream\n   sax.createStream = createStream\n\n   // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n   // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n   // since that's the earliest that a buffer overrun could occur.  This way, checks are\n   // as rare as required, but as often as necessary to ensure never crossing this bound.\n   // Furthermore, buffers are only tested at most once per write(), so passing a very\n   // large string into write() might have undesirable effects, but this is manageable by\n   // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n   // edge case, result in creating at most one complete copy of the string passed in.\n   // Set to Infinity to have unlimited buffers.\n   sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n   var buffers = [\n     'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n     'procInstName', 'procInstBody', 'entity', 'attribName',\n     'attribValue', 'cdata', 'script'\n   ]\n\n   sax.EVENTS = [\n     'text',\n     'processinginstruction',\n     'sgmldeclaration',\n     'doctype',\n     'comment',\n     'opentagstart',\n     'attribute',\n     'opentag',\n     'closetag',\n     'opencdata',\n     'cdata',\n     'closecdata',\n     'error',\n     'end',\n     'ready',\n     'script',\n     'opennamespace',\n     'closenamespace'\n   ]\n\n   function SAXParser (strict, opt) {\n     if (!(this instanceof SAXParser)) {\n       return new SAXParser(strict, opt)\n     }\n\n     var parser = this\n     clearBuffers(parser)\n     parser.q = parser.c = ''\n     parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n     parser.opt = opt || {}\n     parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n     parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n     parser.tags = []\n     parser.closed = parser.closedRoot = parser.sawRoot = false\n     parser.tag = parser.error = null\n     parser.strict = !!strict\n     parser.noscript = !!(strict || parser.opt.noscript)\n     parser.state = S.BEGIN\n     parser.strictEntities = parser.opt.strictEntities\n     parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n     parser.attribList = []\n\n     // namespaces form a prototype chain.\n     // it always points at the current tag,\n     // which protos to its parent tag.\n     if (parser.opt.xmlns) {\n       parser.ns = Object.create(rootNS)\n     }\n\n     // mostly just for error reporting\n     parser.trackPosition = parser.opt.position !== false\n     if (parser.trackPosition) {\n       parser.position = parser.line = parser.column = 0\n     }\n     emit(parser, 'onready')\n   }\n\n   if (!Object.create) {\n     Object.create = function (o) {\n       function F () {}\n       F.prototype = o\n       var newf = new F()\n       return newf\n     }\n   }\n\n   if (!Object.keys) {\n     Object.keys = function (o) {\n       var a = []\n       for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n       return a\n     }\n   }\n\n   function checkBufferLength (parser) {\n     var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n     var maxActual = 0\n     for (var i = 0, l = buffers.length; i < l; i++) {\n       var len = parser[buffers[i]].length\n       if (len > maxAllowed) {\n         // Text/cdata nodes can get big, and since they're buffered,\n         // we can get here under normal conditions.\n         // Avoid issues by emitting the text node now,\n         // so at least it won't get any bigger.\n         switch (buffers[i]) {\n           case 'textNode':\n             closeText(parser)\n             break\n\n           case 'cdata':\n             emitNode(parser, 'oncdata', parser.cdata)\n             parser.cdata = ''\n             break\n\n           case 'script':\n             emitNode(parser, 'onscript', parser.script)\n             parser.script = ''\n             break\n\n           default:\n             error(parser, 'Max buffer length exceeded: ' + buffers[i])\n         }\n       }\n       maxActual = Math.max(maxActual, len)\n     }\n     // schedule the next check for the earliest possible buffer overrun.\n     var m = sax.MAX_BUFFER_LENGTH - maxActual\n     parser.bufferCheckPosition = m + parser.position\n   }\n\n   function clearBuffers (parser) {\n     for (var i = 0, l = buffers.length; i < l; i++) {\n       parser[buffers[i]] = ''\n     }\n   }\n\n   function flushBuffers (parser) {\n     closeText(parser)\n     if (parser.cdata !== '') {\n       emitNode(parser, 'oncdata', parser.cdata)\n       parser.cdata = ''\n     }\n     if (parser.script !== '') {\n       emitNode(parser, 'onscript', parser.script)\n       parser.script = ''\n     }\n   }\n\n   SAXParser.prototype = {\n     end: function () { end(this) },\n     write: write,\n     resume: function () { this.error = null; return this },\n     close: function () { return this.write(null) },\n     flush: function () { flushBuffers(this) }\n   }\n\n   var Stream\n   try {\n     Stream = require('stream').Stream\n   } catch (ex) {\n     Stream = function () {}\n   }\n\n   var streamWraps = sax.EVENTS.filter(function (ev) {\n     return ev !== 'error' && ev !== 'end'\n   })\n\n   function createStream (strict, opt) {\n     return new SAXStream(strict, opt)\n   }\n\n   function SAXStream (strict, opt) {\n     if (!(this instanceof SAXStream)) {\n       return new SAXStream(strict, opt)\n     }\n\n     Stream.apply(this)\n\n     this._parser = new SAXParser(strict, opt)\n     this.writable = true\n     this.readable = true\n\n     var me = this\n\n     this._parser.onend = function () {\n       me.emit('end')\n     }\n\n     this._parser.onerror = function (er) {\n       me.emit('error', er)\n\n       // if didn't throw, then means error was handled.\n       // go ahead and clear error, so we can write again.\n       me._parser.error = null\n     }\n\n     this._decoder = null\n\n     streamWraps.forEach(function (ev) {\n       Object.defineProperty(me, 'on' + ev, {\n         get: function () {\n           return me._parser['on' + ev]\n         },\n         set: function (h) {\n           if (!h) {\n             me.removeAllListeners(ev)\n             me._parser['on' + ev] = h\n             return h\n           }\n           me.on(ev, h)\n         },\n         enumerable: true,\n         configurable: false\n       })\n     })\n   }\n\n   SAXStream.prototype = Object.create(Stream.prototype, {\n     constructor: {\n       value: SAXStream\n     }\n   })\n\n   SAXStream.prototype.write = function (data) {\n     if (typeof Buffer === 'function' &&\n       typeof Buffer.isBuffer === 'function' &&\n       Buffer.isBuffer(data)) {\n       if (!this._decoder) {\n         var SD = require('string_decoder').StringDecoder\n         this._decoder = new SD('utf8')\n       }\n       data = this._decoder.write(data)\n     }\n\n     this._parser.write(data.toString())\n     this.emit('data', data)\n     return true\n   }\n\n   SAXStream.prototype.end = function (chunk) {\n     if (chunk && chunk.length) {\n       this.write(chunk)\n     }\n     this._parser.end()\n     return true\n   }\n\n   SAXStream.prototype.on = function (ev, handler) {\n     var me = this\n     if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n       me._parser['on' + ev] = function () {\n         var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n         args.splice(0, 0, ev)\n         me.emit.apply(me, args)\n       }\n     }\n\n     return Stream.prototype.on.call(me, ev, handler)\n   }\n\n   // character classes and tokens\n   var whitespace = '\\r\\n\\t '\n\n   // this really needs to be replaced with character classes.\n   // XML allows all manner of ridiculous numbers and digits.\n   var number = '0124356789'\n   var letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n   // (Letter | \"_\" | \":\")\n   var quote = '\\'\"'\n   var attribEnd = whitespace + '>'\n   var CDATA = '[CDATA['\n   var DOCTYPE = 'DOCTYPE'\n   var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n   var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n   var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n   // turn all the string character sets into character class objects.\n   whitespace = charClass(whitespace)\n   number = charClass(number)\n   letter = charClass(letter)\n\n   // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n   // This implementation works on strings, a single character at a time\n   // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n   // without a significant breaking change to either this  parser, or the\n   // JavaScript language.  Implementation of an emoji-capable xml parser\n   // is left as an exercise for the reader.\n   var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n   var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n   var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n   var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n   quote = charClass(quote)\n   attribEnd = charClass(attribEnd)\n\n   function charClass (str) {\n     return str.split('').reduce(function (s, c) {\n       s[c] = true\n       return s\n     }, {})\n   }\n\n   function isRegExp (c) {\n     return Object.prototype.toString.call(c) === '[object RegExp]'\n   }\n\n   function is (charclass, c) {\n     return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n   }\n\n   function not (charclass, c) {\n     return !is(charclass, c)\n   }\n\n   var S = 0\n   sax.STATE = {\n     BEGIN: S++, // leading byte order mark or whitespace\n     BEGIN_WHITESPACE: S++, // leading whitespace\n     TEXT: S++, // general stuff\n     TEXT_ENTITY: S++, // &amp and such.\n     OPEN_WAKA: S++, // <\n     SGML_DECL: S++, // <!BLARG\n     SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n     DOCTYPE: S++, // <!DOCTYPE\n     DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n     DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n     DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n     COMMENT_STARTING: S++, // <!-\n     COMMENT: S++, // <!--\n     COMMENT_ENDING: S++, // <!-- blah -\n     COMMENT_ENDED: S++, // <!-- blah --\n     CDATA: S++, // <![CDATA[ something\n     CDATA_ENDING: S++, // ]\n     CDATA_ENDING_2: S++, // ]]\n     PROC_INST: S++, // <?hi\n     PROC_INST_BODY: S++, // <?hi there\n     PROC_INST_ENDING: S++, // <?hi \"there\" ?\n     OPEN_TAG: S++, // <strong\n     OPEN_TAG_SLASH: S++, // <strong /\n     ATTRIB: S++, // <a\n     ATTRIB_NAME: S++, // <a foo\n     ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n     ATTRIB_VALUE: S++, // <a foo=\n     ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n     ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n     ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n     ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n     ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n     CLOSE_TAG: S++, // </a\n     CLOSE_TAG_SAW_WHITE: S++, // </a   >\n     SCRIPT: S++, // <script> ...\n     SCRIPT_ENDING: S++ // <script> ... <\n   }\n\n   sax.XML_ENTITIES = {\n     'amp': '&',\n     'gt': '>',\n     'lt': '<',\n     'quot': '\"',\n     'apos': \"'\"\n   }\n\n   sax.ENTITIES = {\n     'amp': '&',\n     'gt': '>',\n     'lt': '<',\n     'quot': '\"',\n     'apos': \"'\",\n     'AElig': 198,\n     'Aacute': 193,\n     'Acirc': 194,\n     'Agrave': 192,\n     'Aring': 197,\n     'Atilde': 195,\n     'Auml': 196,\n     'Ccedil': 199,\n     'ETH': 208,\n     'Eacute': 201,\n     'Ecirc': 202,\n     'Egrave': 200,\n     'Euml': 203,\n     'Iacute': 205,\n     'Icirc': 206,\n     'Igrave': 204,\n     'Iuml': 207,\n     'Ntilde': 209,\n     'Oacute': 211,\n     'Ocirc': 212,\n     'Ograve': 210,\n     'Oslash': 216,\n     'Otilde': 213,\n     'Ouml': 214,\n     'THORN': 222,\n     'Uacute': 218,\n     'Ucirc': 219,\n     'Ugrave': 217,\n     'Uuml': 220,\n     'Yacute': 221,\n     'aacute': 225,\n     'acirc': 226,\n     'aelig': 230,\n     'agrave': 224,\n     'aring': 229,\n     'atilde': 227,\n     'auml': 228,\n     'ccedil': 231,\n     'eacute': 233,\n     'ecirc': 234,\n     'egrave': 232,\n     'eth': 240,\n     'euml': 235,\n     'iacute': 237,\n     'icirc': 238,\n     'igrave': 236,\n     'iuml': 239,\n     'ntilde': 241,\n     'oacute': 243,\n     'ocirc': 244,\n     'ograve': 242,\n     'oslash': 248,\n     'otilde': 245,\n     'ouml': 246,\n     'szlig': 223,\n     'thorn': 254,\n     'uacute': 250,\n     'ucirc': 251,\n     'ugrave': 249,\n     'uuml': 252,\n     'yacute': 253,\n     'yuml': 255,\n     'copy': 169,\n     'reg': 174,\n     'nbsp': 160,\n     'iexcl': 161,\n     'cent': 162,\n     'pound': 163,\n     'curren': 164,\n     'yen': 165,\n     'brvbar': 166,\n     'sect': 167,\n     'uml': 168,\n     'ordf': 170,\n     'laquo': 171,\n     'not': 172,\n     'shy': 173,\n     'macr': 175,\n     'deg': 176,\n     'plusmn': 177,\n     'sup1': 185,\n     'sup2': 178,\n     'sup3': 179,\n     'acute': 180,\n     'micro': 181,\n     'para': 182,\n     'middot': 183,\n     'cedil': 184,\n     'ordm': 186,\n     'raquo': 187,\n     'frac14': 188,\n     'frac12': 189,\n     'frac34': 190,\n     'iquest': 191,\n     'times': 215,\n     'divide': 247,\n     'OElig': 338,\n     'oelig': 339,\n     'Scaron': 352,\n     'scaron': 353,\n     'Yuml': 376,\n     'fnof': 402,\n     'circ': 710,\n     'tilde': 732,\n     'Alpha': 913,\n     'Beta': 914,\n     'Gamma': 915,\n     'Delta': 916,\n     'Epsilon': 917,\n     'Zeta': 918,\n     'Eta': 919,\n     'Theta': 920,\n     'Iota': 921,\n     'Kappa': 922,\n     'Lambda': 923,\n     'Mu': 924,\n     'Nu': 925,\n     'Xi': 926,\n     'Omicron': 927,\n     'Pi': 928,\n     'Rho': 929,\n     'Sigma': 931,\n     'Tau': 932,\n     'Upsilon': 933,\n     'Phi': 934,\n     'Chi': 935,\n     'Psi': 936,\n     'Omega': 937,\n     'alpha': 945,\n     'beta': 946,\n     'gamma': 947,\n     'delta': 948,\n     'epsilon': 949,\n     'zeta': 950,\n     'eta': 951,\n     'theta': 952,\n     'iota': 953,\n     'kappa': 954,\n     'lambda': 955,\n     'mu': 956,\n     'nu': 957,\n     'xi': 958,\n     'omicron': 959,\n     'pi': 960,\n     'rho': 961,\n     'sigmaf': 962,\n     'sigma': 963,\n     'tau': 964,\n     'upsilon': 965,\n     'phi': 966,\n     'chi': 967,\n     'psi': 968,\n     'omega': 969,\n     'thetasym': 977,\n     'upsih': 978,\n     'piv': 982,\n     'ensp': 8194,\n     'emsp': 8195,\n     'thinsp': 8201,\n     'zwnj': 8204,\n     'zwj': 8205,\n     'lrm': 8206,\n     'rlm': 8207,\n     'ndash': 8211,\n     'mdash': 8212,\n     'lsquo': 8216,\n     'rsquo': 8217,\n     'sbquo': 8218,\n     'ldquo': 8220,\n     'rdquo': 8221,\n     'bdquo': 8222,\n     'dagger': 8224,\n     'Dagger': 8225,\n     'bull': 8226,\n     'hellip': 8230,\n     'permil': 8240,\n     'prime': 8242,\n     'Prime': 8243,\n     'lsaquo': 8249,\n     'rsaquo': 8250,\n     'oline': 8254,\n     'frasl': 8260,\n     'euro': 8364,\n     'image': 8465,\n     'weierp': 8472,\n     'real': 8476,\n     'trade': 8482,\n     'alefsym': 8501,\n     'larr': 8592,\n     'uarr': 8593,\n     'rarr': 8594,\n     'darr': 8595,\n     'harr': 8596,\n     'crarr': 8629,\n     'lArr': 8656,\n     'uArr': 8657,\n     'rArr': 8658,\n     'dArr': 8659,\n     'hArr': 8660,\n     'forall': 8704,\n     'part': 8706,\n     'exist': 8707,\n     'empty': 8709,\n     'nabla': 8711,\n     'isin': 8712,\n     'notin': 8713,\n     'ni': 8715,\n     'prod': 8719,\n     'sum': 8721,\n     'minus': 8722,\n     'lowast': 8727,\n     'radic': 8730,\n     'prop': 8733,\n     'infin': 8734,\n     'ang': 8736,\n     'and': 8743,\n     'or': 8744,\n     'cap': 8745,\n     'cup': 8746,\n     'int': 8747,\n     'there4': 8756,\n     'sim': 8764,\n     'cong': 8773,\n     'asymp': 8776,\n     'ne': 8800,\n     'equiv': 8801,\n     'le': 8804,\n     'ge': 8805,\n     'sub': 8834,\n     'sup': 8835,\n     'nsub': 8836,\n     'sube': 8838,\n     'supe': 8839,\n     'oplus': 8853,\n     'otimes': 8855,\n     'perp': 8869,\n     'sdot': 8901,\n     'lceil': 8968,\n     'rceil': 8969,\n     'lfloor': 8970,\n     'rfloor': 8971,\n     'lang': 9001,\n     'rang': 9002,\n     'loz': 9674,\n     'spades': 9824,\n     'clubs': 9827,\n     'hearts': 9829,\n     'diams': 9830\n   }\n\n   Object.keys(sax.ENTITIES).forEach(function (key) {\n     var e = sax.ENTITIES[key]\n     var s = typeof e === 'number' ? String.fromCharCode(e) : e\n     sax.ENTITIES[key] = s\n   })\n\n   for (var s in sax.STATE) {\n     sax.STATE[sax.STATE[s]] = s\n   }\n\n   // shorthand\n   S = sax.STATE\n\n   function emit (parser, event, data) {\n     parser[event] && parser[event](data)\n   }\n\n   function emitNode (parser, nodeType, data) {\n     if (parser.textNode) closeText(parser)\n     emit(parser, nodeType, data)\n   }\n\n   function closeText (parser) {\n     parser.textNode = textopts(parser.opt, parser.textNode)\n     if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n     parser.textNode = ''\n   }\n\n   function textopts (opt, text) {\n     if (opt.trim) text = text.trim()\n     if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n     return text\n   }\n\n   function error (parser, er) {\n     closeText(parser)\n     if (parser.trackPosition) {\n       er += '\\nLine: ' + parser.line +\n         '\\nColumn: ' + parser.column +\n         '\\nChar: ' + parser.c\n     }\n     er = new Error(er)\n     parser.error = er\n     emit(parser, 'onerror', er)\n     return parser\n   }\n\n   function end (parser) {\n     if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n     if ((parser.state !== S.BEGIN) &&\n       (parser.state !== S.BEGIN_WHITESPACE) &&\n       (parser.state !== S.TEXT)) {\n       error(parser, 'Unexpected end')\n     }\n     closeText(parser)\n     parser.c = ''\n     parser.closed = true\n     emit(parser, 'onend')\n     SAXParser.call(parser, parser.strict, parser.opt)\n     return parser\n   }\n\n   function strictFail (parser, message) {\n     if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n       throw new Error('bad call to strictFail')\n     }\n     if (parser.strict) {\n       error(parser, message)\n     }\n   }\n\n   function newTag (parser) {\n     if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n     var parent = parser.tags[parser.tags.length - 1] || parser\n     var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n     // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n     if (parser.opt.xmlns) {\n       tag.ns = parent.ns\n     }\n     parser.attribList.length = 0\n     emitNode(parser, 'onopentagstart', tag)\n   }\n\n   function qname (name, attribute) {\n     var i = name.indexOf(':')\n     var qualName = i < 0 ? [ '', name ] : name.split(':')\n     var prefix = qualName[0]\n     var local = qualName[1]\n\n     // <x \"xmlns\"=\"http://foo\">\n     if (attribute && name === 'xmlns') {\n       prefix = 'xmlns'\n       local = ''\n     }\n\n     return { prefix: prefix, local: local }\n   }\n\n   function attrib (parser) {\n     if (!parser.strict) {\n       parser.attribName = parser.attribName[parser.looseCase]()\n     }\n\n     if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n       parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n       parser.attribName = parser.attribValue = ''\n       return\n     }\n\n     if (parser.opt.xmlns) {\n       var qn = qname(parser.attribName, true)\n       var prefix = qn.prefix\n       var local = qn.local\n\n       if (prefix === 'xmlns') {\n         // namespace binding attribute. push the binding into scope\n         if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n           strictFail(parser,\n             'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n             'Actual: ' + parser.attribValue)\n         } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n           strictFail(parser,\n             'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n             'Actual: ' + parser.attribValue)\n         } else {\n           var tag = parser.tag\n           var parent = parser.tags[parser.tags.length - 1] || parser\n           if (tag.ns === parent.ns) {\n             tag.ns = Object.create(parent.ns)\n           }\n           tag.ns[local] = parser.attribValue\n         }\n       }\n\n       // defer onattribute events until all attributes have been seen\n       // so any new bindings can take effect. preserve attribute order\n       // so deferred events can be emitted in document order\n       parser.attribList.push([parser.attribName, parser.attribValue])\n     } else {\n       // in non-xmlns mode, we can emit the event right away\n       parser.tag.attributes[parser.attribName] = parser.attribValue\n       emitNode(parser, 'onattribute', {\n         name: parser.attribName,\n         value: parser.attribValue\n       })\n     }\n\n     parser.attribName = parser.attribValue = ''\n   }\n\n   function openTag (parser, selfClosing) {\n     if (parser.opt.xmlns) {\n       // emit namespace binding events\n       var tag = parser.tag\n\n       // add namespace info to tag\n       var qn = qname(parser.tagName)\n       tag.prefix = qn.prefix\n       tag.local = qn.local\n       tag.uri = tag.ns[qn.prefix] || ''\n\n       if (tag.prefix && !tag.uri) {\n         strictFail(parser, 'Unbound namespace prefix: ' +\n           JSON.stringify(parser.tagName))\n         tag.uri = qn.prefix\n       }\n\n       var parent = parser.tags[parser.tags.length - 1] || parser\n       if (tag.ns && parent.ns !== tag.ns) {\n         Object.keys(tag.ns).forEach(function (p) {\n           emitNode(parser, 'onopennamespace', {\n             prefix: p,\n             uri: tag.ns[p]\n           })\n         })\n       }\n\n       // handle deferred onattribute events\n       // Note: do not apply default ns to attributes:\n       //   http://www.w3.org/TR/REC-xml-names/#defaulting\n       for (var i = 0, l = parser.attribList.length; i < l; i++) {\n         var nv = parser.attribList[i]\n         var name = nv[0]\n         var value = nv[1]\n         var qualName = qname(name, true)\n         var prefix = qualName.prefix\n         var local = qualName.local\n         var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n         var a = {\n           name: name,\n           value: value,\n           prefix: prefix,\n           local: local,\n           uri: uri\n         }\n\n         // if there's any attributes with an undefined namespace,\n         // then fail on them now.\n         if (prefix && prefix !== 'xmlns' && !uri) {\n           strictFail(parser, 'Unbound namespace prefix: ' +\n             JSON.stringify(prefix))\n           a.uri = prefix\n         }\n         parser.tag.attributes[name] = a\n         emitNode(parser, 'onattribute', a)\n       }\n       parser.attribList.length = 0\n     }\n\n     parser.tag.isSelfClosing = !!selfClosing\n\n     // process the tag\n     parser.sawRoot = true\n     parser.tags.push(parser.tag)\n     emitNode(parser, 'onopentag', parser.tag)\n     if (!selfClosing) {\n       // special case for <script> in non-strict mode.\n       if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n         parser.state = S.SCRIPT\n       } else {\n         parser.state = S.TEXT\n       }\n       parser.tag = null\n       parser.tagName = ''\n     }\n     parser.attribName = parser.attribValue = ''\n     parser.attribList.length = 0\n   }\n\n   function closeTag (parser) {\n     if (!parser.tagName) {\n       strictFail(parser, 'Weird empty close tag.')\n       parser.textNode += '</>'\n       parser.state = S.TEXT\n       return\n     }\n\n     if (parser.script) {\n       if (parser.tagName !== 'script') {\n         parser.script += '</' + parser.tagName + '>'\n         parser.tagName = ''\n         parser.state = S.SCRIPT\n         return\n       }\n       emitNode(parser, 'onscript', parser.script)\n       parser.script = ''\n     }\n\n     // first make sure that the closing tag actually exists.\n     // <a><b></c></b></a> will close everything, otherwise.\n     var t = parser.tags.length\n     var tagName = parser.tagName\n     if (!parser.strict) {\n       tagName = tagName[parser.looseCase]()\n     }\n     var closeTo = tagName\n     while (t--) {\n       var close = parser.tags[t]\n       if (close.name !== closeTo) {\n         // fail the first time in strict mode\n         strictFail(parser, 'Unexpected close tag')\n       } else {\n         break\n       }\n     }\n\n     // didn't find it.  we already failed for strict, so just abort.\n     if (t < 0) {\n       strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n       parser.textNode += '</' + parser.tagName + '>'\n       parser.state = S.TEXT\n       return\n     }\n     parser.tagName = tagName\n     var s = parser.tags.length\n     while (s-- > t) {\n       var tag = parser.tag = parser.tags.pop()\n       parser.tagName = parser.tag.name\n       emitNode(parser, 'onclosetag', parser.tagName)\n\n       var x = {}\n       for (var i in tag.ns) {\n         x[i] = tag.ns[i]\n       }\n\n       var parent = parser.tags[parser.tags.length - 1] || parser\n       if (parser.opt.xmlns && tag.ns !== parent.ns) {\n         // remove namespace bindings introduced by tag\n         Object.keys(tag.ns).forEach(function (p) {\n           var n = tag.ns[p]\n           emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n         })\n       }\n     }\n     if (t === 0) parser.closedRoot = true\n     parser.tagName = parser.attribValue = parser.attribName = ''\n     parser.attribList.length = 0\n     parser.state = S.TEXT\n   }\n\n   function parseEntity (parser) {\n     var entity = parser.entity\n     var entityLC = entity.toLowerCase()\n     var num\n     var numStr = ''\n\n     if (parser.ENTITIES[entity]) {\n       return parser.ENTITIES[entity]\n     }\n     if (parser.ENTITIES[entityLC]) {\n       return parser.ENTITIES[entityLC]\n     }\n     entity = entityLC\n     if (entity.charAt(0) === '#') {\n       if (entity.charAt(1) === 'x') {\n         entity = entity.slice(2)\n         num = parseInt(entity, 16)\n         numStr = num.toString(16)\n       } else {\n         entity = entity.slice(1)\n         num = parseInt(entity, 10)\n         numStr = num.toString(10)\n       }\n     }\n     entity = entity.replace(/^0+/, '')\n     if (numStr.toLowerCase() !== entity) {\n       strictFail(parser, 'Invalid character entity')\n       return '&' + parser.entity + ';'\n     }\n\n     return String.fromCodePoint(num)\n   }\n\n   function beginWhiteSpace (parser, c) {\n     if (c === '<') {\n       parser.state = S.OPEN_WAKA\n       parser.startTagPosition = parser.position\n     } else if (not(whitespace, c)) {\n       // have to process this as a text node.\n       // weird, but happens.\n       strictFail(parser, 'Non-whitespace before first tag.')\n       parser.textNode = c\n       parser.state = S.TEXT\n     }\n   }\n\n   function charAt (chunk, i) {\n     var result = ''\n     if (i < chunk.length) {\n       result = chunk.charAt(i)\n     }\n     return result\n   }\n\n   function write (chunk) {\n     var parser = this\n     if (this.error) {\n       throw this.error\n     }\n     if (parser.closed) {\n       return error(parser,\n         'Cannot write after close. Assign an onready handler.')\n     }\n     if (chunk === null) {\n       return end(parser)\n     }\n     if (typeof chunk === 'object') {\n       chunk = chunk.toString()\n     }\n     var i = 0\n     var c = ''\n     while (true) {\n       c = charAt(chunk, i++)\n       parser.c = c\n       if (!c) {\n         break\n       }\n       if (parser.trackPosition) {\n         parser.position++\n         if (c === '\\n') {\n           parser.line++\n           parser.column = 0\n         } else {\n           parser.column++\n         }\n       }\n       switch (parser.state) {\n         case S.BEGIN:\n           parser.state = S.BEGIN_WHITESPACE\n           if (c === '\\uFEFF') {\n             continue\n           }\n           beginWhiteSpace(parser, c)\n           continue\n\n         case S.BEGIN_WHITESPACE:\n           beginWhiteSpace(parser, c)\n           continue\n\n         case S.TEXT:\n           if (parser.sawRoot && !parser.closedRoot) {\n             var starti = i - 1\n             while (c && c !== '<' && c !== '&') {\n               c = charAt(chunk, i++)\n               if (c && parser.trackPosition) {\n                 parser.position++\n                 if (c === '\\n') {\n                   parser.line++\n                   parser.column = 0\n                 } else {\n                   parser.column++\n                 }\n               }\n             }\n             parser.textNode += chunk.substring(starti, i - 1)\n           }\n           if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n             parser.state = S.OPEN_WAKA\n             parser.startTagPosition = parser.position\n           } else {\n             if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot)) {\n               strictFail(parser, 'Text data outside of root node.')\n             }\n             if (c === '&') {\n               parser.state = S.TEXT_ENTITY\n             } else {\n               parser.textNode += c\n             }\n           }\n           continue\n\n         case S.SCRIPT:\n           // only non-strict\n           if (c === '<') {\n             parser.state = S.SCRIPT_ENDING\n           } else {\n             parser.script += c\n           }\n           continue\n\n         case S.SCRIPT_ENDING:\n           if (c === '/') {\n             parser.state = S.CLOSE_TAG\n           } else {\n             parser.script += '<' + c\n             parser.state = S.SCRIPT\n           }\n           continue\n\n         case S.OPEN_WAKA:\n           // either a /, ?, !, or text is coming next.\n           if (c === '!') {\n             parser.state = S.SGML_DECL\n             parser.sgmlDecl = ''\n           } else if (is(whitespace, c)) {\n             // wait for it...\n           } else if (is(nameStart, c)) {\n             parser.state = S.OPEN_TAG\n             parser.tagName = c\n           } else if (c === '/') {\n             parser.state = S.CLOSE_TAG\n             parser.tagName = ''\n           } else if (c === '?') {\n             parser.state = S.PROC_INST\n             parser.procInstName = parser.procInstBody = ''\n           } else {\n             strictFail(parser, 'Unencoded <')\n             // if there was some whitespace, then add that in.\n             if (parser.startTagPosition + 1 < parser.position) {\n               var pad = parser.position - parser.startTagPosition\n               c = new Array(pad).join(' ') + c\n             }\n             parser.textNode += '<' + c\n             parser.state = S.TEXT\n           }\n           continue\n\n         case S.SGML_DECL:\n           if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n             emitNode(parser, 'onopencdata')\n             parser.state = S.CDATA\n             parser.sgmlDecl = ''\n             parser.cdata = ''\n           } else if (parser.sgmlDecl + c === '--') {\n             parser.state = S.COMMENT\n             parser.comment = ''\n             parser.sgmlDecl = ''\n           } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n             parser.state = S.DOCTYPE\n             if (parser.doctype || parser.sawRoot) {\n               strictFail(parser,\n                 'Inappropriately located doctype declaration')\n             }\n             parser.doctype = ''\n             parser.sgmlDecl = ''\n           } else if (c === '>') {\n             emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n             parser.sgmlDecl = ''\n             parser.state = S.TEXT\n           } else if (is(quote, c)) {\n             parser.state = S.SGML_DECL_QUOTED\n             parser.sgmlDecl += c\n           } else {\n             parser.sgmlDecl += c\n           }\n           continue\n\n         case S.SGML_DECL_QUOTED:\n           if (c === parser.q) {\n             parser.state = S.SGML_DECL\n             parser.q = ''\n           }\n           parser.sgmlDecl += c\n           continue\n\n         case S.DOCTYPE:\n           if (c === '>') {\n             parser.state = S.TEXT\n             emitNode(parser, 'ondoctype', parser.doctype)\n             parser.doctype = true // just remember that we saw it.\n           } else {\n             parser.doctype += c\n             if (c === '[') {\n               parser.state = S.DOCTYPE_DTD\n             } else if (is(quote, c)) {\n               parser.state = S.DOCTYPE_QUOTED\n               parser.q = c\n             }\n           }\n           continue\n\n         case S.DOCTYPE_QUOTED:\n           parser.doctype += c\n           if (c === parser.q) {\n             parser.q = ''\n             parser.state = S.DOCTYPE\n           }\n           continue\n\n         case S.DOCTYPE_DTD:\n           parser.doctype += c\n           if (c === ']') {\n             parser.state = S.DOCTYPE\n           } else if (is(quote, c)) {\n             parser.state = S.DOCTYPE_DTD_QUOTED\n             parser.q = c\n           }\n           continue\n\n         case S.DOCTYPE_DTD_QUOTED:\n           parser.doctype += c\n           if (c === parser.q) {\n             parser.state = S.DOCTYPE_DTD\n             parser.q = ''\n           }\n           continue\n\n         case S.COMMENT:\n           if (c === '-') {\n             parser.state = S.COMMENT_ENDING\n           } else {\n             parser.comment += c\n           }\n           continue\n\n         case S.COMMENT_ENDING:\n           if (c === '-') {\n             parser.state = S.COMMENT_ENDED\n             parser.comment = textopts(parser.opt, parser.comment)\n             if (parser.comment) {\n               emitNode(parser, 'oncomment', parser.comment)\n             }\n             parser.comment = ''\n           } else {\n             parser.comment += '-' + c\n             parser.state = S.COMMENT\n           }\n           continue\n\n         case S.COMMENT_ENDED:\n           if (c !== '>') {\n             strictFail(parser, 'Malformed comment')\n             // allow <!-- blah -- bloo --> in non-strict mode,\n             // which is a comment of \" blah -- bloo \"\n             parser.comment += '--' + c\n             parser.state = S.COMMENT\n           } else {\n             parser.state = S.TEXT\n           }\n           continue\n\n         case S.CDATA:\n           if (c === ']') {\n             parser.state = S.CDATA_ENDING\n           } else {\n             parser.cdata += c\n           }\n           continue\n\n         case S.CDATA_ENDING:\n           if (c === ']') {\n             parser.state = S.CDATA_ENDING_2\n           } else {\n             parser.cdata += ']' + c\n             parser.state = S.CDATA\n           }\n           continue\n\n         case S.CDATA_ENDING_2:\n           if (c === '>') {\n             if (parser.cdata) {\n               emitNode(parser, 'oncdata', parser.cdata)\n             }\n             emitNode(parser, 'onclosecdata')\n             parser.cdata = ''\n             parser.state = S.TEXT\n           } else if (c === ']') {\n             parser.cdata += ']'\n           } else {\n             parser.cdata += ']]' + c\n             parser.state = S.CDATA\n           }\n           continue\n\n         case S.PROC_INST:\n           if (c === '?') {\n             parser.state = S.PROC_INST_ENDING\n           } else if (is(whitespace, c)) {\n             parser.state = S.PROC_INST_BODY\n           } else {\n             parser.procInstName += c\n           }\n           continue\n\n         case S.PROC_INST_BODY:\n           if (!parser.procInstBody && is(whitespace, c)) {\n             continue\n           } else if (c === '?') {\n             parser.state = S.PROC_INST_ENDING\n           } else {\n             parser.procInstBody += c\n           }\n           continue\n\n         case S.PROC_INST_ENDING:\n           if (c === '>') {\n             emitNode(parser, 'onprocessinginstruction', {\n               name: parser.procInstName,\n               body: parser.procInstBody\n             })\n             parser.procInstName = parser.procInstBody = ''\n             parser.state = S.TEXT\n           } else {\n             parser.procInstBody += '?' + c\n             parser.state = S.PROC_INST_BODY\n           }\n           continue\n\n         case S.OPEN_TAG:\n           if (is(nameBody, c)) {\n             parser.tagName += c\n           } else {\n             newTag(parser)\n             if (c === '>') {\n               openTag(parser)\n             } else if (c === '/') {\n               parser.state = S.OPEN_TAG_SLASH\n             } else {\n               if (not(whitespace, c)) {\n                 strictFail(parser, 'Invalid character in tag name')\n               }\n               parser.state = S.ATTRIB\n             }\n           }\n           continue\n\n         case S.OPEN_TAG_SLASH:\n           if (c === '>') {\n             openTag(parser, true)\n             closeTag(parser)\n           } else {\n             strictFail(parser, 'Forward-slash in opening tag not followed by >')\n             parser.state = S.ATTRIB\n           }\n           continue\n\n         case S.ATTRIB:\n           // haven't read the attribute name yet.\n           if (is(whitespace, c)) {\n             continue\n           } else if (c === '>') {\n             openTag(parser)\n           } else if (c === '/') {\n             parser.state = S.OPEN_TAG_SLASH\n           } else if (is(nameStart, c)) {\n             parser.attribName = c\n             parser.attribValue = ''\n             parser.state = S.ATTRIB_NAME\n           } else {\n             strictFail(parser, 'Invalid attribute name')\n           }\n           continue\n\n         case S.ATTRIB_NAME:\n           if (c === '=') {\n             parser.state = S.ATTRIB_VALUE\n           } else if (c === '>') {\n             strictFail(parser, 'Attribute without value')\n             parser.attribValue = parser.attribName\n             attrib(parser)\n             openTag(parser)\n           } else if (is(whitespace, c)) {\n             parser.state = S.ATTRIB_NAME_SAW_WHITE\n           } else if (is(nameBody, c)) {\n             parser.attribName += c\n           } else {\n             strictFail(parser, 'Invalid attribute name')\n           }\n           continue\n\n         case S.ATTRIB_NAME_SAW_WHITE:\n           if (c === '=') {\n             parser.state = S.ATTRIB_VALUE\n           } else if (is(whitespace, c)) {\n             continue\n           } else {\n             strictFail(parser, 'Attribute without value')\n             parser.tag.attributes[parser.attribName] = ''\n             parser.attribValue = ''\n             emitNode(parser, 'onattribute', {\n               name: parser.attribName,\n               value: ''\n             })\n             parser.attribName = ''\n             if (c === '>') {\n               openTag(parser)\n             } else if (is(nameStart, c)) {\n               parser.attribName = c\n               parser.state = S.ATTRIB_NAME\n             } else {\n               strictFail(parser, 'Invalid attribute name')\n               parser.state = S.ATTRIB\n             }\n           }\n           continue\n\n         case S.ATTRIB_VALUE:\n           if (is(whitespace, c)) {\n             continue\n           } else if (is(quote, c)) {\n             parser.q = c\n             parser.state = S.ATTRIB_VALUE_QUOTED\n           } else {\n             strictFail(parser, 'Unquoted attribute value')\n             parser.state = S.ATTRIB_VALUE_UNQUOTED\n             parser.attribValue = c\n           }\n           continue\n\n         case S.ATTRIB_VALUE_QUOTED:\n           if (c !== parser.q) {\n             if (c === '&') {\n               parser.state = S.ATTRIB_VALUE_ENTITY_Q\n             } else {\n               parser.attribValue += c\n             }\n             continue\n           }\n           attrib(parser)\n           parser.q = ''\n           parser.state = S.ATTRIB_VALUE_CLOSED\n           continue\n\n         case S.ATTRIB_VALUE_CLOSED:\n           if (is(whitespace, c)) {\n             parser.state = S.ATTRIB\n           } else if (c === '>') {\n             openTag(parser)\n           } else if (c === '/') {\n             parser.state = S.OPEN_TAG_SLASH\n           } else if (is(nameStart, c)) {\n             strictFail(parser, 'No whitespace between attributes')\n             parser.attribName = c\n             parser.attribValue = ''\n             parser.state = S.ATTRIB_NAME\n           } else {\n             strictFail(parser, 'Invalid attribute name')\n           }\n           continue\n\n         case S.ATTRIB_VALUE_UNQUOTED:\n           if (not(attribEnd, c)) {\n             if (c === '&') {\n               parser.state = S.ATTRIB_VALUE_ENTITY_U\n             } else {\n               parser.attribValue += c\n             }\n             continue\n           }\n           attrib(parser)\n           if (c === '>') {\n             openTag(parser)\n           } else {\n             parser.state = S.ATTRIB\n           }\n           continue\n\n         case S.CLOSE_TAG:\n           if (!parser.tagName) {\n             if (is(whitespace, c)) {\n               continue\n             } else if (not(nameStart, c)) {\n               if (parser.script) {\n                 parser.script += '</' + c\n                 parser.state = S.SCRIPT\n               } else {\n                 strictFail(parser, 'Invalid tagname in closing tag.')\n               }\n             } else {\n               parser.tagName = c\n             }\n           } else if (c === '>') {\n             closeTag(parser)\n           } else if (is(nameBody, c)) {\n             parser.tagName += c\n           } else if (parser.script) {\n             parser.script += '</' + parser.tagName\n             parser.tagName = ''\n             parser.state = S.SCRIPT\n           } else {\n             if (not(whitespace, c)) {\n               strictFail(parser, 'Invalid tagname in closing tag')\n             }\n             parser.state = S.CLOSE_TAG_SAW_WHITE\n           }\n           continue\n\n         case S.CLOSE_TAG_SAW_WHITE:\n           if (is(whitespace, c)) {\n             continue\n           }\n           if (c === '>') {\n             closeTag(parser)\n           } else {\n             strictFail(parser, 'Invalid characters in closing tag')\n           }\n           continue\n\n         case S.TEXT_ENTITY:\n         case S.ATTRIB_VALUE_ENTITY_Q:\n         case S.ATTRIB_VALUE_ENTITY_U:\n           var returnState\n           var buffer\n           switch (parser.state) {\n             case S.TEXT_ENTITY:\n               returnState = S.TEXT\n               buffer = 'textNode'\n               break\n\n             case S.ATTRIB_VALUE_ENTITY_Q:\n               returnState = S.ATTRIB_VALUE_QUOTED\n               buffer = 'attribValue'\n               break\n\n             case S.ATTRIB_VALUE_ENTITY_U:\n               returnState = S.ATTRIB_VALUE_UNQUOTED\n               buffer = 'attribValue'\n               break\n           }\n\n           if (c === ';') {\n             parser[buffer] += parseEntity(parser)\n             parser.entity = ''\n             parser.state = returnState\n           } else if (is(parser.entity.length ? entityBody : entityStart, c)) {\n             parser.entity += c\n           } else {\n             strictFail(parser, 'Invalid character in entity name')\n             parser[buffer] += '&' + parser.entity + c\n             parser.entity = ''\n             parser.state = returnState\n           }\n\n           continue\n\n         default:\n           throw new Error(parser, 'Unknown state: ' + parser.state)\n       }\n     } // while\n\n     if (parser.position >= parser.bufferCheckPosition) {\n       checkBufferLength(parser)\n     }\n     return parser\n   }\n\n   /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n   if (!String.fromCodePoint) {\n     (function () {\n       var stringFromCharCode = String.fromCharCode\n       var floor = Math.floor\n       var fromCodePoint = function () {\n         var MAX_SIZE = 0x4000\n         var codeUnits = []\n         var highSurrogate\n         var lowSurrogate\n         var index = -1\n         var length = arguments.length\n         if (!length) {\n           return ''\n         }\n         var result = ''\n         while (++index < length) {\n           var codePoint = Number(arguments[index])\n           if (\n             !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n             codePoint < 0 || // not a valid Unicode code point\n             codePoint > 0x10FFFF || // not a valid Unicode code point\n             floor(codePoint) !== codePoint // not an integer\n           ) {\n             throw RangeError('Invalid code point: ' + codePoint)\n           }\n           if (codePoint <= 0xFFFF) { // BMP code point\n             codeUnits.push(codePoint)\n           } else { // Astral code point; split in surrogate halves\n             // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n             codePoint -= 0x10000\n             highSurrogate = (codePoint >> 10) + 0xD800\n             lowSurrogate = (codePoint % 0x400) + 0xDC00\n             codeUnits.push(highSurrogate, lowSurrogate)\n           }\n           if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n             result += stringFromCharCode.apply(null, codeUnits)\n             codeUnits.length = 0\n           }\n         }\n         return result\n       }\n       if (Object.defineProperty) {\n         Object.defineProperty(String, 'fromCodePoint', {\n           value: fromCodePoint,\n           configurable: true,\n           writable: true\n         })\n       } else {\n         String.fromCodePoint = fromCodePoint\n       }\n     }())\n   }\n })(typeof exports === 'undefined' ? this.sax = {} : exports)\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'stream': _req,\n  'string_decoder': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}