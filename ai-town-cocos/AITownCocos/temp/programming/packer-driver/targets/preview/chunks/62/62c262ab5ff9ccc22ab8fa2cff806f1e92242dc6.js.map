{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/amplifybackend-2020-08-11.min.json"],"names":["metadata","apiVersion","endpointPrefix","signingName","serviceFullName","serviceId","protocol","jsonVersion","uid","signatureVersion","operations","CloneBackend","http","requestUri","responseCode","input","type","members","AppId","location","locationName","BackendEnvironmentName","TargetEnvironmentName","required","output","Error","JobId","Operation","Status","CreateBackend","AppName","ResourceConfig","ResourceName","CreateBackendAPI","shape","CreateBackendAuth","CreateBackendConfig","BackendManagerAppId","CreateBackendStorage","BucketName","Permissions","ServiceName","CreateToken","ChallengeCode","SessionId","Ttl","DeleteBackend","DeleteBackendAPI","DeleteBackendAuth","DeleteBackendStorage","DeleteToken","IsSuccess","GenerateBackendAPIModels","GetBackend","AmplifyFeatureFlags","AmplifyMetaConfig","BackendEnvironmentList","GetBackendAPI","GetBackendAPIModels","Models","ModelIntrospectionSchema","GetBackendAuth","GetBackendJob","method","CreateTime","UpdateTime","GetBackendStorage","Imported","GetToken","ImportBackendAuth","IdentityPoolId","NativeClientId","UserPoolId","WebClientId","ImportBackendStorage","ListBackendJobs","MaxResults","NextToken","Jobs","member","ListS3Buckets","Buckets","CreationDate","Name","RemoveAllBackends","CleanAmplifyApp","RemoveBackendConfig","UpdateBackendAPI","UpdateBackendAuth","AuthResources","IdentityPoolConfigs","UnauthenticatedLogin","Service","UserPoolConfigs","ForgotPassword","DeliveryMethod","EmailSettings","SmsSettings","Mfa","MFAMode","Settings","OAuth","DomainPrefix","OAuthGrantType","OAuthScopes","RedirectSignInURIs","RedirectSignOutURIs","SocialProviderSettings","PasswordPolicy","AdditionalConstraints","MinimumLength","VerificationMessage","UpdateBackendConfig","LoginAuthConfig","UpdateBackendJob","UpdateBackendStorage","shapes","S8","AdditionalAuthTypes","ApiName","ConflictResolution","ResolutionStrategy","DefaultAuthType","TransformSchema","Sa","Mode","CognitoUserPoolId","Description","ExpirationTime","OpenIDAuthTTL","OpenIDClientId","OpenIDIatTTL","OpenIDIssueURL","OpenIDProviderName","Si","IdentityPoolName","RequiredSignUpAttributes","SignInMethod","UserPoolName","Sq","sensitive","EmailMessage","EmailSubject","Sr","SmsMessage","Su","MfaTypes","Sz","S11","S12","Facebook","Google","LoginWithAmazon","SignInWithApple","ClientId","KeyId","PrivateKey","TeamId","S13","ClientSecret","S16","S1h","Authenticated","UnAuthenticated","S3c","AwsCognitoIdentityPoolId","AwsCognitoRegion","AwsUserPoolsId","AwsUserPoolsWebClientId"],"mappings":"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","sourcesContent":["export default {\n  metadata: {\n    apiVersion: '2020-08-11',\n    endpointPrefix: 'amplifybackend',\n    signingName: 'amplifybackend',\n    serviceFullName: 'AmplifyBackend',\n    serviceId: 'AmplifyBackend',\n    protocol: 'rest-json',\n    jsonVersion: '1.1',\n    uid: 'amplifybackend-2020-08-11',\n    signatureVersion: 'v4'\n  },\n  operations: {\n    CloneBackend: {\n      http: {\n        requestUri: '/backend/{appId}/environments/{backendEnvironmentName}/clone',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          TargetEnvironmentName: {\n            locationName: 'targetEnvironmentName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'TargetEnvironmentName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    CreateBackend: {\n      http: {\n        requestUri: '/backend',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          AppName: {\n            locationName: 'appName'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceConfig: {\n            locationName: 'resourceConfig',\n            type: 'structure',\n            members: {}\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'AppName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    CreateBackendAPI: {\n      http: {\n        requestUri: '/backend/{appId}/api',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceConfig: {\n            shape: 'S8',\n            locationName: 'resourceConfig'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'ResourceName',\n          'BackendEnvironmentName',\n          'ResourceConfig'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    CreateBackendAuth: {\n      http: {\n        requestUri: '/backend/{appId}/auth',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceConfig: {\n            shape: 'Si',\n            locationName: 'resourceConfig'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'ResourceName',\n          'BackendEnvironmentName',\n          'ResourceConfig'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    CreateBackendConfig: {\n      http: {\n        requestUri: '/backend/{appId}/config',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendManagerAppId: {\n            locationName: 'backendManagerAppId'\n          }\n        },\n        required: [\n          'AppId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    CreateBackendStorage: {\n      http: {\n        requestUri: '/backend/{appId}/storage',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceConfig: {\n            locationName: 'resourceConfig',\n            type: 'structure',\n            members: {\n              BucketName: {\n                locationName: 'bucketName'\n              },\n              Permissions: {\n                shape: 'S1h',\n                locationName: 'permissions'\n              },\n              ServiceName: {\n                locationName: 'serviceName'\n              }\n            },\n            required: [\n              'ServiceName',\n              'Permissions'\n            ]\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'ResourceName',\n          'BackendEnvironmentName',\n          'ResourceConfig'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    CreateToken: {\n      http: {\n        requestUri: '/backend/{appId}/challenge',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          }\n        },\n        required: [\n          'AppId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          ChallengeCode: {\n            locationName: 'challengeCode'\n          },\n          SessionId: {\n            locationName: 'sessionId'\n          },\n          Ttl: {\n            locationName: 'ttl'\n          }\n        }\n      }\n    },\n    DeleteBackend: {\n      http: {\n        requestUri: '/backend/{appId}/environments/{backendEnvironmentName}/remove',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    DeleteBackendAPI: {\n      http: {\n        requestUri: '/backend/{appId}/api/{backendEnvironmentName}/remove',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceConfig: {\n            shape: 'S8',\n            locationName: 'resourceConfig'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ResourceName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    DeleteBackendAuth: {\n      http: {\n        requestUri: '/backend/{appId}/auth/{backendEnvironmentName}/remove',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ResourceName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    DeleteBackendStorage: {\n      http: {\n        requestUri: '/backend/{appId}/storage/{backendEnvironmentName}/remove',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          },\n          ServiceName: {\n            locationName: 'serviceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ServiceName',\n          'ResourceName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    DeleteToken: {\n      http: {\n        requestUri: '/backend/{appId}/challenge/{sessionId}/remove',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          SessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          }\n        },\n        required: [\n          'SessionId',\n          'AppId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IsSuccess: {\n            locationName: 'isSuccess',\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    GenerateBackendAPIModels: {\n      http: {\n        requestUri: '/backend/{appId}/api/{backendEnvironmentName}/generateModels',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ResourceName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    GetBackend: {\n      http: {\n        requestUri: '/backend/{appId}/details',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          }\n        },\n        required: [\n          'AppId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AmplifyFeatureFlags: {\n            locationName: 'amplifyFeatureFlags'\n          },\n          AmplifyMetaConfig: {\n            locationName: 'amplifyMetaConfig'\n          },\n          AppId: {\n            locationName: 'appId'\n          },\n          AppName: {\n            locationName: 'appName'\n          },\n          BackendEnvironmentList: {\n            shape: 'S11',\n            locationName: 'backendEnvironmentList'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          }\n        }\n      }\n    },\n    GetBackendAPI: {\n      http: {\n        requestUri: '/backend/{appId}/api/{backendEnvironmentName}/details',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceConfig: {\n            shape: 'S8',\n            locationName: 'resourceConfig'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ResourceName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          ResourceConfig: {\n            shape: 'S8',\n            locationName: 'resourceConfig'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        }\n      }\n    },\n    GetBackendAPIModels: {\n      http: {\n        requestUri: '/backend/{appId}/api/{backendEnvironmentName}/getModels',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ResourceName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Models: {\n            locationName: 'models'\n          },\n          Status: {\n            locationName: 'status'\n          },\n          ModelIntrospectionSchema: {\n            locationName: 'modelIntrospectionSchema'\n          }\n        }\n      }\n    },\n    GetBackendAuth: {\n      http: {\n        requestUri: '/backend/{appId}/auth/{backendEnvironmentName}/details',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ResourceName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          ResourceConfig: {\n            shape: 'Si',\n            locationName: 'resourceConfig'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        }\n      }\n    },\n    GetBackendJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/backend/{appId}/job/{backendEnvironmentName}/{jobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          JobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'JobId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          CreateTime: {\n            locationName: 'createTime'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          },\n          UpdateTime: {\n            locationName: 'updateTime'\n          }\n        }\n      }\n    },\n    GetBackendStorage: {\n      http: {\n        requestUri: '/backend/{appId}/storage/{backendEnvironmentName}/details',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ResourceName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceConfig: {\n            locationName: 'resourceConfig',\n            type: 'structure',\n            members: {\n              BucketName: {\n                locationName: 'bucketName'\n              },\n              Imported: {\n                locationName: 'imported',\n                type: 'boolean'\n              },\n              Permissions: {\n                shape: 'S1h',\n                locationName: 'permissions'\n              },\n              ServiceName: {\n                locationName: 'serviceName'\n              }\n            },\n            required: [\n              'ServiceName',\n              'Imported'\n            ]\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        }\n      }\n    },\n    GetToken: {\n      http: {\n        method: 'GET',\n        requestUri: '/backend/{appId}/challenge/{sessionId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          SessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          }\n        },\n        required: [\n          'SessionId',\n          'AppId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          ChallengeCode: {\n            locationName: 'challengeCode'\n          },\n          SessionId: {\n            locationName: 'sessionId'\n          },\n          Ttl: {\n            locationName: 'ttl'\n          }\n        }\n      }\n    },\n    ImportBackendAuth: {\n      http: {\n        requestUri: '/backend/{appId}/auth/{backendEnvironmentName}/import',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          IdentityPoolId: {\n            locationName: 'identityPoolId'\n          },\n          NativeClientId: {\n            locationName: 'nativeClientId'\n          },\n          UserPoolId: {\n            locationName: 'userPoolId'\n          },\n          WebClientId: {\n            locationName: 'webClientId'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'UserPoolId',\n          'NativeClientId',\n          'WebClientId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    ImportBackendStorage: {\n      http: {\n        requestUri: '/backend/{appId}/storage/{backendEnvironmentName}/import',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          BucketName: {\n            locationName: 'bucketName'\n          },\n          ServiceName: {\n            locationName: 'serviceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ServiceName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    ListBackendJobs: {\n      http: {\n        requestUri: '/backend/{appId}/job/{backendEnvironmentName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          MaxResults: {\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            locationName: 'nextToken'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Jobs: {\n            locationName: 'jobs',\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AppId: {\n                  locationName: 'appId'\n                },\n                BackendEnvironmentName: {\n                  locationName: 'backendEnvironmentName'\n                },\n                CreateTime: {\n                  locationName: 'createTime'\n                },\n                Error: {\n                  locationName: 'error'\n                },\n                JobId: {\n                  locationName: 'jobId'\n                },\n                Operation: {\n                  locationName: 'operation'\n                },\n                Status: {\n                  locationName: 'status'\n                },\n                UpdateTime: {\n                  locationName: 'updateTime'\n                }\n              },\n              required: [\n                'AppId',\n                'BackendEnvironmentName'\n              ]\n            }\n          },\n          NextToken: {\n            locationName: 'nextToken'\n          }\n        }\n      }\n    },\n    ListS3Buckets: {\n      http: {\n        requestUri: '/s3Buckets',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Buckets: {\n            locationName: 'buckets',\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CreationDate: {\n                  locationName: 'creationDate'\n                },\n                Name: {\n                  locationName: 'name'\n                }\n              }\n            }\n          },\n          NextToken: {\n            locationName: 'nextToken'\n          }\n        }\n      }\n    },\n    RemoveAllBackends: {\n      http: {\n        requestUri: '/backend/{appId}/remove',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          CleanAmplifyApp: {\n            locationName: 'cleanAmplifyApp',\n            type: 'boolean'\n          }\n        },\n        required: [\n          'AppId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    RemoveBackendConfig: {\n      http: {\n        requestUri: '/backend/{appId}/config/remove',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          }\n        },\n        required: [\n          'AppId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Error: {\n            locationName: 'error'\n          }\n        }\n      }\n    },\n    UpdateBackendAPI: {\n      http: {\n        requestUri: '/backend/{appId}/api/{backendEnvironmentName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceConfig: {\n            shape: 'S8',\n            locationName: 'resourceConfig'\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ResourceName'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    UpdateBackendAuth: {\n      http: {\n        requestUri: '/backend/{appId}/auth/{backendEnvironmentName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceConfig: {\n            locationName: 'resourceConfig',\n            type: 'structure',\n            members: {\n              AuthResources: {\n                locationName: 'authResources'\n              },\n              IdentityPoolConfigs: {\n                locationName: 'identityPoolConfigs',\n                type: 'structure',\n                members: {\n                  UnauthenticatedLogin: {\n                    locationName: 'unauthenticatedLogin',\n                    type: 'boolean'\n                  }\n                }\n              },\n              Service: {\n                locationName: 'service'\n              },\n              UserPoolConfigs: {\n                locationName: 'userPoolConfigs',\n                type: 'structure',\n                members: {\n                  ForgotPassword: {\n                    locationName: 'forgotPassword',\n                    type: 'structure',\n                    members: {\n                      DeliveryMethod: {\n                        locationName: 'deliveryMethod'\n                      },\n                      EmailSettings: {\n                        shape: 'Sq',\n                        locationName: 'emailSettings'\n                      },\n                      SmsSettings: {\n                        shape: 'Sr',\n                        locationName: 'smsSettings'\n                      }\n                    }\n                  },\n                  Mfa: {\n                    locationName: 'mfa',\n                    type: 'structure',\n                    members: {\n                      MFAMode: {},\n                      Settings: {\n                        shape: 'Su',\n                        locationName: 'settings'\n                      }\n                    }\n                  },\n                  OAuth: {\n                    locationName: 'oAuth',\n                    type: 'structure',\n                    members: {\n                      DomainPrefix: {\n                        locationName: 'domainPrefix'\n                      },\n                      OAuthGrantType: {\n                        locationName: 'oAuthGrantType'\n                      },\n                      OAuthScopes: {\n                        shape: 'Sz',\n                        locationName: 'oAuthScopes'\n                      },\n                      RedirectSignInURIs: {\n                        shape: 'S11',\n                        locationName: 'redirectSignInURIs'\n                      },\n                      RedirectSignOutURIs: {\n                        shape: 'S11',\n                        locationName: 'redirectSignOutURIs'\n                      },\n                      SocialProviderSettings: {\n                        shape: 'S12',\n                        locationName: 'socialProviderSettings'\n                      }\n                    }\n                  },\n                  PasswordPolicy: {\n                    locationName: 'passwordPolicy',\n                    type: 'structure',\n                    members: {\n                      AdditionalConstraints: {\n                        shape: 'S16',\n                        locationName: 'additionalConstraints'\n                      },\n                      MinimumLength: {\n                        locationName: 'minimumLength',\n                        type: 'double'\n                      }\n                    }\n                  },\n                  VerificationMessage: {\n                    locationName: 'verificationMessage',\n                    type: 'structure',\n                    members: {\n                      DeliveryMethod: {\n                        locationName: 'deliveryMethod'\n                      },\n                      EmailSettings: {\n                        shape: 'Sq',\n                        locationName: 'emailSettings'\n                      },\n                      SmsSettings: {\n                        shape: 'Sr',\n                        locationName: 'smsSettings'\n                      }\n                    },\n                    required: [\n                      'DeliveryMethod'\n                    ]\n                  }\n                }\n              }\n            },\n            required: [\n              'AuthResources',\n              'UserPoolConfigs',\n              'Service'\n            ]\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ResourceName',\n          'ResourceConfig'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    },\n    UpdateBackendConfig: {\n      http: {\n        requestUri: '/backend/{appId}/config/update',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          LoginAuthConfig: {\n            shape: 'S3c',\n            locationName: 'loginAuthConfig'\n          }\n        },\n        required: [\n          'AppId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendManagerAppId: {\n            locationName: 'backendManagerAppId'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          LoginAuthConfig: {\n            shape: 'S3c',\n            locationName: 'loginAuthConfig'\n          }\n        }\n      }\n    },\n    UpdateBackendJob: {\n      http: {\n        requestUri: '/backend/{appId}/job/{backendEnvironmentName}/{jobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          JobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'JobId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          CreateTime: {\n            locationName: 'createTime'\n          },\n          Error: {\n            locationName: 'error'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Operation: {\n            locationName: 'operation'\n          },\n          Status: {\n            locationName: 'status'\n          },\n          UpdateTime: {\n            locationName: 'updateTime'\n          }\n        }\n      }\n    },\n    UpdateBackendStorage: {\n      http: {\n        requestUri: '/backend/{appId}/storage/{backendEnvironmentName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AppId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            location: 'uri',\n            locationName: 'backendEnvironmentName'\n          },\n          ResourceConfig: {\n            locationName: 'resourceConfig',\n            type: 'structure',\n            members: {\n              Permissions: {\n                shape: 'S1h',\n                locationName: 'permissions'\n              },\n              ServiceName: {\n                locationName: 'serviceName'\n              }\n            },\n            required: [\n              'ServiceName',\n              'Permissions'\n            ]\n          },\n          ResourceName: {\n            locationName: 'resourceName'\n          }\n        },\n        required: [\n          'AppId',\n          'BackendEnvironmentName',\n          'ResourceName',\n          'ResourceConfig'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AppId: {\n            locationName: 'appId'\n          },\n          BackendEnvironmentName: {\n            locationName: 'backendEnvironmentName'\n          },\n          JobId: {\n            locationName: 'jobId'\n          },\n          Status: {\n            locationName: 'status'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S8: {\n      type: 'structure',\n      members: {\n        AdditionalAuthTypes: {\n          locationName: 'additionalAuthTypes',\n          type: 'list',\n          member: {\n            shape: 'Sa'\n          }\n        },\n        ApiName: {\n          locationName: 'apiName'\n        },\n        ConflictResolution: {\n          locationName: 'conflictResolution',\n          type: 'structure',\n          members: {\n            ResolutionStrategy: {\n              locationName: 'resolutionStrategy'\n            }\n          }\n        },\n        DefaultAuthType: {\n          shape: 'Sa',\n          locationName: 'defaultAuthType'\n        },\n        Service: {\n          locationName: 'service'\n        },\n        TransformSchema: {\n          locationName: 'transformSchema'\n        }\n      }\n    },\n    Sa: {\n      type: 'structure',\n      members: {\n        Mode: {\n          locationName: 'mode'\n        },\n        Settings: {\n          locationName: 'settings',\n          type: 'structure',\n          members: {\n            CognitoUserPoolId: {\n              locationName: 'cognitoUserPoolId'\n            },\n            Description: {\n              locationName: 'description'\n            },\n            ExpirationTime: {\n              locationName: 'expirationTime',\n              type: 'double'\n            },\n            OpenIDAuthTTL: {\n              locationName: 'openIDAuthTTL'\n            },\n            OpenIDClientId: {\n              locationName: 'openIDClientId'\n            },\n            OpenIDIatTTL: {\n              locationName: 'openIDIatTTL'\n            },\n            OpenIDIssueURL: {\n              locationName: 'openIDIssueURL'\n            },\n            OpenIDProviderName: {\n              locationName: 'openIDProviderName'\n            }\n          }\n        }\n      }\n    },\n    Si: {\n      type: 'structure',\n      members: {\n        AuthResources: {\n          locationName: 'authResources'\n        },\n        IdentityPoolConfigs: {\n          locationName: 'identityPoolConfigs',\n          type: 'structure',\n          members: {\n            IdentityPoolName: {\n              locationName: 'identityPoolName'\n            },\n            UnauthenticatedLogin: {\n              locationName: 'unauthenticatedLogin',\n              type: 'boolean'\n            }\n          },\n          required: [\n            'UnauthenticatedLogin',\n            'IdentityPoolName'\n          ]\n        },\n        Service: {\n          locationName: 'service'\n        },\n        UserPoolConfigs: {\n          locationName: 'userPoolConfigs',\n          type: 'structure',\n          members: {\n            ForgotPassword: {\n              locationName: 'forgotPassword',\n              type: 'structure',\n              members: {\n                DeliveryMethod: {\n                  locationName: 'deliveryMethod'\n                },\n                EmailSettings: {\n                  shape: 'Sq',\n                  locationName: 'emailSettings'\n                },\n                SmsSettings: {\n                  shape: 'Sr',\n                  locationName: 'smsSettings'\n                }\n              },\n              required: [\n                'DeliveryMethod'\n              ]\n            },\n            Mfa: {\n              locationName: 'mfa',\n              type: 'structure',\n              members: {\n                MFAMode: {},\n                Settings: {\n                  shape: 'Su',\n                  locationName: 'settings'\n                }\n              },\n              required: [\n                'MFAMode'\n              ]\n            },\n            OAuth: {\n              locationName: 'oAuth',\n              type: 'structure',\n              members: {\n                DomainPrefix: {\n                  locationName: 'domainPrefix'\n                },\n                OAuthGrantType: {\n                  locationName: 'oAuthGrantType'\n                },\n                OAuthScopes: {\n                  shape: 'Sz',\n                  locationName: 'oAuthScopes'\n                },\n                RedirectSignInURIs: {\n                  shape: 'S11',\n                  locationName: 'redirectSignInURIs'\n                },\n                RedirectSignOutURIs: {\n                  shape: 'S11',\n                  locationName: 'redirectSignOutURIs'\n                },\n                SocialProviderSettings: {\n                  shape: 'S12',\n                  locationName: 'socialProviderSettings'\n                }\n              },\n              required: [\n                'RedirectSignOutURIs',\n                'RedirectSignInURIs',\n                'OAuthGrantType',\n                'OAuthScopes'\n              ]\n            },\n            PasswordPolicy: {\n              locationName: 'passwordPolicy',\n              type: 'structure',\n              members: {\n                AdditionalConstraints: {\n                  shape: 'S16',\n                  locationName: 'additionalConstraints'\n                },\n                MinimumLength: {\n                  locationName: 'minimumLength',\n                  type: 'double'\n                }\n              },\n              required: [\n                'MinimumLength'\n              ]\n            },\n            RequiredSignUpAttributes: {\n              locationName: 'requiredSignUpAttributes',\n              type: 'list',\n              member: {}\n            },\n            SignInMethod: {\n              locationName: 'signInMethod'\n            },\n            UserPoolName: {\n              locationName: 'userPoolName'\n            },\n            VerificationMessage: {\n              locationName: 'verificationMessage',\n              type: 'structure',\n              members: {\n                DeliveryMethod: {\n                  locationName: 'deliveryMethod'\n                },\n                EmailSettings: {\n                  shape: 'Sq',\n                  locationName: 'emailSettings'\n                },\n                SmsSettings: {\n                  shape: 'Sr',\n                  locationName: 'smsSettings'\n                }\n              },\n              required: [\n                'DeliveryMethod'\n              ]\n            }\n          },\n          required: [\n            'RequiredSignUpAttributes',\n            'SignInMethod',\n            'UserPoolName'\n          ]\n        }\n      },\n      required: [\n        'AuthResources',\n        'UserPoolConfigs',\n        'Service'\n      ]\n    },\n    Sq: {\n      type: 'structure',\n      sensitive: true,\n      members: {\n        EmailMessage: {\n          locationName: 'emailMessage'\n        },\n        EmailSubject: {\n          locationName: 'emailSubject'\n        }\n      }\n    },\n    Sr: {\n      type: 'structure',\n      sensitive: true,\n      members: {\n        SmsMessage: {\n          locationName: 'smsMessage'\n        }\n      }\n    },\n    Su: {\n      type: 'structure',\n      members: {\n        MfaTypes: {\n          locationName: 'mfaTypes',\n          type: 'list',\n          member: {}\n        },\n        SmsMessage: {\n          locationName: 'smsMessage'\n        }\n      }\n    },\n    Sz: {\n      type: 'list',\n      member: {}\n    },\n    S11: {\n      type: 'list',\n      member: {}\n    },\n    S12: {\n      type: 'structure',\n      members: {\n        Facebook: {\n          shape: 'S13'\n        },\n        Google: {\n          shape: 'S13'\n        },\n        LoginWithAmazon: {\n          shape: 'S13'\n        },\n        SignInWithApple: {\n          type: 'structure',\n          sensitive: true,\n          members: {\n            ClientId: {\n              locationName: 'client_id'\n            },\n            KeyId: {\n              locationName: 'key_id'\n            },\n            PrivateKey: {\n              locationName: 'private_key'\n            },\n            TeamId: {\n              locationName: 'team_id'\n            }\n          }\n        }\n      }\n    },\n    S13: {\n      type: 'structure',\n      sensitive: true,\n      members: {\n        ClientId: {\n          locationName: 'client_id'\n        },\n        ClientSecret: {\n          locationName: 'client_secret'\n        }\n      }\n    },\n    S16: {\n      type: 'list',\n      member: {}\n    },\n    S1h: {\n      type: 'structure',\n      members: {\n        Authenticated: {\n          locationName: 'authenticated',\n          type: 'list',\n          member: {}\n        },\n        UnAuthenticated: {\n          locationName: 'unAuthenticated',\n          type: 'list',\n          member: {}\n        }\n      },\n      required: [\n        'Authenticated'\n      ]\n    },\n    S3c: {\n      type: 'structure',\n      members: {\n        AwsCognitoIdentityPoolId: {\n          locationName: 'aws_cognito_identity_pool_id'\n        },\n        AwsCognitoRegion: {\n          locationName: 'aws_cognito_region'\n        },\n        AwsUserPoolsId: {\n          locationName: 'aws_user_pools_id'\n        },\n        AwsUserPoolsWebClientId: {\n          locationName: 'aws_user_pools_web_client_id'\n        }\n      }\n    }\n  }\n}"]}