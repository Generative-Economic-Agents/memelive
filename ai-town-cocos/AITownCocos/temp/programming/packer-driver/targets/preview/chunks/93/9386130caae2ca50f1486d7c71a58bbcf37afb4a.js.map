{"version":3,"sources":["file:///Users/feiwang/cutepet/assets/cases/ui/scrollview/listViewCtrl.ts"],"names":["_decorator","Component","Node","ScrollView","Label","Button","Vec3","UITransform","instantiate","error","Vec2","ccclass","property","menu","_temp_vec3","ListViewCtrl","_content","_items","_updateTimer","_updateInterval","_lastContentPosY","_itemTemplateUITrans","_contentUITrans","onLoad","scrollView","content","initialize","itemTemplate","_uiProps","uiTransformComp","height","totalCount","spacing","i","spawnCount","item","addChild","itemUITrans","setPosition","labelComp","getComponentInChildren","string","push","getPositionInView","worldPos","parent","getComponent","convertToWorldSpaceAR","position","viewPos","node","convertToNodeSpaceAR","update","dt","items","buffer","bufferZone","isDown","y","offset","length","getPosition","lblTotalItems","addItem","removeItem","moveBottomItemToTop","getItemAtBottom","scrollToFixedPosition","scrollToOffset"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, ScrollView, Label, Button, Vec3, UITransform, instantiate, error, Vec2 } from \"cc\";\nconst { ccclass, property, menu } = _decorator;\n\nconst _temp_vec3 = new Vec3();\n\n@ccclass(\"ListViewCtrl\")\n@menu('UI/ListViewCtrl')\nexport class ListViewCtrl extends Component {\n    @property(Node)\n    public itemTemplate: Node  = null!;\n    @property(ScrollView)\n    public scrollView: ScrollView  = null!;\n    @property\n    public spawnCount = 0; // 初始化 item 数量\n    @property\n    public totalCount = 0; // 滚动列表里总的 item 数量\n    @property\n    public spacing = 0; // item 垂直排布间隔\n    @property\n    public bufferZone = 0; // when item is away from bufferZone, we relocate it\n    @property(Button)\n    public btnAddItem: Button  = null!;\n    @property(Button)\n    public btnRemoveItem: Button  = null!;\n    @property(Button)\n    public btnJumpToPosition: Button  = null!;\n    @property(Label)\n    public lblJumpPosition: Label  = null!;\n    @property(Label)\n    public lblTotalItems: Label  = null!;\n\n    private _content: Node = null!;\n    private _items: Node[] = [];\n    private _updateTimer = 0;\n    private _updateInterval = 0.2;\n    private _lastContentPosY = 0;\n    private _itemTemplateUITrans!: UITransform;\n    private _contentUITrans!: UITransform;\n\n    onLoad() {\n        this._content = this.scrollView.content!;\n        this.initialize();\n        this._updateTimer = 0;\n        this._updateInterval = 0.2;\n        this._lastContentPosY = 0; // use this variable to detect if we are scrolling up or down\n    }\n\n    // 初始化 item\n    initialize() {\n        this._itemTemplateUITrans = this.itemTemplate._uiProps.uiTransformComp!;\n        this._contentUITrans = this._content._uiProps.uiTransformComp!;\n        this._contentUITrans.height = this.totalCount * (this._itemTemplateUITrans.height + this.spacing) + this.spacing; // get total content height\n        for (let i = 0; i < this.spawnCount; ++i) { // spawn items, we only need to do this once\n            let item = instantiate(this.itemTemplate) as Node;\n            this._content.addChild(item);\n            let itemUITrans = item._uiProps.uiTransformComp!;\n            item.setPosition(0, -itemUITrans.height * (0.5 + i) - this.spacing * (i + 1), 0);\n            const labelComp = item.getComponentInChildren(Label)!;\n            labelComp.string = `item_${i}`;\n            this._items.push(item);\n        }\n    }\n\n    getPositionInView(item: Node) {\n        // get item position in scrollview's node space\n        let worldPos = item.parent!.getComponent(UITransform)!.convertToWorldSpaceAR(item.position);\n        let viewPos = this.scrollView.node.getComponent(UITransform)!.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    }\n\n    update(dt: number) {\n        this._updateTimer += dt;\n        if (this._updateTimer < this._updateInterval) return; // we don't need to do the math every frame\n        this._updateTimer = 0;\n        let items = this._items;\n        let buffer = this.bufferZone;\n        let isDown = this.scrollView.content!.position.y < this._lastContentPosY; // scrolling direction\n        let offset = (this._itemTemplateUITrans.height + this.spacing) * items.length;\n        for (let i = 0; i < items.length; ++i) {\n            let viewPos = this.getPositionInView(items[i]);\n            items[i].getPosition(_temp_vec3);\n            if (isDown) {\n                // if away from buffer zone and not reaching top of content\n                if (viewPos.y < -buffer && _temp_vec3.y + offset < 0) {\n                    _temp_vec3.y += offset;\n                    items[i].setPosition(_temp_vec3);\n                }\n            } else {\n                // if away from buffer zone and not reaching bottom of content\n                if (viewPos.y > buffer && _temp_vec3.y - offset > -this._contentUITrans.height) {\n                    _temp_vec3.y -= offset;\n                    items[i].setPosition(_temp_vec3);\n                }\n            }\n        }\n        // update lastContentPosY\n        this._lastContentPosY = this.scrollView.content!.position.y;\n        this.lblTotalItems.string = \"Total Items: \" + this.totalCount;\n    }\n\n    addItem() {\n        this._contentUITrans.height = (this.totalCount + 1) * (this._itemTemplateUITrans.height + this.spacing) + this.spacing; // get total content height\n        this.totalCount = this.totalCount + 1;\n    }\n\n    removeItem() {\n        if (this.totalCount - 1 < 30) {\n            error(\"can't remove item less than 30!\");\n            return;\n        }\n\n        this._contentUITrans.height = (this.totalCount - 1) * (this._itemTemplateUITrans.height + this.spacing) + this.spacing; // get total content height\n        this.totalCount = this.totalCount - 1;\n\n        this.moveBottomItemToTop();\n    }\n\n    moveBottomItemToTop() {\n        let offset = (this._itemTemplateUITrans.height + this.spacing) * this._items.length;\n        let length = this._items.length;\n        let item = this.getItemAtBottom();\n        item.getPosition(_temp_vec3);\n\n        // whether need to move to top\n        if (_temp_vec3.y + offset < 0) {\n            _temp_vec3.y = _temp_vec3.y + offset;\n            item.setPosition(_temp_vec3);\n        }\n    }\n\n    getItemAtBottom() {\n        let item = this._items[0];\n        for (let i = 1; i < this._items.length; ++i) {\n            if (item.position.y > this._items[i].position.y) {\n                item = this._items[i];\n            }\n        }\n        return item;\n    }\n\n    scrollToFixedPosition() {\n        this.scrollView.scrollToOffset(new Vec2(0, 500), 2, true);\n    }\n}\n\n"]}