{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/_compareAscending.js"],"names":["compareAscending","value","other","valIsDefined","undefined","valIsNull","valIsReflexive","valIsSymbol","isSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol"],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAwC;AACtC,QAAID,KAAK,KAAKC,KAAd,EAAqB;AACnB,UAAIC,YAAY,GAAGF,KAAK,KAAKG,SAA7B;AAAA,UACIC,SAAS,GAAGJ,KAAK,KAAK,IAD1B;AAAA,UAEIK,cAAc,GAAGL,KAAK,KAAKA,KAF/B;AAAA,UAGIM,WAAW,GAAGC,QAAQ,CAACP,KAAD,CAH1B;AAKA,UAAIQ,YAAY,GAAGP,KAAK,KAAKE,SAA7B;AAAA,UACIM,SAAS,GAAGR,KAAK,KAAK,IAD1B;AAAA,UAEIS,cAAc,GAAGT,KAAK,KAAKA,KAF/B;AAAA,UAGIU,WAAW,GAAGJ,QAAQ,CAACN,KAAD,CAH1B;;AAKA,UAAK,CAACQ,SAAD,IAAc,CAACE,WAAf,IAA8B,CAACL,WAA/B,IAA8CN,KAAK,GAAGC,KAAvD,IACCK,WAAW,IAAIE,YAAf,IAA+BE,cAA/B,IAAiD,CAACD,SAAlD,IAA+D,CAACE,WADjE,IAECP,SAAS,IAAII,YAAb,IAA6BE,cAF9B,IAGC,CAACR,YAAD,IAAiBQ,cAHlB,IAIA,CAACL,cAJL,EAIqB;AACnB,eAAO,CAAP;AACD;;AACD,UAAK,CAACD,SAAD,IAAc,CAACE,WAAf,IAA8B,CAACK,WAA/B,IAA8CX,KAAK,GAAGC,KAAvD,IACCU,WAAW,IAAIT,YAAf,IAA+BG,cAA/B,IAAiD,CAACD,SAAlD,IAA+D,CAACE,WADjE,IAECG,SAAS,IAAIP,YAAb,IAA6BG,cAF9B,IAGC,CAACG,YAAD,IAAiBH,cAHlB,IAIA,CAACK,cAJL,EAIqB;AACnB,eAAO,CAAC,CAAR;AACD;AACF;;AACD,WAAO,CAAP;AACD;;;;AAtCMH,MAAAA,Q;;;yBAwCQR,gB","sourcesContent":["import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n"]}