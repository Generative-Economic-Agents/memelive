{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/launch-wizard-2018-05-10.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateDeployment","http","requestUri","responseCode","input","type","required","members","deploymentPatternName","dryRun","name","specifications","shape","tags","workloadName","output","deploymentId","DeleteDeployment","status","statusReason","idempotent","GetDeployment","deployment","createdAt","deletedAt","deploymentArn","id","patternName","resourceGroup","GetWorkload","workload","description","displayName","documentationUrl","iconUrl","statusMessage","GetWorkloadDeploymentPattern","workloadDeploymentPattern","member","allowedValues","conditionals","comparator","value","workloadVersionName","ListDeploymentEvents","maxResults","nextToken","deploymentEvents","timestamp","ListDeployments","filters","values","deployments","ListTagsForResource","method","resourceArn","location","locationName","ListWorkloadDeploymentPatterns","workloadDeploymentPatterns","ListWorkloads","workloads","TagResource","UntagResource","tagKeys","shapes","S5","key","sensitive","S8"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-05-10',\n    endpointPrefix: 'launchwizard',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    protocols: [\n      'rest-json'\n    ],\n    serviceFullName: 'AWS Launch Wizard',\n    serviceId: 'Launch Wizard',\n    signatureVersion: 'v4',\n    signingName: 'launchwizard',\n    uid: 'launch-wizard-2018-05-10'\n  },\n  operations: {\n    CreateDeployment: {\n      http: {\n        requestUri: '/createDeployment',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'deploymentPatternName',\n          'name',\n          'specifications',\n          'workloadName'\n        ],\n        members: {\n          deploymentPatternName: {},\n          dryRun: {\n            type: 'boolean'\n          },\n          name: {},\n          specifications: {\n            shape: 'S5'\n          },\n          tags: {\n            shape: 'S8'\n          },\n          workloadName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          deploymentId: {}\n        }\n      }\n    },\n    DeleteDeployment: {\n      http: {\n        requestUri: '/deleteDeployment',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'deploymentId'\n        ],\n        members: {\n          deploymentId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {},\n          statusReason: {}\n        }\n      },\n      idempotent: true\n    },\n    GetDeployment: {\n      http: {\n        requestUri: '/getDeployment',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'deploymentId'\n        ],\n        members: {\n          deploymentId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          deployment: {\n            type: 'structure',\n            members: {\n              createdAt: {\n                type: 'timestamp'\n              },\n              deletedAt: {\n                type: 'timestamp'\n              },\n              deploymentArn: {},\n              id: {},\n              name: {},\n              patternName: {},\n              resourceGroup: {},\n              specifications: {\n                shape: 'S5'\n              },\n              status: {},\n              tags: {\n                shape: 'S8'\n              },\n              workloadName: {}\n            }\n          }\n        }\n      }\n    },\n    GetWorkload: {\n      http: {\n        requestUri: '/getWorkload',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workloadName'\n        ],\n        members: {\n          workloadName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          workload: {\n            type: 'structure',\n            members: {\n              description: {},\n              displayName: {},\n              documentationUrl: {},\n              iconUrl: {},\n              status: {},\n              statusMessage: {},\n              workloadName: {}\n            }\n          }\n        }\n      }\n    },\n    GetWorkloadDeploymentPattern: {\n      http: {\n        requestUri: '/getWorkloadDeploymentPattern',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'deploymentPatternName',\n          'workloadName'\n        ],\n        members: {\n          deploymentPatternName: {},\n          workloadName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          workloadDeploymentPattern: {\n            type: 'structure',\n            members: {\n              deploymentPatternName: {},\n              description: {},\n              displayName: {},\n              specifications: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    allowedValues: {\n                      type: 'list',\n                      member: {}\n                    },\n                    conditionals: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          comparator: {},\n                          name: {},\n                          value: {}\n                        }\n                      }\n                    },\n                    description: {},\n                    name: {},\n                    required: {}\n                  }\n                }\n              },\n              status: {},\n              statusMessage: {},\n              workloadName: {},\n              workloadVersionName: {}\n            }\n          }\n        }\n      }\n    },\n    ListDeploymentEvents: {\n      http: {\n        requestUri: '/listDeploymentEvents',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'deploymentId'\n        ],\n        members: {\n          deploymentId: {},\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          deploymentEvents: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                description: {},\n                name: {},\n                status: {},\n                statusReason: {},\n                timestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDeployments: {\n      http: {\n        requestUri: '/listDeployments',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                values: {\n                  type: 'list',\n                  member: {}\n                }\n              }\n            }\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          deployments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                createdAt: {\n                  type: 'timestamp'\n                },\n                id: {},\n                name: {},\n                patternName: {},\n                status: {},\n                workloadName: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S8'\n          }\n        }\n      }\n    },\n    ListWorkloadDeploymentPatterns: {\n      http: {\n        requestUri: '/listWorkloadDeploymentPatterns',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workloadName'\n        ],\n        members: {\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {},\n          workloadName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          workloadDeploymentPatterns: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                deploymentPatternName: {},\n                description: {},\n                displayName: {},\n                status: {},\n                statusMessage: {},\n                workloadName: {},\n                workloadVersionName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListWorkloads: {\n      http: {\n        requestUri: '/listWorkloads',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          workloads: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                displayName: {},\n                workloadName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S8'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'map',\n      key: {},\n      value: {},\n      sensitive: true\n    },\n    S8: {\n      type: 'map',\n      key: {},\n      value: {}\n    }\n  }\n}"]}