{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_baseIsMatch.js"],"names":["baseIsMatch","object","source","matchData","customizer","index","length","noCustomizer","Object","data","key","objValue","srcValue","undefined","stack","Stack","result","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG"],"mappings":";;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,SAArC,EAAgDC,UAAhD,EAA4D;AAC1D,QAAIC,KAAK,GAAGF,SAAS,CAACG,MAAtB;AAAA,QACIA,MAAM,GAAGD,KADb;AAAA,QAEIE,YAAY,GAAG,CAACH,UAFpB;;AAIA,QAAIH,MAAM,IAAI,IAAd,EAAoB;AAClB,aAAO,CAACK,MAAR;AACD;;AACDL,IAAAA,MAAM,GAAGO,MAAM,CAACP,MAAD,CAAf;;AACA,WAAOI,KAAK,EAAZ,EAAgB;AACd,UAAII,IAAI,GAAGN,SAAS,CAACE,KAAD,CAApB;;AACA,UAAKE,YAAY,IAAIE,IAAI,CAAC,CAAD,CAArB,GACIA,IAAI,CAAC,CAAD,CAAJ,KAAYR,MAAM,CAACQ,IAAI,CAAC,CAAD,CAAL,CADtB,GAEI,EAAEA,IAAI,CAAC,CAAD,CAAJ,IAAWR,MAAb,CAFR,EAGM;AACJ,eAAO,KAAP;AACD;AACF;;AACD,WAAO,EAAEI,KAAF,GAAUC,MAAjB,EAAyB;AACvBG,MAAAA,IAAI,GAAGN,SAAS,CAACE,KAAD,CAAhB;AACA,UAAIK,GAAG,GAAGD,IAAI,CAAC,CAAD,CAAd;AAAA,UACIE,QAAQ,GAAGV,MAAM,CAACS,GAAD,CADrB;AAAA,UAEIE,QAAQ,GAAGH,IAAI,CAAC,CAAD,CAFnB;;AAIA,UAAIF,YAAY,IAAIE,IAAI,CAAC,CAAD,CAAxB,EAA6B;AAC3B,YAAIE,QAAQ,KAAKE,SAAb,IAA0B,EAAEH,GAAG,IAAIT,MAAT,CAA9B,EAAgD;AAC9C,iBAAO,KAAP;AACD;AACF,OAJD,MAIO;AACL,YAAIa,KAAK,GAAG,IAAIC,KAAJ,EAAZ;;AACA,YAAIX,UAAJ,EAAgB;AACd,cAAIY,MAAM,GAAGZ,UAAU,CAACO,QAAD,EAAWC,QAAX,EAAqBF,GAArB,EAA0BT,MAA1B,EAAkCC,MAAlC,EAA0CY,KAA1C,CAAvB;AACD;;AACD,YAAI,EAAEE,MAAM,KAAKH,SAAX,GACEI,WAAW,CAACL,QAAD,EAAWD,QAAX,EAAqBO,oBAAoB,GAAGC,sBAA5C,EAAoEf,UAApE,EAAgFU,KAAhF,CADb,GAEEE,MAFJ,CAAJ,EAGO;AACL,iBAAO,KAAP;AACD;AACF;AACF;;AACD,WAAO,IAAP;AACD;;;;AA3DMD,MAAAA,K;;AACAE,MAAAA,W;;;AAEP;AACIC,MAAAA,oB,GAAuB,C;AACvBC,MAAAA,sB,GAAyB,C;;yBAwDdnB,W","sourcesContent":["import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n"]}