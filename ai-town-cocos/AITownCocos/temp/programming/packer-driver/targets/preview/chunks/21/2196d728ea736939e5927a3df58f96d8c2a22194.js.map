{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/_createRecurry.js"],"names":["createRecurry","func","bitmask","wrapFunc","placeholder","thisArg","partials","holders","argPos","ary","arity","isCurry","WRAP_CURRY_FLAG","newHolders","undefined","newHoldersRight","newPartials","newPartialsRight","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","newData","result","apply","isLaziable","setData","setWrapToString"],"mappings":";;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,aAAT,CAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCC,QAAtC,EAAgDC,WAAhD,EAA6DC,OAA7D,EAAsEC,QAAtE,EAAgFC,OAAhF,EAAyFC,MAAzF,EAAiGC,GAAjG,EAAsGC,KAAtG,EAA6G;AAC3G,QAAIC,OAAO,GAAGT,OAAO,GAAGU,eAAxB;AAAA,QACIC,UAAU,GAAGF,OAAO,GAAGJ,OAAH,GAAaO,SADrC;AAAA,QAEIC,eAAe,GAAGJ,OAAO,GAAGG,SAAH,GAAeP,OAF5C;AAAA,QAGIS,WAAW,GAAGL,OAAO,GAAGL,QAAH,GAAcQ,SAHvC;AAAA,QAIIG,gBAAgB,GAAGN,OAAO,GAAGG,SAAH,GAAeR,QAJ7C;AAMAJ,IAAAA,OAAO,IAAKS,OAAO,GAAGO,iBAAH,GAAuBC,uBAA1C;AACAjB,IAAAA,OAAO,IAAI,EAAES,OAAO,GAAGQ,uBAAH,GAA6BD,iBAAtC,CAAX;;AAEA,QAAI,EAAEhB,OAAO,GAAGkB,qBAAZ,CAAJ,EAAwC;AACtClB,MAAAA,OAAO,IAAI,EAAEmB,cAAc,GAAGC,kBAAnB,CAAX;AACD;;AACD,QAAIC,OAAO,GAAG,CACZtB,IADY,EACNC,OADM,EACGG,OADH,EACYW,WADZ,EACyBH,UADzB,EACqCI,gBADrC,EAEZF,eAFY,EAEKP,MAFL,EAEaC,GAFb,EAEkBC,KAFlB,CAAd;AAKA,QAAIc,MAAM,GAAGrB,QAAQ,CAACsB,KAAT,CAAeX,SAAf,EAA0BS,OAA1B,CAAb;;AACA,QAAIG,UAAU,CAACzB,IAAD,CAAd,EAAsB;AACpB0B,MAAAA,OAAO,CAACH,MAAD,EAASD,OAAT,CAAP;AACD;;AACDC,IAAAA,MAAM,CAACpB,WAAP,GAAqBA,WAArB;AACA,WAAOwB,eAAe,CAACJ,MAAD,EAASvB,IAAT,EAAeC,OAAf,CAAtB;AACD;;;;AArDMwB,MAAAA,U;;AACAC,MAAAA,O;;AACAC,MAAAA,e;;;AAEP;AACIP,MAAAA,c,GAAiB,C;AACjBC,MAAAA,kB,GAAqB,C;AACrBF,MAAAA,qB,GAAwB,C;AACxBR,MAAAA,e,GAAkB,C;AAClBM,MAAAA,iB,GAAoB,E;AACpBC,MAAAA,uB,GAA0B,E;;yBA6CfnB,a","sourcesContent":["import isLaziable from './_isLaziable.js';\nimport setData from './_setData.js';\nimport setWrapToString from './_setWrapToString.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * Creates a function that wraps `func` to continue currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {Function} wrapFunc The function to create the `func` wrapper.\n * @param {*} placeholder The placeholder value.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\n      newHolders = isCurry ? holders : undefined,\n      newHoldersRight = isCurry ? undefined : holders,\n      newPartials = isCurry ? partials : undefined,\n      newPartialsRight = isCurry ? undefined : partials;\n\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n  }\n  var newData = [\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n    newHoldersRight, argPos, ary, arity\n  ];\n\n  var result = wrapFunc.apply(undefined, newData);\n  if (isLaziable(func)) {\n    setData(result, newData);\n  }\n  result.placeholder = placeholder;\n  return setWrapToString(result, func, bitmask);\n}\n\nexport default createRecurry;\n"]}