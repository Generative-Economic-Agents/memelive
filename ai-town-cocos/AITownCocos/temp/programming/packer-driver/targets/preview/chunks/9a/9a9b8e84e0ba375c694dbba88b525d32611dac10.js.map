{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/services/iotdata.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","AWS","blobPayloadOutputOps","util","update","IotData","prototype","validateService","config","endpoint","indexOf","msg","error","Error","name","message","setupRequestListeners","request","addListener","validateResponseBody","operation","convertPayloadToString","resp","body","httpResponse","toString","bodyCheck","trim","charAt","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;;8BAEHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,GAAG,GAAGJ,OAAO,CAAC,SAAD,CAAjB;AAEA;AACD;AACA;;;AACC,YAAIK,oBAAoB,GAAG,CACzB,mBADyB,EAEzB,gBAFyB,EAGzB,mBAHyB,CAA3B;AAMA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACCD,QAAAA,GAAG,CAACE,IAAJ,CAASC,MAAT,CAAgBH,GAAG,CAACI,OAAJ,CAAYC,SAA5B,EAAuC;AACnC;AACL;AACA;AACKC,UAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AACxC,gBAAI,CAAC,KAAKC,MAAL,CAAYC,QAAb,IAAyB,KAAKD,MAAL,CAAYC,QAAZ,CAAqBC,OAArB,CAA6B,GAA7B,KAAqC,CAAlE,EAAqE;AACjE,kBAAIC,GAAG,GAAG,sCACN,mCADJ;AAEA,oBAAMV,GAAG,CAACE,IAAJ,CAASS,KAAT,CAAe,IAAIC,KAAJ,EAAf,EACF;AAACC,gBAAAA,IAAI,EAAE,iBAAP;AAA0BC,gBAAAA,OAAO,EAAEJ;AAAnC,eADE,CAAN;AAEH;AACJ,WAXkC;;AAanC;AACL;AACA;AACKK,UAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BC,OAA/B,EAAwC;AAC3DA,YAAAA,OAAO,CAACC,WAAR,CAAoB,kBAApB,EAAwC,KAAKC,oBAA7C;;AACA,gBAAIjB,oBAAoB,CAACQ,OAArB,CAA6BO,OAAO,CAACG,SAArC,IAAkD,CAAC,CAAvD,EAA0D;AACtDH,cAAAA,OAAO,CAACC,WAAR,CAAoB,aAApB,EAAmCjB,GAAG,CAACE,IAAJ,CAASkB,sBAA5C;AACH;AACJ,WArBkC;;AAuBnC;AACL;AACA;AACKF,UAAAA,oBAAoB,EAAE,SAASA,oBAAT,CAA8BG,IAA9B,EAAoC;AACtD,gBAAIC,IAAI,GAAGD,IAAI,CAACE,YAAL,CAAkBD,IAAlB,CAAuBE,QAAvB,MAAqC,IAAhD;AACA,gBAAIC,SAAS,GAAGH,IAAI,CAACI,IAAL,EAAhB;;AACA,gBAAI,CAACD,SAAD,IAAcA,SAAS,CAACE,MAAV,CAAiB,CAAjB,MAAwB,GAA1C,EAA+C;AAC3CN,cAAAA,IAAI,CAACE,YAAL,CAAkBD,IAAlB,GAAyB,EAAzB;AACH;AACJ;AAhCkC,SAAvC,EArE0F,CA0G3F;;AAEA,2BAAAM,WAAW,GAAG/B,MAAM,CAACF,OAArB;AAGC,OA/GD,EA+GG,OAAO;AACR,mBAAWJ;AADH,OAAP,CA/GH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n\n /**\n  * @api private\n  */\n var blobPayloadOutputOps = [\n   'deleteThingShadow',\n   'getThingShadow',\n   'updateThingShadow'\n ];\n\n /**\n  * Constructs a service interface object. Each API operation is exposed as a\n  * function on service.\n  *\n  * ### Sending a Request Using IotData\n  *\n  * ```javascript\n  * var iotdata = new AWS.IotData({endpoint: 'my.host.tld'});\n  * iotdata.getThingShadow(params, function (err, data) {\n  *   if (err) console.log(err, err.stack); // an error occurred\n  *   else     console.log(data);           // successful response\n  * });\n  * ```\n  *\n  * ### Locking the API Version\n  *\n  * In order to ensure that the IotData object uses this specific API,\n  * you can construct the object by passing the `apiVersion` option to the\n  * constructor:\n  *\n  * ```javascript\n  * var iotdata = new AWS.IotData({\n  *   endpoint: 'my.host.tld',\n  *   apiVersion: '2015-05-28'\n  * });\n  * ```\n  *\n  * You can also set the API version globally in `AWS.config.apiVersions` using\n  * the **iotdata** service identifier:\n  *\n  * ```javascript\n  * AWS.config.apiVersions = {\n  *   iotdata: '2015-05-28',\n  *   // other service API versions\n  * };\n  *\n  * var iotdata = new AWS.IotData({endpoint: 'my.host.tld'});\n  * ```\n  *\n  * @note You *must* provide an `endpoint` configuration parameter when\n  *   constructing this service. See {constructor} for more information.\n  *\n  * @!method constructor(options = {})\n  *   Constructs a service object. This object has one method for each\n  *   API operation.\n  *\n  *   @example Constructing a IotData object\n  *     var iotdata = new AWS.IotData({endpoint: 'my.host.tld'});\n  *   @note You *must* provide an `endpoint` when constructing this service.\n  *   @option (see AWS.Config.constructor)\n  *\n  * @service iotdata\n  * @version 2015-05-28\n  */\n AWS.util.update(AWS.IotData.prototype, {\n     /**\n      * @api private\n      */\n     validateService: function validateService() {\n         if (!this.config.endpoint || this.config.endpoint.indexOf('{') >= 0) {\n             var msg = 'AWS.IotData requires an explicit ' +\n                 '`endpoint\\' configuration option.';\n             throw AWS.util.error(new Error(),\n                 {name: 'InvalidEndpoint', message: msg});\n         }\n     },\n\n     /**\n      * @api private\n      */\n     setupRequestListeners: function setupRequestListeners(request) {\n         request.addListener('validateResponse', this.validateResponseBody);\n         if (blobPayloadOutputOps.indexOf(request.operation) > -1) {\n             request.addListener('extractData', AWS.util.convertPayloadToString);\n         }\n     },\n\n     /**\n      * @api private\n      */\n     validateResponseBody: function validateResponseBody(resp) {\n         var body = resp.httpResponse.body.toString() || '{}';\n         var bodyCheck = body.trim();\n         if (!bodyCheck || bodyCheck.charAt(0) !== '{') {\n             resp.httpResponse.body = '';\n         }\n     }\n\n });\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}