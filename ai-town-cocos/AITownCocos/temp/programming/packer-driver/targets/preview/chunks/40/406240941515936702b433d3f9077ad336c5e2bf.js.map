{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/cloudfront/signer.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","AWS","util","crypto","lib","base64Encode","base64","encode","inherit","queryEncode","string","replacements","replace","match","signPolicy","policy","privateKey","sign","createSign","write","signWithCannedPolicy","expires","keyPairId","JSON","stringify","Statement","Resource","Condition","DateLessThan","Expires","Signature","toString","signWithCustomPolicy","Policy","determineScheme","parts","split","length","Error","getRtmpUrl","rtmpUrl","parsed","parse","path","hash","getResource","handleError","err","callback","handleSuccess","result","CloudFront","Signer","constructor","getSignedCookie","options","cb","signatureHash","cookieHash","key","Object","prototype","hasOwnProperty","call","getSignedUrl","resource","parsedUrl","search","query","signedUrl","format","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core'),\n     url = AWS.util.url,\n     crypto = AWS.util.crypto.lib,\n     base64Encode = AWS.util.base64.encode,\n     inherit = AWS.util.inherit;\n\n var queryEncode = function (string) {\n     var replacements = {\n         '+': '-',\n         '=': '_',\n         '/': '~'\n     };\n     return string.replace(/[\\+=\\/]/g, function (match) {\n         return replacements[match];\n     });\n };\n\n var signPolicy = function (policy, privateKey) {\n     var sign = crypto.createSign('RSA-SHA1');\n     sign.write(policy);\n     return queryEncode(sign.sign(privateKey, 'base64'));\n };\n\n var signWithCannedPolicy = function (url, expires, keyPairId, privateKey) {\n     var policy = JSON.stringify({\n         Statement: [\n             {\n                 Resource: url,\n                 Condition: { DateLessThan: { 'AWS:EpochTime': expires } }\n             }\n         ]\n     });\n\n     return {\n         Expires: expires,\n         'Key-Pair-Id': keyPairId,\n         Signature: signPolicy(policy.toString(), privateKey)\n     };\n };\n\n var signWithCustomPolicy = function (policy, keyPairId, privateKey) {\n     policy = policy.replace(/\\s/mg, '');\n\n     return {\n         Policy: queryEncode(base64Encode(policy)),\n         'Key-Pair-Id': keyPairId,\n         Signature: signPolicy(policy, privateKey)\n     };\n };\n\n var determineScheme = function (url) {\n     var parts = url.split('://');\n     if (parts.length < 2) {\n         throw new Error('Invalid URL.');\n     }\n\n     return parts[0].replace('*', '');\n };\n\n var getRtmpUrl = function (rtmpUrl) {\n     var parsed = url.parse(rtmpUrl);\n     return parsed.path.replace(/^\\//, '') + (parsed.hash || '');\n };\n\n var getResource = function (url) {\n     switch (determineScheme(url)) {\n         case 'http':\n         case 'https':\n             return url;\n         case 'rtmp':\n             return getRtmpUrl(url);\n         default:\n             throw new Error('Invalid URI scheme. Scheme must be one of'\n                 + ' http, https, or rtmp');\n     }\n };\n\n var handleError = function (err, callback) {\n     if (!callback || typeof callback !== 'function') {\n         throw err;\n     }\n\n     callback(err);\n };\n\n var handleSuccess = function (result, callback) {\n     if (!callback || typeof callback !== 'function') {\n         return result;\n     }\n\n     callback(null, result);\n };\n\n AWS.CloudFront.Signer = inherit({\n     /**\n      * A signer object can be used to generate signed URLs and cookies for granting\n      * access to content on restricted CloudFront distributions.\n      *\n      * @see http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html\n      *\n      * @param keyPairId [String]    (Required) The ID of the CloudFront key pair\n      *                              being used.\n      * @param privateKey [String]   (Required) A private key in RSA format.\n      */\n     constructor: function Signer(keyPairId, privateKey) {\n         if (keyPairId === void 0 || privateKey === void 0) {\n             throw new Error('A key pair ID and private key are required');\n         }\n\n         this.keyPairId = keyPairId;\n         this.privateKey = privateKey;\n     },\n\n     /**\n      * Create a signed Amazon CloudFront Cookie.\n      *\n      * @param options [Object]            The options to create a signed cookie.\n      * @option options url [String]     The URL to which the signature will grant\n      *                                  access. Required unless you pass in a full\n      *                                  policy.\n      * @option options expires [Number] A Unix UTC timestamp indicating when the\n      *                                  signature should expire. Required unless you\n      *                                  pass in a full policy.\n      * @option options policy [String]  A CloudFront JSON policy. Required unless\n      *                                  you pass in a url and an expiry time.\n      *\n      * @param cb [Function] if a callback is provided, this function will\n      *   pass the hash as the second parameter (after the error parameter) to\n      *   the callback function.\n      *\n      * @return [Object] if called synchronously (with no callback), returns the\n      *   signed cookie parameters.\n      * @return [null] nothing is returned if a callback is provided.\n      */\n     getSignedCookie: function (options, cb) {\n         var signatureHash = 'policy' in options\n             ? signWithCustomPolicy(options.policy, this.keyPairId, this.privateKey)\n             : signWithCannedPolicy(options.url, options.expires, this.keyPairId, this.privateKey);\n\n         var cookieHash = {};\n         for (var key in signatureHash) {\n             if (Object.prototype.hasOwnProperty.call(signatureHash, key)) {\n                 cookieHash['CloudFront-' + key] = signatureHash[key];\n             }\n         }\n\n         return handleSuccess(cookieHash, cb);\n     },\n\n     /**\n      * Create a signed Amazon CloudFront URL.\n      *\n      * Keep in mind that URLs meant for use in media/flash players may have\n      * different requirements for URL formats (e.g. some require that the\n      * extension be removed, some require the file name to be prefixed\n      * - mp4:<path>, some require you to add \"/cfx/st\" into your URL).\n      *\n      * @param options [Object]          The options to create a signed URL.\n      * @option options url [String]     The URL to which the signature will grant\n      *                                  access. Any query params included with\n      *                                  the URL should be encoded. Required.\n      * @option options expires [Number] A Unix UTC timestamp indicating when the\n      *                                  signature should expire. Required unless you\n      *                                  pass in a full policy.\n      * @option options policy [String]  A CloudFront JSON policy. Required unless\n      *                                  you pass in a url and an expiry time.\n      *\n      * @param cb [Function] if a callback is provided, this function will\n      *   pass the URL as the second parameter (after the error parameter) to\n      *   the callback function.\n      *\n      * @return [String] if called synchronously (with no callback), returns the\n      *   signed URL.\n      * @return [null] nothing is returned if a callback is provided.\n      */\n     getSignedUrl: function (options, cb) {\n         try {\n             var resource = getResource(options.url);\n         } catch (err) {\n             return handleError(err, cb);\n         }\n\n         var parsedUrl = url.parse(options.url, true),\n             signatureHash = Object.prototype.hasOwnProperty.call(options, 'policy')\n                 ? signWithCustomPolicy(options.policy, this.keyPairId, this.privateKey)\n                 : signWithCannedPolicy(resource, options.expires, this.keyPairId, this.privateKey);\n\n         parsedUrl.search = null;\n         for (var key in signatureHash) {\n             if (Object.prototype.hasOwnProperty.call(signatureHash, key)) {\n                 parsedUrl.query[key] = signatureHash[key];\n             }\n         }\n\n         try {\n             var signedUrl = determineScheme(options.url) === 'rtmp'\n                     ? getRtmpUrl(url.format(parsedUrl))\n                     : url.format(parsedUrl);\n         } catch (err) {\n             return handleError(err, cb);\n         }\n\n         return handleSuccess(signedUrl, cb);\n     }\n });\n\n /**\n  * @api private\n  */\n module.exports = AWS.CloudFront.Signer;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}