{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/invert.js"],"names":["constant","createInverter","identity","objectProto","Object","prototype","nativeObjectToString","toString","invert","result","value","key","call"],"mappings":";;;;;;AAAOA,MAAAA,Q;;AACAC,MAAAA,c;;AACAC,MAAAA,Q;;;AAEP;AACIC,MAAAA,W,GAAcC,MAAM,CAACC,S;AAEzB;AACA;AACA;AACA;AACA;;AACIC,MAAAA,oB,GAAuBH,WAAW,CAACI,Q;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACIC,MAAAA,M,GAASP,cAAc,CAAC,UAASQ,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;AACvD,YAAID,KAAK,IAAI,IAAT,IACA,OAAOA,KAAK,CAACH,QAAb,IAAyB,UAD7B,EACyC;AACvCG,UAAAA,KAAK,GAAGJ,oBAAoB,CAACM,IAArB,CAA0BF,KAA1B,CAAR;AACD;;AAEDD,QAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBC,GAAhB;AACD,OAP0B,EAOxBX,QAAQ,CAACE,QAAD,CAPgB,C;;yBASZM,M","sourcesContent":["import constant from './constant.js';\nimport createInverter from './_createInverter.js';\nimport identity from './identity.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nexport default invert;\n"]}