{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/escapeRegExp.js"],"names":["escapeRegExp","string","toString","reHasRegExpChar","test","replace","reRegExpChar","RegExp","source"],"mappings":";;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,YAAT,CAAsBC,MAAtB,EAA8B;AAC5BA,IAAAA,MAAM,GAAGC,QAAQ,CAACD,MAAD,CAAjB;AACA,WAAQA,MAAM,IAAIE,eAAe,CAACC,IAAhB,CAAqBH,MAArB,CAAX,GACHA,MAAM,CAACI,OAAP,CAAeC,YAAf,EAA6B,MAA7B,CADG,GAEHL,MAFJ;AAGD;;;;AA7BMC,MAAAA,Q;;;AAEP;AACA;AACA;AACA;AACII,MAAAA,Y,GAAe,qB;AACfH,MAAAA,e,GAAkBI,MAAM,CAACD,YAAY,CAACE,MAAd,C;;yBAwBbR,Y","sourcesContent":["import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n"]}