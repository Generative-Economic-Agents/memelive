{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/health-2016-08-04.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","DescribeAffectedAccountsForOrganization","input","type","required","members","eventArn","nextToken","maxResults","output","affectedAccounts","member","eventScopeCode","idempotent","DescribeAffectedEntities","filter","eventArns","shape","entityArns","entityValues","lastUpdatedTimes","tags","statusCodes","locale","entities","DescribeAffectedEntitiesForOrganization","organizationEntityFilters","deprecated","deprecatedMessage","organizationEntityAccountFilters","awsAccountId","failedSet","errorName","errorMessage","DescribeEntityAggregates","entityAggregates","count","statuses","DescribeEntityAggregatesForOrganization","awsAccountIds","organizationEntityAggregates","accounts","accountId","DescribeEventAggregates","aggregateField","eventAggregates","aggregateValue","DescribeEventDetails","successfulSet","event","eventDescription","eventMetadata","DescribeEventDetailsForOrganization","organizationEventDetailFilters","DescribeEventTypes","eventTypeCodes","services","eventTypeCategories","eventTypes","service","code","category","DescribeEvents","events","DescribeEventsForOrganization","regions","startTime","endTime","lastUpdatedTime","eventStatusCodes","arn","eventTypeCode","eventTypeCategory","region","statusCode","DescribeHealthServiceStatusForOrganization","healthServiceAccessStatusForOrganization","DisableHealthServiceAccessForOrganization","EnableHealthServiceAccessForOrganization","shapes","Sb","Sc","Se","Sg","Sh","from","to","Sj","Sk","key","value","Sn","Sr","entityArn","entityValue","entityUrl","Sw","S1a","S1k","availabilityZones","startTimes","endTimes","S1l","S1n","S1p","S1t","S1v","S26","availabilityZone","S28","latestDescription","S2a"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2016-08-04',\n    endpointPrefix: 'health',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceAbbreviation: 'AWSHealth',\n    serviceFullName: 'AWS Health APIs and Notifications',\n    serviceId: 'Health',\n    signatureVersion: 'v4',\n    targetPrefix: 'AWSHealth_20160804',\n    uid: 'health-2016-08-04'\n  },\n  operations: {\n    DescribeAffectedAccountsForOrganization: {\n      input: {\n        type: 'structure',\n        required: [\n          'eventArn'\n        ],\n        members: {\n          eventArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          affectedAccounts: {\n            type: 'list',\n            member: {}\n          },\n          eventScopeCode: {},\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeAffectedEntities: {\n      input: {\n        type: 'structure',\n        required: [\n          'filter'\n        ],\n        members: {\n          filter: {\n            type: 'structure',\n            required: [\n              'eventArns'\n            ],\n            members: {\n              eventArns: {\n                shape: 'Sb'\n              },\n              entityArns: {\n                shape: 'Sc'\n              },\n              entityValues: {\n                shape: 'Se'\n              },\n              lastUpdatedTimes: {\n                shape: 'Sg'\n              },\n              tags: {\n                shape: 'Sj'\n              },\n              statusCodes: {\n                shape: 'Sn'\n              }\n            }\n          },\n          locale: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          entities: {\n            shape: 'Sr'\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeAffectedEntitiesForOrganization: {\n      input: {\n        type: 'structure',\n        members: {\n          organizationEntityFilters: {\n            deprecated: true,\n            deprecatedMessage: 'This property is deprecated, use organizationEntityAccountFilters instead.',\n            type: 'list',\n            member: {\n              shape: 'Sw'\n            }\n          },\n          locale: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          },\n          organizationEntityAccountFilters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'eventArn'\n              ],\n              members: {\n                eventArn: {},\n                awsAccountId: {},\n                statusCodes: {\n                  shape: 'Sn'\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          entities: {\n            shape: 'Sr'\n          },\n          failedSet: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                awsAccountId: {},\n                eventArn: {},\n                errorName: {},\n                errorMessage: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeEntityAggregates: {\n      input: {\n        type: 'structure',\n        members: {\n          eventArns: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          entityAggregates: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                eventArn: {},\n                count: {\n                  type: 'integer'\n                },\n                statuses: {\n                  shape: 'S1a'\n                }\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeEntityAggregatesForOrganization: {\n      input: {\n        type: 'structure',\n        required: [\n          'eventArns'\n        ],\n        members: {\n          eventArns: {\n            type: 'list',\n            member: {}\n          },\n          awsAccountIds: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          organizationEntityAggregates: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                eventArn: {},\n                count: {\n                  type: 'integer'\n                },\n                statuses: {\n                  shape: 'S1a'\n                },\n                accounts: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      accountId: {},\n                      count: {\n                        type: 'integer'\n                      },\n                      statuses: {\n                        shape: 'S1a'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeEventAggregates: {\n      input: {\n        type: 'structure',\n        required: [\n          'aggregateField'\n        ],\n        members: {\n          filter: {\n            shape: 'S1k'\n          },\n          aggregateField: {},\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          eventAggregates: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                aggregateValue: {},\n                count: {\n                  type: 'integer'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeEventDetails: {\n      input: {\n        type: 'structure',\n        required: [\n          'eventArns'\n        ],\n        members: {\n          eventArns: {\n            shape: 'Sb'\n          },\n          locale: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          successfulSet: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                event: {\n                  shape: 'S26'\n                },\n                eventDescription: {\n                  shape: 'S28'\n                },\n                eventMetadata: {\n                  shape: 'S2a'\n                }\n              }\n            }\n          },\n          failedSet: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                eventArn: {},\n                errorName: {},\n                errorMessage: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeEventDetailsForOrganization: {\n      input: {\n        type: 'structure',\n        required: [\n          'organizationEventDetailFilters'\n        ],\n        members: {\n          organizationEventDetailFilters: {\n            type: 'list',\n            member: {\n              shape: 'Sw'\n            }\n          },\n          locale: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          successfulSet: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                awsAccountId: {},\n                event: {\n                  shape: 'S26'\n                },\n                eventDescription: {\n                  shape: 'S28'\n                },\n                eventMetadata: {\n                  shape: 'S2a'\n                }\n              }\n            }\n          },\n          failedSet: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                awsAccountId: {},\n                eventArn: {},\n                errorName: {},\n                errorMessage: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeEventTypes: {\n      input: {\n        type: 'structure',\n        members: {\n          filter: {\n            type: 'structure',\n            members: {\n              eventTypeCodes: {\n                type: 'list',\n                member: {}\n              },\n              services: {\n                shape: 'S1n'\n              },\n              eventTypeCategories: {\n                type: 'list',\n                member: {}\n              }\n            }\n          },\n          locale: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          eventTypes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                service: {},\n                code: {},\n                category: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeEvents: {\n      input: {\n        type: 'structure',\n        members: {\n          filter: {\n            shape: 'S1k'\n          },\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          },\n          locale: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          events: {\n            type: 'list',\n            member: {\n              shape: 'S26'\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeEventsForOrganization: {\n      input: {\n        type: 'structure',\n        members: {\n          filter: {\n            type: 'structure',\n            members: {\n              eventTypeCodes: {\n                shape: 'S1l'\n              },\n              awsAccountIds: {\n                type: 'list',\n                member: {}\n              },\n              services: {\n                shape: 'S1n'\n              },\n              regions: {\n                shape: 'S1p'\n              },\n              startTime: {\n                shape: 'Sh'\n              },\n              endTime: {\n                shape: 'Sh'\n              },\n              lastUpdatedTime: {\n                shape: 'Sh'\n              },\n              entityArns: {\n                shape: 'Sc'\n              },\n              entityValues: {\n                shape: 'Se'\n              },\n              eventTypeCategories: {\n                shape: 'S1t'\n              },\n              eventStatusCodes: {\n                shape: 'S1v'\n              }\n            }\n          },\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          },\n          locale: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          events: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                service: {},\n                eventTypeCode: {},\n                eventTypeCategory: {},\n                eventScopeCode: {},\n                region: {},\n                startTime: {\n                  type: 'timestamp'\n                },\n                endTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedTime: {\n                  type: 'timestamp'\n                },\n                statusCode: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeHealthServiceStatusForOrganization: {\n      output: {\n        type: 'structure',\n        members: {\n          healthServiceAccessStatusForOrganization: {}\n        }\n      },\n      idempotent: true\n    },\n    DisableHealthServiceAccessForOrganization: {\n      idempotent: true\n    },\n    EnableHealthServiceAccessForOrganization: {\n      idempotent: true\n    }\n  },\n  shapes: {\n    Sb: {\n      type: 'list',\n      member: {}\n    },\n    Sc: {\n      type: 'list',\n      member: {}\n    },\n    Se: {\n      type: 'list',\n      member: {}\n    },\n    Sg: {\n      type: 'list',\n      member: {\n        shape: 'Sh'\n      }\n    },\n    Sh: {\n      type: 'structure',\n      members: {\n        from: {\n          type: 'timestamp'\n        },\n        to: {\n          type: 'timestamp'\n        }\n      }\n    },\n    Sj: {\n      type: 'list',\n      member: {\n        shape: 'Sk'\n      }\n    },\n    Sk: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sn: {\n      type: 'list',\n      member: {}\n    },\n    Sr: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          entityArn: {},\n          eventArn: {},\n          entityValue: {},\n          entityUrl: {},\n          awsAccountId: {},\n          lastUpdatedTime: {\n            type: 'timestamp'\n          },\n          statusCode: {},\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      }\n    },\n    Sw: {\n      type: 'structure',\n      required: [\n        'eventArn'\n      ],\n      members: {\n        eventArn: {},\n        awsAccountId: {}\n      }\n    },\n    S1a: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'integer'\n      }\n    },\n    S1k: {\n      type: 'structure',\n      members: {\n        eventArns: {\n          shape: 'Sb'\n        },\n        eventTypeCodes: {\n          shape: 'S1l'\n        },\n        services: {\n          shape: 'S1n'\n        },\n        regions: {\n          shape: 'S1p'\n        },\n        availabilityZones: {\n          type: 'list',\n          member: {}\n        },\n        startTimes: {\n          shape: 'Sg'\n        },\n        endTimes: {\n          shape: 'Sg'\n        },\n        lastUpdatedTimes: {\n          shape: 'Sg'\n        },\n        entityArns: {\n          shape: 'Sc'\n        },\n        entityValues: {\n          shape: 'Se'\n        },\n        eventTypeCategories: {\n          shape: 'S1t'\n        },\n        tags: {\n          shape: 'Sj'\n        },\n        eventStatusCodes: {\n          shape: 'S1v'\n        }\n      }\n    },\n    S1l: {\n      type: 'list',\n      member: {}\n    },\n    S1n: {\n      type: 'list',\n      member: {}\n    },\n    S1p: {\n      type: 'list',\n      member: {}\n    },\n    S1t: {\n      type: 'list',\n      member: {}\n    },\n    S1v: {\n      type: 'list',\n      member: {}\n    },\n    S26: {\n      type: 'structure',\n      members: {\n        arn: {},\n        service: {},\n        eventTypeCode: {},\n        eventTypeCategory: {},\n        region: {},\n        availabilityZone: {},\n        startTime: {\n          type: 'timestamp'\n        },\n        endTime: {\n          type: 'timestamp'\n        },\n        lastUpdatedTime: {\n          type: 'timestamp'\n        },\n        statusCode: {},\n        eventScopeCode: {}\n      }\n    },\n    S28: {\n      type: 'structure',\n      members: {\n        latestDescription: {}\n      }\n    },\n    S2a: {\n      type: 'map',\n      key: {},\n      value: {}\n    }\n  }\n}"]}