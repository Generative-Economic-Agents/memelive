{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/slice.js"],"names":["slice","array","start","end","length","isIterateeCall","toInteger","undefined","baseSlice"],"mappings":";;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,KAAT,CAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,GAA7B,EAAkC;AAChC,QAAIC,MAAM,GAAGH,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBA,KAAK,CAACG,MAAvC;;AACA,QAAI,CAACA,MAAL,EAAa;AACX,aAAO,EAAP;AACD;;AACD,QAAID,GAAG,IAAI,OAAOA,GAAP,IAAc,QAArB,IAAiCE,cAAc,CAACJ,KAAD,EAAQC,KAAR,EAAeC,GAAf,CAAnD,EAAwE;AACtED,MAAAA,KAAK,GAAG,CAAR;AACAC,MAAAA,GAAG,GAAGC,MAAN;AACD,KAHD,MAIK;AACHF,MAAAA,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBI,SAAS,CAACJ,KAAD,CAArC;AACAC,MAAAA,GAAG,GAAGA,GAAG,KAAKI,SAAR,GAAoBH,MAApB,GAA6BE,SAAS,CAACH,GAAD,CAA5C;AACD;;AACD,WAAOK,SAAS,CAACP,KAAD,EAAQC,KAAR,EAAeC,GAAf,CAAhB;AACD;;;;AAlCMK,MAAAA,S;;AACAH,MAAAA,c;;AACAC,MAAAA,S;;;yBAkCQN,K","sourcesContent":["import baseSlice from './_baseSlice.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` from `start` up to, but not including, `end`.\n *\n * **Note:** This method is used instead of\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n * returned.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction slice(array, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n    start = 0;\n    end = length;\n  }\n  else {\n    start = start == null ? 0 : toInteger(start);\n    end = end === undefined ? length : toInteger(end);\n  }\n  return baseSlice(array, start, end);\n}\n\nexport default slice;\n"]}