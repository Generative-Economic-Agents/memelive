{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/iotevents-data-2018-10-23.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","BatchAcknowledgeAlarm","http","requestUri","responseCode","input","type","required","members","acknowledgeActionRequests","member","requestId","alarmModelName","keyValue","note","output","errorEntries","shape","BatchDeleteDetector","detectors","messageId","detectorModelName","batchDeleteDetectorErrorEntries","errorCode","errorMessage","BatchDisableAlarm","disableActionRequests","BatchEnableAlarm","enableActionRequests","BatchPutMessage","messages","inputName","payload","timestamp","timeInMillis","BatchPutMessageErrorEntries","BatchResetAlarm","resetActionRequests","BatchSnoozeAlarm","snoozeActionRequests","snoozeDuration","BatchUpdateDetector","state","stateName","variables","name","value","timers","seconds","batchUpdateDetectorErrorEntries","DescribeAlarm","method","location","locationName","alarm","alarmModelVersion","alarmState","ruleEvaluation","simpleRuleEvaluation","inputPropertyValue","operator","thresholdValue","customerAction","actionName","snoozeActionConfiguration","enableActionConfiguration","disableActionConfiguration","acknowledgeActionConfiguration","resetActionConfiguration","systemEvent","eventType","stateChangeConfiguration","triggerType","severity","creationTime","lastUpdateTime","DescribeDetector","detector","detectorModelVersion","ListAlarms","nextToken","maxResults","alarmSummaries","ListDetectors","detectorSummaries","shapes","S9"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-10-23',\n    endpointPrefix: 'data.iotevents',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS IoT Events Data',\n    serviceId: 'IoT Events Data',\n    signatureVersion: 'v4',\n    signingName: 'ioteventsdata',\n    uid: 'iotevents-data-2018-10-23'\n  },\n  operations: {\n    BatchAcknowledgeAlarm: {\n      http: {\n        requestUri: '/alarms/acknowledge',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'acknowledgeActionRequests'\n        ],\n        members: {\n          acknowledgeActionRequests: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'requestId',\n                'alarmModelName'\n              ],\n              members: {\n                requestId: {},\n                alarmModelName: {},\n                keyValue: {},\n                note: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          errorEntries: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    BatchDeleteDetector: {\n      http: {\n        requestUri: '/detectors/delete',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'detectors'\n        ],\n        members: {\n          detectors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'messageId',\n                'detectorModelName'\n              ],\n              members: {\n                messageId: {},\n                detectorModelName: {},\n                keyValue: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          batchDeleteDetectorErrorEntries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                messageId: {},\n                errorCode: {},\n                errorMessage: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    BatchDisableAlarm: {\n      http: {\n        requestUri: '/alarms/disable',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'disableActionRequests'\n        ],\n        members: {\n          disableActionRequests: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'requestId',\n                'alarmModelName'\n              ],\n              members: {\n                requestId: {},\n                alarmModelName: {},\n                keyValue: {},\n                note: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          errorEntries: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    BatchEnableAlarm: {\n      http: {\n        requestUri: '/alarms/enable',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'enableActionRequests'\n        ],\n        members: {\n          enableActionRequests: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'requestId',\n                'alarmModelName'\n              ],\n              members: {\n                requestId: {},\n                alarmModelName: {},\n                keyValue: {},\n                note: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          errorEntries: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    BatchPutMessage: {\n      http: {\n        requestUri: '/inputs/messages',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'messages'\n        ],\n        members: {\n          messages: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'messageId',\n                'inputName',\n                'payload'\n              ],\n              members: {\n                messageId: {},\n                inputName: {},\n                payload: {\n                  type: 'blob'\n                },\n                timestamp: {\n                  type: 'structure',\n                  members: {\n                    timeInMillis: {\n                      type: 'long'\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BatchPutMessageErrorEntries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                messageId: {},\n                errorCode: {},\n                errorMessage: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    BatchResetAlarm: {\n      http: {\n        requestUri: '/alarms/reset',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resetActionRequests'\n        ],\n        members: {\n          resetActionRequests: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'requestId',\n                'alarmModelName'\n              ],\n              members: {\n                requestId: {},\n                alarmModelName: {},\n                keyValue: {},\n                note: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          errorEntries: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    BatchSnoozeAlarm: {\n      http: {\n        requestUri: '/alarms/snooze',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'snoozeActionRequests'\n        ],\n        members: {\n          snoozeActionRequests: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'requestId',\n                'alarmModelName',\n                'snoozeDuration'\n              ],\n              members: {\n                requestId: {},\n                alarmModelName: {},\n                keyValue: {},\n                note: {},\n                snoozeDuration: {\n                  type: 'integer'\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          errorEntries: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    BatchUpdateDetector: {\n      http: {\n        requestUri: '/detectors',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'detectors'\n        ],\n        members: {\n          detectors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'messageId',\n                'detectorModelName',\n                'state'\n              ],\n              members: {\n                messageId: {},\n                detectorModelName: {},\n                keyValue: {},\n                state: {\n                  type: 'structure',\n                  required: [\n                    'stateName',\n                    'variables',\n                    'timers'\n                  ],\n                  members: {\n                    stateName: {},\n                    variables: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        required: [\n                          'name',\n                          'value'\n                        ],\n                        members: {\n                          name: {},\n                          value: {}\n                        }\n                      }\n                    },\n                    timers: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        required: [\n                          'name',\n                          'seconds'\n                        ],\n                        members: {\n                          name: {},\n                          seconds: {\n                            type: 'integer'\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          batchUpdateDetectorErrorEntries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                messageId: {},\n                errorCode: {},\n                errorMessage: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeAlarm: {\n      http: {\n        method: 'GET',\n        requestUri: '/alarms/{alarmModelName}/keyValues/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'alarmModelName'\n        ],\n        members: {\n          alarmModelName: {\n            location: 'uri',\n            locationName: 'alarmModelName'\n          },\n          keyValue: {\n            location: 'querystring',\n            locationName: 'keyValue'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          alarm: {\n            type: 'structure',\n            members: {\n              alarmModelName: {},\n              alarmModelVersion: {},\n              keyValue: {},\n              alarmState: {\n                type: 'structure',\n                members: {\n                  stateName: {},\n                  ruleEvaluation: {\n                    type: 'structure',\n                    members: {\n                      simpleRuleEvaluation: {\n                        type: 'structure',\n                        members: {\n                          inputPropertyValue: {},\n                          operator: {},\n                          thresholdValue: {}\n                        }\n                      }\n                    }\n                  },\n                  customerAction: {\n                    type: 'structure',\n                    members: {\n                      actionName: {},\n                      snoozeActionConfiguration: {\n                        type: 'structure',\n                        members: {\n                          snoozeDuration: {\n                            type: 'integer'\n                          },\n                          note: {}\n                        }\n                      },\n                      enableActionConfiguration: {\n                        type: 'structure',\n                        members: {\n                          note: {}\n                        }\n                      },\n                      disableActionConfiguration: {\n                        type: 'structure',\n                        members: {\n                          note: {}\n                        }\n                      },\n                      acknowledgeActionConfiguration: {\n                        type: 'structure',\n                        members: {\n                          note: {}\n                        }\n                      },\n                      resetActionConfiguration: {\n                        type: 'structure',\n                        members: {\n                          note: {}\n                        }\n                      }\n                    }\n                  },\n                  systemEvent: {\n                    type: 'structure',\n                    members: {\n                      eventType: {},\n                      stateChangeConfiguration: {\n                        type: 'structure',\n                        members: {\n                          triggerType: {}\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              severity: {\n                type: 'integer'\n              },\n              creationTime: {\n                type: 'timestamp'\n              },\n              lastUpdateTime: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeDetector: {\n      http: {\n        method: 'GET',\n        requestUri: '/detectors/{detectorModelName}/keyValues/'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'detectorModelName'\n        ],\n        members: {\n          detectorModelName: {\n            location: 'uri',\n            locationName: 'detectorModelName'\n          },\n          keyValue: {\n            location: 'querystring',\n            locationName: 'keyValue'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          detector: {\n            type: 'structure',\n            members: {\n              detectorModelName: {},\n              keyValue: {},\n              detectorModelVersion: {},\n              state: {\n                type: 'structure',\n                required: [\n                  'stateName',\n                  'variables',\n                  'timers'\n                ],\n                members: {\n                  stateName: {},\n                  variables: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      required: [\n                        'name',\n                        'value'\n                      ],\n                      members: {\n                        name: {},\n                        value: {}\n                      }\n                    }\n                  },\n                  timers: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      required: [\n                        'name',\n                        'timestamp'\n                      ],\n                      members: {\n                        name: {},\n                        timestamp: {\n                          type: 'timestamp'\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              creationTime: {\n                type: 'timestamp'\n              },\n              lastUpdateTime: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    ListAlarms: {\n      http: {\n        method: 'GET',\n        requestUri: '/alarms/{alarmModelName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'alarmModelName'\n        ],\n        members: {\n          alarmModelName: {\n            location: 'uri',\n            locationName: 'alarmModelName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          alarmSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                alarmModelName: {},\n                alarmModelVersion: {},\n                keyValue: {},\n                stateName: {},\n                creationTime: {\n                  type: 'timestamp'\n                },\n                lastUpdateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDetectors: {\n      http: {\n        method: 'GET',\n        requestUri: '/detectors/{detectorModelName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'detectorModelName'\n        ],\n        members: {\n          detectorModelName: {\n            location: 'uri',\n            locationName: 'detectorModelName'\n          },\n          stateName: {\n            location: 'querystring',\n            locationName: 'stateName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          detectorSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                detectorModelName: {},\n                keyValue: {},\n                detectorModelVersion: {},\n                state: {\n                  type: 'structure',\n                  members: {\n                    stateName: {}\n                  }\n                },\n                creationTime: {\n                  type: 'timestamp'\n                },\n                lastUpdateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S9: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          requestId: {},\n          errorCode: {},\n          errorMessage: {}\n        }\n      }\n    }\n  }\n}"]}