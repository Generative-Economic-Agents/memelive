{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/dynamodb-2011-12-05.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","BatchGetItem","input","type","required","members","RequestItems","shape","output","Responses","key","value","Items","ConsumedCapacityUnits","UnprocessedKeys","BatchWriteItem","UnprocessedItems","CreateTable","TableName","KeySchema","ProvisionedThroughput","TableDescription","DeleteItem","Key","Expected","ReturnValues","Attributes","DeleteTable","DescribeTable","Table","GetItem","AttributesToGet","ConsistentRead","Item","ListTables","ExclusiveStartTableName","Limit","TableNames","member","LastEvaluatedTableName","PutItem","Query","Count","HashKeyValue","RangeKeyCondition","ScanIndexForward","ExclusiveStartKey","LastEvaluatedKey","Scan","ScanFilter","ScannedCount","UpdateItem","AttributeUpdates","Value","Action","UpdateTable","shapes","S2","Keys","S6","HashKeyElement","RangeKeyElement","S7","S","N","B","SS","NS","BS","Se","Sk","Sl","So","PutRequest","DeleteRequest","Ss","Sy","Sz","AttributeName","AttributeType","S12","ReadCapacityUnits","WriteCapacityUnits","S15","TableStatus","CreationDateTime","LastIncreaseDateTime","LastDecreaseDateTime","NumberOfDecreasesToday","TableSizeBytes","ItemCount","S1b","Exists","S1u","AttributeValueList","ComparisonOperator"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2011-12-05',\n    endpointPrefix: 'dynamodb',\n    jsonVersion: '1.0',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceAbbreviation: 'DynamoDB',\n    serviceFullName: 'Amazon DynamoDB',\n    serviceId: 'DynamoDB',\n    signatureVersion: 'v4',\n    targetPrefix: 'DynamoDB_20111205',\n    uid: 'dynamodb-2011-12-05'\n  },\n  operations: {\n    BatchGetItem: {\n      input: {\n        type: 'structure',\n        required: [\n          'RequestItems'\n        ],\n        members: {\n          RequestItems: {\n            shape: 'S2'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Responses: {\n            type: 'map',\n            key: {},\n            value: {\n              type: 'structure',\n              members: {\n                Items: {\n                  shape: 'Sk'\n                },\n                ConsumedCapacityUnits: {\n                  type: 'double'\n                }\n              }\n            }\n          },\n          UnprocessedKeys: {\n            shape: 'S2'\n          }\n        }\n      }\n    },\n    BatchWriteItem: {\n      input: {\n        type: 'structure',\n        required: [\n          'RequestItems'\n        ],\n        members: {\n          RequestItems: {\n            shape: 'So'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Responses: {\n            type: 'map',\n            key: {},\n            value: {\n              type: 'structure',\n              members: {\n                ConsumedCapacityUnits: {\n                  type: 'double'\n                }\n              }\n            }\n          },\n          UnprocessedItems: {\n            shape: 'So'\n          }\n        }\n      }\n    },\n    CreateTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'TableName',\n          'KeySchema',\n          'ProvisionedThroughput'\n        ],\n        members: {\n          TableName: {},\n          KeySchema: {\n            shape: 'Sy'\n          },\n          ProvisionedThroughput: {\n            shape: 'S12'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TableDescription: {\n            shape: 'S15'\n          }\n        }\n      }\n    },\n    DeleteItem: {\n      input: {\n        type: 'structure',\n        required: [\n          'TableName',\n          'Key'\n        ],\n        members: {\n          TableName: {},\n          Key: {\n            shape: 'S6'\n          },\n          Expected: {\n            shape: 'S1b'\n          },\n          ReturnValues: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Attributes: {\n            shape: 'Sl'\n          },\n          ConsumedCapacityUnits: {\n            type: 'double'\n          }\n        }\n      }\n    },\n    DeleteTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'TableName'\n        ],\n        members: {\n          TableName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TableDescription: {\n            shape: 'S15'\n          }\n        }\n      }\n    },\n    DescribeTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'TableName'\n        ],\n        members: {\n          TableName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Table: {\n            shape: 'S15'\n          }\n        }\n      }\n    },\n    GetItem: {\n      input: {\n        type: 'structure',\n        required: [\n          'TableName',\n          'Key'\n        ],\n        members: {\n          TableName: {},\n          Key: {\n            shape: 'S6'\n          },\n          AttributesToGet: {\n            shape: 'Se'\n          },\n          ConsistentRead: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Item: {\n            shape: 'Sl'\n          },\n          ConsumedCapacityUnits: {\n            type: 'double'\n          }\n        }\n      }\n    },\n    ListTables: {\n      input: {\n        type: 'structure',\n        members: {\n          ExclusiveStartTableName: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TableNames: {\n            type: 'list',\n            member: {}\n          },\n          LastEvaluatedTableName: {}\n        }\n      }\n    },\n    PutItem: {\n      input: {\n        type: 'structure',\n        required: [\n          'TableName',\n          'Item'\n        ],\n        members: {\n          TableName: {},\n          Item: {\n            shape: 'Ss'\n          },\n          Expected: {\n            shape: 'S1b'\n          },\n          ReturnValues: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Attributes: {\n            shape: 'Sl'\n          },\n          ConsumedCapacityUnits: {\n            type: 'double'\n          }\n        }\n      }\n    },\n    Query: {\n      input: {\n        type: 'structure',\n        required: [\n          'TableName',\n          'HashKeyValue'\n        ],\n        members: {\n          TableName: {},\n          AttributesToGet: {\n            shape: 'Se'\n          },\n          Limit: {\n            type: 'integer'\n          },\n          ConsistentRead: {\n            type: 'boolean'\n          },\n          Count: {\n            type: 'boolean'\n          },\n          HashKeyValue: {\n            shape: 'S7'\n          },\n          RangeKeyCondition: {\n            shape: 'S1u'\n          },\n          ScanIndexForward: {\n            type: 'boolean'\n          },\n          ExclusiveStartKey: {\n            shape: 'S6'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Items: {\n            shape: 'Sk'\n          },\n          Count: {\n            type: 'integer'\n          },\n          LastEvaluatedKey: {\n            shape: 'S6'\n          },\n          ConsumedCapacityUnits: {\n            type: 'double'\n          }\n        }\n      }\n    },\n    Scan: {\n      input: {\n        type: 'structure',\n        required: [\n          'TableName'\n        ],\n        members: {\n          TableName: {},\n          AttributesToGet: {\n            shape: 'Se'\n          },\n          Limit: {\n            type: 'integer'\n          },\n          Count: {\n            type: 'boolean'\n          },\n          ScanFilter: {\n            type: 'map',\n            key: {},\n            value: {\n              shape: 'S1u'\n            }\n          },\n          ExclusiveStartKey: {\n            shape: 'S6'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Items: {\n            shape: 'Sk'\n          },\n          Count: {\n            type: 'integer'\n          },\n          ScannedCount: {\n            type: 'integer'\n          },\n          LastEvaluatedKey: {\n            shape: 'S6'\n          },\n          ConsumedCapacityUnits: {\n            type: 'double'\n          }\n        }\n      }\n    },\n    UpdateItem: {\n      input: {\n        type: 'structure',\n        required: [\n          'TableName',\n          'Key',\n          'AttributeUpdates'\n        ],\n        members: {\n          TableName: {},\n          Key: {\n            shape: 'S6'\n          },\n          AttributeUpdates: {\n            type: 'map',\n            key: {},\n            value: {\n              type: 'structure',\n              members: {\n                Value: {\n                  shape: 'S7'\n                },\n                Action: {}\n              }\n            }\n          },\n          Expected: {\n            shape: 'S1b'\n          },\n          ReturnValues: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Attributes: {\n            shape: 'Sl'\n          },\n          ConsumedCapacityUnits: {\n            type: 'double'\n          }\n        }\n      }\n    },\n    UpdateTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'TableName',\n          'ProvisionedThroughput'\n        ],\n        members: {\n          TableName: {},\n          ProvisionedThroughput: {\n            shape: 'S12'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TableDescription: {\n            shape: 'S15'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S2: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        required: [\n          'Keys'\n        ],\n        members: {\n          Keys: {\n            type: 'list',\n            member: {\n              shape: 'S6'\n            }\n          },\n          AttributesToGet: {\n            shape: 'Se'\n          },\n          ConsistentRead: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    S6: {\n      type: 'structure',\n      required: [\n        'HashKeyElement'\n      ],\n      members: {\n        HashKeyElement: {\n          shape: 'S7'\n        },\n        RangeKeyElement: {\n          shape: 'S7'\n        }\n      }\n    },\n    S7: {\n      type: 'structure',\n      members: {\n        S: {},\n        N: {},\n        B: {\n          type: 'blob'\n        },\n        SS: {\n          type: 'list',\n          member: {}\n        },\n        NS: {\n          type: 'list',\n          member: {}\n        },\n        BS: {\n          type: 'list',\n          member: {\n            type: 'blob'\n          }\n        }\n      }\n    },\n    Se: {\n      type: 'list',\n      member: {}\n    },\n    Sk: {\n      type: 'list',\n      member: {\n        shape: 'Sl'\n      }\n    },\n    Sl: {\n      type: 'map',\n      key: {},\n      value: {\n        shape: 'S7'\n      }\n    },\n    So: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'list',\n        member: {\n          type: 'structure',\n          members: {\n            PutRequest: {\n              type: 'structure',\n              required: [\n                'Item'\n              ],\n              members: {\n                Item: {\n                  shape: 'Ss'\n                }\n              }\n            },\n            DeleteRequest: {\n              type: 'structure',\n              required: [\n                'Key'\n              ],\n              members: {\n                Key: {\n                  shape: 'S6'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    Ss: {\n      type: 'map',\n      key: {},\n      value: {\n        shape: 'S7'\n      }\n    },\n    Sy: {\n      type: 'structure',\n      required: [\n        'HashKeyElement'\n      ],\n      members: {\n        HashKeyElement: {\n          shape: 'Sz'\n        },\n        RangeKeyElement: {\n          shape: 'Sz'\n        }\n      }\n    },\n    Sz: {\n      type: 'structure',\n      required: [\n        'AttributeName',\n        'AttributeType'\n      ],\n      members: {\n        AttributeName: {},\n        AttributeType: {}\n      }\n    },\n    S12: {\n      type: 'structure',\n      required: [\n        'ReadCapacityUnits',\n        'WriteCapacityUnits'\n      ],\n      members: {\n        ReadCapacityUnits: {\n          type: 'long'\n        },\n        WriteCapacityUnits: {\n          type: 'long'\n        }\n      }\n    },\n    S15: {\n      type: 'structure',\n      members: {\n        TableName: {},\n        KeySchema: {\n          shape: 'Sy'\n        },\n        TableStatus: {},\n        CreationDateTime: {\n          type: 'timestamp'\n        },\n        ProvisionedThroughput: {\n          type: 'structure',\n          members: {\n            LastIncreaseDateTime: {\n              type: 'timestamp'\n            },\n            LastDecreaseDateTime: {\n              type: 'timestamp'\n            },\n            NumberOfDecreasesToday: {\n              type: 'long'\n            },\n            ReadCapacityUnits: {\n              type: 'long'\n            },\n            WriteCapacityUnits: {\n              type: 'long'\n            }\n          }\n        },\n        TableSizeBytes: {\n          type: 'long'\n        },\n        ItemCount: {\n          type: 'long'\n        }\n      }\n    },\n    S1b: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        members: {\n          Value: {\n            shape: 'S7'\n          },\n          Exists: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    S1u: {\n      type: 'structure',\n      required: [\n        'ComparisonOperator'\n      ],\n      members: {\n        AttributeValueList: {\n          type: 'list',\n          member: {\n            shape: 'S7'\n          }\n        },\n        ComparisonOperator: {}\n      }\n    }\n  }\n}"]}