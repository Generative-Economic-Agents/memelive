{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/assets/src/module/main/catWork/WorkPostCardShow.ts"],"names":["_decorator","Component","Label","Node","observer","socket","WorkCatModel","WebUtils","network","WorkState","showMsgWithMask","ccclass","property","shareTGPostCard","WorkPostCardShow","start","updateWorkInfo","storyTxt","string","currentStory","finalEarn","getRemoteImg","currentWorkResultImg","storyImg","node","setScale","update","deltaTime","closePostCard","shareDone","state","WORK_DONE_REWARDING","catWorkData","GetWorkReward","data","workId","currentWorkId","sendWebSocketBinary","resetWorkInfo","btn","active","sharePostCard","post"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AAC9BC,MAAAA,Q,iBAAAA,Q;AAAUC,MAAAA,M,iBAAAA,M;;AACZC,MAAAA,Y;;AACAC,MAAAA,Q;;AACEC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,S,iBAAAA,S;;AAEAC,MAAAA,e,iBAAAA,e;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;iCAEjBa,e,GAAkB,iB;;kCAGlBC,gB,WADZH,OAAO,CAAC,kBAAD,C,UAGHC,QAAQ,CAACV,KAAD,C,UAERU,QAAQ,CAACT,IAAD,C,UAERS,QAAQ,CAACV,KAAD,C,UAERU,QAAQ,CAACT,IAAD,C,2BATb,MACaW,gBADb,SACsCb,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAW5Cc,QAAAA,KAAK,GAAG,CACJ;AACH;;AACDC,QAAAA,cAAc,GAAG;AACb,eAAKC,QAAL,CAAcC,MAAd,GAAuB;AAAA;AAAA,4CAAaC,YAApC;AACA,eAAKC,SAAL,CAAeF,MAAf,yBAA4C;AAAA;AAAA,4CAAaE,SAAzD;AACA;AAAA;AAAA,oCAASC,YAAT,CAAsB;AAAA;AAAA,4CAAaC,oBAAnC,EAAyD,KAAKC,QAA9D,EAAwE,MAAI;AACxE,iBAAKC,IAAL,CAAUC,QAAV,CAAmB,CAAnB,EAAsB,CAAtB;AACH,WAFD;AAGH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,aAAa,GAAE;AACX,cAAG,CAAC;AAAA;AAAA,4CAAaC,SAAjB,EAA2B;AACvB;AAAA;AAAA,oDAAgB,kBAAhB;AACA;AACH,WAJU,CAKX;;;AACA,cAAG;AAAA;AAAA,4CAAaC,KAAb,KAAuB;AAAA;AAAA,sCAAUC,mBAApC,EAAwD;AACpD,gBAAIC,WAAW,GAAG,IAAI;AAAA;AAAA,oCAAQC,aAAZ,EAAlB;AACAD,YAAAA,WAAW,CAACE,IAAZ,CAAiBC,MAAjB,GAA0B;AAAA;AAAA,8CAAaC,aAAvC;AACA;AAAA;AAAA,kCAAOC,mBAAP,CAA2BL,WAA3B;AACH;;AACD;AAAA;AAAA,4CAAaM,aAAb;AACA,eAAKC,GAAL,CAASC,MAAT,GAAkB,KAAlB;AACA,eAAKhB,IAAL,CAAUgB,MAAV,GAAmB,KAAnB;AACH;;AAEDC,QAAAA,aAAa,GAAE;AACX;AAAA;AAAA,4CAAaZ,SAAb,GAAyB,KAAzB;AACA;AAAA;AAAA,oCAASa,IAAT,CAAc7B,eAAd,EAFW,CAIX;AACH;;AA/C2C,O;;;;;iBAGnB,I;;;;;;;iBAED,I;;;;;;;iBAEE,I;;;;;;;iBAEP,I","sourcesContent":["import { _decorator, Component, Label, Node, Sprite } from 'cc';\nimport { observer, socket, uiMgr } from '../../../game/App';\nimport WorkCatModel from '../../../model/WorkCatModel';\nimport WebUtils from '../../../utils/WebUtils';\nimport { network } from '../../../model/RequestData';\nimport { WorkState } from '../../../game/config/DataStruct';\nimport { LoadingController } from '../../../game/components/LoadingController';\nimport { showMsgWithMask } from '../../../core/message/MaskToastManager';\nconst { ccclass, property } = _decorator;\n\nexport const shareTGPostCard = 'shareTGPostCard'\n\n@ccclass('WorkPostCardShow')\nexport class WorkPostCardShow extends Component {\n\n    @property(Label)\n    public storyTxt: Label = null;\n    @property(Node)\n    public storyImg: Node = null;\n    @property(Label)\n    public finalEarn: Label = null;\n    @property(Node)\n    public btn: Node = null;\n\n    start() {\n        //this.updateWorkInfo()\n    }\n    updateWorkInfo() {\n        this.storyTxt.string = WorkCatModel.currentStory\n        this.finalEarn.string = `Final Earning  = ${WorkCatModel.finalEarn}`\n        WebUtils.getRemoteImg(WorkCatModel.currentWorkResultImg, this.storyImg, ()=>{\n            this.node.setScale(1, 1)\n        });\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    closePostCard(){\n        if(!WorkCatModel.shareDone){\n            showMsgWithMask('sharing picture!')\n            return\n        }\n        //uiMgr.removeParent(\"prefabs/pre_post_card\");\n        if(WorkCatModel.state === WorkState.WORK_DONE_REWARDING){\n            let catWorkData = new network.GetWorkReward\n            catWorkData.data.workId = WorkCatModel.currentWorkId\n            socket.sendWebSocketBinary(catWorkData)\n        }\n        WorkCatModel.resetWorkInfo()\n        this.btn.active = false\n        this.node.active = false\n    }\n\n    sharePostCard(){\n        WorkCatModel.shareDone = false\n        observer.post(shareTGPostCard)\n       \n        //this.closePostCard()\n    }\n\n\n}\n\n"]}