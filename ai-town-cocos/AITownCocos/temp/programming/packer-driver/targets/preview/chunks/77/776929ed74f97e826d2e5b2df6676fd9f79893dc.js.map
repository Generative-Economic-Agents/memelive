{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/extsprintf/lib/extsprintf.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","mod_assert","mod_util","sprintf","jsSprintf","printf","jsPrintf","fprintf","jsFprintf","fmt","regex","join","re","RegExp","args","Array","prototype","slice","call","arguments","flags","width","precision","conversion","left","pad","sign","arg","match","ret","argn","equal","exec","substring","length","Error","shift","undefined","doPad","toString","Math","floor","inspect","dumpException","unshift","process","stdout","apply","stream","write","chr","str","ex","constructor","name","stack","cause","cex","_cjsExports","_sprintf","_printf","_fprintf"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'assert';\nimport { __cjsMetaURL as _req0} from 'util';\nlet _cjsExports;\nlet _sprintf;\nlet _printf;\nlet _fprintf;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n /*\n  * extsprintf.js: extended POSIX-style sprintf\n  */\n\n var mod_assert = require('assert');\n var mod_util = require('util');\n\n /*\n  * Public interface\n  */\n exports.sprintf = jsSprintf;\n exports.printf = jsPrintf;\n exports.fprintf = jsFprintf;\n\n /*\n  * Stripped down version of s[n]printf(3c).  We make a best effort to throw an\n  * exception when given a format string we don't understand, rather than\n  * ignoring it, so that we won't break existing programs if/when we go implement\n  * the rest of this.\n  *\n  * This implementation currently supports specifying\n  *\t- field alignment ('-' flag),\n  * \t- zero-pad ('0' flag)\n  *\t- always show numeric sign ('+' flag),\n  *\t- field width\n  *\t- conversions for strings, decimal integers, and floats (numbers).\n  *\t- argument size specifiers.  These are all accepted but ignored, since\n  *\t  Javascript has no notion of the physical size of an argument.\n  *\n  * Everything else is currently unsupported, most notably precision, unsigned\n  * numbers, non-decimal numbers, and characters.\n  */\n function jsSprintf(fmt)\n {\n \tvar regex = [\n \t    '([^%]*)',\t\t\t\t/* normal text */\n \t    '%',\t\t\t\t/* start of format */\n \t    '([\\'\\\\-+ #0]*?)',\t\t\t/* flags (optional) */\n \t    '([1-9]\\\\d*)?',\t\t\t/* width (optional) */\n \t    '(\\\\.([1-9]\\\\d*))?',\t\t/* precision (optional) */\n \t    '[lhjztL]*?',\t\t\t/* length mods (ignored) */\n \t    '([diouxXfFeEgGaAcCsSp%jr])'\t/* conversion */\n \t].join('');\n\n \tvar re = new RegExp(regex);\n \tvar args = Array.prototype.slice.call(arguments, 1);\n \tvar flags, width, precision, conversion;\n \tvar left, pad, sign, arg, match;\n \tvar ret = '';\n \tvar argn = 1;\n\n \tmod_assert.equal('string', typeof (fmt));\n\n \twhile ((match = re.exec(fmt)) !== null) {\n \t\tret += match[1];\n \t\tfmt = fmt.substring(match[0].length);\n\n \t\tflags = match[2] || '';\n \t\twidth = match[3] || 0;\n \t\tprecision = match[4] || '';\n \t\tconversion = match[6];\n \t\tleft = false;\n \t\tsign = false;\n \t\tpad = ' ';\n\n \t\tif (conversion == '%') {\n \t\t\tret += '%';\n \t\t\tcontinue;\n \t\t}\n\n \t\tif (args.length === 0)\n \t\t\tthrow (new Error('too few args to sprintf'));\n\n \t\targ = args.shift();\n \t\targn++;\n\n \t\tif (flags.match(/[\\' #]/))\n \t\t\tthrow (new Error(\n \t\t\t    'unsupported flags: ' + flags));\n\n \t\tif (precision.length > 0)\n \t\t\tthrow (new Error(\n \t\t\t    'non-zero precision not supported'));\n\n \t\tif (flags.match(/-/))\n \t\t\tleft = true;\n\n \t\tif (flags.match(/0/))\n \t\t\tpad = '0';\n\n \t\tif (flags.match(/\\+/))\n \t\t\tsign = true;\n\n \t\tswitch (conversion) {\n \t\tcase 's':\n \t\t\tif (arg === undefined || arg === null)\n \t\t\t\tthrow (new Error('argument ' + argn +\n \t\t\t\t    ': attempted to print undefined or null ' +\n \t\t\t\t    'as a string'));\n \t\t\tret += doPad(pad, width, left, arg.toString());\n \t\t\tbreak;\n\n \t\tcase 'd':\n \t\t\targ = Math.floor(arg);\n \t\t\t/*jsl:fallthru*/\n \t\tcase 'f':\n \t\t\tsign = sign && arg > 0 ? '+' : '';\n \t\t\tret += sign + doPad(pad, width, left,\n \t\t\t    arg.toString());\n \t\t\tbreak;\n\n \t\tcase 'x':\n \t\t\tret += doPad(pad, width, left, arg.toString(16));\n \t\t\tbreak;\n\n \t\tcase 'j': /* non-standard */\n \t\t\tif (width === 0)\n \t\t\t\twidth = 10;\n \t\t\tret += mod_util.inspect(arg, false, width);\n \t\t\tbreak;\n\n \t\tcase 'r': /* non-standard */\n \t\t\tret += dumpException(arg);\n \t\t\tbreak;\n\n \t\tdefault:\n \t\t\tthrow (new Error('unsupported conversion: ' +\n \t\t\t    conversion));\n \t\t}\n \t}\n\n \tret += fmt;\n \treturn (ret);\n }\n\n function jsPrintf() {\n \tvar args = Array.prototype.slice.call(arguments);\n \targs.unshift(process.stdout);\n \tjsFprintf.apply(null, args);\n }\n\n function jsFprintf(stream) {\n \tvar args = Array.prototype.slice.call(arguments, 1);\n \treturn (stream.write(jsSprintf.apply(this, args)));\n }\n\n function doPad(chr, width, left, str)\n {\n \tvar ret = str;\n\n \twhile (ret.length < width) {\n \t\tif (left)\n \t\t\tret += chr;\n \t\telse\n \t\t\tret = chr + ret;\n \t}\n\n \treturn (ret);\n }\n\n /*\n  * This function dumps long stack traces for exceptions having a cause() method.\n  * See node-verror for an example.\n  */\n function dumpException(ex)\n {\n \tvar ret;\n\n \tif (!(ex instanceof Error))\n \t\tthrow (new Error(jsSprintf('invalid type for %%r: %j', ex)));\n\n \t/* Note that V8 prepends \"ex.stack\" with ex.toString(). */\n \tret = 'EXCEPTION: ' + ex.constructor.name + ': ' + ex.stack;\n\n \tif (ex.cause && typeof (ex.cause) === 'function') {\n \t\tvar cex = ex.cause();\n \t\tif (cex) {\n \t\t\tret += '\\nCaused by: ' + dumpException(cex);\n \t\t}\n \t}\n\n \treturn (ret);\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_sprintf = module.exports.sprintf;\n_printf = module.exports.printf;\n_fprintf = module.exports.fprintf;\n\n}, () => ({\n  'assert': _req,\n  'util': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}