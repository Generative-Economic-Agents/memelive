{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/assets/src/utils/loadSpineData.ts"],"names":["loadRemoteSpineRes","atlas","ske","image","ske_component","cat","call_back","assetManager","loadAny","url","ext","error","assets","loadRemote","spine_texture","asset","sp","SkeletonData","skeletonJson","JSON","parse","atlasText","texture","Texture2D","textures","textureNames","_uuid","skeletonData","active","log","TAG","Log"],"mappings":";;;;;AAIO,WAASA,kBAAT,CAA4BC,KAA5B,EAA2CC,GAA3C,EAAwDC,KAAxD,EAAuEC,aAAvE,EAAmGC,GAAnG,EAAqHC,SAArH,EAA0I;AAAA,QAAvCD,GAAuC;AAAvCA,MAAAA,GAAuC,GAA3B,IAA2B;AAAA;;AAC7IE,IAAAA,YAAY,CAACC,OAAb,CAAqB,CAAC;AAAEC,MAAAA,GAAG,EAAER,KAAP;AAAcS,MAAAA,GAAG,EAAE;AAAnB,KAAD,EAA8B;AAAED,MAAAA,GAAG,EAAEP,GAAP;AAAYQ,MAAAA,GAAG,EAAE;AAAjB,KAA9B,CAArB,EAA+E,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9FL,MAAAA,YAAY,CAACM,UAAb,CAAwBV,KAAxB,EAA+B,CAACQ,KAAD,EAAQG,aAAR,KAAsC;AACjE,YAAI;AACA,cAAIC,KAAK,GAAG,IAAIC,EAAE,CAACC,YAAP,EAAZ;AACAF,UAAAA,KAAK,CAACG,YAAN,GAAqBC,IAAI,CAACC,KAAL,CAAWR,MAAM,CAAC,CAAD,CAAjB,CAArB;AACAG,UAAAA,KAAK,CAACM,SAAN,GAAkBT,MAAM,CAAC,CAAD,CAAxB;AACA,cAAIU,OAAO,GAAG,IAAIC,SAAJ,EAAd;AACAD,UAAAA,OAAO,CAACnB,KAAR,GAAgBW,aAAhB;AACAC,UAAAA,KAAK,CAACS,QAAN,GAAiB,CAACF,OAAD,CAAjB;AACAP,UAAAA,KAAK,CAACU,YAAN,GAAqB,CAAC,QAAD,CAArB;AACAV,UAAAA,KAAK,CAACW,KAAN,GAAcxB,GAAd,CARA,CAQmB;;AACnBE,UAAAA,aAAa,CAACuB,YAAd,GAA6BZ,KAA7B;AACAV,UAAAA,GAAG,KAAKA,GAAG,CAACuB,MAAJ,GAAa,KAAlB,CAAH;AACAtB,UAAAA,SAAS;AACZ,SAZD,CAYE,OAAOK,KAAP,EAAc;AACZ;AAAA;AAAA,0BAAIkB,GAAJ,CAAQC,GAAR,EAAanB,KAAb;AACH,SAfgE,CAiBjE;;AACH,OAlBD;AAmBH,KApBD;AAqBH;;;;;;gCAtBeX,kB;;;;;;;;;AAJPO,MAAAA,Y,OAAAA,Y;AAA0BS,MAAAA,E,OAAAA,E;AAAIO,MAAAA,S,OAAAA,S;;AAChCQ,MAAAA,G;;;;;;;;;AAEDD,MAAAA,G,GAAM,oB","sourcesContent":["import { assetManager, ImageAsset, sp, Texture2D, Node } from \"cc\";\nimport Log from \"./LogUtils\";\n\nconst TAG = 'loadRemoteSpineRes'\nexport function loadRemoteSpineRes(atlas: string, ske: string, image: string, ske_component: sp.Skeleton, cat: Node = null, call_back: ()=> void){\n    assetManager.loadAny([{ url: atlas, ext: '.txt' }, { url: ske, ext: '.txt' }], (error, assets) => {\n        assetManager.loadRemote(image, (error, spine_texture: ImageAsset) => {\n            try {\n                let asset = new sp.SkeletonData();\n                asset.skeletonJson = JSON.parse(assets[1]);\n                asset.atlasText = assets[0];\n                let texture = new Texture2D();\n                texture.image = spine_texture;\n                asset.textures = [texture];\n                asset.textureNames = ['cc.png'];\n                asset._uuid = ske; // 可以传入任意字符串，但不能为空\n                ske_component.skeletonData = asset;\n                cat && (cat.active = false)\n                call_back()\n            } catch (error) {\n                Log.log(TAG, error)\n            }\n\n            //this.playSpineAnimation('idle')\n        });\n    });\n}\n"]}