{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/runtime.lex.v2-2020-08-07.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocolSettings","h2","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","DeleteSession","http","method","requestUri","input","type","required","members","botId","location","locationName","botAliasId","localeId","sessionId","output","GetSession","messages","shape","interpretations","sessionState","PutSession","requestAttributes","responseContentType","contentType","audioStream","payload","RecognizeText","text","recognizedBotMember","botName","RecognizeUtterance","requestContentType","inputStream","inputMode","inputTranscript","authtype","shapes","Sa","member","content","imageResponseCard","title","subtitle","imageUrl","buttons","value","Sc","sensitive","Sl","nluConfidence","score","sentimentResponse","sentiment","sentimentScore","positive","negative","neutral","mixed","intent","interpretationSource","Ss","name","slots","state","confirmationState","St","key","Su","originalValue","interpretedValue","resolvedValues","values","subSlots","S12","dialogAction","slotToElicit","slotElicitationStyle","subSlotToElicit","activeContexts","timeToLive","timeToLiveInSeconds","turnsToLive","contextAttributes","sessionAttributes","originatingRequestId","runtimeHints","slotHints","S16","S1f","S1k","runtimeHintValues","phrase","subSlotHints","S1r","streaming","S1w"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-08-07',\n    endpointPrefix: 'runtime-v2-lex',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    protocolSettings: {\n      h2: 'eventstream'\n    },\n    serviceAbbreviation: 'Lex Runtime V2',\n    serviceFullName: 'Amazon Lex Runtime V2',\n    serviceId: 'Lex Runtime V2',\n    signatureVersion: 'v4',\n    signingName: 'lex',\n    uid: 'runtime.lex.v2-2020-08-07'\n  },\n  operations: {\n    DeleteSession: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botId',\n          'botAliasId',\n          'sessionId',\n          'localeId'\n        ],\n        members: {\n          botId: {\n            location: 'uri',\n            locationName: 'botId'\n          },\n          botAliasId: {\n            location: 'uri',\n            locationName: 'botAliasId'\n          },\n          localeId: {\n            location: 'uri',\n            locationName: 'localeId'\n          },\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          botId: {},\n          botAliasId: {},\n          localeId: {},\n          sessionId: {}\n        }\n      }\n    },\n    GetSession: {\n      http: {\n        method: 'GET',\n        requestUri: '/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botId',\n          'botAliasId',\n          'localeId',\n          'sessionId'\n        ],\n        members: {\n          botId: {\n            location: 'uri',\n            locationName: 'botId'\n          },\n          botAliasId: {\n            location: 'uri',\n            locationName: 'botAliasId'\n          },\n          localeId: {\n            location: 'uri',\n            locationName: 'localeId'\n          },\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          sessionId: {},\n          messages: {\n            shape: 'Sa'\n          },\n          interpretations: {\n            shape: 'Sl'\n          },\n          sessionState: {\n            shape: 'S12'\n          }\n        }\n      }\n    },\n    PutSession: {\n      http: {\n        requestUri: '/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botId',\n          'botAliasId',\n          'localeId',\n          'sessionState',\n          'sessionId'\n        ],\n        members: {\n          botId: {\n            location: 'uri',\n            locationName: 'botId'\n          },\n          botAliasId: {\n            location: 'uri',\n            locationName: 'botAliasId'\n          },\n          localeId: {\n            location: 'uri',\n            locationName: 'localeId'\n          },\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          },\n          messages: {\n            shape: 'Sa'\n          },\n          sessionState: {\n            shape: 'S12'\n          },\n          requestAttributes: {\n            shape: 'S1f'\n          },\n          responseContentType: {\n            location: 'header',\n            locationName: 'ResponseContentType'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          messages: {\n            location: 'header',\n            locationName: 'x-amz-lex-messages'\n          },\n          sessionState: {\n            location: 'header',\n            locationName: 'x-amz-lex-session-state'\n          },\n          requestAttributes: {\n            location: 'header',\n            locationName: 'x-amz-lex-request-attributes'\n          },\n          sessionId: {\n            location: 'header',\n            locationName: 'x-amz-lex-session-id'\n          },\n          audioStream: {\n            shape: 'S1r'\n          }\n        },\n        payload: 'audioStream'\n      }\n    },\n    RecognizeText: {\n      http: {\n        requestUri: '/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/text'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botId',\n          'botAliasId',\n          'localeId',\n          'text',\n          'sessionId'\n        ],\n        members: {\n          botId: {\n            location: 'uri',\n            locationName: 'botId'\n          },\n          botAliasId: {\n            location: 'uri',\n            locationName: 'botAliasId'\n          },\n          localeId: {\n            location: 'uri',\n            locationName: 'localeId'\n          },\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          },\n          text: {\n            shape: 'Sc'\n          },\n          sessionState: {\n            shape: 'S12'\n          },\n          requestAttributes: {\n            shape: 'S1f'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          messages: {\n            shape: 'Sa'\n          },\n          sessionState: {\n            shape: 'S12'\n          },\n          interpretations: {\n            shape: 'Sl'\n          },\n          requestAttributes: {\n            shape: 'S1f'\n          },\n          sessionId: {},\n          recognizedBotMember: {\n            type: 'structure',\n            required: [\n              'botId'\n            ],\n            members: {\n              botId: {},\n              botName: {}\n            }\n          }\n        }\n      }\n    },\n    RecognizeUtterance: {\n      http: {\n        requestUri: '/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/utterance'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botId',\n          'botAliasId',\n          'localeId',\n          'requestContentType',\n          'sessionId'\n        ],\n        members: {\n          botId: {\n            location: 'uri',\n            locationName: 'botId'\n          },\n          botAliasId: {\n            location: 'uri',\n            locationName: 'botAliasId'\n          },\n          localeId: {\n            location: 'uri',\n            locationName: 'localeId'\n          },\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          },\n          sessionState: {\n            shape: 'S1w',\n            location: 'header',\n            locationName: 'x-amz-lex-session-state'\n          },\n          requestAttributes: {\n            shape: 'S1w',\n            location: 'header',\n            locationName: 'x-amz-lex-request-attributes'\n          },\n          requestContentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          responseContentType: {\n            location: 'header',\n            locationName: 'Response-Content-Type'\n          },\n          inputStream: {\n            shape: 'S1r'\n          }\n        },\n        payload: 'inputStream'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          inputMode: {\n            location: 'header',\n            locationName: 'x-amz-lex-input-mode'\n          },\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          messages: {\n            location: 'header',\n            locationName: 'x-amz-lex-messages'\n          },\n          interpretations: {\n            location: 'header',\n            locationName: 'x-amz-lex-interpretations'\n          },\n          sessionState: {\n            location: 'header',\n            locationName: 'x-amz-lex-session-state'\n          },\n          requestAttributes: {\n            location: 'header',\n            locationName: 'x-amz-lex-request-attributes'\n          },\n          sessionId: {\n            location: 'header',\n            locationName: 'x-amz-lex-session-id'\n          },\n          inputTranscript: {\n            location: 'header',\n            locationName: 'x-amz-lex-input-transcript'\n          },\n          audioStream: {\n            shape: 'S1r'\n          },\n          recognizedBotMember: {\n            location: 'header',\n            locationName: 'x-amz-lex-recognized-bot-member'\n          }\n        },\n        payload: 'audioStream'\n      },\n      authtype: 'v4-unsigned-body'\n    }\n  },\n  shapes: {\n    Sa: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'contentType'\n        ],\n        members: {\n          content: {\n            shape: 'Sc'\n          },\n          contentType: {},\n          imageResponseCard: {\n            type: 'structure',\n            required: [\n              'title'\n            ],\n            members: {\n              title: {},\n              subtitle: {},\n              imageUrl: {},\n              buttons: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'text',\n                    'value'\n                  ],\n                  members: {\n                    text: {},\n                    value: {}\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    Sc: {\n      type: 'string',\n      sensitive: true\n    },\n    Sl: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          nluConfidence: {\n            type: 'structure',\n            members: {\n              score: {\n                type: 'double'\n              }\n            }\n          },\n          sentimentResponse: {\n            type: 'structure',\n            members: {\n              sentiment: {},\n              sentimentScore: {\n                type: 'structure',\n                members: {\n                  positive: {\n                    type: 'double'\n                  },\n                  negative: {\n                    type: 'double'\n                  },\n                  neutral: {\n                    type: 'double'\n                  },\n                  mixed: {\n                    type: 'double'\n                  }\n                }\n              }\n            }\n          },\n          intent: {\n            shape: 'Ss'\n          },\n          interpretationSource: {}\n        }\n      }\n    },\n    Ss: {\n      type: 'structure',\n      required: [\n        'name'\n      ],\n      members: {\n        name: {},\n        slots: {\n          shape: 'St'\n        },\n        state: {},\n        confirmationState: {}\n      }\n    },\n    St: {\n      type: 'map',\n      key: {},\n      value: {\n        shape: 'Su'\n      }\n    },\n    Su: {\n      type: 'structure',\n      members: {\n        value: {\n          type: 'structure',\n          required: [\n            'interpretedValue'\n          ],\n          members: {\n            originalValue: {},\n            interpretedValue: {},\n            resolvedValues: {\n              type: 'list',\n              member: {}\n            }\n          }\n        },\n        shape: {},\n        values: {\n          type: 'list',\n          member: {\n            shape: 'Su'\n          }\n        },\n        subSlots: {\n          shape: 'St'\n        }\n      }\n    },\n    S12: {\n      type: 'structure',\n      members: {\n        dialogAction: {\n          type: 'structure',\n          required: [\n            'type'\n          ],\n          members: {\n            type: {},\n            slotToElicit: {},\n            slotElicitationStyle: {},\n            subSlotToElicit: {\n              shape: 'S16'\n            }\n          }\n        },\n        intent: {\n          shape: 'Ss'\n        },\n        activeContexts: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'name',\n              'timeToLive',\n              'contextAttributes'\n            ],\n            members: {\n              name: {},\n              timeToLive: {\n                type: 'structure',\n                required: [\n                  'timeToLiveInSeconds',\n                  'turnsToLive'\n                ],\n                members: {\n                  timeToLiveInSeconds: {\n                    type: 'integer'\n                  },\n                  turnsToLive: {\n                    type: 'integer'\n                  }\n                }\n              },\n              contextAttributes: {\n                type: 'map',\n                key: {},\n                value: {\n                  shape: 'Sc'\n                }\n              }\n            }\n          }\n        },\n        sessionAttributes: {\n          shape: 'S1f'\n        },\n        originatingRequestId: {},\n        runtimeHints: {\n          type: 'structure',\n          members: {\n            slotHints: {\n              type: 'map',\n              key: {},\n              value: {\n                shape: 'S1k'\n              }\n            }\n          }\n        }\n      }\n    },\n    S16: {\n      type: 'structure',\n      required: [\n        'name'\n      ],\n      members: {\n        name: {},\n        subSlotToElicit: {\n          shape: 'S16'\n        }\n      }\n    },\n    S1f: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1k: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        members: {\n          runtimeHintValues: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'phrase'\n              ],\n              members: {\n                phrase: {}\n              }\n            }\n          },\n          subSlotHints: {\n            shape: 'S1k'\n          }\n        }\n      }\n    },\n    S1r: {\n      type: 'blob',\n      streaming: true\n    },\n    S1w: {\n      type: 'string',\n      sensitive: true\n    }\n  }\n}"]}