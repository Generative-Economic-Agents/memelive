{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/timestream-influxdb-2023-01-27.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","ripServiceName","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","CreateDbInstance","input","type","required","members","name","username","sensitive","password","organization","bucket","dbInstanceType","vpcSubnetIds","shape","vpcSecurityGroupIds","publiclyAccessible","dbStorageType","allocatedStorage","dbParameterGroupIdentifier","deploymentType","logDeliveryConfiguration","tags","output","id","arn","status","endpoint","availabilityZone","secondaryAvailabilityZone","influxAuthParametersSecretArn","idempotent","CreateDbParameterGroup","description","parameters","DeleteDbInstance","identifier","GetDbInstance","GetDbParameterGroup","ListDbInstances","nextToken","maxResults","items","member","ListDbParameterGroups","ListTagsForResource","resourceArn","key","value","TagResource","UntagResource","tagKeys","UpdateDbInstance","shapes","S8","Sa","Sh","s3Configuration","bucketName","enabled","Sk","Sv","InfluxDBv2","fluxLogEnabled","logLevel","noTasks","queryConcurrency","queryQueueSize","tracingType","metricsDisabled","union"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2023-01-27',\n    endpointPrefix: 'timestream-influxdb',\n    jsonVersion: '1.0',\n    protocol: 'json',\n    ripServiceName: 'timestream-influxdb',\n    serviceAbbreviation: 'Timestream InfluxDB',\n    serviceFullName: 'Timestream InfluxDB',\n    serviceId: 'Timestream InfluxDB',\n    signatureVersion: 'v4',\n    signingName: 'timestream-influxdb',\n    targetPrefix: 'AmazonTimestreamInfluxDB',\n    uid: 'timestream-influxdb-2023-01-27'\n  },\n  operations: {\n    CreateDbInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'password',\n          'dbInstanceType',\n          'vpcSubnetIds',\n          'vpcSecurityGroupIds',\n          'allocatedStorage'\n        ],\n        members: {\n          name: {},\n          username: {\n            type: 'string',\n            sensitive: true\n          },\n          password: {\n            type: 'string',\n            sensitive: true\n          },\n          organization: {},\n          bucket: {},\n          dbInstanceType: {},\n          vpcSubnetIds: {\n            shape: 'S8'\n          },\n          vpcSecurityGroupIds: {\n            shape: 'Sa'\n          },\n          publiclyAccessible: {\n            type: 'boolean'\n          },\n          dbStorageType: {},\n          allocatedStorage: {\n            type: 'integer'\n          },\n          dbParameterGroupIdentifier: {},\n          deploymentType: {},\n          logDeliveryConfiguration: {\n            shape: 'Sh'\n          },\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'id',\n          'name',\n          'arn',\n          'vpcSubnetIds'\n        ],\n        members: {\n          id: {},\n          name: {},\n          arn: {},\n          status: {},\n          endpoint: {},\n          dbInstanceType: {},\n          dbStorageType: {},\n          allocatedStorage: {\n            type: 'integer'\n          },\n          deploymentType: {},\n          vpcSubnetIds: {\n            shape: 'S8'\n          },\n          publiclyAccessible: {\n            type: 'boolean'\n          },\n          vpcSecurityGroupIds: {\n            shape: 'Sa'\n          },\n          dbParameterGroupIdentifier: {},\n          availabilityZone: {},\n          secondaryAvailabilityZone: {},\n          logDeliveryConfiguration: {\n            shape: 'Sh'\n          },\n          influxAuthParametersSecretArn: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateDbParameterGroup: {\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {},\n          description: {},\n          parameters: {\n            shape: 'Sv'\n          },\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'id',\n          'name',\n          'arn'\n        ],\n        members: {\n          id: {},\n          name: {},\n          arn: {},\n          description: {},\n          parameters: {\n            shape: 'Sv'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteDbInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'identifier'\n        ],\n        members: {\n          identifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'id',\n          'name',\n          'arn',\n          'vpcSubnetIds'\n        ],\n        members: {\n          id: {},\n          name: {},\n          arn: {},\n          status: {},\n          endpoint: {},\n          dbInstanceType: {},\n          dbStorageType: {},\n          allocatedStorage: {\n            type: 'integer'\n          },\n          deploymentType: {},\n          vpcSubnetIds: {\n            shape: 'S8'\n          },\n          publiclyAccessible: {\n            type: 'boolean'\n          },\n          vpcSecurityGroupIds: {\n            shape: 'Sa'\n          },\n          dbParameterGroupIdentifier: {},\n          availabilityZone: {},\n          secondaryAvailabilityZone: {},\n          logDeliveryConfiguration: {\n            shape: 'Sh'\n          },\n          influxAuthParametersSecretArn: {}\n        }\n      },\n      idempotent: true\n    },\n    GetDbInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'identifier'\n        ],\n        members: {\n          identifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'id',\n          'name',\n          'arn',\n          'vpcSubnetIds'\n        ],\n        members: {\n          id: {},\n          name: {},\n          arn: {},\n          status: {},\n          endpoint: {},\n          dbInstanceType: {},\n          dbStorageType: {},\n          allocatedStorage: {\n            type: 'integer'\n          },\n          deploymentType: {},\n          vpcSubnetIds: {\n            shape: 'S8'\n          },\n          publiclyAccessible: {\n            type: 'boolean'\n          },\n          vpcSecurityGroupIds: {\n            shape: 'Sa'\n          },\n          dbParameterGroupIdentifier: {},\n          availabilityZone: {},\n          secondaryAvailabilityZone: {},\n          logDeliveryConfiguration: {\n            shape: 'Sh'\n          },\n          influxAuthParametersSecretArn: {}\n        }\n      }\n    },\n    GetDbParameterGroup: {\n      input: {\n        type: 'structure',\n        required: [\n          'identifier'\n        ],\n        members: {\n          identifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'id',\n          'name',\n          'arn'\n        ],\n        members: {\n          id: {},\n          name: {},\n          arn: {},\n          description: {},\n          parameters: {\n            shape: 'Sv'\n          }\n        }\n      }\n    },\n    ListDbInstances: {\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'id',\n                'name',\n                'arn'\n              ],\n              members: {\n                id: {},\n                name: {},\n                arn: {},\n                status: {},\n                endpoint: {},\n                dbInstanceType: {},\n                dbStorageType: {},\n                allocatedStorage: {\n                  type: 'integer'\n                },\n                deploymentType: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDbParameterGroups: {\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'id',\n                'name',\n                'arn'\n              ],\n              members: {\n                id: {},\n                name: {},\n                arn: {},\n                description: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            type: 'map',\n            key: {},\n            value: {}\n          }\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {},\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {},\n          tagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateDbInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'identifier'\n        ],\n        members: {\n          identifier: {},\n          logDeliveryConfiguration: {\n            shape: 'Sh'\n          },\n          dbParameterGroupIdentifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'id',\n          'name',\n          'arn',\n          'vpcSubnetIds'\n        ],\n        members: {\n          id: {},\n          name: {},\n          arn: {},\n          status: {},\n          endpoint: {},\n          dbInstanceType: {},\n          dbStorageType: {},\n          allocatedStorage: {\n            type: 'integer'\n          },\n          deploymentType: {},\n          vpcSubnetIds: {\n            shape: 'S8'\n          },\n          publiclyAccessible: {\n            type: 'boolean'\n          },\n          vpcSecurityGroupIds: {\n            shape: 'Sa'\n          },\n          dbParameterGroupIdentifier: {},\n          availabilityZone: {},\n          secondaryAvailabilityZone: {},\n          logDeliveryConfiguration: {\n            shape: 'Sh'\n          },\n          influxAuthParametersSecretArn: {}\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S8: {\n      type: 'list',\n      member: {}\n    },\n    Sa: {\n      type: 'list',\n      member: {}\n    },\n    Sh: {\n      type: 'structure',\n      required: [\n        's3Configuration'\n      ],\n      members: {\n        s3Configuration: {\n          type: 'structure',\n          required: [\n            'bucketName',\n            'enabled'\n          ],\n          members: {\n            bucketName: {},\n            enabled: {\n              type: 'boolean'\n            }\n          }\n        }\n      }\n    },\n    Sk: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sv: {\n      type: 'structure',\n      members: {\n        InfluxDBv2: {\n          type: 'structure',\n          members: {\n            fluxLogEnabled: {\n              type: 'boolean'\n            },\n            logLevel: {},\n            noTasks: {\n              type: 'boolean'\n            },\n            queryConcurrency: {\n              type: 'integer'\n            },\n            queryQueueSize: {\n              type: 'integer'\n            },\n            tracingType: {},\n            metricsDisabled: {\n              type: 'boolean'\n            }\n          }\n        }\n      },\n      union: true\n    }\n  }\n}"]}