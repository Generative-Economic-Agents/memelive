{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/networkmonitor-2023-08-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateMonitor","http","requestUri","responseCode","input","type","required","members","monitorName","probes","member","sourceArn","destination","destinationPort","packetSize","probeTags","shape","aggregationPeriod","clientToken","idempotencyToken","tags","output","monitorArn","state","idempotent","CreateProbe","location","locationName","probe","probeId","probeArn","addressFamily","vpcId","createdAt","modifiedAt","DeleteMonitor","method","DeleteProbe","GetMonitor","GetProbe","ListMonitors","nextToken","maxResults","monitors","ListTagsForResource","resourceArn","TagResource","UntagResource","tagKeys","UpdateMonitor","UpdateProbe","shapes","Sa","key","value"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2023-08-01',\n    endpointPrefix: 'networkmonitor',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon CloudWatch Network Monitor',\n    serviceId: 'NetworkMonitor',\n    signatureVersion: 'v4',\n    signingName: 'networkmonitor',\n    uid: 'networkmonitor-2023-08-01'\n  },\n  operations: {\n    CreateMonitor: {\n      http: {\n        requestUri: '/monitors',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'monitorName'\n        ],\n        members: {\n          monitorName: {},\n          probes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'sourceArn',\n                'destination',\n                'protocol'\n              ],\n              members: {\n                sourceArn: {},\n                destination: {},\n                destinationPort: {\n                  type: 'integer'\n                },\n                protocol: {},\n                packetSize: {\n                  type: 'integer'\n                },\n                probeTags: {\n                  shape: 'Sa'\n                }\n              }\n            }\n          },\n          aggregationPeriod: {\n            type: 'long'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'monitorArn',\n          'monitorName',\n          'state'\n        ],\n        members: {\n          monitorArn: {},\n          monitorName: {},\n          state: {},\n          aggregationPeriod: {\n            type: 'long'\n          },\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateProbe: {\n      http: {\n        requestUri: '/monitors/{monitorName}/probes',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'monitorName',\n          'probe'\n        ],\n        members: {\n          monitorName: {\n            location: 'uri',\n            locationName: 'monitorName'\n          },\n          probe: {\n            type: 'structure',\n            required: [\n              'sourceArn',\n              'destination',\n              'protocol'\n            ],\n            members: {\n              sourceArn: {},\n              destination: {},\n              destinationPort: {\n                type: 'integer'\n              },\n              protocol: {},\n              packetSize: {\n                type: 'integer'\n              },\n              tags: {\n                shape: 'Sa'\n              }\n            }\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'sourceArn',\n          'destination',\n          'protocol'\n        ],\n        members: {\n          probeId: {},\n          probeArn: {},\n          sourceArn: {},\n          destination: {},\n          destinationPort: {\n            type: 'integer'\n          },\n          protocol: {},\n          packetSize: {\n            type: 'integer'\n          },\n          addressFamily: {},\n          vpcId: {},\n          state: {},\n          createdAt: {\n            type: 'timestamp'\n          },\n          modifiedAt: {\n            type: 'timestamp'\n          },\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteMonitor: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/monitors/{monitorName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'monitorName'\n        ],\n        members: {\n          monitorName: {\n            location: 'uri',\n            locationName: 'monitorName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteProbe: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/monitors/{monitorName}/probes/{probeId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'monitorName',\n          'probeId'\n        ],\n        members: {\n          monitorName: {\n            location: 'uri',\n            locationName: 'monitorName'\n          },\n          probeId: {\n            location: 'uri',\n            locationName: 'probeId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetMonitor: {\n      http: {\n        method: 'GET',\n        requestUri: '/monitors/{monitorName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'monitorName'\n        ],\n        members: {\n          monitorName: {\n            location: 'uri',\n            locationName: 'monitorName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'monitorArn',\n          'monitorName',\n          'state',\n          'aggregationPeriod',\n          'createdAt',\n          'modifiedAt'\n        ],\n        members: {\n          monitorArn: {},\n          monitorName: {},\n          state: {},\n          aggregationPeriod: {\n            type: 'long'\n          },\n          tags: {\n            shape: 'Sa'\n          },\n          probes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'sourceArn',\n                'destination',\n                'protocol'\n              ],\n              members: {\n                probeId: {},\n                probeArn: {},\n                sourceArn: {},\n                destination: {},\n                destinationPort: {\n                  type: 'integer'\n                },\n                protocol: {},\n                packetSize: {\n                  type: 'integer'\n                },\n                addressFamily: {},\n                vpcId: {},\n                state: {},\n                createdAt: {\n                  type: 'timestamp'\n                },\n                modifiedAt: {\n                  type: 'timestamp'\n                },\n                tags: {\n                  shape: 'Sa'\n                }\n              }\n            }\n          },\n          createdAt: {\n            type: 'timestamp'\n          },\n          modifiedAt: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetProbe: {\n      http: {\n        method: 'GET',\n        requestUri: '/monitors/{monitorName}/probes/{probeId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'monitorName',\n          'probeId'\n        ],\n        members: {\n          monitorName: {\n            location: 'uri',\n            locationName: 'monitorName'\n          },\n          probeId: {\n            location: 'uri',\n            locationName: 'probeId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'sourceArn',\n          'destination',\n          'protocol'\n        ],\n        members: {\n          probeId: {},\n          probeArn: {},\n          sourceArn: {},\n          destination: {},\n          destinationPort: {\n            type: 'integer'\n          },\n          protocol: {},\n          packetSize: {\n            type: 'integer'\n          },\n          addressFamily: {},\n          vpcId: {},\n          state: {},\n          createdAt: {\n            type: 'timestamp'\n          },\n          modifiedAt: {\n            type: 'timestamp'\n          },\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      }\n    },\n    ListMonitors: {\n      http: {\n        method: 'GET',\n        requestUri: '/monitors',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          state: {\n            location: 'querystring',\n            locationName: 'state'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'monitors'\n        ],\n        members: {\n          monitors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'monitorArn',\n                'monitorName',\n                'state'\n              ],\n              members: {\n                monitorArn: {},\n                monitorName: {},\n                state: {},\n                aggregationPeriod: {\n                  type: 'long'\n                },\n                tags: {\n                  shape: 'Sa'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateMonitor: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/monitors/{monitorName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'monitorName',\n          'aggregationPeriod'\n        ],\n        members: {\n          monitorName: {\n            location: 'uri',\n            locationName: 'monitorName'\n          },\n          aggregationPeriod: {\n            type: 'long'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'monitorArn',\n          'monitorName',\n          'state'\n        ],\n        members: {\n          monitorArn: {},\n          monitorName: {},\n          state: {},\n          aggregationPeriod: {\n            type: 'long'\n          },\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateProbe: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/monitors/{monitorName}/probes/{probeId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'monitorName',\n          'probeId'\n        ],\n        members: {\n          monitorName: {\n            location: 'uri',\n            locationName: 'monitorName'\n          },\n          probeId: {\n            location: 'uri',\n            locationName: 'probeId'\n          },\n          state: {},\n          destination: {},\n          destinationPort: {\n            type: 'integer'\n          },\n          protocol: {},\n          packetSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'sourceArn',\n          'destination',\n          'protocol'\n        ],\n        members: {\n          probeId: {},\n          probeArn: {},\n          sourceArn: {},\n          destination: {},\n          destinationPort: {\n            type: 'integer'\n          },\n          protocol: {},\n          packetSize: {\n            type: 'integer'\n          },\n          addressFamily: {},\n          vpcId: {},\n          state: {},\n          createdAt: {\n            type: 'timestamp'\n          },\n          modifiedAt: {\n            type: 'timestamp'\n          },\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    Sa: {\n      type: 'map',\n      key: {},\n      value: {}\n    }\n  }\n}"]}