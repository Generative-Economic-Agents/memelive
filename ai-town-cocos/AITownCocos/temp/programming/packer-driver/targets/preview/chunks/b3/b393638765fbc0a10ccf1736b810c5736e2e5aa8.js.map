{"version":3,"sources":["file:///Users/feiwang/cutepet/assets/src/module/main/shop/ShopLIstComponent.ts"],"names":["_decorator","Component","Label","Node","modelMgr","observer","uiMgr","EventType","SpriteAtlasAnimation","ShopMangerTipsArray","AudioManager","NumberCounter","showMsgWithMask","Log","ccclass","property","TAG","ShopLIstComponent","CoinSpriteAtlasAnimation","ccCounter","start","Label_cc","string","mainModel","getserItemCountById","on","SEND_BUY_SHOP_ITEM_SUCCESS_INFO","refreshTittleInfo","SOCKET_CHECK_PLAYERITEMS","updateCoinNum","SpriteAni_coin","getComponent","setCatManger","isHappy","happyCat","active","shopMangerTips","HAPPY","COMMON","Math","round","random","apend2","Number","instance","playSound","play","startNumber","endNumber","duration","onUpdate","currentNumber","toFixed","onComplete","log","data","purchaseNode","shopData","name","goods","count","update","deltaTime","closeShopPage","removeParent","onDestroy","off"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, math, Node } from 'cc';\nimport { modelMgr, observer, uiMgr } from '../../../game/App';\nimport { EventType } from '../../../EventType';\nimport { ListViewCtrl2 } from '../../../game/components/listViewCtrl2';\nimport TabButtonGroup from '../../../core/components/TabButtonGroup copy';\nimport { SpriteAtlasAnimation } from '../SpriteAtlasAnimation';\nimport { ShopMangerTips, ShopMangerTipsArray } from './CatEnjoyToolsDataType';\nimport { AudioManager } from '../../../manager/AudioManager';\nimport { NumberCounter } from '../../../utils/NumberCounter';\nimport { showMsgWithMask } from '../../../core/message/MaskToastManager';\nimport Log from '../../../../../assets/src/utils/LogUtils'\nconst { ccclass, property } = _decorator;\n\nconst TAG = 'ShopLIstComponent'\n\n@ccclass('ShopLIstComponent')\nexport class ShopLIstComponent extends Component {\n    @property(Label)\n    public Label_cc: Label = null;\n\n    @property(Label)\n    public shopMangerTips: Label = null;\n\n    @property(Node)\n    public commonCat: Node = null;\n\n    @property(Node)\n    public happyCat: Node = null;\n\n    @property(Node)\n    public SpriteAni_coin: Node = null;\n\n    @property(Node)\n    public purchaseNode: Node = null;\n\n    private CoinSpriteAtlasAnimation: SpriteAtlasAnimation | null = null;\n    private ccCounter;\n\n    protected start(): void {\n        this.Label_cc.string = \"\" + modelMgr.mainModel.getserItemCountById(10101000);\n        observer.on(EventType.SEND_BUY_SHOP_ITEM_SUCCESS_INFO,this.refreshTittleInfo, this);\n        observer.on(EventType.SOCKET_CHECK_PLAYERITEMS, this.updateCoinNum, this);\n        if (this.SpriteAni_coin) {\n            this.CoinSpriteAtlasAnimation = this.SpriteAni_coin.getComponent(SpriteAtlasAnimation);\n        }\n    }\n\n    setCatManger(isHappy: boolean){\n        //this.commonCat.active = !isHappy\n        this.happyCat.active = isHappy\n        this.shopMangerTips.string = isHappy ? ShopMangerTipsArray.HAPPY : ShopMangerTipsArray.COMMON[Math.round(Math.random())]\n    }\n\n    updateCoinNum(){\n        let apend2 = modelMgr.mainModel.getserItemCountById(10101000);\n        if (Number(this.Label_cc.string) != apend2) {\n            if (Number(this.Label_cc.string) < apend2) {\n                AudioManager.instance.playSound(\"coin\");\n                this.CoinSpriteAtlasAnimation?.play();\n            }\n            this.ccCounter = new NumberCounter({\n                startNumber: Number(this.Label_cc.string),\n                endNumber: apend2,\n                duration: 1,\n                onUpdate: (currentNumber) => {\n                    this.Label_cc.string = currentNumber.toFixed(0) + \"\";\n                },\n                onComplete: () => {\n                    Log.log('Counting completed.');\n                },\n            });\n        }\n    }\n\n    refreshTittleInfo(data: any){\n        this.purchaseNode.active = false\n        AudioManager.instance.playSound(\"new_shopBuy\");\n        showMsgWithMask(`${data.data.data.shopData.name} + ${data.data.data.goods[0].count}`)\n        this.setCatManger(true)\n        //this.updateCoinNum()\n    }\n\n    update(deltaTime: number) {\n        if (this.ccCounter) {\n            this.ccCounter.update(deltaTime);\n        }\n    }\n\n    closeShopPage(){\n        AudioManager.instance.playSound(\"new_NormanBtn\");\n        uiMgr.removeParent(\"prefabs/shop_home_page\");\n    }\n\n    protected onDestroy(): void {\n        Log.log(TAG, 'ondestroy')\n        observer.off(EventType.SEND_BUY_SHOP_ITEM_SUCCESS_INFO, this.refreshTittleInfo, this);\n        observer.off(EventType.SOCKET_CHECK_PLAYERITEMS, this.updateCoinNum, this);\n    }\n}\n\n"]}