{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/personalize-2018-05-22.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","CreateBatchInferenceJob","input","type","required","members","jobName","solutionVersionArn","filterArn","numResults","jobInput","shape","jobOutput","roleArn","batchInferenceJobConfig","tags","batchInferenceJobMode","themeGenerationConfig","output","batchInferenceJobArn","CreateBatchSegmentJob","batchSegmentJobArn","CreateCampaign","name","minProvisionedTPS","campaignConfig","campaignArn","idempotent","CreateDataDeletionJob","datasetGroupArn","dataSource","dataDeletionJobArn","CreateDataset","schemaArn","datasetType","datasetArn","CreateDatasetExportJob","ingestionMode","datasetExportJobArn","CreateDatasetGroup","kmsKeyArn","domain","CreateDatasetImportJob","importMode","publishAttributionMetricsToS3","datasetImportJobArn","CreateEventTracker","eventTrackerArn","trackingId","CreateFilter","filterExpression","CreateMetricAttribution","metrics","metricsOutputConfig","metricAttributionArn","CreateRecommender","recipeArn","recommenderConfig","recommenderArn","CreateSchema","schema","CreateSolution","performHPO","performAutoML","performAutoTraining","eventType","solutionConfig","solutionArn","CreateSolutionVersion","trainingMode","DeleteCampaign","DeleteDataset","DeleteDatasetGroup","DeleteEventTracker","DeleteFilter","DeleteMetricAttribution","DeleteRecommender","DeleteSchema","DeleteSolution","DescribeAlgorithm","algorithmArn","algorithm","algorithmImage","dockerURI","defaultHyperParameters","defaultHyperParameterRanges","integerHyperParameterRanges","member","minValue","maxValue","isTunable","continuousHyperParameterRanges","categoricalHyperParameterRanges","values","defaultResourceConfig","key","value","trainingInputMode","creationDateTime","lastUpdatedDateTime","DescribeBatchInferenceJob","batchInferenceJob","failureReason","status","DescribeBatchSegmentJob","batchSegmentJob","DescribeCampaign","campaign","latestCampaignUpdate","DescribeDataDeletionJob","dataDeletionJob","numDeleted","DescribeDataset","dataset","latestDatasetUpdate","DescribeDatasetExportJob","datasetExportJob","DescribeDatasetGroup","datasetGroup","DescribeDatasetImportJob","datasetImportJob","DescribeEventTracker","eventTracker","accountId","DescribeFeatureTransformation","featureTransformationArn","featureTransformation","defaultParameters","DescribeFilter","filter","DescribeMetricAttribution","metricAttribution","DescribeRecipe","recipe","description","recipeType","DescribeRecommender","recommender","latestRecommenderUpdate","modelMetrics","DescribeSchema","DescribeSolution","solution","autoMLResult","bestRecipeArn","latestSolutionVersion","DescribeSolutionVersion","solutionVersion","trainingHours","tunedHPOParams","algorithmHyperParameters","trainingType","GetSolutionMetrics","ListBatchInferenceJobs","nextToken","maxResults","batchInferenceJobs","ListBatchSegmentJobs","batchSegmentJobs","ListCampaigns","campaigns","ListDataDeletionJobs","dataDeletionJobs","ListDatasetExportJobs","datasetExportJobs","ListDatasetGroups","datasetGroups","ListDatasetImportJobs","datasetImportJobs","ListDatasets","datasets","ListEventTrackers","eventTrackers","ListFilters","Filters","ListMetricAttributionMetrics","ListMetricAttributions","metricAttributions","ListRecipes","recipeProvider","recipes","ListRecommenders","recommenders","ListSchemas","schemas","ListSolutionVersions","solutionVersions","ListSolutions","solutions","ListTagsForResource","resourceArn","StartRecommender","StopRecommender","StopSolutionVersionCreation","TagResource","UntagResource","tagKeys","UpdateCampaign","UpdateDataset","UpdateMetricAttribution","addMetrics","removeMetrics","UpdateRecommender","shapes","S5","s3DataSource","S6","path","S9","s3DataDestination","Sb","itemExplorationConfig","Sc","Sf","tagKey","tagValue","Sk","fieldsForThemeGeneration","itemName","Sp","Sq","Su","enableMetadataWithRecommendations","syncWithLatestSolutionVersion","Sy","dataLocation","S15","S1h","sensitive","S1k","metricName","expression","S1p","S1s","minRecommendationRequestsPerSecond","trainingDataConfig","S1t","excludedDatasetColumns","S23","eventValueThreshold","hpoConfig","hpoObjective","metricRegex","hpoResourceConfig","maxNumberOfTrainingJobs","maxParallelTrainingJobs","algorithmHyperParameterRanges","featureTransformationParameters","autoMLConfig","recipeList","optimizationObjective","itemAttribute","objectiveSensitivity","autoTrainingConfig","schedulingExpression","S2m","S55","S5f"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,aAFR;AAGRC,UAAAA,WAAW,EAAE,KAHL;AAIRC,UAAAA,QAAQ,EAAE,MAJF;AAKRC,UAAAA,SAAS,EAAE,CACT,MADS,CALH;AAQRC,UAAAA,eAAe,EAAE,oBART;AASRC,UAAAA,SAAS,EAAE,aATH;AAURC,UAAAA,gBAAgB,EAAE,IAVV;AAWRC,UAAAA,WAAW,EAAE,aAXL;AAYRC,UAAAA,YAAY,EAAE,mBAZN;AAaRC,UAAAA,GAAG,EAAE;AAbG,SAFG;AAiBbC,QAAAA,UAAU,EAAE;AACVC,UAAAA,uBAAuB,EAAE;AACvBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,oBAFQ,EAGR,UAHQ,EAIR,WAJQ,EAKR,SALQ,CAFL;AASLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,OAAO,EAAE,EADF;AAEPC,gBAAAA,kBAAkB,EAAE,EAFb;AAGPC,gBAAAA,SAAS,EAAE,EAHJ;AAIPC,gBAAAA,UAAU,EAAE;AACVN,kBAAAA,IAAI,EAAE;AADI,iBAJL;AAOPO,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,KAAK,EAAE;AADC,iBAPH;AAUPC,gBAAAA,SAAS,EAAE;AACTD,kBAAAA,KAAK,EAAE;AADE,iBAVJ;AAaPE,gBAAAA,OAAO,EAAE,EAbF;AAcPC,gBAAAA,uBAAuB,EAAE;AACvBH,kBAAAA,KAAK,EAAE;AADgB,iBAdlB;AAiBPI,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH,iBAjBC;AAoBPK,gBAAAA,qBAAqB,EAAE,EApBhB;AAqBPC,gBAAAA,qBAAqB,EAAE;AACrBN,kBAAAA,KAAK,EAAE;AADc;AArBhB;AATJ,aADgB;AAoCvBO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPc,gBAAAA,oBAAoB,EAAE;AADf;AAFH;AApCe,WADf;AA4CVC,UAAAA,qBAAqB,EAAE;AACrBlB,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,oBAFQ,EAGR,UAHQ,EAIR,WAJQ,EAKR,SALQ,CAFL;AASLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,OAAO,EAAE,EADF;AAEPC,gBAAAA,kBAAkB,EAAE,EAFb;AAGPC,gBAAAA,SAAS,EAAE,EAHJ;AAIPC,gBAAAA,UAAU,EAAE;AACVN,kBAAAA,IAAI,EAAE;AADI,iBAJL;AAOPO,gBAAAA,QAAQ,EAAE;AACRC,kBAAAA,KAAK,EAAE;AADC,iBAPH;AAUPC,gBAAAA,SAAS,EAAE;AACTD,kBAAAA,KAAK,EAAE;AADE,iBAVJ;AAaPE,gBAAAA,OAAO,EAAE,EAbF;AAcPE,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AAdC;AATJ,aADc;AA6BrBO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPgB,gBAAAA,kBAAkB,EAAE;AADb;AAFH;AA7Ba,WA5Cb;AAgFVC,UAAAA,cAAc,EAAE;AACdpB,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,oBAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE,EADC;AAEPhB,gBAAAA,kBAAkB,EAAE,EAFb;AAGPiB,gBAAAA,iBAAiB,EAAE;AACjBrB,kBAAAA,IAAI,EAAE;AADW,iBAHZ;AAMPsB,gBAAAA,cAAc,EAAE;AACdd,kBAAAA,KAAK,EAAE;AADO,iBANT;AASPI,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AATC;AANJ,aADO;AAqBdO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqB,gBAAAA,WAAW,EAAE;AADN;AAFH,aArBM;AA2BdC,YAAAA,UAAU,EAAE;AA3BE,WAhFN;AA6GVC,UAAAA,qBAAqB,EAAE;AACrB1B,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,iBAFQ,EAGR,YAHQ,EAIR,SAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,OAAO,EAAE,EADF;AAEPuB,gBAAAA,eAAe,EAAE,EAFV;AAGPC,gBAAAA,UAAU,EAAE;AACVnB,kBAAAA,KAAK,EAAE;AADG,iBAHL;AAMPE,gBAAAA,OAAO,EAAE,EANF;AAOPE,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AAPC;AARJ,aADc;AAqBrBO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP0B,gBAAAA,kBAAkB,EAAE;AADb;AAFH;AArBa,WA7Gb;AAyIVC,UAAAA,aAAa,EAAE;AACb9B,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,WAFQ,EAGR,iBAHQ,EAIR,aAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE,EADC;AAEPU,gBAAAA,SAAS,EAAE,EAFJ;AAGPJ,gBAAAA,eAAe,EAAE,EAHV;AAIPK,gBAAAA,WAAW,EAAE,EAJN;AAKPnB,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AALC;AARJ,aADM;AAmBbO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP8B,gBAAAA,UAAU,EAAE;AADL;AAFH,aAnBK;AAyBbR,YAAAA,UAAU,EAAE;AAzBC,WAzIL;AAoKVS,UAAAA,sBAAsB,EAAE;AACtBlC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,YAFQ,EAGR,SAHQ,EAIR,WAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,OAAO,EAAE,EADF;AAEP6B,gBAAAA,UAAU,EAAE,EAFL;AAGPE,gBAAAA,aAAa,EAAE,EAHR;AAIPxB,gBAAAA,OAAO,EAAE,EAJF;AAKPD,gBAAAA,SAAS,EAAE;AACTD,kBAAAA,KAAK,EAAE;AADE,iBALJ;AAQPI,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AARC;AARJ,aADe;AAsBtBO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiC,gBAAAA,mBAAmB,EAAE;AADd;AAFH,aAtBc;AA4BtBX,YAAAA,UAAU,EAAE;AA5BU,WApKd;AAkMVY,UAAAA,kBAAkB,EAAE;AAClBrC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE,EADC;AAEPV,gBAAAA,OAAO,EAAE,EAFF;AAGP2B,gBAAAA,SAAS,EAAE,EAHJ;AAIPC,gBAAAA,MAAM,EAAE,EAJD;AAKP1B,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AALC;AALJ,aADW;AAgBlBO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,eAAe,EAAE,EADV;AAEPY,gBAAAA,MAAM,EAAE;AAFD;AAFH;AAhBU,WAlMV;AA0NVC,UAAAA,sBAAsB,EAAE;AACtBxC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,SADQ,EAER,YAFQ,EAGR,YAHQ,EAIR,SAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,OAAO,EAAE,EADF;AAEP6B,gBAAAA,UAAU,EAAE,EAFL;AAGPL,gBAAAA,UAAU,EAAE;AACVnB,kBAAAA,KAAK,EAAE;AADG,iBAHL;AAMPE,gBAAAA,OAAO,EAAE,EANF;AAOPE,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH,iBAPC;AAUPgC,gBAAAA,UAAU,EAAE,EAVL;AAWPC,gBAAAA,6BAA6B,EAAE;AAC7BzC,kBAAAA,IAAI,EAAE;AADuB;AAXxB;AARJ,aADe;AAyBtBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPwC,gBAAAA,mBAAmB,EAAE;AADd;AAFH;AAzBc,WA1Nd;AA0PVC,UAAAA,kBAAkB,EAAE;AAClB5C,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,iBAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE,EADC;AAEPM,gBAAAA,eAAe,EAAE,EAFV;AAGPd,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AAHC;AANJ,aADW;AAelBO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP0C,gBAAAA,eAAe,EAAE,EADV;AAEPC,gBAAAA,UAAU,EAAE;AAFL;AAFH,aAfU;AAsBlBrB,YAAAA,UAAU,EAAE;AAtBM,WA1PV;AAkRVsB,UAAAA,YAAY,EAAE;AACZ/C,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,iBAFQ,EAGR,kBAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE,EADC;AAEPM,gBAAAA,eAAe,EAAE,EAFV;AAGPqB,gBAAAA,gBAAgB,EAAE;AAChBvC,kBAAAA,KAAK,EAAE;AADS,iBAHX;AAMPI,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AANC;AAPJ,aADK;AAmBZO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPG,gBAAAA,SAAS,EAAE;AADJ;AAFH;AAnBI,WAlRJ;AA4SV2C,UAAAA,uBAAuB,EAAE;AACvBjD,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,iBAFQ,EAGR,SAHQ,EAIR,qBAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE,EADC;AAEPM,gBAAAA,eAAe,EAAE,EAFV;AAGPuB,gBAAAA,OAAO,EAAE;AACPzC,kBAAAA,KAAK,EAAE;AADA,iBAHF;AAMP0C,gBAAAA,mBAAmB,EAAE;AACnB1C,kBAAAA,KAAK,EAAE;AADY;AANd;AARJ,aADgB;AAoBvBO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiD,gBAAAA,oBAAoB,EAAE;AADf;AAFH;AApBe,WA5Sf;AAuUVC,UAAAA,iBAAiB,EAAE;AACjBrD,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,iBAFQ,EAGR,WAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE,EADC;AAEPM,gBAAAA,eAAe,EAAE,EAFV;AAGP2B,gBAAAA,SAAS,EAAE,EAHJ;AAIPC,gBAAAA,iBAAiB,EAAE;AACjB9C,kBAAAA,KAAK,EAAE;AADU,iBAJZ;AAOPI,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AAPC;AAPJ,aADU;AAoBjBO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,cAAc,EAAE;AADT;AAFH,aApBS;AA0BjB/B,YAAAA,UAAU,EAAE;AA1BK,WAvUT;AAmWVgC,UAAAA,YAAY,EAAE;AACZzD,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,QAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE,EADC;AAEPqC,gBAAAA,MAAM,EAAE,EAFD;AAGPnB,gBAAAA,MAAM,EAAE;AAHD;AANJ,aADK;AAaZvB,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP4B,gBAAAA,SAAS,EAAE;AADJ;AAFH,aAbI;AAmBZN,YAAAA,UAAU,EAAE;AAnBA,WAnWJ;AAwXVkC,UAAAA,cAAc,EAAE;AACd3D,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,EAER,iBAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE,EADC;AAEPuC,gBAAAA,UAAU,EAAE;AACV3D,kBAAAA,IAAI,EAAE;AADI,iBAFL;AAKP4D,gBAAAA,aAAa,EAAE;AACb5D,kBAAAA,IAAI,EAAE;AADO,iBALR;AAQP6D,gBAAAA,mBAAmB,EAAE;AACnB7D,kBAAAA,IAAI,EAAE;AADa,iBARd;AAWPqD,gBAAAA,SAAS,EAAE,EAXJ;AAYP3B,gBAAAA,eAAe,EAAE,EAZV;AAaPoC,gBAAAA,SAAS,EAAE,EAbJ;AAcPC,gBAAAA,cAAc,EAAE;AACdvD,kBAAAA,KAAK,EAAE;AADO,iBAdT;AAiBPI,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AAjBC;AANJ,aADO;AA6BdO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP8D,gBAAAA,WAAW,EAAE;AADN;AAFH;AA7BM,WAxXN;AA4ZVC,UAAAA,qBAAqB,EAAE;AACrBlE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE,EADC;AAEP4C,gBAAAA,WAAW,EAAE,EAFN;AAGPE,gBAAAA,YAAY,EAAE,EAHP;AAIPtD,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AAJC;AALJ,aADc;AAerBO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPE,gBAAAA,kBAAkB,EAAE;AADb;AAFH;AAfa,WA5Zb;AAkbV+D,UAAAA,cAAc,EAAE;AACdpE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPqB,gBAAAA,WAAW,EAAE;AADN;AALJ,aADO;AAUdC,YAAAA,UAAU,EAAE;AAVE,WAlbN;AA8bV4C,UAAAA,aAAa,EAAE;AACbrE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP8B,gBAAAA,UAAU,EAAE;AADL;AALJ,aADM;AAUbR,YAAAA,UAAU,EAAE;AAVC,WA9bL;AA0cV6C,UAAAA,kBAAkB,EAAE;AAClBtE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,iBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,eAAe,EAAE;AADV;AALJ,aADW;AAUlBF,YAAAA,UAAU,EAAE;AAVM,WA1cV;AAsdV8C,UAAAA,kBAAkB,EAAE;AAClBvE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,iBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP0C,gBAAAA,eAAe,EAAE;AADV;AALJ,aADW;AAUlBpB,YAAAA,UAAU,EAAE;AAVM,WAtdV;AAkeV+C,UAAAA,YAAY,EAAE;AACZxE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,SAAS,EAAE;AADJ;AALJ;AADK,WAleJ;AA6eVmE,UAAAA,uBAAuB,EAAE;AACvBzE,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,sBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPiD,gBAAAA,oBAAoB,EAAE;AADf;AALJ,aADgB;AAUvB3B,YAAAA,UAAU,EAAE;AAVW,WA7ef;AAyfViD,UAAAA,iBAAiB,EAAE;AACjB1E,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,gBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,cAAc,EAAE;AADT;AALJ,aADU;AAUjB/B,YAAAA,UAAU,EAAE;AAVK,WAzfT;AAqgBVkD,UAAAA,YAAY,EAAE;AACZ3E,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP4B,gBAAAA,SAAS,EAAE;AADJ;AALJ,aADK;AAUZN,YAAAA,UAAU,EAAE;AAVA,WArgBJ;AAihBVmD,UAAAA,cAAc,EAAE;AACd5E,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP8D,gBAAAA,WAAW,EAAE;AADN;AALJ,aADO;AAUdxC,YAAAA,UAAU,EAAE;AAVE,WAjhBN;AA6hBVoD,UAAAA,iBAAiB,EAAE;AACjB7E,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP2E,gBAAAA,YAAY,EAAE;AADP;AALJ,aADU;AAUjB9D,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP4E,gBAAAA,SAAS,EAAE;AACT9E,kBAAAA,IAAI,EAAE,WADG;AAETE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEPyD,oBAAAA,YAAY,EAAE,EAFP;AAGPE,oBAAAA,cAAc,EAAE;AACd/E,sBAAAA,IAAI,EAAE,WADQ;AAEdC,sBAAAA,QAAQ,EAAE,CACR,WADQ,CAFI;AAKdC,sBAAAA,OAAO,EAAE;AACPkB,wBAAAA,IAAI,EAAE,EADC;AAEP4D,wBAAAA,SAAS,EAAE;AAFJ;AALK,qBAHT;AAaPC,oBAAAA,sBAAsB,EAAE;AACtBzE,sBAAAA,KAAK,EAAE;AADe,qBAbjB;AAgBP0E,oBAAAA,2BAA2B,EAAE;AAC3BlF,sBAAAA,IAAI,EAAE,WADqB;AAE3BE,sBAAAA,OAAO,EAAE;AACPiF,wBAAAA,2BAA2B,EAAE;AAC3BnF,0BAAAA,IAAI,EAAE,MADqB;AAE3BoF,0BAAAA,MAAM,EAAE;AACNpF,4BAAAA,IAAI,EAAE,WADA;AAENE,4BAAAA,OAAO,EAAE;AACPkB,8BAAAA,IAAI,EAAE,EADC;AAEPiE,8BAAAA,QAAQ,EAAE;AACRrF,gCAAAA,IAAI,EAAE;AADE,+BAFH;AAKPsF,8BAAAA,QAAQ,EAAE;AACRtF,gCAAAA,IAAI,EAAE;AADE,+BALH;AAQPuF,8BAAAA,SAAS,EAAE;AACTvF,gCAAAA,IAAI,EAAE;AADG;AARJ;AAFH;AAFmB,yBADtB;AAmBPwF,wBAAAA,8BAA8B,EAAE;AAC9BxF,0BAAAA,IAAI,EAAE,MADwB;AAE9BoF,0BAAAA,MAAM,EAAE;AACNpF,4BAAAA,IAAI,EAAE,WADA;AAENE,4BAAAA,OAAO,EAAE;AACPkB,8BAAAA,IAAI,EAAE,EADC;AAEPiE,8BAAAA,QAAQ,EAAE;AACRrF,gCAAAA,IAAI,EAAE;AADE,+BAFH;AAKPsF,8BAAAA,QAAQ,EAAE;AACRtF,gCAAAA,IAAI,EAAE;AADE,+BALH;AAQPuF,8BAAAA,SAAS,EAAE;AACTvF,gCAAAA,IAAI,EAAE;AADG;AARJ;AAFH;AAFsB,yBAnBzB;AAqCPyF,wBAAAA,+BAA+B,EAAE;AAC/BzF,0BAAAA,IAAI,EAAE,MADyB;AAE/BoF,0BAAAA,MAAM,EAAE;AACNpF,4BAAAA,IAAI,EAAE,WADA;AAENE,4BAAAA,OAAO,EAAE;AACPkB,8BAAAA,IAAI,EAAE,EADC;AAEPsE,8BAAAA,MAAM,EAAE;AACNlF,gCAAAA,KAAK,EAAE;AADD,+BAFD;AAKP+E,8BAAAA,SAAS,EAAE;AACTvF,gCAAAA,IAAI,EAAE;AADG;AALJ;AAFH;AAFuB;AArC1B;AAFkB,qBAhBtB;AAwEP2F,oBAAAA,qBAAqB,EAAE;AACrB3F,sBAAAA,IAAI,EAAE,KADe;AAErB4F,sBAAAA,GAAG,EAAE,EAFgB;AAGrBC,sBAAAA,KAAK,EAAE;AAHc,qBAxEhB;AA6EPC,oBAAAA,iBAAiB,EAAE,EA7EZ;AA8EPpF,oBAAAA,OAAO,EAAE,EA9EF;AA+EPqF,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBA/EX;AAkFPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa;AAlFd;AAFA;AADJ;AAFH,aAVS;AAwGjBwB,YAAAA,UAAU,EAAE;AAxGK,WA7hBT;AAuoBVyE,UAAAA,yBAAyB,EAAE;AACzBlG,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,sBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPc,gBAAAA,oBAAoB,EAAE;AADf;AALJ,aADkB;AAUzBD,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPgG,gBAAAA,iBAAiB,EAAE;AACjBlG,kBAAAA,IAAI,EAAE,WADW;AAEjBE,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,OAAO,EAAE,EADF;AAEPa,oBAAAA,oBAAoB,EAAE,EAFf;AAGPX,oBAAAA,SAAS,EAAE,EAHJ;AAIP8F,oBAAAA,aAAa,EAAE,EAJR;AAKP/F,oBAAAA,kBAAkB,EAAE,EALb;AAMPE,oBAAAA,UAAU,EAAE;AACVN,sBAAAA,IAAI,EAAE;AADI,qBANL;AASPO,oBAAAA,QAAQ,EAAE;AACRC,sBAAAA,KAAK,EAAE;AADC,qBATH;AAYPC,oBAAAA,SAAS,EAAE;AACTD,sBAAAA,KAAK,EAAE;AADE,qBAZJ;AAePG,oBAAAA,uBAAuB,EAAE;AACvBH,sBAAAA,KAAK,EAAE;AADgB,qBAflB;AAkBPE,oBAAAA,OAAO,EAAE,EAlBF;AAmBPG,oBAAAA,qBAAqB,EAAE,EAnBhB;AAoBPC,oBAAAA,qBAAqB,EAAE;AACrBN,sBAAAA,KAAK,EAAE;AADc,qBApBhB;AAuBP4F,oBAAAA,MAAM,EAAE,EAvBD;AAwBPL,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAxBX;AA2BPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa;AA3Bd;AAFQ;AADZ;AAFH,aAViB;AAiDzBwB,YAAAA,UAAU,EAAE;AAjDa,WAvoBjB;AA0rBV6E,UAAAA,uBAAuB,EAAE;AACvBtG,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPgB,gBAAAA,kBAAkB,EAAE;AADb;AALJ,aADgB;AAUvBH,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPoG,gBAAAA,eAAe,EAAE;AACftG,kBAAAA,IAAI,EAAE,WADS;AAEfE,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,OAAO,EAAE,EADF;AAEPe,oBAAAA,kBAAkB,EAAE,EAFb;AAGPb,oBAAAA,SAAS,EAAE,EAHJ;AAIP8F,oBAAAA,aAAa,EAAE,EAJR;AAKP/F,oBAAAA,kBAAkB,EAAE,EALb;AAMPE,oBAAAA,UAAU,EAAE;AACVN,sBAAAA,IAAI,EAAE;AADI,qBANL;AASPO,oBAAAA,QAAQ,EAAE;AACRC,sBAAAA,KAAK,EAAE;AADC,qBATH;AAYPC,oBAAAA,SAAS,EAAE;AACTD,sBAAAA,KAAK,EAAE;AADE,qBAZJ;AAePE,oBAAAA,OAAO,EAAE,EAfF;AAgBP0F,oBAAAA,MAAM,EAAE,EAhBD;AAiBPL,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAjBX;AAoBPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa;AApBd;AAFM;AADV;AAFH,aAVe;AA0CvBwB,YAAAA,UAAU,EAAE;AA1CW,WA1rBf;AAsuBV+E,UAAAA,gBAAgB,EAAE;AAChBxG,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPqB,gBAAAA,WAAW,EAAE;AADN;AALJ,aADS;AAUhBR,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPsG,gBAAAA,QAAQ,EAAE;AACRxG,kBAAAA,IAAI,EAAE,WADE;AAERE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEPG,oBAAAA,WAAW,EAAE,EAFN;AAGPnB,oBAAAA,kBAAkB,EAAE,EAHb;AAIPiB,oBAAAA,iBAAiB,EAAE;AACjBrB,sBAAAA,IAAI,EAAE;AADW,qBAJZ;AAOPsB,oBAAAA,cAAc,EAAE;AACdd,sBAAAA,KAAK,EAAE;AADO,qBAPT;AAUP4F,oBAAAA,MAAM,EAAE,EAVD;AAWPD,oBAAAA,aAAa,EAAE,EAXR;AAYPJ,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAZX;AAePgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBAfd;AAkBPyG,oBAAAA,oBAAoB,EAAE;AACpBzG,sBAAAA,IAAI,EAAE,WADc;AAEpBE,sBAAAA,OAAO,EAAE;AACPE,wBAAAA,kBAAkB,EAAE,EADb;AAEPiB,wBAAAA,iBAAiB,EAAE;AACjBrB,0BAAAA,IAAI,EAAE;AADW,yBAFZ;AAKPsB,wBAAAA,cAAc,EAAE;AACdd,0BAAAA,KAAK,EAAE;AADO,yBALT;AAQP4F,wBAAAA,MAAM,EAAE,EARD;AASPD,wBAAAA,aAAa,EAAE,EATR;AAUPJ,wBAAAA,gBAAgB,EAAE;AAChB/F,0BAAAA,IAAI,EAAE;AADU,yBAVX;AAaPgG,wBAAAA,mBAAmB,EAAE;AACnBhG,0BAAAA,IAAI,EAAE;AADa;AAbd;AAFW;AAlBf;AAFD;AADH;AAFH,aAVQ;AAyDhBwB,YAAAA,UAAU,EAAE;AAzDI,WAtuBR;AAiyBVkF,UAAAA,uBAAuB,EAAE;AACvB3G,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP0B,gBAAAA,kBAAkB,EAAE;AADb;AALJ,aADgB;AAUvBb,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPyG,gBAAAA,eAAe,EAAE;AACf3G,kBAAAA,IAAI,EAAE,WADS;AAEfE,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,OAAO,EAAE,EADF;AAEPyB,oBAAAA,kBAAkB,EAAE,EAFb;AAGPF,oBAAAA,eAAe,EAAE,EAHV;AAIPC,oBAAAA,UAAU,EAAE;AACVnB,sBAAAA,KAAK,EAAE;AADG,qBAJL;AAOPE,oBAAAA,OAAO,EAAE,EAPF;AAQP0F,oBAAAA,MAAM,EAAE,EARD;AASPQ,oBAAAA,UAAU,EAAE;AACV5G,sBAAAA,IAAI,EAAE;AADI,qBATL;AAYP+F,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAZX;AAePgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBAfd;AAkBPmG,oBAAAA,aAAa,EAAE;AAlBR;AAFM;AADV;AAFH,aAVe;AAsCvB3E,YAAAA,UAAU,EAAE;AAtCW,WAjyBf;AAy0BVqF,UAAAA,eAAe,EAAE;AACf9G,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP8B,gBAAAA,UAAU,EAAE;AADL;AALJ,aADQ;AAUfjB,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP4G,gBAAAA,OAAO,EAAE;AACP9G,kBAAAA,IAAI,EAAE,WADC;AAEPE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEPY,oBAAAA,UAAU,EAAE,EAFL;AAGPN,oBAAAA,eAAe,EAAE,EAHV;AAIPK,oBAAAA,WAAW,EAAE,EAJN;AAKPD,oBAAAA,SAAS,EAAE,EALJ;AAMPsE,oBAAAA,MAAM,EAAE,EAND;AAOPL,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAPX;AAUPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBAVd;AAaP+G,oBAAAA,mBAAmB,EAAE;AACnB/G,sBAAAA,IAAI,EAAE,WADa;AAEnBE,sBAAAA,OAAO,EAAE;AACP4B,wBAAAA,SAAS,EAAE,EADJ;AAEPsE,wBAAAA,MAAM,EAAE,EAFD;AAGPD,wBAAAA,aAAa,EAAE,EAHR;AAIPJ,wBAAAA,gBAAgB,EAAE;AAChB/F,0BAAAA,IAAI,EAAE;AADU,yBAJX;AAOPgG,wBAAAA,mBAAmB,EAAE;AACnBhG,0BAAAA,IAAI,EAAE;AADa;AAPd;AAFU,qBAbd;AA2BP6C,oBAAAA,UAAU,EAAE;AA3BL;AAFF;AADF;AAFH,aAVO;AA+CfrB,YAAAA,UAAU,EAAE;AA/CG,WAz0BP;AA03BVwF,UAAAA,wBAAwB,EAAE;AACxBjH,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,qBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPiC,gBAAAA,mBAAmB,EAAE;AADd;AALJ,aADiB;AAUxBpB,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP+G,gBAAAA,gBAAgB,EAAE;AAChBjH,kBAAAA,IAAI,EAAE,WADU;AAEhBE,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,OAAO,EAAE,EADF;AAEPgC,oBAAAA,mBAAmB,EAAE,EAFd;AAGPH,oBAAAA,UAAU,EAAE,EAHL;AAIPE,oBAAAA,aAAa,EAAE,EAJR;AAKPxB,oBAAAA,OAAO,EAAE,EALF;AAMP0F,oBAAAA,MAAM,EAAE,EAND;AAOP3F,oBAAAA,SAAS,EAAE;AACTD,sBAAAA,KAAK,EAAE;AADE,qBAPJ;AAUPuF,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAVX;AAaPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBAbd;AAgBPmG,oBAAAA,aAAa,EAAE;AAhBR;AAFO;AADX;AAFH,aAVgB;AAoCxB3E,YAAAA,UAAU,EAAE;AApCY,WA13BhB;AAg6BV0F,UAAAA,oBAAoB,EAAE;AACpBnH,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,iBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,eAAe,EAAE;AADV;AALJ,aADa;AAUpBX,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiH,gBAAAA,YAAY,EAAE;AACZnH,kBAAAA,IAAI,EAAE,WADM;AAEZE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEPM,oBAAAA,eAAe,EAAE,EAFV;AAGP0E,oBAAAA,MAAM,EAAE,EAHD;AAIP1F,oBAAAA,OAAO,EAAE,EAJF;AAKP2B,oBAAAA,SAAS,EAAE,EALJ;AAMP0D,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBANX;AASPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBATd;AAYPmG,oBAAAA,aAAa,EAAE,EAZR;AAaP7D,oBAAAA,MAAM,EAAE;AAbD;AAFG;AADP;AAFH,aAVY;AAiCpBd,YAAAA,UAAU,EAAE;AAjCQ,WAh6BZ;AAm8BV4F,UAAAA,wBAAwB,EAAE;AACxBrH,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,qBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPwC,gBAAAA,mBAAmB,EAAE;AADd;AALJ,aADiB;AAUxB3B,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmH,gBAAAA,gBAAgB,EAAE;AAChBrH,kBAAAA,IAAI,EAAE,WADU;AAEhBE,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,OAAO,EAAE,EADF;AAEPuC,oBAAAA,mBAAmB,EAAE,EAFd;AAGPV,oBAAAA,UAAU,EAAE,EAHL;AAIPL,oBAAAA,UAAU,EAAE;AACVnB,sBAAAA,KAAK,EAAE;AADG,qBAJL;AAOPE,oBAAAA,OAAO,EAAE,EAPF;AAQP0F,oBAAAA,MAAM,EAAE,EARD;AASPL,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBATX;AAYPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBAZd;AAePmG,oBAAAA,aAAa,EAAE,EAfR;AAgBP3D,oBAAAA,UAAU,EAAE,EAhBL;AAiBPC,oBAAAA,6BAA6B,EAAE;AAC7BzC,sBAAAA,IAAI,EAAE;AADuB;AAjBxB;AAFO;AADX;AAFH,aAVgB;AAuCxBwB,YAAAA,UAAU,EAAE;AAvCY,WAn8BhB;AA4+BV8F,UAAAA,oBAAoB,EAAE;AACpBvH,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,iBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP0C,gBAAAA,eAAe,EAAE;AADV;AALJ,aADa;AAUpB7B,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqH,gBAAAA,YAAY,EAAE;AACZvH,kBAAAA,IAAI,EAAE,WADM;AAEZE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEPwB,oBAAAA,eAAe,EAAE,EAFV;AAGP4E,oBAAAA,SAAS,EAAE,EAHJ;AAIP3E,oBAAAA,UAAU,EAAE,EAJL;AAKPnB,oBAAAA,eAAe,EAAE,EALV;AAMP0E,oBAAAA,MAAM,EAAE,EAND;AAOPL,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAPX;AAUPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa;AAVd;AAFG;AADP;AAFH,aAVY;AAgCpBwB,YAAAA,UAAU,EAAE;AAhCQ,WA5+BZ;AA8gCViG,UAAAA,6BAA6B,EAAE;AAC7B1H,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,0BADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPwH,gBAAAA,wBAAwB,EAAE;AADnB;AALJ,aADsB;AAU7B3G,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPyH,gBAAAA,qBAAqB,EAAE;AACrB3H,kBAAAA,IAAI,EAAE,WADe;AAErBE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEPsG,oBAAAA,wBAAwB,EAAE,EAFnB;AAGPE,oBAAAA,iBAAiB,EAAE;AACjB5H,sBAAAA,IAAI,EAAE,KADW;AAEjB4F,sBAAAA,GAAG,EAAE,EAFY;AAGjBC,sBAAAA,KAAK,EAAE;AAHU,qBAHZ;AAQPE,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBARX;AAWPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBAXd;AAcPoG,oBAAAA,MAAM,EAAE;AAdD;AAFY;AADhB;AAFH,aAVqB;AAkC7B5E,YAAAA,UAAU,EAAE;AAlCiB,WA9gCrB;AAkjCVqG,UAAAA,cAAc,EAAE;AACd9H,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPG,gBAAAA,SAAS,EAAE;AADJ;AALJ,aADO;AAUdU,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP4H,gBAAAA,MAAM,EAAE;AACN9H,kBAAAA,IAAI,EAAE,WADA;AAENE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEPf,oBAAAA,SAAS,EAAE,EAFJ;AAGP0F,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAHX;AAMPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBANd;AASP0B,oBAAAA,eAAe,EAAE,EATV;AAUPyE,oBAAAA,aAAa,EAAE,EAVR;AAWPpD,oBAAAA,gBAAgB,EAAE;AAChBvC,sBAAAA,KAAK,EAAE;AADS,qBAXX;AAcP4F,oBAAAA,MAAM,EAAE;AAdD;AAFH;AADD;AAFH,aAVM;AAkCd5E,YAAAA,UAAU,EAAE;AAlCE,WAljCN;AAslCVuG,UAAAA,yBAAyB,EAAE;AACzBhI,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,sBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPiD,gBAAAA,oBAAoB,EAAE;AADf;AALJ,aADkB;AAUzBpC,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP8H,gBAAAA,iBAAiB,EAAE;AACjBhI,kBAAAA,IAAI,EAAE,WADW;AAEjBE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEP+B,oBAAAA,oBAAoB,EAAE,EAFf;AAGPzB,oBAAAA,eAAe,EAAE,EAHV;AAIPwB,oBAAAA,mBAAmB,EAAE;AACnB1C,sBAAAA,KAAK,EAAE;AADY,qBAJd;AAOP4F,oBAAAA,MAAM,EAAE,EAPD;AAQPL,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBARX;AAWPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBAXd;AAcPmG,oBAAAA,aAAa,EAAE;AAdR;AAFQ;AADZ;AAFH;AAViB,WAtlCjB;AAynCV8B,UAAAA,cAAc,EAAE;AACdlI,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPmD,gBAAAA,SAAS,EAAE;AADJ;AALJ,aADO;AAUdtC,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPgI,gBAAAA,MAAM,EAAE;AACNlI,kBAAAA,IAAI,EAAE,WADA;AAENE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEPiC,oBAAAA,SAAS,EAAE,EAFJ;AAGPwB,oBAAAA,YAAY,EAAE,EAHP;AAIP6C,oBAAAA,wBAAwB,EAAE,EAJnB;AAKPtB,oBAAAA,MAAM,EAAE,EALD;AAMP+B,oBAAAA,WAAW,EAAE,EANN;AAOPpC,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAPX;AAUPoI,oBAAAA,UAAU,EAAE,EAVL;AAWPpC,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa;AAXd;AAFH;AADD;AAFH,aAVM;AAiCdwB,YAAAA,UAAU,EAAE;AAjCE,WAznCN;AA4pCV6G,UAAAA,mBAAmB,EAAE;AACnBtI,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,gBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,cAAc,EAAE;AADT;AALJ,aADY;AAUnBxC,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPoI,gBAAAA,WAAW,EAAE;AACXtI,kBAAAA,IAAI,EAAE,WADK;AAEXE,kBAAAA,OAAO,EAAE;AACPqD,oBAAAA,cAAc,EAAE,EADT;AAEP7B,oBAAAA,eAAe,EAAE,EAFV;AAGPN,oBAAAA,IAAI,EAAE,EAHC;AAIPiC,oBAAAA,SAAS,EAAE,EAJJ;AAKPC,oBAAAA,iBAAiB,EAAE;AACjB9C,sBAAAA,KAAK,EAAE;AADU,qBALZ;AAQPuF,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBARX;AAWPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBAXd;AAcPoG,oBAAAA,MAAM,EAAE,EAdD;AAePD,oBAAAA,aAAa,EAAE,EAfR;AAgBPoC,oBAAAA,uBAAuB,EAAE;AACvBvI,sBAAAA,IAAI,EAAE,WADiB;AAEvBE,sBAAAA,OAAO,EAAE;AACPoD,wBAAAA,iBAAiB,EAAE;AACjB9C,0BAAAA,KAAK,EAAE;AADU,yBADZ;AAIPuF,wBAAAA,gBAAgB,EAAE;AAChB/F,0BAAAA,IAAI,EAAE;AADU,yBAJX;AAOPgG,wBAAAA,mBAAmB,EAAE;AACnBhG,0BAAAA,IAAI,EAAE;AADa,yBAPd;AAUPoG,wBAAAA,MAAM,EAAE,EAVD;AAWPD,wBAAAA,aAAa,EAAE;AAXR;AAFc,qBAhBlB;AAgCPqC,oBAAAA,YAAY,EAAE;AACZhI,sBAAAA,KAAK,EAAE;AADK;AAhCP;AAFE;AADN;AAFH,aAVW;AAsDnBgB,YAAAA,UAAU,EAAE;AAtDO,WA5pCX;AAotCViH,UAAAA,cAAc,EAAE;AACd1I,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP4B,gBAAAA,SAAS,EAAE;AADJ;AALJ,aADO;AAUdf,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPuD,gBAAAA,MAAM,EAAE;AACNzD,kBAAAA,IAAI,EAAE,WADA;AAENE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEPU,oBAAAA,SAAS,EAAE,EAFJ;AAGP2B,oBAAAA,MAAM,EAAE,EAHD;AAIPsC,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAJX;AAOPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBAPd;AAUPsC,oBAAAA,MAAM,EAAE;AAVD;AAFH;AADD;AAFH,aAVM;AA8Bdd,YAAAA,UAAU,EAAE;AA9BE,WAptCN;AAovCVkH,UAAAA,gBAAgB,EAAE;AAChB3I,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP8D,gBAAAA,WAAW,EAAE;AADN;AALJ,aADS;AAUhBjD,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPyI,gBAAAA,QAAQ,EAAE;AACR3I,kBAAAA,IAAI,EAAE,WADE;AAERE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEP4C,oBAAAA,WAAW,EAAE,EAFN;AAGPL,oBAAAA,UAAU,EAAE;AACV3D,sBAAAA,IAAI,EAAE;AADI,qBAHL;AAMP4D,oBAAAA,aAAa,EAAE;AACb5D,sBAAAA,IAAI,EAAE;AADO,qBANR;AASP6D,oBAAAA,mBAAmB,EAAE;AACnB7D,sBAAAA,IAAI,EAAE;AADa,qBATd;AAYPqD,oBAAAA,SAAS,EAAE,EAZJ;AAaP3B,oBAAAA,eAAe,EAAE,EAbV;AAcPoC,oBAAAA,SAAS,EAAE,EAdJ;AAePC,oBAAAA,cAAc,EAAE;AACdvD,sBAAAA,KAAK,EAAE;AADO,qBAfT;AAkBPoI,oBAAAA,YAAY,EAAE;AACZ5I,sBAAAA,IAAI,EAAE,WADM;AAEZE,sBAAAA,OAAO,EAAE;AACP2I,wBAAAA,aAAa,EAAE;AADR;AAFG,qBAlBP;AAwBPzC,oBAAAA,MAAM,EAAE,EAxBD;AAyBPL,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBAzBX;AA4BPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBA5Bd;AA+BP8I,oBAAAA,qBAAqB,EAAE;AACrBtI,sBAAAA,KAAK,EAAE;AADc;AA/BhB;AAFD;AADH;AAFH,aAVQ;AAqDhBgB,YAAAA,UAAU,EAAE;AArDI,WApvCR;AA2yCVuH,UAAAA,uBAAuB,EAAE;AACvBhJ,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPE,gBAAAA,kBAAkB,EAAE;AADb;AALJ,aADgB;AAUvBW,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP8I,gBAAAA,eAAe,EAAE;AACfhJ,kBAAAA,IAAI,EAAE,WADS;AAEfE,kBAAAA,OAAO,EAAE;AACPkB,oBAAAA,IAAI,EAAE,EADC;AAEPhB,oBAAAA,kBAAkB,EAAE,EAFb;AAGP4D,oBAAAA,WAAW,EAAE,EAHN;AAIPL,oBAAAA,UAAU,EAAE;AACV3D,sBAAAA,IAAI,EAAE;AADI,qBAJL;AAOP4D,oBAAAA,aAAa,EAAE;AACb5D,sBAAAA,IAAI,EAAE;AADO,qBAPR;AAUPqD,oBAAAA,SAAS,EAAE,EAVJ;AAWPS,oBAAAA,SAAS,EAAE,EAXJ;AAYPpC,oBAAAA,eAAe,EAAE,EAZV;AAaPqC,oBAAAA,cAAc,EAAE;AACdvD,sBAAAA,KAAK,EAAE;AADO,qBAbT;AAgBPyI,oBAAAA,aAAa,EAAE;AACbjJ,sBAAAA,IAAI,EAAE;AADO,qBAhBR;AAmBPkE,oBAAAA,YAAY,EAAE,EAnBP;AAoBPgF,oBAAAA,cAAc,EAAE;AACdlJ,sBAAAA,IAAI,EAAE,WADQ;AAEdE,sBAAAA,OAAO,EAAE;AACPiJ,wBAAAA,wBAAwB,EAAE;AACxB3I,0BAAAA,KAAK,EAAE;AADiB;AADnB;AAFK,qBApBT;AA4BP4F,oBAAAA,MAAM,EAAE,EA5BD;AA6BPD,oBAAAA,aAAa,EAAE,EA7BR;AA8BPJ,oBAAAA,gBAAgB,EAAE;AAChB/F,sBAAAA,IAAI,EAAE;AADU,qBA9BX;AAiCPgG,oBAAAA,mBAAmB,EAAE;AACnBhG,sBAAAA,IAAI,EAAE;AADa,qBAjCd;AAoCPoJ,oBAAAA,YAAY,EAAE;AApCP;AAFM;AADV;AAFH,aAVe;AAwDvB5H,YAAAA,UAAU,EAAE;AAxDW,WA3yCf;AAq2CV6H,UAAAA,kBAAkB,EAAE;AAClBtJ,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPE,gBAAAA,kBAAkB,EAAE;AADb;AALJ,aADW;AAUlBW,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPE,gBAAAA,kBAAkB,EAAE,EADb;AAEP6C,gBAAAA,OAAO,EAAE;AACPzC,kBAAAA,KAAK,EAAE;AADA;AAFF;AAFH;AAVU,WAr2CV;AAy3CV8I,UAAAA,sBAAsB,EAAE;AACtBvJ,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPE,gBAAAA,kBAAkB,EAAE,EADb;AAEPmJ,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADe;AAWtBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPuJ,gBAAAA,kBAAkB,EAAE;AAClBzJ,kBAAAA,IAAI,EAAE,MADY;AAElBoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPc,sBAAAA,oBAAoB,EAAE,EADf;AAEPb,sBAAAA,OAAO,EAAE,EAFF;AAGPiG,sBAAAA,MAAM,EAAE,EAHD;AAIPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAJX;AAOPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPmG,sBAAAA,aAAa,EAAE,EAVR;AAWP/F,sBAAAA,kBAAkB,EAAE,EAXb;AAYPS,sBAAAA,qBAAqB,EAAE;AAZhB;AAFH;AAFU,iBADb;AAqBP0I,gBAAAA,SAAS,EAAE;AArBJ;AAFH,aAXc;AAqCtB/H,YAAAA,UAAU,EAAE;AArCU,WAz3Cd;AAg6CVkI,UAAAA,oBAAoB,EAAE;AACpB3J,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPE,gBAAAA,kBAAkB,EAAE,EADb;AAEPmJ,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADa;AAWpBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPyJ,gBAAAA,gBAAgB,EAAE;AAChB3J,kBAAAA,IAAI,EAAE,MADU;AAEhBoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPgB,sBAAAA,kBAAkB,EAAE,EADb;AAEPf,sBAAAA,OAAO,EAAE,EAFF;AAGPiG,sBAAAA,MAAM,EAAE,EAHD;AAIPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAJX;AAOPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPmG,sBAAAA,aAAa,EAAE,EAVR;AAWP/F,sBAAAA,kBAAkB,EAAE;AAXb;AAFH;AAFQ,iBADX;AAoBPmJ,gBAAAA,SAAS,EAAE;AApBJ;AAFH,aAXY;AAoCpB/H,YAAAA,UAAU,EAAE;AApCQ,WAh6CZ;AAs8CVoI,UAAAA,aAAa,EAAE;AACb7J,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP8D,gBAAAA,WAAW,EAAE,EADN;AAEPuF,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADM;AAWbe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP2J,gBAAAA,SAAS,EAAE;AACT7J,kBAAAA,IAAI,EAAE,MADG;AAEToF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEPG,sBAAAA,WAAW,EAAE,EAFN;AAGP6E,sBAAAA,MAAM,EAAE,EAHD;AAIPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAJX;AAOPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPmG,sBAAAA,aAAa,EAAE;AAVR;AAFH;AAFC,iBADJ;AAmBPoD,gBAAAA,SAAS,EAAE;AAnBJ;AAFH,aAXK;AAmCb/H,YAAAA,UAAU,EAAE;AAnCC,WAt8CL;AA2+CVsI,UAAAA,oBAAoB,EAAE;AACpB/J,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,eAAe,EAAE,EADV;AAEP6H,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADa;AAWpBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP6J,gBAAAA,gBAAgB,EAAE;AAChB/J,kBAAAA,IAAI,EAAE,MADU;AAEhBoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP0B,sBAAAA,kBAAkB,EAAE,EADb;AAEPF,sBAAAA,eAAe,EAAE,EAFV;AAGPvB,sBAAAA,OAAO,EAAE,EAHF;AAIPiG,sBAAAA,MAAM,EAAE,EAJD;AAKPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBALX;AAQPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBARd;AAWPmG,sBAAAA,aAAa,EAAE;AAXR;AAFH;AAFQ,iBADX;AAoBPoD,gBAAAA,SAAS,EAAE;AApBJ;AAFH,aAXY;AAoCpB/H,YAAAA,UAAU,EAAE;AApCQ,WA3+CZ;AAihDVwI,UAAAA,qBAAqB,EAAE;AACrBjK,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP8B,gBAAAA,UAAU,EAAE,EADL;AAEPuH,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADc;AAWrBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP+J,gBAAAA,iBAAiB,EAAE;AACjBjK,kBAAAA,IAAI,EAAE,MADW;AAEjBoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPiC,sBAAAA,mBAAmB,EAAE,EADd;AAEPhC,sBAAAA,OAAO,EAAE,EAFF;AAGPiG,sBAAAA,MAAM,EAAE,EAHD;AAIPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAJX;AAOPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPmG,sBAAAA,aAAa,EAAE;AAVR;AAFH;AAFS,iBADZ;AAmBPoD,gBAAAA,SAAS,EAAE;AAnBJ;AAFH,aAXa;AAmCrB/H,YAAAA,UAAU,EAAE;AAnCS,WAjhDb;AAsjDV0I,UAAAA,iBAAiB,EAAE;AACjBnK,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPqJ,gBAAAA,SAAS,EAAE,EADJ;AAEPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAFL;AAFJ,aADU;AAUjBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiK,gBAAAA,aAAa,EAAE;AACbnK,kBAAAA,IAAI,EAAE,MADO;AAEboF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEPM,sBAAAA,eAAe,EAAE,EAFV;AAGP0E,sBAAAA,MAAM,EAAE,EAHD;AAIPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAJX;AAOPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPmG,sBAAAA,aAAa,EAAE,EAVR;AAWP7D,sBAAAA,MAAM,EAAE;AAXD;AAFH;AAFK,iBADR;AAoBPiH,gBAAAA,SAAS,EAAE;AApBJ;AAFH,aAVS;AAmCjB/H,YAAAA,UAAU,EAAE;AAnCK,WAtjDT;AA2lDV4I,UAAAA,qBAAqB,EAAE;AACrBrK,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP8B,gBAAAA,UAAU,EAAE,EADL;AAEPuH,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADc;AAWrBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmK,gBAAAA,iBAAiB,EAAE;AACjBrK,kBAAAA,IAAI,EAAE,MADW;AAEjBoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPwC,sBAAAA,mBAAmB,EAAE,EADd;AAEPvC,sBAAAA,OAAO,EAAE,EAFF;AAGPiG,sBAAAA,MAAM,EAAE,EAHD;AAIPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAJX;AAOPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPmG,sBAAAA,aAAa,EAAE,EAVR;AAWP3D,sBAAAA,UAAU,EAAE;AAXL;AAFH;AAFS,iBADZ;AAoBP+G,gBAAAA,SAAS,EAAE;AApBJ;AAFH,aAXa;AAoCrB/H,YAAAA,UAAU,EAAE;AApCS,WA3lDb;AAioDV8I,UAAAA,YAAY,EAAE;AACZvK,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,eAAe,EAAE,EADV;AAEP6H,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADK;AAWZe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqK,gBAAAA,QAAQ,EAAE;AACRvK,kBAAAA,IAAI,EAAE,MADE;AAERoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEPY,sBAAAA,UAAU,EAAE,EAFL;AAGPD,sBAAAA,WAAW,EAAE,EAHN;AAIPqE,sBAAAA,MAAM,EAAE,EAJD;AAKPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBALX;AAQPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa;AARd;AAFH;AAFA,iBADH;AAmBPuJ,gBAAAA,SAAS,EAAE;AAnBJ;AAFH,aAXI;AAmCZ/H,YAAAA,UAAU,EAAE;AAnCA,WAjoDJ;AAsqDVgJ,UAAAA,iBAAiB,EAAE;AACjBzK,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,eAAe,EAAE,EADV;AAEP6H,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADU;AAWjBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPuK,gBAAAA,aAAa,EAAE;AACbzK,kBAAAA,IAAI,EAAE,MADO;AAEboF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEPwB,sBAAAA,eAAe,EAAE,EAFV;AAGPwD,sBAAAA,MAAM,EAAE,EAHD;AAIPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAJX;AAOPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa;AAPd;AAFH;AAFK,iBADR;AAkBPuJ,gBAAAA,SAAS,EAAE;AAlBJ;AAFH,aAXS;AAkCjB/H,YAAAA,UAAU,EAAE;AAlCK,WAtqDT;AA0sDVkJ,UAAAA,WAAW,EAAE;AACX3K,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,eAAe,EAAE,EADV;AAEP6H,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADI;AAWXe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPyK,gBAAAA,OAAO,EAAE;AACP3K,kBAAAA,IAAI,EAAE,MADC;AAEPoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEPf,sBAAAA,SAAS,EAAE,EAFJ;AAGP0F,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAHX;AAMPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBANd;AASP0B,sBAAAA,eAAe,EAAE,EATV;AAUPyE,sBAAAA,aAAa,EAAE,EAVR;AAWPC,sBAAAA,MAAM,EAAE;AAXD;AAFH;AAFD,iBADF;AAoBPmD,gBAAAA,SAAS,EAAE;AApBJ;AAFH,aAXG;AAoCX/H,YAAAA,UAAU,EAAE;AApCD,WA1sDH;AAgvDVoJ,UAAAA,4BAA4B,EAAE;AAC5B7K,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPiD,gBAAAA,oBAAoB,EAAE,EADf;AAEPoG,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADqB;AAW5Be,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP+C,gBAAAA,OAAO,EAAE;AACPzC,kBAAAA,KAAK,EAAE;AADA,iBADF;AAIP+I,gBAAAA,SAAS,EAAE;AAJJ;AAFH,aAXoB;AAoB5B/H,YAAAA,UAAU,EAAE;AApBgB,WAhvDpB;AAswDVqJ,UAAAA,sBAAsB,EAAE;AACtB9K,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,eAAe,EAAE,EADV;AAEP6H,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADe;AAWtBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP4K,gBAAAA,kBAAkB,EAAE;AAClB9K,kBAAAA,IAAI,EAAE,MADY;AAElBoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEP+B,sBAAAA,oBAAoB,EAAE,EAFf;AAGPiD,sBAAAA,MAAM,EAAE,EAHD;AAIPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAJX;AAOPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPmG,sBAAAA,aAAa,EAAE;AAVR;AAFH;AAFU,iBADb;AAmBPoD,gBAAAA,SAAS,EAAE;AAnBJ;AAFH,aAXc;AAmCtB/H,YAAAA,UAAU,EAAE;AAnCU,WAtwDd;AA2yDVuJ,UAAAA,WAAW,EAAE;AACXhL,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP8K,gBAAAA,cAAc,EAAE,EADT;AAEPzB,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI,iBAHL;AAMPsC,gBAAAA,MAAM,EAAE;AAND;AAFJ,aADI;AAYXvB,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP+K,gBAAAA,OAAO,EAAE;AACPjL,kBAAAA,IAAI,EAAE,MADC;AAEPoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEPiC,sBAAAA,SAAS,EAAE,EAFJ;AAGP+C,sBAAAA,MAAM,EAAE,EAHD;AAIPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAJX;AAOPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPsC,sBAAAA,MAAM,EAAE;AAVD;AAFH;AAFD,iBADF;AAmBPiH,gBAAAA,SAAS,EAAE;AAnBJ;AAFH,aAZG;AAoCX/H,YAAAA,UAAU,EAAE;AApCD,WA3yDH;AAi1DV0J,UAAAA,gBAAgB,EAAE;AAChBnL,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,eAAe,EAAE,EADV;AAEP6H,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADS;AAWhBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiL,gBAAAA,YAAY,EAAE;AACZnL,kBAAAA,IAAI,EAAE,MADM;AAEZoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEPmC,sBAAAA,cAAc,EAAE,EAFT;AAGP7B,sBAAAA,eAAe,EAAE,EAHV;AAIP2B,sBAAAA,SAAS,EAAE,EAJJ;AAKPC,sBAAAA,iBAAiB,EAAE;AACjB9C,wBAAAA,KAAK,EAAE;AADU,uBALZ;AAQP4F,sBAAAA,MAAM,EAAE,EARD;AASPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBATX;AAYPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa;AAZd;AAFH;AAFI,iBADP;AAuBPuJ,gBAAAA,SAAS,EAAE;AAvBJ;AAFH,aAXQ;AAuChB/H,YAAAA,UAAU,EAAE;AAvCI,WAj1DR;AA03DV4J,UAAAA,WAAW,EAAE;AACXrL,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPqJ,gBAAAA,SAAS,EAAE,EADJ;AAEPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAFL;AAFJ,aADI;AAUXe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmL,gBAAAA,OAAO,EAAE;AACPrL,kBAAAA,IAAI,EAAE,MADC;AAEPoF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEPU,sBAAAA,SAAS,EAAE,EAFJ;AAGPiE,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAHX;AAMPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBANd;AASPsC,sBAAAA,MAAM,EAAE;AATD;AAFH;AAFD,iBADF;AAkBPiH,gBAAAA,SAAS,EAAE;AAlBJ;AAFH,aAVG;AAiCX/H,YAAAA,UAAU,EAAE;AAjCD,WA13DH;AA65DV8J,UAAAA,oBAAoB,EAAE;AACpBvL,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP8D,gBAAAA,WAAW,EAAE,EADN;AAEPuF,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADa;AAWpBe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqL,gBAAAA,gBAAgB,EAAE;AAChBvL,kBAAAA,IAAI,EAAE,MADU;AAEhBoF,kBAAAA,MAAM,EAAE;AACN5E,oBAAAA,KAAK,EAAE;AADD;AAFQ,iBADX;AAOP+I,gBAAAA,SAAS,EAAE;AAPJ;AAFH,aAXY;AAuBpB/H,YAAAA,UAAU,EAAE;AAvBQ,WA75DZ;AAs7DVgK,UAAAA,aAAa,EAAE;AACbzL,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPwB,gBAAAA,eAAe,EAAE,EADV;AAEP6H,gBAAAA,SAAS,EAAE,EAFJ;AAGPC,gBAAAA,UAAU,EAAE;AACVxJ,kBAAAA,IAAI,EAAE;AADI;AAHL;AAFJ,aADM;AAWbe,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPuL,gBAAAA,SAAS,EAAE;AACTzL,kBAAAA,IAAI,EAAE,MADG;AAEToF,kBAAAA,MAAM,EAAE;AACNpF,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPkB,sBAAAA,IAAI,EAAE,EADC;AAEP4C,sBAAAA,WAAW,EAAE,EAFN;AAGPoC,sBAAAA,MAAM,EAAE,EAHD;AAIPL,sBAAAA,gBAAgB,EAAE;AAChB/F,wBAAAA,IAAI,EAAE;AADU,uBAJX;AAOPgG,sBAAAA,mBAAmB,EAAE;AACnBhG,wBAAAA,IAAI,EAAE;AADa,uBAPd;AAUPqD,sBAAAA,SAAS,EAAE;AAVJ;AAFH;AAFC,iBADJ;AAmBPkG,gBAAAA,SAAS,EAAE;AAnBJ;AAFH,aAXK;AAmCb/H,YAAAA,UAAU,EAAE;AAnCC,WAt7DL;AA29DVkK,UAAAA,mBAAmB,EAAE;AACnB3L,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPyL,gBAAAA,WAAW,EAAE;AADN;AALJ,aADY;AAUnB5K,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPU,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AADC;AAFH;AAVW,WA39DX;AA8+DVoL,UAAAA,gBAAgB,EAAE;AAChB7L,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,gBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,cAAc,EAAE;AADT;AALJ,aADS;AAUhBxC,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,cAAc,EAAE;AADT;AAFH,aAVQ;AAgBhB/B,YAAAA,UAAU,EAAE;AAhBI,WA9+DR;AAggEVqK,UAAAA,eAAe,EAAE;AACf9L,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,gBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,cAAc,EAAE;AADT;AALJ,aADQ;AAUfxC,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,cAAc,EAAE;AADT;AAFH,aAVO;AAgBf/B,YAAAA,UAAU,EAAE;AAhBG,WAhgEP;AAkhEVsK,UAAAA,2BAA2B,EAAE;AAC3B/L,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPE,gBAAAA,kBAAkB,EAAE;AADb;AALJ,aADoB;AAU3BoB,YAAAA,UAAU,EAAE;AAVe,WAlhEnB;AA8hEVuK,UAAAA,WAAW,EAAE;AACXhM,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,MAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPyL,gBAAAA,WAAW,EAAE,EADN;AAEP/K,gBAAAA,IAAI,EAAE;AACJJ,kBAAAA,KAAK,EAAE;AADH;AAFC;AANJ,aADI;AAcXO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAdG,WA9hEH;AAijEV8L,UAAAA,aAAa,EAAE;AACbjM,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPyL,gBAAAA,WAAW,EAAE,EADN;AAEPM,gBAAAA,OAAO,EAAE;AACPjM,kBAAAA,IAAI,EAAE,MADC;AAEPoF,kBAAAA,MAAM,EAAE;AAFD;AAFF;AANJ,aADM;AAebrE,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAfK,WAjjEL;AAqkEVgM,UAAAA,cAAc,EAAE;AACdnM,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPqB,gBAAAA,WAAW,EAAE,EADN;AAEPnB,gBAAAA,kBAAkB,EAAE,EAFb;AAGPiB,gBAAAA,iBAAiB,EAAE;AACjBrB,kBAAAA,IAAI,EAAE;AADW,iBAHZ;AAMPsB,gBAAAA,cAAc,EAAE;AACdd,kBAAAA,KAAK,EAAE;AADO;AANT;AALJ,aADO;AAiBdO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqB,gBAAAA,WAAW,EAAE;AADN;AAFH,aAjBM;AAuBdC,YAAAA,UAAU,EAAE;AAvBE,WArkEN;AA8lEV2K,UAAAA,aAAa,EAAE;AACbpM,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,EAER,WAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACP8B,gBAAAA,UAAU,EAAE,EADL;AAEPF,gBAAAA,SAAS,EAAE;AAFJ;AANJ,aADM;AAYbf,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP8B,gBAAAA,UAAU,EAAE;AADL;AAFH,aAZK;AAkBbR,YAAAA,UAAU,EAAE;AAlBC,WA9lEL;AAknEV4K,UAAAA,uBAAuB,EAAE;AACvBrM,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPmM,gBAAAA,UAAU,EAAE;AACV7L,kBAAAA,KAAK,EAAE;AADG,iBADL;AAIP8L,gBAAAA,aAAa,EAAE;AACbtM,kBAAAA,IAAI,EAAE,MADO;AAEboF,kBAAAA,MAAM,EAAE;AAFK,iBAJR;AAQPlC,gBAAAA,mBAAmB,EAAE;AACnB1C,kBAAAA,KAAK,EAAE;AADY,iBARd;AAWP2C,gBAAAA,oBAAoB,EAAE;AAXf;AAFJ,aADgB;AAiBvBpC,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPiD,gBAAAA,oBAAoB,EAAE;AADf;AAFH;AAjBe,WAlnEf;AA0oEVoJ,UAAAA,iBAAiB,EAAE;AACjBxM,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,gBADQ,EAER,mBAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,cAAc,EAAE,EADT;AAEPD,gBAAAA,iBAAiB,EAAE;AACjB9C,kBAAAA,KAAK,EAAE;AADU;AAFZ;AANJ,aADU;AAcjBO,YAAAA,MAAM,EAAE;AACNf,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqD,gBAAAA,cAAc,EAAE;AADT;AAFH,aAdS;AAoBjB/B,YAAAA,UAAU,EAAE;AApBK;AA1oET,SAjBC;AAkrEbgL,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACFzM,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,cADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACPwM,cAAAA,YAAY,EAAE;AACZlM,gBAAAA,KAAK,EAAE;AADK;AADP;AALP,WADE;AAYNmM,UAAAA,EAAE,EAAE;AACF3M,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,MADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACP0M,cAAAA,IAAI,EAAE,EADC;AAEPvK,cAAAA,SAAS,EAAE;AAFJ;AALP,WAZE;AAsBNwK,UAAAA,EAAE,EAAE;AACF7M,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,mBADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACP4M,cAAAA,iBAAiB,EAAE;AACjBtM,gBAAAA,KAAK,EAAE;AADU;AADZ;AALP,WAtBE;AAiCNuM,UAAAA,EAAE,EAAE;AACF/M,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACP8M,cAAAA,qBAAqB,EAAE;AACrBxM,gBAAAA,KAAK,EAAE;AADc;AADhB;AAFP,WAjCE;AAyCNyM,UAAAA,EAAE,EAAE;AACFjN,YAAAA,IAAI,EAAE,KADJ;AAEF4F,YAAAA,GAAG,EAAE,EAFH;AAGFC,YAAAA,KAAK,EAAE;AAHL,WAzCE;AA8CNqH,UAAAA,EAAE,EAAE;AACFlN,YAAAA,IAAI,EAAE,MADJ;AAEFoF,YAAAA,MAAM,EAAE;AACNpF,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,QADQ,EAER,UAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACPiN,gBAAAA,MAAM,EAAE,EADD;AAEPC,gBAAAA,QAAQ,EAAE;AAFH;AANH;AAFN,WA9CE;AA4DNC,UAAAA,EAAE,EAAE;AACFrN,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,0BADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACPoN,cAAAA,wBAAwB,EAAE;AACxBtN,gBAAAA,IAAI,EAAE,WADkB;AAExBC,gBAAAA,QAAQ,EAAE,CACR,UADQ,CAFc;AAKxBC,gBAAAA,OAAO,EAAE;AACPqN,kBAAAA,QAAQ,EAAE;AADH;AALe;AADnB;AALP,WA5DE;AA6ENC,UAAAA,EAAE,EAAE;AACFxN,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,cADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACPwM,cAAAA,YAAY,EAAE;AACZlM,gBAAAA,KAAK,EAAE;AADK;AADP;AALP,WA7EE;AAwFNiN,UAAAA,EAAE,EAAE;AACFzN,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,mBADQ,CAFR;AAKFC,YAAAA,OAAO,EAAE;AACP4M,cAAAA,iBAAiB,EAAE;AACjBtM,gBAAAA,KAAK,EAAE;AADU;AADZ;AALP,WAxFE;AAmGNkN,UAAAA,EAAE,EAAE;AACF1N,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACP8M,cAAAA,qBAAqB,EAAE;AACrBxM,gBAAAA,KAAK,EAAE;AADc,eADhB;AAIPmN,cAAAA,iCAAiC,EAAE;AACjC3N,gBAAAA,IAAI,EAAE;AAD2B,eAJ5B;AAOP4N,cAAAA,6BAA6B,EAAE;AAC7B5N,gBAAAA,IAAI,EAAE;AADuB;AAPxB;AAFP,WAnGE;AAiHN6N,UAAAA,EAAE,EAAE;AACF7N,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACP4N,cAAAA,YAAY,EAAE;AADP;AAFP,WAjHE;AAuHNC,UAAAA,GAAG,EAAE;AACH/N,YAAAA,IAAI,EAAE,WADH;AAEHC,YAAAA,QAAQ,EAAE,CACR,mBADQ,CAFP;AAKHC,YAAAA,OAAO,EAAE;AACP4M,cAAAA,iBAAiB,EAAE;AACjBtM,gBAAAA,KAAK,EAAE;AADU;AADZ;AALN,WAvHC;AAkINwN,UAAAA,GAAG,EAAE;AACHhO,YAAAA,IAAI,EAAE,QADH;AAEHiO,YAAAA,SAAS,EAAE;AAFR,WAlIC;AAsINC,UAAAA,GAAG,EAAE;AACHlO,YAAAA,IAAI,EAAE,MADH;AAEHoF,YAAAA,MAAM,EAAE;AACNpF,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,YAFQ,EAGR,YAHQ,CAFJ;AAONC,cAAAA,OAAO,EAAE;AACP4D,gBAAAA,SAAS,EAAE,EADJ;AAEPqK,gBAAAA,UAAU,EAAE,EAFL;AAGPC,gBAAAA,UAAU,EAAE;AAHL;AAPH;AAFL,WAtIC;AAsJNC,UAAAA,GAAG,EAAE;AACHrO,YAAAA,IAAI,EAAE,WADH;AAEHC,YAAAA,QAAQ,EAAE,CACR,SADQ,CAFP;AAKHC,YAAAA,OAAO,EAAE;AACP4M,cAAAA,iBAAiB,EAAE;AACjBtM,gBAAAA,KAAK,EAAE;AADU,eADZ;AAIPE,cAAAA,OAAO,EAAE;AAJF;AALN,WAtJC;AAkKN4N,UAAAA,GAAG,EAAE;AACHtO,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP8M,cAAAA,qBAAqB,EAAE;AACrBxM,gBAAAA,KAAK,EAAE;AADc,eADhB;AAIP+N,cAAAA,kCAAkC,EAAE;AAClCvO,gBAAAA,IAAI,EAAE;AAD4B,eAJ7B;AAOPwO,cAAAA,kBAAkB,EAAE;AAClBhO,gBAAAA,KAAK,EAAE;AADW,eAPb;AAUPmN,cAAAA,iCAAiC,EAAE;AACjC3N,gBAAAA,IAAI,EAAE;AAD2B;AAV5B;AAFN,WAlKC;AAmLNyO,UAAAA,GAAG,EAAE;AACHzO,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPwO,cAAAA,sBAAsB,EAAE;AACtB1O,gBAAAA,IAAI,EAAE,KADgB;AAEtB4F,gBAAAA,GAAG,EAAE,EAFiB;AAGtBC,gBAAAA,KAAK,EAAE;AACL7F,kBAAAA,IAAI,EAAE,MADD;AAELoF,kBAAAA,MAAM,EAAE;AAFH;AAHe;AADjB;AAFN,WAnLC;AAgMNuJ,UAAAA,GAAG,EAAE;AACH3O,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP0O,cAAAA,mBAAmB,EAAE,EADd;AAEPC,cAAAA,SAAS,EAAE;AACT7O,gBAAAA,IAAI,EAAE,WADG;AAETE,gBAAAA,OAAO,EAAE;AACP4O,kBAAAA,YAAY,EAAE;AACZ9O,oBAAAA,IAAI,EAAE,WADM;AAEZE,oBAAAA,OAAO,EAAE;AACPF,sBAAAA,IAAI,EAAE,EADC;AAEPmO,sBAAAA,UAAU,EAAE,EAFL;AAGPY,sBAAAA,WAAW,EAAE;AAHN;AAFG,mBADP;AASPC,kBAAAA,iBAAiB,EAAE;AACjBhP,oBAAAA,IAAI,EAAE,WADW;AAEjBE,oBAAAA,OAAO,EAAE;AACP+O,sBAAAA,uBAAuB,EAAE,EADlB;AAEPC,sBAAAA,uBAAuB,EAAE;AAFlB;AAFQ,mBATZ;AAgBPC,kBAAAA,6BAA6B,EAAE;AAC7BnP,oBAAAA,IAAI,EAAE,WADuB;AAE7BE,oBAAAA,OAAO,EAAE;AACPiF,sBAAAA,2BAA2B,EAAE;AAC3BnF,wBAAAA,IAAI,EAAE,MADqB;AAE3BoF,wBAAAA,MAAM,EAAE;AACNpF,0BAAAA,IAAI,EAAE,WADA;AAENE,0BAAAA,OAAO,EAAE;AACPkB,4BAAAA,IAAI,EAAE,EADC;AAEPiE,4BAAAA,QAAQ,EAAE;AACRrF,8BAAAA,IAAI,EAAE;AADE,6BAFH;AAKPsF,4BAAAA,QAAQ,EAAE;AACRtF,8BAAAA,IAAI,EAAE;AADE;AALH;AAFH;AAFmB,uBADtB;AAgBPwF,sBAAAA,8BAA8B,EAAE;AAC9BxF,wBAAAA,IAAI,EAAE,MADwB;AAE9BoF,wBAAAA,MAAM,EAAE;AACNpF,0BAAAA,IAAI,EAAE,WADA;AAENE,0BAAAA,OAAO,EAAE;AACPkB,4BAAAA,IAAI,EAAE,EADC;AAEPiE,4BAAAA,QAAQ,EAAE;AACRrF,8BAAAA,IAAI,EAAE;AADE,6BAFH;AAKPsF,4BAAAA,QAAQ,EAAE;AACRtF,8BAAAA,IAAI,EAAE;AADE;AALH;AAFH;AAFsB,uBAhBzB;AA+BPyF,sBAAAA,+BAA+B,EAAE;AAC/BzF,wBAAAA,IAAI,EAAE,MADyB;AAE/BoF,wBAAAA,MAAM,EAAE;AACNpF,0BAAAA,IAAI,EAAE,WADA;AAENE,0BAAAA,OAAO,EAAE;AACPkB,4BAAAA,IAAI,EAAE,EADC;AAEPsE,4BAAAA,MAAM,EAAE;AACNlF,8BAAAA,KAAK,EAAE;AADD;AAFD;AAFH;AAFuB;AA/B1B;AAFoB;AAhBxB;AAFA,eAFJ;AAqEP2I,cAAAA,wBAAwB,EAAE;AACxB3I,gBAAAA,KAAK,EAAE;AADiB,eArEnB;AAwEP4O,cAAAA,+BAA+B,EAAE;AAC/BpP,gBAAAA,IAAI,EAAE,KADyB;AAE/B4F,gBAAAA,GAAG,EAAE,EAF0B;AAG/BC,gBAAAA,KAAK,EAAE;AAHwB,eAxE1B;AA6EPwJ,cAAAA,YAAY,EAAE;AACZrP,gBAAAA,IAAI,EAAE,WADM;AAEZE,gBAAAA,OAAO,EAAE;AACPiO,kBAAAA,UAAU,EAAE,EADL;AAEPmB,kBAAAA,UAAU,EAAE;AACVtP,oBAAAA,IAAI,EAAE,MADI;AAEVoF,oBAAAA,MAAM,EAAE;AAFE;AAFL;AAFG,eA7EP;AAuFPmK,cAAAA,qBAAqB,EAAE;AACrBvP,gBAAAA,IAAI,EAAE,WADe;AAErBE,gBAAAA,OAAO,EAAE;AACPsP,kBAAAA,aAAa,EAAE,EADR;AAEPC,kBAAAA,oBAAoB,EAAE;AAFf;AAFY,eAvFhB;AA8FPjB,cAAAA,kBAAkB,EAAE;AAClBhO,gBAAAA,KAAK,EAAE;AADW,eA9Fb;AAiGPkP,cAAAA,kBAAkB,EAAE;AAClB1P,gBAAAA,IAAI,EAAE,WADY;AAElBE,gBAAAA,OAAO,EAAE;AACPyP,kBAAAA,oBAAoB,EAAE;AADf;AAFS;AAjGb;AAFN,WAhMC;AA2SNC,UAAAA,GAAG,EAAE;AACH5P,YAAAA,IAAI,EAAE,MADH;AAEHoF,YAAAA,MAAM,EAAE;AAFL,WA3SC;AA+SNyK,UAAAA,GAAG,EAAE;AACH7P,YAAAA,IAAI,EAAE,KADH;AAEH4F,YAAAA,GAAG,EAAE,EAFF;AAGHC,YAAAA,KAAK,EAAE;AACL7F,cAAAA,IAAI,EAAE;AADD;AAHJ,WA/SC;AAsTN8P,UAAAA,GAAG,EAAE;AACH9P,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPE,cAAAA,kBAAkB,EAAE,EADb;AAEPgG,cAAAA,MAAM,EAAE,EAFD;AAGPlC,cAAAA,YAAY,EAAE,EAHP;AAIPkF,cAAAA,YAAY,EAAE,EAJP;AAKPrD,cAAAA,gBAAgB,EAAE;AAChB/F,gBAAAA,IAAI,EAAE;AADU,eALX;AAQPgG,cAAAA,mBAAmB,EAAE;AACnBhG,gBAAAA,IAAI,EAAE;AADa,eARd;AAWPmG,cAAAA,aAAa,EAAE;AAXR;AAFN;AAtTC;AAlrEK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-05-22',\n    endpointPrefix: 'personalize',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceFullName: 'Amazon Personalize',\n    serviceId: 'Personalize',\n    signatureVersion: 'v4',\n    signingName: 'personalize',\n    targetPrefix: 'AmazonPersonalize',\n    uid: 'personalize-2018-05-22'\n  },\n  operations: {\n    CreateBatchInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'jobName',\n          'solutionVersionArn',\n          'jobInput',\n          'jobOutput',\n          'roleArn'\n        ],\n        members: {\n          jobName: {},\n          solutionVersionArn: {},\n          filterArn: {},\n          numResults: {\n            type: 'integer'\n          },\n          jobInput: {\n            shape: 'S5'\n          },\n          jobOutput: {\n            shape: 'S9'\n          },\n          roleArn: {},\n          batchInferenceJobConfig: {\n            shape: 'Sb'\n          },\n          tags: {\n            shape: 'Sf'\n          },\n          batchInferenceJobMode: {},\n          themeGenerationConfig: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          batchInferenceJobArn: {}\n        }\n      }\n    },\n    CreateBatchSegmentJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'jobName',\n          'solutionVersionArn',\n          'jobInput',\n          'jobOutput',\n          'roleArn'\n        ],\n        members: {\n          jobName: {},\n          solutionVersionArn: {},\n          filterArn: {},\n          numResults: {\n            type: 'integer'\n          },\n          jobInput: {\n            shape: 'Sp'\n          },\n          jobOutput: {\n            shape: 'Sq'\n          },\n          roleArn: {},\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          batchSegmentJobArn: {}\n        }\n      }\n    },\n    CreateCampaign: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'solutionVersionArn'\n        ],\n        members: {\n          name: {},\n          solutionVersionArn: {},\n          minProvisionedTPS: {\n            type: 'integer'\n          },\n          campaignConfig: {\n            shape: 'Su'\n          },\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          campaignArn: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateDataDeletionJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'jobName',\n          'datasetGroupArn',\n          'dataSource',\n          'roleArn'\n        ],\n        members: {\n          jobName: {},\n          datasetGroupArn: {},\n          dataSource: {\n            shape: 'Sy'\n          },\n          roleArn: {},\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          dataDeletionJobArn: {}\n        }\n      }\n    },\n    CreateDataset: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'schemaArn',\n          'datasetGroupArn',\n          'datasetType'\n        ],\n        members: {\n          name: {},\n          schemaArn: {},\n          datasetGroupArn: {},\n          datasetType: {},\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetArn: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateDatasetExportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'jobName',\n          'datasetArn',\n          'roleArn',\n          'jobOutput'\n        ],\n        members: {\n          jobName: {},\n          datasetArn: {},\n          ingestionMode: {},\n          roleArn: {},\n          jobOutput: {\n            shape: 'S15'\n          },\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetExportJobArn: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateDatasetGroup: {\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {},\n          roleArn: {},\n          kmsKeyArn: {},\n          domain: {},\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetGroupArn: {},\n          domain: {}\n        }\n      }\n    },\n    CreateDatasetImportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'jobName',\n          'datasetArn',\n          'dataSource',\n          'roleArn'\n        ],\n        members: {\n          jobName: {},\n          datasetArn: {},\n          dataSource: {\n            shape: 'Sy'\n          },\n          roleArn: {},\n          tags: {\n            shape: 'Sf'\n          },\n          importMode: {},\n          publishAttributionMetricsToS3: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetImportJobArn: {}\n        }\n      }\n    },\n    CreateEventTracker: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'datasetGroupArn'\n        ],\n        members: {\n          name: {},\n          datasetGroupArn: {},\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          eventTrackerArn: {},\n          trackingId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateFilter: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'datasetGroupArn',\n          'filterExpression'\n        ],\n        members: {\n          name: {},\n          datasetGroupArn: {},\n          filterExpression: {\n            shape: 'S1h'\n          },\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          filterArn: {}\n        }\n      }\n    },\n    CreateMetricAttribution: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'datasetGroupArn',\n          'metrics',\n          'metricsOutputConfig'\n        ],\n        members: {\n          name: {},\n          datasetGroupArn: {},\n          metrics: {\n            shape: 'S1k'\n          },\n          metricsOutputConfig: {\n            shape: 'S1p'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          metricAttributionArn: {}\n        }\n      }\n    },\n    CreateRecommender: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'datasetGroupArn',\n          'recipeArn'\n        ],\n        members: {\n          name: {},\n          datasetGroupArn: {},\n          recipeArn: {},\n          recommenderConfig: {\n            shape: 'S1s'\n          },\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          recommenderArn: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateSchema: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'schema'\n        ],\n        members: {\n          name: {},\n          schema: {},\n          domain: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          schemaArn: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateSolution: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'datasetGroupArn'\n        ],\n        members: {\n          name: {},\n          performHPO: {\n            type: 'boolean'\n          },\n          performAutoML: {\n            type: 'boolean'\n          },\n          performAutoTraining: {\n            type: 'boolean'\n          },\n          recipeArn: {},\n          datasetGroupArn: {},\n          eventType: {},\n          solutionConfig: {\n            shape: 'S23'\n          },\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          solutionArn: {}\n        }\n      }\n    },\n    CreateSolutionVersion: {\n      input: {\n        type: 'structure',\n        required: [\n          'solutionArn'\n        ],\n        members: {\n          name: {},\n          solutionArn: {},\n          trainingMode: {},\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          solutionVersionArn: {}\n        }\n      }\n    },\n    DeleteCampaign: {\n      input: {\n        type: 'structure',\n        required: [\n          'campaignArn'\n        ],\n        members: {\n          campaignArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteDataset: {\n      input: {\n        type: 'structure',\n        required: [\n          'datasetArn'\n        ],\n        members: {\n          datasetArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteDatasetGroup: {\n      input: {\n        type: 'structure',\n        required: [\n          'datasetGroupArn'\n        ],\n        members: {\n          datasetGroupArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteEventTracker: {\n      input: {\n        type: 'structure',\n        required: [\n          'eventTrackerArn'\n        ],\n        members: {\n          eventTrackerArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteFilter: {\n      input: {\n        type: 'structure',\n        required: [\n          'filterArn'\n        ],\n        members: {\n          filterArn: {}\n        }\n      }\n    },\n    DeleteMetricAttribution: {\n      input: {\n        type: 'structure',\n        required: [\n          'metricAttributionArn'\n        ],\n        members: {\n          metricAttributionArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteRecommender: {\n      input: {\n        type: 'structure',\n        required: [\n          'recommenderArn'\n        ],\n        members: {\n          recommenderArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteSchema: {\n      input: {\n        type: 'structure',\n        required: [\n          'schemaArn'\n        ],\n        members: {\n          schemaArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteSolution: {\n      input: {\n        type: 'structure',\n        required: [\n          'solutionArn'\n        ],\n        members: {\n          solutionArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeAlgorithm: {\n      input: {\n        type: 'structure',\n        required: [\n          'algorithmArn'\n        ],\n        members: {\n          algorithmArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          algorithm: {\n            type: 'structure',\n            members: {\n              name: {},\n              algorithmArn: {},\n              algorithmImage: {\n                type: 'structure',\n                required: [\n                  'dockerURI'\n                ],\n                members: {\n                  name: {},\n                  dockerURI: {}\n                }\n              },\n              defaultHyperParameters: {\n                shape: 'Sc'\n              },\n              defaultHyperParameterRanges: {\n                type: 'structure',\n                members: {\n                  integerHyperParameterRanges: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      members: {\n                        name: {},\n                        minValue: {\n                          type: 'integer'\n                        },\n                        maxValue: {\n                          type: 'integer'\n                        },\n                        isTunable: {\n                          type: 'boolean'\n                        }\n                      }\n                    }\n                  },\n                  continuousHyperParameterRanges: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      members: {\n                        name: {},\n                        minValue: {\n                          type: 'double'\n                        },\n                        maxValue: {\n                          type: 'double'\n                        },\n                        isTunable: {\n                          type: 'boolean'\n                        }\n                      }\n                    }\n                  },\n                  categoricalHyperParameterRanges: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      members: {\n                        name: {},\n                        values: {\n                          shape: 'S2m'\n                        },\n                        isTunable: {\n                          type: 'boolean'\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              defaultResourceConfig: {\n                type: 'map',\n                key: {},\n                value: {}\n              },\n              trainingInputMode: {},\n              roleArn: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeBatchInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'batchInferenceJobArn'\n        ],\n        members: {\n          batchInferenceJobArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          batchInferenceJob: {\n            type: 'structure',\n            members: {\n              jobName: {},\n              batchInferenceJobArn: {},\n              filterArn: {},\n              failureReason: {},\n              solutionVersionArn: {},\n              numResults: {\n                type: 'integer'\n              },\n              jobInput: {\n                shape: 'S5'\n              },\n              jobOutput: {\n                shape: 'S9'\n              },\n              batchInferenceJobConfig: {\n                shape: 'Sb'\n              },\n              roleArn: {},\n              batchInferenceJobMode: {},\n              themeGenerationConfig: {\n                shape: 'Sk'\n              },\n              status: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeBatchSegmentJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'batchSegmentJobArn'\n        ],\n        members: {\n          batchSegmentJobArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          batchSegmentJob: {\n            type: 'structure',\n            members: {\n              jobName: {},\n              batchSegmentJobArn: {},\n              filterArn: {},\n              failureReason: {},\n              solutionVersionArn: {},\n              numResults: {\n                type: 'integer'\n              },\n              jobInput: {\n                shape: 'Sp'\n              },\n              jobOutput: {\n                shape: 'Sq'\n              },\n              roleArn: {},\n              status: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeCampaign: {\n      input: {\n        type: 'structure',\n        required: [\n          'campaignArn'\n        ],\n        members: {\n          campaignArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          campaign: {\n            type: 'structure',\n            members: {\n              name: {},\n              campaignArn: {},\n              solutionVersionArn: {},\n              minProvisionedTPS: {\n                type: 'integer'\n              },\n              campaignConfig: {\n                shape: 'Su'\n              },\n              status: {},\n              failureReason: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              latestCampaignUpdate: {\n                type: 'structure',\n                members: {\n                  solutionVersionArn: {},\n                  minProvisionedTPS: {\n                    type: 'integer'\n                  },\n                  campaignConfig: {\n                    shape: 'Su'\n                  },\n                  status: {},\n                  failureReason: {},\n                  creationDateTime: {\n                    type: 'timestamp'\n                  },\n                  lastUpdatedDateTime: {\n                    type: 'timestamp'\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeDataDeletionJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'dataDeletionJobArn'\n        ],\n        members: {\n          dataDeletionJobArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          dataDeletionJob: {\n            type: 'structure',\n            members: {\n              jobName: {},\n              dataDeletionJobArn: {},\n              datasetGroupArn: {},\n              dataSource: {\n                shape: 'Sy'\n              },\n              roleArn: {},\n              status: {},\n              numDeleted: {\n                type: 'integer'\n              },\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              failureReason: {}\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeDataset: {\n      input: {\n        type: 'structure',\n        required: [\n          'datasetArn'\n        ],\n        members: {\n          datasetArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          dataset: {\n            type: 'structure',\n            members: {\n              name: {},\n              datasetArn: {},\n              datasetGroupArn: {},\n              datasetType: {},\n              schemaArn: {},\n              status: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              latestDatasetUpdate: {\n                type: 'structure',\n                members: {\n                  schemaArn: {},\n                  status: {},\n                  failureReason: {},\n                  creationDateTime: {\n                    type: 'timestamp'\n                  },\n                  lastUpdatedDateTime: {\n                    type: 'timestamp'\n                  }\n                }\n              },\n              trackingId: {}\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeDatasetExportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'datasetExportJobArn'\n        ],\n        members: {\n          datasetExportJobArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetExportJob: {\n            type: 'structure',\n            members: {\n              jobName: {},\n              datasetExportJobArn: {},\n              datasetArn: {},\n              ingestionMode: {},\n              roleArn: {},\n              status: {},\n              jobOutput: {\n                shape: 'S15'\n              },\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              failureReason: {}\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeDatasetGroup: {\n      input: {\n        type: 'structure',\n        required: [\n          'datasetGroupArn'\n        ],\n        members: {\n          datasetGroupArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetGroup: {\n            type: 'structure',\n            members: {\n              name: {},\n              datasetGroupArn: {},\n              status: {},\n              roleArn: {},\n              kmsKeyArn: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              failureReason: {},\n              domain: {}\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeDatasetImportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'datasetImportJobArn'\n        ],\n        members: {\n          datasetImportJobArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetImportJob: {\n            type: 'structure',\n            members: {\n              jobName: {},\n              datasetImportJobArn: {},\n              datasetArn: {},\n              dataSource: {\n                shape: 'Sy'\n              },\n              roleArn: {},\n              status: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              failureReason: {},\n              importMode: {},\n              publishAttributionMetricsToS3: {\n                type: 'boolean'\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeEventTracker: {\n      input: {\n        type: 'structure',\n        required: [\n          'eventTrackerArn'\n        ],\n        members: {\n          eventTrackerArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          eventTracker: {\n            type: 'structure',\n            members: {\n              name: {},\n              eventTrackerArn: {},\n              accountId: {},\n              trackingId: {},\n              datasetGroupArn: {},\n              status: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeFeatureTransformation: {\n      input: {\n        type: 'structure',\n        required: [\n          'featureTransformationArn'\n        ],\n        members: {\n          featureTransformationArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          featureTransformation: {\n            type: 'structure',\n            members: {\n              name: {},\n              featureTransformationArn: {},\n              defaultParameters: {\n                type: 'map',\n                key: {},\n                value: {}\n              },\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              status: {}\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeFilter: {\n      input: {\n        type: 'structure',\n        required: [\n          'filterArn'\n        ],\n        members: {\n          filterArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          filter: {\n            type: 'structure',\n            members: {\n              name: {},\n              filterArn: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              datasetGroupArn: {},\n              failureReason: {},\n              filterExpression: {\n                shape: 'S1h'\n              },\n              status: {}\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeMetricAttribution: {\n      input: {\n        type: 'structure',\n        required: [\n          'metricAttributionArn'\n        ],\n        members: {\n          metricAttributionArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          metricAttribution: {\n            type: 'structure',\n            members: {\n              name: {},\n              metricAttributionArn: {},\n              datasetGroupArn: {},\n              metricsOutputConfig: {\n                shape: 'S1p'\n              },\n              status: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              failureReason: {}\n            }\n          }\n        }\n      }\n    },\n    DescribeRecipe: {\n      input: {\n        type: 'structure',\n        required: [\n          'recipeArn'\n        ],\n        members: {\n          recipeArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          recipe: {\n            type: 'structure',\n            members: {\n              name: {},\n              recipeArn: {},\n              algorithmArn: {},\n              featureTransformationArn: {},\n              status: {},\n              description: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              recipeType: {},\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeRecommender: {\n      input: {\n        type: 'structure',\n        required: [\n          'recommenderArn'\n        ],\n        members: {\n          recommenderArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          recommender: {\n            type: 'structure',\n            members: {\n              recommenderArn: {},\n              datasetGroupArn: {},\n              name: {},\n              recipeArn: {},\n              recommenderConfig: {\n                shape: 'S1s'\n              },\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              status: {},\n              failureReason: {},\n              latestRecommenderUpdate: {\n                type: 'structure',\n                members: {\n                  recommenderConfig: {\n                    shape: 'S1s'\n                  },\n                  creationDateTime: {\n                    type: 'timestamp'\n                  },\n                  lastUpdatedDateTime: {\n                    type: 'timestamp'\n                  },\n                  status: {},\n                  failureReason: {}\n                }\n              },\n              modelMetrics: {\n                shape: 'S55'\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeSchema: {\n      input: {\n        type: 'structure',\n        required: [\n          'schemaArn'\n        ],\n        members: {\n          schemaArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          schema: {\n            type: 'structure',\n            members: {\n              name: {},\n              schemaArn: {},\n              schema: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              domain: {}\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeSolution: {\n      input: {\n        type: 'structure',\n        required: [\n          'solutionArn'\n        ],\n        members: {\n          solutionArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          solution: {\n            type: 'structure',\n            members: {\n              name: {},\n              solutionArn: {},\n              performHPO: {\n                type: 'boolean'\n              },\n              performAutoML: {\n                type: 'boolean'\n              },\n              performAutoTraining: {\n                type: 'boolean'\n              },\n              recipeArn: {},\n              datasetGroupArn: {},\n              eventType: {},\n              solutionConfig: {\n                shape: 'S23'\n              },\n              autoMLResult: {\n                type: 'structure',\n                members: {\n                  bestRecipeArn: {}\n                }\n              },\n              status: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              latestSolutionVersion: {\n                shape: 'S5f'\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeSolutionVersion: {\n      input: {\n        type: 'structure',\n        required: [\n          'solutionVersionArn'\n        ],\n        members: {\n          solutionVersionArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          solutionVersion: {\n            type: 'structure',\n            members: {\n              name: {},\n              solutionVersionArn: {},\n              solutionArn: {},\n              performHPO: {\n                type: 'boolean'\n              },\n              performAutoML: {\n                type: 'boolean'\n              },\n              recipeArn: {},\n              eventType: {},\n              datasetGroupArn: {},\n              solutionConfig: {\n                shape: 'S23'\n              },\n              trainingHours: {\n                type: 'double'\n              },\n              trainingMode: {},\n              tunedHPOParams: {\n                type: 'structure',\n                members: {\n                  algorithmHyperParameters: {\n                    shape: 'Sc'\n                  }\n                }\n              },\n              status: {},\n              failureReason: {},\n              creationDateTime: {\n                type: 'timestamp'\n              },\n              lastUpdatedDateTime: {\n                type: 'timestamp'\n              },\n              trainingType: {}\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetSolutionMetrics: {\n      input: {\n        type: 'structure',\n        required: [\n          'solutionVersionArn'\n        ],\n        members: {\n          solutionVersionArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          solutionVersionArn: {},\n          metrics: {\n            shape: 'S55'\n          }\n        }\n      }\n    },\n    ListBatchInferenceJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          solutionVersionArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          batchInferenceJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                batchInferenceJobArn: {},\n                jobName: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                failureReason: {},\n                solutionVersionArn: {},\n                batchInferenceJobMode: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListBatchSegmentJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          solutionVersionArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          batchSegmentJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                batchSegmentJobArn: {},\n                jobName: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                failureReason: {},\n                solutionVersionArn: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListCampaigns: {\n      input: {\n        type: 'structure',\n        members: {\n          solutionArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          campaigns: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                campaignArn: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                failureReason: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListDataDeletionJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          datasetGroupArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          dataDeletionJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                dataDeletionJobArn: {},\n                datasetGroupArn: {},\n                jobName: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                failureReason: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListDatasetExportJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          datasetArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetExportJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                datasetExportJobArn: {},\n                jobName: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                failureReason: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListDatasetGroups: {\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetGroups: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                datasetGroupArn: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                failureReason: {},\n                domain: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListDatasetImportJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          datasetArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetImportJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                datasetImportJobArn: {},\n                jobName: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                failureReason: {},\n                importMode: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListDatasets: {\n      input: {\n        type: 'structure',\n        members: {\n          datasetGroupArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasets: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                datasetArn: {},\n                datasetType: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListEventTrackers: {\n      input: {\n        type: 'structure',\n        members: {\n          datasetGroupArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          eventTrackers: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                eventTrackerArn: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListFilters: {\n      input: {\n        type: 'structure',\n        members: {\n          datasetGroupArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                filterArn: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                datasetGroupArn: {},\n                failureReason: {},\n                status: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListMetricAttributionMetrics: {\n      input: {\n        type: 'structure',\n        members: {\n          metricAttributionArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          metrics: {\n            shape: 'S1k'\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListMetricAttributions: {\n      input: {\n        type: 'structure',\n        members: {\n          datasetGroupArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          metricAttributions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                metricAttributionArn: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                failureReason: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListRecipes: {\n      input: {\n        type: 'structure',\n        members: {\n          recipeProvider: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          },\n          domain: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          recipes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                recipeArn: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                domain: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListRecommenders: {\n      input: {\n        type: 'structure',\n        members: {\n          datasetGroupArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          recommenders: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                recommenderArn: {},\n                datasetGroupArn: {},\n                recipeArn: {},\n                recommenderConfig: {\n                  shape: 'S1s'\n                },\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListSchemas: {\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          schemas: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                schemaArn: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                domain: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListSolutionVersions: {\n      input: {\n        type: 'structure',\n        members: {\n          solutionArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          solutionVersions: {\n            type: 'list',\n            member: {\n              shape: 'S5f'\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListSolutions: {\n      input: {\n        type: 'structure',\n        members: {\n          datasetGroupArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          solutions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                solutionArn: {},\n                status: {},\n                creationDateTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedDateTime: {\n                  type: 'timestamp'\n                },\n                recipeArn: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      }\n    },\n    StartRecommender: {\n      input: {\n        type: 'structure',\n        required: [\n          'recommenderArn'\n        ],\n        members: {\n          recommenderArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          recommenderArn: {}\n        }\n      },\n      idempotent: true\n    },\n    StopRecommender: {\n      input: {\n        type: 'structure',\n        required: [\n          'recommenderArn'\n        ],\n        members: {\n          recommenderArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          recommenderArn: {}\n        }\n      },\n      idempotent: true\n    },\n    StopSolutionVersionCreation: {\n      input: {\n        type: 'structure',\n        required: [\n          'solutionVersionArn'\n        ],\n        members: {\n          solutionVersionArn: {}\n        }\n      },\n      idempotent: true\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {},\n          tags: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {},\n          tagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateCampaign: {\n      input: {\n        type: 'structure',\n        required: [\n          'campaignArn'\n        ],\n        members: {\n          campaignArn: {},\n          solutionVersionArn: {},\n          minProvisionedTPS: {\n            type: 'integer'\n          },\n          campaignConfig: {\n            shape: 'Su'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          campaignArn: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateDataset: {\n      input: {\n        type: 'structure',\n        required: [\n          'datasetArn',\n          'schemaArn'\n        ],\n        members: {\n          datasetArn: {},\n          schemaArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          datasetArn: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateMetricAttribution: {\n      input: {\n        type: 'structure',\n        members: {\n          addMetrics: {\n            shape: 'S1k'\n          },\n          removeMetrics: {\n            type: 'list',\n            member: {}\n          },\n          metricsOutputConfig: {\n            shape: 'S1p'\n          },\n          metricAttributionArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          metricAttributionArn: {}\n        }\n      }\n    },\n    UpdateRecommender: {\n      input: {\n        type: 'structure',\n        required: [\n          'recommenderArn',\n          'recommenderConfig'\n        ],\n        members: {\n          recommenderArn: {},\n          recommenderConfig: {\n            shape: 'S1s'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          recommenderArn: {}\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'structure',\n      required: [\n        's3DataSource'\n      ],\n      members: {\n        s3DataSource: {\n          shape: 'S6'\n        }\n      }\n    },\n    S6: {\n      type: 'structure',\n      required: [\n        'path'\n      ],\n      members: {\n        path: {},\n        kmsKeyArn: {}\n      }\n    },\n    S9: {\n      type: 'structure',\n      required: [\n        's3DataDestination'\n      ],\n      members: {\n        s3DataDestination: {\n          shape: 'S6'\n        }\n      }\n    },\n    Sb: {\n      type: 'structure',\n      members: {\n        itemExplorationConfig: {\n          shape: 'Sc'\n        }\n      }\n    },\n    Sc: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sf: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'tagKey',\n          'tagValue'\n        ],\n        members: {\n          tagKey: {},\n          tagValue: {}\n        }\n      }\n    },\n    Sk: {\n      type: 'structure',\n      required: [\n        'fieldsForThemeGeneration'\n      ],\n      members: {\n        fieldsForThemeGeneration: {\n          type: 'structure',\n          required: [\n            'itemName'\n          ],\n          members: {\n            itemName: {}\n          }\n        }\n      }\n    },\n    Sp: {\n      type: 'structure',\n      required: [\n        's3DataSource'\n      ],\n      members: {\n        s3DataSource: {\n          shape: 'S6'\n        }\n      }\n    },\n    Sq: {\n      type: 'structure',\n      required: [\n        's3DataDestination'\n      ],\n      members: {\n        s3DataDestination: {\n          shape: 'S6'\n        }\n      }\n    },\n    Su: {\n      type: 'structure',\n      members: {\n        itemExplorationConfig: {\n          shape: 'Sc'\n        },\n        enableMetadataWithRecommendations: {\n          type: 'boolean'\n        },\n        syncWithLatestSolutionVersion: {\n          type: 'boolean'\n        }\n      }\n    },\n    Sy: {\n      type: 'structure',\n      members: {\n        dataLocation: {}\n      }\n    },\n    S15: {\n      type: 'structure',\n      required: [\n        's3DataDestination'\n      ],\n      members: {\n        s3DataDestination: {\n          shape: 'S6'\n        }\n      }\n    },\n    S1h: {\n      type: 'string',\n      sensitive: true\n    },\n    S1k: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'eventType',\n          'metricName',\n          'expression'\n        ],\n        members: {\n          eventType: {},\n          metricName: {},\n          expression: {}\n        }\n      }\n    },\n    S1p: {\n      type: 'structure',\n      required: [\n        'roleArn'\n      ],\n      members: {\n        s3DataDestination: {\n          shape: 'S6'\n        },\n        roleArn: {}\n      }\n    },\n    S1s: {\n      type: 'structure',\n      members: {\n        itemExplorationConfig: {\n          shape: 'Sc'\n        },\n        minRecommendationRequestsPerSecond: {\n          type: 'integer'\n        },\n        trainingDataConfig: {\n          shape: 'S1t'\n        },\n        enableMetadataWithRecommendations: {\n          type: 'boolean'\n        }\n      }\n    },\n    S1t: {\n      type: 'structure',\n      members: {\n        excludedDatasetColumns: {\n          type: 'map',\n          key: {},\n          value: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    S23: {\n      type: 'structure',\n      members: {\n        eventValueThreshold: {},\n        hpoConfig: {\n          type: 'structure',\n          members: {\n            hpoObjective: {\n              type: 'structure',\n              members: {\n                type: {},\n                metricName: {},\n                metricRegex: {}\n              }\n            },\n            hpoResourceConfig: {\n              type: 'structure',\n              members: {\n                maxNumberOfTrainingJobs: {},\n                maxParallelTrainingJobs: {}\n              }\n            },\n            algorithmHyperParameterRanges: {\n              type: 'structure',\n              members: {\n                integerHyperParameterRanges: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      name: {},\n                      minValue: {\n                        type: 'integer'\n                      },\n                      maxValue: {\n                        type: 'integer'\n                      }\n                    }\n                  }\n                },\n                continuousHyperParameterRanges: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      name: {},\n                      minValue: {\n                        type: 'double'\n                      },\n                      maxValue: {\n                        type: 'double'\n                      }\n                    }\n                  }\n                },\n                categoricalHyperParameterRanges: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      name: {},\n                      values: {\n                        shape: 'S2m'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        algorithmHyperParameters: {\n          shape: 'Sc'\n        },\n        featureTransformationParameters: {\n          type: 'map',\n          key: {},\n          value: {}\n        },\n        autoMLConfig: {\n          type: 'structure',\n          members: {\n            metricName: {},\n            recipeList: {\n              type: 'list',\n              member: {}\n            }\n          }\n        },\n        optimizationObjective: {\n          type: 'structure',\n          members: {\n            itemAttribute: {},\n            objectiveSensitivity: {}\n          }\n        },\n        trainingDataConfig: {\n          shape: 'S1t'\n        },\n        autoTrainingConfig: {\n          type: 'structure',\n          members: {\n            schedulingExpression: {}\n          }\n        }\n      }\n    },\n    S2m: {\n      type: 'list',\n      member: {}\n    },\n    S55: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'double'\n      }\n    },\n    S5f: {\n      type: 'structure',\n      members: {\n        solutionVersionArn: {},\n        status: {},\n        trainingMode: {},\n        trainingType: {},\n        creationDateTime: {\n          type: 'timestamp'\n        },\n        lastUpdatedDateTime: {\n          type: 'timestamp'\n        },\n        failureReason: {}\n      }\n    }\n  }\n}"]}