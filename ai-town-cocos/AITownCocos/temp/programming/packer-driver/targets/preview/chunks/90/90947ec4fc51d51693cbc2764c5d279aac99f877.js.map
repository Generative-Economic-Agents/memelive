{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/forInRight.js"],"names":["forInRight","object","iteratee","baseForRight","castFunction","keysIn"],"mappings":";;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,UAAT,CAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;AACpC,WAAOD,MAAM,IAAI,IAAV,GACHA,MADG,GAEHE,YAAY,CAACF,MAAD,EAASG,YAAY,CAACF,QAAD,CAArB,EAAiCG,MAAjC,CAFhB;AAGD;;;;AAlCMF,MAAAA,Y;;AACAC,MAAAA,Y;;AACAC,MAAAA,M;;;yBAkCQL,U","sourcesContent":["import baseForRight from './_baseForRight.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.forIn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forInRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n */\nfunction forInRight(object, iteratee) {\n  return object == null\n    ? object\n    : baseForRight(object, castFunction(iteratee), keysIn);\n}\n\nexport default forInRight;\n"]}