{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/elastic-inference-2017-07-25.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","DescribeAcceleratorOfferings","http","requestUri","input","type","required","members","locationType","acceleratorTypes","member","output","acceleratorTypeOfferings","acceleratorType","location","DescribeAcceleratorTypes","method","acceleratorTypeName","memoryInfo","sizeInMiB","throughputInfo","key","value","DescribeAccelerators","acceleratorIds","filters","name","values","maxResults","nextToken","acceleratorSet","acceleratorHealth","status","acceleratorId","availabilityZone","attachedResource","ListTagsForResource","resourceArn","locationName","tags","shape","TagResource","UntagResource","tagKeys","shapes","S13"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2017-07-25',\n    endpointPrefix: 'api.elastic-inference',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'Amazon Elastic Inference',\n    serviceFullName: 'Amazon Elastic  Inference',\n    serviceId: 'Elastic Inference',\n    signatureVersion: 'v4',\n    signingName: 'elastic-inference',\n    uid: 'elastic-inference-2017-07-25'\n  },\n  operations: {\n    DescribeAcceleratorOfferings: {\n      http: {\n        requestUri: '/describe-accelerator-offerings'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'locationType'\n        ],\n        members: {\n          locationType: {},\n          acceleratorTypes: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          acceleratorTypeOfferings: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                acceleratorType: {},\n                locationType: {},\n                location: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeAcceleratorTypes: {\n      http: {\n        method: 'GET',\n        requestUri: '/describe-accelerator-types'\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          acceleratorTypes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                acceleratorTypeName: {},\n                memoryInfo: {\n                  type: 'structure',\n                  members: {\n                    sizeInMiB: {\n                      type: 'integer'\n                    }\n                  }\n                },\n                throughputInfo: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      key: {},\n                      value: {\n                        type: 'integer'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeAccelerators: {\n      http: {\n        requestUri: '/describe-accelerators'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          acceleratorIds: {\n            type: 'list',\n            member: {}\n          },\n          filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                values: {\n                  type: 'list',\n                  member: {}\n                }\n              }\n            }\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          acceleratorSet: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                acceleratorHealth: {\n                  type: 'structure',\n                  members: {\n                    status: {}\n                  }\n                },\n                acceleratorType: {},\n                acceleratorId: {},\n                availabilityZone: {},\n                attachedResource: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S13'\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S13'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    }\n  },\n  shapes: {\n    S13: {\n      type: 'map',\n      key: {},\n      value: {}\n    }\n  }\n}"]}