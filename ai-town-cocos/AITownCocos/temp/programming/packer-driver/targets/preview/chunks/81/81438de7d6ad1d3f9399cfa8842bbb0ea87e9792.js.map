{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/acm-2015-12-08.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","AddTagsToCertificate","input","type","required","members","CertificateArn","Tags","shape","DeleteCertificate","DescribeCertificate","output","Certificate","DomainName","SubjectAlternativeNames","DomainValidationOptions","Serial","Subject","Issuer","CreatedAt","IssuedAt","ImportedAt","Status","RevokedAt","RevocationReason","NotBefore","NotAfter","KeyAlgorithm","SignatureAlgorithm","InUseBy","member","FailureReason","Type","RenewalSummary","RenewalStatus","RenewalStatusReason","UpdatedAt","KeyUsages","Name","ExtendedKeyUsages","OID","CertificateAuthorityArn","RenewalEligibility","Options","ExportCertificate","Passphrase","sensitive","CertificateChain","PrivateKey","GetAccountConfiguration","ExpiryEvents","GetCertificate","ImportCertificate","ListCertificates","CertificateStatuses","Includes","extendedKeyUsage","keyUsage","keyTypes","NextToken","MaxItems","SortBy","SortOrder","CertificateSummaryList","SubjectAlternativeNameSummaries","HasAdditionalSubjectAlternativeNames","InUse","Exported","ListTagsForCertificate","PutAccountConfiguration","IdempotencyToken","RemoveTagsFromCertificate","RenewCertificate","RequestCertificate","ValidationMethod","ValidationDomain","ResendValidationEmail","Domain","UpdateCertificateOptions","shapes","S3","Key","Value","Sc","Sd","ValidationEmails","ValidationStatus","ResourceRecord","S11","CertificateTransparencyLoggingPreference","S1a","DaysBeforeExpiry"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2015-12-08',\n    endpointPrefix: 'acm',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceAbbreviation: 'ACM',\n    serviceFullName: 'AWS Certificate Manager',\n    serviceId: 'ACM',\n    signatureVersion: 'v4',\n    targetPrefix: 'CertificateManager',\n    uid: 'acm-2015-12-08'\n  },\n  operations: {\n    AddTagsToCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateArn',\n          'Tags'\n        ],\n        members: {\n          CertificateArn: {},\n          Tags: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    DeleteCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateArn'\n        ],\n        members: {\n          CertificateArn: {}\n        }\n      }\n    },\n    DescribeCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateArn'\n        ],\n        members: {\n          CertificateArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Certificate: {\n            type: 'structure',\n            members: {\n              CertificateArn: {},\n              DomainName: {},\n              SubjectAlternativeNames: {\n                shape: 'Sc'\n              },\n              DomainValidationOptions: {\n                shape: 'Sd'\n              },\n              Serial: {},\n              Subject: {},\n              Issuer: {},\n              CreatedAt: {\n                type: 'timestamp'\n              },\n              IssuedAt: {\n                type: 'timestamp'\n              },\n              ImportedAt: {\n                type: 'timestamp'\n              },\n              Status: {},\n              RevokedAt: {\n                type: 'timestamp'\n              },\n              RevocationReason: {},\n              NotBefore: {\n                type: 'timestamp'\n              },\n              NotAfter: {\n                type: 'timestamp'\n              },\n              KeyAlgorithm: {},\n              SignatureAlgorithm: {},\n              InUseBy: {\n                type: 'list',\n                member: {}\n              },\n              FailureReason: {},\n              Type: {},\n              RenewalSummary: {\n                type: 'structure',\n                required: [\n                  'RenewalStatus',\n                  'DomainValidationOptions',\n                  'UpdatedAt'\n                ],\n                members: {\n                  RenewalStatus: {},\n                  DomainValidationOptions: {\n                    shape: 'Sd'\n                  },\n                  RenewalStatusReason: {},\n                  UpdatedAt: {\n                    type: 'timestamp'\n                  }\n                }\n              },\n              KeyUsages: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    Name: {}\n                  }\n                }\n              },\n              ExtendedKeyUsages: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    Name: {},\n                    OID: {}\n                  }\n                }\n              },\n              CertificateAuthorityArn: {},\n              RenewalEligibility: {},\n              Options: {\n                shape: 'S11'\n              }\n            }\n          }\n        }\n      }\n    },\n    ExportCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateArn',\n          'Passphrase'\n        ],\n        members: {\n          CertificateArn: {},\n          Passphrase: {\n            type: 'blob',\n            sensitive: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Certificate: {},\n          CertificateChain: {},\n          PrivateKey: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      }\n    },\n    GetAccountConfiguration: {\n      output: {\n        type: 'structure',\n        members: {\n          ExpiryEvents: {\n            shape: 'S1a'\n          }\n        }\n      }\n    },\n    GetCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateArn'\n        ],\n        members: {\n          CertificateArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Certificate: {},\n          CertificateChain: {}\n        }\n      }\n    },\n    ImportCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'Certificate',\n          'PrivateKey'\n        ],\n        members: {\n          CertificateArn: {},\n          Certificate: {\n            type: 'blob'\n          },\n          PrivateKey: {\n            type: 'blob',\n            sensitive: true\n          },\n          CertificateChain: {\n            type: 'blob'\n          },\n          Tags: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CertificateArn: {}\n        }\n      }\n    },\n    ListCertificates: {\n      input: {\n        type: 'structure',\n        members: {\n          CertificateStatuses: {\n            type: 'list',\n            member: {}\n          },\n          Includes: {\n            type: 'structure',\n            members: {\n              extendedKeyUsage: {\n                type: 'list',\n                member: {}\n              },\n              keyUsage: {\n                type: 'list',\n                member: {}\n              },\n              keyTypes: {\n                type: 'list',\n                member: {}\n              }\n            }\n          },\n          NextToken: {},\n          MaxItems: {\n            type: 'integer'\n          },\n          SortBy: {},\n          SortOrder: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          CertificateSummaryList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CertificateArn: {},\n                DomainName: {},\n                SubjectAlternativeNameSummaries: {\n                  shape: 'Sc'\n                },\n                HasAdditionalSubjectAlternativeNames: {\n                  type: 'boolean'\n                },\n                Status: {},\n                Type: {},\n                KeyAlgorithm: {},\n                KeyUsages: {\n                  type: 'list',\n                  member: {}\n                },\n                ExtendedKeyUsages: {\n                  type: 'list',\n                  member: {}\n                },\n                InUse: {\n                  type: 'boolean'\n                },\n                Exported: {\n                  type: 'boolean'\n                },\n                RenewalEligibility: {},\n                NotBefore: {\n                  type: 'timestamp'\n                },\n                NotAfter: {\n                  type: 'timestamp'\n                },\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                IssuedAt: {\n                  type: 'timestamp'\n                },\n                ImportedAt: {\n                  type: 'timestamp'\n                },\n                RevokedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateArn'\n        ],\n        members: {\n          CertificateArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    PutAccountConfiguration: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdempotencyToken'\n        ],\n        members: {\n          ExpiryEvents: {\n            shape: 'S1a'\n          },\n          IdempotencyToken: {}\n        }\n      }\n    },\n    RemoveTagsFromCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateArn',\n          'Tags'\n        ],\n        members: {\n          CertificateArn: {},\n          Tags: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    RenewCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateArn'\n        ],\n        members: {\n          CertificateArn: {}\n        }\n      }\n    },\n    RequestCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'DomainName'\n        ],\n        members: {\n          DomainName: {},\n          ValidationMethod: {},\n          SubjectAlternativeNames: {\n            shape: 'Sc'\n          },\n          IdempotencyToken: {},\n          DomainValidationOptions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'DomainName',\n                'ValidationDomain'\n              ],\n              members: {\n                DomainName: {},\n                ValidationDomain: {}\n              }\n            }\n          },\n          Options: {\n            shape: 'S11'\n          },\n          CertificateAuthorityArn: {},\n          Tags: {\n            shape: 'S3'\n          },\n          KeyAlgorithm: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          CertificateArn: {}\n        }\n      }\n    },\n    ResendValidationEmail: {\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateArn',\n          'Domain',\n          'ValidationDomain'\n        ],\n        members: {\n          CertificateArn: {},\n          Domain: {},\n          ValidationDomain: {}\n        }\n      }\n    },\n    UpdateCertificateOptions: {\n      input: {\n        type: 'structure',\n        required: [\n          'CertificateArn',\n          'Options'\n        ],\n        members: {\n          CertificateArn: {},\n          Options: {\n            shape: 'S11'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sc: {\n      type: 'list',\n      member: {}\n    },\n    Sd: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'DomainName'\n        ],\n        members: {\n          DomainName: {},\n          ValidationEmails: {\n            type: 'list',\n            member: {}\n          },\n          ValidationDomain: {},\n          ValidationStatus: {},\n          ResourceRecord: {\n            type: 'structure',\n            required: [\n              'Name',\n              'Type',\n              'Value'\n            ],\n            members: {\n              Name: {},\n              Type: {},\n              Value: {}\n            }\n          },\n          ValidationMethod: {}\n        }\n      }\n    },\n    S11: {\n      type: 'structure',\n      members: {\n        CertificateTransparencyLoggingPreference: {}\n      }\n    },\n    S1a: {\n      type: 'structure',\n      members: {\n        DaysBeforeExpiry: {\n          type: 'integer'\n        }\n      }\n    }\n  }\n}"]}