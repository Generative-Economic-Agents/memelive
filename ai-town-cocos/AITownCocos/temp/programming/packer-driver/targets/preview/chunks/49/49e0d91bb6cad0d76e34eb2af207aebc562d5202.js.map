{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/sso-2019-06-10.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","GetRoleCredentials","http","method","requestUri","input","type","required","members","roleName","location","locationName","accountId","accessToken","shape","output","roleCredentials","accessKeyId","secretAccessKey","sensitive","sessionToken","expiration","authtype","ListAccountRoles","nextToken","maxResults","roleList","member","ListAccounts","accountList","accountName","emailAddress","Logout","shapes","S4"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2019-06-10',\n    endpointPrefix: 'portal.sso',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'SSO',\n    serviceFullName: 'AWS Single Sign-On',\n    serviceId: 'SSO',\n    signatureVersion: 'v4',\n    signingName: 'awsssoportal',\n    uid: 'sso-2019-06-10'\n  },\n  operations: {\n    GetRoleCredentials: {\n      http: {\n        method: 'GET',\n        requestUri: '/federation/credentials'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'roleName',\n          'accountId',\n          'accessToken'\n        ],\n        members: {\n          roleName: {\n            location: 'querystring',\n            locationName: 'role_name'\n          },\n          accountId: {\n            location: 'querystring',\n            locationName: 'account_id'\n          },\n          accessToken: {\n            shape: 'S4',\n            location: 'header',\n            locationName: 'x-amz-sso_bearer_token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          roleCredentials: {\n            type: 'structure',\n            members: {\n              accessKeyId: {},\n              secretAccessKey: {\n                type: 'string',\n                sensitive: true\n              },\n              sessionToken: {\n                type: 'string',\n                sensitive: true\n              },\n              expiration: {\n                type: 'long'\n              }\n            }\n          }\n        }\n      },\n      authtype: 'none'\n    },\n    ListAccountRoles: {\n      http: {\n        method: 'GET',\n        requestUri: '/assignment/roles'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accessToken',\n          'accountId'\n        ],\n        members: {\n          nextToken: {\n            location: 'querystring',\n            locationName: 'next_token'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'max_result',\n            type: 'integer'\n          },\n          accessToken: {\n            shape: 'S4',\n            location: 'header',\n            locationName: 'x-amz-sso_bearer_token'\n          },\n          accountId: {\n            location: 'querystring',\n            locationName: 'account_id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          roleList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                roleName: {},\n                accountId: {}\n              }\n            }\n          }\n        }\n      },\n      authtype: 'none'\n    },\n    ListAccounts: {\n      http: {\n        method: 'GET',\n        requestUri: '/assignment/accounts'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accessToken'\n        ],\n        members: {\n          nextToken: {\n            location: 'querystring',\n            locationName: 'next_token'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'max_result',\n            type: 'integer'\n          },\n          accessToken: {\n            shape: 'S4',\n            location: 'header',\n            locationName: 'x-amz-sso_bearer_token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          accountList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                accountId: {},\n                accountName: {},\n                emailAddress: {}\n              }\n            }\n          }\n        }\n      },\n      authtype: 'none'\n    },\n    Logout: {\n      http: {\n        requestUri: '/logout'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accessToken'\n        ],\n        members: {\n          accessToken: {\n            shape: 'S4',\n            location: 'header',\n            locationName: 'x-amz-sso_bearer_token'\n          }\n        }\n      },\n      authtype: 'none'\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'string',\n      sensitive: true\n    }\n  }\n}"]}