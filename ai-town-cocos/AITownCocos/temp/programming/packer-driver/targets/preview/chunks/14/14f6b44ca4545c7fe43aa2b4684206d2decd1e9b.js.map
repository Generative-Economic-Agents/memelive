{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/sqs-2012-11-05.min.json"],"names":["version","metadata","apiVersion","awsQueryCompatible","endpointPrefix","jsonVersion","protocol","protocols","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","AddPermission","input","type","required","members","QueueUrl","Label","AWSAccountIds","member","flattened","Actions","CancelMessageMoveTask","TaskHandle","output","ApproximateNumberOfMessagesMoved","ChangeMessageVisibility","ReceiptHandle","VisibilityTimeout","ChangeMessageVisibilityBatch","Entries","Id","Successful","Failed","shape","CreateQueue","QueueName","Attributes","tags","DeleteMessage","DeleteMessageBatch","DeleteQueue","GetQueueAttributes","AttributeNames","GetQueueUrl","QueueOwnerAWSAccountId","ListDeadLetterSourceQueues","NextToken","MaxResults","queueUrls","ListMessageMoveTasks","SourceArn","Results","Status","DestinationArn","MaxNumberOfMessagesPerSecond","ApproximateNumberOfMessagesToMove","FailureReason","StartedTimestamp","ListQueueTags","Tags","ListQueues","QueueNamePrefix","QueueUrls","PurgeQueue","ReceiveMessage","deprecated","deprecatedMessage","MessageSystemAttributeNames","MessageAttributeNames","MaxNumberOfMessages","WaitTimeSeconds","ReceiveRequestAttemptId","Messages","MessageId","MD5OfBody","Body","key","value","MD5OfMessageAttributes","MessageAttributes","RemovePermission","SendMessage","MessageBody","DelaySeconds","MessageSystemAttributes","MessageDeduplicationId","MessageGroupId","MD5OfMessageBody","MD5OfMessageSystemAttributes","SequenceNumber","SendMessageBatch","SetQueueAttributes","StartMessageMoveTask","TagQueue","UntagQueue","TagKeys","shapes","Sg","SenderFault","Code","Message","Sk","Sm","Sz","S17","S1r","StringValue","BinaryValue","StringListValues","BinaryListValues","DataType","S1u","S1v","S1y"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2012-11-05',\n    awsQueryCompatible: {},\n    endpointPrefix: 'sqs',\n    jsonVersion: '1.0',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceAbbreviation: 'Amazon SQS',\n    serviceFullName: 'Amazon Simple Queue Service',\n    serviceId: 'SQS',\n    signatureVersion: 'v4',\n    targetPrefix: 'AmazonSQS',\n    uid: 'sqs-2012-11-05'\n  },\n  operations: {\n    AddPermission: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'Label',\n          'AWSAccountIds',\n          'Actions'\n        ],\n        members: {\n          QueueUrl: {},\n          Label: {},\n          AWSAccountIds: {\n            type: 'list',\n            member: {},\n            flattened: true\n          },\n          Actions: {\n            type: 'list',\n            member: {},\n            flattened: true\n          }\n        }\n      }\n    },\n    CancelMessageMoveTask: {\n      input: {\n        type: 'structure',\n        required: [\n          'TaskHandle'\n        ],\n        members: {\n          TaskHandle: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ApproximateNumberOfMessagesMoved: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    ChangeMessageVisibility: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'ReceiptHandle',\n          'VisibilityTimeout'\n        ],\n        members: {\n          QueueUrl: {},\n          ReceiptHandle: {},\n          VisibilityTimeout: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    ChangeMessageVisibilityBatch: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'Entries'\n        ],\n        members: {\n          QueueUrl: {},\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Id',\n                'ReceiptHandle'\n              ],\n              members: {\n                Id: {},\n                ReceiptHandle: {},\n                VisibilityTimeout: {\n                  type: 'integer'\n                }\n              }\n            },\n            flattened: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Successful',\n          'Failed'\n        ],\n        members: {\n          Successful: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Id'\n              ],\n              members: {\n                Id: {}\n              }\n            },\n            flattened: true\n          },\n          Failed: {\n            shape: 'Sg'\n          }\n        }\n      }\n    },\n    CreateQueue: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueName'\n        ],\n        members: {\n          QueueName: {},\n          Attributes: {\n            shape: 'Sk'\n          },\n          tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          QueueUrl: {}\n        }\n      }\n    },\n    DeleteMessage: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'ReceiptHandle'\n        ],\n        members: {\n          QueueUrl: {},\n          ReceiptHandle: {}\n        }\n      }\n    },\n    DeleteMessageBatch: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'Entries'\n        ],\n        members: {\n          QueueUrl: {},\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Id',\n                'ReceiptHandle'\n              ],\n              members: {\n                Id: {},\n                ReceiptHandle: {}\n              }\n            },\n            flattened: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Successful',\n          'Failed'\n        ],\n        members: {\n          Successful: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Id'\n              ],\n              members: {\n                Id: {}\n              }\n            },\n            flattened: true\n          },\n          Failed: {\n            shape: 'Sg'\n          }\n        }\n      }\n    },\n    DeleteQueue: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl'\n        ],\n        members: {\n          QueueUrl: {}\n        }\n      }\n    },\n    GetQueueAttributes: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl'\n        ],\n        members: {\n          QueueUrl: {},\n          AttributeNames: {\n            shape: 'Sz'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Attributes: {\n            shape: 'Sk'\n          }\n        }\n      }\n    },\n    GetQueueUrl: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueName'\n        ],\n        members: {\n          QueueName: {},\n          QueueOwnerAWSAccountId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          QueueUrl: {}\n        }\n      }\n    },\n    ListDeadLetterSourceQueues: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl'\n        ],\n        members: {\n          QueueUrl: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'queueUrls'\n        ],\n        members: {\n          queueUrls: {\n            shape: 'S17'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListMessageMoveTasks: {\n      input: {\n        type: 'structure',\n        required: [\n          'SourceArn'\n        ],\n        members: {\n          SourceArn: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Results: {\n            flattened: true,\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                TaskHandle: {},\n                Status: {},\n                SourceArn: {},\n                DestinationArn: {},\n                MaxNumberOfMessagesPerSecond: {\n                  type: 'integer'\n                },\n                ApproximateNumberOfMessagesMoved: {\n                  type: 'long'\n                },\n                ApproximateNumberOfMessagesToMove: {\n                  type: 'long'\n                },\n                FailureReason: {},\n                StartedTimestamp: {\n                  type: 'long'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListQueueTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl'\n        ],\n        members: {\n          QueueUrl: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      }\n    },\n    ListQueues: {\n      input: {\n        type: 'structure',\n        members: {\n          QueueNamePrefix: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          QueueUrls: {\n            shape: 'S17'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    PurgeQueue: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl'\n        ],\n        members: {\n          QueueUrl: {}\n        }\n      }\n    },\n    ReceiveMessage: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl'\n        ],\n        members: {\n          QueueUrl: {},\n          AttributeNames: {\n            shape: 'Sz',\n            deprecated: true,\n            deprecatedMessage: 'AttributeNames has been replaced by MessageSystemAttributeNames'\n          },\n          MessageSystemAttributeNames: {\n            type: 'list',\n            member: {},\n            flattened: true\n          },\n          MessageAttributeNames: {\n            type: 'list',\n            member: {},\n            flattened: true\n          },\n          MaxNumberOfMessages: {\n            type: 'integer'\n          },\n          VisibilityTimeout: {\n            type: 'integer'\n          },\n          WaitTimeSeconds: {\n            type: 'integer'\n          },\n          ReceiveRequestAttemptId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Messages: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                MessageId: {},\n                ReceiptHandle: {},\n                MD5OfBody: {},\n                Body: {},\n                Attributes: {\n                  type: 'map',\n                  key: {},\n                  value: {},\n                  flattened: true\n                },\n                MD5OfMessageAttributes: {},\n                MessageAttributes: {\n                  shape: 'S1r'\n                }\n              }\n            },\n            flattened: true\n          }\n        }\n      }\n    },\n    RemovePermission: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'Label'\n        ],\n        members: {\n          QueueUrl: {},\n          Label: {}\n        }\n      }\n    },\n    SendMessage: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'MessageBody'\n        ],\n        members: {\n          QueueUrl: {},\n          MessageBody: {},\n          DelaySeconds: {\n            type: 'integer'\n          },\n          MessageAttributes: {\n            shape: 'S1r'\n          },\n          MessageSystemAttributes: {\n            shape: 'S1y'\n          },\n          MessageDeduplicationId: {},\n          MessageGroupId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MD5OfMessageBody: {},\n          MD5OfMessageAttributes: {},\n          MD5OfMessageSystemAttributes: {},\n          MessageId: {},\n          SequenceNumber: {}\n        }\n      }\n    },\n    SendMessageBatch: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'Entries'\n        ],\n        members: {\n          QueueUrl: {},\n          Entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Id',\n                'MessageBody'\n              ],\n              members: {\n                Id: {},\n                MessageBody: {},\n                DelaySeconds: {\n                  type: 'integer'\n                },\n                MessageAttributes: {\n                  shape: 'S1r'\n                },\n                MessageSystemAttributes: {\n                  shape: 'S1y'\n                },\n                MessageDeduplicationId: {},\n                MessageGroupId: {}\n              }\n            },\n            flattened: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Successful',\n          'Failed'\n        ],\n        members: {\n          Successful: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Id',\n                'MessageId',\n                'MD5OfMessageBody'\n              ],\n              members: {\n                Id: {},\n                MessageId: {},\n                MD5OfMessageBody: {},\n                MD5OfMessageAttributes: {},\n                MD5OfMessageSystemAttributes: {},\n                SequenceNumber: {}\n              }\n            },\n            flattened: true\n          },\n          Failed: {\n            shape: 'Sg'\n          }\n        }\n      }\n    },\n    SetQueueAttributes: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'Attributes'\n        ],\n        members: {\n          QueueUrl: {},\n          Attributes: {\n            shape: 'Sk'\n          }\n        }\n      }\n    },\n    StartMessageMoveTask: {\n      input: {\n        type: 'structure',\n        required: [\n          'SourceArn'\n        ],\n        members: {\n          SourceArn: {},\n          DestinationArn: {},\n          MaxNumberOfMessagesPerSecond: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          TaskHandle: {}\n        }\n      }\n    },\n    TagQueue: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'Tags'\n        ],\n        members: {\n          QueueUrl: {},\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      }\n    },\n    UntagQueue: {\n      input: {\n        type: 'structure',\n        required: [\n          'QueueUrl',\n          'TagKeys'\n        ],\n        members: {\n          QueueUrl: {},\n          TagKeys: {\n            type: 'list',\n            member: {},\n            flattened: true\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    Sg: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Id',\n          'SenderFault',\n          'Code'\n        ],\n        members: {\n          Id: {},\n          SenderFault: {\n            type: 'boolean'\n          },\n          Code: {},\n          Message: {}\n        }\n      },\n      flattened: true\n    },\n    Sk: {\n      type: 'map',\n      key: {},\n      value: {},\n      flattened: true\n    },\n    Sm: {\n      type: 'map',\n      key: {},\n      value: {},\n      flattened: true\n    },\n    Sz: {\n      type: 'list',\n      member: {},\n      flattened: true\n    },\n    S17: {\n      type: 'list',\n      member: {},\n      flattened: true\n    },\n    S1r: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        required: [\n          'DataType'\n        ],\n        members: {\n          StringValue: {},\n          BinaryValue: {\n            type: 'blob'\n          },\n          StringListValues: {\n            shape: 'S1u',\n            flattened: true\n          },\n          BinaryListValues: {\n            shape: 'S1v',\n            flattened: true\n          },\n          DataType: {}\n        }\n      },\n      flattened: true\n    },\n    S1u: {\n      type: 'list',\n      member: {}\n    },\n    S1v: {\n      type: 'list',\n      member: {\n        type: 'blob'\n      }\n    },\n    S1y: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        required: [\n          'DataType'\n        ],\n        members: {\n          StringValue: {},\n          BinaryValue: {\n            type: 'blob'\n          },\n          StringListValues: {\n            shape: 'S1u',\n            flattened: true\n          },\n          BinaryListValues: {\n            shape: 'S1v',\n            flattened: true\n          },\n          DataType: {}\n        }\n      },\n      flattened: true\n    }\n  }\n}"]}