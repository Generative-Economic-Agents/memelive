{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/bedrock-runtime-2023-09-30.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","Converse","http","requestUri","responseCode","input","type","required","members","modelId","location","locationName","messages","shape","system","inferenceConfig","toolConfig","additionalModelRequestFields","additionalModelResponseFieldPaths","member","output","message","union","stopReason","usage","metrics","latencyMs","additionalModelResponseFields","ConverseStream","stream","messageStart","role","event","contentBlockStart","start","toolUse","toolUseId","name","contentBlockIndex","contentBlockDelta","delta","text","contentBlockStop","messageStop","internalServerException","modelStreamErrorException","validationException","throttlingException","eventstream","payload","InvokeModel","body","contentType","accept","trace","guardrailIdentifier","guardrailVersion","InvokeModelWithResponseStream","chunk","bytes","sensitive","modelTimeoutException","error","httpStatusCode","senderFault","exception","shapes","S3","S4","content","image","toolResult","json","status","S9","format","source","Sg","document","Sl","So","maxTokens","temperature","topP","stopSequences","St","tools","toolSpec","description","inputSchema","toolChoice","auto","any","tool","S17","inputTokens","outputTokens","totalTokens","S1u","fault","S1w","originalStatusCode","originalMessage","S1y","S1z","S21"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2023-09-30',\n    endpointPrefix: 'bedrock-runtime',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon Bedrock Runtime',\n    serviceId: 'Bedrock Runtime',\n    signatureVersion: 'v4',\n    signingName: 'bedrock',\n    uid: 'bedrock-runtime-2023-09-30'\n  },\n  operations: {\n    Converse: {\n      http: {\n        requestUri: '/model/{modelId}/converse',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'modelId',\n          'messages'\n        ],\n        members: {\n          modelId: {\n            location: 'uri',\n            locationName: 'modelId'\n          },\n          messages: {\n            shape: 'S3'\n          },\n          system: {\n            shape: 'Sl'\n          },\n          inferenceConfig: {\n            shape: 'So'\n          },\n          toolConfig: {\n            shape: 'St'\n          },\n          additionalModelRequestFields: {\n            shape: 'Sg'\n          },\n          additionalModelResponseFieldPaths: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'output',\n          'stopReason',\n          'usage',\n          'metrics'\n        ],\n        members: {\n          output: {\n            type: 'structure',\n            members: {\n              message: {\n                shape: 'S4'\n              }\n            },\n            union: true\n          },\n          stopReason: {},\n          usage: {\n            shape: 'S17'\n          },\n          metrics: {\n            type: 'structure',\n            required: [\n              'latencyMs'\n            ],\n            members: {\n              latencyMs: {\n                type: 'long'\n              }\n            }\n          },\n          additionalModelResponseFields: {\n            shape: 'Sg'\n          }\n        }\n      }\n    },\n    ConverseStream: {\n      http: {\n        requestUri: '/model/{modelId}/converse-stream',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'modelId',\n          'messages'\n        ],\n        members: {\n          modelId: {\n            location: 'uri',\n            locationName: 'modelId'\n          },\n          messages: {\n            shape: 'S3'\n          },\n          system: {\n            shape: 'Sl'\n          },\n          inferenceConfig: {\n            shape: 'So'\n          },\n          toolConfig: {\n            shape: 'St'\n          },\n          additionalModelRequestFields: {\n            shape: 'Sg'\n          },\n          additionalModelResponseFieldPaths: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          stream: {\n            type: 'structure',\n            members: {\n              messageStart: {\n                type: 'structure',\n                required: [\n                  'role'\n                ],\n                members: {\n                  role: {}\n                },\n                event: true\n              },\n              contentBlockStart: {\n                type: 'structure',\n                required: [\n                  'start',\n                  'contentBlockIndex'\n                ],\n                members: {\n                  start: {\n                    type: 'structure',\n                    members: {\n                      toolUse: {\n                        type: 'structure',\n                        required: [\n                          'toolUseId',\n                          'name'\n                        ],\n                        members: {\n                          toolUseId: {},\n                          name: {}\n                        }\n                      }\n                    },\n                    union: true\n                  },\n                  contentBlockIndex: {\n                    type: 'integer'\n                  }\n                },\n                event: true\n              },\n              contentBlockDelta: {\n                type: 'structure',\n                required: [\n                  'delta',\n                  'contentBlockIndex'\n                ],\n                members: {\n                  delta: {\n                    type: 'structure',\n                    members: {\n                      text: {},\n                      toolUse: {\n                        type: 'structure',\n                        required: [\n                          'input'\n                        ],\n                        members: {\n                          input: {}\n                        }\n                      }\n                    },\n                    union: true\n                  },\n                  contentBlockIndex: {\n                    type: 'integer'\n                  }\n                },\n                event: true\n              },\n              contentBlockStop: {\n                type: 'structure',\n                required: [\n                  'contentBlockIndex'\n                ],\n                members: {\n                  contentBlockIndex: {\n                    type: 'integer'\n                  }\n                },\n                event: true\n              },\n              messageStop: {\n                type: 'structure',\n                required: [\n                  'stopReason'\n                ],\n                members: {\n                  stopReason: {},\n                  additionalModelResponseFields: {\n                    shape: 'Sg'\n                  }\n                },\n                event: true\n              },\n              metadata: {\n                type: 'structure',\n                required: [\n                  'usage',\n                  'metrics'\n                ],\n                members: {\n                  usage: {\n                    shape: 'S17'\n                  },\n                  metrics: {\n                    type: 'structure',\n                    required: [\n                      'latencyMs'\n                    ],\n                    members: {\n                      latencyMs: {\n                        type: 'long'\n                      }\n                    }\n                  }\n                },\n                event: true\n              },\n              internalServerException: {\n                shape: 'S1u'\n              },\n              modelStreamErrorException: {\n                shape: 'S1w'\n              },\n              validationException: {\n                shape: 'S1y'\n              },\n              throttlingException: {\n                shape: 'S1z'\n              }\n            },\n            eventstream: true\n          }\n        },\n        payload: 'stream'\n      }\n    },\n    InvokeModel: {\n      http: {\n        requestUri: '/model/{modelId}/invoke',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'body',\n          'modelId'\n        ],\n        members: {\n          body: {\n            shape: 'S21'\n          },\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          accept: {\n            location: 'header',\n            locationName: 'Accept'\n          },\n          modelId: {\n            location: 'uri',\n            locationName: 'modelId'\n          },\n          trace: {\n            location: 'header',\n            locationName: 'X-Amzn-Bedrock-Trace'\n          },\n          guardrailIdentifier: {\n            location: 'header',\n            locationName: 'X-Amzn-Bedrock-GuardrailIdentifier'\n          },\n          guardrailVersion: {\n            location: 'header',\n            locationName: 'X-Amzn-Bedrock-GuardrailVersion'\n          }\n        },\n        payload: 'body'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'body',\n          'contentType'\n        ],\n        members: {\n          body: {\n            shape: 'S21'\n          },\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          }\n        },\n        payload: 'body'\n      }\n    },\n    InvokeModelWithResponseStream: {\n      http: {\n        requestUri: '/model/{modelId}/invoke-with-response-stream',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'body',\n          'modelId'\n        ],\n        members: {\n          body: {\n            shape: 'S21'\n          },\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          accept: {\n            location: 'header',\n            locationName: 'X-Amzn-Bedrock-Accept'\n          },\n          modelId: {\n            location: 'uri',\n            locationName: 'modelId'\n          },\n          trace: {\n            location: 'header',\n            locationName: 'X-Amzn-Bedrock-Trace'\n          },\n          guardrailIdentifier: {\n            location: 'header',\n            locationName: 'X-Amzn-Bedrock-GuardrailIdentifier'\n          },\n          guardrailVersion: {\n            location: 'header',\n            locationName: 'X-Amzn-Bedrock-GuardrailVersion'\n          }\n        },\n        payload: 'body'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'body',\n          'contentType'\n        ],\n        members: {\n          body: {\n            type: 'structure',\n            members: {\n              chunk: {\n                type: 'structure',\n                members: {\n                  bytes: {\n                    type: 'blob',\n                    sensitive: true\n                  }\n                },\n                event: true,\n                sensitive: true\n              },\n              internalServerException: {\n                shape: 'S1u'\n              },\n              modelStreamErrorException: {\n                shape: 'S1w'\n              },\n              validationException: {\n                shape: 'S1y'\n              },\n              throttlingException: {\n                shape: 'S1z'\n              },\n              modelTimeoutException: {\n                type: 'structure',\n                members: {\n                  message: {}\n                },\n                error: {\n                  httpStatusCode: 408,\n                  senderFault: true\n                },\n                exception: true\n              }\n            },\n            eventstream: true\n          },\n          contentType: {\n            location: 'header',\n            locationName: 'X-Amzn-Bedrock-Content-Type'\n          }\n        },\n        payload: 'body'\n      }\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'list',\n      member: {\n        shape: 'S4'\n      }\n    },\n    S4: {\n      type: 'structure',\n      required: [\n        'role',\n        'content'\n      ],\n      members: {\n        role: {},\n        content: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              text: {},\n              image: {\n                shape: 'S9'\n              },\n              toolUse: {\n                type: 'structure',\n                required: [\n                  'toolUseId',\n                  'name',\n                  'input'\n                ],\n                members: {\n                  toolUseId: {},\n                  name: {},\n                  input: {\n                    shape: 'Sg'\n                  }\n                }\n              },\n              toolResult: {\n                type: 'structure',\n                required: [\n                  'toolUseId',\n                  'content'\n                ],\n                members: {\n                  toolUseId: {},\n                  content: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      members: {\n                        json: {\n                          shape: 'Sg'\n                        },\n                        text: {},\n                        image: {\n                          shape: 'S9'\n                        }\n                      },\n                      union: true\n                    }\n                  },\n                  status: {}\n                }\n              }\n            },\n            union: true\n          }\n        }\n      }\n    },\n    S9: {\n      type: 'structure',\n      required: [\n        'format',\n        'source'\n      ],\n      members: {\n        format: {},\n        source: {\n          type: 'structure',\n          members: {\n            bytes: {\n              type: 'blob'\n            }\n          },\n          union: true\n        }\n      }\n    },\n    Sg: {\n      type: 'structure',\n      members: {},\n      document: true\n    },\n    Sl: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          text: {}\n        },\n        union: true\n      }\n    },\n    So: {\n      type: 'structure',\n      members: {\n        maxTokens: {\n          type: 'integer'\n        },\n        temperature: {\n          type: 'float'\n        },\n        topP: {\n          type: 'float'\n        },\n        stopSequences: {\n          type: 'list',\n          member: {}\n        }\n      }\n    },\n    St: {\n      type: 'structure',\n      required: [\n        'tools'\n      ],\n      members: {\n        tools: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              toolSpec: {\n                type: 'structure',\n                required: [\n                  'name',\n                  'inputSchema'\n                ],\n                members: {\n                  name: {},\n                  description: {},\n                  inputSchema: {\n                    type: 'structure',\n                    members: {\n                      json: {\n                        shape: 'Sg'\n                      }\n                    },\n                    union: true\n                  }\n                }\n              }\n            },\n            union: true\n          }\n        },\n        toolChoice: {\n          type: 'structure',\n          members: {\n            auto: {\n              type: 'structure',\n              members: {}\n            },\n            any: {\n              type: 'structure',\n              members: {}\n            },\n            tool: {\n              type: 'structure',\n              required: [\n                'name'\n              ],\n              members: {\n                name: {}\n              }\n            }\n          },\n          union: true\n        }\n      }\n    },\n    S17: {\n      type: 'structure',\n      required: [\n        'inputTokens',\n        'outputTokens',\n        'totalTokens'\n      ],\n      members: {\n        inputTokens: {\n          type: 'integer'\n        },\n        outputTokens: {\n          type: 'integer'\n        },\n        totalTokens: {\n          type: 'integer'\n        }\n      }\n    },\n    S1u: {\n      type: 'structure',\n      members: {\n        message: {}\n      },\n      error: {\n        httpStatusCode: 500\n      },\n      exception: true,\n      fault: true\n    },\n    S1w: {\n      type: 'structure',\n      members: {\n        message: {},\n        originalStatusCode: {\n          type: 'integer'\n        },\n        originalMessage: {}\n      },\n      error: {\n        httpStatusCode: 424,\n        senderFault: true\n      },\n      exception: true\n    },\n    S1y: {\n      type: 'structure',\n      members: {\n        message: {}\n      },\n      error: {\n        httpStatusCode: 400,\n        senderFault: true\n      },\n      exception: true\n    },\n    S1z: {\n      type: 'structure',\n      members: {\n        message: {}\n      },\n      error: {\n        httpStatusCode: 429,\n        senderFault: true\n      },\n      exception: true\n    },\n    S21: {\n      type: 'blob',\n      sensitive: true\n    }\n  }\n}"]}