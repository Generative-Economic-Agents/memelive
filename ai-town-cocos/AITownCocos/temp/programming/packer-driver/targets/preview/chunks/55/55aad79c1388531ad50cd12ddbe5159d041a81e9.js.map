{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/cognito-identity-2014-06-30.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","CreateIdentityPool","input","type","required","members","IdentityPoolName","AllowUnauthenticatedIdentities","AllowClassicFlow","SupportedLoginProviders","shape","DeveloperProviderName","OpenIdConnectProviderARNs","CognitoIdentityProviders","SamlProviderARNs","IdentityPoolTags","output","DeleteIdentities","IdentityIdsToDelete","member","UnprocessedIdentityIds","IdentityId","ErrorCode","DeleteIdentityPool","IdentityPoolId","DescribeIdentity","DescribeIdentityPool","GetCredentialsForIdentity","Logins","CustomRoleArn","Credentials","AccessKeyId","SecretKey","SessionToken","Expiration","authtype","GetId","AccountId","GetIdentityPoolRoles","Roles","RoleMappings","GetOpenIdToken","Token","GetOpenIdTokenForDeveloperIdentity","PrincipalTags","TokenDuration","GetPrincipalTagAttributeMap","IdentityProviderName","UseDefaults","ListIdentities","MaxResults","NextToken","HideDisabled","Identities","ListIdentityPools","IdentityPools","ListTagsForResource","ResourceArn","Tags","LookupDeveloperIdentity","DeveloperUserIdentifier","DeveloperUserIdentifierList","MergeDeveloperIdentities","SourceUserIdentifier","DestinationUserIdentifier","SetIdentityPoolRoles","SetPrincipalTagAttributeMap","TagResource","UnlinkDeveloperIdentity","UnlinkIdentity","LoginsToRemove","UntagResource","TagKeys","UpdateIdentityPool","shapes","S5","key","value","S9","Sb","ProviderName","ClientId","ServerSideTokenCheck","Sg","Sh","Sk","Sv","CreationDate","LastModifiedDate","Sw","S10","S1c","S1e","Type","AmbiguousRoleResolution","RulesConfiguration","Rules","Claim","MatchType","Value","RoleARN","S1s"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2014-06-30',\n    endpointPrefix: 'cognito-identity',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceFullName: 'Amazon Cognito Identity',\n    serviceId: 'Cognito Identity',\n    signatureVersion: 'v4',\n    targetPrefix: 'AWSCognitoIdentityService',\n    uid: 'cognito-identity-2014-06-30'\n  },\n  operations: {\n    CreateIdentityPool: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolName',\n          'AllowUnauthenticatedIdentities'\n        ],\n        members: {\n          IdentityPoolName: {},\n          AllowUnauthenticatedIdentities: {\n            type: 'boolean'\n          },\n          AllowClassicFlow: {\n            type: 'boolean'\n          },\n          SupportedLoginProviders: {\n            shape: 'S5'\n          },\n          DeveloperProviderName: {},\n          OpenIdConnectProviderARNs: {\n            shape: 'S9'\n          },\n          CognitoIdentityProviders: {\n            shape: 'Sb'\n          },\n          SamlProviderARNs: {\n            shape: 'Sg'\n          },\n          IdentityPoolTags: {\n            shape: 'Sh'\n          }\n        }\n      },\n      output: {\n        shape: 'Sk'\n      }\n    },\n    DeleteIdentities: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityIdsToDelete'\n        ],\n        members: {\n          IdentityIdsToDelete: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          UnprocessedIdentityIds: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                IdentityId: {},\n                ErrorCode: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DeleteIdentityPool: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {}\n        }\n      }\n    },\n    DescribeIdentity: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityId'\n        ],\n        members: {\n          IdentityId: {}\n        }\n      },\n      output: {\n        shape: 'Sv'\n      }\n    },\n    DescribeIdentityPool: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {}\n        }\n      },\n      output: {\n        shape: 'Sk'\n      }\n    },\n    GetCredentialsForIdentity: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityId'\n        ],\n        members: {\n          IdentityId: {},\n          Logins: {\n            shape: 'S10'\n          },\n          CustomRoleArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityId: {},\n          Credentials: {\n            type: 'structure',\n            members: {\n              AccessKeyId: {},\n              SecretKey: {},\n              SessionToken: {},\n              Expiration: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      },\n      authtype: 'none'\n    },\n    GetId: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          AccountId: {},\n          IdentityPoolId: {},\n          Logins: {\n            shape: 'S10'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityId: {}\n        }\n      },\n      authtype: 'none'\n    },\n    GetIdentityPoolRoles: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPoolId: {},\n          Roles: {\n            shape: 'S1c'\n          },\n          RoleMappings: {\n            shape: 'S1e'\n          }\n        }\n      }\n    },\n    GetOpenIdToken: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityId'\n        ],\n        members: {\n          IdentityId: {},\n          Logins: {\n            shape: 'S10'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityId: {},\n          Token: {}\n        }\n      },\n      authtype: 'none'\n    },\n    GetOpenIdTokenForDeveloperIdentity: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'Logins'\n        ],\n        members: {\n          IdentityPoolId: {},\n          IdentityId: {},\n          Logins: {\n            shape: 'S10'\n          },\n          PrincipalTags: {\n            shape: 'S1s'\n          },\n          TokenDuration: {\n            type: 'long'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityId: {},\n          Token: {}\n        }\n      }\n    },\n    GetPrincipalTagAttributeMap: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'IdentityProviderName'\n        ],\n        members: {\n          IdentityPoolId: {},\n          IdentityProviderName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPoolId: {},\n          IdentityProviderName: {},\n          UseDefaults: {\n            type: 'boolean'\n          },\n          PrincipalTags: {\n            shape: 'S1s'\n          }\n        }\n      }\n    },\n    ListIdentities: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'MaxResults'\n        ],\n        members: {\n          IdentityPoolId: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          HideDisabled: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPoolId: {},\n          Identities: {\n            type: 'list',\n            member: {\n              shape: 'Sv'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListIdentityPools: {\n      input: {\n        type: 'structure',\n        required: [\n          'MaxResults'\n        ],\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPools: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                IdentityPoolId: {},\n                IdentityPoolName: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Sh'\n          }\n        }\n      }\n    },\n    LookupDeveloperIdentity: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId'\n        ],\n        members: {\n          IdentityPoolId: {},\n          IdentityId: {},\n          DeveloperUserIdentifier: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityId: {},\n          DeveloperUserIdentifierList: {\n            type: 'list',\n            member: {}\n          },\n          NextToken: {}\n        }\n      }\n    },\n    MergeDeveloperIdentities: {\n      input: {\n        type: 'structure',\n        required: [\n          'SourceUserIdentifier',\n          'DestinationUserIdentifier',\n          'DeveloperProviderName',\n          'IdentityPoolId'\n        ],\n        members: {\n          SourceUserIdentifier: {},\n          DestinationUserIdentifier: {},\n          DeveloperProviderName: {},\n          IdentityPoolId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityId: {}\n        }\n      }\n    },\n    SetIdentityPoolRoles: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'Roles'\n        ],\n        members: {\n          IdentityPoolId: {},\n          Roles: {\n            shape: 'S1c'\n          },\n          RoleMappings: {\n            shape: 'S1e'\n          }\n        }\n      }\n    },\n    SetPrincipalTagAttributeMap: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityPoolId',\n          'IdentityProviderName'\n        ],\n        members: {\n          IdentityPoolId: {},\n          IdentityProviderName: {},\n          UseDefaults: {\n            type: 'boolean'\n          },\n          PrincipalTags: {\n            shape: 'S1s'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          IdentityPoolId: {},\n          IdentityProviderName: {},\n          UseDefaults: {\n            type: 'boolean'\n          },\n          PrincipalTags: {\n            shape: 'S1s'\n          }\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {},\n          Tags: {\n            shape: 'Sh'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UnlinkDeveloperIdentity: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityId',\n          'IdentityPoolId',\n          'DeveloperProviderName',\n          'DeveloperUserIdentifier'\n        ],\n        members: {\n          IdentityId: {},\n          IdentityPoolId: {},\n          DeveloperProviderName: {},\n          DeveloperUserIdentifier: {}\n        }\n      }\n    },\n    UnlinkIdentity: {\n      input: {\n        type: 'structure',\n        required: [\n          'IdentityId',\n          'Logins',\n          'LoginsToRemove'\n        ],\n        members: {\n          IdentityId: {},\n          Logins: {\n            shape: 'S10'\n          },\n          LoginsToRemove: {\n            shape: 'Sw'\n          }\n        }\n      },\n      authtype: 'none'\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {},\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateIdentityPool: {\n      input: {\n        shape: 'Sk'\n      },\n      output: {\n        shape: 'Sk'\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S9: {\n      type: 'list',\n      member: {}\n    },\n    Sb: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          ProviderName: {},\n          ClientId: {},\n          ServerSideTokenCheck: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    Sg: {\n      type: 'list',\n      member: {}\n    },\n    Sh: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sk: {\n      type: 'structure',\n      required: [\n        'IdentityPoolId',\n        'IdentityPoolName',\n        'AllowUnauthenticatedIdentities'\n      ],\n      members: {\n        IdentityPoolId: {},\n        IdentityPoolName: {},\n        AllowUnauthenticatedIdentities: {\n          type: 'boolean'\n        },\n        AllowClassicFlow: {\n          type: 'boolean'\n        },\n        SupportedLoginProviders: {\n          shape: 'S5'\n        },\n        DeveloperProviderName: {},\n        OpenIdConnectProviderARNs: {\n          shape: 'S9'\n        },\n        CognitoIdentityProviders: {\n          shape: 'Sb'\n        },\n        SamlProviderARNs: {\n          shape: 'Sg'\n        },\n        IdentityPoolTags: {\n          shape: 'Sh'\n        }\n      }\n    },\n    Sv: {\n      type: 'structure',\n      members: {\n        IdentityId: {},\n        Logins: {\n          shape: 'Sw'\n        },\n        CreationDate: {\n          type: 'timestamp'\n        },\n        LastModifiedDate: {\n          type: 'timestamp'\n        }\n      }\n    },\n    Sw: {\n      type: 'list',\n      member: {}\n    },\n    S10: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1c: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1e: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        required: [\n          'Type'\n        ],\n        members: {\n          Type: {},\n          AmbiguousRoleResolution: {},\n          RulesConfiguration: {\n            type: 'structure',\n            required: [\n              'Rules'\n            ],\n            members: {\n              Rules: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'Claim',\n                    'MatchType',\n                    'Value',\n                    'RoleARN'\n                  ],\n                  members: {\n                    Claim: {},\n                    MatchType: {},\n                    Value: {},\n                    RoleARN: {}\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S1s: {\n      type: 'map',\n      key: {},\n      value: {}\n    }\n  }\n}"]}