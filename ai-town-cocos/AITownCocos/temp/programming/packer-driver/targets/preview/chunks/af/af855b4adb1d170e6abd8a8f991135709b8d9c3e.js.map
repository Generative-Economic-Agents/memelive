{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/services/rds.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","url","define","exports","require","module","__filename","__dirname","AWS","rdsutil","crossRegionOperations","util","update","RDS","prototype","setupRequestListeners","request","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;AACgBE,MAAAA,K,iBAAhBF,Y;;;8BAEHA,Y,GAAe,cAAYG,G;;AACjCL,MAAAA,UAAU,CAACM,MAAX,CAAkBJ,YAAlB,EAAgC,UAAUK,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,GAAG,GAAGJ,OAAO,CAAC,SAAD,CAAjB;;AACA,YAAIK,OAAO,GAAGL,OAAO,CAAC,WAAD,CAArB;;AACAA,QAAAA,OAAO,CAAC,eAAD,CAAP;AACC;AACF;AACA;;;AACE,YAAIM,qBAAqB,GAAG,CAAC,gBAAD,EAAmB,6BAAnB,EAAkD,iBAAlD,EAAqE,uBAArE,EAA8F,4CAA9F,CAA5B;AAEAF,QAAAA,GAAG,CAACG,IAAJ,CAASC,MAAT,CAAgBJ,GAAG,CAACK,GAAJ,CAAQC,SAAxB,EAAmC;AACjC;AACJ;AACA;AACIC,UAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BC,OAA/B,EAAwC;AAC9DP,YAAAA,OAAO,CAACM,qBAAR,CAA8B,IAA9B,EAAoCC,OAApC,EAA6CN,qBAA7C;AACA;AANgC,SAAnC,EAZyF,CAsB3F;;AAEA,2BAAAO,WAAW,GAAGZ,MAAM,CAACF,OAArB;AAGC,OA3BD,EA2BG,OAAO;AACR,mBAAWN,IADH;AAER,qBAAaE,KAFL;AAGR,yBAAiBC;AAHT,OAAP,CA3BH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nimport { __cjsMetaURL as _req0} from './rdsutil';\nimport { __cjsMetaURL as _req1} from '../rds/signer';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n var rdsutil = require('./rdsutil');\n require('../rds/signer');\n  /**\n   * @api private\n   */\n  var crossRegionOperations = ['copyDBSnapshot', 'createDBInstanceReadReplica', 'createDBCluster', 'copyDBClusterSnapshot', 'startDBInstanceAutomatedBackupsReplication'];\n\n  AWS.util.update(AWS.RDS.prototype, {\n    /**\n     * @api private\n     */\n    setupRequestListeners: function setupRequestListeners(request) {\n     rdsutil.setupRequestListeners(this, request, crossRegionOperations);\n    },\n  });\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n  './rdsutil': _req0,\n  '../rds/signer': _req1,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}