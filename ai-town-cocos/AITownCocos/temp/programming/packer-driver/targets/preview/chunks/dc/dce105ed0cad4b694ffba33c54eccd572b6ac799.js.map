{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/servicediscovery-2017-03-14.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","CreateHttpNamespace","input","type","required","members","Name","CreatorRequestId","idempotencyToken","Description","Tags","shape","output","OperationId","CreatePrivateDnsNamespace","Vpc","Properties","DnsProperties","SOA","CreatePublicDnsNamespace","CreateService","NamespaceId","DnsConfig","HealthCheckConfig","HealthCheckCustomConfig","Type","Service","DeleteNamespace","Id","DeleteService","DeregisterInstance","ServiceId","InstanceId","DiscoverInstances","NamespaceName","ServiceName","MaxResults","QueryParameters","OptionalParameters","HealthStatus","Instances","member","Attributes","InstancesRevision","endpoint","hostPrefix","DiscoverInstancesRevision","GetInstance","Instance","GetInstancesHealthStatus","NextToken","Status","key","value","GetNamespace","Namespace","Arn","ServiceCount","CreateDate","GetOperation","Operation","ErrorMessage","ErrorCode","UpdateDate","Targets","GetService","ListInstances","ListNamespaces","Filters","Values","Condition","Namespaces","ListOperations","Operations","ListServices","Services","InstanceCount","ListTagsForResource","ResourceARN","RegisterInstance","TagResource","UntagResource","TagKeys","UpdateHttpNamespace","UpdaterRequestId","UpdateInstanceCustomHealthStatus","UpdatePrivateDnsNamespace","UpdatePublicDnsNamespace","UpdateService","DnsRecords","shapes","S5","Key","Value","Sf","TTL","Sp","deprecated","deprecatedMessage","RoutingPolicy","Sr","Su","ResourcePath","FailureThreshold","Sy","S11","S1f","S23","HostedZoneId","HttpProperties","HttpName","S2p","S3t"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2017-03-14',\n    endpointPrefix: 'servicediscovery',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceAbbreviation: 'ServiceDiscovery',\n    serviceFullName: 'AWS Cloud Map',\n    serviceId: 'ServiceDiscovery',\n    signatureVersion: 'v4',\n    targetPrefix: 'Route53AutoNaming_v20170314',\n    uid: 'servicediscovery-2017-03-14'\n  },\n  operations: {\n    CreateHttpNamespace: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {},\n          CreatorRequestId: {\n            idempotencyToken: true\n          },\n          Description: {},\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OperationId: {}\n        }\n      }\n    },\n    CreatePrivateDnsNamespace: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name',\n          'Vpc'\n        ],\n        members: {\n          Name: {},\n          CreatorRequestId: {\n            idempotencyToken: true\n          },\n          Description: {},\n          Vpc: {},\n          Tags: {\n            shape: 'S5'\n          },\n          Properties: {\n            type: 'structure',\n            required: [\n              'DnsProperties'\n            ],\n            members: {\n              DnsProperties: {\n                type: 'structure',\n                required: [\n                  'SOA'\n                ],\n                members: {\n                  SOA: {\n                    shape: 'Sf'\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OperationId: {}\n        }\n      }\n    },\n    CreatePublicDnsNamespace: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {},\n          CreatorRequestId: {\n            idempotencyToken: true\n          },\n          Description: {},\n          Tags: {\n            shape: 'S5'\n          },\n          Properties: {\n            type: 'structure',\n            required: [\n              'DnsProperties'\n            ],\n            members: {\n              DnsProperties: {\n                type: 'structure',\n                required: [\n                  'SOA'\n                ],\n                members: {\n                  SOA: {\n                    shape: 'Sf'\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OperationId: {}\n        }\n      }\n    },\n    CreateService: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {},\n          NamespaceId: {},\n          CreatorRequestId: {\n            idempotencyToken: true\n          },\n          Description: {},\n          DnsConfig: {\n            shape: 'Sp'\n          },\n          HealthCheckConfig: {\n            shape: 'Su'\n          },\n          HealthCheckCustomConfig: {\n            shape: 'Sy'\n          },\n          Tags: {\n            shape: 'S5'\n          },\n          Type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Service: {\n            shape: 'S11'\n          }\n        }\n      }\n    },\n    DeleteNamespace: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OperationId: {}\n        }\n      }\n    },\n    DeleteService: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeregisterInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'ServiceId',\n          'InstanceId'\n        ],\n        members: {\n          ServiceId: {},\n          InstanceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OperationId: {}\n        }\n      }\n    },\n    DiscoverInstances: {\n      input: {\n        type: 'structure',\n        required: [\n          'NamespaceName',\n          'ServiceName'\n        ],\n        members: {\n          NamespaceName: {},\n          ServiceName: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          QueryParameters: {\n            shape: 'S1f'\n          },\n          OptionalParameters: {\n            shape: 'S1f'\n          },\n          HealthStatus: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Instances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                InstanceId: {},\n                NamespaceName: {},\n                ServiceName: {},\n                HealthStatus: {},\n                Attributes: {\n                  shape: 'S1f'\n                }\n              }\n            }\n          },\n          InstancesRevision: {\n            type: 'long'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'data-'\n      }\n    },\n    DiscoverInstancesRevision: {\n      input: {\n        type: 'structure',\n        required: [\n          'NamespaceName',\n          'ServiceName'\n        ],\n        members: {\n          NamespaceName: {},\n          ServiceName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          InstancesRevision: {\n            type: 'long'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'data-'\n      }\n    },\n    GetInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'ServiceId',\n          'InstanceId'\n        ],\n        members: {\n          ServiceId: {},\n          InstanceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Instance: {\n            type: 'structure',\n            required: [\n              'Id'\n            ],\n            members: {\n              Id: {},\n              CreatorRequestId: {},\n              Attributes: {\n                shape: 'S1f'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetInstancesHealthStatus: {\n      input: {\n        type: 'structure',\n        required: [\n          'ServiceId'\n        ],\n        members: {\n          ServiceId: {},\n          Instances: {\n            type: 'list',\n            member: {}\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Status: {\n            type: 'map',\n            key: {},\n            value: {}\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetNamespace: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Namespace: {\n            type: 'structure',\n            members: {\n              Id: {},\n              Arn: {},\n              Name: {},\n              Type: {},\n              Description: {},\n              ServiceCount: {\n                type: 'integer'\n              },\n              Properties: {\n                shape: 'S23'\n              },\n              CreateDate: {\n                type: 'timestamp'\n              },\n              CreatorRequestId: {}\n            }\n          }\n        }\n      }\n    },\n    GetOperation: {\n      input: {\n        type: 'structure',\n        required: [\n          'OperationId'\n        ],\n        members: {\n          OperationId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Operation: {\n            type: 'structure',\n            members: {\n              Id: {},\n              Type: {},\n              Status: {},\n              ErrorMessage: {},\n              ErrorCode: {},\n              CreateDate: {\n                type: 'timestamp'\n              },\n              UpdateDate: {\n                type: 'timestamp'\n              },\n              Targets: {\n                type: 'map',\n                key: {},\n                value: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    GetService: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Service: {\n            shape: 'S11'\n          }\n        }\n      }\n    },\n    ListInstances: {\n      input: {\n        type: 'structure',\n        required: [\n          'ServiceId'\n        ],\n        members: {\n          ServiceId: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Instances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {},\n                Attributes: {\n                  shape: 'S1f'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListNamespaces: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Name',\n                'Values'\n              ],\n              members: {\n                Name: {},\n                Values: {\n                  shape: 'S2p'\n                },\n                Condition: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Namespaces: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {},\n                Arn: {},\n                Name: {},\n                Type: {},\n                Description: {},\n                ServiceCount: {\n                  type: 'integer'\n                },\n                Properties: {\n                  shape: 'S23'\n                },\n                CreateDate: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListOperations: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Name',\n                'Values'\n              ],\n              members: {\n                Name: {},\n                Values: {\n                  shape: 'S2p'\n                },\n                Condition: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Operations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {},\n                Status: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListServices: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Name',\n                'Values'\n              ],\n              members: {\n                Name: {},\n                Values: {\n                  shape: 'S2p'\n                },\n                Condition: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Services: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {},\n                Arn: {},\n                Name: {},\n                Type: {},\n                Description: {},\n                InstanceCount: {\n                  type: 'integer'\n                },\n                DnsConfig: {\n                  shape: 'Sp'\n                },\n                HealthCheckConfig: {\n                  shape: 'Su'\n                },\n                HealthCheckCustomConfig: {\n                  shape: 'Sy'\n                },\n                CreateDate: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN'\n        ],\n        members: {\n          ResourceARN: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    RegisterInstance: {\n      input: {\n        type: 'structure',\n        required: [\n          'ServiceId',\n          'InstanceId',\n          'Attributes'\n        ],\n        members: {\n          ServiceId: {},\n          InstanceId: {},\n          CreatorRequestId: {\n            idempotencyToken: true\n          },\n          Attributes: {\n            shape: 'S1f'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OperationId: {}\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN',\n          'Tags'\n        ],\n        members: {\n          ResourceARN: {},\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN',\n          'TagKeys'\n        ],\n        members: {\n          ResourceARN: {},\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateHttpNamespace: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id',\n          'Namespace'\n        ],\n        members: {\n          Id: {},\n          UpdaterRequestId: {\n            idempotencyToken: true\n          },\n          Namespace: {\n            type: 'structure',\n            required: [\n              'Description'\n            ],\n            members: {\n              Description: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OperationId: {}\n        }\n      }\n    },\n    UpdateInstanceCustomHealthStatus: {\n      input: {\n        type: 'structure',\n        required: [\n          'ServiceId',\n          'InstanceId',\n          'Status'\n        ],\n        members: {\n          ServiceId: {},\n          InstanceId: {},\n          Status: {}\n        }\n      }\n    },\n    UpdatePrivateDnsNamespace: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id',\n          'Namespace'\n        ],\n        members: {\n          Id: {},\n          UpdaterRequestId: {\n            idempotencyToken: true\n          },\n          Namespace: {\n            type: 'structure',\n            members: {\n              Description: {},\n              Properties: {\n                type: 'structure',\n                required: [\n                  'DnsProperties'\n                ],\n                members: {\n                  DnsProperties: {\n                    type: 'structure',\n                    required: [\n                      'SOA'\n                    ],\n                    members: {\n                      SOA: {\n                        shape: 'S3t'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OperationId: {}\n        }\n      }\n    },\n    UpdatePublicDnsNamespace: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id',\n          'Namespace'\n        ],\n        members: {\n          Id: {},\n          UpdaterRequestId: {\n            idempotencyToken: true\n          },\n          Namespace: {\n            type: 'structure',\n            members: {\n              Description: {},\n              Properties: {\n                type: 'structure',\n                required: [\n                  'DnsProperties'\n                ],\n                members: {\n                  DnsProperties: {\n                    type: 'structure',\n                    required: [\n                      'SOA'\n                    ],\n                    members: {\n                      SOA: {\n                        shape: 'S3t'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OperationId: {}\n        }\n      }\n    },\n    UpdateService: {\n      input: {\n        type: 'structure',\n        required: [\n          'Id',\n          'Service'\n        ],\n        members: {\n          Id: {},\n          Service: {\n            type: 'structure',\n            members: {\n              Description: {},\n              DnsConfig: {\n                type: 'structure',\n                required: [\n                  'DnsRecords'\n                ],\n                members: {\n                  DnsRecords: {\n                    shape: 'Sr'\n                  }\n                }\n              },\n              HealthCheckConfig: {\n                shape: 'Su'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          OperationId: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sf: {\n      type: 'structure',\n      required: [\n        'TTL'\n      ],\n      members: {\n        TTL: {\n          type: 'long'\n        }\n      }\n    },\n    Sp: {\n      type: 'structure',\n      required: [\n        'DnsRecords'\n      ],\n      members: {\n        NamespaceId: {\n          deprecated: true,\n          deprecatedMessage: 'Top level attribute in request should be used to reference namespace-id'\n        },\n        RoutingPolicy: {},\n        DnsRecords: {\n          shape: 'Sr'\n        }\n      }\n    },\n    Sr: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Type',\n          'TTL'\n        ],\n        members: {\n          Type: {},\n          TTL: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    Su: {\n      type: 'structure',\n      required: [\n        'Type'\n      ],\n      members: {\n        Type: {},\n        ResourcePath: {},\n        FailureThreshold: {\n          type: 'integer'\n        }\n      }\n    },\n    Sy: {\n      type: 'structure',\n      members: {\n        FailureThreshold: {\n          deprecated: true,\n          deprecatedMessage: 'Configurable FailureThreshold of HealthCheckCustomConfig is deprecated.  It will always have value 1.',\n          type: 'integer'\n        }\n      }\n    },\n    S11: {\n      type: 'structure',\n      members: {\n        Id: {},\n        Arn: {},\n        Name: {},\n        NamespaceId: {},\n        Description: {},\n        InstanceCount: {\n          type: 'integer'\n        },\n        DnsConfig: {\n          shape: 'Sp'\n        },\n        Type: {},\n        HealthCheckConfig: {\n          shape: 'Su'\n        },\n        HealthCheckCustomConfig: {\n          shape: 'Sy'\n        },\n        CreateDate: {\n          type: 'timestamp'\n        },\n        CreatorRequestId: {}\n      }\n    },\n    S1f: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S23: {\n      type: 'structure',\n      members: {\n        DnsProperties: {\n          type: 'structure',\n          members: {\n            HostedZoneId: {},\n            SOA: {\n              shape: 'Sf'\n            }\n          }\n        },\n        HttpProperties: {\n          type: 'structure',\n          members: {\n            HttpName: {}\n          }\n        }\n      }\n    },\n    S2p: {\n      type: 'list',\n      member: {}\n    },\n    S3t: {\n      type: 'structure',\n      required: [\n        'TTL'\n      ],\n      members: {\n        TTL: {\n          type: 'long'\n        }\n      }\n    }\n  }\n}"]}