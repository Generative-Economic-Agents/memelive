{"version":3,"sources":["file:///Users/feiwang/cutepet/assets/src/utils/Request.ts"],"names":["Request","crtptos","observer","constructor","post","url","data","type","isEencrypt","isForm","xhr","XMLHttpRequest","withCredentials","timeout","console","warn","Promise","resolve","reject","open","setRequestHeader","encrypt","JSON","stringify","onload","status","undefined","responseText","encode","getResponseHeader","toLowerCase","parse","decrypt","error","onerror","err","send","get","log"],"mappings":"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","sourcesContent":["import crtptos from \"../../core/network/http/cryptos\";\nimport { observer } from \"../game/App\";\n\nexport default class Request {\n  constructor(){\n\n  }\n  /**\n   * \n   * @param url 请求链接\n   * @param data 请求数据\n   * @param type 是否是表单格式\n   * @param isEencrypt 是否需要加密\n   */\n  public static post(url = '', data = null,type = {isForm:false},isEencrypt =  { isEencrypt: false }) {\n    const xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n    xhr.timeout = 5000;\n    console.warn(\"111111\")\n    return new Promise((resolve, reject) => {\n      xhr.open('post', url, true);\n      if(type&&type.isForm == true){\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n      }else{\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        console.warn(\"2222222\")\n        \n      }\n      // 需要加密\n      if (isEencrypt&&isEencrypt.isEencrypt) {\n        data = crtptos.encrypt(JSON.stringify(data));\n    }\n      xhr.onload = function onload() {\n        const status: Number = xhr.status !== undefined ? xhr.status : 200;\n        console.warn(\"3333333\",status)\n\n        if (status == 200 || status == 204 || status == 0) {\n          if (xhr.responseText) {\n            try {\n              let data ;\n              /** 解密处理 看head头部的返回 */\n             let encode = xhr.getResponseHeader(\"encode\");\n              if (encode && encode.toLowerCase() === 'true') {\n                //\"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\"\n                data = JSON.parse(crtptos.decrypt(xhr.responseText));\n            }else{\n              data = JSON.parse(xhr.responseText);\n            }\n            console.warn(\"request load::\",data);\n              resolve(data);\n            } catch (error) {\n              console.warn(\"request load::\",error);\n              reject(error);\n            }\n          } else {\n            reject();\n          }\n        } else {\n          if(reject) reject();\n          console.warn(\"netRequesterro\", xhr);\n          // observer.post(\"netRequesterro\", xhr);\n        }\n      };\n      xhr.onerror = (err)=>{\n        console.warn(\"4444444\",err);\n        if(reject) reject(err);\n         observer.post(\"netRequesterro\", xhr);\n       };\n\n      if(type&&type.isForm == true){\n        xhr.send(data);\n      }else{\n        if(!data) data = {};\n        if (isEencrypt&&isEencrypt.isEencrypt) {\n          xhr.send(data);\n          console.warn(\"request send::\",data);\n        }else{\n          console.warn(\"request stringify send::\",data);\n          xhr.send(JSON.stringify(data));\n        }\n       \n      }\n    });\n  }\n  public static get(url = '') {\n    const xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n    xhr.timeout = 5000;\n    return new Promise((resolve, reject) => {\n      xhr.open('get', url, true);\n      xhr.onload = function onload() {\n        const status: Number = xhr.status !== undefined ? xhr.status : 200;\n        if (status == 200 || status == 204 || status == 0) {\n          if (xhr.responseText) {\n            try {\n              const data = JSON.parse(xhr.responseText);\n              resolve(data);\n            } catch (error) {\n              reject();\n            }\n          } else {\n            reject();\n          }\n        } else {\n          reject();\n          observer.post(\"netRequesterro\", xhr);\n        }\n      };\n      xhr.onerror = (err)=>{\n        console.log(\"request err:\", xhr,\"err::\",err);\n       observer.post(\"netRequesterro\", xhr);\n      };\n      xhr.send();\n    });\n  }\n}\n"]}