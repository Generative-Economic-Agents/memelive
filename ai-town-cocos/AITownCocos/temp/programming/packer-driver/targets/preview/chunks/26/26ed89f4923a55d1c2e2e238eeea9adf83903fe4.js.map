{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/_createMathOperation.js"],"names":["createMathOperation","operator","defaultValue","value","other","result","undefined","baseToString","baseToNumber"],"mappings":";;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,mBAAT,CAA6BC,QAA7B,EAAuCC,YAAvC,EAAqD;AACnD,WAAO,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AAC5B,UAAIC,MAAJ;;AACA,UAAIF,KAAK,KAAKG,SAAV,IAAuBF,KAAK,KAAKE,SAArC,EAAgD;AAC9C,eAAOJ,YAAP;AACD;;AACD,UAAIC,KAAK,KAAKG,SAAd,EAAyB;AACvBD,QAAAA,MAAM,GAAGF,KAAT;AACD;;AACD,UAAIC,KAAK,KAAKE,SAAd,EAAyB;AACvB,YAAID,MAAM,KAAKC,SAAf,EAA0B;AACxB,iBAAOF,KAAP;AACD;;AACD,YAAI,OAAOD,KAAP,IAAgB,QAAhB,IAA4B,OAAOC,KAAP,IAAgB,QAAhD,EAA0D;AACxDD,UAAAA,KAAK,GAAGI,YAAY,CAACJ,KAAD,CAApB;AACAC,UAAAA,KAAK,GAAGG,YAAY,CAACH,KAAD,CAApB;AACD,SAHD,MAGO;AACLD,UAAAA,KAAK,GAAGK,YAAY,CAACL,KAAD,CAApB;AACAC,UAAAA,KAAK,GAAGI,YAAY,CAACJ,KAAD,CAApB;AACD;;AACDC,QAAAA,MAAM,GAAGJ,QAAQ,CAACE,KAAD,EAAQC,KAAR,CAAjB;AACD;;AACD,aAAOC,MAAP;AACD,KAtBD;AAuBD;;;;AAnCMG,MAAAA,Y;;AACAD,MAAAA,Y;;;yBAoCQP,mB","sourcesContent":["import baseToNumber from './_baseToNumber.js';\nimport baseToString from './_baseToString.js';\n\n/**\n * Creates a function that performs a mathematical operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @param {number} [defaultValue] The value used for `undefined` arguments.\n * @returns {Function} Returns the new mathematical operation function.\n */\nfunction createMathOperation(operator, defaultValue) {\n  return function(value, other) {\n    var result;\n    if (value === undefined && other === undefined) {\n      return defaultValue;\n    }\n    if (value !== undefined) {\n      result = value;\n    }\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n      result = operator(value, other);\n    }\n    return result;\n  };\n}\n\nexport default createMathOperation;\n"]}