{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/secretsmanager-2017-10-17.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","BatchGetSecretValue","input","type","members","SecretIdList","member","Filters","shape","MaxResults","NextToken","output","SecretValues","ARN","Name","VersionId","SecretBinary","SecretString","VersionStages","CreatedDate","Errors","SecretId","ErrorCode","Message","CancelRotateSecret","required","CreateSecret","ClientRequestToken","idempotencyToken","Description","KmsKeyId","Tags","AddReplicaRegions","ForceOverwriteReplicaSecret","ReplicationStatus","DeleteResourcePolicy","DeleteSecret","RecoveryWindowInDays","ForceDeleteWithoutRecovery","DeletionDate","DescribeSecret","RotationEnabled","RotationLambdaARN","RotationRules","LastRotatedDate","LastChangedDate","LastAccessedDate","DeletedDate","NextRotationDate","VersionIdsToStages","OwningService","PrimaryRegion","GetRandomPassword","PasswordLength","ExcludeCharacters","ExcludeNumbers","ExcludePunctuation","ExcludeUppercase","ExcludeLowercase","IncludeSpace","RequireEachIncludedType","RandomPassword","sensitive","GetResourcePolicy","ResourcePolicy","GetSecretValue","VersionStage","ListSecretVersionIds","IncludeDeprecated","Versions","KmsKeyIds","ListSecrets","IncludePlannedDeletion","SortOrder","SecretList","SecretVersionsToStages","PutResourcePolicy","BlockPublicPolicy","PutSecretValue","RemoveRegionsFromReplication","RemoveReplicaRegions","ReplicateSecretToRegions","RestoreSecret","RotateSecret","RotateImmediately","StopReplicationToReplica","TagResource","UntagResource","TagKeys","UpdateSecret","UpdateSecretVersionStage","RemoveFromVersionId","MoveToVersionId","ValidateResourcePolicy","PolicyValidationPassed","ValidationErrors","CheckName","ErrorMessage","shapes","S4","Key","Values","Sh","Si","Sj","Sx","Value","S11","Region","S16","Status","StatusMessage","S1l","AutomaticallyAfterDays","Duration","ScheduleExpression","S1t","key","value"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2017-10-17',\n    endpointPrefix: 'secretsmanager',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceFullName: 'AWS Secrets Manager',\n    serviceId: 'Secrets Manager',\n    signatureVersion: 'v4',\n    signingName: 'secretsmanager',\n    targetPrefix: 'secretsmanager',\n    uid: 'secretsmanager-2017-10-17'\n  },\n  operations: {\n    BatchGetSecretValue: {\n      input: {\n        type: 'structure',\n        members: {\n          SecretIdList: {\n            type: 'list',\n            member: {}\n          },\n          Filters: {\n            shape: 'S4'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SecretValues: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ARN: {},\n                Name: {},\n                VersionId: {},\n                SecretBinary: {\n                  shape: 'Sh'\n                },\n                SecretString: {\n                  shape: 'Si'\n                },\n                VersionStages: {\n                  shape: 'Sj'\n                },\n                CreatedDate: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {},\n          Errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                SecretId: {},\n                ErrorCode: {},\n                Message: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    CancelRotateSecret: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {},\n          VersionId: {}\n        }\n      }\n    },\n    CreateSecret: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          Description: {},\n          KmsKeyId: {},\n          SecretBinary: {\n            shape: 'Sh'\n          },\n          SecretString: {\n            shape: 'Si'\n          },\n          Tags: {\n            shape: 'Sx'\n          },\n          AddReplicaRegions: {\n            shape: 'S11'\n          },\n          ForceOverwriteReplicaSecret: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {},\n          VersionId: {},\n          ReplicationStatus: {\n            shape: 'S16'\n          }\n        }\n      }\n    },\n    DeleteResourcePolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {}\n        }\n      }\n    },\n    DeleteSecret: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {},\n          RecoveryWindowInDays: {\n            type: 'long'\n          },\n          ForceDeleteWithoutRecovery: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {},\n          DeletionDate: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    DescribeSecret: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {},\n          Description: {},\n          KmsKeyId: {},\n          RotationEnabled: {\n            type: 'boolean'\n          },\n          RotationLambdaARN: {},\n          RotationRules: {\n            shape: 'S1l'\n          },\n          LastRotatedDate: {\n            type: 'timestamp'\n          },\n          LastChangedDate: {\n            type: 'timestamp'\n          },\n          LastAccessedDate: {\n            type: 'timestamp'\n          },\n          DeletedDate: {\n            type: 'timestamp'\n          },\n          NextRotationDate: {\n            type: 'timestamp'\n          },\n          Tags: {\n            shape: 'Sx'\n          },\n          VersionIdsToStages: {\n            shape: 'S1t'\n          },\n          OwningService: {},\n          CreatedDate: {\n            type: 'timestamp'\n          },\n          PrimaryRegion: {},\n          ReplicationStatus: {\n            shape: 'S16'\n          }\n        }\n      }\n    },\n    GetRandomPassword: {\n      input: {\n        type: 'structure',\n        members: {\n          PasswordLength: {\n            type: 'long'\n          },\n          ExcludeCharacters: {},\n          ExcludeNumbers: {\n            type: 'boolean'\n          },\n          ExcludePunctuation: {\n            type: 'boolean'\n          },\n          ExcludeUppercase: {\n            type: 'boolean'\n          },\n          ExcludeLowercase: {\n            type: 'boolean'\n          },\n          IncludeSpace: {\n            type: 'boolean'\n          },\n          RequireEachIncludedType: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RandomPassword: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      }\n    },\n    GetResourcePolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {},\n          ResourcePolicy: {}\n        }\n      }\n    },\n    GetSecretValue: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {},\n          VersionId: {},\n          VersionStage: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {},\n          VersionId: {},\n          SecretBinary: {\n            shape: 'Sh'\n          },\n          SecretString: {\n            shape: 'Si'\n          },\n          VersionStages: {\n            shape: 'Sj'\n          },\n          CreatedDate: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    ListSecretVersionIds: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          IncludeDeprecated: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Versions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                VersionId: {},\n                VersionStages: {\n                  shape: 'Sj'\n                },\n                LastAccessedDate: {\n                  type: 'timestamp'\n                },\n                CreatedDate: {\n                  type: 'timestamp'\n                },\n                KmsKeyIds: {\n                  type: 'list',\n                  member: {}\n                }\n              }\n            }\n          },\n          NextToken: {},\n          ARN: {},\n          Name: {}\n        }\n      }\n    },\n    ListSecrets: {\n      input: {\n        type: 'structure',\n        members: {\n          IncludePlannedDeletion: {\n            type: 'boolean'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          Filters: {\n            shape: 'S4'\n          },\n          SortOrder: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          SecretList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ARN: {},\n                Name: {},\n                Description: {},\n                KmsKeyId: {},\n                RotationEnabled: {\n                  type: 'boolean'\n                },\n                RotationLambdaARN: {},\n                RotationRules: {\n                  shape: 'S1l'\n                },\n                LastRotatedDate: {\n                  type: 'timestamp'\n                },\n                LastChangedDate: {\n                  type: 'timestamp'\n                },\n                LastAccessedDate: {\n                  type: 'timestamp'\n                },\n                DeletedDate: {\n                  type: 'timestamp'\n                },\n                NextRotationDate: {\n                  type: 'timestamp'\n                },\n                Tags: {\n                  shape: 'Sx'\n                },\n                SecretVersionsToStages: {\n                  shape: 'S1t'\n                },\n                OwningService: {},\n                CreatedDate: {\n                  type: 'timestamp'\n                },\n                PrimaryRegion: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    PutResourcePolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId',\n          'ResourcePolicy'\n        ],\n        members: {\n          SecretId: {},\n          ResourcePolicy: {},\n          BlockPublicPolicy: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {}\n        }\n      }\n    },\n    PutSecretValue: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          SecretBinary: {\n            shape: 'Sh'\n          },\n          SecretString: {\n            shape: 'Si'\n          },\n          VersionStages: {\n            shape: 'Sj'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {},\n          VersionId: {},\n          VersionStages: {\n            shape: 'Sj'\n          }\n        }\n      }\n    },\n    RemoveRegionsFromReplication: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId',\n          'RemoveReplicaRegions'\n        ],\n        members: {\n          SecretId: {},\n          RemoveReplicaRegions: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          ReplicationStatus: {\n            shape: 'S16'\n          }\n        }\n      }\n    },\n    ReplicateSecretToRegions: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId',\n          'AddReplicaRegions'\n        ],\n        members: {\n          SecretId: {},\n          AddReplicaRegions: {\n            shape: 'S11'\n          },\n          ForceOverwriteReplicaSecret: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          ReplicationStatus: {\n            shape: 'S16'\n          }\n        }\n      }\n    },\n    RestoreSecret: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {}\n        }\n      }\n    },\n    RotateSecret: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          RotationLambdaARN: {},\n          RotationRules: {\n            shape: 'S1l'\n          },\n          RotateImmediately: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {},\n          VersionId: {}\n        }\n      }\n    },\n    StopReplicationToReplica: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {}\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId',\n          'Tags'\n        ],\n        members: {\n          SecretId: {},\n          Tags: {\n            shape: 'Sx'\n          }\n        }\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId',\n          'TagKeys'\n        ],\n        members: {\n          SecretId: {},\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    UpdateSecret: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId'\n        ],\n        members: {\n          SecretId: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          Description: {},\n          KmsKeyId: {},\n          SecretBinary: {\n            shape: 'Sh'\n          },\n          SecretString: {\n            shape: 'Si'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {},\n          VersionId: {}\n        }\n      }\n    },\n    UpdateSecretVersionStage: {\n      input: {\n        type: 'structure',\n        required: [\n          'SecretId',\n          'VersionStage'\n        ],\n        members: {\n          SecretId: {},\n          VersionStage: {},\n          RemoveFromVersionId: {},\n          MoveToVersionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ARN: {},\n          Name: {}\n        }\n      }\n    },\n    ValidateResourcePolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourcePolicy'\n        ],\n        members: {\n          SecretId: {},\n          ResourcePolicy: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PolicyValidationPassed: {\n            type: 'boolean'\n          },\n          ValidationErrors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CheckName: {},\n                ErrorMessage: {}\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Key: {},\n          Values: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    Sh: {\n      type: 'blob',\n      sensitive: true\n    },\n    Si: {\n      type: 'string',\n      sensitive: true\n    },\n    Sj: {\n      type: 'list',\n      member: {}\n    },\n    Sx: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    S11: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Region: {},\n          KmsKeyId: {}\n        }\n      }\n    },\n    S16: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Region: {},\n          KmsKeyId: {},\n          Status: {},\n          StatusMessage: {},\n          LastAccessedDate: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    S1l: {\n      type: 'structure',\n      members: {\n        AutomaticallyAfterDays: {\n          type: 'long'\n        },\n        Duration: {},\n        ScheduleExpression: {}\n      }\n    },\n    S1t: {\n      type: 'map',\n      key: {},\n      value: {\n        shape: 'Sj'\n      }\n    }\n  }\n}"]}