{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/managedblockchain-2018-09-24.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateAccessor","http","requestUri","input","type","required","members","ClientRequestToken","idempotencyToken","AccessorType","Tags","shape","NetworkType","output","AccessorId","BillingToken","CreateMember","InvitationId","NetworkId","location","locationName","MemberConfiguration","MemberId","CreateNetwork","Name","Description","Framework","FrameworkVersion","FrameworkConfiguration","Fabric","Edition","VotingPolicy","CreateNode","NodeConfiguration","InstanceType","AvailabilityZone","LogPublishingConfiguration","StateDB","NodeId","CreateProposal","Actions","ProposalId","DeleteAccessor","method","DeleteMember","DeleteNode","GetAccessor","Accessor","Id","Type","Status","CreationDate","Arn","GetMember","Member","FrameworkAttributes","AdminUsername","CaEndpoint","KmsKeyArn","GetNetwork","Network","OrderingServiceEndpoint","Ethereum","ChainId","VpcEndpointServiceName","GetNode","Node","PeerEndpoint","PeerEventEndpoint","HttpEndpoint","WebSocketEndpoint","GetProposal","Proposal","ProposedByMemberId","ProposedByMemberName","ExpirationDate","YesVoteCount","NoVoteCount","OutstandingVoteCount","ListAccessors","MaxResults","NextToken","Accessors","member","ListInvitations","Invitations","NetworkSummary","ListMembers","IsOwned","Members","ListNetworks","Networks","ListNodes","Nodes","ListProposalVotes","ProposalVotes","Vote","MemberName","ListProposals","Proposals","ListTagsForResource","ResourceArn","RejectInvitation","TagResource","UntagResource","TagKeys","UpdateMember","UpdateNode","VoteOnProposal","VoterMemberId","shapes","S4","key","value","Sc","AdminPassword","sensitive","Sj","CaLogs","Sl","Cloudwatch","Enabled","Sx","ApprovalThresholdPolicy","ThresholdPercentage","ProposalDurationInHours","ThresholdComparator","S17","ChaincodeLogs","PeerLogs","S1c","Principal","Removals","S1t","timestampFormat","S1u","S2x"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,mBAFR;AAGRC,UAAAA,WAAW,EAAE,KAHL;AAIRC,UAAAA,QAAQ,EAAE,WAJF;AAKRC,UAAAA,SAAS,EAAE,CACT,WADS,CALH;AAQRC,UAAAA,mBAAmB,EAAE,mBARb;AASRC,UAAAA,eAAe,EAAE,2BATT;AAURC,UAAAA,SAAS,EAAE,mBAVH;AAWRC,UAAAA,gBAAgB,EAAE,IAXV;AAYRC,UAAAA,WAAW,EAAE,mBAZL;AAaRC,UAAAA,GAAG,EAAE;AAbG,SAFG;AAiBbC,QAAAA,UAAU,EAAE;AACVC,UAAAA,cAAc,EAAE;AACdC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE;AADR,aADQ;AAIdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,EAER,cAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,kBAAkB,EAAE;AAClBC,kBAAAA,gBAAgB,EAAE;AADA,iBADb;AAIPC,gBAAAA,YAAY,EAAE,EAJP;AAKPC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH,iBALC;AAQPC,gBAAAA,WAAW,EAAE;AARN;AANJ,aAJO;AAqBdC,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPQ,gBAAAA,UAAU,EAAE,EADL;AAEPC,gBAAAA,YAAY,EAAE,EAFP;AAGPH,gBAAAA,WAAW,EAAE;AAHN;AAFH;AArBM,WADN;AA+BVI,UAAAA,YAAY,EAAE;AACZf,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE;AADR,aADM;AAIZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,EAER,cAFQ,EAGR,WAHQ,EAIR,qBAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,kBAAkB,EAAE;AAClBC,kBAAAA,gBAAgB,EAAE;AADA,iBADb;AAIPS,gBAAAA,YAAY,EAAE,EAJP;AAKPC,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBALJ;AASPC,gBAAAA,mBAAmB,EAAE;AACnBV,kBAAAA,KAAK,EAAE;AADY;AATd;AARJ,aAJK;AA0BZE,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPgB,gBAAAA,QAAQ,EAAE;AADH;AAFH;AA1BI,WA/BJ;AAgEVC,UAAAA,aAAa,EAAE;AACbtB,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE;AADR,aADO;AAIbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,EAER,MAFQ,EAGR,WAHQ,EAIR,kBAJQ,EAKR,cALQ,EAMR,qBANQ,CAFL;AAULC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,kBAAkB,EAAE;AAClBC,kBAAAA,gBAAgB,EAAE;AADA,iBADb;AAIPgB,gBAAAA,IAAI,EAAE,EAJC;AAKPC,gBAAAA,WAAW,EAAE,EALN;AAMPC,gBAAAA,SAAS,EAAE,EANJ;AAOPC,gBAAAA,gBAAgB,EAAE,EAPX;AAQPC,gBAAAA,sBAAsB,EAAE;AACtBxB,kBAAAA,IAAI,EAAE,WADgB;AAEtBE,kBAAAA,OAAO,EAAE;AACPuB,oBAAAA,MAAM,EAAE;AACNzB,sBAAAA,IAAI,EAAE,WADA;AAENC,sBAAAA,QAAQ,EAAE,CACR,SADQ,CAFJ;AAKNC,sBAAAA,OAAO,EAAE;AACPwB,wBAAAA,OAAO,EAAE;AADF;AALH;AADD;AAFa,iBARjB;AAsBPC,gBAAAA,YAAY,EAAE;AACZpB,kBAAAA,KAAK,EAAE;AADK,iBAtBP;AAyBPU,gBAAAA,mBAAmB,EAAE;AACnBV,kBAAAA,KAAK,EAAE;AADY,iBAzBd;AA4BPD,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH;AA5BC;AAVJ,aAJM;AA+CbE,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE,EADJ;AAEPI,gBAAAA,QAAQ,EAAE;AAFH;AAFH;AA/CK,WAhEL;AAuHVU,UAAAA,UAAU,EAAE;AACV/B,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE;AADR,aADI;AAIVC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,EAER,WAFQ,EAGR,mBAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,kBAAkB,EAAE;AAClBC,kBAAAA,gBAAgB,EAAE;AADA,iBADb;AAIPU,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBAJJ;AAQPE,gBAAAA,QAAQ,EAAE,EARH;AASPW,gBAAAA,iBAAiB,EAAE;AACjB7B,kBAAAA,IAAI,EAAE,WADW;AAEjBC,kBAAAA,QAAQ,EAAE,CACR,cADQ,CAFO;AAKjBC,kBAAAA,OAAO,EAAE;AACP4B,oBAAAA,YAAY,EAAE,EADP;AAEPC,oBAAAA,gBAAgB,EAAE,EAFX;AAGPC,oBAAAA,0BAA0B,EAAE;AAC1BzB,sBAAAA,KAAK,EAAE;AADmB,qBAHrB;AAMP0B,oBAAAA,OAAO,EAAE;AANF;AALQ,iBATZ;AAuBP3B,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH;AAvBC;AAPJ,aAJG;AAuCVE,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPgC,gBAAAA,MAAM,EAAE;AADD;AAFH;AAvCE,WAvHF;AAqKVC,UAAAA,cAAc,EAAE;AACdtC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE;AADR,aADQ;AAIdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,EAER,WAFQ,EAGR,UAHQ,EAIR,SAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,kBAAkB,EAAE;AAClBC,kBAAAA,gBAAgB,EAAE;AADA,iBADb;AAIPU,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBAJJ;AAQPE,gBAAAA,QAAQ,EAAE,EARH;AASPkB,gBAAAA,OAAO,EAAE;AACP7B,kBAAAA,KAAK,EAAE;AADA,iBATF;AAYPc,gBAAAA,WAAW,EAAE,EAZN;AAaPf,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH;AAbC;AARJ,aAJO;AA8BdE,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmC,gBAAAA,UAAU,EAAE;AADL;AAFH;AA9BM,WArKN;AA0MVC,UAAAA,cAAc,EAAE;AACdzC,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,QADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADQ;AAKdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPQ,gBAAAA,UAAU,EAAE;AACVK,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ;AADL;AALJ,aALO;AAiBdP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAjBM,WA1MN;AAgOVsC,UAAAA,YAAY,EAAE;AACZ3C,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,QADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADM;AAKZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPE,gBAAAA,QAAQ,EAAE;AACRH,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN;AALH;AANJ,aALK;AAsBZP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAtBI,WAhOJ;AA2PVuC,UAAAA,UAAU,EAAE;AACV5C,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,QADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADI;AAKVC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,QAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPE,gBAAAA,QAAQ,EAAE;AACRH,kBAAAA,QAAQ,EAAE,aADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASPkB,gBAAAA,MAAM,EAAE;AACNnB,kBAAAA,QAAQ,EAAE,KADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR;AATD;AANJ,aALG;AA0BVP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AA1BE,WA3PF;AA0RVwC,UAAAA,WAAW,EAAE;AACX7C,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPQ,gBAAAA,UAAU,EAAE;AACVK,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ;AADL;AALJ,aALI;AAiBXP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPyC,gBAAAA,QAAQ,EAAE;AACR3C,kBAAAA,IAAI,EAAE,WADE;AAERE,kBAAAA,OAAO,EAAE;AACP0C,oBAAAA,EAAE,EAAE,EADG;AAEPC,oBAAAA,IAAI,EAAE,EAFC;AAGPlC,oBAAAA,YAAY,EAAE,EAHP;AAIPmC,oBAAAA,MAAM,EAAE,EAJD;AAKPC,oBAAAA,YAAY,EAAE;AACZxC,sBAAAA,KAAK,EAAE;AADK,qBALP;AAQPyC,oBAAAA,GAAG,EAAE,EARE;AASP1C,oBAAAA,IAAI,EAAE;AACJC,sBAAAA,KAAK,EAAE;AADH,qBATC;AAYPC,oBAAAA,WAAW,EAAE;AAZN;AAFD;AADH;AAFH;AAjBG,WA1RH;AAkUVyC,UAAAA,SAAS,EAAE;AACTpD,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADG;AAKTC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPE,gBAAAA,QAAQ,EAAE;AACRH,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN;AALH;AANJ,aALE;AAsBTP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPgD,gBAAAA,MAAM,EAAE;AACNlD,kBAAAA,IAAI,EAAE,WADA;AAENE,kBAAAA,OAAO,EAAE;AACPY,oBAAAA,SAAS,EAAE,EADJ;AAEP8B,oBAAAA,EAAE,EAAE,EAFG;AAGPxB,oBAAAA,IAAI,EAAE,EAHC;AAIPC,oBAAAA,WAAW,EAAE,EAJN;AAKP8B,oBAAAA,mBAAmB,EAAE;AACnBnD,sBAAAA,IAAI,EAAE,WADa;AAEnBE,sBAAAA,OAAO,EAAE;AACPuB,wBAAAA,MAAM,EAAE;AACNzB,0BAAAA,IAAI,EAAE,WADA;AAENE,0BAAAA,OAAO,EAAE;AACPkD,4BAAAA,aAAa,EAAE,EADR;AAEPC,4BAAAA,UAAU,EAAE;AAFL;AAFH;AADD;AAFU,qBALd;AAiBPrB,oBAAAA,0BAA0B,EAAE;AAC1BzB,sBAAAA,KAAK,EAAE;AADmB,qBAjBrB;AAoBPuC,oBAAAA,MAAM,EAAE,EApBD;AAqBPC,oBAAAA,YAAY,EAAE;AACZxC,sBAAAA,KAAK,EAAE;AADK,qBArBP;AAwBPD,oBAAAA,IAAI,EAAE;AACJC,sBAAAA,KAAK,EAAE;AADH,qBAxBC;AA2BPyC,oBAAAA,GAAG,EAAE,EA3BE;AA4BPM,oBAAAA,SAAS,EAAE;AA5BJ;AAFH;AADD;AAFH;AAtBC,WAlUD;AA+XVC,UAAAA,UAAU,EAAE;AACV1D,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADI;AAKVC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AADJ;AALJ,aALG;AAiBVP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPsD,gBAAAA,OAAO,EAAE;AACPxD,kBAAAA,IAAI,EAAE,WADC;AAEPE,kBAAAA,OAAO,EAAE;AACP0C,oBAAAA,EAAE,EAAE,EADG;AAEPxB,oBAAAA,IAAI,EAAE,EAFC;AAGPC,oBAAAA,WAAW,EAAE,EAHN;AAIPC,oBAAAA,SAAS,EAAE,EAJJ;AAKPC,oBAAAA,gBAAgB,EAAE,EALX;AAMP4B,oBAAAA,mBAAmB,EAAE;AACnBnD,sBAAAA,IAAI,EAAE,WADa;AAEnBE,sBAAAA,OAAO,EAAE;AACPuB,wBAAAA,MAAM,EAAE;AACNzB,0BAAAA,IAAI,EAAE,WADA;AAENE,0BAAAA,OAAO,EAAE;AACPuD,4BAAAA,uBAAuB,EAAE,EADlB;AAEP/B,4BAAAA,OAAO,EAAE;AAFF;AAFH,yBADD;AAQPgC,wBAAAA,QAAQ,EAAE;AACR1D,0BAAAA,IAAI,EAAE,WADE;AAERE,0BAAAA,OAAO,EAAE;AACPyD,4BAAAA,OAAO,EAAE;AADF;AAFD;AARH;AAFU,qBANd;AAwBPC,oBAAAA,sBAAsB,EAAE,EAxBjB;AAyBPjC,oBAAAA,YAAY,EAAE;AACZpB,sBAAAA,KAAK,EAAE;AADK,qBAzBP;AA4BPuC,oBAAAA,MAAM,EAAE,EA5BD;AA6BPC,oBAAAA,YAAY,EAAE;AACZxC,sBAAAA,KAAK,EAAE;AADK,qBA7BP;AAgCPD,oBAAAA,IAAI,EAAE;AACJC,sBAAAA,KAAK,EAAE;AADH,qBAhCC;AAmCPyC,oBAAAA,GAAG,EAAE;AAnCE;AAFF;AADF;AAFH;AAjBE,WA/XF;AA8bVa,UAAAA,OAAO,EAAE;AACPhE,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADC;AAKPC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,QAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPE,gBAAAA,QAAQ,EAAE;AACRH,kBAAAA,QAAQ,EAAE,aADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASPkB,gBAAAA,MAAM,EAAE;AACNnB,kBAAAA,QAAQ,EAAE,KADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR;AATD;AANJ,aALA;AA0BPP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP4D,gBAAAA,IAAI,EAAE;AACJ9D,kBAAAA,IAAI,EAAE,WADF;AAEJE,kBAAAA,OAAO,EAAE;AACPY,oBAAAA,SAAS,EAAE,EADJ;AAEPI,oBAAAA,QAAQ,EAAE,EAFH;AAGP0B,oBAAAA,EAAE,EAAE,EAHG;AAIPd,oBAAAA,YAAY,EAAE,EAJP;AAKPC,oBAAAA,gBAAgB,EAAE,EALX;AAMPoB,oBAAAA,mBAAmB,EAAE;AACnBnD,sBAAAA,IAAI,EAAE,WADa;AAEnBE,sBAAAA,OAAO,EAAE;AACPuB,wBAAAA,MAAM,EAAE;AACNzB,0BAAAA,IAAI,EAAE,WADA;AAENE,0BAAAA,OAAO,EAAE;AACP6D,4BAAAA,YAAY,EAAE,EADP;AAEPC,4BAAAA,iBAAiB,EAAE;AAFZ;AAFH,yBADD;AAQPN,wBAAAA,QAAQ,EAAE;AACR1D,0BAAAA,IAAI,EAAE,WADE;AAERE,0BAAAA,OAAO,EAAE;AACP+D,4BAAAA,YAAY,EAAE,EADP;AAEPC,4BAAAA,iBAAiB,EAAE;AAFZ;AAFD;AARH;AAFU,qBANd;AAyBPlC,oBAAAA,0BAA0B,EAAE;AAC1BzB,sBAAAA,KAAK,EAAE;AADmB,qBAzBrB;AA4BP0B,oBAAAA,OAAO,EAAE,EA5BF;AA6BPa,oBAAAA,MAAM,EAAE,EA7BD;AA8BPC,oBAAAA,YAAY,EAAE;AACZxC,sBAAAA,KAAK,EAAE;AADK,qBA9BP;AAiCPD,oBAAAA,IAAI,EAAE;AACJC,sBAAAA,KAAK,EAAE;AADH,qBAjCC;AAoCPyC,oBAAAA,GAAG,EAAE,EApCE;AAqCPM,oBAAAA,SAAS,EAAE;AArCJ;AAFL;AADC;AAFH;AA1BD,WA9bC;AAwgBVa,UAAAA,WAAW,EAAE;AACXtE,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,YAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPqB,gBAAAA,UAAU,EAAE;AACVtB,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ;AALL;AANJ,aALI;AAsBXP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPkE,gBAAAA,QAAQ,EAAE;AACRpE,kBAAAA,IAAI,EAAE,WADE;AAERE,kBAAAA,OAAO,EAAE;AACPmC,oBAAAA,UAAU,EAAE,EADL;AAEPvB,oBAAAA,SAAS,EAAE,EAFJ;AAGPO,oBAAAA,WAAW,EAAE,EAHN;AAIPe,oBAAAA,OAAO,EAAE;AACP7B,sBAAAA,KAAK,EAAE;AADA,qBAJF;AAOP8D,oBAAAA,kBAAkB,EAAE,EAPb;AAQPC,oBAAAA,oBAAoB,EAAE,EARf;AASPxB,oBAAAA,MAAM,EAAE,EATD;AAUPC,oBAAAA,YAAY,EAAE;AACZxC,sBAAAA,KAAK,EAAE;AADK,qBAVP;AAaPgE,oBAAAA,cAAc,EAAE;AACdhE,sBAAAA,KAAK,EAAE;AADO,qBAbT;AAgBPiE,oBAAAA,YAAY,EAAE;AACZxE,sBAAAA,IAAI,EAAE;AADM,qBAhBP;AAmBPyE,oBAAAA,WAAW,EAAE;AACXzE,sBAAAA,IAAI,EAAE;AADK,qBAnBN;AAsBP0E,oBAAAA,oBAAoB,EAAE;AACpB1E,sBAAAA,IAAI,EAAE;AADc,qBAtBf;AAyBPM,oBAAAA,IAAI,EAAE;AACJC,sBAAAA,KAAK,EAAE;AADH,qBAzBC;AA4BPyC,oBAAAA,GAAG,EAAE;AA5BE;AAFD;AADH;AAFH;AAtBG,WAxgBH;AAqkBV2B,UAAAA,aAAa,EAAE;AACb9E,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADO;AAKbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP0E,gBAAAA,UAAU,EAAE;AACV7D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBADL;AAMP6E,gBAAAA,SAAS,EAAE;AACT9D,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBANJ;AAUPR,gBAAAA,WAAW,EAAE;AACXO,kBAAAA,QAAQ,EAAE,aADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AAVN;AAFJ,aALM;AAuBbP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP4E,gBAAAA,SAAS,EAAE;AACT9E,kBAAAA,IAAI,EAAE,MADG;AAET+E,kBAAAA,MAAM,EAAE;AACN/E,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP0C,sBAAAA,EAAE,EAAE,EADG;AAEPC,sBAAAA,IAAI,EAAE,EAFC;AAGPC,sBAAAA,MAAM,EAAE,EAHD;AAIPC,sBAAAA,YAAY,EAAE;AACZxC,wBAAAA,KAAK,EAAE;AADK,uBAJP;AAOPyC,sBAAAA,GAAG,EAAE,EAPE;AAQPxC,sBAAAA,WAAW,EAAE;AARN;AAFH;AAFC,iBADJ;AAiBPqE,gBAAAA,SAAS,EAAE;AAjBJ;AAFH;AAvBK,WArkBL;AAmnBVG,UAAAA,eAAe,EAAE;AACfnF,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADS;AAKfC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACP0E,gBAAAA,UAAU,EAAE;AACV7D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBADL;AAMP6E,gBAAAA,SAAS,EAAE;AACT9D,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AANJ;AAFJ,aALQ;AAmBfP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP+E,gBAAAA,WAAW,EAAE;AACXjF,kBAAAA,IAAI,EAAE,MADK;AAEX+E,kBAAAA,MAAM,EAAE;AACN/E,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPW,sBAAAA,YAAY,EAAE,EADP;AAEPkC,sBAAAA,YAAY,EAAE;AACZxC,wBAAAA,KAAK,EAAE;AADK,uBAFP;AAKPgE,sBAAAA,cAAc,EAAE;AACdhE,wBAAAA,KAAK,EAAE;AADO,uBALT;AAQPuC,sBAAAA,MAAM,EAAE,EARD;AASPoC,sBAAAA,cAAc,EAAE;AACd3E,wBAAAA,KAAK,EAAE;AADO,uBATT;AAYPyC,sBAAAA,GAAG,EAAE;AAZE;AAFH;AAFG,iBADN;AAqBP6B,gBAAAA,SAAS,EAAE;AArBJ;AAFH;AAnBO,WAnnBP;AAiqBVM,UAAAA,WAAW,EAAE;AACXtF,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPI,gBAAAA,IAAI,EAAE;AACJL,kBAAAA,QAAQ,EAAE,aADN;AAEJC,kBAAAA,YAAY,EAAE;AAFV,iBALC;AASP8B,gBAAAA,MAAM,EAAE;AACN/B,kBAAAA,QAAQ,EAAE,aADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR,iBATD;AAaPoE,gBAAAA,OAAO,EAAE;AACPrE,kBAAAA,QAAQ,EAAE,aADH;AAEPC,kBAAAA,YAAY,EAAE,SAFP;AAGPhB,kBAAAA,IAAI,EAAE;AAHC,iBAbF;AAkBP4E,gBAAAA,UAAU,EAAE;AACV7D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBAlBL;AAuBP6E,gBAAAA,SAAS,EAAE;AACT9D,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAvBJ;AALJ,aALI;AAuCXP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPmF,gBAAAA,OAAO,EAAE;AACPrF,kBAAAA,IAAI,EAAE,MADC;AAEP+E,kBAAAA,MAAM,EAAE;AACN/E,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP0C,sBAAAA,EAAE,EAAE,EADG;AAEPxB,sBAAAA,IAAI,EAAE,EAFC;AAGPC,sBAAAA,WAAW,EAAE,EAHN;AAIPyB,sBAAAA,MAAM,EAAE,EAJD;AAKPC,sBAAAA,YAAY,EAAE;AACZxC,wBAAAA,KAAK,EAAE;AADK,uBALP;AAQP6E,sBAAAA,OAAO,EAAE;AACPpF,wBAAAA,IAAI,EAAE;AADC,uBARF;AAWPgD,sBAAAA,GAAG,EAAE;AAXE;AAFH;AAFD,iBADF;AAoBP6B,gBAAAA,SAAS,EAAE;AApBJ;AAFH;AAvCG,WAjqBH;AAkuBVS,UAAAA,YAAY,EAAE;AACZzF,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADM;AAKZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPkB,gBAAAA,IAAI,EAAE;AACJL,kBAAAA,QAAQ,EAAE,aADN;AAEJC,kBAAAA,YAAY,EAAE;AAFV,iBADC;AAKPM,gBAAAA,SAAS,EAAE;AACTP,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBALJ;AASP8B,gBAAAA,MAAM,EAAE;AACN/B,kBAAAA,QAAQ,EAAE,aADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR,iBATD;AAaP4D,gBAAAA,UAAU,EAAE;AACV7D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBAbL;AAkBP6E,gBAAAA,SAAS,EAAE;AACT9D,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAlBJ;AAFJ,aALK;AA+BZP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqF,gBAAAA,QAAQ,EAAE;AACRvF,kBAAAA,IAAI,EAAE,MADE;AAER+E,kBAAAA,MAAM,EAAE;AACNxE,oBAAAA,KAAK,EAAE;AADD;AAFA,iBADH;AAOPsE,gBAAAA,SAAS,EAAE;AAPJ;AAFH;AA/BI,WAluBJ;AA8wBVW,UAAAA,SAAS,EAAE;AACT3F,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADG;AAKTC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPE,gBAAAA,QAAQ,EAAE;AACRH,kBAAAA,QAAQ,EAAE,aADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASP8B,gBAAAA,MAAM,EAAE;AACN/B,kBAAAA,QAAQ,EAAE,aADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR,iBATD;AAaP4D,gBAAAA,UAAU,EAAE;AACV7D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBAbL;AAkBP6E,gBAAAA,SAAS,EAAE;AACT9D,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAlBJ;AALJ,aALE;AAkCTP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPuF,gBAAAA,KAAK,EAAE;AACLzF,kBAAAA,IAAI,EAAE,MADD;AAEL+E,kBAAAA,MAAM,EAAE;AACN/E,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP0C,sBAAAA,EAAE,EAAE,EADG;AAEPE,sBAAAA,MAAM,EAAE,EAFD;AAGPC,sBAAAA,YAAY,EAAE;AACZxC,wBAAAA,KAAK,EAAE;AADK,uBAHP;AAMPwB,sBAAAA,gBAAgB,EAAE,EANX;AAOPD,sBAAAA,YAAY,EAAE,EAPP;AAQPkB,sBAAAA,GAAG,EAAE;AARE;AAFH;AAFH,iBADA;AAiBP6B,gBAAAA,SAAS,EAAE;AAjBJ;AAFH;AAlCC,WA9wBD;AAu0BVa,UAAAA,iBAAiB,EAAE;AACjB7F,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADW;AAKjBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,YAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPqB,gBAAAA,UAAU,EAAE;AACVtB,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ,iBALL;AASP4D,gBAAAA,UAAU,EAAE;AACV7D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBATL;AAcP6E,gBAAAA,SAAS,EAAE;AACT9D,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAdJ;AANJ,aALU;AA+BjBP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPyF,gBAAAA,aAAa,EAAE;AACb3F,kBAAAA,IAAI,EAAE,MADO;AAEb+E,kBAAAA,MAAM,EAAE;AACN/E,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACP0F,sBAAAA,IAAI,EAAE,EADC;AAEPC,sBAAAA,UAAU,EAAE,EAFL;AAGP3E,sBAAAA,QAAQ,EAAE;AAHH;AAFH;AAFK,iBADR;AAYP2D,gBAAAA,SAAS,EAAE;AAZJ;AAFH;AA/BS,WAv0BT;AAw3BViB,UAAAA,aAAa,EAAE;AACbjG,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADO;AAKbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKP4D,gBAAAA,UAAU,EAAE;AACV7D,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVhB,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUP6E,gBAAAA,SAAS,EAAE;AACT9D,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL;AAVJ;AALJ,aALM;AA0BbP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP6F,gBAAAA,SAAS,EAAE;AACT/F,kBAAAA,IAAI,EAAE,MADG;AAET+E,kBAAAA,MAAM,EAAE;AACN/E,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPmC,sBAAAA,UAAU,EAAE,EADL;AAEPhB,sBAAAA,WAAW,EAAE,EAFN;AAGPgD,sBAAAA,kBAAkB,EAAE,EAHb;AAIPC,sBAAAA,oBAAoB,EAAE,EAJf;AAKPxB,sBAAAA,MAAM,EAAE,EALD;AAMPC,sBAAAA,YAAY,EAAE;AACZxC,wBAAAA,KAAK,EAAE;AADK,uBANP;AASPgE,sBAAAA,cAAc,EAAE;AACdhE,wBAAAA,KAAK,EAAE;AADO,uBATT;AAYPyC,sBAAAA,GAAG,EAAE;AAZE;AAFH;AAFC,iBADJ;AAqBP6B,gBAAAA,SAAS,EAAE;AArBJ;AAFH;AA1BK,WAx3BL;AA66BVmB,UAAAA,mBAAmB,EAAE;AACnBnG,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,KADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADa;AAKnBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACP+F,gBAAAA,WAAW,EAAE;AACXlF,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AADN;AALJ,aALY;AAiBnBP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPI,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH;AADC;AAFH;AAjBW,WA76BX;AAu8BV2F,UAAAA,gBAAgB,EAAE;AAChBrG,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,QADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADU;AAKhBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPW,gBAAAA,YAAY,EAAE;AACZE,kBAAAA,QAAQ,EAAE,KADE;AAEZC,kBAAAA,YAAY,EAAE;AAFF;AADP;AALJ,aALS;AAiBhBP,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAjBQ,WAv8BR;AA69BViG,UAAAA,WAAW,EAAE;AACXtG,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE;AADR,aADK;AAIXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,MAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACP+F,gBAAAA,WAAW,EAAE;AACXlF,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPV,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH;AALC;AANJ,aAJI;AAoBXE,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AApBG,WA79BH;AAs/BVkG,UAAAA,aAAa,EAAE;AACbvG,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,QADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADO;AAKbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACP+F,gBAAAA,WAAW,EAAE;AACXlF,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPqF,gBAAAA,OAAO,EAAE;AACPtF,kBAAAA,QAAQ,EAAE,aADH;AAEPC,kBAAAA,YAAY,EAAE,SAFP;AAGPhB,kBAAAA,IAAI,EAAE,MAHC;AAIP+E,kBAAAA,MAAM,EAAE;AAJD;AALF;AANJ,aALM;AAwBbtE,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAxBK,WAt/BL;AAmhCVoG,UAAAA,YAAY,EAAE;AACZzG,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,OADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADM;AAKZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPE,gBAAAA,QAAQ,EAAE;AACRH,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASPgB,gBAAAA,0BAA0B,EAAE;AAC1BzB,kBAAAA,KAAK,EAAE;AADmB;AATrB;AANJ,aALK;AAyBZE,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAzBI,WAnhCJ;AAijCVqG,UAAAA,UAAU,EAAE;AACV1G,YAAAA,IAAI,EAAE;AACJ0C,cAAAA,MAAM,EAAE,OADJ;AAEJzC,cAAAA,UAAU,EAAE;AAFR,aADI;AAKVC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,QAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPE,gBAAAA,QAAQ,EAAE,EALH;AAMPgB,gBAAAA,MAAM,EAAE;AACNnB,kBAAAA,QAAQ,EAAE,KADJ;AAENC,kBAAAA,YAAY,EAAE;AAFR,iBAND;AAUPgB,gBAAAA,0BAA0B,EAAE;AAC1BzB,kBAAAA,KAAK,EAAE;AADmB;AAVrB;AANJ,aALG;AA0BVE,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AA1BE,WAjjCF;AAglCVsG,UAAAA,cAAc,EAAE;AACd3G,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE;AADR,aADQ;AAIdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,YAFQ,EAGR,eAHQ,EAIR,MAJQ,CAFL;AAQLC,cAAAA,OAAO,EAAE;AACPY,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAE,KADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPqB,gBAAAA,UAAU,EAAE;AACVtB,kBAAAA,QAAQ,EAAE,KADA;AAEVC,kBAAAA,YAAY,EAAE;AAFJ,iBALL;AASPyF,gBAAAA,aAAa,EAAE,EATR;AAUPb,gBAAAA,IAAI,EAAE;AAVC;AARJ,aAJO;AAyBdnF,YAAAA,MAAM,EAAE;AACNT,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AAzBM;AAhlCN,SAjBC;AAgoCbwG,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACF3G,YAAAA,IAAI,EAAE,KADJ;AAEF4G,YAAAA,GAAG,EAAE,EAFH;AAGFC,YAAAA,KAAK,EAAE;AAHL,WADE;AAMNC,UAAAA,EAAE,EAAE;AACF9G,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,MADQ,EAER,wBAFQ,CAFR;AAMFC,YAAAA,OAAO,EAAE;AACPkB,cAAAA,IAAI,EAAE,EADC;AAEPC,cAAAA,WAAW,EAAE,EAFN;AAGPG,cAAAA,sBAAsB,EAAE;AACtBxB,gBAAAA,IAAI,EAAE,WADgB;AAEtBE,gBAAAA,OAAO,EAAE;AACPuB,kBAAAA,MAAM,EAAE;AACNzB,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,eADQ,EAER,eAFQ,CAFJ;AAMNC,oBAAAA,OAAO,EAAE;AACPkD,sBAAAA,aAAa,EAAE,EADR;AAEP2D,sBAAAA,aAAa,EAAE;AACb/G,wBAAAA,IAAI,EAAE,QADO;AAEbgH,wBAAAA,SAAS,EAAE;AAFE;AAFR;AANH;AADD;AAFa,eAHjB;AAsBPhF,cAAAA,0BAA0B,EAAE;AAC1BzB,gBAAAA,KAAK,EAAE;AADmB,eAtBrB;AAyBPD,cAAAA,IAAI,EAAE;AACJC,gBAAAA,KAAK,EAAE;AADH,eAzBC;AA4BP+C,cAAAA,SAAS,EAAE;AA5BJ;AANP,WANE;AA2CN2D,UAAAA,EAAE,EAAE;AACFjH,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACPuB,cAAAA,MAAM,EAAE;AACNzB,gBAAAA,IAAI,EAAE,WADA;AAENE,gBAAAA,OAAO,EAAE;AACPgH,kBAAAA,MAAM,EAAE;AACN3G,oBAAAA,KAAK,EAAE;AADD;AADD;AAFH;AADD;AAFP,WA3CE;AAwDN4G,UAAAA,EAAE,EAAE;AACFnH,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACPkH,cAAAA,UAAU,EAAE;AACVpH,gBAAAA,IAAI,EAAE,WADI;AAEVE,gBAAAA,OAAO,EAAE;AACPmH,kBAAAA,OAAO,EAAE;AACPrH,oBAAAA,IAAI,EAAE;AADC;AADF;AAFC;AADL;AAFP,WAxDE;AAqENsH,UAAAA,EAAE,EAAE;AACFtH,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACPqH,cAAAA,uBAAuB,EAAE;AACvBvH,gBAAAA,IAAI,EAAE,WADiB;AAEvBE,gBAAAA,OAAO,EAAE;AACPsH,kBAAAA,mBAAmB,EAAE;AACnBxH,oBAAAA,IAAI,EAAE;AADa,mBADd;AAIPyH,kBAAAA,uBAAuB,EAAE;AACvBzH,oBAAAA,IAAI,EAAE;AADiB,mBAJlB;AAOP0H,kBAAAA,mBAAmB,EAAE;AAPd;AAFc;AADlB;AAFP,WArEE;AAsFNC,UAAAA,GAAG,EAAE;AACH3H,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPuB,cAAAA,MAAM,EAAE;AACNzB,gBAAAA,IAAI,EAAE,WADA;AAENE,gBAAAA,OAAO,EAAE;AACP0H,kBAAAA,aAAa,EAAE;AACbrH,oBAAAA,KAAK,EAAE;AADM,mBADR;AAIPsH,kBAAAA,QAAQ,EAAE;AACRtH,oBAAAA,KAAK,EAAE;AADC;AAJH;AAFH;AADD;AAFN,WAtFC;AAsGNuH,UAAAA,GAAG,EAAE;AACH9H,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP+E,cAAAA,WAAW,EAAE;AACXjF,gBAAAA,IAAI,EAAE,MADK;AAEX+E,gBAAAA,MAAM,EAAE;AACN/E,kBAAAA,IAAI,EAAE,WADA;AAENC,kBAAAA,QAAQ,EAAE,CACR,WADQ,CAFJ;AAKNC,kBAAAA,OAAO,EAAE;AACP6H,oBAAAA,SAAS,EAAE;AADJ;AALH;AAFG,eADN;AAaPC,cAAAA,QAAQ,EAAE;AACRhI,gBAAAA,IAAI,EAAE,MADE;AAER+E,gBAAAA,MAAM,EAAE;AACN/E,kBAAAA,IAAI,EAAE,WADA;AAENC,kBAAAA,QAAQ,EAAE,CACR,UADQ,CAFJ;AAKNC,kBAAAA,OAAO,EAAE;AACPgB,oBAAAA,QAAQ,EAAE;AADH;AALH;AAFA;AAbH;AAFN,WAtGC;AAmIN+G,UAAAA,GAAG,EAAE;AACHjI,YAAAA,IAAI,EAAE,WADH;AAEHkI,YAAAA,eAAe,EAAE;AAFd,WAnIC;AAuINC,UAAAA,GAAG,EAAE;AACHnI,YAAAA,IAAI,EAAE,KADH;AAEH4G,YAAAA,GAAG,EAAE,EAFF;AAGHC,YAAAA,KAAK,EAAE;AAHJ,WAvIC;AA4INuB,UAAAA,GAAG,EAAE;AACHpI,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP0C,cAAAA,EAAE,EAAE,EADG;AAEPxB,cAAAA,IAAI,EAAE,EAFC;AAGPC,cAAAA,WAAW,EAAE,EAHN;AAIPC,cAAAA,SAAS,EAAE,EAJJ;AAKPC,cAAAA,gBAAgB,EAAE,EALX;AAMPuB,cAAAA,MAAM,EAAE,EAND;AAOPC,cAAAA,YAAY,EAAE;AACZxC,gBAAAA,KAAK,EAAE;AADK,eAPP;AAUPyC,cAAAA,GAAG,EAAE;AAVE;AAFN;AA5IC;AAhoCK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-09-24',\n    endpointPrefix: 'managedblockchain',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    protocols: [\n      'rest-json'\n    ],\n    serviceAbbreviation: 'ManagedBlockchain',\n    serviceFullName: 'Amazon Managed Blockchain',\n    serviceId: 'ManagedBlockchain',\n    signatureVersion: 'v4',\n    signingName: 'managedblockchain',\n    uid: 'managedblockchain-2018-09-24'\n  },\n  operations: {\n    CreateAccessor: {\n      http: {\n        requestUri: '/accessors'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ClientRequestToken',\n          'AccessorType'\n        ],\n        members: {\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          AccessorType: {},\n          Tags: {\n            shape: 'S4'\n          },\n          NetworkType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AccessorId: {},\n          BillingToken: {},\n          NetworkType: {}\n        }\n      }\n    },\n    CreateMember: {\n      http: {\n        requestUri: '/networks/{networkId}/members'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ClientRequestToken',\n          'InvitationId',\n          'NetworkId',\n          'MemberConfiguration'\n        ],\n        members: {\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          InvitationId: {},\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MemberConfiguration: {\n            shape: 'Sc'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MemberId: {}\n        }\n      }\n    },\n    CreateNetwork: {\n      http: {\n        requestUri: '/networks'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ClientRequestToken',\n          'Name',\n          'Framework',\n          'FrameworkVersion',\n          'VotingPolicy',\n          'MemberConfiguration'\n        ],\n        members: {\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          Name: {},\n          Description: {},\n          Framework: {},\n          FrameworkVersion: {},\n          FrameworkConfiguration: {\n            type: 'structure',\n            members: {\n              Fabric: {\n                type: 'structure',\n                required: [\n                  'Edition'\n                ],\n                members: {\n                  Edition: {}\n                }\n              }\n            }\n          },\n          VotingPolicy: {\n            shape: 'Sx'\n          },\n          MemberConfiguration: {\n            shape: 'Sc'\n          },\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NetworkId: {},\n          MemberId: {}\n        }\n      }\n    },\n    CreateNode: {\n      http: {\n        requestUri: '/networks/{networkId}/nodes'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ClientRequestToken',\n          'NetworkId',\n          'NodeConfiguration'\n        ],\n        members: {\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MemberId: {},\n          NodeConfiguration: {\n            type: 'structure',\n            required: [\n              'InstanceType'\n            ],\n            members: {\n              InstanceType: {},\n              AvailabilityZone: {},\n              LogPublishingConfiguration: {\n                shape: 'S17'\n              },\n              StateDB: {}\n            }\n          },\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NodeId: {}\n        }\n      }\n    },\n    CreateProposal: {\n      http: {\n        requestUri: '/networks/{networkId}/proposals'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ClientRequestToken',\n          'NetworkId',\n          'MemberId',\n          'Actions'\n        ],\n        members: {\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MemberId: {},\n          Actions: {\n            shape: 'S1c'\n          },\n          Description: {},\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ProposalId: {}\n        }\n      }\n    },\n    DeleteAccessor: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/accessors/{AccessorId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AccessorId'\n        ],\n        members: {\n          AccessorId: {\n            location: 'uri',\n            locationName: 'AccessorId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteMember: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/networks/{networkId}/members/{memberId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId',\n          'MemberId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MemberId: {\n            location: 'uri',\n            locationName: 'memberId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteNode: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/networks/{networkId}/nodes/{nodeId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId',\n          'NodeId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MemberId: {\n            location: 'querystring',\n            locationName: 'memberId'\n          },\n          NodeId: {\n            location: 'uri',\n            locationName: 'nodeId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    GetAccessor: {\n      http: {\n        method: 'GET',\n        requestUri: '/accessors/{AccessorId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AccessorId'\n        ],\n        members: {\n          AccessorId: {\n            location: 'uri',\n            locationName: 'AccessorId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Accessor: {\n            type: 'structure',\n            members: {\n              Id: {},\n              Type: {},\n              BillingToken: {},\n              Status: {},\n              CreationDate: {\n                shape: 'S1t'\n              },\n              Arn: {},\n              Tags: {\n                shape: 'S1u'\n              },\n              NetworkType: {}\n            }\n          }\n        }\n      }\n    },\n    GetMember: {\n      http: {\n        method: 'GET',\n        requestUri: '/networks/{networkId}/members/{memberId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId',\n          'MemberId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MemberId: {\n            location: 'uri',\n            locationName: 'memberId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Member: {\n            type: 'structure',\n            members: {\n              NetworkId: {},\n              Id: {},\n              Name: {},\n              Description: {},\n              FrameworkAttributes: {\n                type: 'structure',\n                members: {\n                  Fabric: {\n                    type: 'structure',\n                    members: {\n                      AdminUsername: {},\n                      CaEndpoint: {}\n                    }\n                  }\n                }\n              },\n              LogPublishingConfiguration: {\n                shape: 'Sj'\n              },\n              Status: {},\n              CreationDate: {\n                shape: 'S1t'\n              },\n              Tags: {\n                shape: 'S1u'\n              },\n              Arn: {},\n              KmsKeyArn: {}\n            }\n          }\n        }\n      }\n    },\n    GetNetwork: {\n      http: {\n        method: 'GET',\n        requestUri: '/networks/{networkId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Network: {\n            type: 'structure',\n            members: {\n              Id: {},\n              Name: {},\n              Description: {},\n              Framework: {},\n              FrameworkVersion: {},\n              FrameworkAttributes: {\n                type: 'structure',\n                members: {\n                  Fabric: {\n                    type: 'structure',\n                    members: {\n                      OrderingServiceEndpoint: {},\n                      Edition: {}\n                    }\n                  },\n                  Ethereum: {\n                    type: 'structure',\n                    members: {\n                      ChainId: {}\n                    }\n                  }\n                }\n              },\n              VpcEndpointServiceName: {},\n              VotingPolicy: {\n                shape: 'Sx'\n              },\n              Status: {},\n              CreationDate: {\n                shape: 'S1t'\n              },\n              Tags: {\n                shape: 'S1u'\n              },\n              Arn: {}\n            }\n          }\n        }\n      }\n    },\n    GetNode: {\n      http: {\n        method: 'GET',\n        requestUri: '/networks/{networkId}/nodes/{nodeId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId',\n          'NodeId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MemberId: {\n            location: 'querystring',\n            locationName: 'memberId'\n          },\n          NodeId: {\n            location: 'uri',\n            locationName: 'nodeId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Node: {\n            type: 'structure',\n            members: {\n              NetworkId: {},\n              MemberId: {},\n              Id: {},\n              InstanceType: {},\n              AvailabilityZone: {},\n              FrameworkAttributes: {\n                type: 'structure',\n                members: {\n                  Fabric: {\n                    type: 'structure',\n                    members: {\n                      PeerEndpoint: {},\n                      PeerEventEndpoint: {}\n                    }\n                  },\n                  Ethereum: {\n                    type: 'structure',\n                    members: {\n                      HttpEndpoint: {},\n                      WebSocketEndpoint: {}\n                    }\n                  }\n                }\n              },\n              LogPublishingConfiguration: {\n                shape: 'S17'\n              },\n              StateDB: {},\n              Status: {},\n              CreationDate: {\n                shape: 'S1t'\n              },\n              Tags: {\n                shape: 'S1u'\n              },\n              Arn: {},\n              KmsKeyArn: {}\n            }\n          }\n        }\n      }\n    },\n    GetProposal: {\n      http: {\n        method: 'GET',\n        requestUri: '/networks/{networkId}/proposals/{proposalId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId',\n          'ProposalId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          ProposalId: {\n            location: 'uri',\n            locationName: 'proposalId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Proposal: {\n            type: 'structure',\n            members: {\n              ProposalId: {},\n              NetworkId: {},\n              Description: {},\n              Actions: {\n                shape: 'S1c'\n              },\n              ProposedByMemberId: {},\n              ProposedByMemberName: {},\n              Status: {},\n              CreationDate: {\n                shape: 'S1t'\n              },\n              ExpirationDate: {\n                shape: 'S1t'\n              },\n              YesVoteCount: {\n                type: 'integer'\n              },\n              NoVoteCount: {\n                type: 'integer'\n              },\n              OutstandingVoteCount: {\n                type: 'integer'\n              },\n              Tags: {\n                shape: 'S1u'\n              },\n              Arn: {}\n            }\n          }\n        }\n      }\n    },\n    ListAccessors: {\n      http: {\n        method: 'GET',\n        requestUri: '/accessors'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          NetworkType: {\n            location: 'querystring',\n            locationName: 'networkType'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Accessors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {},\n                Type: {},\n                Status: {},\n                CreationDate: {\n                  shape: 'S1t'\n                },\n                Arn: {},\n                NetworkType: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListInvitations: {\n      http: {\n        method: 'GET',\n        requestUri: '/invitations'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Invitations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                InvitationId: {},\n                CreationDate: {\n                  shape: 'S1t'\n                },\n                ExpirationDate: {\n                  shape: 'S1t'\n                },\n                Status: {},\n                NetworkSummary: {\n                  shape: 'S2x'\n                },\n                Arn: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListMembers: {\n      http: {\n        method: 'GET',\n        requestUri: '/networks/{networkId}/members'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          Name: {\n            location: 'querystring',\n            locationName: 'name'\n          },\n          Status: {\n            location: 'querystring',\n            locationName: 'status'\n          },\n          IsOwned: {\n            location: 'querystring',\n            locationName: 'isOwned',\n            type: 'boolean'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Members: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {},\n                Name: {},\n                Description: {},\n                Status: {},\n                CreationDate: {\n                  shape: 'S1t'\n                },\n                IsOwned: {\n                  type: 'boolean'\n                },\n                Arn: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListNetworks: {\n      http: {\n        method: 'GET',\n        requestUri: '/networks'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Name: {\n            location: 'querystring',\n            locationName: 'name'\n          },\n          Framework: {\n            location: 'querystring',\n            locationName: 'framework'\n          },\n          Status: {\n            location: 'querystring',\n            locationName: 'status'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Networks: {\n            type: 'list',\n            member: {\n              shape: 'S2x'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListNodes: {\n      http: {\n        method: 'GET',\n        requestUri: '/networks/{networkId}/nodes'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MemberId: {\n            location: 'querystring',\n            locationName: 'memberId'\n          },\n          Status: {\n            location: 'querystring',\n            locationName: 'status'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Nodes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {},\n                Status: {},\n                CreationDate: {\n                  shape: 'S1t'\n                },\n                AvailabilityZone: {},\n                InstanceType: {},\n                Arn: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListProposalVotes: {\n      http: {\n        method: 'GET',\n        requestUri: '/networks/{networkId}/proposals/{proposalId}/votes'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId',\n          'ProposalId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          ProposalId: {\n            location: 'uri',\n            locationName: 'proposalId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ProposalVotes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Vote: {},\n                MemberName: {},\n                MemberId: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListProposals: {\n      http: {\n        method: 'GET',\n        requestUri: '/networks/{networkId}/proposals'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Proposals: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ProposalId: {},\n                Description: {},\n                ProposedByMemberId: {},\n                ProposedByMemberName: {},\n                Status: {},\n                CreationDate: {\n                  shape: 'S1t'\n                },\n                ExpirationDate: {\n                  shape: 'S1t'\n                },\n                Arn: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S1u'\n          }\n        }\n      }\n    },\n    RejectInvitation: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/invitations/{invitationId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'InvitationId'\n        ],\n        members: {\n          InvitationId: {\n            location: 'uri',\n            locationName: 'invitationId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateMember: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/networks/{networkId}/members/{memberId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId',\n          'MemberId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MemberId: {\n            location: 'uri',\n            locationName: 'memberId'\n          },\n          LogPublishingConfiguration: {\n            shape: 'Sj'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateNode: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/networks/{networkId}/nodes/{nodeId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId',\n          'NodeId'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          MemberId: {},\n          NodeId: {\n            location: 'uri',\n            locationName: 'nodeId'\n          },\n          LogPublishingConfiguration: {\n            shape: 'S17'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    VoteOnProposal: {\n      http: {\n        requestUri: '/networks/{networkId}/proposals/{proposalId}/votes'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'NetworkId',\n          'ProposalId',\n          'VoterMemberId',\n          'Vote'\n        ],\n        members: {\n          NetworkId: {\n            location: 'uri',\n            locationName: 'networkId'\n          },\n          ProposalId: {\n            location: 'uri',\n            locationName: 'proposalId'\n          },\n          VoterMemberId: {},\n          Vote: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sc: {\n      type: 'structure',\n      required: [\n        'Name',\n        'FrameworkConfiguration'\n      ],\n      members: {\n        Name: {},\n        Description: {},\n        FrameworkConfiguration: {\n          type: 'structure',\n          members: {\n            Fabric: {\n              type: 'structure',\n              required: [\n                'AdminUsername',\n                'AdminPassword'\n              ],\n              members: {\n                AdminUsername: {},\n                AdminPassword: {\n                  type: 'string',\n                  sensitive: true\n                }\n              }\n            }\n          }\n        },\n        LogPublishingConfiguration: {\n          shape: 'Sj'\n        },\n        Tags: {\n          shape: 'S4'\n        },\n        KmsKeyArn: {}\n      }\n    },\n    Sj: {\n      type: 'structure',\n      members: {\n        Fabric: {\n          type: 'structure',\n          members: {\n            CaLogs: {\n              shape: 'Sl'\n            }\n          }\n        }\n      }\n    },\n    Sl: {\n      type: 'structure',\n      members: {\n        Cloudwatch: {\n          type: 'structure',\n          members: {\n            Enabled: {\n              type: 'boolean'\n            }\n          }\n        }\n      }\n    },\n    Sx: {\n      type: 'structure',\n      members: {\n        ApprovalThresholdPolicy: {\n          type: 'structure',\n          members: {\n            ThresholdPercentage: {\n              type: 'integer'\n            },\n            ProposalDurationInHours: {\n              type: 'integer'\n            },\n            ThresholdComparator: {}\n          }\n        }\n      }\n    },\n    S17: {\n      type: 'structure',\n      members: {\n        Fabric: {\n          type: 'structure',\n          members: {\n            ChaincodeLogs: {\n              shape: 'Sl'\n            },\n            PeerLogs: {\n              shape: 'Sl'\n            }\n          }\n        }\n      }\n    },\n    S1c: {\n      type: 'structure',\n      members: {\n        Invitations: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'Principal'\n            ],\n            members: {\n              Principal: {}\n            }\n          }\n        },\n        Removals: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'MemberId'\n            ],\n            members: {\n              MemberId: {}\n            }\n          }\n        }\n      }\n    },\n    S1t: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    S1u: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S2x: {\n      type: 'structure',\n      members: {\n        Id: {},\n        Name: {},\n        Description: {},\n        Framework: {},\n        FrameworkVersion: {},\n        Status: {},\n        CreationDate: {\n          shape: 'S1t'\n        },\n        Arn: {}\n      }\n    }\n  }\n}"]}