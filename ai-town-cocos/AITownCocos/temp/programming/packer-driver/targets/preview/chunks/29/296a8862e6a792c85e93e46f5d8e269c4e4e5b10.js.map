{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/protocol/query.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","AWS","util","QueryParamSerializer","Shape","populateHostPrefix","buildRequest","req","operation","service","api","operations","httpRequest","headers","params","Version","apiVersion","Action","name","builder","serialize","input","value","body","queryParamsToString","extractError","resp","data","httpResponse","toString","match","Code","Message","request","XML","Parser","parse","e","statusCode","statusMessage","requestId","Errors","Error","error","code","message","extractData","shape","output","origRules","resultWrapper","tmp","create","type","members","memberNames","property","parser","_XAMZRequestId","requestIdShape","protocol","update","_cjsExports","_buildRequest","_extractError","_extractData"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nimport { __cjsMetaURL as _req0} from '../util';\nimport { __cjsMetaURL as _req1} from '../query/query_param_serializer';\nimport { __cjsMetaURL as _req2} from '../model/shape';\nimport { __cjsMetaURL as _req3} from './helpers';\nlet _cjsExports;\nlet _buildRequest;\nlet _extractError;\nlet _extractData;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n var util = require('../util');\n var QueryParamSerializer = require('../query/query_param_serializer');\n var Shape = require('../model/shape');\n var populateHostPrefix = require('./helpers').populateHostPrefix;\n\n function buildRequest(req) {\n   var operation = req.service.api.operations[req.operation];\n   var httpRequest = req.httpRequest;\n   httpRequest.headers['Content-Type'] =\n     'application/x-www-form-urlencoded; charset=utf-8';\n   httpRequest.params = {\n     Version: req.service.api.apiVersion,\n     Action: operation.name\n   };\n\n   // convert the request parameters into a list of query params,\n   // e.g. Deeply.NestedParam.0.Name=value\n   var builder = new QueryParamSerializer();\n   builder.serialize(req.params, operation.input, function(name, value) {\n     httpRequest.params[name] = value;\n   });\n   httpRequest.body = util.queryParamsToString(httpRequest.params);\n\n   populateHostPrefix(req);\n }\n\n function extractError(resp) {\n   var data, body = resp.httpResponse.body.toString();\n   if (body.match('<UnknownOperationException')) {\n     data = {\n       Code: 'UnknownOperation',\n       Message: 'Unknown operation ' + resp.request.operation\n     };\n   } else {\n     try {\n       data = new AWS.XML.Parser().parse(body);\n     } catch (e) {\n       data = {\n         Code: resp.httpResponse.statusCode,\n         Message: resp.httpResponse.statusMessage\n       };\n     }\n   }\n\n   if (data.requestId && !resp.requestId) resp.requestId = data.requestId;\n   if (data.Errors) data = data.Errors;\n   if (data.Error) data = data.Error;\n   if (data.Code) {\n     resp.error = util.error(new Error(), {\n       code: data.Code,\n       message: data.Message\n     });\n   } else {\n     resp.error = util.error(new Error(), {\n       code: resp.httpResponse.statusCode,\n       message: null\n     });\n   }\n }\n\n function extractData(resp) {\n   var req = resp.request;\n   var operation = req.service.api.operations[req.operation];\n   var shape = operation.output || {};\n   var origRules = shape;\n\n   if (origRules.resultWrapper) {\n     var tmp = Shape.create({type: 'structure'});\n     tmp.members[origRules.resultWrapper] = shape;\n     tmp.memberNames = [origRules.resultWrapper];\n     util.property(shape, 'name', shape.resultWrapper);\n     shape = tmp;\n   }\n\n   var parser = new AWS.XML.Parser();\n\n   // TODO: Refactor XML Parser to parse RequestId from response.\n   if (shape && shape.members && !shape.members._XAMZRequestId) {\n     var requestIdShape = Shape.create(\n       { type: 'string' },\n       { api: { protocol: 'query' } },\n       'requestId'\n     );\n     shape.members._XAMZRequestId = requestIdShape;\n   }\n\n   var data = parser.parse(resp.httpResponse.body.toString(), shape);\n   resp.requestId = data._XAMZRequestId || data.requestId;\n\n   if (data._XAMZRequestId) delete data._XAMZRequestId;\n\n   if (origRules.resultWrapper) {\n     if (data[origRules.resultWrapper]) {\n       util.update(data, data[origRules.resultWrapper]);\n       delete data[origRules.resultWrapper];\n     }\n   }\n\n   resp.data = data;\n }\n\n /**\n  * @api private\n  */\n module.exports = {\n   buildRequest: buildRequest,\n   extractError: extractError,\n   extractData: extractData\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_buildRequest = module.exports.buildRequest;\n_extractError = module.exports.extractError;\n_extractData = module.exports.extractData;\n\n}, () => ({\n  '../core': _req,\n  '../util': _req0,\n  '../query/query_param_serializer': _req1,\n  '../model/shape': _req2,\n  './helpers': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}