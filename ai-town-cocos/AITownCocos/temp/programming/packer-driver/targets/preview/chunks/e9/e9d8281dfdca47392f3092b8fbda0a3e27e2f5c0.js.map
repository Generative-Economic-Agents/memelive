{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/amplifyuibuilder-2021-08-11.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateComponent","http","requestUri","responseCode","input","type","required","members","appId","location","locationName","environmentName","clientToken","idempotencyToken","componentToCreate","name","sourceId","componentType","properties","shape","children","variants","overrides","bindingProperties","collectionProperties","tags","events","schemaVersion","payload","output","entity","idempotent","CreateForm","formToCreate","dataType","formActionType","fields","style","sectionalElements","cta","labelDecorator","CreateTheme","themeToCreate","values","DeleteComponent","method","id","DeleteForm","DeleteTheme","ExchangeCodeForToken","provider","request","code","redirectUri","clientId","accessToken","expiresIn","refreshToken","ExportComponents","nextToken","entities","member","ExportForms","ExportThemes","GetCodegenJob","job","GetComponent","component","GetForm","form","GetMetadata","features","key","value","GetTheme","theme","ListCodegenJobs","maxResults","createdAt","modifiedAt","ListComponents","ListForms","ListTagsForResource","resourceArn","ListThemes","PutMetadataFlag","featureName","body","newValue","RefreshToken","refreshTokenBody","token","StartCodegenJob","codegenJobToCreate","renderConfig","genericDataSchema","autoGenerateForms","TagResource","UntagResource","tagKeys","UpdateComponent","updatedComponent","UpdateForm","updatedForm","UpdateTheme","updatedTheme","shapes","S6","S7","collectionBindingProperties","defaultValue","model","bindings","element","property","event","userAttribute","concat","condition","field","operator","operand","then","operandType","configured","importedValue","componentName","S8","Se","Sg","action","parameters","url","anchor","target","global","state","set","bindingEvent","Sk","variantValues","Sn","Sp","predicates","bucket","slotName","Ss","St","or","and","Sv","sort","direction","predicate","identifiers","S11","S15","S17","timestampFormat","S1b","dataSourceType","dataTypeName","S1e","label","position","excluded","inputType","readOnly","placeholder","descriptiveText","defaultChecked","defaultCountryCode","valueMappings","displayValue","minValue","maxValue","step","isArray","fileUploaderConfig","accessLevel","acceptedFileTypes","showThumbnails","isResumable","maxFileCount","maxSize","validations","strValues","numValues","validationMessage","S1g","fixed","rightOf","below","union","S1m","S1v","S20","horizontalGap","verticalGap","outerPadding","S21","tokenReference","S22","text","level","orientation","S24","clear","cancel","submit","S26","S29","S2d","S2h","S2o","sensitive","S32","status","statusMessage","asset","downloadUrl","dependencies","supportedVersion","isSemVer","reason","S33","react","module","script","renderTypeDeclarations","inlineSourceMap","apiConfiguration","graphQLConfig","typesFilePath","queriesFilePath","mutationsFilePath","subscriptionsFilePath","fragmentsFilePath","dataStoreConfig","noApiConfig","S3d","models","isJoinTable","primaryKeys","enums","nonModels","S3i","dataTypeValue","relationship","relatedModelName","relatedModelFields","canUnlinkAssociatedModel","relatedJoinFieldName","relatedJoinTableName","belongsToFieldOnRelatedModel","associatedFields","isHasManyIndex","S3v","isRelationshipSupported","isNonModelSupported"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-08-11',\n    endpointPrefix: 'amplifyuibuilder',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS Amplify UI Builder',\n    serviceId: 'AmplifyUIBuilder',\n    signatureVersion: 'v4',\n    signingName: 'amplifyuibuilder',\n    uid: 'amplifyuibuilder-2021-08-11'\n  },\n  operations: {\n    CreateComponent: {\n      http: {\n        requestUri: '/app/{appId}/environment/{environmentName}/components',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'componentToCreate'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          componentToCreate: {\n            type: 'structure',\n            required: [\n              'name',\n              'componentType',\n              'properties',\n              'variants',\n              'overrides',\n              'bindingProperties'\n            ],\n            members: {\n              name: {},\n              sourceId: {},\n              componentType: {},\n              properties: {\n                shape: 'S6'\n              },\n              children: {\n                shape: 'Se'\n              },\n              variants: {\n                shape: 'Sk'\n              },\n              overrides: {\n                shape: 'Sn'\n              },\n              bindingProperties: {\n                shape: 'Sp'\n              },\n              collectionProperties: {\n                shape: 'Sv'\n              },\n              tags: {\n                shape: 'S11'\n              },\n              events: {\n                shape: 'Sg'\n              },\n              schemaVersion: {}\n            }\n          }\n        },\n        payload: 'componentToCreate'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          entity: {\n            shape: 'S15'\n          }\n        },\n        payload: 'entity'\n      },\n      idempotent: true\n    },\n    CreateForm: {\n      http: {\n        requestUri: '/app/{appId}/environment/{environmentName}/forms',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'formToCreate'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          formToCreate: {\n            type: 'structure',\n            required: [\n              'name',\n              'dataType',\n              'formActionType',\n              'fields',\n              'style',\n              'sectionalElements',\n              'schemaVersion'\n            ],\n            members: {\n              name: {},\n              dataType: {\n                shape: 'S1b'\n              },\n              formActionType: {},\n              fields: {\n                shape: 'S1e'\n              },\n              style: {\n                shape: 'S20'\n              },\n              sectionalElements: {\n                shape: 'S22'\n              },\n              schemaVersion: {},\n              cta: {\n                shape: 'S24'\n              },\n              tags: {\n                shape: 'S11'\n              },\n              labelDecorator: {}\n            }\n          }\n        },\n        payload: 'formToCreate'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          entity: {\n            shape: 'S29'\n          }\n        },\n        payload: 'entity'\n      },\n      idempotent: true\n    },\n    CreateTheme: {\n      http: {\n        requestUri: '/app/{appId}/environment/{environmentName}/themes',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'themeToCreate'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          themeToCreate: {\n            type: 'structure',\n            required: [\n              'name',\n              'values'\n            ],\n            members: {\n              name: {},\n              values: {\n                shape: 'S2d'\n              },\n              overrides: {\n                shape: 'S2d'\n              },\n              tags: {\n                shape: 'S11'\n              }\n            }\n          }\n        },\n        payload: 'themeToCreate'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          entity: {\n            shape: 'S2h'\n          }\n        },\n        payload: 'entity'\n      },\n      idempotent: true\n    },\n    DeleteComponent: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/app/{appId}/environment/{environmentName}/components/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'id'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteForm: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/app/{appId}/environment/{environmentName}/forms/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'id'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteTheme: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/app/{appId}/environment/{environmentName}/themes/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'id'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      idempotent: true\n    },\n    ExchangeCodeForToken: {\n      http: {\n        requestUri: '/tokens/{provider}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'provider',\n          'request'\n        ],\n        members: {\n          provider: {\n            location: 'uri',\n            locationName: 'provider'\n          },\n          request: {\n            type: 'structure',\n            required: [\n              'code',\n              'redirectUri'\n            ],\n            members: {\n              code: {\n                shape: 'S2o'\n              },\n              redirectUri: {},\n              clientId: {\n                shape: 'S2o'\n              }\n            }\n          }\n        },\n        payload: 'request'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'accessToken',\n          'expiresIn',\n          'refreshToken'\n        ],\n        members: {\n          accessToken: {\n            shape: 'S2o'\n          },\n          expiresIn: {\n            type: 'integer'\n          },\n          refreshToken: {\n            shape: 'S2o'\n          }\n        }\n      }\n    },\n    ExportComponents: {\n      http: {\n        method: 'GET',\n        requestUri: '/export/app/{appId}/environment/{environmentName}/components',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'entities'\n        ],\n        members: {\n          entities: {\n            type: 'list',\n            member: {\n              shape: 'S15'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ExportForms: {\n      http: {\n        method: 'GET',\n        requestUri: '/export/app/{appId}/environment/{environmentName}/forms',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'entities'\n        ],\n        members: {\n          entities: {\n            type: 'list',\n            member: {\n              shape: 'S29'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ExportThemes: {\n      http: {\n        method: 'GET',\n        requestUri: '/export/app/{appId}/environment/{environmentName}/themes',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'entities'\n        ],\n        members: {\n          entities: {\n            type: 'list',\n            member: {\n              shape: 'S2h'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetCodegenJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/app/{appId}/environment/{environmentName}/codegen-jobs/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'id'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          job: {\n            shape: 'S32'\n          }\n        },\n        payload: 'job'\n      }\n    },\n    GetComponent: {\n      http: {\n        method: 'GET',\n        requestUri: '/app/{appId}/environment/{environmentName}/components/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'id'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          component: {\n            shape: 'S15'\n          }\n        },\n        payload: 'component'\n      }\n    },\n    GetForm: {\n      http: {\n        method: 'GET',\n        requestUri: '/app/{appId}/environment/{environmentName}/forms/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'id'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          form: {\n            shape: 'S29'\n          }\n        },\n        payload: 'form'\n      }\n    },\n    GetMetadata: {\n      http: {\n        method: 'GET',\n        requestUri: '/app/{appId}/environment/{environmentName}/metadata',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'features'\n        ],\n        members: {\n          features: {\n            type: 'map',\n            key: {},\n            value: {}\n          }\n        }\n      }\n    },\n    GetTheme: {\n      http: {\n        method: 'GET',\n        requestUri: '/app/{appId}/environment/{environmentName}/themes/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'id'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          theme: {\n            shape: 'S2h'\n          }\n        },\n        payload: 'theme'\n      }\n    },\n    ListCodegenJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/app/{appId}/environment/{environmentName}/codegen-jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'entities'\n        ],\n        members: {\n          entities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'appId',\n                'environmentName',\n                'id'\n              ],\n              members: {\n                appId: {},\n                environmentName: {},\n                id: {},\n                createdAt: {\n                  shape: 'S17'\n                },\n                modifiedAt: {\n                  shape: 'S17'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListComponents: {\n      http: {\n        method: 'GET',\n        requestUri: '/app/{appId}/environment/{environmentName}/components',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'entities'\n        ],\n        members: {\n          entities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'appId',\n                'environmentName',\n                'id',\n                'name',\n                'componentType'\n              ],\n              members: {\n                appId: {},\n                environmentName: {},\n                id: {},\n                name: {},\n                componentType: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListForms: {\n      http: {\n        method: 'GET',\n        requestUri: '/app/{appId}/environment/{environmentName}/forms',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'entities'\n        ],\n        members: {\n          entities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'appId',\n                'dataType',\n                'environmentName',\n                'formActionType',\n                'id',\n                'name'\n              ],\n              members: {\n                appId: {},\n                dataType: {\n                  shape: 'S1b'\n                },\n                environmentName: {},\n                formActionType: {},\n                id: {},\n                name: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'tags'\n        ],\n        members: {\n          tags: {\n            shape: 'S11'\n          }\n        }\n      }\n    },\n    ListThemes: {\n      http: {\n        method: 'GET',\n        requestUri: '/app/{appId}/environment/{environmentName}/themes',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'entities'\n        ],\n        members: {\n          entities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'appId',\n                'environmentName',\n                'id',\n                'name'\n              ],\n              members: {\n                appId: {},\n                environmentName: {},\n                id: {},\n                name: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    PutMetadataFlag: {\n      http: {\n        method: 'PUT',\n        requestUri: '/app/{appId}/environment/{environmentName}/metadata/features/{featureName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'featureName',\n          'body'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          featureName: {\n            location: 'uri',\n            locationName: 'featureName'\n          },\n          body: {\n            type: 'structure',\n            required: [\n              'newValue'\n            ],\n            members: {\n              newValue: {}\n            }\n          }\n        },\n        payload: 'body'\n      },\n      idempotent: true\n    },\n    RefreshToken: {\n      http: {\n        requestUri: '/tokens/{provider}/refresh',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'provider',\n          'refreshTokenBody'\n        ],\n        members: {\n          provider: {\n            location: 'uri',\n            locationName: 'provider'\n          },\n          refreshTokenBody: {\n            type: 'structure',\n            required: [\n              'token'\n            ],\n            members: {\n              token: {\n                shape: 'S2o'\n              },\n              clientId: {\n                shape: 'S2o'\n              }\n            }\n          }\n        },\n        payload: 'refreshTokenBody'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'accessToken',\n          'expiresIn'\n        ],\n        members: {\n          accessToken: {\n            shape: 'S2o'\n          },\n          expiresIn: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    StartCodegenJob: {\n      http: {\n        requestUri: '/app/{appId}/environment/{environmentName}/codegen-jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'codegenJobToCreate'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          codegenJobToCreate: {\n            type: 'structure',\n            required: [\n              'renderConfig'\n            ],\n            members: {\n              renderConfig: {\n                shape: 'S33'\n              },\n              genericDataSchema: {\n                shape: 'S3d'\n              },\n              autoGenerateForms: {\n                type: 'boolean'\n              },\n              features: {\n                shape: 'S3v'\n              },\n              tags: {\n                shape: 'S11'\n              }\n            }\n          }\n        },\n        payload: 'codegenJobToCreate'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          entity: {\n            shape: 'S32'\n          }\n        },\n        payload: 'entity'\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S11'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateComponent: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/app/{appId}/environment/{environmentName}/components/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'id',\n          'updatedComponent'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          updatedComponent: {\n            type: 'structure',\n            members: {\n              id: {},\n              name: {},\n              sourceId: {},\n              componentType: {},\n              properties: {\n                shape: 'S6'\n              },\n              children: {\n                shape: 'Se'\n              },\n              variants: {\n                shape: 'Sk'\n              },\n              overrides: {\n                shape: 'Sn'\n              },\n              bindingProperties: {\n                shape: 'Sp'\n              },\n              collectionProperties: {\n                shape: 'Sv'\n              },\n              events: {\n                shape: 'Sg'\n              },\n              schemaVersion: {}\n            }\n          }\n        },\n        payload: 'updatedComponent'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          entity: {\n            shape: 'S15'\n          }\n        },\n        payload: 'entity'\n      },\n      idempotent: true\n    },\n    UpdateForm: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/app/{appId}/environment/{environmentName}/forms/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'id',\n          'updatedForm'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          updatedForm: {\n            type: 'structure',\n            members: {\n              name: {},\n              dataType: {\n                shape: 'S1b'\n              },\n              formActionType: {},\n              fields: {\n                shape: 'S1e'\n              },\n              style: {\n                shape: 'S20'\n              },\n              sectionalElements: {\n                shape: 'S22'\n              },\n              schemaVersion: {},\n              cta: {\n                shape: 'S24'\n              },\n              labelDecorator: {}\n            }\n          }\n        },\n        payload: 'updatedForm'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          entity: {\n            shape: 'S29'\n          }\n        },\n        payload: 'entity'\n      },\n      idempotent: true\n    },\n    UpdateTheme: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/app/{appId}/environment/{environmentName}/themes/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'appId',\n          'environmentName',\n          'id',\n          'updatedTheme'\n        ],\n        members: {\n          appId: {\n            location: 'uri',\n            locationName: 'appId'\n          },\n          environmentName: {\n            location: 'uri',\n            locationName: 'environmentName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          updatedTheme: {\n            type: 'structure',\n            required: [\n              'values'\n            ],\n            members: {\n              id: {},\n              name: {},\n              values: {\n                shape: 'S2d'\n              },\n              overrides: {\n                shape: 'S2d'\n              }\n            }\n          }\n        },\n        payload: 'updatedTheme'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          entity: {\n            shape: 'S2h'\n          }\n        },\n        payload: 'entity'\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S6: {\n      type: 'map',\n      key: {},\n      value: {\n        shape: 'S7'\n      }\n    },\n    S7: {\n      type: 'structure',\n      members: {\n        value: {},\n        bindingProperties: {\n          shape: 'S8'\n        },\n        collectionBindingProperties: {\n          shape: 'S8'\n        },\n        defaultValue: {},\n        model: {},\n        bindings: {\n          type: 'map',\n          key: {},\n          value: {\n            type: 'structure',\n            required: [\n              'element',\n              'property'\n            ],\n            members: {\n              element: {},\n              property: {}\n            }\n          }\n        },\n        event: {},\n        userAttribute: {},\n        concat: {\n          type: 'list',\n          member: {\n            shape: 'S7'\n          }\n        },\n        condition: {\n          type: 'structure',\n          members: {\n            property: {},\n            field: {},\n            operator: {},\n            operand: {},\n            then: {\n              shape: 'S7'\n            },\n            'else': {\n              shape: 'S7'\n            },\n            operandType: {}\n          }\n        },\n        configured: {\n          type: 'boolean'\n        },\n        type: {},\n        importedValue: {},\n        componentName: {},\n        property: {}\n      }\n    },\n    S8: {\n      type: 'structure',\n      required: [\n        'property'\n      ],\n      members: {\n        property: {},\n        field: {}\n      }\n    },\n    Se: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'componentType',\n          'name',\n          'properties'\n        ],\n        members: {\n          componentType: {},\n          name: {},\n          properties: {\n            shape: 'S6'\n          },\n          children: {\n            shape: 'Se'\n          },\n          events: {\n            shape: 'Sg'\n          },\n          sourceId: {}\n        }\n      }\n    },\n    Sg: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        members: {\n          action: {},\n          parameters: {\n            type: 'structure',\n            members: {\n              type: {\n                shape: 'S7'\n              },\n              url: {\n                shape: 'S7'\n              },\n              anchor: {\n                shape: 'S7'\n              },\n              target: {\n                shape: 'S7'\n              },\n              global: {\n                shape: 'S7'\n              },\n              model: {},\n              id: {\n                shape: 'S7'\n              },\n              fields: {\n                shape: 'S6'\n              },\n              state: {\n                type: 'structure',\n                required: [\n                  'componentName',\n                  'property',\n                  'set'\n                ],\n                members: {\n                  componentName: {},\n                  property: {},\n                  set: {\n                    shape: 'S7'\n                  }\n                }\n              }\n            }\n          },\n          bindingEvent: {}\n        }\n      }\n    },\n    Sk: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          variantValues: {\n            type: 'map',\n            key: {},\n            value: {}\n          },\n          overrides: {\n            shape: 'Sn'\n          }\n        }\n      }\n    },\n    Sn: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'map',\n        key: {},\n        value: {}\n      }\n    },\n    Sp: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        members: {\n          type: {},\n          bindingProperties: {\n            type: 'structure',\n            members: {\n              model: {},\n              field: {},\n              predicates: {\n                shape: 'Ss'\n              },\n              userAttribute: {},\n              bucket: {},\n              key: {},\n              defaultValue: {},\n              slotName: {}\n            }\n          },\n          defaultValue: {}\n        }\n      }\n    },\n    Ss: {\n      type: 'list',\n      member: {\n        shape: 'St'\n      }\n    },\n    St: {\n      type: 'structure',\n      members: {\n        or: {\n          shape: 'Ss'\n        },\n        and: {\n          shape: 'Ss'\n        },\n        field: {},\n        operator: {},\n        operand: {},\n        operandType: {}\n      }\n    },\n    Sv: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        required: [\n          'model'\n        ],\n        members: {\n          model: {},\n          sort: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'field',\n                'direction'\n              ],\n              members: {\n                field: {},\n                direction: {}\n              }\n            }\n          },\n          predicate: {\n            shape: 'St'\n          },\n          identifiers: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    S11: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S15: {\n      type: 'structure',\n      required: [\n        'appId',\n        'environmentName',\n        'id',\n        'name',\n        'componentType',\n        'properties',\n        'variants',\n        'overrides',\n        'bindingProperties',\n        'createdAt'\n      ],\n      members: {\n        appId: {},\n        environmentName: {},\n        sourceId: {},\n        id: {},\n        name: {},\n        componentType: {},\n        properties: {\n          shape: 'S6'\n        },\n        children: {\n          shape: 'Se'\n        },\n        variants: {\n          shape: 'Sk'\n        },\n        overrides: {\n          shape: 'Sn'\n        },\n        bindingProperties: {\n          shape: 'Sp'\n        },\n        collectionProperties: {\n          shape: 'Sv'\n        },\n        createdAt: {\n          shape: 'S17'\n        },\n        modifiedAt: {\n          shape: 'S17'\n        },\n        tags: {\n          shape: 'S11'\n        },\n        events: {\n          shape: 'Sg'\n        },\n        schemaVersion: {}\n      }\n    },\n    S17: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    S1b: {\n      type: 'structure',\n      required: [\n        'dataSourceType',\n        'dataTypeName'\n      ],\n      members: {\n        dataSourceType: {},\n        dataTypeName: {}\n      }\n    },\n    S1e: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        members: {\n          label: {},\n          position: {\n            shape: 'S1g'\n          },\n          excluded: {\n            type: 'boolean'\n          },\n          inputType: {\n            type: 'structure',\n            required: [\n              'type'\n            ],\n            members: {\n              type: {},\n              required: {\n                type: 'boolean'\n              },\n              readOnly: {\n                type: 'boolean'\n              },\n              placeholder: {},\n              defaultValue: {},\n              descriptiveText: {},\n              defaultChecked: {\n                type: 'boolean'\n              },\n              defaultCountryCode: {},\n              valueMappings: {\n                type: 'structure',\n                required: [\n                  'values'\n                ],\n                members: {\n                  values: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      required: [\n                        'value'\n                      ],\n                      members: {\n                        displayValue: {\n                          shape: 'S1m'\n                        },\n                        value: {\n                          shape: 'S1m'\n                        }\n                      }\n                    }\n                  },\n                  bindingProperties: {\n                    type: 'map',\n                    key: {},\n                    value: {\n                      type: 'structure',\n                      members: {\n                        type: {},\n                        bindingProperties: {\n                          type: 'structure',\n                          members: {\n                            model: {}\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              name: {},\n              minValue: {\n                type: 'float'\n              },\n              maxValue: {\n                type: 'float'\n              },\n              step: {\n                type: 'float'\n              },\n              value: {},\n              isArray: {\n                type: 'boolean'\n              },\n              fileUploaderConfig: {\n                type: 'structure',\n                required: [\n                  'accessLevel',\n                  'acceptedFileTypes'\n                ],\n                members: {\n                  accessLevel: {},\n                  acceptedFileTypes: {\n                    shape: 'S1v'\n                  },\n                  showThumbnails: {\n                    type: 'boolean'\n                  },\n                  isResumable: {\n                    type: 'boolean'\n                  },\n                  maxFileCount: {\n                    type: 'integer'\n                  },\n                  maxSize: {\n                    type: 'integer'\n                  }\n                }\n              }\n            }\n          },\n          validations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'type'\n              ],\n              members: {\n                type: {},\n                strValues: {\n                  shape: 'S1v'\n                },\n                numValues: {\n                  type: 'list',\n                  member: {\n                    type: 'integer'\n                  }\n                },\n                validationMessage: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    S1g: {\n      type: 'structure',\n      members: {\n        fixed: {},\n        rightOf: {},\n        below: {}\n      },\n      union: true\n    },\n    S1m: {\n      type: 'structure',\n      members: {\n        value: {},\n        bindingProperties: {\n          type: 'structure',\n          required: [\n            'property'\n          ],\n          members: {\n            property: {},\n            field: {}\n          }\n        },\n        concat: {\n          type: 'list',\n          member: {\n            shape: 'S1m'\n          }\n        }\n      }\n    },\n    S1v: {\n      type: 'list',\n      member: {}\n    },\n    S20: {\n      type: 'structure',\n      members: {\n        horizontalGap: {\n          shape: 'S21'\n        },\n        verticalGap: {\n          shape: 'S21'\n        },\n        outerPadding: {\n          shape: 'S21'\n        }\n      }\n    },\n    S21: {\n      type: 'structure',\n      members: {\n        tokenReference: {},\n        value: {}\n      },\n      union: true\n    },\n    S22: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        required: [\n          'type'\n        ],\n        members: {\n          type: {},\n          position: {\n            shape: 'S1g'\n          },\n          text: {},\n          level: {\n            type: 'integer'\n          },\n          orientation: {},\n          excluded: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    S24: {\n      type: 'structure',\n      members: {\n        position: {},\n        clear: {\n          shape: 'S26'\n        },\n        cancel: {\n          shape: 'S26'\n        },\n        submit: {\n          shape: 'S26'\n        }\n      }\n    },\n    S26: {\n      type: 'structure',\n      members: {\n        excluded: {\n          type: 'boolean'\n        },\n        children: {},\n        position: {\n          shape: 'S1g'\n        }\n      }\n    },\n    S29: {\n      type: 'structure',\n      required: [\n        'appId',\n        'environmentName',\n        'id',\n        'name',\n        'formActionType',\n        'style',\n        'dataType',\n        'fields',\n        'sectionalElements',\n        'schemaVersion'\n      ],\n      members: {\n        appId: {},\n        environmentName: {},\n        id: {},\n        name: {},\n        formActionType: {},\n        style: {\n          shape: 'S20'\n        },\n        dataType: {\n          shape: 'S1b'\n        },\n        fields: {\n          shape: 'S1e'\n        },\n        sectionalElements: {\n          shape: 'S22'\n        },\n        schemaVersion: {},\n        tags: {\n          shape: 'S11'\n        },\n        cta: {\n          shape: 'S24'\n        },\n        labelDecorator: {}\n      }\n    },\n    S2d: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          key: {},\n          value: {\n            type: 'structure',\n            members: {\n              value: {},\n              children: {\n                shape: 'S2d'\n              }\n            }\n          }\n        }\n      }\n    },\n    S2h: {\n      type: 'structure',\n      required: [\n        'appId',\n        'environmentName',\n        'id',\n        'name',\n        'createdAt',\n        'values'\n      ],\n      members: {\n        appId: {},\n        environmentName: {},\n        id: {},\n        name: {},\n        createdAt: {\n          shape: 'S17'\n        },\n        modifiedAt: {\n          shape: 'S17'\n        },\n        values: {\n          shape: 'S2d'\n        },\n        overrides: {\n          shape: 'S2d'\n        },\n        tags: {\n          shape: 'S11'\n        }\n      }\n    },\n    S2o: {\n      type: 'string',\n      sensitive: true\n    },\n    S32: {\n      type: 'structure',\n      required: [\n        'id',\n        'appId',\n        'environmentName'\n      ],\n      members: {\n        id: {},\n        appId: {},\n        environmentName: {},\n        renderConfig: {\n          shape: 'S33'\n        },\n        genericDataSchema: {\n          shape: 'S3d'\n        },\n        autoGenerateForms: {\n          type: 'boolean'\n        },\n        features: {\n          shape: 'S3v'\n        },\n        status: {},\n        statusMessage: {},\n        asset: {\n          type: 'structure',\n          members: {\n            downloadUrl: {}\n          }\n        },\n        tags: {\n          shape: 'S11'\n        },\n        createdAt: {\n          shape: 'S17'\n        },\n        modifiedAt: {\n          shape: 'S17'\n        },\n        dependencies: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              name: {},\n              supportedVersion: {},\n              isSemVer: {\n                type: 'boolean'\n              },\n              reason: {}\n            }\n          }\n        }\n      }\n    },\n    S33: {\n      type: 'structure',\n      members: {\n        react: {\n          type: 'structure',\n          members: {\n            module: {},\n            target: {},\n            script: {},\n            renderTypeDeclarations: {\n              type: 'boolean'\n            },\n            inlineSourceMap: {\n              type: 'boolean'\n            },\n            apiConfiguration: {\n              type: 'structure',\n              members: {\n                graphQLConfig: {\n                  type: 'structure',\n                  required: [\n                    'typesFilePath',\n                    'queriesFilePath',\n                    'mutationsFilePath',\n                    'subscriptionsFilePath',\n                    'fragmentsFilePath'\n                  ],\n                  members: {\n                    typesFilePath: {},\n                    queriesFilePath: {},\n                    mutationsFilePath: {},\n                    subscriptionsFilePath: {},\n                    fragmentsFilePath: {}\n                  }\n                },\n                dataStoreConfig: {\n                  type: 'structure',\n                  members: {}\n                },\n                noApiConfig: {\n                  type: 'structure',\n                  members: {}\n                }\n              },\n              union: true\n            },\n            dependencies: {\n              type: 'map',\n              key: {},\n              value: {}\n            }\n          }\n        }\n      },\n      union: true\n    },\n    S3d: {\n      type: 'structure',\n      required: [\n        'dataSourceType',\n        'models',\n        'enums',\n        'nonModels'\n      ],\n      members: {\n        dataSourceType: {},\n        models: {\n          type: 'map',\n          key: {},\n          value: {\n            type: 'structure',\n            required: [\n              'fields',\n              'primaryKeys'\n            ],\n            members: {\n              fields: {\n                type: 'map',\n                key: {},\n                value: {\n                  shape: 'S3i'\n                }\n              },\n              isJoinTable: {\n                type: 'boolean'\n              },\n              primaryKeys: {\n                type: 'list',\n                member: {}\n              }\n            }\n          }\n        },\n        enums: {\n          type: 'map',\n          key: {},\n          value: {\n            type: 'structure',\n            required: [\n              'values'\n            ],\n            members: {\n              values: {\n                type: 'list',\n                member: {}\n              }\n            }\n          }\n        },\n        nonModels: {\n          type: 'map',\n          key: {},\n          value: {\n            type: 'structure',\n            required: [\n              'fields'\n            ],\n            members: {\n              fields: {\n                type: 'map',\n                key: {},\n                value: {\n                  shape: 'S3i'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S3i: {\n      type: 'structure',\n      required: [\n        'dataType',\n        'dataTypeValue',\n        'required',\n        'readOnly',\n        'isArray'\n      ],\n      members: {\n        dataType: {},\n        dataTypeValue: {},\n        required: {\n          type: 'boolean'\n        },\n        readOnly: {\n          type: 'boolean'\n        },\n        isArray: {\n          type: 'boolean'\n        },\n        relationship: {\n          type: 'structure',\n          required: [\n            'type',\n            'relatedModelName'\n          ],\n          members: {\n            type: {},\n            relatedModelName: {},\n            relatedModelFields: {\n              type: 'list',\n              member: {}\n            },\n            canUnlinkAssociatedModel: {\n              type: 'boolean'\n            },\n            relatedJoinFieldName: {},\n            relatedJoinTableName: {},\n            belongsToFieldOnRelatedModel: {},\n            associatedFields: {\n              type: 'list',\n              member: {}\n            },\n            isHasManyIndex: {\n              type: 'boolean'\n            }\n          }\n        }\n      }\n    },\n    S3v: {\n      type: 'structure',\n      members: {\n        isRelationshipSupported: {\n          type: 'boolean'\n        },\n        isNonModelSupported: {\n          type: 'boolean'\n        }\n      }\n    }\n  }\n}"]}