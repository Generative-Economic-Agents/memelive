{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/debug/src/node.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","tty","util","init","log","formatArgs","save","load","useColors","colors","inspectOpts","Object","keys","process","env","filter","key","test","reduce","obj","prop","substring","toLowerCase","replace","_","k","toUpperCase","val","Number","fd","parseInt","DEBUG_FD","deprecate","stream","stdout","stderr","createWritableStdioStream","Boolean","isatty","formatters","o","v","inspect","split","map","str","trim","join","O","args","name","namespace","c","color","prefix","push","humanize","diff","Date","toUTCString","write","format","apply","arguments","namespaces","DEBUG","tty_wrap","binding","guessHandleType","WriteStream","_type","_handle","unref","fs","SyncWriteStream","autoClose","net","Socket","readable","writable","read","Error","_isStdio","debug","i","length","enable","_cjsExports","_init","_log","_formatArgs","_save","_load","_useColors","_colors","_inspectOpts"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'tty';\nimport { __cjsMetaURL as _req0} from 'util';\nimport { __cjsMetaURL as _req1} from './debug';\nimport { __cjsMetaURL as _req2} from 'fs';\nimport { __cjsMetaURL as _req3} from 'net';\nlet _cjsExports;\nlet _init;\nlet _log;\nlet _formatArgs;\nlet _save;\nlet _load;\nlet _useColors;\nlet _colors;\nlet _inspectOpts;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n /**\n  * Module dependencies.\n  */\n\n var tty = require('tty');\n var util = require('util');\n\n /**\n  * This is the Node.js implementation of `debug()`.\n  *\n  * Expose `debug()` as the module.\n  */\n\n exports = module.exports = require('./debug');\n exports.init = init;\n exports.log = log;\n exports.formatArgs = formatArgs;\n exports.save = save;\n exports.load = load;\n exports.useColors = useColors;\n\n /**\n  * Colors.\n  */\n\n exports.colors = [6, 2, 3, 4, 5, 1];\n\n /**\n  * Build up the default `inspectOpts` object from the environment variables.\n  *\n  *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n  */\n\n exports.inspectOpts = Object.keys(process.env).filter(function (key) {\n   return /^debug_/i.test(key);\n }).reduce(function (obj, key) {\n   // camel-case\n   var prop = key\n     .substring(6)\n     .toLowerCase()\n     .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n   // coerce string value into JS value\n   var val = process.env[key];\n   if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n   else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n   else if (val === 'null') val = null;\n   else val = Number(val);\n\n   obj[prop] = val;\n   return obj;\n }, {});\n\n /**\n  * The file descriptor to write the `debug()` calls to.\n  * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n  *\n  *   $ DEBUG_FD=3 node script.js 3>debug.log\n  */\n\n var fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\n if (1 !== fd && 2 !== fd) {\n   util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n }\n\n var stream = 1 === fd ? process.stdout :\n              2 === fd ? process.stderr :\n              createWritableStdioStream(fd);\n\n /**\n  * Is stdout a TTY? Colored output is enabled when `true`.\n  */\n\n function useColors() {\n   return 'colors' in exports.inspectOpts\n     ? Boolean(exports.inspectOpts.colors)\n     : tty.isatty(fd);\n }\n\n /**\n  * Map %o to `util.inspect()`, all on a single line.\n  */\n\n exports.formatters.o = function(v) {\n   this.inspectOpts.colors = this.useColors;\n   return util.inspect(v, this.inspectOpts)\n     .split('\\n').map(function(str) {\n       return str.trim()\n     }).join(' ');\n };\n\n /**\n  * Map %o to `util.inspect()`, allowing multiple lines if needed.\n  */\n\n exports.formatters.O = function(v) {\n   this.inspectOpts.colors = this.useColors;\n   return util.inspect(v, this.inspectOpts);\n };\n\n /**\n  * Adds ANSI color escape codes if enabled.\n  *\n  * @api public\n  */\n\n function formatArgs(args) {\n   var name = this.namespace;\n   var useColors = this.useColors;\n\n   if (useColors) {\n     var c = this.color;\n     var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n     args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n     args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n   } else {\n     args[0] = new Date().toUTCString()\n       + ' ' + name + ' ' + args[0];\n   }\n }\n\n /**\n  * Invokes `util.format()` with the specified arguments and writes to `stream`.\n  */\n\n function log() {\n   return stream.write(util.format.apply(util, arguments) + '\\n');\n }\n\n /**\n  * Save `namespaces`.\n  *\n  * @param {String} namespaces\n  * @api private\n  */\n\n function save(namespaces) {\n   if (null == namespaces) {\n     // If you set a process.env field to null or undefined, it gets cast to the\n     // string 'null' or 'undefined'. Just delete instead.\n     delete process.env.DEBUG;\n   } else {\n     process.env.DEBUG = namespaces;\n   }\n }\n\n /**\n  * Load `namespaces`.\n  *\n  * @return {String} returns the previously persisted debug modes\n  * @api private\n  */\n\n function load() {\n   return process.env.DEBUG;\n }\n\n /**\n  * Copied from `node/src/node.js`.\n  *\n  * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n  * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n  */\n\n function createWritableStdioStream (fd) {\n   var stream;\n   var tty_wrap = process.binding('tty_wrap');\n\n   // Note stream._type is used for test-module-load-list.js\n\n   switch (tty_wrap.guessHandleType(fd)) {\n     case 'TTY':\n       stream = new tty.WriteStream(fd);\n       stream._type = 'tty';\n\n       // Hack to have stream not keep the event loop alive.\n       // See https://github.com/joyent/node/issues/1726\n       if (stream._handle && stream._handle.unref) {\n         stream._handle.unref();\n       }\n       break;\n\n     case 'FILE':\n       var fs = require('fs');\n       stream = new fs.SyncWriteStream(fd, { autoClose: false });\n       stream._type = 'fs';\n       break;\n\n     case 'PIPE':\n     case 'TCP':\n       var net = require('net');\n       stream = new net.Socket({\n         fd: fd,\n         readable: false,\n         writable: true\n       });\n\n       // FIXME Should probably have an option in net.Socket to create a\n       // stream from an existing fd which is writable only. But for now\n       // we'll just add this hack and set the `readable` member to false.\n       // Test: ./node test/fixtures/echo.js < /etc/passwd\n       stream.readable = false;\n       stream.read = null;\n       stream._type = 'pipe';\n\n       // FIXME Hack to have stream not keep the event loop alive.\n       // See https://github.com/joyent/node/issues/1726\n       if (stream._handle && stream._handle.unref) {\n         stream._handle.unref();\n       }\n       break;\n\n     default:\n       // Probably an error on in uv_guess_handle()\n       throw new Error('Implement me. Unknown stream file type!');\n   }\n\n   // For supporting legacy API we put the FD here.\n   stream.fd = fd;\n\n   stream._isStdio = true;\n\n   return stream;\n }\n\n /**\n  * Init logic for `debug` instances.\n  *\n  * Create a new `inspectOpts` object in case `useColors` is set\n  * differently for a particular `debug` instance.\n  */\n\n function init (debug) {\n   debug.inspectOpts = {};\n\n   var keys = Object.keys(exports.inspectOpts);\n   for (var i = 0; i < keys.length; i++) {\n     debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n   }\n }\n\n /**\n  * Enable namespaces listed in `process.env.DEBUG` initially.\n  */\n\n exports.enable(load());\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_init = module.exports.init;\n_log = module.exports.log;\n_formatArgs = module.exports.formatArgs;\n_save = module.exports.save;\n_load = module.exports.load;\n_useColors = module.exports.useColors;\n_colors = module.exports.colors;\n_inspectOpts = module.exports.inspectOpts;\n\n}, () => ({\n  'tty': _req,\n  'util': _req0,\n  './debug': _req1,\n  'fs': _req2,\n  'net': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}