{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/repostspace-2022-05-13.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateSpace","http","requestUri","responseCode","input","type","required","members","description","shape","name","roleArn","subdomain","tags","tier","userKMSKey","output","spaceId","idempotent","DeleteSpace","method","location","locationName","DeregisterAdmin","adminId","GetSpace","arn","clientId","configurationStatus","contentSize","createDateTime","customerRoleArn","deleteDateTime","groupAdmins","member","randomDomain","status","storageLimit","userAdmins","userCount","vanityDomain","vanityDomainStatus","ListSpaces","maxResults","nextToken","spaces","ListTagsForResource","resourceArn","RegisterAdmin","SendInvites","accessorIds","body","sensitive","title","TagResource","UntagResource","tagKeys","UpdateSpace","shapes","S2","S3","S6","key","value","Sl","timestampFormat"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2022-05-13',\n    endpointPrefix: 'repostspace',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS re:Post Private',\n    serviceId: 'repostspace',\n    signatureVersion: 'v4',\n    signingName: 'repostspace',\n    uid: 'repostspace-2022-05-13'\n  },\n  operations: {\n    CreateSpace: {\n      http: {\n        requestUri: '/spaces',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'subdomain',\n          'tier'\n        ],\n        members: {\n          description: {\n            shape: 'S2'\n          },\n          name: {\n            shape: 'S3'\n          },\n          roleArn: {},\n          subdomain: {},\n          tags: {\n            shape: 'S6'\n          },\n          tier: {},\n          userKMSKey: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceId'\n        ],\n        members: {\n          spaceId: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteSpace: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/spaces/{spaceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceId'\n        ],\n        members: {\n          spaceId: {\n            location: 'uri',\n            locationName: 'spaceId'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeregisterAdmin: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/spaces/{spaceId}/admins/{adminId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'adminId',\n          'spaceId'\n        ],\n        members: {\n          adminId: {\n            location: 'uri',\n            locationName: 'adminId'\n          },\n          spaceId: {\n            location: 'uri',\n            locationName: 'spaceId'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetSpace: {\n      http: {\n        method: 'GET',\n        requestUri: '/spaces/{spaceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceId'\n        ],\n        members: {\n          spaceId: {\n            location: 'uri',\n            locationName: 'spaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'clientId',\n          'configurationStatus',\n          'createDateTime',\n          'name',\n          'randomDomain',\n          'spaceId',\n          'status',\n          'storageLimit',\n          'tier',\n          'vanityDomain',\n          'vanityDomainStatus'\n        ],\n        members: {\n          arn: {},\n          clientId: {},\n          configurationStatus: {},\n          contentSize: {\n            type: 'long'\n          },\n          createDateTime: {\n            shape: 'Sl'\n          },\n          customerRoleArn: {},\n          deleteDateTime: {\n            shape: 'Sl'\n          },\n          description: {\n            shape: 'S2'\n          },\n          groupAdmins: {\n            type: 'list',\n            member: {}\n          },\n          name: {\n            shape: 'S3'\n          },\n          randomDomain: {},\n          spaceId: {},\n          status: {},\n          storageLimit: {\n            type: 'long'\n          },\n          tier: {},\n          userAdmins: {\n            type: 'list',\n            member: {}\n          },\n          userCount: {\n            type: 'integer'\n          },\n          userKMSKey: {},\n          vanityDomain: {},\n          vanityDomainStatus: {}\n        }\n      }\n    },\n    ListSpaces: {\n      http: {\n        method: 'GET',\n        requestUri: '/spaces',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaces'\n        ],\n        members: {\n          nextToken: {},\n          spaces: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'configurationStatus',\n                'createDateTime',\n                'name',\n                'randomDomain',\n                'spaceId',\n                'status',\n                'storageLimit',\n                'tier',\n                'vanityDomain',\n                'vanityDomainStatus'\n              ],\n              members: {\n                arn: {},\n                configurationStatus: {},\n                contentSize: {\n                  type: 'long'\n                },\n                createDateTime: {\n                  shape: 'Sl'\n                },\n                deleteDateTime: {\n                  shape: 'Sl'\n                },\n                description: {\n                  shape: 'S2'\n                },\n                name: {\n                  shape: 'S3'\n                },\n                randomDomain: {},\n                spaceId: {},\n                status: {},\n                storageLimit: {\n                  type: 'long'\n                },\n                tier: {},\n                userCount: {\n                  type: 'integer'\n                },\n                userKMSKey: {},\n                vanityDomain: {},\n                vanityDomainStatus: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S6'\n          }\n        }\n      }\n    },\n    RegisterAdmin: {\n      http: {\n        requestUri: '/spaces/{spaceId}/admins/{adminId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'adminId',\n          'spaceId'\n        ],\n        members: {\n          adminId: {\n            location: 'uri',\n            locationName: 'adminId'\n          },\n          spaceId: {\n            location: 'uri',\n            locationName: 'spaceId'\n          }\n        }\n      },\n      idempotent: true\n    },\n    SendInvites: {\n      http: {\n        requestUri: '/spaces/{spaceId}/invite',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accessorIds',\n          'body',\n          'spaceId',\n          'title'\n        ],\n        members: {\n          accessorIds: {\n            type: 'list',\n            member: {}\n          },\n          body: {\n            type: 'string',\n            sensitive: true\n          },\n          spaceId: {\n            location: 'uri',\n            locationName: 'spaceId'\n          },\n          title: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      },\n      idempotent: true\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S6'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateSpace: {\n      http: {\n        method: 'PUT',\n        requestUri: '/spaces/{spaceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceId'\n        ],\n        members: {\n          description: {\n            shape: 'S2'\n          },\n          roleArn: {},\n          spaceId: {\n            location: 'uri',\n            locationName: 'spaceId'\n          },\n          tier: {}\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S2: {\n      type: 'string',\n      sensitive: true\n    },\n    S3: {\n      type: 'string',\n      sensitive: true\n    },\n    S6: {\n      type: 'map',\n      key: {},\n      value: {},\n      sensitive: true\n    },\n    Sl: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    }\n  }\n}"]}