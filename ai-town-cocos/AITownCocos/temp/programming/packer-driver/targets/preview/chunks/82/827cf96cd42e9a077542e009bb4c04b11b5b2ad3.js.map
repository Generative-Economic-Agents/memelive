{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/m2-2021-04-28.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CancelBatchJobExecution","http","requestUri","responseCode","input","type","required","members","applicationId","location","locationName","executionId","output","CreateApplication","clientToken","idempotencyToken","definition","shape","description","engineType","kmsKeyId","name","roleArn","tags","applicationArn","applicationVersion","idempotent","CreateDataSetImportTask","importConfig","dataSets","member","dataSet","datasetName","datasetOrg","gdg","limit","rollDisposition","po","encoding","format","memberFileExtensions","ps","vsam","alternateKeys","compressed","primaryKey","union","recordLength","max","min","relativePath","storageType","externalLocation","s3Location","taskId","CreateDeployment","environmentId","deploymentId","CreateEnvironment","engineVersion","highAvailabilityConfig","instanceType","preferredMaintenanceWindow","publiclyAccessible","securityGroupIds","storageConfigurations","subnetIds","DeleteApplication","method","DeleteApplicationFromEnvironment","DeleteEnvironment","GetApplication","creationTime","deployedVersion","status","statusReason","lastStartTime","latestVersion","listenerArns","listenerPorts","loadBalancerDnsName","logGroups","logGroupName","logType","targetGroupArns","GetApplicationVersion","definitionContent","GetBatchJobExecution","batchJobIdentifier","endTime","jobId","jobName","jobStepRestartMarker","jobType","jobUser","returnCode","startTime","GetDataSetDetails","dataSetName","blocksize","dataSetOrg","cacheAtStartup","recordFormat","fileSize","lastReferencedTime","lastUpdatedTime","GetDataSetImportTask","summary","GetDeployment","GetEnvironment","actualCapacity","environmentArn","loadBalancerArn","pendingMaintenance","schedule","vpcId","GetSignedBluinsightsUrl","signedBiUrl","ListApplicationVersions","maxResults","nextToken","applicationVersions","ListApplications","names","applications","deploymentStatus","versionStatus","ListBatchJobDefinitions","prefix","batchJobDefinitions","fileBatchJobDefinition","fileName","folderPath","scriptBatchJobDefinition","scriptName","ListBatchJobExecutions","executionIds","startedAfter","startedBefore","batchJobExecutions","ListBatchJobRestartPoints","batchJobSteps","procStepName","procStepNumber","stepCondCode","stepName","stepNumber","stepRestartable","ListDataSetImportHistory","dataSetImportTasks","ListDataSets","nameFilter","ListDeployments","deployments","ListEngineVersions","engineVersions","ListEnvironments","environments","ListTagsForResource","resourceArn","StartApplication","StartBatchJob","jobParams","key","value","StopApplication","forceStop","TagResource","UntagResource","tagKeys","UpdateApplication","currentApplicationVersion","UpdateEnvironment","applyDuringMaintenanceWindow","desiredCapacity","forceUpdate","shapes","S6","content","Sd","Sv","allowDuplicates","length","offset","Sy","S16","S19","S1a","efs","fileSystemId","mountPoint","fsx","S1r","S1t","S24","fileBatchJobIdentifier","restartBatchJobIdentifier","s3BatchJobIdentifier","bucket","identifier","keyPrefix","scriptBatchJobIdentifier","S27","fromProcStep","fromStep","toProcStep","toStep","S2o","failed","inProgress","pending","succeeded","total","S33"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-04-28',\n    endpointPrefix: 'm2',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWSMainframeModernization',\n    serviceId: 'm2',\n    signatureVersion: 'v4',\n    signingName: 'm2',\n    uid: 'm2-2021-04-28'\n  },\n  operations: {\n    CancelBatchJobExecution: {\n      http: {\n        requestUri: '/applications/{applicationId}/batch-job-executions/{executionId}/cancel',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'executionId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          executionId: {\n            location: 'uri',\n            locationName: 'executionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateApplication: {\n      http: {\n        requestUri: '/applications',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'definition',\n          'engineType',\n          'name'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          definition: {\n            shape: 'S6'\n          },\n          description: {},\n          engineType: {},\n          kmsKeyId: {},\n          name: {},\n          roleArn: {},\n          tags: {\n            shape: 'Sd'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applicationArn',\n          'applicationId',\n          'applicationVersion'\n        ],\n        members: {\n          applicationArn: {},\n          applicationId: {},\n          applicationVersion: {\n            type: 'integer'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateDataSetImportTask: {\n      http: {\n        requestUri: '/applications/{applicationId}/dataset-import-task',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'importConfig'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          importConfig: {\n            type: 'structure',\n            members: {\n              dataSets: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'dataSet',\n                    'externalLocation'\n                  ],\n                  members: {\n                    dataSet: {\n                      type: 'structure',\n                      required: [\n                        'datasetName',\n                        'datasetOrg',\n                        'recordLength'\n                      ],\n                      members: {\n                        datasetName: {},\n                        datasetOrg: {\n                          type: 'structure',\n                          members: {\n                            gdg: {\n                              type: 'structure',\n                              members: {\n                                limit: {\n                                  type: 'integer'\n                                },\n                                rollDisposition: {}\n                              }\n                            },\n                            po: {\n                              type: 'structure',\n                              required: [\n                                'format',\n                                'memberFileExtensions'\n                              ],\n                              members: {\n                                encoding: {},\n                                format: {},\n                                memberFileExtensions: {\n                                  type: 'list',\n                                  member: {}\n                                }\n                              }\n                            },\n                            ps: {\n                              type: 'structure',\n                              required: [\n                                'format'\n                              ],\n                              members: {\n                                encoding: {},\n                                format: {}\n                              }\n                            },\n                            vsam: {\n                              type: 'structure',\n                              required: [\n                                'format'\n                              ],\n                              members: {\n                                alternateKeys: {\n                                  shape: 'Sv'\n                                },\n                                compressed: {\n                                  type: 'boolean'\n                                },\n                                encoding: {},\n                                format: {},\n                                primaryKey: {\n                                  shape: 'Sy'\n                                }\n                              }\n                            }\n                          },\n                          union: true\n                        },\n                        recordLength: {\n                          type: 'structure',\n                          required: [\n                            'max',\n                            'min'\n                          ],\n                          members: {\n                            max: {\n                              type: 'integer'\n                            },\n                            min: {\n                              type: 'integer'\n                            }\n                          }\n                        },\n                        relativePath: {},\n                        storageType: {}\n                      }\n                    },\n                    externalLocation: {\n                      type: 'structure',\n                      members: {\n                        s3Location: {}\n                      },\n                      union: true\n                    }\n                  }\n                }\n              },\n              s3Location: {}\n            },\n            union: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'taskId'\n        ],\n        members: {\n          taskId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateDeployment: {\n      http: {\n        requestUri: '/applications/{applicationId}/deployments',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'applicationVersion',\n          'environmentId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          applicationVersion: {\n            type: 'integer'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          environmentId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'deploymentId'\n        ],\n        members: {\n          deploymentId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateEnvironment: {\n      http: {\n        requestUri: '/environments',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'engineType',\n          'instanceType',\n          'name'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          description: {},\n          engineType: {},\n          engineVersion: {},\n          highAvailabilityConfig: {\n            shape: 'S16'\n          },\n          instanceType: {},\n          kmsKeyId: {},\n          name: {},\n          preferredMaintenanceWindow: {},\n          publiclyAccessible: {\n            type: 'boolean'\n          },\n          securityGroupIds: {\n            shape: 'S19'\n          },\n          storageConfigurations: {\n            shape: 'S1a'\n          },\n          subnetIds: {\n            shape: 'S19'\n          },\n          tags: {\n            shape: 'Sd'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteApplication: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/applications/{applicationId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteApplicationFromEnvironment: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/applications/{applicationId}/environment/{environmentId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'environmentId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteEnvironment: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/environments/{environmentId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetApplication: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applicationArn',\n          'applicationId',\n          'creationTime',\n          'engineType',\n          'latestVersion',\n          'name',\n          'status'\n        ],\n        members: {\n          applicationArn: {},\n          applicationId: {},\n          creationTime: {\n            type: 'timestamp'\n          },\n          deployedVersion: {\n            type: 'structure',\n            required: [\n              'applicationVersion',\n              'status'\n            ],\n            members: {\n              applicationVersion: {\n                type: 'integer'\n              },\n              status: {},\n              statusReason: {}\n            }\n          },\n          description: {},\n          engineType: {},\n          environmentId: {},\n          kmsKeyId: {},\n          lastStartTime: {\n            type: 'timestamp'\n          },\n          latestVersion: {\n            shape: 'S1r'\n          },\n          listenerArns: {\n            shape: 'S1t'\n          },\n          listenerPorts: {\n            type: 'list',\n            member: {\n              type: 'integer'\n            }\n          },\n          loadBalancerDnsName: {},\n          logGroups: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'logGroupName',\n                'logType'\n              ],\n              members: {\n                logGroupName: {},\n                logType: {}\n              }\n            }\n          },\n          name: {},\n          roleArn: {},\n          status: {},\n          statusReason: {},\n          tags: {\n            shape: 'Sd'\n          },\n          targetGroupArns: {\n            shape: 'S1t'\n          }\n        }\n      }\n    },\n    GetApplicationVersion: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/versions/{applicationVersion}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'applicationVersion'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          applicationVersion: {\n            location: 'uri',\n            locationName: 'applicationVersion',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applicationVersion',\n          'creationTime',\n          'definitionContent',\n          'name',\n          'status'\n        ],\n        members: {\n          applicationVersion: {\n            type: 'integer'\n          },\n          creationTime: {\n            type: 'timestamp'\n          },\n          definitionContent: {},\n          description: {},\n          name: {},\n          status: {},\n          statusReason: {}\n        }\n      }\n    },\n    GetBatchJobExecution: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/batch-job-executions/{executionId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'executionId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          executionId: {\n            location: 'uri',\n            locationName: 'executionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'executionId',\n          'startTime',\n          'status'\n        ],\n        members: {\n          applicationId: {},\n          batchJobIdentifier: {\n            shape: 'S24'\n          },\n          endTime: {\n            type: 'timestamp'\n          },\n          executionId: {},\n          jobId: {},\n          jobName: {},\n          jobStepRestartMarker: {\n            shape: 'S27'\n          },\n          jobType: {},\n          jobUser: {},\n          returnCode: {},\n          startTime: {\n            type: 'timestamp'\n          },\n          status: {},\n          statusReason: {}\n        }\n      }\n    },\n    GetDataSetDetails: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/datasets/{dataSetName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'dataSetName'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          dataSetName: {\n            location: 'uri',\n            locationName: 'dataSetName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'dataSetName'\n        ],\n        members: {\n          blocksize: {\n            type: 'integer'\n          },\n          creationTime: {\n            type: 'timestamp'\n          },\n          dataSetName: {},\n          dataSetOrg: {\n            type: 'structure',\n            members: {\n              gdg: {\n                type: 'structure',\n                members: {\n                  limit: {\n                    type: 'integer'\n                  },\n                  rollDisposition: {}\n                }\n              },\n              po: {\n                type: 'structure',\n                required: [\n                  'encoding',\n                  'format'\n                ],\n                members: {\n                  encoding: {},\n                  format: {}\n                }\n              },\n              ps: {\n                type: 'structure',\n                required: [\n                  'encoding',\n                  'format'\n                ],\n                members: {\n                  encoding: {},\n                  format: {}\n                }\n              },\n              vsam: {\n                type: 'structure',\n                members: {\n                  alternateKeys: {\n                    shape: 'Sv'\n                  },\n                  cacheAtStartup: {\n                    type: 'boolean'\n                  },\n                  compressed: {\n                    type: 'boolean'\n                  },\n                  encoding: {},\n                  primaryKey: {\n                    shape: 'Sy'\n                  },\n                  recordFormat: {}\n                }\n              }\n            },\n            union: true\n          },\n          fileSize: {\n            type: 'long'\n          },\n          lastReferencedTime: {\n            type: 'timestamp'\n          },\n          lastUpdatedTime: {\n            type: 'timestamp'\n          },\n          location: {},\n          recordLength: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    GetDataSetImportTask: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/dataset-import-tasks/{taskId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'taskId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          taskId: {\n            location: 'uri',\n            locationName: 'taskId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status',\n          'taskId'\n        ],\n        members: {\n          status: {},\n          summary: {\n            shape: 'S2o'\n          },\n          taskId: {}\n        }\n      }\n    },\n    GetDeployment: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/deployments/{deploymentId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'deploymentId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          deploymentId: {\n            location: 'uri',\n            locationName: 'deploymentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'applicationVersion',\n          'creationTime',\n          'deploymentId',\n          'environmentId',\n          'status'\n        ],\n        members: {\n          applicationId: {},\n          applicationVersion: {\n            type: 'integer'\n          },\n          creationTime: {\n            type: 'timestamp'\n          },\n          deploymentId: {},\n          environmentId: {},\n          status: {},\n          statusReason: {}\n        }\n      }\n    },\n    GetEnvironment: {\n      http: {\n        method: 'GET',\n        requestUri: '/environments/{environmentId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'creationTime',\n          'engineType',\n          'engineVersion',\n          'environmentArn',\n          'environmentId',\n          'instanceType',\n          'name',\n          'securityGroupIds',\n          'status',\n          'subnetIds',\n          'vpcId'\n        ],\n        members: {\n          actualCapacity: {\n            type: 'integer'\n          },\n          creationTime: {\n            type: 'timestamp'\n          },\n          description: {},\n          engineType: {},\n          engineVersion: {},\n          environmentArn: {},\n          environmentId: {},\n          highAvailabilityConfig: {\n            shape: 'S16'\n          },\n          instanceType: {},\n          kmsKeyId: {},\n          loadBalancerArn: {},\n          name: {},\n          pendingMaintenance: {\n            type: 'structure',\n            members: {\n              engineVersion: {},\n              schedule: {\n                type: 'structure',\n                members: {\n                  endTime: {\n                    type: 'timestamp'\n                  },\n                  startTime: {\n                    type: 'timestamp'\n                  }\n                }\n              }\n            }\n          },\n          preferredMaintenanceWindow: {},\n          publiclyAccessible: {\n            type: 'boolean'\n          },\n          securityGroupIds: {\n            shape: 'S19'\n          },\n          status: {},\n          statusReason: {},\n          storageConfigurations: {\n            shape: 'S1a'\n          },\n          subnetIds: {\n            shape: 'S19'\n          },\n          tags: {\n            shape: 'Sd'\n          },\n          vpcId: {}\n        }\n      }\n    },\n    GetSignedBluinsightsUrl: {\n      http: {\n        method: 'GET',\n        requestUri: '/signed-bi-url',\n        responseCode: 200\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'signedBiUrl'\n        ],\n        members: {\n          signedBiUrl: {}\n        }\n      }\n    },\n    ListApplicationVersions: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/versions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applicationVersions'\n        ],\n        members: {\n          applicationVersions: {\n            type: 'list',\n            member: {\n              shape: 'S1r'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListApplications: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          environmentId: {\n            location: 'querystring',\n            locationName: 'environmentId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          names: {\n            shape: 'S33',\n            location: 'querystring',\n            locationName: 'names'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applications'\n        ],\n        members: {\n          applications: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'applicationArn',\n                'applicationId',\n                'applicationVersion',\n                'creationTime',\n                'engineType',\n                'name',\n                'status'\n              ],\n              members: {\n                applicationArn: {},\n                applicationId: {},\n                applicationVersion: {\n                  type: 'integer'\n                },\n                creationTime: {\n                  type: 'timestamp'\n                },\n                deploymentStatus: {},\n                description: {},\n                engineType: {},\n                environmentId: {},\n                lastStartTime: {\n                  type: 'timestamp'\n                },\n                name: {},\n                roleArn: {},\n                status: {},\n                versionStatus: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListBatchJobDefinitions: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/batch-job-definitions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          prefix: {\n            location: 'querystring',\n            locationName: 'prefix'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'batchJobDefinitions'\n        ],\n        members: {\n          batchJobDefinitions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                fileBatchJobDefinition: {\n                  type: 'structure',\n                  required: [\n                    'fileName'\n                  ],\n                  members: {\n                    fileName: {},\n                    folderPath: {}\n                  }\n                },\n                scriptBatchJobDefinition: {\n                  type: 'structure',\n                  required: [\n                    'scriptName'\n                  ],\n                  members: {\n                    scriptName: {}\n                  }\n                }\n              },\n              union: true\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListBatchJobExecutions: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/batch-job-executions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          executionIds: {\n            location: 'querystring',\n            locationName: 'executionIds',\n            type: 'list',\n            member: {}\n          },\n          jobName: {\n            location: 'querystring',\n            locationName: 'jobName'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          startedAfter: {\n            location: 'querystring',\n            locationName: 'startedAfter',\n            type: 'timestamp'\n          },\n          startedBefore: {\n            location: 'querystring',\n            locationName: 'startedBefore',\n            type: 'timestamp'\n          },\n          status: {\n            location: 'querystring',\n            locationName: 'status'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'batchJobExecutions'\n        ],\n        members: {\n          batchJobExecutions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'applicationId',\n                'executionId',\n                'startTime',\n                'status'\n              ],\n              members: {\n                applicationId: {},\n                batchJobIdentifier: {\n                  shape: 'S24'\n                },\n                endTime: {\n                  type: 'timestamp'\n                },\n                executionId: {},\n                jobId: {},\n                jobName: {},\n                jobType: {},\n                returnCode: {},\n                startTime: {\n                  type: 'timestamp'\n                },\n                status: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListBatchJobRestartPoints: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/batch-job-executions/{executionId}/steps',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'executionId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          executionId: {\n            location: 'uri',\n            locationName: 'executionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          batchJobSteps: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                procStepName: {},\n                procStepNumber: {\n                  type: 'integer'\n                },\n                stepCondCode: {},\n                stepName: {},\n                stepNumber: {\n                  type: 'integer'\n                },\n                stepRestartable: {\n                  type: 'boolean'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListDataSetImportHistory: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/dataset-import-tasks',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'dataSetImportTasks'\n        ],\n        members: {\n          dataSetImportTasks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'status',\n                'summary',\n                'taskId'\n              ],\n              members: {\n                status: {},\n                statusReason: {},\n                summary: {\n                  shape: 'S2o'\n                },\n                taskId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDataSets: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/datasets',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nameFilter: {\n            location: 'querystring',\n            locationName: 'nameFilter'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          prefix: {\n            location: 'querystring',\n            locationName: 'prefix'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'dataSets'\n        ],\n        members: {\n          dataSets: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'dataSetName'\n              ],\n              members: {\n                creationTime: {\n                  type: 'timestamp'\n                },\n                dataSetName: {},\n                dataSetOrg: {},\n                format: {},\n                lastReferencedTime: {\n                  type: 'timestamp'\n                },\n                lastUpdatedTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDeployments: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/deployments',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'deployments'\n        ],\n        members: {\n          deployments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'applicationId',\n                'applicationVersion',\n                'creationTime',\n                'deploymentId',\n                'environmentId',\n                'status'\n              ],\n              members: {\n                applicationId: {},\n                applicationVersion: {\n                  type: 'integer'\n                },\n                creationTime: {\n                  type: 'timestamp'\n                },\n                deploymentId: {},\n                environmentId: {},\n                status: {},\n                statusReason: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListEngineVersions: {\n      http: {\n        method: 'GET',\n        requestUri: '/engine-versions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          engineType: {\n            location: 'querystring',\n            locationName: 'engineType'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'engineVersions'\n        ],\n        members: {\n          engineVersions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'engineType',\n                'engineVersion'\n              ],\n              members: {\n                engineType: {},\n                engineVersion: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListEnvironments: {\n      http: {\n        method: 'GET',\n        requestUri: '/environments',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          engineType: {\n            location: 'querystring',\n            locationName: 'engineType'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          names: {\n            shape: 'S33',\n            location: 'querystring',\n            locationName: 'names'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'environments'\n        ],\n        members: {\n          environments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'creationTime',\n                'engineType',\n                'engineVersion',\n                'environmentArn',\n                'environmentId',\n                'instanceType',\n                'name',\n                'status'\n              ],\n              members: {\n                creationTime: {\n                  type: 'timestamp'\n                },\n                engineType: {},\n                engineVersion: {},\n                environmentArn: {},\n                environmentId: {},\n                instanceType: {},\n                name: {},\n                status: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'tags'\n        ],\n        members: {\n          tags: {\n            shape: 'Sd'\n          }\n        }\n      }\n    },\n    StartApplication: {\n      http: {\n        requestUri: '/applications/{applicationId}/start',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    StartBatchJob: {\n      http: {\n        requestUri: '/applications/{applicationId}/batch-job',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'batchJobIdentifier'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          batchJobIdentifier: {\n            shape: 'S24'\n          },\n          jobParams: {\n            type: 'map',\n            key: {},\n            value: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'executionId'\n        ],\n        members: {\n          executionId: {}\n        }\n      }\n    },\n    StopApplication: {\n      http: {\n        requestUri: '/applications/{applicationId}/stop',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          forceStop: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sd'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateApplication: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/applications/{applicationId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'currentApplicationVersion'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          currentApplicationVersion: {\n            type: 'integer'\n          },\n          definition: {\n            shape: 'S6'\n          },\n          description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applicationVersion'\n        ],\n        members: {\n          applicationVersion: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    UpdateEnvironment: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/environments/{environmentId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          applyDuringMaintenanceWindow: {\n            type: 'boolean'\n          },\n          desiredCapacity: {\n            type: 'integer'\n          },\n          engineVersion: {},\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          forceUpdate: {\n            type: 'boolean'\n          },\n          instanceType: {},\n          preferredMaintenanceWindow: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S6: {\n      type: 'structure',\n      members: {\n        content: {},\n        s3Location: {}\n      },\n      union: true\n    },\n    Sd: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sv: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'length',\n          'offset'\n        ],\n        members: {\n          allowDuplicates: {\n            type: 'boolean'\n          },\n          length: {\n            type: 'integer'\n          },\n          name: {},\n          offset: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    Sy: {\n      type: 'structure',\n      required: [\n        'length',\n        'offset'\n      ],\n      members: {\n        length: {\n          type: 'integer'\n        },\n        name: {},\n        offset: {\n          type: 'integer'\n        }\n      }\n    },\n    S16: {\n      type: 'structure',\n      required: [\n        'desiredCapacity'\n      ],\n      members: {\n        desiredCapacity: {\n          type: 'integer'\n        }\n      }\n    },\n    S19: {\n      type: 'list',\n      member: {}\n    },\n    S1a: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          efs: {\n            type: 'structure',\n            required: [\n              'fileSystemId',\n              'mountPoint'\n            ],\n            members: {\n              fileSystemId: {\n                locationName: 'file-system-id'\n              },\n              mountPoint: {\n                locationName: 'mount-point'\n              }\n            }\n          },\n          fsx: {\n            type: 'structure',\n            required: [\n              'fileSystemId',\n              'mountPoint'\n            ],\n            members: {\n              fileSystemId: {\n                locationName: 'file-system-id'\n              },\n              mountPoint: {\n                locationName: 'mount-point'\n              }\n            }\n          }\n        },\n        union: true\n      }\n    },\n    S1r: {\n      type: 'structure',\n      required: [\n        'applicationVersion',\n        'creationTime',\n        'status'\n      ],\n      members: {\n        applicationVersion: {\n          type: 'integer'\n        },\n        creationTime: {\n          type: 'timestamp'\n        },\n        status: {},\n        statusReason: {}\n      }\n    },\n    S1t: {\n      type: 'list',\n      member: {}\n    },\n    S24: {\n      type: 'structure',\n      members: {\n        fileBatchJobIdentifier: {\n          type: 'structure',\n          required: [\n            'fileName'\n          ],\n          members: {\n            fileName: {},\n            folderPath: {}\n          }\n        },\n        restartBatchJobIdentifier: {\n          type: 'structure',\n          required: [\n            'executionId',\n            'jobStepRestartMarker'\n          ],\n          members: {\n            executionId: {},\n            jobStepRestartMarker: {\n              shape: 'S27'\n            }\n          }\n        },\n        s3BatchJobIdentifier: {\n          type: 'structure',\n          required: [\n            'bucket',\n            'identifier'\n          ],\n          members: {\n            bucket: {},\n            identifier: {\n              type: 'structure',\n              members: {\n                fileName: {},\n                scriptName: {}\n              },\n              union: true\n            },\n            keyPrefix: {}\n          }\n        },\n        scriptBatchJobIdentifier: {\n          type: 'structure',\n          required: [\n            'scriptName'\n          ],\n          members: {\n            scriptName: {}\n          }\n        }\n      },\n      union: true\n    },\n    S27: {\n      type: 'structure',\n      required: [\n        'fromStep'\n      ],\n      members: {\n        fromProcStep: {},\n        fromStep: {},\n        toProcStep: {},\n        toStep: {}\n      }\n    },\n    S2o: {\n      type: 'structure',\n      required: [\n        'failed',\n        'inProgress',\n        'pending',\n        'succeeded',\n        'total'\n      ],\n      members: {\n        failed: {\n          type: 'integer'\n        },\n        inProgress: {\n          type: 'integer'\n        },\n        pending: {\n          type: 'integer'\n        },\n        succeeded: {\n          type: 'integer'\n        },\n        total: {\n          type: 'integer'\n        }\n      }\n    },\n    S33: {\n      type: 'list',\n      member: {}\n    }\n  }\n}"]}