{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/backupstorage-2018-04-10.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","DeleteObject","http","method","requestUri","input","type","required","members","BackupJobId","location","locationName","ObjectName","GetChunk","StorageJobId","ChunkToken","output","Data","shape","Length","Checksum","ChecksumAlgorithm","payload","GetObjectMetadata","ObjectToken","MetadataString","MetadataBlob","MetadataBlobLength","MetadataBlobChecksum","MetadataBlobChecksumAlgorithm","ListChunks","MaxResults","NextToken","ChunkList","member","Index","ListObjects","StartingObjectName","StartingObjectPrefix","CreatedBefore","CreatedAfter","ObjectList","Name","ChunksCount","ObjectChecksum","ObjectChecksumAlgorithm","NotifyObjectComplete","UploadId","authtype","PutChunk","ChunkIndex","ChunkChecksum","ChunkChecksumAlgorithm","PutObject","InlineChunk","InlineChunkLength","InlineChunkChecksum","InlineChunkChecksumAlgorithm","ThrowOnDuplicate","StartObject","shapes","S5","streaming"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-04-10',\n    endpointPrefix: 'backupstorage',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS Backup Storage',\n    serviceId: 'BackupStorage',\n    signatureVersion: 'v4',\n    signingName: 'backup-storage',\n    uid: 'backupstorage-2018-04-10'\n  },\n  operations: {\n    DeleteObject: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/backup-jobs/{jobId}/object/{objectName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupJobId',\n          'ObjectName'\n        ],\n        members: {\n          BackupJobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          ObjectName: {\n            location: 'uri',\n            locationName: 'objectName'\n          }\n        }\n      }\n    },\n    GetChunk: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-jobs/{jobId}/chunk/{chunkToken}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'StorageJobId',\n          'ChunkToken'\n        ],\n        members: {\n          StorageJobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          ChunkToken: {\n            location: 'uri',\n            locationName: 'chunkToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Data',\n          'Length',\n          'Checksum',\n          'ChecksumAlgorithm'\n        ],\n        members: {\n          Data: {\n            shape: 'S5'\n          },\n          Length: {\n            location: 'header',\n            locationName: 'x-amz-data-length',\n            type: 'long'\n          },\n          Checksum: {\n            location: 'header',\n            locationName: 'x-amz-checksum'\n          },\n          ChecksumAlgorithm: {\n            location: 'header',\n            locationName: 'x-amz-checksum-algorithm'\n          }\n        },\n        payload: 'Data'\n      }\n    },\n    GetObjectMetadata: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-jobs/{jobId}/object/{objectToken}/metadata'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'StorageJobId',\n          'ObjectToken'\n        ],\n        members: {\n          StorageJobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          ObjectToken: {\n            location: 'uri',\n            locationName: 'objectToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MetadataString: {\n            location: 'header',\n            locationName: 'x-amz-metadata-string'\n          },\n          MetadataBlob: {\n            shape: 'S5'\n          },\n          MetadataBlobLength: {\n            location: 'header',\n            locationName: 'x-amz-data-length',\n            type: 'long'\n          },\n          MetadataBlobChecksum: {\n            location: 'header',\n            locationName: 'x-amz-checksum'\n          },\n          MetadataBlobChecksumAlgorithm: {\n            location: 'header',\n            locationName: 'x-amz-checksum-algorithm'\n          }\n        },\n        payload: 'MetadataBlob'\n      }\n    },\n    ListChunks: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-jobs/{jobId}/chunks/{objectToken}/list'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'StorageJobId',\n          'ObjectToken'\n        ],\n        members: {\n          StorageJobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          ObjectToken: {\n            location: 'uri',\n            locationName: 'objectToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'max-results',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'next-token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChunkList'\n        ],\n        members: {\n          ChunkList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Index',\n                'Length',\n                'Checksum',\n                'ChecksumAlgorithm',\n                'ChunkToken'\n              ],\n              members: {\n                Index: {\n                  type: 'long'\n                },\n                Length: {\n                  type: 'long'\n                },\n                Checksum: {},\n                ChecksumAlgorithm: {},\n                ChunkToken: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListObjects: {\n      http: {\n        method: 'GET',\n        requestUri: '/restore-jobs/{jobId}/objects/list'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'StorageJobId'\n        ],\n        members: {\n          StorageJobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          StartingObjectName: {\n            location: 'querystring',\n            locationName: 'starting-object-name'\n          },\n          StartingObjectPrefix: {\n            location: 'querystring',\n            locationName: 'starting-object-prefix'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'max-results',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'next-token'\n          },\n          CreatedBefore: {\n            location: 'querystring',\n            locationName: 'created-before',\n            type: 'timestamp'\n          },\n          CreatedAfter: {\n            location: 'querystring',\n            locationName: 'created-after',\n            type: 'timestamp'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ObjectList'\n        ],\n        members: {\n          ObjectList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Name',\n                'ObjectChecksum',\n                'ObjectChecksumAlgorithm',\n                'ObjectToken'\n              ],\n              members: {\n                Name: {},\n                ChunksCount: {\n                  type: 'long'\n                },\n                MetadataString: {},\n                ObjectChecksum: {},\n                ObjectChecksumAlgorithm: {},\n                ObjectToken: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    NotifyObjectComplete: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup-jobs/{jobId}/object/{uploadId}/complete'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupJobId',\n          'UploadId',\n          'ObjectChecksum',\n          'ObjectChecksumAlgorithm'\n        ],\n        members: {\n          BackupJobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          UploadId: {\n            location: 'uri',\n            locationName: 'uploadId'\n          },\n          ObjectChecksum: {\n            location: 'querystring',\n            locationName: 'checksum'\n          },\n          ObjectChecksumAlgorithm: {\n            location: 'querystring',\n            locationName: 'checksum-algorithm'\n          },\n          MetadataString: {\n            location: 'querystring',\n            locationName: 'metadata-string'\n          },\n          MetadataBlob: {\n            shape: 'S5'\n          },\n          MetadataBlobLength: {\n            location: 'querystring',\n            locationName: 'metadata-blob-length',\n            type: 'long'\n          },\n          MetadataBlobChecksum: {\n            location: 'querystring',\n            locationName: 'metadata-checksum'\n          },\n          MetadataBlobChecksumAlgorithm: {\n            location: 'querystring',\n            locationName: 'metadata-checksum-algorithm'\n          }\n        },\n        payload: 'MetadataBlob'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ObjectChecksum',\n          'ObjectChecksumAlgorithm'\n        ],\n        members: {\n          ObjectChecksum: {},\n          ObjectChecksumAlgorithm: {}\n        }\n      },\n      authtype: 'v4-unsigned-body'\n    },\n    PutChunk: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup-jobs/{jobId}/chunk/{uploadId}/{chunkIndex}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupJobId',\n          'UploadId',\n          'ChunkIndex',\n          'Data',\n          'Length',\n          'Checksum',\n          'ChecksumAlgorithm'\n        ],\n        members: {\n          BackupJobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          UploadId: {\n            location: 'uri',\n            locationName: 'uploadId'\n          },\n          ChunkIndex: {\n            location: 'uri',\n            locationName: 'chunkIndex',\n            type: 'long'\n          },\n          Data: {\n            shape: 'S5'\n          },\n          Length: {\n            location: 'querystring',\n            locationName: 'length',\n            type: 'long'\n          },\n          Checksum: {\n            location: 'querystring',\n            locationName: 'checksum'\n          },\n          ChecksumAlgorithm: {\n            location: 'querystring',\n            locationName: 'checksum-algorithm'\n          }\n        },\n        payload: 'Data'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChunkChecksum',\n          'ChunkChecksumAlgorithm'\n        ],\n        members: {\n          ChunkChecksum: {},\n          ChunkChecksumAlgorithm: {}\n        }\n      },\n      authtype: 'v4-unsigned-body'\n    },\n    PutObject: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup-jobs/{jobId}/object/{objectName}/put-object'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupJobId',\n          'ObjectName'\n        ],\n        members: {\n          BackupJobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          ObjectName: {\n            location: 'uri',\n            locationName: 'objectName'\n          },\n          MetadataString: {\n            location: 'querystring',\n            locationName: 'metadata-string'\n          },\n          InlineChunk: {\n            shape: 'S5'\n          },\n          InlineChunkLength: {\n            location: 'querystring',\n            locationName: 'length',\n            type: 'long'\n          },\n          InlineChunkChecksum: {\n            location: 'querystring',\n            locationName: 'checksum'\n          },\n          InlineChunkChecksumAlgorithm: {\n            location: 'querystring',\n            locationName: 'checksum-algorithm'\n          },\n          ObjectChecksum: {\n            location: 'querystring',\n            locationName: 'object-checksum'\n          },\n          ObjectChecksumAlgorithm: {\n            location: 'querystring',\n            locationName: 'object-checksum-algorithm'\n          },\n          ThrowOnDuplicate: {\n            location: 'querystring',\n            locationName: 'throwOnDuplicate',\n            type: 'boolean'\n          }\n        },\n        payload: 'InlineChunk'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'InlineChunkChecksum',\n          'InlineChunkChecksumAlgorithm',\n          'ObjectChecksum',\n          'ObjectChecksumAlgorithm'\n        ],\n        members: {\n          InlineChunkChecksum: {},\n          InlineChunkChecksumAlgorithm: {},\n          ObjectChecksum: {},\n          ObjectChecksumAlgorithm: {}\n        }\n      },\n      authtype: 'v4-unsigned-body'\n    },\n    StartObject: {\n      http: {\n        method: 'PUT',\n        requestUri: '/backup-jobs/{jobId}/object/{objectName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'BackupJobId',\n          'ObjectName'\n        ],\n        members: {\n          BackupJobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          ObjectName: {\n            location: 'uri',\n            locationName: 'objectName'\n          },\n          ThrowOnDuplicate: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'UploadId'\n        ],\n        members: {\n          UploadId: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'blob',\n      streaming: true\n    }\n  }\n}"]}