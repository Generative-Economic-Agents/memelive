{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/ecr-public-2020-10-30.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","BatchCheckLayerAvailability","input","type","required","members","registryId","repositoryName","layerDigests","member","output","layers","layerDigest","layerAvailability","layerSize","mediaType","failures","failureCode","failureReason","BatchDeleteImage","imageIds","shape","imageId","CompleteLayerUpload","uploadId","CreateRepository","catalogData","tags","repository","DeleteRepository","force","DeleteRepositoryPolicy","policyText","DescribeImageTags","nextToken","maxResults","imageTagDetails","imageTag","createdAt","imageDetail","imageDigest","imageSizeInBytes","imagePushedAt","imageManifestMediaType","artifactMediaType","DescribeImages","imageDetails","imageTags","DescribeRegistries","registries","registryArn","registryUri","verified","aliases","name","status","primaryRegistryAlias","defaultRegistryAlias","DescribeRepositories","repositoryNames","repositories","GetAuthorizationToken","authorizationData","authorizationToken","expiresAt","GetRegistryCatalogData","registryCatalogData","GetRepositoryCatalogData","GetRepositoryPolicy","InitiateLayerUpload","partSize","ListTagsForResource","resourceArn","PutImage","imageManifest","image","PutRegistryCatalogData","displayName","PutRepositoryCatalogData","SetRepositoryPolicy","TagResource","UntagResource","tagKeys","UploadLayerPart","partFirstByte","partLastByte","layerPartBlob","lastByteReceived","shapes","Si","Sj","Sx","description","architectures","operatingSystems","logoImageBlob","aboutText","usageText","Sz","S11","S16","Key","Value","S1b","repositoryArn","repositoryUri","S1f","logoUrl","marketplaceCertified","S2o"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-10-30',\n    endpointPrefix: 'api.ecr-public',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceAbbreviation: 'Amazon ECR Public',\n    serviceFullName: 'Amazon Elastic Container Registry Public',\n    serviceId: 'ECR PUBLIC',\n    signatureVersion: 'v4',\n    signingName: 'ecr-public',\n    targetPrefix: 'SpencerFrontendService',\n    uid: 'ecr-public-2020-10-30'\n  },\n  operations: {\n    BatchCheckLayerAvailability: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName',\n          'layerDigests'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {},\n          layerDigests: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          layers: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                layerDigest: {},\n                layerAvailability: {},\n                layerSize: {\n                  type: 'long'\n                },\n                mediaType: {}\n              }\n            }\n          },\n          failures: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                layerDigest: {},\n                failureCode: {},\n                failureReason: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    BatchDeleteImage: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName',\n          'imageIds'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {},\n          imageIds: {\n            shape: 'Si'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          imageIds: {\n            shape: 'Si'\n          },\n          failures: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                imageId: {\n                  shape: 'Sj'\n                },\n                failureCode: {},\n                failureReason: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    CompleteLayerUpload: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName',\n          'uploadId',\n          'layerDigests'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {},\n          uploadId: {},\n          layerDigests: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          registryId: {},\n          repositoryName: {},\n          uploadId: {},\n          layerDigest: {}\n        }\n      }\n    },\n    CreateRepository: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName'\n        ],\n        members: {\n          repositoryName: {},\n          catalogData: {\n            shape: 'Sx'\n          },\n          tags: {\n            shape: 'S16'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          repository: {\n            shape: 'S1b'\n          },\n          catalogData: {\n            shape: 'S1f'\n          }\n        }\n      }\n    },\n    DeleteRepository: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {},\n          force: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          repository: {\n            shape: 'S1b'\n          }\n        }\n      }\n    },\n    DeleteRepositoryPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          registryId: {},\n          repositoryName: {},\n          policyText: {}\n        }\n      }\n    },\n    DescribeImageTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          imageTagDetails: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                imageTag: {},\n                createdAt: {\n                  type: 'timestamp'\n                },\n                imageDetail: {\n                  type: 'structure',\n                  members: {\n                    imageDigest: {},\n                    imageSizeInBytes: {\n                      type: 'long'\n                    },\n                    imagePushedAt: {\n                      type: 'timestamp'\n                    },\n                    imageManifestMediaType: {},\n                    artifactMediaType: {}\n                  }\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    DescribeImages: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {},\n          imageIds: {\n            shape: 'Si'\n          },\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          imageDetails: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                registryId: {},\n                repositoryName: {},\n                imageDigest: {},\n                imageTags: {\n                  type: 'list',\n                  member: {}\n                },\n                imageSizeInBytes: {\n                  type: 'long'\n                },\n                imagePushedAt: {\n                  type: 'timestamp'\n                },\n                imageManifestMediaType: {},\n                artifactMediaType: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    DescribeRegistries: {\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'registries'\n        ],\n        members: {\n          registries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'registryId',\n                'registryArn',\n                'registryUri',\n                'verified',\n                'aliases'\n              ],\n              members: {\n                registryId: {},\n                registryArn: {},\n                registryUri: {},\n                verified: {\n                  type: 'boolean'\n                },\n                aliases: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    required: [\n                      'name',\n                      'status',\n                      'primaryRegistryAlias',\n                      'defaultRegistryAlias'\n                    ],\n                    members: {\n                      name: {},\n                      status: {},\n                      primaryRegistryAlias: {\n                        type: 'boolean'\n                      },\n                      defaultRegistryAlias: {\n                        type: 'boolean'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    DescribeRepositories: {\n      input: {\n        type: 'structure',\n        members: {\n          registryId: {},\n          repositoryNames: {\n            type: 'list',\n            member: {}\n          },\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          repositories: {\n            type: 'list',\n            member: {\n              shape: 'S1b'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetAuthorizationToken: {\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          authorizationData: {\n            type: 'structure',\n            members: {\n              authorizationToken: {},\n              expiresAt: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetRegistryCatalogData: {\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'registryCatalogData'\n        ],\n        members: {\n          registryCatalogData: {\n            shape: 'S2o'\n          }\n        }\n      }\n    },\n    GetRepositoryCatalogData: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          catalogData: {\n            shape: 'S1f'\n          }\n        }\n      }\n    },\n    GetRepositoryPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          registryId: {},\n          repositoryName: {},\n          policyText: {}\n        }\n      }\n    },\n    InitiateLayerUpload: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          uploadId: {},\n          partSize: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S16'\n          }\n        }\n      }\n    },\n    PutImage: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName',\n          'imageManifest'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {},\n          imageManifest: {},\n          imageManifestMediaType: {},\n          imageTag: {},\n          imageDigest: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          image: {\n            type: 'structure',\n            members: {\n              registryId: {},\n              repositoryName: {},\n              imageId: {\n                shape: 'Sj'\n              },\n              imageManifest: {},\n              imageManifestMediaType: {}\n            }\n          }\n        }\n      }\n    },\n    PutRegistryCatalogData: {\n      input: {\n        type: 'structure',\n        members: {\n          displayName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'registryCatalogData'\n        ],\n        members: {\n          registryCatalogData: {\n            shape: 'S2o'\n          }\n        }\n      }\n    },\n    PutRepositoryCatalogData: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName',\n          'catalogData'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {},\n          catalogData: {\n            shape: 'Sx'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          catalogData: {\n            shape: 'S1f'\n          }\n        }\n      }\n    },\n    SetRepositoryPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName',\n          'policyText'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {},\n          policyText: {},\n          force: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          registryId: {},\n          repositoryName: {},\n          policyText: {}\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {},\n          tags: {\n            shape: 'S16'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {},\n          tagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UploadLayerPart: {\n      input: {\n        type: 'structure',\n        required: [\n          'repositoryName',\n          'uploadId',\n          'partFirstByte',\n          'partLastByte',\n          'layerPartBlob'\n        ],\n        members: {\n          registryId: {},\n          repositoryName: {},\n          uploadId: {},\n          partFirstByte: {\n            type: 'long'\n          },\n          partLastByte: {\n            type: 'long'\n          },\n          layerPartBlob: {\n            type: 'blob'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          registryId: {},\n          repositoryName: {},\n          uploadId: {},\n          lastByteReceived: {\n            type: 'long'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    Si: {\n      type: 'list',\n      member: {\n        shape: 'Sj'\n      }\n    },\n    Sj: {\n      type: 'structure',\n      members: {\n        imageDigest: {},\n        imageTag: {}\n      }\n    },\n    Sx: {\n      type: 'structure',\n      members: {\n        description: {},\n        architectures: {\n          shape: 'Sz'\n        },\n        operatingSystems: {\n          shape: 'S11'\n        },\n        logoImageBlob: {\n          type: 'blob'\n        },\n        aboutText: {},\n        usageText: {}\n      }\n    },\n    Sz: {\n      type: 'list',\n      member: {}\n    },\n    S11: {\n      type: 'list',\n      member: {}\n    },\n    S16: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    S1b: {\n      type: 'structure',\n      members: {\n        repositoryArn: {},\n        registryId: {},\n        repositoryName: {},\n        repositoryUri: {},\n        createdAt: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S1f: {\n      type: 'structure',\n      members: {\n        description: {},\n        architectures: {\n          shape: 'Sz'\n        },\n        operatingSystems: {\n          shape: 'S11'\n        },\n        logoUrl: {},\n        aboutText: {},\n        usageText: {},\n        marketplaceCertified: {\n          type: 'boolean'\n        }\n      }\n    },\n    S2o: {\n      type: 'structure',\n      members: {\n        displayName: {}\n      }\n    }\n  }\n}"]}