{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/assets/src/NPC/NPCControl.ts"],"names":["_decorator","Camera","Component","KeyCode","Node","TiledLayer","TiledMap","tween","Vec2","Vec3","view","NPCDirect","AStar","hight","GlobalConfig","ccclass","property","distance","spriteFrame","originRootX","frameSpeed","NPCControl","keyDown","currentDirectKey","stepIndex","frameAdd","aStarPath","rightPos","rightDirect","NpcID","_curTile","npcBasePartInfo","body","hair","sexy","index","pants","shirt","npcDisplayInfo","npcIndex","start","setNPCDisplayColor","setNPCDisplayBase","update","deltaTime","setMoveSprite","partBaseInfo","setPosition","setNPCMoveDirect","key","npcRoot","getPosition","x","directPos","setNPCPosition","block","building","getComponent","getTileGIDAt","offsetX","y","offsetY","gameView","getVisibleSize","pos","getPositionAt","originPos","npc","console","log","camera","node","instance","currentNpcIndex","canvas","getScale","width","height","error","_getTilePos","posInPixel","mapSize","Math","floor","aStartMove","finish","cb","moveToward","length","sequence","prePos","tileSize","parent","getTileSize","actionPosition","i","push","to","position","call","steepKey","KEY_D","KEY_A","KEY_W","KEY_S"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAmDC,MAAAA,O,OAAAA,O;AAAgBC,MAAAA,I,OAAAA,I;AAAgCC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,Q,OAAAA,Q;AAAgBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;;AACtKC,MAAAA,S,iBAAAA,S;;AAKAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBhB,U;;0BACjBiB,Q,GAAW,CAAC,G,GAAI;;;6BAChBC,W,GAAc,E,GAAG;;;6BACjBC,W,GAAc,CAAC,K;;4BACfC,U,GAAa,I;;4BAabC,U,WADZN,OAAO,CAAC,YAAD,C,UAEHC,QAAQ,CAACZ,IAAD,C,UAERY,QAAQ,CAACZ,IAAD,C,UAGRY,QAAQ,CAACZ,IAAD,C,UAGRY,QAAQ,CAACZ,IAAD,C,UAGRY,QAAQ,CAACZ,IAAD,C,UAGRY,QAAQ,CAACZ,IAAD,C,UAGRY,QAAQ,CAACf,MAAD,C,UAGRe,QAAQ,CAACZ,IAAD,C,WAGRY,QAAQ,CAACZ,IAAD,C,WAGRY,QAAQ,CAACZ,IAAD,C,2BA5Bb,MACaiB,UADb,SACgCnB,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eA8BtCoB,OA9BsC,GA8BnB,KA9BmB;AA8BF;AA9BE,eA+BtCC,gBA/BsC;AA+BF;AA/BE,eAgCtCC,SAhCsC,GAgClB,CAhCkB;AAAA,eAkCtCC,QAlCsC,GAkC3B,CAlC2B;AAAA,eAmCtCC,SAnCsC,GAmC1B,EAnC0B;AAAA,eAoCtCC,QApCsC,GAoCrB,IAAInB,IAAJ,EApCqB;AAAA,eAqCtCoB,WArCsC;AAAA,eAsCtCC,KAtCsC;AAAA,eAuCtCC,QAvCsC,GAuC3B,IAAItB,IAAJ,EAvC2B;AAwCtC;AAxCsC,eAyCtCuB,eAzCsC,GAyCA;AAClCC,YAAAA,IAAI,EAAE,CAD4B;AAElCC,YAAAA,IAAI,EAAE;AACFC,cAAAA,IAAI,EAAE,KADJ;AAEFC,cAAAA,KAAK,EAAE;AAFL,aAF4B;AAMlCC,YAAAA,KAAK,EAAE,CAN2B;AAOlCC,YAAAA,KAAK,EAAE;AAP2B,WAzCA;AAmDtC;AAnDsC,eAoDtCC,cApDsC,GAoDL;AAC7BN,YAAAA,IAAI,EAAE,CADuB;AAE7BC,YAAAA,IAAI,EAAE,CAFuB;AAG7BG,YAAAA,KAAK,EAAE,CAHsB;AAI7BC,YAAAA,KAAK,EAAE;AAJsB,WApDK;AAAA,eA0DtCE,QA1DsC;AAAA;;AA4DtCC,QAAAA,KAAK,GAAG;AACL;AACC,eAAKC,kBAAL;AACA,eAAKC,iBAAL;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKnB,QAAL,GAAgB,KAAKA,QAAL,GAAgBmB,SAAhC;;AACA,cAAG,KAAKtB,OAAL,IAAgB,KAAKG,QAAL,GAAgBL,UAAnC,EAA8C;AAC1C,iBAAKyB,aAAL,CAAmB,KAAKtB,gBAAxB;AACA,iBAAKE,QAAL,GAAgB,CAAhB;AACH;AACJ;;AAEDiB,QAAAA,iBAAiB,CAACI,YAAD,EAQf;AAAA,cARgBA,YAQhB;AARgBA,YAAAA,YAQhB,GARmD;AACjDd,cAAAA,IAAI,EAAE,CAD2C;AAEjDC,cAAAA,IAAI,EAAE;AACFC,gBAAAA,IAAI,EAAE,KADJ;AAEFC,gBAAAA,KAAK,EAAE;AAFL,eAF2C;AAMjDC,cAAAA,KAAK,EAAE,CAN0C;AAOjDC,cAAAA,KAAK,EAAE;AAP0C,aAQnD;AAAA;;AACE,eAAKN,eAAL,GAAuBe,YAAvB,CADF,CAEE;AACA;AACA;AACA;AACH;;AAEDL,QAAAA,kBAAkB,CAACH,cAAD,EAKhB;AAAA,cALiBA,cAKjB;AALiBA,YAAAA,cAKjB,GALkD;AAChDN,cAAAA,IAAI,EAAE,CAD0C;AAEhDC,cAAAA,IAAI,EAAE,CAF0C;AAGhDG,cAAAA,KAAK,EAAE,CAHyC;AAIhDC,cAAAA,KAAK,EAAE;AAJyC,aAKlD;AAAA;;AACE,eAAKC,cAAL,GAAsBA,cAAtB;AACA,eAAKN,IAAL,CAAUe,WAAV,CAAsB,KAAKT,cAAL,CAAoBN,IAApB,GAA2Bf,QAAjD,EAA2D,CAA3D;AACA,eAAKgB,IAAL,CAAUc,WAAV,CAAsB,KAAKT,cAAL,CAAoBL,IAApB,GAA2BhB,QAAjD,EAA2D,CAA3D;AACA,eAAKmB,KAAL,CAAWW,WAAX,CAAuB,KAAKT,cAAL,CAAoBF,KAApB,GAA4BnB,QAAnD,EAA6D,CAA7D;AACA,eAAKoB,KAAL,CAAWU,WAAX,CAAuB,KAAKT,cAAL,CAAoBD,KAApB,GAA4BpB,QAAnD,EAA6D,CAA7D;AACH;;AAED+B,QAAAA,gBAAgB,CAACC,GAAD,EAAc;AAC1B,eAAKC,OAAL,CAAaH,WAAb,CAAyB,KAAKG,OAAL,CAAaC,WAAb,GAA2BC,CAApD,EAAuD;AAAA;AAAA,sCAAUH,GAAV,EAAeI,SAAtE;AACH;;AAEDC,QAAAA,cAAc,CAACL,GAAD,EAAc;AACxB,cAAI;AAAA;;AACA,gBAAMM,KAAK,GAAG,IAAH,8BAAG,KAAMC,QAAT,+BAAG,eAAgBC,YAAhB,CAA6BpD,UAA7B,CAAH,qBAAG,eAA0CqD,YAA1C,CAAuD,KAAK5B,QAAL,CAAcsB,CAAd,GAAkB;AAAA;AAAA,wCAAUH,GAAV,EAAeU,OAAxF,EAAiG,KAAK7B,QAAL,CAAc8B,CAAd,GAAkB;AAAA;AAAA,wCAAUX,GAAV,EAAeY,OAAlI,CAAd;;AACA,gBAAGN,KAAH,EAAS;AACL;AACH;;AACD,gBAAMO,QAAQ,GAAGpD,IAAI,CAACqD,cAAL,EAAjB;AACA,iBAAKjC,QAAL,CAAcsB,CAAd,GAAkB,KAAKtB,QAAL,CAAcsB,CAAd,GAAkB;AAAA;AAAA,wCAAUH,GAAV,EAAeU,OAAnD;AACA,iBAAK7B,QAAL,CAAc8B,CAAd,GAAkB,KAAK9B,QAAL,CAAc8B,CAAd,GAAkB;AAAA;AAAA,wCAAUX,GAAV,EAAeY,OAAnD;AACA,gBAAMG,GAAG,GAAG,KAAKR,QAAL,CAAcC,YAAd,CAA2BpD,UAA3B,EAAuC4D,aAAvC,CAAqD,KAAKnC,QAA1D,CAAZ;AACA;AAAA;AAAA,wCAAUmB,GAAV;AACA,gBAAMiB,SAAS,GAAG,KAAKC,GAAL,CAAShB,WAAT,EAAlB,CAVA,CAWA;;AACA,iBAAKgB,GAAL,CAASpB,WAAT,CAAqBiB,GAAG,CAACZ,CAAzB,EAA4BY,GAAG,CAACJ,CAAhC;AACAQ,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,KAAKC,MAAL,CAAYC,IAAZ,CAAiBpB,WAAjB,EAAxB;;AACA,gBAAG,KAAKZ,QAAL,KAAkB;AAAA;AAAA,8CAAaiC,QAAb,CAAsBC,eAAxC,IAA2D,KAAKC,MAAL,CAAYC,QAAZ,GAAuBvB,CAAvB,KAA6B,CAA3F,EAA6F,CAE5F;;AACD,iBAAKkB,MAAL,CAAYC,IAAZ,CAAiBxB,WAAjB,CAA6B,KAAKoB,GAAL,CAAShB,WAAT,GAAuBC,CAAvB,GAA2BU,QAAQ,CAACc,KAAT,GAAiB,CAAzE,EAA6E,EAAI;AAAA;AAAA,kCAAQ,KAAKT,GAAL,CAAShB,WAAT,GAAuBS,CAAhC,GAAqCE,QAAQ,CAACe,MAA9C,GAAuD,GAA1D,CAA7E,EAjBA,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,WAjCD,CAiCE,OAAOC,KAAP,EAAc,CAEf;AAEJ;;AAEDjC,QAAAA,aAAa,CAACI,GAAD,EAAc;AACvB,cAAG,KAAKzB,SAAL,KAAmB,CAAtB,EAAwB;AACpB,iBAAKA,SAAL,GAAiB,CAAjB;AACA,iBAAK0B,OAAL,CAAaH,WAAb,CAAyB5B,WAAzB,EAAsC,KAAK+B,OAAL,CAAaC,WAAb,GAA2BS,CAAjE;AACH,WAHD,MAGK;AACD,iBAAKpC,SAAL,GAAiB,KAAKA,SAAL,EAAjB;AACA,iBAAK0B,OAAL,CAAaH,WAAb,CAAyB,KAAKG,OAAL,CAAaC,WAAb,GAA2BC,CAA3B,GAA+BlC,WAAxD,EAAqE,KAAKgC,OAAL,CAAaC,WAAb,GAA2BS,CAAhG;AACH;;AACD,cAAG,KAAKU,MAAR,EAAe;AACX,iBAAKhB,cAAL,CAAoBL,GAApB;AACH;AACJ;;AAED8B,QAAAA,WAAW,CAAEC,UAAF,EAAmC;AAC1C,cAAMC,OAAO,GAAG;AAACJ,YAAAA,MAAM;AAAA;AAAA;AAAP,WAAhB;AACA,cAAMzB,CAAC,GAAG8B,IAAI,CAACC,KAAL,CAAWH,UAAU,CAAC5B,CAAX,GAAe,EAA1B,CAAV;AACA,cAAMQ,CAAC,GAAGsB,IAAI,CAACC,KAAL,CAAW,CAACF,OAAO,CAACJ,MAAR,GAAiBG,UAAU,CAACpB,CAA7B,IAAkC,EAA7C,CAAV;AACA,iBAAO,IAAIpD,IAAJ,CAAS4C,CAAT,EAAYQ,CAAC,GAAG,CAAhB,CAAP;AACH;;AAEDwB,QAAAA,UAAU,CAAC5C,KAAD,EAAQ6C,MAAR,EAAgBC,EAAhB,EAA8B;AAAA;;AACpC,eAAK5D,SAAL,GAAiB,KAAK6C,IAAL,CAAUd,YAAV;AAAA;AAAA,8BAA8B8B,UAA9B,CAAyC/C,KAAzC,EAAgD6C,MAAhD,CAAjB;;AACA,cAAI,KAAK3D,SAAL,CAAe8D,MAAf,IAAyB,CAA7B,EAAgC;AAC5BF,YAAAA,EAAE,IAAIA,EAAE,EAAR;AACA;AACH,WALmC,CAMpC;AACA;AACA;;;AAEA,cAAIG,QAAQ,GAAG,EAAf;AACA,cAAIC,MAAM,GAAG,KAAKvB,GAAL,CAAShB,WAAT,EAAb;AACA,cAAIwC,QAAQ,GAAG,KAAKnC,QAAL,CAAcoC,MAAd,CAAqBnC,YAArB,CAAkCnD,QAAlC,EAA4CuF,WAA5C,EAAf;;AAZoC,uCAaY;AAC5C,gBAAIC,cAAc,GAAG,KAAI,CAACtC,QAAL,CAAcC,YAAd,CAA2BpD,UAA3B,EAAuC4D,aAAvC,CAAqD,KAAI,CAACvC,SAAL,CAAeqE,CAAf,CAArD,CAArB,CAD4C,CAE5C;AACA;;;AACAN,YAAAA,QAAQ,CAACO,IAAT,CAAczF,KAAK,CAAC,KAAI,CAAC4D,GAAN,CAAL,CACb8B,EADa,CACV,GADU,EACL;AAACC,cAAAA,QAAQ,EAAE,IAAIzF,IAAJ,CAASqF,cAAc,CAAC1C,CAAxB,EAA2B0C,cAAc,CAAClC,CAA1C;AAAX,aADK,EACqDuC,IADrD,CAC0D,MAAI;AACxE,kBAAIC,QAAJ;;AACA,kBAAGV,MAAM,CAACtC,CAAP,GAAW0C,cAAc,CAAC1C,CAA7B,EAA+B;AAC3BgD,gBAAAA,QAAQ,GAAGjG,OAAO,CAACkG,KAAnB;AACH;;AAAA,kBAAGX,MAAM,CAACtC,CAAP,GAAW0C,cAAc,CAAC1C,CAA7B,EAA+B;AAC5BgD,gBAAAA,QAAQ,GAAGjG,OAAO,CAACmG,KAAnB;AACH;;AAAA,kBAAGZ,MAAM,CAAC9B,CAAP,GAAWkC,cAAc,CAAClC,CAA7B,EAA+B;AAC5BwC,gBAAAA,QAAQ,GAAGjG,OAAO,CAACoG,KAAnB;AACH;;AAAA,kBAAGb,MAAM,CAAC9B,CAAP,GAAWkC,cAAc,CAAClC,CAA7B,EAA+B;AAC5BwC,gBAAAA,QAAQ,GAAGjG,OAAO,CAACqG,KAAnB;AACH;;AACD,cAAA,KAAI,CAACxD,gBAAL,CAAsBoD,QAAtB;;AACA,cAAA,KAAI,CAACvD,aAAL,CAAmBuD,QAAnB;;AACA,cAAA,KAAI,CAACtE,QAAL,GAAgB,KAAI,CAACiD,WAAL,CAAiB,KAAI,CAACR,IAAL,CAAUqB,MAAV,CAAiBzC,WAAjB,EAAjB,CAAhB;AACAuC,cAAAA,MAAM,CAACtC,CAAP,GAAW0C,cAAc,CAAC1C,CAA1B;AACAsC,cAAAA,MAAM,CAAC9B,CAAP,GAAWkC,cAAc,CAAClC,CAA1B;AACH,aAjBa,CAAd;AAkBH,WAnCmC;;AAapC,eAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrE,SAAL,CAAe8D,MAAnC,EAA2C,EAAEO,CAA7C;AAAA;AAAA;;AAuBAxF,UAAAA,KAAK,CAAC,KAAK4D,GAAN,CAAL,CAAgBsB,QAAhB,CAAyB,GAAGA,QAA5B,EAAsCU,IAAtC,CAA2C,MAAI;AAC3Cb,YAAAA,EAAE,IAAIA,EAAE,EAAR;AACH,WAFD,EAEG9C,KAFH;AAGH;;AA9MqC,O","sourcesContent":["import { _decorator, Camera, Component, Event, EventKeyboard, input, Input, js, KeyCode, macro, Node, sys, System, SystemEvent, TiledLayer, TiledMap, Tween,tween, Vec2, Vec3, view, View } from 'cc';\nimport { NPCDirect, NPCDisplayInfo } from '../StaticUtils/KeyCodeUtils';\nimport WebUtils from '../utils/WebUtils';\nimport {  NPCPartDisplay } from '../StaticUtils/NPCConfig';\nimport { network } from '../model/RequestData';\nimport { socket } from '../game/App';\nimport { AStar } from './AStar';\nimport { hight } from '../town/TownView';\nimport { GlobalConfig } from '../game/config/GlobalConfig';\nconst { ccclass, property } = _decorator;\nexport const distance = -256 //每一组人物组成部分的间隔\nexport const spriteFrame = 32 //每一帧的距离\nexport const originRootX = -5.463\nexport const frameSpeed = 0.05\n\nexport interface NPCPartBaseDataMap {\n    body: number,\n    hair: {\n        sexy: 'man' | 'woman',\n        index: number\n    },\n    pants: number,\n    shirt: number\n}\n\n@ccclass('NPCControl')\nexport class NPCControl extends Component {\n    @property(Node)\n    public npcRoot!: Node;\n    @property(Node)\n    public npc!: Node;\n\n    @property(Node)\n    public hair!: Node;\n\n    @property(Node)\n    public pants!: Node;\n\n    @property(Node)\n    public shirt!: Node;\n\n    @property(Node)\n    public body!: Node;\n\n    @property(Camera)\n    public camera!: Camera;\n\n    @property(Node)\n    public building!: Node;\n\n    @property(Node)\n    public bubble!: Node;\n\n    @property(Node)\n    public canvas!: Node;\n\n    keyDown: boolean = false            //是否处于按下状态\n    currentDirectKey!: KeyCode          //当前按下的按键是那个\n    stepIndex: number = 0\n\n    frameAdd = 0\n    aStarPath = []\n    rightPos: Vec2 = new Vec2()\n    rightDirect: KeyCode\n    NpcID: number\n    _curTile = new Vec2();\n    //npc外形部分\n    npcBasePartInfo: NPCPartBaseDataMap = {\n        body: 0,\n        hair: {\n            sexy: 'man',\n            index: 0\n        },\n        pants: 0,\n        shirt: 0\n    }\n\n    //当前选择的人物的服装信息\n    npcDisplayInfo: NPCDisplayInfo = {\n        body: 0,\n        hair: 0,\n        pants: 0,\n        shirt: 0,\n    }     \n    npcIndex: any;\n    \n    start() {\n       //View.instance.setOrientation(macro.ORIENTATION_LANDSCAPE)\n        this.setNPCDisplayColor()\n        this.setNPCDisplayBase()\n    }\n\n    update(deltaTime: number) {\n        this.frameAdd = this.frameAdd + deltaTime\n        if(this.keyDown && this.frameAdd > frameSpeed){\n            this.setMoveSprite(this.currentDirectKey)\n            this.frameAdd = 0\n        }\n    }\n\n    setNPCDisplayBase(partBaseInfo: NPCPartBaseDataMap = {\n        body: 0,\n        hair: {\n            sexy: 'man',\n            index: 0\n        },\n        pants: 0,\n        shirt: 1\n    }){\n        this.npcBasePartInfo = partBaseInfo\n        //WebUtils.getResouceImg(NPCPartDisplay.body[this.npcBasePartInfo.body], this.body)\n        // WebUtils.getResouceImg(NPCPartDisplay.hair[this.npcBasePartInfo.hair.sexy][this.npcBasePartInfo.hair.index], this.hair)\n        // WebUtils.getResouceImg(NPCPartDisplay.shirt[this.npcBasePartInfo.shirt], this.shirt)\n        // WebUtils.getResouceImg(NPCPartDisplay.pants[this.npcBasePartInfo.pants], this.pants)\n    }\n\n    setNPCDisplayColor(npcDisplayInfo: NPCDisplayInfo = {\n        body: 0,\n        hair: 0,\n        pants: 0,\n        shirt: 0\n    }){\n        this.npcDisplayInfo = npcDisplayInfo\n        this.body.setPosition(this.npcDisplayInfo.body * distance, 0)\n        this.hair.setPosition(this.npcDisplayInfo.hair * distance, 0)\n        this.pants.setPosition(this.npcDisplayInfo.pants * distance, 0)\n        this.shirt.setPosition(this.npcDisplayInfo.shirt * distance, 0)\n    }\n\n    setNPCMoveDirect(key: KeyCode){\n        this.npcRoot.setPosition(this.npcRoot.getPosition().x, NPCDirect[key].directPos)\n    }\n\n    setNPCPosition(key: KeyCode){\n        try {\n            const block = this?.building?.getComponent(TiledLayer)?.getTileGIDAt(this._curTile.x + NPCDirect[key].offsetX, this._curTile.y - NPCDirect[key].offsetY) as unknown as any\n            if(block){\n                return \n            }\n            const gameView = view.getVisibleSize();\n            this._curTile.x = this._curTile.x + NPCDirect[key].offsetX\n            this._curTile.y = this._curTile.y - NPCDirect[key].offsetY\n            const pos = this.building.getComponent(TiledLayer).getPositionAt(this._curTile)!;\n            NPCDirect[key]\n            const originPos = this.npc.getPosition()\n            //this.npc.setPosition(originPos.x + NPCDirect[key].offsetX, originPos.y + NPCDirect[key].offsetY)\n            this.npc.setPosition(pos.x, pos.y)\n            console.log('=========',this.camera.node.getPosition())\n            if(this.npcIndex === GlobalConfig.instance.currentNpcIndex && this.canvas.getScale().x === 2){\n\n            }\n            this.camera.node.setPosition(this.npc.getPosition().x - gameView.width / 2,  - ((hight - this.npc.getPosition().y) - gameView.height + 100))\n            // if(this.camera){\n            //     if((this.npc.getPosition().x > view.getVisibleSize().x && this.npc.getPosition().x < hight - view.getVisibleSize().x)){\n            //         this.camera.node.setPosition(this.npc.getPosition().x, this.camera.node.getPosition().y)\n            //     }\n            //     if((this.npc.getPosition().y > view.getVisibleSize().y && this.npc.getPosition().y < hight - view.getVisibleSize().y)){\n            //         this.camera.node.setPosition(this.camera.node.getPosition().x, this.npc.getPosition().y)\n            //     }\n            //     let json = new network.NPCMoveRequest();\n            //     json.data.npcId = this.NpcID\n            //     json.data.x = this.npc.getPosition().x,\n            //     json.data.y = this.npc.getPosition().y,\n            //     json.command = 10006;\n            //     json.type = 1;\n            //     socket.sendWebSocketBinary(json);\n            // }\n        } catch (error) {\n            \n        }\n\n    }\n\n    setMoveSprite(key: KeyCode){\n        if(this.stepIndex++ > 6){\n            this.stepIndex = 0\n            this.npcRoot.setPosition(originRootX ,this.npcRoot.getPosition().y)\n        }else{\n            this.stepIndex = this.stepIndex++\n            this.npcRoot.setPosition(this.npcRoot.getPosition().x - spriteFrame, this.npcRoot.getPosition().y)\n        }\n        if(this.camera){\n            this.setNPCPosition(key)\n        }\n    }\n\n    _getTilePos (posInPixel:{x:number, y:number}) {\n        const mapSize = {height: hight}\n        const x = Math.floor(posInPixel.x / 32);\n        const y = Math.floor((mapSize.height - posInPixel.y) / 32);\n        return new Vec2(x, y - 1);\n    }\n\n    aStartMove(start, finish, cb?: ()=>void){\n        this.aStarPath = this.node.getComponent(AStar).moveToward(start, finish);\n        if (this.aStarPath.length <= 1) {\n            cb && cb()\n            return;\n        }\n        // for (let i = 0; i < this._paths.length; ++i) {\n        //     this._debugDraw(this._paths[i], this._debugTileColor, i);\n        // }\n\n        let sequence = [];\n        let prePos = this.npc.getPosition()\n        let tileSize = this.building.parent.getComponent(TiledMap).getTileSize();\n        for (let i = 1; i < this.aStarPath.length; ++i) {\n            let actionPosition = this.building.getComponent(TiledLayer).getPositionAt(this.aStarPath[i]);\n            // actionPosition.x += tileSize.width / 2;\n            // actionPosition.y += tileSize.width / 2;\n            sequence.push(tween(this.npc)\n            .to(0.1, {position: new Vec3(actionPosition.x, actionPosition.y)}).call(()=>{\n                let steepKey: KeyCode\n                if(prePos.x < actionPosition.x){\n                    steepKey = KeyCode.KEY_D\n                }if(prePos.x > actionPosition.x){\n                    steepKey = KeyCode.KEY_A\n                }if(prePos.y < actionPosition.y){\n                    steepKey = KeyCode.KEY_W\n                }if(prePos.y > actionPosition.y){\n                    steepKey = KeyCode.KEY_S\n                }\n                this.setNPCMoveDirect(steepKey)\n                this.setMoveSprite(steepKey)\n                this._curTile = this._getTilePos(this.node.parent.getPosition())\n                prePos.x = actionPosition.x\n                prePos.y = actionPosition.y\n            }))\n        }\n        tween(this.npc).sequence(...sequence).call(()=>{\n            cb && cb()\n        }).start()\n    }\n\n}\n\n"]}