{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/assets/src/NPC/NPCControl.ts"],"names":["_decorator","Camera","Component","KeyCode","Node","TiledLayer","TiledMap","tween","Vec2","Vec3","view","NPCDirect","AStar","hight","GlobalConfig","ccclass","property","distance","spriteFrame","originRootX","frameSpeed","NPCControl","keyDown","currentDirectKey","stepIndex","frameAdd","aStarPath","rightPos","rightDirect","NpcID","_curTile","npcBasePartInfo","body","hair","sexy","index","pants","shirt","npcDisplayInfo","npcIndex","start","setNPCDisplayColor","setNPCDisplayBase","update","deltaTime","instance","currentNpcIndex","curViewNpcX","npc","getPosition","x","y","canvas","getScale","gameView","getVisibleSize","camera","node","setPosition","width","tileMap","front","mark","active","setMoveSprite","partBaseInfo","setNPCMoveDirect","key","npcRoot","directPos","setNPCPosition","block","building","getComponent","getTileGIDAt","offsetX","offsetY","pos","getPositionAt","originPos","error","_getTilePos","posInPixel","mapSize","height","Math","floor","aStartMove","finish","cb","moveToward","length","sequence","prePos","tileSize","parent","getTileSize","actionPosition","i","push","to","position","call","steepKey","KEY_D","KEY_A","KEY_W","KEY_S"],"mappings":"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","sourcesContent":["import { _decorator, Camera, Component, Event, EventKeyboard, input, Input, js, KeyCode, macro, Node, sys, System, SystemEvent, TiledLayer, TiledMap, Tween,tween, Vec2, Vec3, view, View } from 'cc';\nimport { NPCDirect, NPCDisplayInfo } from '../StaticUtils/KeyCodeUtils';\nimport WebUtils from '../utils/WebUtils';\nimport {  NPCPartDisplay } from '../StaticUtils/NPCConfig';\nimport { network } from '../model/RequestData';\nimport { socket } from '../game/App';\nimport { AStar } from './AStar';\nimport { hight, wight } from '../town/TownView';\nimport { GlobalConfig } from '../game/config/GlobalConfig';\nconst { ccclass, property } = _decorator;\nexport const distance = -256 //每一组人物组成部分的间隔\nexport const spriteFrame = 32 //每一帧的距离\nexport const originRootX = -5.463\nexport const frameSpeed = 0.05\n\nexport interface NPCPartBaseDataMap {\n    body: number,\n    hair: {\n        sexy: 'man' | 'woman',\n        index: number\n    },\n    pants: number,\n    shirt: number\n}\n\n@ccclass('NPCControl')\nexport class NPCControl extends Component {\n    @property(Node)\n    public npcRoot!: Node;\n    @property(Node)\n    public npc!: Node;\n\n    @property(Node)\n    public hair!: Node;\n\n    @property(Node)\n    public pants!: Node;\n\n    @property(Node)\n    public shirt!: Node;\n\n    @property(Node)\n    public body!: Node;\n\n    @property(Camera)\n    public camera!: Camera;\n\n    @property(Node)\n    public building!: Node;\n\n    @property(Node)\n    public bubble!: Node;\n\n    @property(Node)\n    public canvas!: Node;\n\n    @property(Node)\n    public mark!: Node;\n\n    @property(Node)\n    public tileMap!: Node;\n\n    @property(Node)\n    public front!: Node;\n\n    keyDown: boolean = false            //是否处于按下状态\n    currentDirectKey!: KeyCode          //当前按下的按键是那个\n    stepIndex: number = 0\n\n    frameAdd = 0\n    aStarPath = []\n    rightPos: Vec2 = new Vec2()\n    rightDirect: KeyCode\n    NpcID: number\n    _curTile = new Vec2();\n    //npc外形部分\n    npcBasePartInfo: NPCPartBaseDataMap = {\n        body: 0,\n        hair: {\n            sexy: 'man',\n            index: 0\n        },\n        pants: 0,\n        shirt: 0\n    }\n\n    //当前选择的人物的服装信息\n    npcDisplayInfo: NPCDisplayInfo = {\n        body: 0,\n        hair: 0,\n        pants: 0,\n        shirt: 0,\n    }     \n    npcIndex: any;\n    \n    start() {\n       //View.instance.setOrientation(macro.ORIENTATION_LANDSCAPE)\n        this.setNPCDisplayColor()\n        this.setNPCDisplayBase()\n    }\n\n    update(deltaTime: number) {\n        if(this.npcIndex === GlobalConfig.instance.currentNpcIndex){\n            GlobalConfig.instance.curViewNpcX = this.npc.getPosition().x\n            GlobalConfig.instance.curViewNpcX = this.npc.getPosition().y\n            if(this.canvas.getScale().x === 2){\n                const gameView = view.getVisibleSize();\n                this.camera.node.setPosition(this.npc.getPosition().x - gameView.width / 2, this.tileMap.getPosition().y - (hight - this.npc.getPosition().y))\n                this.front.setPosition(this.camera.node.getPosition().x * 2, this.camera.node.getPosition().y * 2)\n            }\n\n            //console.log('======', this.camera.node.getPosition())\n\n        }\n        if(GlobalConfig.instance.currentNpcIndex === this.npcIndex){\n            this.mark.active = true\n        }else{\n            this.mark.active = false\n        }\n        this.frameAdd = this.frameAdd + deltaTime\n        if(this.keyDown && this.frameAdd > frameSpeed){\n            this.setMoveSprite(this.currentDirectKey)\n            this.frameAdd = 0\n        }\n    }\n\n    setNPCDisplayBase(partBaseInfo: NPCPartBaseDataMap = {\n        body: 0,\n        hair: {\n            sexy: 'man',\n            index: 0\n        },\n        pants: 0,\n        shirt: 1\n    }){\n        this.npcBasePartInfo = partBaseInfo\n        //WebUtils.getResouceImg(NPCPartDisplay.body[this.npcBasePartInfo.body], this.body)\n        // WebUtils.getResouceImg(NPCPartDisplay.hair[this.npcBasePartInfo.hair.sexy][this.npcBasePartInfo.hair.index], this.hair)\n        // WebUtils.getResouceImg(NPCPartDisplay.shirt[this.npcBasePartInfo.shirt], this.shirt)\n        // WebUtils.getResouceImg(NPCPartDisplay.pants[this.npcBasePartInfo.pants], this.pants)\n    }\n\n    setNPCDisplayColor(npcDisplayInfo: NPCDisplayInfo = {\n        body: 0,\n        hair: 0,\n        pants: 0,\n        shirt: 0\n    }){\n        this.npcDisplayInfo = npcDisplayInfo\n        this.body.setPosition(this.npcDisplayInfo.body * distance, 0)\n        this.hair.setPosition(this.npcDisplayInfo.hair * distance, 0)\n        this.pants.setPosition(this.npcDisplayInfo.pants * distance, 0)\n        this.shirt.setPosition(this.npcDisplayInfo.shirt * distance, 0)\n    }\n\n    setNPCMoveDirect(key: KeyCode){\n        this.npcRoot.setPosition(this.npcRoot.getPosition().x, NPCDirect[key].directPos)\n    }\n\n    setNPCPosition(key: KeyCode){\n        try {\n            const block = this?.building?.getComponent(TiledLayer)?.getTileGIDAt(this._curTile.x + NPCDirect[key].offsetX, this._curTile.y - NPCDirect[key].offsetY) as unknown as any\n            if(block){\n                return \n            }\n            const gameView = view.getVisibleSize();\n            this._curTile.x = this._curTile.x + NPCDirect[key].offsetX\n            this._curTile.y = this._curTile.y - NPCDirect[key].offsetY\n            const pos = this.building.getComponent(TiledLayer).getPositionAt(this._curTile)!;\n            NPCDirect[key]\n            const originPos = this.npc.getPosition()\n            //this.npc.setPosition(originPos.x + NPCDirect[key].offsetX, originPos.y + NPCDirect[key].offsetY)\n            this.npc.setPosition(pos.x, pos.y)\n            if(this.npcIndex === GlobalConfig.instance.currentNpcIndex && this.canvas.getScale().x === 2){\n                //this.camera.node.setPosition(this.npc.getPosition().x - gameView.width / 2,  ((this.npc.getPosition().y - hight)))\n                //this.camera.node.setPosition(new Vec3(512, 736, 0))\n                this.camera.node.setPosition(this.npc.getPosition().x - gameView.width / 2, this.tileMap.getPosition().y - (hight - this.npc.getPosition().y))\n                this.front.setPosition(this.camera.node.getPosition())\n                // if((this.npc.getPosition().x > view.getVisibleSize().x && this.npc.getPosition().x < wight - view.getVisibleSize().x)){\n                //     this.camera.node.setPosition(this.npc.getPosition().x, this.camera.node.getPosition().y)\n                // }\n                // if((this.npc.getPosition().y > view.getVisibleSize().y && this.npc.getPosition().y < hight - view.getVisibleSize().y)){\n                //     this.camera.node.setPosition(this.camera.node.getPosition().x, this.npc.getPosition().y)\n                // }\n\n            }\n\n            // if(this.camera){\n            //     if((this.npc.getPosition().x > view.getVisibleSize().x && this.npc.getPosition().x < hight - view.getVisibleSize().x)){\n            //         this.camera.node.setPosition(this.npc.getPosition().x, this.camera.node.getPosition().y)\n            //     }\n            //     if((this.npc.getPosition().y > view.getVisibleSize().y && this.npc.getPosition().y < hight - view.getVisibleSize().y)){\n            //         this.camera.node.setPosition(this.camera.node.getPosition().x, this.npc.getPosition().y)\n            //     }\n            //     let json = new network.NPCMoveRequest();\n            //     json.data.npcId = this.NpcID\n            //     json.data.x = this.npc.getPosition().x,\n            //     json.data.y = this.npc.getPosition().y,\n            //     json.command = 10006;\n            //     json.type = 1;\n            //     socket.sendWebSocketBinary(json);\n            // }\n        } catch (error) {\n            \n        }\n\n    }\n\n    setMoveSprite(key: KeyCode){\n        if(this.stepIndex++ > 6){\n            this.stepIndex = 0\n            this.npcRoot.setPosition(originRootX ,this.npcRoot.getPosition().y)\n        }else{\n            this.stepIndex = this.stepIndex++\n            this.npcRoot.setPosition(this.npcRoot.getPosition().x - spriteFrame, this.npcRoot.getPosition().y)\n        }\n        if(this.camera){\n            this.setNPCPosition(key)\n        }\n    }\n\n    _getTilePos (posInPixel:{x:number, y:number}) {\n        const mapSize = {height: hight}\n        const x = Math.floor(posInPixel.x / 32);\n        const y = Math.floor((mapSize.height - posInPixel.y) / 32);\n        return new Vec2(x, y - 1);\n    }\n\n    aStartMove(start, finish, cb?: ()=>void){\n        this.aStarPath = this.node.getComponent(AStar).moveToward(start, finish);\n        if (this.aStarPath.length <= 1) {\n            cb && cb()\n            return;\n        }\n        // for (let i = 0; i < this._paths.length; ++i) {\n        //     this._debugDraw(this._paths[i], this._debugTileColor, i);\n        // }\n\n        let sequence = [];\n        let prePos = this.npc.getPosition()\n        let tileSize = this.building.parent.getComponent(TiledMap).getTileSize();\n        for (let i = 1; i < this.aStarPath.length; ++i) {\n            let actionPosition = this.building.getComponent(TiledLayer).getPositionAt(this.aStarPath[i]);\n            // actionPosition.x += tileSize.width / 2;\n            // actionPosition.y += tileSize.width / 2;\n            sequence.push(tween(this.npc)\n            .to(0.1, {position: new Vec3(actionPosition.x, actionPosition.y)}).call(()=>{\n                let steepKey: KeyCode\n                if(prePos.x < actionPosition.x){\n                    steepKey = KeyCode.KEY_D\n                }if(prePos.x > actionPosition.x){\n                    steepKey = KeyCode.KEY_A\n                }if(prePos.y < actionPosition.y){\n                    steepKey = KeyCode.KEY_W\n                }if(prePos.y > actionPosition.y){\n                    steepKey = KeyCode.KEY_S\n                }\n                this.setNPCMoveDirect(steepKey)\n                this.setMoveSprite(steepKey)\n                this._curTile = this._getTilePos(this.node.parent.getPosition())\n                prePos.x = actionPosition.x\n                prePos.y = actionPosition.y\n            }))\n        }\n        tween(this.npc).sequence(...sequence).call(()=>{\n            cb && cb()\n        }).start()\n    }\n\n}\n\n"]}