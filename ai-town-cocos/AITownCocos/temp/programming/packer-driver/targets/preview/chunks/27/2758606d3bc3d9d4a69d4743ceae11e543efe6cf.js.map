{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/datapipeline-2012-10-29.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","ActivatePipeline","input","type","required","members","pipelineId","parameterValues","shape","startTimestamp","output","AddTags","tags","CreatePipeline","name","uniqueId","description","DeactivatePipeline","cancelActive","DeletePipeline","DescribeObjects","objectIds","evaluateExpressions","marker","pipelineObjects","hasMoreResults","DescribePipelines","pipelineIds","pipelineDescriptionList","member","fields","EvaluateExpression","objectId","expression","evaluatedExpression","GetPipelineDefinition","parameterObjects","ListPipelines","pipelineIdList","id","PollForTask","workerGroup","hostname","instanceIdentity","document","signature","taskObject","taskId","attemptId","objects","key","value","PutPipelineDefinition","validationErrors","validationWarnings","errored","QueryObjects","query","selectors","fieldName","operator","values","sphere","limit","ids","RemoveTags","tagKeys","ReportTaskProgress","canceled","ReportTaskRunnerHeartbeat","taskrunnerId","terminate","SetStatus","status","SetTaskStatus","taskStatus","errorId","errorMessage","errorStackTrace","ValidatePipelineDefinition","shapes","S3","stringValue","Sa","Sn","Sq","Sr","Ss","refValue","S13","attributes","S1l","errors","S1n","S1p","warnings","S1x"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2012-10-29',\n    endpointPrefix: 'datapipeline',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceFullName: 'AWS Data Pipeline',\n    serviceId: 'Data Pipeline',\n    signatureVersion: 'v4',\n    targetPrefix: 'DataPipeline',\n    uid: 'datapipeline-2012-10-29'\n  },\n  operations: {\n    ActivatePipeline: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId'\n        ],\n        members: {\n          pipelineId: {},\n          parameterValues: {\n            shape: 'S3'\n          },\n          startTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    AddTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId',\n          'tags'\n        ],\n        members: {\n          pipelineId: {},\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreatePipeline: {\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'uniqueId'\n        ],\n        members: {\n          name: {},\n          uniqueId: {},\n          description: {},\n          tags: {\n            shape: 'Sa'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'pipelineId'\n        ],\n        members: {\n          pipelineId: {}\n        }\n      }\n    },\n    DeactivatePipeline: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId'\n        ],\n        members: {\n          pipelineId: {},\n          cancelActive: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeletePipeline: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId'\n        ],\n        members: {\n          pipelineId: {}\n        }\n      }\n    },\n    DescribeObjects: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId',\n          'objectIds'\n        ],\n        members: {\n          pipelineId: {},\n          objectIds: {\n            shape: 'Sn'\n          },\n          evaluateExpressions: {\n            type: 'boolean'\n          },\n          marker: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'pipelineObjects'\n        ],\n        members: {\n          pipelineObjects: {\n            shape: 'Sq'\n          },\n          marker: {},\n          hasMoreResults: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    DescribePipelines: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineIds'\n        ],\n        members: {\n          pipelineIds: {\n            shape: 'Sn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'pipelineDescriptionList'\n        ],\n        members: {\n          pipelineDescriptionList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'pipelineId',\n                'name',\n                'fields'\n              ],\n              members: {\n                pipelineId: {},\n                name: {},\n                fields: {\n                  shape: 'Ss'\n                },\n                description: {},\n                tags: {\n                  shape: 'Sa'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    EvaluateExpression: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId',\n          'objectId',\n          'expression'\n        ],\n        members: {\n          pipelineId: {},\n          objectId: {},\n          expression: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'evaluatedExpression'\n        ],\n        members: {\n          evaluatedExpression: {}\n        }\n      }\n    },\n    GetPipelineDefinition: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId'\n        ],\n        members: {\n          pipelineId: {},\n          version: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          pipelineObjects: {\n            shape: 'Sq'\n          },\n          parameterObjects: {\n            shape: 'S13'\n          },\n          parameterValues: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    ListPipelines: {\n      input: {\n        type: 'structure',\n        members: {\n          marker: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'pipelineIdList'\n        ],\n        members: {\n          pipelineIdList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                id: {},\n                name: {}\n              }\n            }\n          },\n          marker: {},\n          hasMoreResults: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    PollForTask: {\n      input: {\n        type: 'structure',\n        required: [\n          'workerGroup'\n        ],\n        members: {\n          workerGroup: {},\n          hostname: {},\n          instanceIdentity: {\n            type: 'structure',\n            members: {\n              document: {},\n              signature: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          taskObject: {\n            type: 'structure',\n            members: {\n              taskId: {},\n              pipelineId: {},\n              attemptId: {},\n              objects: {\n                type: 'map',\n                key: {},\n                value: {\n                  shape: 'Sr'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    PutPipelineDefinition: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId',\n          'pipelineObjects'\n        ],\n        members: {\n          pipelineId: {},\n          pipelineObjects: {\n            shape: 'Sq'\n          },\n          parameterObjects: {\n            shape: 'S13'\n          },\n          parameterValues: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'errored'\n        ],\n        members: {\n          validationErrors: {\n            shape: 'S1l'\n          },\n          validationWarnings: {\n            shape: 'S1p'\n          },\n          errored: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    QueryObjects: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId',\n          'sphere'\n        ],\n        members: {\n          pipelineId: {},\n          query: {\n            type: 'structure',\n            members: {\n              selectors: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    fieldName: {},\n                    operator: {\n                      type: 'structure',\n                      members: {\n                        type: {},\n                        values: {\n                          shape: 'S1x'\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          sphere: {},\n          marker: {},\n          limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ids: {\n            shape: 'Sn'\n          },\n          marker: {},\n          hasMoreResults: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    RemoveTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId',\n          'tagKeys'\n        ],\n        members: {\n          pipelineId: {},\n          tagKeys: {\n            shape: 'S1x'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    ReportTaskProgress: {\n      input: {\n        type: 'structure',\n        required: [\n          'taskId'\n        ],\n        members: {\n          taskId: {},\n          fields: {\n            shape: 'Ss'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'canceled'\n        ],\n        members: {\n          canceled: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    ReportTaskRunnerHeartbeat: {\n      input: {\n        type: 'structure',\n        required: [\n          'taskrunnerId'\n        ],\n        members: {\n          taskrunnerId: {},\n          workerGroup: {},\n          hostname: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'terminate'\n        ],\n        members: {\n          terminate: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    SetStatus: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId',\n          'objectIds',\n          'status'\n        ],\n        members: {\n          pipelineId: {},\n          objectIds: {\n            shape: 'Sn'\n          },\n          status: {}\n        }\n      }\n    },\n    SetTaskStatus: {\n      input: {\n        type: 'structure',\n        required: [\n          'taskId',\n          'taskStatus'\n        ],\n        members: {\n          taskId: {},\n          taskStatus: {},\n          errorId: {},\n          errorMessage: {},\n          errorStackTrace: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    ValidatePipelineDefinition: {\n      input: {\n        type: 'structure',\n        required: [\n          'pipelineId',\n          'pipelineObjects'\n        ],\n        members: {\n          pipelineId: {},\n          pipelineObjects: {\n            shape: 'Sq'\n          },\n          parameterObjects: {\n            shape: 'S13'\n          },\n          parameterValues: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'errored'\n        ],\n        members: {\n          validationErrors: {\n            shape: 'S1l'\n          },\n          validationWarnings: {\n            shape: 'S1p'\n          },\n          errored: {\n            type: 'boolean'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'id',\n          'stringValue'\n        ],\n        members: {\n          id: {},\n          stringValue: {}\n        }\n      }\n    },\n    Sa: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'key',\n          'value'\n        ],\n        members: {\n          key: {},\n          value: {}\n        }\n      }\n    },\n    Sn: {\n      type: 'list',\n      member: {}\n    },\n    Sq: {\n      type: 'list',\n      member: {\n        shape: 'Sr'\n      }\n    },\n    Sr: {\n      type: 'structure',\n      required: [\n        'id',\n        'name',\n        'fields'\n      ],\n      members: {\n        id: {},\n        name: {},\n        fields: {\n          shape: 'Ss'\n        }\n      }\n    },\n    Ss: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'key'\n        ],\n        members: {\n          key: {},\n          stringValue: {},\n          refValue: {}\n        }\n      }\n    },\n    S13: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'id',\n          'attributes'\n        ],\n        members: {\n          id: {},\n          attributes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'key',\n                'stringValue'\n              ],\n              members: {\n                key: {},\n                stringValue: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    S1l: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          id: {},\n          errors: {\n            shape: 'S1n'\n          }\n        }\n      }\n    },\n    S1n: {\n      type: 'list',\n      member: {}\n    },\n    S1p: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          id: {},\n          warnings: {\n            shape: 'S1n'\n          }\n        }\n      }\n    },\n    S1x: {\n      type: 'list',\n      member: {}\n    }\n  }\n}"]}