{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/bedrock-agent-2023-06-05.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","AssociateAgentKnowledgeBase","http","method","requestUri","responseCode","input","type","required","members","agentId","location","locationName","agentVersion","description","knowledgeBaseId","knowledgeBaseState","output","agentKnowledgeBase","shape","idempotent","CreateAgent","agentName","agentResourceRoleArn","clientToken","idempotencyToken","customerEncryptionKeyArn","foundationModel","guardrailConfiguration","idleSessionTTLInSeconds","instruction","promptOverrideConfiguration","tags","agent","CreateAgentActionGroup","actionGroupExecutor","actionGroupName","actionGroupState","apiSchema","functionSchema","parentActionGroupSignature","agentActionGroup","CreateAgentAlias","agentAliasName","routingConfiguration","agentAlias","CreateDataSource","dataDeletionPolicy","dataSourceConfiguration","name","serverSideEncryptionConfiguration","vectorIngestionConfiguration","dataSource","CreateKnowledgeBase","knowledgeBaseConfiguration","roleArn","storageConfiguration","knowledgeBase","DeleteAgent","skipResourceInUseCheck","agentStatus","DeleteAgentActionGroup","actionGroupId","DeleteAgentAlias","agentAliasId","agentAliasStatus","DeleteAgentVersion","DeleteDataSource","dataSourceId","status","DeleteKnowledgeBase","DisassociateAgentKnowledgeBase","GetAgent","GetAgentActionGroup","GetAgentAlias","GetAgentKnowledgeBase","GetAgentVersion","agentArn","createdAt","failureReasons","recommendedActions","updatedAt","GetDataSource","GetIngestionJob","ingestionJobId","ingestionJob","GetKnowledgeBase","ListAgentActionGroups","maxResults","nextToken","actionGroupSummaries","member","ListAgentAliases","agentAliasSummaries","ListAgentKnowledgeBases","agentKnowledgeBaseSummaries","ListAgentVersions","agentVersionSummaries","ListAgents","agentSummaries","latestAgentVersion","ListDataSources","dataSourceSummaries","ListIngestionJobs","filters","attribute","operator","values","sortBy","order","ingestionJobSummaries","startedAt","statistics","ListKnowledgeBases","knowledgeBaseSummaries","ListTagsForResource","resourceArn","PrepareAgent","preparedAt","StartIngestionJob","TagResource","UntagResource","tagKeys","UpdateAgent","UpdateAgentActionGroup","UpdateAgentAlias","UpdateAgentKnowledgeBase","UpdateDataSource","UpdateKnowledgeBase","shapes","S7","S9","timestampFormat","Sg","guardrailIdentifier","guardrailVersion","Sk","sensitive","Sl","overrideLambda","promptConfigurations","basePromptTemplate","inferenceConfiguration","maximumLength","stopSequences","temperature","topK","topP","parserMode","promptCreationMode","promptState","promptType","S10","key","value","S14","S17","S19","S1c","customControl","lambda","union","S1f","payload","s3","s3BucketName","s3ObjectKey","S1k","functions","parameters","S1v","parentActionSignature","S1x","provisionedThroughput","S21","agentAliasArn","agentAliasHistoryEvents","endDate","startDate","S29","s3Configuration","bucketArn","bucketOwnerAccountId","inclusionPrefixes","S2g","kmsKeyArn","S2h","chunkingConfiguration","chunkingStrategy","fixedSizeChunkingConfiguration","maxTokens","overlapPercentage","S2o","S2r","vectorKnowledgeBaseConfiguration","embeddingModelArn","embeddingModelConfiguration","bedrockEmbeddingModelConfiguration","dimensions","S2z","mongoDbAtlasConfiguration","collectionName","credentialsSecretArn","databaseName","endpoint","endpointServiceName","fieldMapping","metadataField","textField","vectorField","vectorIndexName","opensearchServerlessConfiguration","collectionArn","pineconeConfiguration","connectionString","namespace","rdsConfiguration","primaryKeyField","tableName","redisEnterpriseCloudConfiguration","S3t","knowledgeBaseArn","S4q","S4r","numberOfDocumentsDeleted","numberOfDocumentsFailed","numberOfDocumentsScanned","numberOfMetadataDocumentsModified","numberOfMetadataDocumentsScanned","numberOfModifiedDocumentsIndexed","numberOfNewDocumentsIndexed"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2023-06-05',\n    endpointPrefix: 'bedrock-agent',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Agents for Amazon Bedrock',\n    serviceId: 'Bedrock Agent',\n    signatureVersion: 'v4',\n    signingName: 'bedrock',\n    uid: 'bedrock-agent-2023-06-05'\n  },\n  operations: {\n    AssociateAgentKnowledgeBase: {\n      http: {\n        method: 'PUT',\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/knowledgebases/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentVersion',\n          'description',\n          'knowledgeBaseId'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          },\n          description: {},\n          knowledgeBaseId: {},\n          knowledgeBaseState: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentKnowledgeBase'\n        ],\n        members: {\n          agentKnowledgeBase: {\n            shape: 'S7'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateAgent: {\n      http: {\n        method: 'PUT',\n        requestUri: '/agents/',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentName'\n        ],\n        members: {\n          agentName: {},\n          agentResourceRoleArn: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          customerEncryptionKeyArn: {},\n          description: {},\n          foundationModel: {},\n          guardrailConfiguration: {\n            shape: 'Sg'\n          },\n          idleSessionTTLInSeconds: {\n            type: 'integer'\n          },\n          instruction: {\n            shape: 'Sk'\n          },\n          promptOverrideConfiguration: {\n            shape: 'Sl'\n          },\n          tags: {\n            shape: 'S10'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agent'\n        ],\n        members: {\n          agent: {\n            shape: 'S14'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateAgentActionGroup: {\n      http: {\n        method: 'PUT',\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/actiongroups/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'actionGroupName',\n          'agentId',\n          'agentVersion'\n        ],\n        members: {\n          actionGroupExecutor: {\n            shape: 'S1c'\n          },\n          actionGroupName: {},\n          actionGroupState: {},\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          },\n          apiSchema: {\n            shape: 'S1f'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          description: {},\n          functionSchema: {\n            shape: 'S1k'\n          },\n          parentActionGroupSignature: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentActionGroup'\n        ],\n        members: {\n          agentActionGroup: {\n            shape: 'S1v'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateAgentAlias: {\n      http: {\n        method: 'PUT',\n        requestUri: '/agents/{agentId}/agentaliases/',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentAliasName',\n          'agentId'\n        ],\n        members: {\n          agentAliasName: {},\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          description: {},\n          routingConfiguration: {\n            shape: 'S1x'\n          },\n          tags: {\n            shape: 'S10'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentAlias'\n        ],\n        members: {\n          agentAlias: {\n            shape: 'S21'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateDataSource: {\n      http: {\n        method: 'PUT',\n        requestUri: '/knowledgebases/{knowledgeBaseId}/datasources/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'dataSourceConfiguration',\n          'knowledgeBaseId',\n          'name'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          dataDeletionPolicy: {},\n          dataSourceConfiguration: {\n            shape: 'S29'\n          },\n          description: {},\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          name: {},\n          serverSideEncryptionConfiguration: {\n            shape: 'S2g'\n          },\n          vectorIngestionConfiguration: {\n            shape: 'S2h'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'dataSource'\n        ],\n        members: {\n          dataSource: {\n            shape: 'S2o'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateKnowledgeBase: {\n      http: {\n        method: 'PUT',\n        requestUri: '/knowledgebases/',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseConfiguration',\n          'name',\n          'roleArn',\n          'storageConfiguration'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          description: {},\n          knowledgeBaseConfiguration: {\n            shape: 'S2r'\n          },\n          name: {},\n          roleArn: {},\n          storageConfiguration: {\n            shape: 'S2z'\n          },\n          tags: {\n            shape: 'S10'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'knowledgeBase'\n        ],\n        members: {\n          knowledgeBase: {\n            shape: 'S3t'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteAgent: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/agents/{agentId}/',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          skipResourceInUseCheck: {\n            location: 'querystring',\n            locationName: 'skipResourceInUseCheck',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentStatus'\n        ],\n        members: {\n          agentId: {},\n          agentStatus: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteAgentActionGroup: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/actiongroups/{actionGroupId}/',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'actionGroupId',\n          'agentId',\n          'agentVersion'\n        ],\n        members: {\n          actionGroupId: {\n            location: 'uri',\n            locationName: 'actionGroupId'\n          },\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          },\n          skipResourceInUseCheck: {\n            location: 'querystring',\n            locationName: 'skipResourceInUseCheck',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteAgentAlias: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/agents/{agentId}/agentaliases/{agentAliasId}/',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentAliasId',\n          'agentId'\n        ],\n        members: {\n          agentAliasId: {\n            location: 'uri',\n            locationName: 'agentAliasId'\n          },\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentAliasId',\n          'agentAliasStatus',\n          'agentId'\n        ],\n        members: {\n          agentAliasId: {},\n          agentAliasStatus: {},\n          agentId: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteAgentVersion: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentVersion'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          },\n          skipResourceInUseCheck: {\n            location: 'querystring',\n            locationName: 'skipResourceInUseCheck',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentStatus',\n          'agentVersion'\n        ],\n        members: {\n          agentId: {},\n          agentStatus: {},\n          agentVersion: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteDataSource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'dataSourceId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          dataSourceId: {\n            location: 'uri',\n            locationName: 'dataSourceId'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'dataSourceId',\n          'knowledgeBaseId',\n          'status'\n        ],\n        members: {\n          dataSourceId: {},\n          knowledgeBaseId: {},\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteKnowledgeBase: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/knowledgebases/{knowledgeBaseId}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId',\n          'status'\n        ],\n        members: {\n          knowledgeBaseId: {},\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    DisassociateAgentKnowledgeBase: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/knowledgebases/{knowledgeBaseId}/',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentVersion',\n          'knowledgeBaseId'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetAgent: {\n      http: {\n        method: 'GET',\n        requestUri: '/agents/{agentId}/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agent'\n        ],\n        members: {\n          agent: {\n            shape: 'S14'\n          }\n        }\n      }\n    },\n    GetAgentActionGroup: {\n      http: {\n        method: 'GET',\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/actiongroups/{actionGroupId}/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'actionGroupId',\n          'agentId',\n          'agentVersion'\n        ],\n        members: {\n          actionGroupId: {\n            location: 'uri',\n            locationName: 'actionGroupId'\n          },\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentActionGroup'\n        ],\n        members: {\n          agentActionGroup: {\n            shape: 'S1v'\n          }\n        }\n      }\n    },\n    GetAgentAlias: {\n      http: {\n        method: 'GET',\n        requestUri: '/agents/{agentId}/agentaliases/{agentAliasId}/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentAliasId',\n          'agentId'\n        ],\n        members: {\n          agentAliasId: {\n            location: 'uri',\n            locationName: 'agentAliasId'\n          },\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentAlias'\n        ],\n        members: {\n          agentAlias: {\n            shape: 'S21'\n          }\n        }\n      }\n    },\n    GetAgentKnowledgeBase: {\n      http: {\n        method: 'GET',\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/knowledgebases/{knowledgeBaseId}/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentVersion',\n          'knowledgeBaseId'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentKnowledgeBase'\n        ],\n        members: {\n          agentKnowledgeBase: {\n            shape: 'S7'\n          }\n        }\n      }\n    },\n    GetAgentVersion: {\n      http: {\n        method: 'GET',\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentVersion'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentVersion'\n        ],\n        members: {\n          agentVersion: {\n            type: 'structure',\n            required: [\n              'agentArn',\n              'agentId',\n              'agentName',\n              'agentResourceRoleArn',\n              'agentStatus',\n              'createdAt',\n              'idleSessionTTLInSeconds',\n              'updatedAt',\n              'version'\n            ],\n            members: {\n              agentArn: {},\n              agentId: {},\n              agentName: {},\n              agentResourceRoleArn: {},\n              agentStatus: {},\n              createdAt: {\n                shape: 'S9'\n              },\n              customerEncryptionKeyArn: {},\n              description: {},\n              failureReasons: {\n                shape: 'S17'\n              },\n              foundationModel: {},\n              guardrailConfiguration: {\n                shape: 'Sg'\n              },\n              idleSessionTTLInSeconds: {\n                type: 'integer'\n              },\n              instruction: {\n                shape: 'Sk'\n              },\n              promptOverrideConfiguration: {\n                shape: 'Sl'\n              },\n              recommendedActions: {\n                shape: 'S19'\n              },\n              updatedAt: {\n                shape: 'S9'\n              },\n              version: {}\n            }\n          }\n        }\n      }\n    },\n    GetDataSource: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'dataSourceId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          dataSourceId: {\n            location: 'uri',\n            locationName: 'dataSourceId'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'dataSource'\n        ],\n        members: {\n          dataSource: {\n            shape: 'S2o'\n          }\n        }\n      }\n    },\n    GetIngestionJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/ingestionjobs/{ingestionJobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'dataSourceId',\n          'ingestionJobId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          dataSourceId: {\n            location: 'uri',\n            locationName: 'dataSourceId'\n          },\n          ingestionJobId: {\n            location: 'uri',\n            locationName: 'ingestionJobId'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ingestionJob'\n        ],\n        members: {\n          ingestionJob: {\n            shape: 'S4q'\n          }\n        }\n      }\n    },\n    GetKnowledgeBase: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgebases/{knowledgeBaseId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'knowledgeBase'\n        ],\n        members: {\n          knowledgeBase: {\n            shape: 'S3t'\n          }\n        }\n      }\n    },\n    ListAgentActionGroups: {\n      http: {\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/actiongroups/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentVersion'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'actionGroupSummaries'\n        ],\n        members: {\n          actionGroupSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'actionGroupId',\n                'actionGroupName',\n                'actionGroupState',\n                'updatedAt'\n              ],\n              members: {\n                actionGroupId: {},\n                actionGroupName: {},\n                actionGroupState: {},\n                description: {},\n                updatedAt: {\n                  shape: 'S9'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListAgentAliases: {\n      http: {\n        requestUri: '/agents/{agentId}/agentaliases/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentAliasSummaries'\n        ],\n        members: {\n          agentAliasSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'agentAliasId',\n                'agentAliasName',\n                'agentAliasStatus',\n                'createdAt',\n                'updatedAt'\n              ],\n              members: {\n                agentAliasId: {},\n                agentAliasName: {},\n                agentAliasStatus: {},\n                createdAt: {\n                  shape: 'S9'\n                },\n                description: {},\n                routingConfiguration: {\n                  shape: 'S1x'\n                },\n                updatedAt: {\n                  shape: 'S9'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListAgentKnowledgeBases: {\n      http: {\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/knowledgebases/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentVersion'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentKnowledgeBaseSummaries'\n        ],\n        members: {\n          agentKnowledgeBaseSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'knowledgeBaseId',\n                'knowledgeBaseState',\n                'updatedAt'\n              ],\n              members: {\n                description: {},\n                knowledgeBaseId: {},\n                knowledgeBaseState: {},\n                updatedAt: {\n                  shape: 'S9'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListAgentVersions: {\n      http: {\n        requestUri: '/agents/{agentId}/agentversions/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentVersionSummaries'\n        ],\n        members: {\n          agentVersionSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'agentName',\n                'agentStatus',\n                'agentVersion',\n                'createdAt',\n                'updatedAt'\n              ],\n              members: {\n                agentName: {},\n                agentStatus: {},\n                agentVersion: {},\n                createdAt: {\n                  shape: 'S9'\n                },\n                description: {},\n                guardrailConfiguration: {\n                  shape: 'Sg'\n                },\n                updatedAt: {\n                  shape: 'S9'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListAgents: {\n      http: {\n        requestUri: '/agents/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentSummaries'\n        ],\n        members: {\n          agentSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'agentId',\n                'agentName',\n                'agentStatus',\n                'updatedAt'\n              ],\n              members: {\n                agentId: {},\n                agentName: {},\n                agentStatus: {},\n                description: {},\n                guardrailConfiguration: {\n                  shape: 'Sg'\n                },\n                latestAgentVersion: {},\n                updatedAt: {\n                  shape: 'S9'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDataSources: {\n      http: {\n        requestUri: '/knowledgebases/{knowledgeBaseId}/datasources/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'dataSourceSummaries'\n        ],\n        members: {\n          dataSourceSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'dataSourceId',\n                'knowledgeBaseId',\n                'name',\n                'status',\n                'updatedAt'\n              ],\n              members: {\n                dataSourceId: {},\n                description: {},\n                knowledgeBaseId: {},\n                name: {},\n                status: {},\n                updatedAt: {\n                  shape: 'S9'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListIngestionJobs: {\n      http: {\n        requestUri: '/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/ingestionjobs/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'dataSourceId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          dataSourceId: {\n            location: 'uri',\n            locationName: 'dataSourceId'\n          },\n          filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'attribute',\n                'operator',\n                'values'\n              ],\n              members: {\n                attribute: {},\n                operator: {},\n                values: {\n                  type: 'list',\n                  member: {}\n                }\n              }\n            }\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {},\n          sortBy: {\n            type: 'structure',\n            required: [\n              'attribute',\n              'order'\n            ],\n            members: {\n              attribute: {},\n              order: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ingestionJobSummaries'\n        ],\n        members: {\n          ingestionJobSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'dataSourceId',\n                'ingestionJobId',\n                'knowledgeBaseId',\n                'startedAt',\n                'status',\n                'updatedAt'\n              ],\n              members: {\n                dataSourceId: {},\n                description: {},\n                ingestionJobId: {},\n                knowledgeBaseId: {},\n                startedAt: {\n                  shape: 'S9'\n                },\n                statistics: {\n                  shape: 'S4r'\n                },\n                status: {},\n                updatedAt: {\n                  shape: 'S9'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListKnowledgeBases: {\n      http: {\n        requestUri: '/knowledgebases/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseSummaries'\n        ],\n        members: {\n          knowledgeBaseSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'knowledgeBaseId',\n                'name',\n                'status',\n                'updatedAt'\n              ],\n              members: {\n                description: {},\n                knowledgeBaseId: {},\n                name: {},\n                status: {},\n                updatedAt: {\n                  shape: 'S9'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S10'\n          }\n        }\n      }\n    },\n    PrepareAgent: {\n      http: {\n        requestUri: '/agents/{agentId}/',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentStatus',\n          'agentVersion',\n          'preparedAt'\n        ],\n        members: {\n          agentId: {},\n          agentStatus: {},\n          agentVersion: {},\n          preparedAt: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    StartIngestionJob: {\n      http: {\n        method: 'PUT',\n        requestUri: '/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}/ingestionjobs/',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'dataSourceId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          dataSourceId: {\n            location: 'uri',\n            locationName: 'dataSourceId'\n          },\n          description: {},\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ingestionJob'\n        ],\n        members: {\n          ingestionJob: {\n            shape: 'S4q'\n          }\n        }\n      },\n      idempotent: true\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S10'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateAgent: {\n      http: {\n        method: 'PUT',\n        requestUri: '/agents/{agentId}/',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentName',\n          'agentResourceRoleArn',\n          'foundationModel'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentName: {},\n          agentResourceRoleArn: {},\n          customerEncryptionKeyArn: {},\n          description: {},\n          foundationModel: {},\n          guardrailConfiguration: {\n            shape: 'Sg'\n          },\n          idleSessionTTLInSeconds: {\n            type: 'integer'\n          },\n          instruction: {\n            shape: 'Sk'\n          },\n          promptOverrideConfiguration: {\n            shape: 'Sl'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agent'\n        ],\n        members: {\n          agent: {\n            shape: 'S14'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateAgentActionGroup: {\n      http: {\n        method: 'PUT',\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/actiongroups/{actionGroupId}/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'actionGroupId',\n          'actionGroupName',\n          'agentId',\n          'agentVersion'\n        ],\n        members: {\n          actionGroupExecutor: {\n            shape: 'S1c'\n          },\n          actionGroupId: {\n            location: 'uri',\n            locationName: 'actionGroupId'\n          },\n          actionGroupName: {},\n          actionGroupState: {},\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          },\n          apiSchema: {\n            shape: 'S1f'\n          },\n          description: {},\n          functionSchema: {\n            shape: 'S1k'\n          },\n          parentActionGroupSignature: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentActionGroup'\n        ],\n        members: {\n          agentActionGroup: {\n            shape: 'S1v'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateAgentAlias: {\n      http: {\n        method: 'PUT',\n        requestUri: '/agents/{agentId}/agentaliases/{agentAliasId}/',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentAliasId',\n          'agentAliasName',\n          'agentId'\n        ],\n        members: {\n          agentAliasId: {\n            location: 'uri',\n            locationName: 'agentAliasId'\n          },\n          agentAliasName: {},\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          description: {},\n          routingConfiguration: {\n            shape: 'S1x'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentAlias'\n        ],\n        members: {\n          agentAlias: {\n            shape: 'S21'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateAgentKnowledgeBase: {\n      http: {\n        method: 'PUT',\n        requestUri: '/agents/{agentId}/agentversions/{agentVersion}/knowledgebases/{knowledgeBaseId}/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentId',\n          'agentVersion',\n          'knowledgeBaseId'\n        ],\n        members: {\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          agentVersion: {\n            location: 'uri',\n            locationName: 'agentVersion'\n          },\n          description: {},\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          knowledgeBaseState: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'agentKnowledgeBase'\n        ],\n        members: {\n          agentKnowledgeBase: {\n            shape: 'S7'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateDataSource: {\n      http: {\n        method: 'PUT',\n        requestUri: '/knowledgebases/{knowledgeBaseId}/datasources/{dataSourceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'dataSourceConfiguration',\n          'dataSourceId',\n          'knowledgeBaseId',\n          'name'\n        ],\n        members: {\n          dataDeletionPolicy: {},\n          dataSourceConfiguration: {\n            shape: 'S29'\n          },\n          dataSourceId: {\n            location: 'uri',\n            locationName: 'dataSourceId'\n          },\n          description: {},\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          name: {},\n          serverSideEncryptionConfiguration: {\n            shape: 'S2g'\n          },\n          vectorIngestionConfiguration: {\n            shape: 'S2h'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'dataSource'\n        ],\n        members: {\n          dataSource: {\n            shape: 'S2o'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateKnowledgeBase: {\n      http: {\n        method: 'PUT',\n        requestUri: '/knowledgebases/{knowledgeBaseId}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseConfiguration',\n          'knowledgeBaseId',\n          'name',\n          'roleArn',\n          'storageConfiguration'\n        ],\n        members: {\n          description: {},\n          knowledgeBaseConfiguration: {\n            shape: 'S2r'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          name: {},\n          roleArn: {},\n          storageConfiguration: {\n            shape: 'S2z'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'knowledgeBase'\n        ],\n        members: {\n          knowledgeBase: {\n            shape: 'S3t'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S7: {\n      type: 'structure',\n      required: [\n        'agentId',\n        'agentVersion',\n        'createdAt',\n        'description',\n        'knowledgeBaseId',\n        'knowledgeBaseState',\n        'updatedAt'\n      ],\n      members: {\n        agentId: {},\n        agentVersion: {},\n        createdAt: {\n          shape: 'S9'\n        },\n        description: {},\n        knowledgeBaseId: {},\n        knowledgeBaseState: {},\n        updatedAt: {\n          shape: 'S9'\n        }\n      }\n    },\n    S9: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    Sg: {\n      type: 'structure',\n      members: {\n        guardrailIdentifier: {},\n        guardrailVersion: {}\n      }\n    },\n    Sk: {\n      type: 'string',\n      sensitive: true\n    },\n    Sl: {\n      type: 'structure',\n      required: [\n        'promptConfigurations'\n      ],\n      members: {\n        overrideLambda: {},\n        promptConfigurations: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              basePromptTemplate: {},\n              inferenceConfiguration: {\n                type: 'structure',\n                members: {\n                  maximumLength: {\n                    type: 'integer'\n                  },\n                  stopSequences: {\n                    type: 'list',\n                    member: {}\n                  },\n                  temperature: {\n                    type: 'float'\n                  },\n                  topK: {\n                    type: 'integer'\n                  },\n                  topP: {\n                    type: 'float'\n                  }\n                }\n              },\n              parserMode: {},\n              promptCreationMode: {},\n              promptState: {},\n              promptType: {}\n            }\n          }\n        }\n      },\n      sensitive: true\n    },\n    S10: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S14: {\n      type: 'structure',\n      required: [\n        'agentArn',\n        'agentId',\n        'agentName',\n        'agentResourceRoleArn',\n        'agentStatus',\n        'agentVersion',\n        'createdAt',\n        'idleSessionTTLInSeconds',\n        'updatedAt'\n      ],\n      members: {\n        agentArn: {},\n        agentId: {},\n        agentName: {},\n        agentResourceRoleArn: {},\n        agentStatus: {},\n        agentVersion: {},\n        clientToken: {},\n        createdAt: {\n          shape: 'S9'\n        },\n        customerEncryptionKeyArn: {},\n        description: {},\n        failureReasons: {\n          shape: 'S17'\n        },\n        foundationModel: {},\n        guardrailConfiguration: {\n          shape: 'Sg'\n        },\n        idleSessionTTLInSeconds: {\n          type: 'integer'\n        },\n        instruction: {\n          shape: 'Sk'\n        },\n        preparedAt: {\n          shape: 'S9'\n        },\n        promptOverrideConfiguration: {\n          shape: 'Sl'\n        },\n        recommendedActions: {\n          shape: 'S19'\n        },\n        updatedAt: {\n          shape: 'S9'\n        }\n      }\n    },\n    S17: {\n      type: 'list',\n      member: {}\n    },\n    S19: {\n      type: 'list',\n      member: {}\n    },\n    S1c: {\n      type: 'structure',\n      members: {\n        customControl: {},\n        lambda: {}\n      },\n      union: true\n    },\n    S1f: {\n      type: 'structure',\n      members: {\n        payload: {\n          type: 'string',\n          sensitive: true\n        },\n        s3: {\n          type: 'structure',\n          members: {\n            s3BucketName: {},\n            s3ObjectKey: {}\n          }\n        }\n      },\n      union: true\n    },\n    S1k: {\n      type: 'structure',\n      members: {\n        functions: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'name'\n            ],\n            members: {\n              description: {},\n              name: {},\n              parameters: {\n                type: 'map',\n                key: {},\n                value: {\n                  type: 'structure',\n                  required: [\n                    'type'\n                  ],\n                  members: {\n                    description: {},\n                    required: {\n                      type: 'boolean'\n                    },\n                    type: {}\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      union: true\n    },\n    S1v: {\n      type: 'structure',\n      required: [\n        'actionGroupId',\n        'actionGroupName',\n        'actionGroupState',\n        'agentId',\n        'agentVersion',\n        'createdAt',\n        'updatedAt'\n      ],\n      members: {\n        actionGroupExecutor: {\n          shape: 'S1c'\n        },\n        actionGroupId: {},\n        actionGroupName: {},\n        actionGroupState: {},\n        agentId: {},\n        agentVersion: {},\n        apiSchema: {\n          shape: 'S1f'\n        },\n        clientToken: {},\n        createdAt: {\n          shape: 'S9'\n        },\n        description: {},\n        functionSchema: {\n          shape: 'S1k'\n        },\n        parentActionSignature: {},\n        updatedAt: {\n          shape: 'S9'\n        }\n      }\n    },\n    S1x: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          agentVersion: {},\n          provisionedThroughput: {}\n        }\n      }\n    },\n    S21: {\n      type: 'structure',\n      required: [\n        'agentAliasArn',\n        'agentAliasId',\n        'agentAliasName',\n        'agentAliasStatus',\n        'agentId',\n        'createdAt',\n        'routingConfiguration',\n        'updatedAt'\n      ],\n      members: {\n        agentAliasArn: {},\n        agentAliasHistoryEvents: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              endDate: {\n                shape: 'S9'\n              },\n              routingConfiguration: {\n                shape: 'S1x'\n              },\n              startDate: {\n                shape: 'S9'\n              }\n            }\n          }\n        },\n        agentAliasId: {},\n        agentAliasName: {},\n        agentAliasStatus: {},\n        agentId: {},\n        clientToken: {},\n        createdAt: {\n          shape: 'S9'\n        },\n        description: {},\n        failureReasons: {\n          shape: 'S17'\n        },\n        routingConfiguration: {\n          shape: 'S1x'\n        },\n        updatedAt: {\n          shape: 'S9'\n        }\n      }\n    },\n    S29: {\n      type: 'structure',\n      required: [\n        'type'\n      ],\n      members: {\n        s3Configuration: {\n          type: 'structure',\n          required: [\n            'bucketArn'\n          ],\n          members: {\n            bucketArn: {},\n            bucketOwnerAccountId: {},\n            inclusionPrefixes: {\n              type: 'list',\n              member: {}\n            }\n          }\n        },\n        type: {}\n      }\n    },\n    S2g: {\n      type: 'structure',\n      members: {\n        kmsKeyArn: {}\n      }\n    },\n    S2h: {\n      type: 'structure',\n      members: {\n        chunkingConfiguration: {\n          type: 'structure',\n          required: [\n            'chunkingStrategy'\n          ],\n          members: {\n            chunkingStrategy: {},\n            fixedSizeChunkingConfiguration: {\n              type: 'structure',\n              required: [\n                'maxTokens',\n                'overlapPercentage'\n              ],\n              members: {\n                maxTokens: {\n                  type: 'integer'\n                },\n                overlapPercentage: {\n                  type: 'integer'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S2o: {\n      type: 'structure',\n      required: [\n        'createdAt',\n        'dataSourceConfiguration',\n        'dataSourceId',\n        'knowledgeBaseId',\n        'name',\n        'status',\n        'updatedAt'\n      ],\n      members: {\n        createdAt: {\n          shape: 'S9'\n        },\n        dataDeletionPolicy: {},\n        dataSourceConfiguration: {\n          shape: 'S29'\n        },\n        dataSourceId: {},\n        description: {},\n        failureReasons: {\n          shape: 'S17'\n        },\n        knowledgeBaseId: {},\n        name: {},\n        serverSideEncryptionConfiguration: {\n          shape: 'S2g'\n        },\n        status: {},\n        updatedAt: {\n          shape: 'S9'\n        },\n        vectorIngestionConfiguration: {\n          shape: 'S2h'\n        }\n      }\n    },\n    S2r: {\n      type: 'structure',\n      required: [\n        'type'\n      ],\n      members: {\n        type: {},\n        vectorKnowledgeBaseConfiguration: {\n          type: 'structure',\n          required: [\n            'embeddingModelArn'\n          ],\n          members: {\n            embeddingModelArn: {},\n            embeddingModelConfiguration: {\n              type: 'structure',\n              members: {\n                bedrockEmbeddingModelConfiguration: {\n                  type: 'structure',\n                  members: {\n                    dimensions: {\n                      type: 'integer'\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S2z: {\n      type: 'structure',\n      required: [\n        'type'\n      ],\n      members: {\n        mongoDbAtlasConfiguration: {\n          type: 'structure',\n          required: [\n            'collectionName',\n            'credentialsSecretArn',\n            'databaseName',\n            'endpoint',\n            'fieldMapping',\n            'vectorIndexName'\n          ],\n          members: {\n            collectionName: {},\n            credentialsSecretArn: {},\n            databaseName: {},\n            endpoint: {},\n            endpointServiceName: {},\n            fieldMapping: {\n              type: 'structure',\n              required: [\n                'metadataField',\n                'textField',\n                'vectorField'\n              ],\n              members: {\n                metadataField: {},\n                textField: {},\n                vectorField: {}\n              }\n            },\n            vectorIndexName: {}\n          }\n        },\n        opensearchServerlessConfiguration: {\n          type: 'structure',\n          required: [\n            'collectionArn',\n            'fieldMapping',\n            'vectorIndexName'\n          ],\n          members: {\n            collectionArn: {},\n            fieldMapping: {\n              type: 'structure',\n              required: [\n                'metadataField',\n                'textField',\n                'vectorField'\n              ],\n              members: {\n                metadataField: {},\n                textField: {},\n                vectorField: {}\n              }\n            },\n            vectorIndexName: {}\n          }\n        },\n        pineconeConfiguration: {\n          type: 'structure',\n          required: [\n            'connectionString',\n            'credentialsSecretArn',\n            'fieldMapping'\n          ],\n          members: {\n            connectionString: {},\n            credentialsSecretArn: {},\n            fieldMapping: {\n              type: 'structure',\n              required: [\n                'metadataField',\n                'textField'\n              ],\n              members: {\n                metadataField: {},\n                textField: {}\n              }\n            },\n            namespace: {}\n          }\n        },\n        rdsConfiguration: {\n          type: 'structure',\n          required: [\n            'credentialsSecretArn',\n            'databaseName',\n            'fieldMapping',\n            'resourceArn',\n            'tableName'\n          ],\n          members: {\n            credentialsSecretArn: {},\n            databaseName: {},\n            fieldMapping: {\n              type: 'structure',\n              required: [\n                'metadataField',\n                'primaryKeyField',\n                'textField',\n                'vectorField'\n              ],\n              members: {\n                metadataField: {},\n                primaryKeyField: {},\n                textField: {},\n                vectorField: {}\n              }\n            },\n            resourceArn: {},\n            tableName: {}\n          }\n        },\n        redisEnterpriseCloudConfiguration: {\n          type: 'structure',\n          required: [\n            'credentialsSecretArn',\n            'endpoint',\n            'fieldMapping',\n            'vectorIndexName'\n          ],\n          members: {\n            credentialsSecretArn: {},\n            endpoint: {},\n            fieldMapping: {\n              type: 'structure',\n              required: [\n                'metadataField',\n                'textField',\n                'vectorField'\n              ],\n              members: {\n                metadataField: {},\n                textField: {},\n                vectorField: {}\n              }\n            },\n            vectorIndexName: {}\n          }\n        },\n        type: {}\n      }\n    },\n    S3t: {\n      type: 'structure',\n      required: [\n        'createdAt',\n        'knowledgeBaseArn',\n        'knowledgeBaseConfiguration',\n        'knowledgeBaseId',\n        'name',\n        'roleArn',\n        'status',\n        'storageConfiguration',\n        'updatedAt'\n      ],\n      members: {\n        createdAt: {\n          shape: 'S9'\n        },\n        description: {},\n        failureReasons: {\n          shape: 'S17'\n        },\n        knowledgeBaseArn: {},\n        knowledgeBaseConfiguration: {\n          shape: 'S2r'\n        },\n        knowledgeBaseId: {},\n        name: {},\n        roleArn: {},\n        status: {},\n        storageConfiguration: {\n          shape: 'S2z'\n        },\n        updatedAt: {\n          shape: 'S9'\n        }\n      }\n    },\n    S4q: {\n      type: 'structure',\n      required: [\n        'dataSourceId',\n        'ingestionJobId',\n        'knowledgeBaseId',\n        'startedAt',\n        'status',\n        'updatedAt'\n      ],\n      members: {\n        dataSourceId: {},\n        description: {},\n        failureReasons: {\n          shape: 'S17'\n        },\n        ingestionJobId: {},\n        knowledgeBaseId: {},\n        startedAt: {\n          shape: 'S9'\n        },\n        statistics: {\n          shape: 'S4r'\n        },\n        status: {},\n        updatedAt: {\n          shape: 'S9'\n        }\n      }\n    },\n    S4r: {\n      type: 'structure',\n      members: {\n        numberOfDocumentsDeleted: {\n          type: 'long'\n        },\n        numberOfDocumentsFailed: {\n          type: 'long'\n        },\n        numberOfDocumentsScanned: {\n          type: 'long'\n        },\n        numberOfMetadataDocumentsModified: {\n          type: 'long'\n        },\n        numberOfMetadataDocumentsScanned: {\n          type: 'long'\n        },\n        numberOfModifiedDocumentsIndexed: {\n          type: 'long'\n        },\n        numberOfNewDocumentsIndexed: {\n          type: 'long'\n        }\n      }\n    }\n  }\n}"]}