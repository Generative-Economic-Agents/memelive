{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/ajv/lib/ajv.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","_req5","_req6","_req7","_req8","_req9","_req10","_req11","_req12","url","define","exports","require","module","__filename","__dirname","compileSchema","resolve","Cache","SchemaObject","stableStringify","formats","rules","$dataMetaSchema","util","Ajv","prototype","validate","compile","addSchema","addMetaSchema","validateSchema","getSchema","removeSchema","addFormat","errorsText","_addSchema","_compile","compileAsync","customKeyword","addKeyword","add","getKeyword","get","removeKeyword","remove","validateKeyword","errorClasses","ValidationError","Validation","MissingRefError","MissingRef","META_SCHEMA_ID","META_IGNORE_OPTIONS","META_SUPPORT_DATA","opts","_opts","copy","setLogger","_schemas","_refs","_fragments","_formats","format","_cache","cache","_loadingSchemas","_compilations","RULES","_getId","chooseGetId","loopRequired","Infinity","errorDataPath","_errorDataPathProperty","serialize","undefined","_metaOpts","getMetaSchemaOptions","addInitialFormats","keywords","addInitialKeywords","addDefaultMetaSchema","meta","nullable","metaSchema","type","addInitialSchemas","schemaKeyRef","data","v","Error","schemaObj","valid","$async","errors","schema","_meta","key","_skipValidation","Array","isArray","i","length","id","normalizeId","checkUnique","skipValidation","throwOrLogError","$schema","defaultMeta","logger","warn","message","error","self","keyRef","_getSchemaObj","_getSchemaFragment","ref","res","call","root","baseId","fragment","RegExp","_removeAllSchemas","clear","del","cacheKey","schemas","regex","test","shouldAddSchema","cached","addUsedSchema","willValidate","recursiveMeta","localRefs","ids","put","compiling","callValidate","currentOpts","e","refs","refVal","_validate","result","apply","arguments","schemaId","_get$IdOrId","_get$Id","$id","options","separator","dataVar","text","dataPath","slice","name","$dataSchema","$data","optsSchemas","keyword","metaOpts","log","noop","console","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './compile';\nimport { __cjsMetaURL as _req0} from './compile/resolve';\nimport { __cjsMetaURL as _req1} from './cache';\nimport { __cjsMetaURL as _req2} from './compile/schema_obj';\nimport { __cjsMetaURL as _req3} from 'fast-json-stable-stringify';\nimport { __cjsMetaURL as _req4} from './compile/formats';\nimport { __cjsMetaURL as _req5} from './compile/rules';\nimport { __cjsMetaURL as _req6} from './data';\nimport { __cjsMetaURL as _req7} from './compile/util';\nimport { __cjsMetaURL as _req8} from './compile/async';\nimport { __cjsMetaURL as _req9} from './keyword';\nimport { __cjsMetaURL as _req10} from './compile/error_classes';\nimport { __cjsMetaURL as _req11} from './refs/data.json';\nimport { __cjsMetaURL as _req12} from './refs/json-schema-draft-07.json';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n 'use strict';\n\n var compileSchema = require('./compile')\n   , resolve = require('./compile/resolve')\n   , Cache = require('./cache')\n   , SchemaObject = require('./compile/schema_obj')\n   , stableStringify = require('fast-json-stable-stringify')\n   , formats = require('./compile/formats')\n   , rules = require('./compile/rules')\n   , $dataMetaSchema = require('./data')\n   , util = require('./compile/util');\n\n module.exports = Ajv;\n\n Ajv.prototype.validate = validate;\n Ajv.prototype.compile = compile;\n Ajv.prototype.addSchema = addSchema;\n Ajv.prototype.addMetaSchema = addMetaSchema;\n Ajv.prototype.validateSchema = validateSchema;\n Ajv.prototype.getSchema = getSchema;\n Ajv.prototype.removeSchema = removeSchema;\n Ajv.prototype.addFormat = addFormat;\n Ajv.prototype.errorsText = errorsText;\n\n Ajv.prototype._addSchema = _addSchema;\n Ajv.prototype._compile = _compile;\n\n Ajv.prototype.compileAsync = require('./compile/async');\n var customKeyword = require('./keyword');\n Ajv.prototype.addKeyword = customKeyword.add;\n Ajv.prototype.getKeyword = customKeyword.get;\n Ajv.prototype.removeKeyword = customKeyword.remove;\n Ajv.prototype.validateKeyword = customKeyword.validate;\n\n var errorClasses = require('./compile/error_classes');\n Ajv.ValidationError = errorClasses.Validation;\n Ajv.MissingRefError = errorClasses.MissingRef;\n Ajv.$dataMetaSchema = $dataMetaSchema;\n\n var META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';\n\n var META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes', 'strictDefaults' ];\n var META_SUPPORT_DATA = ['/properties'];\n\n /**\n  * Creates validator instance.\n  * Usage: `Ajv(opts)`\n  * @param {Object} opts optional options\n  * @return {Object} ajv instance\n  */\n function Ajv(opts) {\n   if (!(this instanceof Ajv)) return new Ajv(opts);\n   opts = this._opts = util.copy(opts) || {};\n   setLogger(this);\n   this._schemas = {};\n   this._refs = {};\n   this._fragments = {};\n   this._formats = formats(opts.format);\n\n   this._cache = opts.cache || new Cache;\n   this._loadingSchemas = {};\n   this._compilations = [];\n   this.RULES = rules();\n   this._getId = chooseGetId(opts);\n\n   opts.loopRequired = opts.loopRequired || Infinity;\n   if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\n   if (opts.serialize === undefined) opts.serialize = stableStringify;\n   this._metaOpts = getMetaSchemaOptions(this);\n\n   if (opts.formats) addInitialFormats(this);\n   if (opts.keywords) addInitialKeywords(this);\n   addDefaultMetaSchema(this);\n   if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\n   if (opts.nullable) this.addKeyword('nullable', {metaSchema: {type: 'boolean'}});\n   addInitialSchemas(this);\n }\n\n\n\n /**\n  * Validate data using schema\n  * Schema will be compiled and cached (using serialized JSON as key. [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used to serialize.\n  * @this   Ajv\n  * @param  {String|Object} schemaKeyRef key, ref or schema object\n  * @param  {Any} data to be validated\n  * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\n  */\n function validate(schemaKeyRef, data) {\n   var v;\n   if (typeof schemaKeyRef == 'string') {\n     v = this.getSchema(schemaKeyRef);\n     if (!v) throw new Error('no schema with key or ref \"' + schemaKeyRef + '\"');\n   } else {\n     var schemaObj = this._addSchema(schemaKeyRef);\n     v = schemaObj.validate || this._compile(schemaObj);\n   }\n\n   var valid = v(data);\n   if (v.$async !== true) this.errors = v.errors;\n   return valid;\n }\n\n\n /**\n  * Create validating function for passed schema.\n  * @this   Ajv\n  * @param  {Object} schema schema object\n  * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\n  * @return {Function} validating function\n  */\n function compile(schema, _meta) {\n   var schemaObj = this._addSchema(schema, undefined, _meta);\n   return schemaObj.validate || this._compile(schemaObj);\n }\n\n\n /**\n  * Adds schema to the instance.\n  * @this   Ajv\n  * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\n  * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n  * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\n  * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n  * @return {Ajv} this for method chaining\n  */\n function addSchema(schema, key, _skipValidation, _meta) {\n   if (Array.isArray(schema)){\n     for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\n     return this;\n   }\n   var id = this._getId(schema);\n   if (id !== undefined && typeof id != 'string')\n     throw new Error('schema id must be string');\n   key = resolve.normalizeId(key || id);\n   checkUnique(this, key);\n   this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\n   return this;\n }\n\n\n /**\n  * Add schema that will be used to validate other schemas\n  * options in META_IGNORE_OPTIONS are alway set to false\n  * @this   Ajv\n  * @param {Object} schema schema object\n  * @param {String} key optional schema key\n  * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\n  * @return {Ajv} this for method chaining\n  */\n function addMetaSchema(schema, key, skipValidation) {\n   this.addSchema(schema, key, skipValidation, true);\n   return this;\n }\n\n\n /**\n  * Validate schema\n  * @this   Ajv\n  * @param {Object} schema schema to validate\n  * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\n  * @return {Boolean} true if schema is valid\n  */\n function validateSchema(schema, throwOrLogError) {\n   var $schema = schema.$schema;\n   if ($schema !== undefined && typeof $schema != 'string')\n     throw new Error('$schema must be a string');\n   $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\n   if (!$schema) {\n     this.logger.warn('meta-schema not available');\n     this.errors = null;\n     return true;\n   }\n   var valid = this.validate($schema, schema);\n   if (!valid && throwOrLogError) {\n     var message = 'schema is invalid: ' + this.errorsText();\n     if (this._opts.validateSchema == 'log') this.logger.error(message);\n     else throw new Error(message);\n   }\n   return valid;\n }\n\n\n function defaultMeta(self) {\n   var meta = self._opts.meta;\n   self._opts.defaultMeta = typeof meta == 'object'\n                             ? self._getId(meta) || meta\n                             : self.getSchema(META_SCHEMA_ID)\n                               ? META_SCHEMA_ID\n                               : undefined;\n   return self._opts.defaultMeta;\n }\n\n\n /**\n  * Get compiled schema from the instance by `key` or `ref`.\n  * @this   Ajv\n  * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\n  * @return {Function} schema validating function (with property `schema`).\n  */\n function getSchema(keyRef) {\n   var schemaObj = _getSchemaObj(this, keyRef);\n   switch (typeof schemaObj) {\n     case 'object': return schemaObj.validate || this._compile(schemaObj);\n     case 'string': return this.getSchema(schemaObj);\n     case 'undefined': return _getSchemaFragment(this, keyRef);\n   }\n }\n\n\n function _getSchemaFragment(self, ref) {\n   var res = resolve.schema.call(self, { schema: {} }, ref);\n   if (res) {\n     var schema = res.schema\n       , root = res.root\n       , baseId = res.baseId;\n     var v = compileSchema.call(self, schema, root, undefined, baseId);\n     self._fragments[ref] = new SchemaObject({\n       ref: ref,\n       fragment: true,\n       schema: schema,\n       root: root,\n       baseId: baseId,\n       validate: v\n     });\n     return v;\n   }\n }\n\n\n function _getSchemaObj(self, keyRef) {\n   keyRef = resolve.normalizeId(keyRef);\n   return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\n }\n\n\n /**\n  * Remove cached schema(s).\n  * If no parameter is passed all schemas but meta-schemas are removed.\n  * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  * @this   Ajv\n  * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\n  * @return {Ajv} this for method chaining\n  */\n function removeSchema(schemaKeyRef) {\n   if (schemaKeyRef instanceof RegExp) {\n     _removeAllSchemas(this, this._schemas, schemaKeyRef);\n     _removeAllSchemas(this, this._refs, schemaKeyRef);\n     return this;\n   }\n   switch (typeof schemaKeyRef) {\n     case 'undefined':\n       _removeAllSchemas(this, this._schemas);\n       _removeAllSchemas(this, this._refs);\n       this._cache.clear();\n       return this;\n     case 'string':\n       var schemaObj = _getSchemaObj(this, schemaKeyRef);\n       if (schemaObj) this._cache.del(schemaObj.cacheKey);\n       delete this._schemas[schemaKeyRef];\n       delete this._refs[schemaKeyRef];\n       return this;\n     case 'object':\n       var serialize = this._opts.serialize;\n       var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\n       this._cache.del(cacheKey);\n       var id = this._getId(schemaKeyRef);\n       if (id) {\n         id = resolve.normalizeId(id);\n         delete this._schemas[id];\n         delete this._refs[id];\n       }\n   }\n   return this;\n }\n\n\n function _removeAllSchemas(self, schemas, regex) {\n   for (var keyRef in schemas) {\n     var schemaObj = schemas[keyRef];\n     if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\n       self._cache.del(schemaObj.cacheKey);\n       delete schemas[keyRef];\n     }\n   }\n }\n\n\n /* @this   Ajv */\n function _addSchema(schema, skipValidation, meta, shouldAddSchema) {\n   if (typeof schema != 'object' && typeof schema != 'boolean')\n     throw new Error('schema should be object or boolean');\n   var serialize = this._opts.serialize;\n   var cacheKey = serialize ? serialize(schema) : schema;\n   var cached = this._cache.get(cacheKey);\n   if (cached) return cached;\n\n   shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\n\n   var id = resolve.normalizeId(this._getId(schema));\n   if (id && shouldAddSchema) checkUnique(this, id);\n\n   var willValidate = this._opts.validateSchema !== false && !skipValidation;\n   var recursiveMeta;\n   if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\n     this.validateSchema(schema, true);\n\n   var localRefs = resolve.ids.call(this, schema);\n\n   var schemaObj = new SchemaObject({\n     id: id,\n     schema: schema,\n     localRefs: localRefs,\n     cacheKey: cacheKey,\n     meta: meta\n   });\n\n   if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\n   this._cache.put(cacheKey, schemaObj);\n\n   if (willValidate && recursiveMeta) this.validateSchema(schema, true);\n\n   return schemaObj;\n }\n\n\n /* @this   Ajv */\n function _compile(schemaObj, root) {\n   if (schemaObj.compiling) {\n     schemaObj.validate = callValidate;\n     callValidate.schema = schemaObj.schema;\n     callValidate.errors = null;\n     callValidate.root = root ? root : callValidate;\n     if (schemaObj.schema.$async === true)\n       callValidate.$async = true;\n     return callValidate;\n   }\n   schemaObj.compiling = true;\n\n   var currentOpts;\n   if (schemaObj.meta) {\n     currentOpts = this._opts;\n     this._opts = this._metaOpts;\n   }\n\n   var v;\n   try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\n   catch(e) {\n     delete schemaObj.validate;\n     throw e;\n   }\n   finally {\n     schemaObj.compiling = false;\n     if (schemaObj.meta) this._opts = currentOpts;\n   }\n\n   schemaObj.validate = v;\n   schemaObj.refs = v.refs;\n   schemaObj.refVal = v.refVal;\n   schemaObj.root = v.root;\n   return v;\n\n\n   /* @this   {*} - custom context, see passContext option */\n   function callValidate() {\n     /* jshint validthis: true */\n     var _validate = schemaObj.validate;\n     var result = _validate.apply(this, arguments);\n     callValidate.errors = _validate.errors;\n     return result;\n   }\n }\n\n\n function chooseGetId(opts) {\n   switch (opts.schemaId) {\n     case 'auto': return _get$IdOrId;\n     case 'id': return _getId;\n     default: return _get$Id;\n   }\n }\n\n /* @this   Ajv */\n function _getId(schema) {\n   if (schema.$id) this.logger.warn('schema $id ignored', schema.$id);\n   return schema.id;\n }\n\n /* @this   Ajv */\n function _get$Id(schema) {\n   if (schema.id) this.logger.warn('schema id ignored', schema.id);\n   return schema.$id;\n }\n\n\n function _get$IdOrId(schema) {\n   if (schema.$id && schema.id && schema.$id != schema.id)\n     throw new Error('schema $id is different from id');\n   return schema.$id || schema.id;\n }\n\n\n /**\n  * Convert array of error message objects to string\n  * @this   Ajv\n  * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\n  * @param  {Object} options optional options with properties `separator` and `dataVar`.\n  * @return {String} human readable string with all errors descriptions\n  */\n function errorsText(errors, options) {\n   errors = errors || this.errors;\n   if (!errors) return 'No errors';\n   options = options || {};\n   var separator = options.separator === undefined ? ', ' : options.separator;\n   var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\n\n   var text = '';\n   for (var i=0; i<errors.length; i++) {\n     var e = errors[i];\n     if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\n   }\n   return text.slice(0, -separator.length);\n }\n\n\n /**\n  * Add custom format\n  * @this   Ajv\n  * @param {String} name format name\n  * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\n  * @return {Ajv} this for method chaining\n  */\n function addFormat(name, format) {\n   if (typeof format == 'string') format = new RegExp(format);\n   this._formats[name] = format;\n   return this;\n }\n\n\n function addDefaultMetaSchema(self) {\n   var $dataSchema;\n   if (self._opts.$data) {\n     $dataSchema = require('./refs/data.json');\n     self.addMetaSchema($dataSchema, $dataSchema.$id, true);\n   }\n   if (self._opts.meta === false) return;\n   var metaSchema = require('./refs/json-schema-draft-07.json');\n   if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\n   self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\n   self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\n }\n\n\n function addInitialSchemas(self) {\n   var optsSchemas = self._opts.schemas;\n   if (!optsSchemas) return;\n   if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\n   else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\n }\n\n\n function addInitialFormats(self) {\n   for (var name in self._opts.formats) {\n     var format = self._opts.formats[name];\n     self.addFormat(name, format);\n   }\n }\n\n\n function addInitialKeywords(self) {\n   for (var name in self._opts.keywords) {\n     var keyword = self._opts.keywords[name];\n     self.addKeyword(name, keyword);\n   }\n }\n\n\n function checkUnique(self, id) {\n   if (self._schemas[id] || self._refs[id])\n     throw new Error('schema with key or id \"' + id + '\" already exists');\n }\n\n\n function getMetaSchemaOptions(self) {\n   var metaOpts = util.copy(self._opts);\n   for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\n     delete metaOpts[META_IGNORE_OPTIONS[i]];\n   return metaOpts;\n }\n\n\n function setLogger(self) {\n   var logger = self._opts.logger;\n   if (logger === false) {\n     self.logger = {log: noop, warn: noop, error: noop};\n   } else {\n     if (logger === undefined) logger = console;\n     if (!(typeof logger == 'object' && logger.log && logger.warn && logger.error))\n       throw new Error('logger must implement log, warn and error methods');\n     self.logger = logger;\n   }\n }\n\n\n function noop() {}\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './compile': _req,\n  './compile/resolve': _req0,\n  './cache': _req1,\n  './compile/schema_obj': _req2,\n  'fast-json-stable-stringify': _req3,\n  './compile/formats': _req4,\n  './compile/rules': _req5,\n  './data': _req6,\n  './compile/util': _req7,\n  './compile/async': _req8,\n  './keyword': _req9,\n  './compile/error_classes': _req10,\n  './refs/data.json': _req11,\n  './refs/json-schema-draft-07.json': _req12,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}