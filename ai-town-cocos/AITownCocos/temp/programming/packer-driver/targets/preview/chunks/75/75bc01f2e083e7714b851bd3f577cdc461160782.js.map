{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/differenceWith.js"],"names":["baseDifference","baseFlatten","baseRest","isArrayLikeObject","last","differenceWith","array","values","comparator","undefined"],"mappings":";;;;;;AAAOA,MAAAA,c;;AACAC,MAAAA,W;;AACAC,MAAAA,Q;;AACAC,MAAAA,iB;;AACAC,MAAAA,I;;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,c,GAAiBH,QAAQ,CAAC,UAASI,KAAT,EAAgBC,MAAhB,EAAwB;AACpD,YAAIC,UAAU,GAAGJ,IAAI,CAACG,MAAD,CAArB;;AACA,YAAIJ,iBAAiB,CAACK,UAAD,CAArB,EAAmC;AACjCA,UAAAA,UAAU,GAAGC,SAAb;AACD;;AACD,eAAON,iBAAiB,CAACG,KAAD,CAAjB,GACHN,cAAc,CAACM,KAAD,EAAQL,WAAW,CAACM,MAAD,EAAS,CAAT,EAAYJ,iBAAZ,EAA+B,IAA/B,CAAnB,EAAyDM,SAAzD,EAAoED,UAApE,CADX,GAEH,EAFJ;AAGD,OAR4B,C;;yBAUdH,c","sourcesContent":["import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.difference` except that it accepts `comparator`\n * which is invoked to compare elements of `array` to `values`. The order and\n * references of result values are determined by the first array. The comparator\n * is invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n *\n * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }]\n */\nvar differenceWith = baseRest(function(array, values) {\n  var comparator = last(values);\n  if (isArrayLikeObject(comparator)) {\n    comparator = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n    : [];\n});\n\nexport default differenceWith;\n"]}