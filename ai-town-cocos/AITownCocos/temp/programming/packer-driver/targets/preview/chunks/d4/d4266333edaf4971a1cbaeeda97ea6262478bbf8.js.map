{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_assignMergeValue.js"],"names":["assignMergeValue","object","key","value","undefined","eq","baseAssignValue"],"mappings":";;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,gBAAT,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,KAAvC,EAA8C;AAC5C,QAAKA,KAAK,KAAKC,SAAV,IAAuB,CAACC,EAAE,CAACJ,MAAM,CAACC,GAAD,CAAP,EAAcC,KAAd,CAA3B,IACCA,KAAK,KAAKC,SAAV,IAAuB,EAAEF,GAAG,IAAID,MAAT,CAD5B,EAC+C;AAC7CK,MAAAA,eAAe,CAACL,MAAD,EAASC,GAAT,EAAcC,KAAd,CAAf;AACD;AACF;;;;AAjBMG,MAAAA,e;;AACAD,MAAAA,E;;;yBAkBQL,gB","sourcesContent":["import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n"]}