{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/_baseAggregator.js"],"names":["baseAggregator","collection","setter","iteratee","accumulator","baseEach","value","key"],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,cAAT,CAAwBC,UAAxB,EAAoCC,MAApC,EAA4CC,QAA5C,EAAsDC,WAAtD,EAAmE;AACjEC,IAAAA,QAAQ,CAACJ,UAAD,EAAa,UAASK,KAAT,EAAgBC,GAAhB,EAAqBN,UAArB,EAAiC;AACpDC,MAAAA,MAAM,CAACE,WAAD,EAAcE,KAAd,EAAqBH,QAAQ,CAACG,KAAD,CAA7B,EAAsCL,UAAtC,CAAN;AACD,KAFO,CAAR;AAGA,WAAOG,WAAP;AACD;;;;AAlBMC,MAAAA,Q;;;yBAoBQL,c","sourcesContent":["import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n"]}