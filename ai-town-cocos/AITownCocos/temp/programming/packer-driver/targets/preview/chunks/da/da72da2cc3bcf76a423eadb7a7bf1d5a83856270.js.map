{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/ivschat-2020-07-14.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateChatToken","http","requestUri","responseCode","input","type","required","members","attributes","key","value","sensitive","capabilities","member","roomIdentifier","sessionDurationInMinutes","userId","shape","output","sessionExpirationTime","token","tokenExpirationTime","CreateLoggingConfiguration","destinationConfiguration","name","tags","arn","createTime","id","state","updateTime","CreateRoom","loggingConfigurationIdentifiers","maximumMessageLength","maximumMessageRatePerSecond","messageReviewHandler","DeleteLoggingConfiguration","identifier","DeleteMessage","reason","DeleteRoom","DisconnectUser","GetLoggingConfiguration","GetRoom","ListLoggingConfigurations","maxResults","nextToken","loggingConfigurations","ListRooms","loggingConfigurationIdentifier","messageReviewHandlerUri","rooms","ListTagsForResource","method","resourceArn","location","locationName","SendEvent","eventName","TagResource","UntagResource","tagKeys","idempotent","UpdateLoggingConfiguration","UpdateRoom","shapes","S8","Sa","timestampFormat","Sd","cloudWatchLogs","logGroupName","firehose","deliveryStreamName","s3","bucketName","union","Sl","St","Sx","fallbackResult","uri"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-07-14',\n    endpointPrefix: 'ivschat',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'ivschat',\n    serviceFullName: 'Amazon Interactive Video Service Chat',\n    serviceId: 'ivschat',\n    signatureVersion: 'v4',\n    signingName: 'ivschat',\n    uid: 'ivschat-2020-07-14'\n  },\n  operations: {\n    CreateChatToken: {\n      http: {\n        requestUri: '/CreateChatToken',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'roomIdentifier',\n          'userId'\n        ],\n        members: {\n          attributes: {\n            type: 'map',\n            key: {},\n            value: {},\n            sensitive: true\n          },\n          capabilities: {\n            type: 'list',\n            member: {}\n          },\n          roomIdentifier: {},\n          sessionDurationInMinutes: {\n            type: 'integer'\n          },\n          userId: {\n            shape: 'S8'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          sessionExpirationTime: {\n            shape: 'Sa'\n          },\n          token: {\n            type: 'string',\n            sensitive: true\n          },\n          tokenExpirationTime: {\n            shape: 'Sa'\n          }\n        }\n      }\n    },\n    CreateLoggingConfiguration: {\n      http: {\n        requestUri: '/CreateLoggingConfiguration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'destinationConfiguration'\n        ],\n        members: {\n          destinationConfiguration: {\n            shape: 'Sd'\n          },\n          name: {},\n          tags: {\n            shape: 'Sl'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createTime: {\n            shape: 'Sa'\n          },\n          destinationConfiguration: {\n            shape: 'Sd'\n          },\n          id: {},\n          name: {},\n          state: {},\n          tags: {\n            shape: 'Sl'\n          },\n          updateTime: {\n            shape: 'Sa'\n          }\n        }\n      }\n    },\n    CreateRoom: {\n      http: {\n        requestUri: '/CreateRoom',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          loggingConfigurationIdentifiers: {\n            shape: 'St'\n          },\n          maximumMessageLength: {\n            type: 'integer'\n          },\n          maximumMessageRatePerSecond: {\n            type: 'integer'\n          },\n          messageReviewHandler: {\n            shape: 'Sx'\n          },\n          name: {},\n          tags: {\n            shape: 'Sl'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createTime: {\n            shape: 'Sa'\n          },\n          id: {},\n          loggingConfigurationIdentifiers: {\n            shape: 'St'\n          },\n          maximumMessageLength: {\n            type: 'integer'\n          },\n          maximumMessageRatePerSecond: {\n            type: 'integer'\n          },\n          messageReviewHandler: {\n            shape: 'Sx'\n          },\n          name: {},\n          tags: {\n            shape: 'Sl'\n          },\n          updateTime: {\n            shape: 'Sa'\n          }\n        }\n      }\n    },\n    DeleteLoggingConfiguration: {\n      http: {\n        requestUri: '/DeleteLoggingConfiguration',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'identifier'\n        ],\n        members: {\n          identifier: {}\n        }\n      }\n    },\n    DeleteMessage: {\n      http: {\n        requestUri: '/DeleteMessage',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id',\n          'roomIdentifier'\n        ],\n        members: {\n          id: {},\n          reason: {},\n          roomIdentifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {}\n        }\n      }\n    },\n    DeleteRoom: {\n      http: {\n        requestUri: '/DeleteRoom',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'identifier'\n        ],\n        members: {\n          identifier: {}\n        }\n      }\n    },\n    DisconnectUser: {\n      http: {\n        requestUri: '/DisconnectUser',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'roomIdentifier',\n          'userId'\n        ],\n        members: {\n          reason: {},\n          roomIdentifier: {},\n          userId: {\n            shape: 'S8'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    GetLoggingConfiguration: {\n      http: {\n        requestUri: '/GetLoggingConfiguration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'identifier'\n        ],\n        members: {\n          identifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createTime: {\n            shape: 'Sa'\n          },\n          destinationConfiguration: {\n            shape: 'Sd'\n          },\n          id: {},\n          name: {},\n          state: {},\n          tags: {\n            shape: 'Sl'\n          },\n          updateTime: {\n            shape: 'Sa'\n          }\n        }\n      }\n    },\n    GetRoom: {\n      http: {\n        requestUri: '/GetRoom',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'identifier'\n        ],\n        members: {\n          identifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createTime: {\n            shape: 'Sa'\n          },\n          id: {},\n          loggingConfigurationIdentifiers: {\n            shape: 'St'\n          },\n          maximumMessageLength: {\n            type: 'integer'\n          },\n          maximumMessageRatePerSecond: {\n            type: 'integer'\n          },\n          messageReviewHandler: {\n            shape: 'Sx'\n          },\n          name: {},\n          tags: {\n            shape: 'Sl'\n          },\n          updateTime: {\n            shape: 'Sa'\n          }\n        }\n      }\n    },\n    ListLoggingConfigurations: {\n      http: {\n        requestUri: '/ListLoggingConfigurations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'loggingConfigurations'\n        ],\n        members: {\n          loggingConfigurations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                createTime: {\n                  shape: 'Sa'\n                },\n                destinationConfiguration: {\n                  shape: 'Sd'\n                },\n                id: {},\n                name: {},\n                state: {},\n                tags: {\n                  shape: 'Sl'\n                },\n                updateTime: {\n                  shape: 'Sa'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListRooms: {\n      http: {\n        requestUri: '/ListRooms',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          loggingConfigurationIdentifier: {},\n          maxResults: {\n            type: 'integer'\n          },\n          messageReviewHandlerUri: {},\n          name: {},\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'rooms'\n        ],\n        members: {\n          nextToken: {},\n          rooms: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                createTime: {\n                  shape: 'Sa'\n                },\n                id: {},\n                loggingConfigurationIdentifiers: {\n                  shape: 'St'\n                },\n                messageReviewHandler: {\n                  shape: 'Sx'\n                },\n                name: {},\n                tags: {\n                  shape: 'Sl'\n                },\n                updateTime: {\n                  shape: 'Sa'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'tags'\n        ],\n        members: {\n          tags: {\n            shape: 'Sl'\n          }\n        }\n      }\n    },\n    SendEvent: {\n      http: {\n        requestUri: '/SendEvent',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'eventName',\n          'roomIdentifier'\n        ],\n        members: {\n          attributes: {\n            type: 'map',\n            key: {},\n            value: {}\n          },\n          eventName: {},\n          roomIdentifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {}\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sl'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateLoggingConfiguration: {\n      http: {\n        requestUri: '/UpdateLoggingConfiguration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'identifier'\n        ],\n        members: {\n          destinationConfiguration: {\n            shape: 'Sd'\n          },\n          identifier: {},\n          name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createTime: {\n            shape: 'Sa'\n          },\n          destinationConfiguration: {\n            shape: 'Sd'\n          },\n          id: {},\n          name: {},\n          state: {},\n          tags: {\n            shape: 'Sl'\n          },\n          updateTime: {\n            shape: 'Sa'\n          }\n        }\n      }\n    },\n    UpdateRoom: {\n      http: {\n        requestUri: '/UpdateRoom',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'identifier'\n        ],\n        members: {\n          identifier: {},\n          loggingConfigurationIdentifiers: {\n            shape: 'St'\n          },\n          maximumMessageLength: {\n            type: 'integer'\n          },\n          maximumMessageRatePerSecond: {\n            type: 'integer'\n          },\n          messageReviewHandler: {\n            shape: 'Sx'\n          },\n          name: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createTime: {\n            shape: 'Sa'\n          },\n          id: {},\n          loggingConfigurationIdentifiers: {\n            shape: 'St'\n          },\n          maximumMessageLength: {\n            type: 'integer'\n          },\n          maximumMessageRatePerSecond: {\n            type: 'integer'\n          },\n          messageReviewHandler: {\n            shape: 'Sx'\n          },\n          name: {},\n          tags: {\n            shape: 'Sl'\n          },\n          updateTime: {\n            shape: 'Sa'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S8: {\n      type: 'string',\n      sensitive: true\n    },\n    Sa: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    Sd: {\n      type: 'structure',\n      members: {\n        cloudWatchLogs: {\n          type: 'structure',\n          required: [\n            'logGroupName'\n          ],\n          members: {\n            logGroupName: {}\n          }\n        },\n        firehose: {\n          type: 'structure',\n          required: [\n            'deliveryStreamName'\n          ],\n          members: {\n            deliveryStreamName: {}\n          }\n        },\n        s3: {\n          type: 'structure',\n          required: [\n            'bucketName'\n          ],\n          members: {\n            bucketName: {}\n          }\n        }\n      },\n      union: true\n    },\n    Sl: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    St: {\n      type: 'list',\n      member: {}\n    },\n    Sx: {\n      type: 'structure',\n      members: {\n        fallbackResult: {},\n        uri: {}\n      }\n    }\n  }\n}"]}