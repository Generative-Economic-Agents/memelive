{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/assets/src/utils/ComponentsUtils.ts"],"names":["ComponentsUtils","Button","Sprite","copyObject","orig","copy","Object","create","getPrototypeOf","copyOwnPropertiesFrom","target","source","getOwnPropertyNames","forEach","propKey","desc","getOwnPropertyDescriptor","defineProperty","setGray","node","state","btn","getComponent","enabled","s","getComponentsInChildren","i","length","grayscale"],"mappings":";;;kFAEqBA,e;;;;;;;;;AAFZC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;;;;;;;;;yBAEIF,e,GAAN,MAAMA,eAAN,CAAsB;AAGlB,eAAVG,UAAU,CAACC,IAAD,EAAO;AACtB,cAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,cAAP,CAAsBJ,IAAtB,CAAd,CAAX;AACA,eAAKK,qBAAL,CAA2BJ,IAA3B,EAAiCD,IAAjC;AACA,iBAAOC,IAAP;AACD;;AAE2B,eAArBI,qBAAqB,CAACC,MAAD,EAASC,MAAT,EAAiB;AAC3CL,UAAAA,MAAM,CAACM,mBAAP,CAA2BD,MAA3B,EAAmCE,OAAnC,CAA2C,UAAUC,OAAV,EAAmB;AAC5D,gBAAIC,IAAI,GAAGT,MAAM,CAACU,wBAAP,CAAgCL,MAAhC,EAAwCG,OAAxC,CAAX;AACAR,YAAAA,MAAM,CAACW,cAAP,CAAsBP,MAAtB,EAA8BI,OAA9B,EAAuCC,IAAvC;AACD,WAHD;AAIA,iBAAOL,MAAP;AACD;;AAEoB,eAAPQ,OAAO,CAACC,IAAD,EAAOC,KAAP,EAAc;AACjC,cAAIC,GAAG,GAAGF,IAAI,CAACG,YAAL,CAAkBrB,MAAlB,CAAV;;AACA,cAAIoB,GAAJ,EAAS;AACPA,YAAAA,GAAG,CAACE,OAAJ,GAAc,CAACH,KAAf;AACD;;AACD,cAAII,CAAW,GAAGL,IAAI,CAACM,uBAAL,CAA6BvB,MAA7B,CAAlB;;AACA,eAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,CAACG,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjCF,YAAAA,CAAC,CAACE,CAAD,CAAD,CAAKE,SAAL,GAAiBR,KAAjB;AACD;AACF;;AA1BkC,O","sourcesContent":["import { Button, Sprite } from \"cc\";\n\nexport default class ComponentsUtils {\n\n\n  static copyObject(orig) {\n    var copy = Object.create(Object.getPrototypeOf(orig));\n    this.copyOwnPropertiesFrom(copy, orig);\n    return copy;\n  }\n\n  static copyOwnPropertiesFrom(target, source) {\n    Object.getOwnPropertyNames(source).forEach(function (propKey) {\n      var desc = Object.getOwnPropertyDescriptor(source, propKey);\n      Object.defineProperty(target, propKey, desc);\n    });\n    return target;\n  }\n\n  public static setGray(node, state) {\n    let btn = node.getComponent(Button);\n    if (btn) {\n      btn.enabled = !state;\n    }\n    var s: Sprite[] = node.getComponentsInChildren(Sprite);\n    for (var i = 0; i < s.length; i++) {\n      s[i].grayscale = state;\n    }\n  }\n}\n"]}