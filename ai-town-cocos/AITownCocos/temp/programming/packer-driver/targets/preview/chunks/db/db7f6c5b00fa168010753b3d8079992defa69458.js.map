{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_baseDifference.js"],"names":["baseDifference","array","values","iteratee","comparator","index","includes","arrayIncludes","isCommon","length","result","valuesLength","arrayMap","baseUnary","arrayIncludesWith","LARGE_ARRAY_SIZE","cacheHas","SetCache","outer","value","computed","valuesIndex","push"],"mappings":";;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiDC,UAAjD,EAA6D;AAC3D,QAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,QACIC,QAAQ,GAAGC,aADf;AAAA,QAEIC,QAAQ,GAAG,IAFf;AAAA,QAGIC,MAAM,GAAGR,KAAK,CAACQ,MAHnB;AAAA,QAIIC,MAAM,GAAG,EAJb;AAAA,QAKIC,YAAY,GAAGT,MAAM,CAACO,MAL1B;;AAOA,QAAI,CAACA,MAAL,EAAa;AACX,aAAOC,MAAP;AACD;;AACD,QAAIP,QAAJ,EAAc;AACZD,MAAAA,MAAM,GAAGU,QAAQ,CAACV,MAAD,EAASW,SAAS,CAACV,QAAD,CAAlB,CAAjB;AACD;;AACD,QAAIC,UAAJ,EAAgB;AACdE,MAAAA,QAAQ,GAAGQ,iBAAX;AACAN,MAAAA,QAAQ,GAAG,KAAX;AACD,KAHD,MAIK,IAAIN,MAAM,CAACO,MAAP,IAAiBM,gBAArB,EAAuC;AAC1CT,MAAAA,QAAQ,GAAGU,QAAX;AACAR,MAAAA,QAAQ,GAAG,KAAX;AACAN,MAAAA,MAAM,GAAG,IAAIe,QAAJ,CAAaf,MAAb,CAAT;AACD;;AACDgB,IAAAA,KAAK,EACL,OAAO,EAAEb,KAAF,GAAUI,MAAjB,EAAyB;AACvB,UAAIU,KAAK,GAAGlB,KAAK,CAACI,KAAD,CAAjB;AAAA,UACIe,QAAQ,GAAGjB,QAAQ,IAAI,IAAZ,GAAmBgB,KAAnB,GAA2BhB,QAAQ,CAACgB,KAAD,CADlD;AAGAA,MAAAA,KAAK,GAAIf,UAAU,IAAIe,KAAK,KAAK,CAAzB,GAA8BA,KAA9B,GAAsC,CAA9C;;AACA,UAAIX,QAAQ,IAAIY,QAAQ,KAAKA,QAA7B,EAAuC;AACrC,YAAIC,WAAW,GAAGV,YAAlB;;AACA,eAAOU,WAAW,EAAlB,EAAsB;AACpB,cAAInB,MAAM,CAACmB,WAAD,CAAN,KAAwBD,QAA5B,EAAsC;AACpC,qBAASF,KAAT;AACD;AACF;;AACDR,QAAAA,MAAM,CAACY,IAAP,CAAYH,KAAZ;AACD,OARD,MASK,IAAI,CAACb,QAAQ,CAACJ,MAAD,EAASkB,QAAT,EAAmBhB,UAAnB,CAAb,EAA6C;AAChDM,QAAAA,MAAM,CAACY,IAAP,CAAYH,KAAZ;AACD;AACF;;AACD,WAAOT,MAAP;AACD;;;;AAhEMO,MAAAA,Q;;AACAV,MAAAA,a;;AACAO,MAAAA,iB;;AACAF,MAAAA,Q;;AACAC,MAAAA,S;;AACAG,MAAAA,Q;;;AAEP;AACID,MAAAA,gB,GAAmB,G;;yBA0DRf,c","sourcesContent":["import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n"]}