{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/wrapperAt.js"],"names":["LazyWrapper","LodashWrapper","baseAt","flatRest","isIndex","thru","wrapperAt","paths","length","start","value","__wrapped__","interceptor","object","__actions__","slice","push","undefined","__chain__","array"],"mappings":";;;;;;AAAOA,MAAAA,W;;AACAC,MAAAA,a;;AACAC,MAAAA,M;;AACAC,MAAAA,Q;;AACAC,MAAAA,O;;AACAC,MAAAA,I;;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,S,GAAYH,QAAQ,CAAC,UAASI,KAAT,EAAgB;AACvC,YAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,YACIC,KAAK,GAAGD,MAAM,GAAGD,KAAK,CAAC,CAAD,CAAR,GAAc,CADhC;AAAA,YAEIG,KAAK,GAAG,KAAKC,WAFjB;AAAA,YAGIC,WAAW,GAAG,SAAdA,WAAc,CAASC,MAAT,EAAiB;AAAE,iBAAOX,MAAM,CAACW,MAAD,EAASN,KAAT,CAAb;AAA+B,SAHpE;;AAKA,YAAIC,MAAM,GAAG,CAAT,IAAc,KAAKM,WAAL,CAAiBN,MAA/B,IACA,EAAEE,KAAK,YAAYV,WAAnB,CADA,IACmC,CAACI,OAAO,CAACK,KAAD,CAD/C,EACwD;AACtD,iBAAO,KAAKJ,IAAL,CAAUO,WAAV,CAAP;AACD;;AACDF,QAAAA,KAAK,GAAGA,KAAK,CAACK,KAAN,CAAYN,KAAZ,EAAmB,CAACA,KAAD,IAAUD,MAAM,GAAG,CAAH,GAAO,CAAvB,CAAnB,CAAR;;AACAE,QAAAA,KAAK,CAACI,WAAN,CAAkBE,IAAlB,CAAuB;AACrB,kBAAQX,IADa;AAErB,kBAAQ,CAACO,WAAD,CAFa;AAGrB,qBAAWK;AAHU,SAAvB;;AAKA,eAAO,IAAIhB,aAAJ,CAAkBS,KAAlB,EAAyB,KAAKQ,SAA9B,EAAyCb,IAAzC,CAA8C,UAASc,KAAT,EAAgB;AACnE,cAAIX,MAAM,IAAI,CAACW,KAAK,CAACX,MAArB,EAA6B;AAC3BW,YAAAA,KAAK,CAACH,IAAN,CAAWC,SAAX;AACD;;AACD,iBAAOE,KAAP;AACD,SALM,CAAP;AAMD,OAtBuB,C;;yBAwBTb,S","sourcesContent":["import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport baseAt from './_baseAt.js';\nimport flatRest from './_flatRest.js';\nimport isIndex from './_isIndex.js';\nimport thru from './thru.js';\n\n/**\n * This method is the wrapper version of `_.at`.\n *\n * @name at\n * @memberOf _\n * @since 1.0.0\n * @category Seq\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n *\n * _(object).at(['a[0].b.c', 'a[1]']).value();\n * // => [3, 4]\n */\nvar wrapperAt = flatRest(function(paths) {\n  var length = paths.length,\n      start = length ? paths[0] : 0,\n      value = this.__wrapped__,\n      interceptor = function(object) { return baseAt(object, paths); };\n\n  if (length > 1 || this.__actions__.length ||\n      !(value instanceof LazyWrapper) || !isIndex(start)) {\n    return this.thru(interceptor);\n  }\n  value = value.slice(start, +start + (length ? 1 : 0));\n  value.__actions__.push({\n    'func': thru,\n    'args': [interceptor],\n    'thisArg': undefined\n  });\n  return new LodashWrapper(value, this.__chain__).thru(function(array) {\n    if (length && !array.length) {\n      array.push(undefined);\n    }\n    return array;\n  });\n});\n\nexport default wrapperAt;\n"]}