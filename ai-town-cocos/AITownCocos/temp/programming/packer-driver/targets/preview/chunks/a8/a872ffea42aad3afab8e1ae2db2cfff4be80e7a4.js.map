{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/event-stream/parse-message.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","Int64","splitMessage","BOOLEAN_TAG","BYTE_TAG","SHORT_TAG","INT_TAG","LONG_TAG","BINARY_TAG","STRING_TAG","TIMESTAMP_TAG","UUID_TAG","parseHeaders","headers","out","position","length","nameLength","readUInt8","name","slice","toString","type","value","readInt8","readInt16BE","readInt32BE","binaryLength","readUInt16BE","stringLength","Date","valueOf","uuidChars","substr","Error","parseMessage","message","parsed","body","_cjsExports","_parseMessage"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './int64';\nimport { __cjsMetaURL as _req0} from './split-message';\nlet _cjsExports;\nlet _parseMessage;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var Int64 = require('./int64').Int64;\n\n var splitMessage = require('./split-message').splitMessage;\n\n var BOOLEAN_TAG = 'boolean';\n var BYTE_TAG = 'byte';\n var SHORT_TAG = 'short';\n var INT_TAG = 'integer';\n var LONG_TAG = 'long';\n var BINARY_TAG = 'binary';\n var STRING_TAG = 'string';\n var TIMESTAMP_TAG = 'timestamp';\n var UUID_TAG = 'uuid';\n\n /**\n  * @api private\n  *\n  * @param {Buffer} headers\n  */\n function parseHeaders(headers) {\n     var out = {};\n     var position = 0;\n     while (position < headers.length) {\n         var nameLength = headers.readUInt8(position++);\n         var name = headers.slice(position, position + nameLength).toString();\n         position += nameLength;\n         switch (headers.readUInt8(position++)) {\n             case 0 /* boolTrue */:\n                 out[name] = {\n                     type: BOOLEAN_TAG,\n                     value: true\n                 };\n                 break;\n             case 1 /* boolFalse */:\n                 out[name] = {\n                     type: BOOLEAN_TAG,\n                     value: false\n                 };\n                 break;\n             case 2 /* byte */:\n                 out[name] = {\n                     type: BYTE_TAG,\n                     value: headers.readInt8(position++)\n                 };\n                 break;\n             case 3 /* short */:\n                 out[name] = {\n                     type: SHORT_TAG,\n                     value: headers.readInt16BE(position)\n                 };\n                 position += 2;\n                 break;\n             case 4 /* integer */:\n                 out[name] = {\n                     type: INT_TAG,\n                     value: headers.readInt32BE(position)\n                 };\n                 position += 4;\n                 break;\n             case 5 /* long */:\n                 out[name] = {\n                     type: LONG_TAG,\n                     value: new Int64(headers.slice(position, position + 8))\n                 };\n                 position += 8;\n                 break;\n             case 6 /* byteArray */:\n                 var binaryLength = headers.readUInt16BE(position);\n                 position += 2;\n                 out[name] = {\n                     type: BINARY_TAG,\n                     value: headers.slice(position, position + binaryLength)\n                 };\n                 position += binaryLength;\n                 break;\n             case 7 /* string */:\n                 var stringLength = headers.readUInt16BE(position);\n                 position += 2;\n                 out[name] = {\n                     type: STRING_TAG,\n                     value: headers.slice(\n                         position,\n                         position + stringLength\n                     ).toString()\n                 };\n                 position += stringLength;\n                 break;\n             case 8 /* timestamp */:\n                 out[name] = {\n                     type: TIMESTAMP_TAG,\n                     value: new Date(\n                         new Int64(headers.slice(position, position + 8))\n                             .valueOf()\n                     )\n                 };\n                 position += 8;\n                 break;\n             case 9 /* uuid */:\n                 var uuidChars = headers.slice(position, position + 16)\n                     .toString('hex');\n                 position += 16;\n                 out[name] = {\n                     type: UUID_TAG,\n                     value: uuidChars.substr(0, 8) + '-' +\n                         uuidChars.substr(8, 4) + '-' +\n                         uuidChars.substr(12, 4) + '-' +\n                         uuidChars.substr(16, 4) + '-' +\n                         uuidChars.substr(20)\n                 };\n                 break;\n             default:\n                 throw new Error('Unrecognized header type tag');\n         }\n     }\n     return out;\n }\n\n function parseMessage(message) {\n     var parsed = splitMessage(message);\n     return { headers: parseHeaders(parsed.headers), body: parsed.body };\n }\n\n /**\n  * @api private\n  */\n module.exports = {\n     parseMessage: parseMessage\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_parseMessage = module.exports.parseMessage;\n\n}, () => ({\n  './int64': _req,\n  './split-message': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}