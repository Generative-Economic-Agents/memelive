{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/jsprim/lib/jsprim.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","mod_assert","mod_util","mod_extsprintf","mod_verror","mod_jsonschema","deepCopy","deepEqual","isEmpty","hasKey","forEachKey","pluck","flattenObject","flattenIter","validateJsonObject","validateJsonObjectJS","randElt","extraProperties","mergeObjects","startsWith","endsWith","parseInteger","iso8601","rfc1123","parseDateTime","hrtimediff","hrtimeDiff","hrtimeAccum","hrtimeAdd","hrtimeNanosec","hrtimeMicrosec","hrtimeMillisec","obj","ret","key","marker","Error","constructor","Object","Array","length","push","obj1","obj2","k","hasOwnProperty","equal","prototype","call","callback","pluckv","undefined","i","indexOf","key1","substr","data","depth","doFlattenIter","accum","each","slice","ok","rv","forEach","p","concat","str","prefix","suffix","d","Date","sprintf","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","RFC1123_MONTHS","RFC1123_DAYS","date","getUTCDay","numeric","isNaN","MAX_SAFE_INTEGER","Number","MIN_SAFE_INTEGER","PI_DEFAULTS","base","allowSign","allowPrefix","allowTrailing","allowImprecise","trimWhitespace","leadingZeroIsOctal","CP_0","CP_9","CP_A","CP_B","CP_O","CP_T","CP_X","CP_Z","CP_a","CP_b","CP_o","CP_t","CP_x","CP_z","PI_CONV_DEC","PI_CONV_UC","PI_CONV_LC","uopts","string","optionalObject","baseOverride","options","number","bool","c","pbase","start","mult","value","idx","len","isSpace","charCodeAt","prefixToBase","translateDigit","JSON","stringify","result","schema","input","report","validate","errors","error","propname","reason","toLowerCase","j","VError","jsv_details","arr","isArray","Math","floor","random","assertHrtime","a","b","allowed","keys","filter","provided","overrides","defaults","_cjsExports","_deepCopy","_deepEqual","_isEmpty","_hasKey","_forEachKey","_pluck","_flattenObject","_flattenIter","_validateJsonObject","_validateJsonObjectJS","_randElt","_extraProperties","_mergeObjects","_startsWith","_endsWith","_parseInteger","_iso8601","_rfc1123","_parseDateTime","_hrtimediff","_hrtimeDiff","_hrtimeAccum","_hrtimeAdd","_hrtimeNanosec","_hrtimeMicrosec","_hrtimeMillisec"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'assert-plus';\nimport { __cjsMetaURL as _req0} from 'util';\nimport { __cjsMetaURL as _req1} from 'extsprintf';\nimport { __cjsMetaURL as _req2} from 'verror';\nimport { __cjsMetaURL as _req3} from 'json-schema';\nlet _cjsExports;\nlet _deepCopy;\nlet _deepEqual;\nlet _isEmpty;\nlet _hasKey;\nlet _forEachKey;\nlet _pluck;\nlet _flattenObject;\nlet _flattenIter;\nlet _validateJsonObject;\nlet _validateJsonObjectJS;\nlet _randElt;\nlet _extraProperties;\nlet _mergeObjects;\nlet _startsWith;\nlet _endsWith;\nlet _parseInteger;\nlet _iso8601;\nlet _rfc1123;\nlet _parseDateTime;\nlet _hrtimediff;\nlet _hrtimeDiff;\nlet _hrtimeAccum;\nlet _hrtimeAdd;\nlet _hrtimeNanosec;\nlet _hrtimeMicrosec;\nlet _hrtimeMillisec;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n /*\n  * lib/jsprim.js: utilities for primitive JavaScript types\n  */\n\n var mod_assert = require('assert-plus');\n var mod_util = require('util');\n\n var mod_extsprintf = require('extsprintf');\n var mod_verror = require('verror');\n var mod_jsonschema = require('json-schema');\n\n /*\n  * Public interface\n  */\n exports.deepCopy = deepCopy;\n exports.deepEqual = deepEqual;\n exports.isEmpty = isEmpty;\n exports.hasKey = hasKey;\n exports.forEachKey = forEachKey;\n exports.pluck = pluck;\n exports.flattenObject = flattenObject;\n exports.flattenIter = flattenIter;\n exports.validateJsonObject = validateJsonObjectJS;\n exports.validateJsonObjectJS = validateJsonObjectJS;\n exports.randElt = randElt;\n exports.extraProperties = extraProperties;\n exports.mergeObjects = mergeObjects;\n\n exports.startsWith = startsWith;\n exports.endsWith = endsWith;\n\n exports.parseInteger = parseInteger;\n\n exports.iso8601 = iso8601;\n exports.rfc1123 = rfc1123;\n exports.parseDateTime = parseDateTime;\n\n exports.hrtimediff = hrtimeDiff;\n exports.hrtimeDiff = hrtimeDiff;\n exports.hrtimeAccum = hrtimeAccum;\n exports.hrtimeAdd = hrtimeAdd;\n exports.hrtimeNanosec = hrtimeNanosec;\n exports.hrtimeMicrosec = hrtimeMicrosec;\n exports.hrtimeMillisec = hrtimeMillisec;\n\n\n /*\n  * Deep copy an acyclic *basic* Javascript object.  This only handles basic\n  * scalars (strings, numbers, booleans) and arbitrarily deep arrays and objects\n  * containing these.  This does *not* handle instances of other classes.\n  */\n function deepCopy(obj)\n {\n \tvar ret, key;\n \tvar marker = '__deepCopy';\n\n \tif (obj && obj[marker])\n \t\tthrow (new Error('attempted deep copy of cyclic object'));\n\n \tif (obj && obj.constructor == Object) {\n \t\tret = {};\n \t\tobj[marker] = true;\n\n \t\tfor (key in obj) {\n \t\t\tif (key == marker)\n \t\t\t\tcontinue;\n\n \t\t\tret[key] = deepCopy(obj[key]);\n \t\t}\n\n \t\tdelete (obj[marker]);\n \t\treturn (ret);\n \t}\n\n \tif (obj && obj.constructor == Array) {\n \t\tret = [];\n \t\tobj[marker] = true;\n\n \t\tfor (key = 0; key < obj.length; key++)\n \t\t\tret.push(deepCopy(obj[key]));\n\n \t\tdelete (obj[marker]);\n \t\treturn (ret);\n \t}\n\n \t/*\n \t * It must be a primitive type -- just return it.\n \t */\n \treturn (obj);\n }\n\n function deepEqual(obj1, obj2)\n {\n \tif (typeof (obj1) != typeof (obj2))\n \t\treturn (false);\n\n \tif (obj1 === null || obj2 === null || typeof (obj1) != 'object')\n \t\treturn (obj1 === obj2);\n\n \tif (obj1.constructor != obj2.constructor)\n \t\treturn (false);\n\n \tvar k;\n \tfor (k in obj1) {\n \t\tif (!obj2.hasOwnProperty(k))\n \t\t\treturn (false);\n\n \t\tif (!deepEqual(obj1[k], obj2[k]))\n \t\t\treturn (false);\n \t}\n\n \tfor (k in obj2) {\n \t\tif (!obj1.hasOwnProperty(k))\n \t\t\treturn (false);\n \t}\n\n \treturn (true);\n }\n\n function isEmpty(obj)\n {\n \tvar key;\n \tfor (key in obj)\n \t\treturn (false);\n \treturn (true);\n }\n\n function hasKey(obj, key)\n {\n \tmod_assert.equal(typeof (key), 'string');\n \treturn (Object.prototype.hasOwnProperty.call(obj, key));\n }\n\n function forEachKey(obj, callback)\n {\n \tfor (var key in obj) {\n \t\tif (hasKey(obj, key)) {\n \t\t\tcallback(key, obj[key]);\n \t\t}\n \t}\n }\n\n function pluck(obj, key)\n {\n \tmod_assert.equal(typeof (key), 'string');\n \treturn (pluckv(obj, key));\n }\n\n function pluckv(obj, key)\n {\n \tif (obj === null || typeof (obj) !== 'object')\n \t\treturn (undefined);\n\n \tif (obj.hasOwnProperty(key))\n \t\treturn (obj[key]);\n\n \tvar i = key.indexOf('.');\n \tif (i == -1)\n \t\treturn (undefined);\n\n \tvar key1 = key.substr(0, i);\n \tif (!obj.hasOwnProperty(key1))\n \t\treturn (undefined);\n\n \treturn (pluckv(obj[key1], key.substr(i + 1)));\n }\n\n /*\n  * Invoke callback(row) for each entry in the array that would be returned by\n  * flattenObject(data, depth).  This is just like flattenObject(data,\n  * depth).forEach(callback), except that the intermediate array is never\n  * created.\n  */\n function flattenIter(data, depth, callback)\n {\n \tdoFlattenIter(data, depth, [], callback);\n }\n\n function doFlattenIter(data, depth, accum, callback)\n {\n \tvar each;\n \tvar key;\n\n \tif (depth === 0) {\n \t\teach = accum.slice(0);\n \t\teach.push(data);\n \t\tcallback(each);\n \t\treturn;\n \t}\n\n \tmod_assert.ok(data !== null);\n \tmod_assert.equal(typeof (data), 'object');\n \tmod_assert.equal(typeof (depth), 'number');\n \tmod_assert.ok(depth >= 0);\n\n \tfor (key in data) {\n \t\teach = accum.slice(0);\n \t\teach.push(key);\n \t\tdoFlattenIter(data[key], depth - 1, each, callback);\n \t}\n }\n\n function flattenObject(data, depth)\n {\n \tif (depth === 0)\n \t\treturn ([ data ]);\n\n \tmod_assert.ok(data !== null);\n \tmod_assert.equal(typeof (data), 'object');\n \tmod_assert.equal(typeof (depth), 'number');\n \tmod_assert.ok(depth >= 0);\n\n \tvar rv = [];\n \tvar key;\n\n \tfor (key in data) {\n \t\tflattenObject(data[key], depth - 1).forEach(function (p) {\n \t\t\trv.push([ key ].concat(p));\n \t\t});\n \t}\n\n \treturn (rv);\n }\n\n function startsWith(str, prefix)\n {\n \treturn (str.substr(0, prefix.length) == prefix);\n }\n\n function endsWith(str, suffix)\n {\n \treturn (str.substr(\n \t    str.length - suffix.length, suffix.length) == suffix);\n }\n\n function iso8601(d)\n {\n \tif (typeof (d) == 'number')\n \t\td = new Date(d);\n \tmod_assert.ok(d.constructor === Date);\n \treturn (mod_extsprintf.sprintf('%4d-%02d-%02dT%02d:%02d:%02d.%03dZ',\n \t    d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate(),\n \t    d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(),\n \t    d.getUTCMilliseconds()));\n }\n\n var RFC1123_MONTHS = [\n     'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n     'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n var RFC1123_DAYS = [\n     'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n function rfc1123(date) {\n \treturn (mod_extsprintf.sprintf('%s, %02d %s %04d %02d:%02d:%02d GMT',\n \t    RFC1123_DAYS[date.getUTCDay()], date.getUTCDate(),\n \t    RFC1123_MONTHS[date.getUTCMonth()], date.getUTCFullYear(),\n \t    date.getUTCHours(), date.getUTCMinutes(),\n \t    date.getUTCSeconds()));\n }\n\n /*\n  * Parses a date expressed as a string, as either a number of milliseconds since\n  * the epoch or any string format that Date accepts, giving preference to the\n  * former where these two sets overlap (e.g., small numbers).\n  */\n function parseDateTime(str)\n {\n \t/*\n \t * This is irritatingly implicit, but significantly more concise than\n \t * alternatives.  The \"+str\" will convert a string containing only a\n \t * number directly to a Number, or NaN for other strings.  Thus, if the\n \t * conversion succeeds, we use it (this is the milliseconds-since-epoch\n \t * case).  Otherwise, we pass the string directly to the Date\n \t * constructor to parse.\n \t */\n \tvar numeric = +str;\n \tif (!isNaN(numeric)) {\n \t\treturn (new Date(numeric));\n \t} else {\n \t\treturn (new Date(str));\n \t}\n }\n\n\n /*\n  * Number.*_SAFE_INTEGER isn't present before node v0.12, so we hardcode\n  * the ES6 definitions here, while allowing for them to someday be higher.\n  */\n var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n var MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n\n\n /*\n  * Default options for parseInteger().\n  */\n var PI_DEFAULTS = {\n \tbase: 10,\n \tallowSign: true,\n \tallowPrefix: false,\n \tallowTrailing: false,\n \tallowImprecise: false,\n \ttrimWhitespace: false,\n \tleadingZeroIsOctal: false\n };\n\n var CP_0 = 0x30;\n var CP_9 = 0x39;\n\n var CP_A = 0x41;\n var CP_B = 0x42;\n var CP_O = 0x4f;\n var CP_T = 0x54;\n var CP_X = 0x58;\n var CP_Z = 0x5a;\n\n var CP_a = 0x61;\n var CP_b = 0x62;\n var CP_o = 0x6f;\n var CP_t = 0x74;\n var CP_x = 0x78;\n var CP_z = 0x7a;\n\n var PI_CONV_DEC = 0x30;\n var PI_CONV_UC = 0x37;\n var PI_CONV_LC = 0x57;\n\n\n /*\n  * A stricter version of parseInt() that provides options for changing what\n  * is an acceptable string (for example, disallowing trailing characters).\n  */\n function parseInteger(str, uopts)\n {\n \tmod_assert.string(str, 'str');\n \tmod_assert.optionalObject(uopts, 'options');\n\n \tvar baseOverride = false;\n \tvar options = PI_DEFAULTS;\n\n \tif (uopts) {\n \t\tbaseOverride = hasKey(uopts, 'base');\n \t\toptions = mergeObjects(options, uopts);\n \t\tmod_assert.number(options.base, 'options.base');\n \t\tmod_assert.ok(options.base >= 2, 'options.base >= 2');\n \t\tmod_assert.ok(options.base <= 36, 'options.base <= 36');\n \t\tmod_assert.bool(options.allowSign, 'options.allowSign');\n \t\tmod_assert.bool(options.allowPrefix, 'options.allowPrefix');\n \t\tmod_assert.bool(options.allowTrailing,\n \t\t    'options.allowTrailing');\n \t\tmod_assert.bool(options.allowImprecise,\n \t\t    'options.allowImprecise');\n \t\tmod_assert.bool(options.trimWhitespace,\n \t\t    'options.trimWhitespace');\n \t\tmod_assert.bool(options.leadingZeroIsOctal,\n \t\t    'options.leadingZeroIsOctal');\n\n \t\tif (options.leadingZeroIsOctal) {\n \t\t\tmod_assert.ok(!baseOverride,\n \t\t\t    '\"base\" and \"leadingZeroIsOctal\" are ' +\n \t\t\t    'mutually exclusive');\n \t\t}\n \t}\n\n \tvar c;\n \tvar pbase = -1;\n \tvar base = options.base;\n \tvar start;\n \tvar mult = 1;\n \tvar value = 0;\n \tvar idx = 0;\n \tvar len = str.length;\n\n \t/* Trim any whitespace on the left side. */\n \tif (options.trimWhitespace) {\n \t\twhile (idx < len && isSpace(str.charCodeAt(idx))) {\n \t\t\t++idx;\n \t\t}\n \t}\n\n \t/* Check the number for a leading sign. */\n \tif (options.allowSign) {\n \t\tif (str[idx] === '-') {\n \t\t\tidx += 1;\n \t\t\tmult = -1;\n \t\t} else if (str[idx] === '+') {\n \t\t\tidx += 1;\n \t\t}\n \t}\n\n \t/* Parse the base-indicating prefix if there is one. */\n \tif (str[idx] === '0') {\n \t\tif (options.allowPrefix) {\n \t\t\tpbase = prefixToBase(str.charCodeAt(idx + 1));\n \t\t\tif (pbase !== -1 && (!baseOverride || pbase === base)) {\n \t\t\t\tbase = pbase;\n \t\t\t\tidx += 2;\n \t\t\t}\n \t\t}\n\n \t\tif (pbase === -1 && options.leadingZeroIsOctal) {\n \t\t\tbase = 8;\n \t\t}\n \t}\n\n \t/* Parse the actual digits. */\n \tfor (start = idx; idx < len; ++idx) {\n \t\tc = translateDigit(str.charCodeAt(idx));\n \t\tif (c !== -1 && c < base) {\n \t\t\tvalue *= base;\n \t\t\tvalue += c;\n \t\t} else {\n \t\t\tbreak;\n \t\t}\n \t}\n\n \t/* If we didn't parse any digits, we have an invalid number. */\n \tif (start === idx) {\n \t\treturn (new Error('invalid number: ' + JSON.stringify(str)));\n \t}\n\n \t/* Trim any whitespace on the right side. */\n \tif (options.trimWhitespace) {\n \t\twhile (idx < len && isSpace(str.charCodeAt(idx))) {\n \t\t\t++idx;\n \t\t}\n \t}\n\n \t/* Check for trailing characters. */\n \tif (idx < len && !options.allowTrailing) {\n \t\treturn (new Error('trailing characters after number: ' +\n \t\t    JSON.stringify(str.slice(idx))));\n \t}\n\n \t/* If our value is 0, we return now, to avoid returning -0. */\n \tif (value === 0) {\n \t\treturn (0);\n \t}\n\n \t/* Calculate our final value. */\n \tvar result = value * mult;\n\n \t/*\n \t * If the string represents a value that cannot be precisely represented\n \t * by JavaScript, then we want to check that:\n \t *\n \t * - We never increased the value past MAX_SAFE_INTEGER\n \t * - We don't make the result negative and below MIN_SAFE_INTEGER\n \t *\n \t * Because we only ever increment the value during parsing, there's no\n \t * chance of moving past MAX_SAFE_INTEGER and then dropping below it\n \t * again, losing precision in the process. This means that we only need\n \t * to do our checks here, at the end.\n \t */\n \tif (!options.allowImprecise &&\n \t    (value > MAX_SAFE_INTEGER || result < MIN_SAFE_INTEGER)) {\n \t\treturn (new Error('number is outside of the supported range: ' +\n \t\t    JSON.stringify(str.slice(start, idx))));\n \t}\n\n \treturn (result);\n }\n\n\n /*\n  * Interpret a character code as a base-36 digit.\n  */\n function translateDigit(d)\n {\n \tif (d >= CP_0 && d <= CP_9) {\n \t\t/* '0' to '9' -> 0 to 9 */\n \t\treturn (d - PI_CONV_DEC);\n \t} else if (d >= CP_A && d <= CP_Z) {\n \t\t/* 'A' - 'Z' -> 10 to 35 */\n \t\treturn (d - PI_CONV_UC);\n \t} else if (d >= CP_a && d <= CP_z) {\n \t\t/* 'a' - 'z' -> 10 to 35 */\n \t\treturn (d - PI_CONV_LC);\n \t} else {\n \t\t/* Invalid character code */\n \t\treturn (-1);\n \t}\n }\n\n\n /*\n  * Test if a value matches the ECMAScript definition of trimmable whitespace.\n  */\n function isSpace(c)\n {\n \treturn (c === 0x20) ||\n \t    (c >= 0x0009 && c <= 0x000d) ||\n \t    (c === 0x00a0) ||\n \t    (c === 0x1680) ||\n \t    (c === 0x180e) ||\n \t    (c >= 0x2000 && c <= 0x200a) ||\n \t    (c === 0x2028) ||\n \t    (c === 0x2029) ||\n \t    (c === 0x202f) ||\n \t    (c === 0x205f) ||\n \t    (c === 0x3000) ||\n \t    (c === 0xfeff);\n }\n\n\n /*\n  * Determine which base a character indicates (e.g., 'x' indicates hex).\n  */\n function prefixToBase(c)\n {\n \tif (c === CP_b || c === CP_B) {\n \t\t/* 0b/0B (binary) */\n \t\treturn (2);\n \t} else if (c === CP_o || c === CP_O) {\n \t\t/* 0o/0O (octal) */\n \t\treturn (8);\n \t} else if (c === CP_t || c === CP_T) {\n \t\t/* 0t/0T (decimal) */\n \t\treturn (10);\n \t} else if (c === CP_x || c === CP_X) {\n \t\t/* 0x/0X (hexadecimal) */\n \t\treturn (16);\n \t} else {\n \t\t/* Not a meaningful character */\n \t\treturn (-1);\n \t}\n }\n\n\n function validateJsonObjectJS(schema, input)\n {\n \tvar report = mod_jsonschema.validate(input, schema);\n\n \tif (report.errors.length === 0)\n \t\treturn (null);\n\n \t/* Currently, we only do anything useful with the first error. */\n \tvar error = report.errors[0];\n\n \t/* The failed property is given by a URI with an irrelevant prefix. */\n \tvar propname = error['property'];\n \tvar reason = error['message'].toLowerCase();\n \tvar i, j;\n\n \t/*\n \t * There's at least one case where the property error message is\n \t * confusing at best.  We work around this here.\n \t */\n \tif ((i = reason.indexOf('the property ')) != -1 &&\n \t    (j = reason.indexOf(' is not defined in the schema and the ' +\n \t    'schema does not allow additional properties')) != -1) {\n \t\ti += 'the property '.length;\n \t\tif (propname === '')\n \t\t\tpropname = reason.substr(i, j - i);\n \t\telse\n \t\t\tpropname = propname + '.' + reason.substr(i, j - i);\n\n \t\treason = 'unsupported property';\n \t}\n\n \tvar rv = new mod_verror.VError('property \"%s\": %s', propname, reason);\n \trv.jsv_details = error;\n \treturn (rv);\n }\n\n function randElt(arr)\n {\n \tmod_assert.ok(Array.isArray(arr) && arr.length > 0,\n \t    'randElt argument must be a non-empty array');\n\n \treturn (arr[Math.floor(Math.random() * arr.length)]);\n }\n\n function assertHrtime(a)\n {\n \tmod_assert.ok(a[0] >= 0 && a[1] >= 0,\n \t    'negative numbers not allowed in hrtimes');\n \tmod_assert.ok(a[1] < 1e9, 'nanoseconds column overflow');\n }\n\n /*\n  * Compute the time elapsed between hrtime readings A and B, where A is later\n  * than B.  hrtime readings come from Node's process.hrtime().  There is no\n  * defined way to represent negative deltas, so it's illegal to diff B from A\n  * where the time denoted by B is later than the time denoted by A.  If this\n  * becomes valuable, we can define a representation and extend the\n  * implementation to support it.\n  */\n function hrtimeDiff(a, b)\n {\n \tassertHrtime(a);\n \tassertHrtime(b);\n \tmod_assert.ok(a[0] > b[0] || (a[0] == b[0] && a[1] >= b[1]),\n \t    'negative differences not allowed');\n\n \tvar rv = [ a[0] - b[0], 0 ];\n\n \tif (a[1] >= b[1]) {\n \t\trv[1] = a[1] - b[1];\n \t} else {\n \t\trv[0]--;\n \t\trv[1] = 1e9 - (b[1] - a[1]);\n \t}\n\n \treturn (rv);\n }\n\n /*\n  * Convert a hrtime reading from the array format returned by Node's\n  * process.hrtime() into a scalar number of nanoseconds.\n  */\n function hrtimeNanosec(a)\n {\n \tassertHrtime(a);\n\n \treturn (Math.floor(a[0] * 1e9 + a[1]));\n }\n\n /*\n  * Convert a hrtime reading from the array format returned by Node's\n  * process.hrtime() into a scalar number of microseconds.\n  */\n function hrtimeMicrosec(a)\n {\n \tassertHrtime(a);\n\n \treturn (Math.floor(a[0] * 1e6 + a[1] / 1e3));\n }\n\n /*\n  * Convert a hrtime reading from the array format returned by Node's\n  * process.hrtime() into a scalar number of milliseconds.\n  */\n function hrtimeMillisec(a)\n {\n \tassertHrtime(a);\n\n \treturn (Math.floor(a[0] * 1e3 + a[1] / 1e6));\n }\n\n /*\n  * Add two hrtime readings A and B, overwriting A with the result of the\n  * addition.  This function is useful for accumulating several hrtime intervals\n  * into a counter.  Returns A.\n  */\n function hrtimeAccum(a, b)\n {\n \tassertHrtime(a);\n \tassertHrtime(b);\n\n \t/*\n \t * Accumulate the nanosecond component.\n \t */\n \ta[1] += b[1];\n \tif (a[1] >= 1e9) {\n \t\t/*\n \t\t * The nanosecond component overflowed, so carry to the seconds\n \t\t * field.\n \t\t */\n \t\ta[0]++;\n \t\ta[1] -= 1e9;\n \t}\n\n \t/*\n \t * Accumulate the seconds component.\n \t */\n \ta[0] += b[0];\n\n \treturn (a);\n }\n\n /*\n  * Add two hrtime readings A and B, returning the result as a new hrtime array.\n  * Does not modify either input argument.\n  */\n function hrtimeAdd(a, b)\n {\n \tassertHrtime(a);\n\n \tvar rv = [ a[0], a[1] ];\n\n \treturn (hrtimeAccum(rv, b));\n }\n\n\n /*\n  * Check an object for unexpected properties.  Accepts the object to check, and\n  * an array of allowed property names (strings).  Returns an array of key names\n  * that were found on the object, but did not appear in the list of allowed\n  * properties.  If no properties were found, the returned array will be of\n  * zero length.\n  */\n function extraProperties(obj, allowed)\n {\n \tmod_assert.ok(typeof (obj) === 'object' && obj !== null,\n \t    'obj argument must be a non-null object');\n \tmod_assert.ok(Array.isArray(allowed),\n \t    'allowed argument must be an array of strings');\n \tfor (var i = 0; i < allowed.length; i++) {\n \t\tmod_assert.ok(typeof (allowed[i]) === 'string',\n \t\t    'allowed argument must be an array of strings');\n \t}\n\n \treturn (Object.keys(obj).filter(function (key) {\n \t\treturn (allowed.indexOf(key) === -1);\n \t}));\n }\n\n /*\n  * Given three sets of properties \"provided\" (may be undefined), \"overrides\"\n  * (required), and \"defaults\" (may be undefined), construct an object containing\n  * the union of these sets with \"overrides\" overriding \"provided\", and\n  * \"provided\" overriding \"defaults\".  None of the input objects are modified.\n  */\n function mergeObjects(provided, overrides, defaults)\n {\n \tvar rv, k;\n\n \trv = {};\n \tif (defaults) {\n \t\tfor (k in defaults)\n \t\t\trv[k] = defaults[k];\n \t}\n\n \tif (provided) {\n \t\tfor (k in provided)\n \t\t\trv[k] = provided[k];\n \t}\n\n \tif (overrides) {\n \t\tfor (k in overrides)\n \t\t\trv[k] = overrides[k];\n \t}\n\n \treturn (rv);\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_deepCopy = module.exports.deepCopy;\n_deepEqual = module.exports.deepEqual;\n_isEmpty = module.exports.isEmpty;\n_hasKey = module.exports.hasKey;\n_forEachKey = module.exports.forEachKey;\n_pluck = module.exports.pluck;\n_flattenObject = module.exports.flattenObject;\n_flattenIter = module.exports.flattenIter;\n_validateJsonObject = module.exports.validateJsonObject;\n_validateJsonObjectJS = module.exports.validateJsonObjectJS;\n_randElt = module.exports.randElt;\n_extraProperties = module.exports.extraProperties;\n_mergeObjects = module.exports.mergeObjects;\n_startsWith = module.exports.startsWith;\n_endsWith = module.exports.endsWith;\n_parseInteger = module.exports.parseInteger;\n_iso8601 = module.exports.iso8601;\n_rfc1123 = module.exports.rfc1123;\n_parseDateTime = module.exports.parseDateTime;\n_hrtimediff = module.exports.hrtimediff;\n_hrtimeDiff = module.exports.hrtimeDiff;\n_hrtimeAccum = module.exports.hrtimeAccum;\n_hrtimeAdd = module.exports.hrtimeAdd;\n_hrtimeNanosec = module.exports.hrtimeNanosec;\n_hrtimeMicrosec = module.exports.hrtimeMicrosec;\n_hrtimeMillisec = module.exports.hrtimeMillisec;\n\n}, () => ({\n  'assert-plus': _req,\n  'util': _req0,\n  'extsprintf': _req1,\n  'verror': _req2,\n  'json-schema': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}