{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/backup-gateway-2021-01-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","AssociateGatewayToServer","input","type","required","members","GatewayArn","ServerArn","output","CreateGateway","ActivationKey","GatewayDisplayName","GatewayType","Tags","shape","DeleteGateway","idempotent","DeleteHypervisor","HypervisorArn","DisassociateGatewayFromServer","GetBandwidthRateLimitSchedule","BandwidthRateLimitIntervals","GetGateway","Gateway","HypervisorId","LastSeenTime","MaintenanceStartTime","DayOfMonth","DayOfWeek","HourOfDay","MinuteOfHour","NextUpdateAvailabilityTime","VpcEndpoint","GetHypervisor","Hypervisor","Host","KmsKeyArn","LastSuccessfulMetadataSyncTime","LatestMetadataSyncStatus","LatestMetadataSyncStatusMessage","LogGroupArn","Name","State","GetHypervisorPropertyMappings","IamRoleArn","VmwareToAwsTagMappings","GetVirtualMachine","ResourceArn","VirtualMachine","HostName","LastBackupDate","Path","VmwareTags","member","VmwareCategory","VmwareTagDescription","VmwareTagName","ImportHypervisorConfiguration","Password","Username","ListGateways","MaxResults","NextToken","Gateways","ListHypervisors","Hypervisors","ListTagsForResource","ListVirtualMachines","VirtualMachines","PutBandwidthRateLimitSchedule","PutHypervisorPropertyMappings","PutMaintenanceStartTime","StartVirtualMachinesMetadataSync","TagResource","ResourceARN","TestHypervisorConfiguration","UntagResource","TagKeys","UpdateGatewayInformation","UpdateGatewaySoftwareNow","UpdateHypervisor","shapes","S9","Key","Value","Sm","AverageUploadRateLimitInBitsPerSec","DaysOfWeek","EndHourOfDay","EndMinuteOfHour","StartHourOfDay","StartMinuteOfHour","S1d","AwsTagKey","AwsTagValue","S1p","sensitive","S1q"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-01-01',\n    endpointPrefix: 'backup-gateway',\n    jsonVersion: '1.0',\n    protocol: 'json',\n    serviceFullName: 'AWS Backup Gateway',\n    serviceId: 'Backup Gateway',\n    signatureVersion: 'v4',\n    signingName: 'backup-gateway',\n    targetPrefix: 'BackupOnPremises_v20210101',\n    uid: 'backup-gateway-2021-01-01'\n  },\n  operations: {\n    AssociateGatewayToServer: {\n      input: {\n        type: 'structure',\n        required: [\n          'GatewayArn',\n          'ServerArn'\n        ],\n        members: {\n          GatewayArn: {},\n          ServerArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GatewayArn: {}\n        }\n      }\n    },\n    CreateGateway: {\n      input: {\n        type: 'structure',\n        required: [\n          'ActivationKey',\n          'GatewayDisplayName',\n          'GatewayType'\n        ],\n        members: {\n          ActivationKey: {},\n          GatewayDisplayName: {},\n          GatewayType: {},\n          Tags: {\n            shape: 'S9'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GatewayArn: {}\n        }\n      }\n    },\n    DeleteGateway: {\n      input: {\n        type: 'structure',\n        required: [\n          'GatewayArn'\n        ],\n        members: {\n          GatewayArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GatewayArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteHypervisor: {\n      input: {\n        type: 'structure',\n        required: [\n          'HypervisorArn'\n        ],\n        members: {\n          HypervisorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HypervisorArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DisassociateGatewayFromServer: {\n      input: {\n        type: 'structure',\n        required: [\n          'GatewayArn'\n        ],\n        members: {\n          GatewayArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GatewayArn: {}\n        }\n      }\n    },\n    GetBandwidthRateLimitSchedule: {\n      input: {\n        type: 'structure',\n        required: [\n          'GatewayArn'\n        ],\n        members: {\n          GatewayArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BandwidthRateLimitIntervals: {\n            shape: 'Sm'\n          },\n          GatewayArn: {}\n        }\n      }\n    },\n    GetGateway: {\n      input: {\n        type: 'structure',\n        required: [\n          'GatewayArn'\n        ],\n        members: {\n          GatewayArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Gateway: {\n            type: 'structure',\n            members: {\n              GatewayArn: {},\n              GatewayDisplayName: {},\n              GatewayType: {},\n              HypervisorId: {},\n              LastSeenTime: {\n                type: 'timestamp'\n              },\n              MaintenanceStartTime: {\n                type: 'structure',\n                required: [\n                  'HourOfDay',\n                  'MinuteOfHour'\n                ],\n                members: {\n                  DayOfMonth: {\n                    type: 'integer'\n                  },\n                  DayOfWeek: {\n                    type: 'integer'\n                  },\n                  HourOfDay: {\n                    type: 'integer'\n                  },\n                  MinuteOfHour: {\n                    type: 'integer'\n                  }\n                }\n              },\n              NextUpdateAvailabilityTime: {\n                type: 'timestamp'\n              },\n              VpcEndpoint: {}\n            }\n          }\n        }\n      }\n    },\n    GetHypervisor: {\n      input: {\n        type: 'structure',\n        required: [\n          'HypervisorArn'\n        ],\n        members: {\n          HypervisorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Hypervisor: {\n            type: 'structure',\n            members: {\n              Host: {},\n              HypervisorArn: {},\n              KmsKeyArn: {},\n              LastSuccessfulMetadataSyncTime: {\n                type: 'timestamp'\n              },\n              LatestMetadataSyncStatus: {},\n              LatestMetadataSyncStatusMessage: {},\n              LogGroupArn: {},\n              Name: {},\n              State: {}\n            }\n          }\n        }\n      }\n    },\n    GetHypervisorPropertyMappings: {\n      input: {\n        type: 'structure',\n        required: [\n          'HypervisorArn'\n        ],\n        members: {\n          HypervisorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HypervisorArn: {},\n          IamRoleArn: {},\n          VmwareToAwsTagMappings: {\n            shape: 'S1d'\n          }\n        }\n      }\n    },\n    GetVirtualMachine: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          VirtualMachine: {\n            type: 'structure',\n            members: {\n              HostName: {},\n              HypervisorId: {},\n              LastBackupDate: {\n                type: 'timestamp'\n              },\n              Name: {},\n              Path: {},\n              ResourceArn: {},\n              VmwareTags: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    VmwareCategory: {},\n                    VmwareTagDescription: {},\n                    VmwareTagName: {}\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ImportHypervisorConfiguration: {\n      input: {\n        type: 'structure',\n        required: [\n          'Host',\n          'Name'\n        ],\n        members: {\n          Host: {},\n          KmsKeyArn: {},\n          Name: {},\n          Password: {\n            shape: 'S1p'\n          },\n          Tags: {\n            shape: 'S9'\n          },\n          Username: {\n            shape: 'S1q'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HypervisorArn: {}\n        }\n      }\n    },\n    ListGateways: {\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Gateways: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                GatewayArn: {},\n                GatewayDisplayName: {},\n                GatewayType: {},\n                HypervisorId: {},\n                LastSeenTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListHypervisors: {\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Hypervisors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Host: {},\n                HypervisorArn: {},\n                KmsKeyArn: {},\n                Name: {},\n                State: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceArn: {},\n          Tags: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    ListVirtualMachines: {\n      input: {\n        type: 'structure',\n        members: {\n          HypervisorArn: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          VirtualMachines: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                HostName: {},\n                HypervisorId: {},\n                LastBackupDate: {\n                  type: 'timestamp'\n                },\n                Name: {},\n                Path: {},\n                ResourceArn: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    PutBandwidthRateLimitSchedule: {\n      input: {\n        type: 'structure',\n        required: [\n          'BandwidthRateLimitIntervals',\n          'GatewayArn'\n        ],\n        members: {\n          BandwidthRateLimitIntervals: {\n            shape: 'Sm'\n          },\n          GatewayArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GatewayArn: {}\n        }\n      },\n      idempotent: true\n    },\n    PutHypervisorPropertyMappings: {\n      input: {\n        type: 'structure',\n        required: [\n          'HypervisorArn',\n          'IamRoleArn',\n          'VmwareToAwsTagMappings'\n        ],\n        members: {\n          HypervisorArn: {},\n          IamRoleArn: {},\n          VmwareToAwsTagMappings: {\n            shape: 'S1d'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HypervisorArn: {}\n        }\n      },\n      idempotent: true\n    },\n    PutMaintenanceStartTime: {\n      input: {\n        type: 'structure',\n        required: [\n          'GatewayArn',\n          'HourOfDay',\n          'MinuteOfHour'\n        ],\n        members: {\n          DayOfMonth: {\n            type: 'integer'\n          },\n          DayOfWeek: {\n            type: 'integer'\n          },\n          GatewayArn: {},\n          HourOfDay: {\n            type: 'integer'\n          },\n          MinuteOfHour: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GatewayArn: {}\n        }\n      }\n    },\n    StartVirtualMachinesMetadataSync: {\n      input: {\n        type: 'structure',\n        required: [\n          'HypervisorArn'\n        ],\n        members: {\n          HypervisorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HypervisorArn: {}\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN',\n          'Tags'\n        ],\n        members: {\n          ResourceARN: {},\n          Tags: {\n            shape: 'S9'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceARN: {}\n        }\n      }\n    },\n    TestHypervisorConfiguration: {\n      input: {\n        type: 'structure',\n        required: [\n          'GatewayArn',\n          'Host'\n        ],\n        members: {\n          GatewayArn: {},\n          Host: {},\n          Password: {\n            shape: 'S1p'\n          },\n          Username: {\n            shape: 'S1q'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN',\n          'TagKeys'\n        ],\n        members: {\n          ResourceARN: {},\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceARN: {}\n        }\n      }\n    },\n    UpdateGatewayInformation: {\n      input: {\n        type: 'structure',\n        required: [\n          'GatewayArn'\n        ],\n        members: {\n          GatewayArn: {},\n          GatewayDisplayName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GatewayArn: {}\n        }\n      }\n    },\n    UpdateGatewaySoftwareNow: {\n      input: {\n        type: 'structure',\n        required: [\n          'GatewayArn'\n        ],\n        members: {\n          GatewayArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          GatewayArn: {}\n        }\n      }\n    },\n    UpdateHypervisor: {\n      input: {\n        type: 'structure',\n        required: [\n          'HypervisorArn'\n        ],\n        members: {\n          Host: {},\n          HypervisorArn: {},\n          LogGroupArn: {},\n          Name: {},\n          Password: {\n            shape: 'S1p'\n          },\n          Username: {\n            shape: 'S1q'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HypervisorArn: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S9: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sm: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'DaysOfWeek',\n          'EndHourOfDay',\n          'EndMinuteOfHour',\n          'StartHourOfDay',\n          'StartMinuteOfHour'\n        ],\n        members: {\n          AverageUploadRateLimitInBitsPerSec: {\n            type: 'long'\n          },\n          DaysOfWeek: {\n            type: 'list',\n            member: {\n              type: 'integer'\n            }\n          },\n          EndHourOfDay: {\n            type: 'integer'\n          },\n          EndMinuteOfHour: {\n            type: 'integer'\n          },\n          StartHourOfDay: {\n            type: 'integer'\n          },\n          StartMinuteOfHour: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    S1d: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'AwsTagKey',\n          'AwsTagValue',\n          'VmwareCategory',\n          'VmwareTagName'\n        ],\n        members: {\n          AwsTagKey: {},\n          AwsTagValue: {},\n          VmwareCategory: {},\n          VmwareTagName: {}\n        }\n      }\n    },\n    S1p: {\n      type: 'string',\n      sensitive: true\n    },\n    S1q: {\n      type: 'string',\n      sensitive: true\n    }\n  }\n}"]}