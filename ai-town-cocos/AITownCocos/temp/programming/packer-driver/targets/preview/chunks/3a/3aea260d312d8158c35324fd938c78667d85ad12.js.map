{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/lex-models-2017-04-19.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateBotVersion","http","requestUri","responseCode","input","type","required","members","name","location","locationName","checksum","output","description","intents","shape","clarificationPrompt","abortStatement","status","failureReason","lastUpdatedDate","createdDate","idleSessionTTLInSeconds","voiceId","locale","childDirected","enableModelImprovements","detectSentiment","CreateIntentVersion","slots","sampleUtterances","confirmationPrompt","rejectionStatement","followUpPrompt","conclusionStatement","dialogCodeHook","fulfillmentActivity","parentIntentSignature","kendraConfiguration","inputContexts","outputContexts","CreateSlotTypeVersion","enumerationValues","valueSelectionStrategy","parentSlotTypeSignature","slotTypeConfigurations","DeleteBot","method","DeleteBotAlias","botName","DeleteBotChannelAssociation","botAlias","DeleteBotVersion","DeleteIntent","DeleteIntentVersion","DeleteSlotType","DeleteSlotTypeVersion","DeleteUtterances","userId","GetBot","versionOrAlias","nluIntentConfidenceThreshold","GetBotAlias","botVersion","conversationLogs","GetBotAliases","nextToken","maxResults","nameContains","BotAliases","member","GetBotChannelAssociation","botConfiguration","GetBotChannelAssociations","botChannelAssociations","GetBotVersions","bots","GetBots","GetBuiltinIntent","signature","supportedLocales","GetBuiltinIntents","signatureContains","GetBuiltinSlotTypes","slotTypes","GetExport","resourceType","exportType","exportStatus","url","GetImport","importId","mergeStrategy","importStatus","GetIntent","GetIntentVersions","GetIntents","GetMigration","migrationId","v1BotName","v1BotVersion","v1BotLocale","v2BotId","v2BotRole","migrationStatus","migrationStrategy","migrationTimestamp","alerts","message","details","referenceURLs","GetMigrations","sortByAttribute","sortByOrder","v1BotNameContains","migrationStatusEquals","migrationSummaries","GetSlotType","GetSlotTypeVersions","GetSlotTypes","GetUtterancesView","botVersions","statusType","utterances","utteranceString","count","distinctUsers","firstUtteredDate","lastUtteredDate","ListTagsForResource","resourceArn","tags","PutBot","processBehavior","createVersion","PutBotAlias","logSettings","logType","destination","kmsKeyArn","iamRoleArn","PutIntent","PutSlotType","StartImport","payload","StartMigration","v2BotName","TagResource","UntagResource","tagKeys","shapes","S6","intentName","intentVersion","Sa","messages","maxAttempts","responseCard","Sb","contentType","content","groupNumber","Si","Sq","slotConstraint","slotType","slotTypeVersion","valueElicitationPrompt","priority","obfuscationSetting","defaultValueSpec","defaultValueList","defaultValue","S13","S14","prompt","S15","uri","messageVersion","S18","codeHook","S1b","kendraIndex","queryFilterString","role","S1f","S1i","timeToLiveInSeconds","turnsToLive","S1q","value","synonyms","S1v","regexConfiguration","pattern","S2h","resourcePrefix","S2z","key","sensitive","S38","S3e","S45","S4x","S5e"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2017-04-19',\n    endpointPrefix: 'models.lex',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon Lex Model Building Service',\n    serviceId: 'Lex Model Building Service',\n    signatureVersion: 'v4',\n    signingName: 'lex',\n    uid: 'lex-models-2017-04-19'\n  },\n  operations: {\n    CreateBotVersion: {\n      http: {\n        requestUri: '/bots/{name}/versions',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          checksum: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          intents: {\n            shape: 'S6'\n          },\n          clarificationPrompt: {\n            shape: 'Sa'\n          },\n          abortStatement: {\n            shape: 'Si'\n          },\n          status: {},\n          failureReason: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          idleSessionTTLInSeconds: {\n            type: 'integer'\n          },\n          voiceId: {},\n          checksum: {},\n          version: {},\n          locale: {},\n          childDirected: {\n            type: 'boolean'\n          },\n          enableModelImprovements: {\n            type: 'boolean'\n          },\n          detectSentiment: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    CreateIntentVersion: {\n      http: {\n        requestUri: '/intents/{name}/versions',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          checksum: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          slots: {\n            shape: 'Sq'\n          },\n          sampleUtterances: {\n            shape: 'S13'\n          },\n          confirmationPrompt: {\n            shape: 'Sa'\n          },\n          rejectionStatement: {\n            shape: 'Si'\n          },\n          followUpPrompt: {\n            shape: 'S14'\n          },\n          conclusionStatement: {\n            shape: 'Si'\n          },\n          dialogCodeHook: {\n            shape: 'S15'\n          },\n          fulfillmentActivity: {\n            shape: 'S18'\n          },\n          parentIntentSignature: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          version: {},\n          checksum: {},\n          kendraConfiguration: {\n            shape: 'S1b'\n          },\n          inputContexts: {\n            shape: 'S1f'\n          },\n          outputContexts: {\n            shape: 'S1i'\n          }\n        }\n      }\n    },\n    CreateSlotTypeVersion: {\n      http: {\n        requestUri: '/slottypes/{name}/versions',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          checksum: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          enumerationValues: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          version: {},\n          checksum: {},\n          valueSelectionStrategy: {},\n          parentSlotTypeSignature: {},\n          slotTypeConfigurations: {\n            shape: 'S1v'\n          }\n        }\n      }\n    },\n    DeleteBot: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/bots/{name}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          }\n        }\n      }\n    },\n    DeleteBotAlias: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/bots/{botName}/aliases/{name}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'botName'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          }\n        }\n      }\n    },\n    DeleteBotChannelAssociation: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/bots/{botName}/aliases/{aliasName}/channels/{name}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'botName',\n          'botAlias'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          botAlias: {\n            location: 'uri',\n            locationName: 'aliasName'\n          }\n        }\n      }\n    },\n    DeleteBotVersion: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/bots/{name}/versions/{version}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'version'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          version: {\n            location: 'uri',\n            locationName: 'version'\n          }\n        }\n      }\n    },\n    DeleteIntent: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/intents/{name}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          }\n        }\n      }\n    },\n    DeleteIntentVersion: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/intents/{name}/versions/{version}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'version'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          version: {\n            location: 'uri',\n            locationName: 'version'\n          }\n        }\n      }\n    },\n    DeleteSlotType: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/slottypes/{name}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          }\n        }\n      }\n    },\n    DeleteSlotTypeVersion: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/slottypes/{name}/version/{version}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'version'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          version: {\n            location: 'uri',\n            locationName: 'version'\n          }\n        }\n      }\n    },\n    DeleteUtterances: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/bots/{botName}/utterances/{userId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botName',\n          'userId'\n        ],\n        members: {\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          userId: {\n            location: 'uri',\n            locationName: 'userId'\n          }\n        }\n      }\n    },\n    GetBot: {\n      http: {\n        method: 'GET',\n        requestUri: '/bots/{name}/versions/{versionoralias}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'versionOrAlias'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          versionOrAlias: {\n            location: 'uri',\n            locationName: 'versionoralias'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          intents: {\n            shape: 'S6'\n          },\n          enableModelImprovements: {\n            type: 'boolean'\n          },\n          nluIntentConfidenceThreshold: {\n            type: 'double'\n          },\n          clarificationPrompt: {\n            shape: 'Sa'\n          },\n          abortStatement: {\n            shape: 'Si'\n          },\n          status: {},\n          failureReason: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          idleSessionTTLInSeconds: {\n            type: 'integer'\n          },\n          voiceId: {},\n          checksum: {},\n          version: {},\n          locale: {},\n          childDirected: {\n            type: 'boolean'\n          },\n          detectSentiment: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    GetBotAlias: {\n      http: {\n        method: 'GET',\n        requestUri: '/bots/{botName}/aliases/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'botName'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          botVersion: {},\n          botName: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          checksum: {},\n          conversationLogs: {\n            shape: 'S2h'\n          }\n        }\n      }\n    },\n    GetBotAliases: {\n      http: {\n        method: 'GET',\n        requestUri: '/bots/{botName}/aliases/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botName'\n        ],\n        members: {\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nameContains: {\n            location: 'querystring',\n            locationName: 'nameContains'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BotAliases: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                description: {},\n                botVersion: {},\n                botName: {},\n                lastUpdatedDate: {\n                  type: 'timestamp'\n                },\n                createdDate: {\n                  type: 'timestamp'\n                },\n                checksum: {},\n                conversationLogs: {\n                  shape: 'S2h'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetBotChannelAssociation: {\n      http: {\n        method: 'GET',\n        requestUri: '/bots/{botName}/aliases/{aliasName}/channels/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'botName',\n          'botAlias'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          botAlias: {\n            location: 'uri',\n            locationName: 'aliasName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          botAlias: {},\n          botName: {},\n          createdDate: {\n            type: 'timestamp'\n          },\n          type: {},\n          botConfiguration: {\n            shape: 'S2z'\n          },\n          status: {},\n          failureReason: {}\n        }\n      }\n    },\n    GetBotChannelAssociations: {\n      http: {\n        method: 'GET',\n        requestUri: '/bots/{botName}/aliases/{aliasName}/channels/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botName',\n          'botAlias'\n        ],\n        members: {\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          botAlias: {\n            location: 'uri',\n            locationName: 'aliasName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nameContains: {\n            location: 'querystring',\n            locationName: 'nameContains'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          botChannelAssociations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                description: {},\n                botAlias: {},\n                botName: {},\n                createdDate: {\n                  type: 'timestamp'\n                },\n                type: {},\n                botConfiguration: {\n                  shape: 'S2z'\n                },\n                status: {},\n                failureReason: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetBotVersions: {\n      http: {\n        method: 'GET',\n        requestUri: '/bots/{name}/versions/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          bots: {\n            shape: 'S38'\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetBots: {\n      http: {\n        method: 'GET',\n        requestUri: '/bots/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nameContains: {\n            location: 'querystring',\n            locationName: 'nameContains'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          bots: {\n            shape: 'S38'\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetBuiltinIntent: {\n      http: {\n        method: 'GET',\n        requestUri: '/builtins/intents/{signature}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'signature'\n        ],\n        members: {\n          signature: {\n            location: 'uri',\n            locationName: 'signature'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          signature: {},\n          supportedLocales: {\n            shape: 'S3e'\n          },\n          slots: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    GetBuiltinIntents: {\n      http: {\n        method: 'GET',\n        requestUri: '/builtins/intents/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          locale: {\n            location: 'querystring',\n            locationName: 'locale'\n          },\n          signatureContains: {\n            location: 'querystring',\n            locationName: 'signatureContains'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          intents: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                signature: {},\n                supportedLocales: {\n                  shape: 'S3e'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetBuiltinSlotTypes: {\n      http: {\n        method: 'GET',\n        requestUri: '/builtins/slottypes/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          locale: {\n            location: 'querystring',\n            locationName: 'locale'\n          },\n          signatureContains: {\n            location: 'querystring',\n            locationName: 'signatureContains'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          slotTypes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                signature: {},\n                supportedLocales: {\n                  shape: 'S3e'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetExport: {\n      http: {\n        method: 'GET',\n        requestUri: '/exports/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'version',\n          'resourceType',\n          'exportType'\n        ],\n        members: {\n          name: {\n            location: 'querystring',\n            locationName: 'name'\n          },\n          version: {\n            location: 'querystring',\n            locationName: 'version'\n          },\n          resourceType: {\n            location: 'querystring',\n            locationName: 'resourceType'\n          },\n          exportType: {\n            location: 'querystring',\n            locationName: 'exportType'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          version: {},\n          resourceType: {},\n          exportType: {},\n          exportStatus: {},\n          failureReason: {},\n          url: {}\n        }\n      }\n    },\n    GetImport: {\n      http: {\n        method: 'GET',\n        requestUri: '/imports/{importId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'importId'\n        ],\n        members: {\n          importId: {\n            location: 'uri',\n            locationName: 'importId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          resourceType: {},\n          mergeStrategy: {},\n          importId: {},\n          importStatus: {},\n          failureReason: {\n            type: 'list',\n            member: {}\n          },\n          createdDate: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetIntent: {\n      http: {\n        method: 'GET',\n        requestUri: '/intents/{name}/versions/{version}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'version'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          version: {\n            location: 'uri',\n            locationName: 'version'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          slots: {\n            shape: 'Sq'\n          },\n          sampleUtterances: {\n            shape: 'S13'\n          },\n          confirmationPrompt: {\n            shape: 'Sa'\n          },\n          rejectionStatement: {\n            shape: 'Si'\n          },\n          followUpPrompt: {\n            shape: 'S14'\n          },\n          conclusionStatement: {\n            shape: 'Si'\n          },\n          dialogCodeHook: {\n            shape: 'S15'\n          },\n          fulfillmentActivity: {\n            shape: 'S18'\n          },\n          parentIntentSignature: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          version: {},\n          checksum: {},\n          kendraConfiguration: {\n            shape: 'S1b'\n          },\n          inputContexts: {\n            shape: 'S1f'\n          },\n          outputContexts: {\n            shape: 'S1i'\n          }\n        }\n      }\n    },\n    GetIntentVersions: {\n      http: {\n        method: 'GET',\n        requestUri: '/intents/{name}/versions/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          intents: {\n            shape: 'S45'\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetIntents: {\n      http: {\n        method: 'GET',\n        requestUri: '/intents/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nameContains: {\n            location: 'querystring',\n            locationName: 'nameContains'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          intents: {\n            shape: 'S45'\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetMigration: {\n      http: {\n        method: 'GET',\n        requestUri: '/migrations/{migrationId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'migrationId'\n        ],\n        members: {\n          migrationId: {\n            location: 'uri',\n            locationName: 'migrationId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          migrationId: {},\n          v1BotName: {},\n          v1BotVersion: {},\n          v1BotLocale: {},\n          v2BotId: {},\n          v2BotRole: {},\n          migrationStatus: {},\n          migrationStrategy: {},\n          migrationTimestamp: {\n            type: 'timestamp'\n          },\n          alerts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                type: {},\n                message: {},\n                details: {\n                  type: 'list',\n                  member: {}\n                },\n                referenceURLs: {\n                  type: 'list',\n                  member: {}\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    GetMigrations: {\n      http: {\n        method: 'GET',\n        requestUri: '/migrations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          sortByAttribute: {\n            location: 'querystring',\n            locationName: 'sortByAttribute'\n          },\n          sortByOrder: {\n            location: 'querystring',\n            locationName: 'sortByOrder'\n          },\n          v1BotNameContains: {\n            location: 'querystring',\n            locationName: 'v1BotNameContains'\n          },\n          migrationStatusEquals: {\n            location: 'querystring',\n            locationName: 'migrationStatusEquals'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          migrationSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                migrationId: {},\n                v1BotName: {},\n                v1BotVersion: {},\n                v1BotLocale: {},\n                v2BotId: {},\n                v2BotRole: {},\n                migrationStatus: {},\n                migrationStrategy: {},\n                migrationTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetSlotType: {\n      http: {\n        method: 'GET',\n        requestUri: '/slottypes/{name}/versions/{version}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'version'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          version: {\n            location: 'uri',\n            locationName: 'version'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          enumerationValues: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          version: {},\n          checksum: {},\n          valueSelectionStrategy: {},\n          parentSlotTypeSignature: {},\n          slotTypeConfigurations: {\n            shape: 'S1v'\n          }\n        }\n      }\n    },\n    GetSlotTypeVersions: {\n      http: {\n        method: 'GET',\n        requestUri: '/slottypes/{name}/versions/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          slotTypes: {\n            shape: 'S4x'\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetSlotTypes: {\n      http: {\n        method: 'GET',\n        requestUri: '/slottypes/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nameContains: {\n            location: 'querystring',\n            locationName: 'nameContains'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          slotTypes: {\n            shape: 'S4x'\n          },\n          nextToken: {}\n        }\n      }\n    },\n    GetUtterancesView: {\n      http: {\n        method: 'GET',\n        requestUri: '/bots/{botname}/utterances?view=aggregation',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'botName',\n          'botVersions',\n          'statusType'\n        ],\n        members: {\n          botName: {\n            location: 'uri',\n            locationName: 'botname'\n          },\n          botVersions: {\n            location: 'querystring',\n            locationName: 'bot_versions',\n            type: 'list',\n            member: {}\n          },\n          statusType: {\n            location: 'querystring',\n            locationName: 'status_type'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          botName: {},\n          utterances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                botVersion: {},\n                utterances: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      utteranceString: {},\n                      count: {\n                        type: 'integer'\n                      },\n                      distinctUsers: {\n                        type: 'integer'\n                      },\n                      firstUtteredDate: {\n                        type: 'timestamp'\n                      },\n                      lastUtteredDate: {\n                        type: 'timestamp'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S5e'\n          }\n        }\n      }\n    },\n    PutBot: {\n      http: {\n        method: 'PUT',\n        requestUri: '/bots/{name}/versions/$LATEST',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'locale',\n          'childDirected'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          description: {},\n          intents: {\n            shape: 'S6'\n          },\n          enableModelImprovements: {\n            type: 'boolean'\n          },\n          nluIntentConfidenceThreshold: {\n            type: 'double'\n          },\n          clarificationPrompt: {\n            shape: 'Sa'\n          },\n          abortStatement: {\n            shape: 'Si'\n          },\n          idleSessionTTLInSeconds: {\n            type: 'integer'\n          },\n          voiceId: {},\n          checksum: {},\n          processBehavior: {},\n          locale: {},\n          childDirected: {\n            type: 'boolean'\n          },\n          detectSentiment: {\n            type: 'boolean'\n          },\n          createVersion: {\n            type: 'boolean'\n          },\n          tags: {\n            shape: 'S5e'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          intents: {\n            shape: 'S6'\n          },\n          enableModelImprovements: {\n            type: 'boolean'\n          },\n          nluIntentConfidenceThreshold: {\n            type: 'double'\n          },\n          clarificationPrompt: {\n            shape: 'Sa'\n          },\n          abortStatement: {\n            shape: 'Si'\n          },\n          status: {},\n          failureReason: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          idleSessionTTLInSeconds: {\n            type: 'integer'\n          },\n          voiceId: {},\n          checksum: {},\n          version: {},\n          locale: {},\n          childDirected: {\n            type: 'boolean'\n          },\n          createVersion: {\n            type: 'boolean'\n          },\n          detectSentiment: {\n            type: 'boolean'\n          },\n          tags: {\n            shape: 'S5e'\n          }\n        }\n      }\n    },\n    PutBotAlias: {\n      http: {\n        method: 'PUT',\n        requestUri: '/bots/{botName}/aliases/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'botVersion',\n          'botName'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          description: {},\n          botVersion: {},\n          botName: {\n            location: 'uri',\n            locationName: 'botName'\n          },\n          checksum: {},\n          conversationLogs: {\n            type: 'structure',\n            required: [\n              'logSettings',\n              'iamRoleArn'\n            ],\n            members: {\n              logSettings: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'logType',\n                    'destination',\n                    'resourceArn'\n                  ],\n                  members: {\n                    logType: {},\n                    destination: {},\n                    kmsKeyArn: {},\n                    resourceArn: {}\n                  }\n                }\n              },\n              iamRoleArn: {}\n            }\n          },\n          tags: {\n            shape: 'S5e'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          botVersion: {},\n          botName: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          checksum: {},\n          conversationLogs: {\n            shape: 'S2h'\n          },\n          tags: {\n            shape: 'S5e'\n          }\n        }\n      }\n    },\n    PutIntent: {\n      http: {\n        method: 'PUT',\n        requestUri: '/intents/{name}/versions/$LATEST',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          description: {},\n          slots: {\n            shape: 'Sq'\n          },\n          sampleUtterances: {\n            shape: 'S13'\n          },\n          confirmationPrompt: {\n            shape: 'Sa'\n          },\n          rejectionStatement: {\n            shape: 'Si'\n          },\n          followUpPrompt: {\n            shape: 'S14'\n          },\n          conclusionStatement: {\n            shape: 'Si'\n          },\n          dialogCodeHook: {\n            shape: 'S15'\n          },\n          fulfillmentActivity: {\n            shape: 'S18'\n          },\n          parentIntentSignature: {},\n          checksum: {},\n          createVersion: {\n            type: 'boolean'\n          },\n          kendraConfiguration: {\n            shape: 'S1b'\n          },\n          inputContexts: {\n            shape: 'S1f'\n          },\n          outputContexts: {\n            shape: 'S1i'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          slots: {\n            shape: 'Sq'\n          },\n          sampleUtterances: {\n            shape: 'S13'\n          },\n          confirmationPrompt: {\n            shape: 'Sa'\n          },\n          rejectionStatement: {\n            shape: 'Si'\n          },\n          followUpPrompt: {\n            shape: 'S14'\n          },\n          conclusionStatement: {\n            shape: 'Si'\n          },\n          dialogCodeHook: {\n            shape: 'S15'\n          },\n          fulfillmentActivity: {\n            shape: 'S18'\n          },\n          parentIntentSignature: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          version: {},\n          checksum: {},\n          createVersion: {\n            type: 'boolean'\n          },\n          kendraConfiguration: {\n            shape: 'S1b'\n          },\n          inputContexts: {\n            shape: 'S1f'\n          },\n          outputContexts: {\n            shape: 'S1i'\n          }\n        }\n      }\n    },\n    PutSlotType: {\n      http: {\n        method: 'PUT',\n        requestUri: '/slottypes/{name}/versions/$LATEST',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          description: {},\n          enumerationValues: {\n            shape: 'S1q'\n          },\n          checksum: {},\n          valueSelectionStrategy: {},\n          createVersion: {\n            type: 'boolean'\n          },\n          parentSlotTypeSignature: {},\n          slotTypeConfigurations: {\n            shape: 'S1v'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          enumerationValues: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          version: {},\n          checksum: {},\n          valueSelectionStrategy: {},\n          createVersion: {\n            type: 'boolean'\n          },\n          parentSlotTypeSignature: {},\n          slotTypeConfigurations: {\n            shape: 'S1v'\n          }\n        }\n      }\n    },\n    StartImport: {\n      http: {\n        requestUri: '/imports/',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'payload',\n          'resourceType',\n          'mergeStrategy'\n        ],\n        members: {\n          payload: {\n            type: 'blob'\n          },\n          resourceType: {},\n          mergeStrategy: {},\n          tags: {\n            shape: 'S5e'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          resourceType: {},\n          mergeStrategy: {},\n          importId: {},\n          importStatus: {},\n          tags: {\n            shape: 'S5e'\n          },\n          createdDate: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    StartMigration: {\n      http: {\n        requestUri: '/migrations',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'v1BotName',\n          'v1BotVersion',\n          'v2BotName',\n          'v2BotRole',\n          'migrationStrategy'\n        ],\n        members: {\n          v1BotName: {},\n          v1BotVersion: {},\n          v2BotName: {},\n          v2BotRole: {},\n          migrationStrategy: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          v1BotName: {},\n          v1BotVersion: {},\n          v1BotLocale: {},\n          v2BotId: {},\n          v2BotRole: {},\n          migrationId: {},\n          migrationStrategy: {},\n          migrationTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S5e'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    }\n  },\n  shapes: {\n    S6: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'intentName',\n          'intentVersion'\n        ],\n        members: {\n          intentName: {},\n          intentVersion: {}\n        }\n      }\n    },\n    Sa: {\n      type: 'structure',\n      required: [\n        'messages',\n        'maxAttempts'\n      ],\n      members: {\n        messages: {\n          shape: 'Sb'\n        },\n        maxAttempts: {\n          type: 'integer'\n        },\n        responseCard: {}\n      }\n    },\n    Sb: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'contentType',\n          'content'\n        ],\n        members: {\n          contentType: {},\n          content: {},\n          groupNumber: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    Si: {\n      type: 'structure',\n      required: [\n        'messages'\n      ],\n      members: {\n        messages: {\n          shape: 'Sb'\n        },\n        responseCard: {}\n      }\n    },\n    Sq: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name',\n          'slotConstraint'\n        ],\n        members: {\n          name: {},\n          description: {},\n          slotConstraint: {},\n          slotType: {},\n          slotTypeVersion: {},\n          valueElicitationPrompt: {\n            shape: 'Sa'\n          },\n          priority: {\n            type: 'integer'\n          },\n          sampleUtterances: {\n            type: 'list',\n            member: {}\n          },\n          responseCard: {},\n          obfuscationSetting: {},\n          defaultValueSpec: {\n            type: 'structure',\n            required: [\n              'defaultValueList'\n            ],\n            members: {\n              defaultValueList: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'defaultValue'\n                  ],\n                  members: {\n                    defaultValue: {}\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S13: {\n      type: 'list',\n      member: {}\n    },\n    S14: {\n      type: 'structure',\n      required: [\n        'prompt',\n        'rejectionStatement'\n      ],\n      members: {\n        prompt: {\n          shape: 'Sa'\n        },\n        rejectionStatement: {\n          shape: 'Si'\n        }\n      }\n    },\n    S15: {\n      type: 'structure',\n      required: [\n        'uri',\n        'messageVersion'\n      ],\n      members: {\n        uri: {},\n        messageVersion: {}\n      }\n    },\n    S18: {\n      type: 'structure',\n      required: [\n        'type'\n      ],\n      members: {\n        type: {},\n        codeHook: {\n          shape: 'S15'\n        }\n      }\n    },\n    S1b: {\n      type: 'structure',\n      required: [\n        'kendraIndex',\n        'role'\n      ],\n      members: {\n        kendraIndex: {},\n        queryFilterString: {},\n        role: {}\n      }\n    },\n    S1f: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {}\n        }\n      }\n    },\n    S1i: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name',\n          'timeToLiveInSeconds',\n          'turnsToLive'\n        ],\n        members: {\n          name: {},\n          timeToLiveInSeconds: {\n            type: 'integer'\n          },\n          turnsToLive: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    S1q: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'value'\n        ],\n        members: {\n          value: {},\n          synonyms: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    S1v: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          regexConfiguration: {\n            type: 'structure',\n            required: [\n              'pattern'\n            ],\n            members: {\n              pattern: {}\n            }\n          }\n        }\n      }\n    },\n    S2h: {\n      type: 'structure',\n      members: {\n        logSettings: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              logType: {},\n              destination: {},\n              kmsKeyArn: {},\n              resourceArn: {},\n              resourcePrefix: {}\n            }\n          }\n        },\n        iamRoleArn: {}\n      }\n    },\n    S2z: {\n      type: 'map',\n      key: {},\n      value: {},\n      sensitive: true\n    },\n    S38: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          status: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          version: {}\n        }\n      }\n    },\n    S3e: {\n      type: 'list',\n      member: {}\n    },\n    S45: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          version: {}\n        }\n      }\n    },\n    S4x: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          name: {},\n          description: {},\n          lastUpdatedDate: {\n            type: 'timestamp'\n          },\n          createdDate: {\n            type: 'timestamp'\n          },\n          version: {}\n        }\n      }\n    },\n    S5e: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'key',\n          'value'\n        ],\n        members: {\n          key: {},\n          value: {}\n        }\n      }\n    }\n  }\n}"]}