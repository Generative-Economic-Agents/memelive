{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_baseOrderBy.js"],"names":["baseOrderBy","collection","iteratees","orders","length","arrayMap","iteratee","isArray","value","baseGet","identity","index","baseUnary","baseIteratee","result","baseMap","key","criteria","baseSortBy","object","other","compareMultiple"],"mappings":";;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,WAAT,CAAqBC,UAArB,EAAiCC,SAAjC,EAA4CC,MAA5C,EAAoD;AAClD,QAAID,SAAS,CAACE,MAAd,EAAsB;AACpBF,MAAAA,SAAS,GAAGG,QAAQ,CAACH,SAAD,EAAY,UAASI,QAAT,EAAmB;AACjD,YAAIC,OAAO,CAACD,QAAD,CAAX,EAAuB;AACrB,iBAAO,UAASE,KAAT,EAAgB;AACrB,mBAAOC,OAAO,CAACD,KAAD,EAAQF,QAAQ,CAACF,MAAT,KAAoB,CAApB,GAAwBE,QAAQ,CAAC,CAAD,CAAhC,GAAsCA,QAA9C,CAAd;AACD,WAFD;AAGD;;AACD,eAAOA,QAAP;AACD,OAPmB,CAApB;AAQD,KATD,MASO;AACLJ,MAAAA,SAAS,GAAG,CAACQ,QAAD,CAAZ;AACD;;AAED,QAAIC,KAAK,GAAG,CAAC,CAAb;AACAT,IAAAA,SAAS,GAAGG,QAAQ,CAACH,SAAD,EAAYU,SAAS,CAACC,YAAD,CAArB,CAApB;AAEA,QAAIC,MAAM,GAAGC,OAAO,CAACd,UAAD,EAAa,UAASO,KAAT,EAAgBQ,GAAhB,EAAqBf,UAArB,EAAiC;AAChE,UAAIgB,QAAQ,GAAGZ,QAAQ,CAACH,SAAD,EAAY,UAASI,QAAT,EAAmB;AACpD,eAAOA,QAAQ,CAACE,KAAD,CAAf;AACD,OAFsB,CAAvB;AAGA,aAAO;AAAE,oBAAYS,QAAd;AAAwB,iBAAS,EAAEN,KAAnC;AAA0C,iBAASH;AAAnD,OAAP;AACD,KALmB,CAApB;AAOA,WAAOU,UAAU,CAACJ,MAAD,EAAS,UAASK,MAAT,EAAiBC,KAAjB,EAAwB;AAChD,aAAOC,eAAe,CAACF,MAAD,EAASC,KAAT,EAAgBjB,MAAhB,CAAtB;AACD,KAFgB,CAAjB;AAGD;;;;AA9CME,MAAAA,Q;;AACAI,MAAAA,O;;AACAI,MAAAA,Y;;AACAE,MAAAA,O;;AACAG,MAAAA,U;;AACAN,MAAAA,S;;AACAS,MAAAA,e;;AACAX,MAAAA,Q;;AACAH,MAAAA,O;;;yBAwCQP,W","sourcesContent":["import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n"]}