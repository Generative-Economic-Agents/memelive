{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_baseIsNative.js"],"names":["baseIsNative","value","isObject","isMasked","pattern","isFunction","reIsNative","reIsHostCtor","test","toSource","reRegExpChar","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","RegExp","call","replace"],"mappings":";;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAI,CAACC,QAAQ,CAACD,KAAD,CAAT,IAAoBE,QAAQ,CAACF,KAAD,CAAhC,EAAyC;AACvC,aAAO,KAAP;AACD;;AACD,QAAIG,OAAO,GAAGC,UAAU,CAACJ,KAAD,CAAV,GAAoBK,UAApB,GAAiCC,YAA/C;AACA,WAAOH,OAAO,CAACI,IAAR,CAAaC,QAAQ,CAACR,KAAD,CAArB,CAAP;AACD;;;;AA5CMI,MAAAA,U;;AACAF,MAAAA,Q;;AACAD,MAAAA,Q;;AACAO,MAAAA,Q;;;AAEP;AACA;AACA;AACA;AACIC,MAAAA,Y,GAAe,qB;AAEnB;;AACIH,MAAAA,Y,GAAe,6B;AAEnB;;AACII,MAAAA,S,GAAYC,QAAQ,CAACC,S;AACrBC,MAAAA,W,GAAcC,MAAM,CAACF,S;AAEzB;;AACIG,MAAAA,Y,GAAeL,SAAS,CAACM,Q;AAE7B;;AACIC,MAAAA,c,GAAiBJ,WAAW,CAACI,c;AAEjC;;AACIZ,MAAAA,U,GAAaa,MAAM,CAAC,MACtBH,YAAY,CAACI,IAAb,CAAkBF,cAAlB,EAAkCG,OAAlC,CAA0CX,YAA1C,EAAwD,MAAxD,EACCW,OADD,CACS,wDADT,EACmE,OADnE,CADsB,GAEwD,GAFzD,C;;yBAqBRrB,Y","sourcesContent":["import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n"]}