{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/signers/request_signer.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","_req5","_req6","url","define","exports","require","module","__filename","__dirname","AWS","inherit","util","Signers","RequestSigner","constructor","request","setServiceClientId","id","serviceClientId","getServiceClientId","getVersion","version","V2","V3","V4","S3","V3Https","Bearer","Error","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;AACgBE,MAAAA,K,iBAAhBF,Y;;AACgBG,MAAAA,K,iBAAhBH,Y;;AACgBI,MAAAA,K,iBAAhBJ,Y;;AACgBK,MAAAA,K,iBAAhBL,Y;;AACgBM,MAAAA,K,iBAAhBN,Y;;AACgBO,MAAAA,K,iBAAhBP,Y;;;8BAEHA,Y,GAAe,cAAYQ,G;;AACjCV,MAAAA,UAAU,CAACW,MAAX,CAAkBT,YAAlB,EAAgC,UAAUU,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,GAAG,GAAGJ,OAAO,CAAC,SAAD,CAAjB;;AAEA,YAAIK,OAAO,GAAGD,GAAG,CAACE,IAAJ,CAASD,OAAvB;AAEA;AACD;AACA;;AACCD,QAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA4BH,OAAO,CAAC;AAClCI,UAAAA,WAAW,EAAE,SAASD,aAAT,CAAuBE,OAAvB,EAAgC;AAC3C,iBAAKA,OAAL,GAAeA,OAAf;AACD,WAHiC;AAKlCC,UAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BC,EAA5B,EAAgC;AAClD,iBAAKC,eAAL,GAAuBD,EAAvB;AACD,WAPiC;AASlCE,UAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,mBAAO,KAAKD,eAAZ;AACD;AAXiC,SAAD,CAAnC;;AAcAT,QAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,CAA0BO,UAA1B,GAAuC,SAASA,UAAT,CAAoBC,OAApB,EAA6B;AAClE,kBAAQA,OAAR;AACE,iBAAK,IAAL;AAAW,qBAAOZ,GAAG,CAACG,OAAJ,CAAYU,EAAnB;;AACX,iBAAK,IAAL;AAAW,qBAAOb,GAAG,CAACG,OAAJ,CAAYW,EAAnB;;AACX,iBAAK,MAAL;AAAa,qBAAOd,GAAG,CAACG,OAAJ,CAAYY,EAAnB;;AACb,iBAAK,IAAL;AAAW,qBAAOf,GAAG,CAACG,OAAJ,CAAYY,EAAnB;;AACX,iBAAK,IAAL;AAAW,qBAAOf,GAAG,CAACG,OAAJ,CAAYa,EAAnB;;AACX,iBAAK,SAAL;AAAgB,qBAAOhB,GAAG,CAACG,OAAJ,CAAYc,OAAnB;;AAChB,iBAAK,QAAL;AAAe,qBAAOjB,GAAG,CAACG,OAAJ,CAAYe,MAAnB;AAPjB;;AASA,gBAAM,IAAIC,KAAJ,CAAU,6BAA6BP,OAAvC,CAAN;AACD,SAXD;;AAaAhB,QAAAA,OAAO,CAAC,MAAD,CAAP;;AACAA,QAAAA,OAAO,CAAC,MAAD,CAAP;;AACAA,QAAAA,OAAO,CAAC,WAAD,CAAP;;AACAA,QAAAA,OAAO,CAAC,MAAD,CAAP;;AACAA,QAAAA,OAAO,CAAC,MAAD,CAAP;;AACAA,QAAAA,OAAO,CAAC,WAAD,CAAP;;AACAA,QAAAA,OAAO,CAAC,UAAD,CAAP,CA5C0F,CA+C3F;;;AAEA,2BAAAwB,WAAW,GAAGvB,MAAM,CAACF,OAArB;AAGC,OApDD,EAoDG,OAAO;AACR,mBAAWX,IADH;AAER,gBAAQE,KAFA;AAGR,gBAAQC,KAHA;AAIR,qBAAaC,KAJL;AAKR,gBAAQC,KALA;AAMR,gBAAQC,KANA;AAOR,qBAAaC,KAPL;AAQR,oBAAYC;AARJ,OAAP,CApDH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nimport { __cjsMetaURL as _req0} from './v2';\nimport { __cjsMetaURL as _req1} from './v3';\nimport { __cjsMetaURL as _req2} from './v3https';\nimport { __cjsMetaURL as _req3} from './v4';\nimport { __cjsMetaURL as _req4} from './s3';\nimport { __cjsMetaURL as _req5} from './presign';\nimport { __cjsMetaURL as _req6} from './bearer';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n\n var inherit = AWS.util.inherit;\n\n /**\n  * @api private\n  */\n AWS.Signers.RequestSigner = inherit({\n   constructor: function RequestSigner(request) {\n     this.request = request;\n   },\n\n   setServiceClientId: function setServiceClientId(id) {\n     this.serviceClientId = id;\n   },\n\n   getServiceClientId: function getServiceClientId() {\n     return this.serviceClientId;\n   }\n });\n\n AWS.Signers.RequestSigner.getVersion = function getVersion(version) {\n   switch (version) {\n     case 'v2': return AWS.Signers.V2;\n     case 'v3': return AWS.Signers.V3;\n     case 's3v4': return AWS.Signers.V4;\n     case 'v4': return AWS.Signers.V4;\n     case 's3': return AWS.Signers.S3;\n     case 'v3https': return AWS.Signers.V3Https;\n     case 'bearer': return AWS.Signers.Bearer;\n   }\n   throw new Error('Unknown signing version ' + version);\n };\n\n require('./v2');\n require('./v3');\n require('./v3https');\n require('./v4');\n require('./s3');\n require('./presign');\n require('./bearer');\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n  './v2': _req0,\n  './v3': _req1,\n  './v3https': _req2,\n  './v4': _req3,\n  './s3': _req4,\n  './presign': _req5,\n  './bearer': _req6,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}