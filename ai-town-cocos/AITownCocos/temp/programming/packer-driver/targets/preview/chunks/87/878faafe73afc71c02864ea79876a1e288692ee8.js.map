{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/verifiedpermissions-2021-12-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","BatchIsAuthorized","input","type","required","members","policyStoreId","entities","shape","requests","member","output","results","request","decision","determiningPolicies","errors","BatchIsAuthorizedWithToken","identityToken","accessToken","principal","CreateIdentitySource","clientToken","idempotencyToken","configuration","cognitoUserPoolConfiguration","userPoolArn","clientIds","groupConfiguration","groupEntityType","openIdConnectConfiguration","issuer","entityIdPrefix","groupClaim","tokenSelection","accessTokenOnly","principalIdClaim","audiences","identityTokenOnly","union","principalEntityType","createdDate","identitySourceId","lastUpdatedDate","idempotent","CreatePolicy","definition","description","statement","templateLinked","policyTemplateId","resource","policyId","policyType","actions","effect","CreatePolicyStore","validationSettings","arn","CreatePolicyTemplate","DeleteIdentitySource","DeletePolicy","DeletePolicyStore","DeletePolicyTemplate","GetIdentitySource","details","deprecated","deprecatedMessage","discoveryUrl","openIdIssuer","GetPolicy","GetPolicyStore","GetPolicyTemplate","GetSchema","schema","namespaces","IsAuthorized","action","context","IsAuthorizedWithToken","ListIdentitySources","nextToken","maxResults","filters","identitySources","ListPolicies","filter","policies","ListPolicyStores","policyStores","ListPolicyTemplates","policyTemplates","PutSchema","cedarJson","UpdateIdentitySource","updateConfiguration","UpdatePolicy","UpdatePolicyStore","UpdatePolicyTemplate","shapes","S3","entityList","identifier","attributes","key","value","parents","S6","entityType","sensitive","entityId","Sb","entityIdentifier","string","set","record","Sj","Sk","actionType","actionId","Sn","contextMap","St","Sw","errorDescription","Sz","S11","S1a","S1d","S1g","S1i","S1l","S1o","S1q","timestampFormat","S1v","S1w","S21","S24","mode","S26","S2a","S38","S39","S3z","unspecified"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-12-01',\n    endpointPrefix: 'verifiedpermissions',\n    jsonVersion: '1.0',\n    protocol: 'json',\n    protocols: [\n      'json'\n    ],\n    serviceFullName: 'Amazon Verified Permissions',\n    serviceId: 'VerifiedPermissions',\n    signatureVersion: 'v4',\n    signingName: 'verifiedpermissions',\n    targetPrefix: 'VerifiedPermissions',\n    uid: 'verifiedpermissions-2021-12-01'\n  },\n  operations: {\n    BatchIsAuthorized: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'requests'\n        ],\n        members: {\n          policyStoreId: {},\n          entities: {\n            shape: 'S3'\n          },\n          requests: {\n            type: 'list',\n            member: {\n              shape: 'Sj'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'results'\n        ],\n        members: {\n          results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'request',\n                'decision',\n                'determiningPolicies',\n                'errors'\n              ],\n              members: {\n                request: {\n                  shape: 'Sj'\n                },\n                decision: {},\n                determiningPolicies: {\n                  shape: 'St'\n                },\n                errors: {\n                  shape: 'Sw'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    BatchIsAuthorizedWithToken: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'requests'\n        ],\n        members: {\n          policyStoreId: {},\n          identityToken: {\n            shape: 'Sz'\n          },\n          accessToken: {\n            shape: 'Sz'\n          },\n          entities: {\n            shape: 'S3'\n          },\n          requests: {\n            type: 'list',\n            member: {\n              shape: 'S11'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'results'\n        ],\n        members: {\n          principal: {\n            shape: 'S6'\n          },\n          results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'request',\n                'decision',\n                'determiningPolicies',\n                'errors'\n              ],\n              members: {\n                request: {\n                  shape: 'S11'\n                },\n                decision: {},\n                determiningPolicies: {\n                  shape: 'St'\n                },\n                errors: {\n                  shape: 'Sw'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    CreateIdentitySource: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'configuration'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          policyStoreId: {},\n          configuration: {\n            type: 'structure',\n            members: {\n              cognitoUserPoolConfiguration: {\n                type: 'structure',\n                required: [\n                  'userPoolArn'\n                ],\n                members: {\n                  userPoolArn: {},\n                  clientIds: {\n                    shape: 'S1a'\n                  },\n                  groupConfiguration: {\n                    type: 'structure',\n                    required: [\n                      'groupEntityType'\n                    ],\n                    members: {\n                      groupEntityType: {\n                        shape: 'S1d'\n                      }\n                    }\n                  }\n                }\n              },\n              openIdConnectConfiguration: {\n                type: 'structure',\n                required: [\n                  'issuer',\n                  'tokenSelection'\n                ],\n                members: {\n                  issuer: {},\n                  entityIdPrefix: {\n                    shape: 'S1g'\n                  },\n                  groupConfiguration: {\n                    type: 'structure',\n                    required: [\n                      'groupClaim',\n                      'groupEntityType'\n                    ],\n                    members: {\n                      groupClaim: {\n                        shape: 'S1i'\n                      },\n                      groupEntityType: {\n                        shape: 'S1d'\n                      }\n                    }\n                  },\n                  tokenSelection: {\n                    type: 'structure',\n                    members: {\n                      accessTokenOnly: {\n                        type: 'structure',\n                        members: {\n                          principalIdClaim: {\n                            shape: 'S1i'\n                          },\n                          audiences: {\n                            shape: 'S1l'\n                          }\n                        }\n                      },\n                      identityTokenOnly: {\n                        type: 'structure',\n                        members: {\n                          principalIdClaim: {\n                            shape: 'S1i'\n                          },\n                          clientIds: {\n                            shape: 'S1a'\n                          }\n                        }\n                      }\n                    },\n                    union: true\n                  }\n                }\n              }\n            },\n            union: true\n          },\n          principalEntityType: {\n            shape: 'S1o'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'createdDate',\n          'identitySourceId',\n          'lastUpdatedDate',\n          'policyStoreId'\n        ],\n        members: {\n          createdDate: {\n            shape: 'S1q'\n          },\n          identitySourceId: {},\n          lastUpdatedDate: {\n            shape: 'S1q'\n          },\n          policyStoreId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreatePolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'definition'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          policyStoreId: {},\n          definition: {\n            type: 'structure',\n            members: {\n              'static': {\n                type: 'structure',\n                required: [\n                  'statement'\n                ],\n                members: {\n                  description: {\n                    shape: 'S1v'\n                  },\n                  statement: {\n                    shape: 'S1w'\n                  }\n                }\n              },\n              templateLinked: {\n                type: 'structure',\n                required: [\n                  'policyTemplateId'\n                ],\n                members: {\n                  policyTemplateId: {},\n                  principal: {\n                    shape: 'S6'\n                  },\n                  resource: {\n                    shape: 'S6'\n                  }\n                }\n              }\n            },\n            union: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyId',\n          'policyType',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          policyId: {},\n          policyType: {},\n          principal: {\n            shape: 'S6'\n          },\n          resource: {\n            shape: 'S6'\n          },\n          actions: {\n            shape: 'S21'\n          },\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          },\n          effect: {}\n        }\n      },\n      idempotent: true\n    },\n    CreatePolicyStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'validationSettings'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          validationSettings: {\n            shape: 'S24'\n          },\n          description: {\n            shape: 'S26'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'arn',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          arn: {},\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreatePolicyTemplate: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'statement'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          policyStoreId: {},\n          description: {\n            shape: 'S2a'\n          },\n          statement: {\n            shape: 'S1w'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyTemplateId',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          policyTemplateId: {},\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteIdentitySource: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'identitySourceId'\n        ],\n        members: {\n          policyStoreId: {},\n          identitySourceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeletePolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyId'\n        ],\n        members: {\n          policyStoreId: {},\n          policyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeletePolicyStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId'\n        ],\n        members: {\n          policyStoreId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeletePolicyTemplate: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyTemplateId'\n        ],\n        members: {\n          policyStoreId: {},\n          policyTemplateId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetIdentitySource: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'identitySourceId'\n        ],\n        members: {\n          policyStoreId: {},\n          identitySourceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'createdDate',\n          'identitySourceId',\n          'lastUpdatedDate',\n          'policyStoreId',\n          'principalEntityType'\n        ],\n        members: {\n          createdDate: {\n            shape: 'S1q'\n          },\n          details: {\n            deprecated: true,\n            deprecatedMessage: 'This shape has been replaced by ConfigurationDetail',\n            type: 'structure',\n            members: {\n              clientIds: {\n                shape: 'S1a',\n                deprecated: true,\n                deprecatedMessage: 'This attribute has been replaced by configuration.cognitoUserPoolConfiguration.clientIds'\n              },\n              userPoolArn: {\n                deprecated: true,\n                deprecatedMessage: 'This attribute has been replaced by configuration.cognitoUserPoolConfiguration.userPoolArn'\n              },\n              discoveryUrl: {\n                deprecated: true,\n                deprecatedMessage: 'This attribute has been replaced by configuration.cognitoUserPoolConfiguration.issuer'\n              },\n              openIdIssuer: {\n                deprecated: true,\n                deprecatedMessage: 'This attribute has been replaced by configuration'\n              }\n            }\n          },\n          identitySourceId: {},\n          lastUpdatedDate: {\n            shape: 'S1q'\n          },\n          policyStoreId: {},\n          principalEntityType: {\n            shape: 'S1o'\n          },\n          configuration: {\n            type: 'structure',\n            members: {\n              cognitoUserPoolConfiguration: {\n                type: 'structure',\n                required: [\n                  'userPoolArn',\n                  'clientIds',\n                  'issuer'\n                ],\n                members: {\n                  userPoolArn: {},\n                  clientIds: {\n                    shape: 'S1a'\n                  },\n                  issuer: {},\n                  groupConfiguration: {\n                    type: 'structure',\n                    members: {\n                      groupEntityType: {\n                        shape: 'S1d'\n                      }\n                    }\n                  }\n                }\n              },\n              openIdConnectConfiguration: {\n                type: 'structure',\n                required: [\n                  'issuer',\n                  'tokenSelection'\n                ],\n                members: {\n                  issuer: {},\n                  entityIdPrefix: {\n                    shape: 'S1g'\n                  },\n                  groupConfiguration: {\n                    type: 'structure',\n                    required: [\n                      'groupClaim',\n                      'groupEntityType'\n                    ],\n                    members: {\n                      groupClaim: {\n                        shape: 'S1i'\n                      },\n                      groupEntityType: {\n                        shape: 'S1d'\n                      }\n                    }\n                  },\n                  tokenSelection: {\n                    type: 'structure',\n                    members: {\n                      accessTokenOnly: {\n                        type: 'structure',\n                        members: {\n                          principalIdClaim: {\n                            shape: 'S1i'\n                          },\n                          audiences: {\n                            shape: 'S1l'\n                          }\n                        }\n                      },\n                      identityTokenOnly: {\n                        type: 'structure',\n                        members: {\n                          principalIdClaim: {\n                            shape: 'S1i'\n                          },\n                          clientIds: {\n                            shape: 'S1a'\n                          }\n                        }\n                      }\n                    },\n                    union: true\n                  }\n                }\n              }\n            },\n            union: true\n          }\n        }\n      }\n    },\n    GetPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyId'\n        ],\n        members: {\n          policyStoreId: {},\n          policyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyId',\n          'policyType',\n          'definition',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          policyId: {},\n          policyType: {},\n          principal: {\n            shape: 'S6'\n          },\n          resource: {\n            shape: 'S6'\n          },\n          actions: {\n            shape: 'S21'\n          },\n          definition: {\n            type: 'structure',\n            members: {\n              'static': {\n                type: 'structure',\n                required: [\n                  'statement'\n                ],\n                members: {\n                  description: {\n                    shape: 'S1v'\n                  },\n                  statement: {\n                    shape: 'S1w'\n                  }\n                }\n              },\n              templateLinked: {\n                type: 'structure',\n                required: [\n                  'policyTemplateId'\n                ],\n                members: {\n                  policyTemplateId: {},\n                  principal: {\n                    shape: 'S6'\n                  },\n                  resource: {\n                    shape: 'S6'\n                  }\n                }\n              }\n            },\n            union: true\n          },\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          },\n          effect: {}\n        }\n      }\n    },\n    GetPolicyStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId'\n        ],\n        members: {\n          policyStoreId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'arn',\n          'validationSettings',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          arn: {},\n          validationSettings: {\n            shape: 'S24'\n          },\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          },\n          description: {\n            shape: 'S26'\n          }\n        }\n      }\n    },\n    GetPolicyTemplate: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyTemplateId'\n        ],\n        members: {\n          policyStoreId: {},\n          policyTemplateId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyTemplateId',\n          'statement',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          policyTemplateId: {},\n          description: {\n            shape: 'S2a'\n          },\n          statement: {\n            shape: 'S1w'\n          },\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          }\n        }\n      }\n    },\n    GetSchema: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId'\n        ],\n        members: {\n          policyStoreId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'schema',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          schema: {\n            shape: 'S38'\n          },\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          },\n          namespaces: {\n            shape: 'S39'\n          }\n        }\n      }\n    },\n    IsAuthorized: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId'\n        ],\n        members: {\n          policyStoreId: {},\n          principal: {\n            shape: 'S6'\n          },\n          action: {\n            shape: 'Sk'\n          },\n          resource: {\n            shape: 'S6'\n          },\n          context: {\n            shape: 'Sn'\n          },\n          entities: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'decision',\n          'determiningPolicies',\n          'errors'\n        ],\n        members: {\n          decision: {},\n          determiningPolicies: {\n            shape: 'St'\n          },\n          errors: {\n            shape: 'Sw'\n          }\n        }\n      }\n    },\n    IsAuthorizedWithToken: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId'\n        ],\n        members: {\n          policyStoreId: {},\n          identityToken: {\n            shape: 'Sz'\n          },\n          accessToken: {\n            shape: 'Sz'\n          },\n          action: {\n            shape: 'Sk'\n          },\n          resource: {\n            shape: 'S6'\n          },\n          context: {\n            shape: 'Sn'\n          },\n          entities: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'decision',\n          'determiningPolicies',\n          'errors'\n        ],\n        members: {\n          decision: {},\n          determiningPolicies: {\n            shape: 'St'\n          },\n          errors: {\n            shape: 'Sw'\n          },\n          principal: {\n            shape: 'S6'\n          }\n        }\n      }\n    },\n    ListIdentitySources: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId'\n        ],\n        members: {\n          policyStoreId: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          },\n          filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                principalEntityType: {\n                  shape: 'S1o'\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'identitySources'\n        ],\n        members: {\n          nextToken: {},\n          identitySources: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'createdDate',\n                'identitySourceId',\n                'lastUpdatedDate',\n                'policyStoreId',\n                'principalEntityType'\n              ],\n              members: {\n                createdDate: {\n                  shape: 'S1q'\n                },\n                details: {\n                  deprecated: true,\n                  deprecatedMessage: 'This shape has been replaced by ConfigurationItem',\n                  type: 'structure',\n                  members: {\n                    clientIds: {\n                      shape: 'S1a',\n                      deprecated: true,\n                      deprecatedMessage: 'This attribute has been replaced by configuration.cognitoUserPoolConfiguration.clientIds'\n                    },\n                    userPoolArn: {\n                      deprecated: true,\n                      deprecatedMessage: 'This attribute has been replaced by configuration.cognitoUserPoolConfiguration.userPoolArn'\n                    },\n                    discoveryUrl: {\n                      deprecated: true,\n                      deprecatedMessage: 'This attribute has been replaced by configuration.cognitoUserPoolConfiguration.issuer'\n                    },\n                    openIdIssuer: {\n                      deprecated: true,\n                      deprecatedMessage: 'This attribute has been replaced by configuration'\n                    }\n                  }\n                },\n                identitySourceId: {},\n                lastUpdatedDate: {\n                  shape: 'S1q'\n                },\n                policyStoreId: {},\n                principalEntityType: {\n                  shape: 'S1o'\n                },\n                configuration: {\n                  type: 'structure',\n                  members: {\n                    cognitoUserPoolConfiguration: {\n                      type: 'structure',\n                      required: [\n                        'userPoolArn',\n                        'clientIds',\n                        'issuer'\n                      ],\n                      members: {\n                        userPoolArn: {},\n                        clientIds: {\n                          shape: 'S1a'\n                        },\n                        issuer: {},\n                        groupConfiguration: {\n                          type: 'structure',\n                          members: {\n                            groupEntityType: {\n                              shape: 'S1d'\n                            }\n                          }\n                        }\n                      }\n                    },\n                    openIdConnectConfiguration: {\n                      type: 'structure',\n                      required: [\n                        'issuer',\n                        'tokenSelection'\n                      ],\n                      members: {\n                        issuer: {},\n                        entityIdPrefix: {\n                          shape: 'S1g'\n                        },\n                        groupConfiguration: {\n                          type: 'structure',\n                          required: [\n                            'groupClaim',\n                            'groupEntityType'\n                          ],\n                          members: {\n                            groupClaim: {\n                              shape: 'S1i'\n                            },\n                            groupEntityType: {\n                              shape: 'S1d'\n                            }\n                          }\n                        },\n                        tokenSelection: {\n                          type: 'structure',\n                          members: {\n                            accessTokenOnly: {\n                              type: 'structure',\n                              members: {\n                                principalIdClaim: {\n                                  shape: 'S1i'\n                                },\n                                audiences: {\n                                  shape: 'S1l'\n                                }\n                              }\n                            },\n                            identityTokenOnly: {\n                              type: 'structure',\n                              members: {\n                                principalIdClaim: {\n                                  shape: 'S1i'\n                                },\n                                clientIds: {\n                                  shape: 'S1a'\n                                }\n                              }\n                            }\n                          },\n                          union: true\n                        }\n                      }\n                    }\n                  },\n                  union: true\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListPolicies: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId'\n        ],\n        members: {\n          policyStoreId: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          },\n          filter: {\n            type: 'structure',\n            members: {\n              principal: {\n                shape: 'S3z'\n              },\n              resource: {\n                shape: 'S3z'\n              },\n              policyType: {},\n              policyTemplateId: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policies'\n        ],\n        members: {\n          nextToken: {},\n          policies: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'policyStoreId',\n                'policyId',\n                'policyType',\n                'definition',\n                'createdDate',\n                'lastUpdatedDate'\n              ],\n              members: {\n                policyStoreId: {},\n                policyId: {},\n                policyType: {},\n                principal: {\n                  shape: 'S6'\n                },\n                resource: {\n                  shape: 'S6'\n                },\n                actions: {\n                  shape: 'S21'\n                },\n                definition: {\n                  type: 'structure',\n                  members: {\n                    'static': {\n                      type: 'structure',\n                      members: {\n                        description: {\n                          shape: 'S1v'\n                        }\n                      }\n                    },\n                    templateLinked: {\n                      type: 'structure',\n                      required: [\n                        'policyTemplateId'\n                      ],\n                      members: {\n                        policyTemplateId: {},\n                        principal: {\n                          shape: 'S6'\n                        },\n                        resource: {\n                          shape: 'S6'\n                        }\n                      }\n                    }\n                  },\n                  union: true\n                },\n                createdDate: {\n                  shape: 'S1q'\n                },\n                lastUpdatedDate: {\n                  shape: 'S1q'\n                },\n                effect: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListPolicyStores: {\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStores'\n        ],\n        members: {\n          nextToken: {},\n          policyStores: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'policyStoreId',\n                'arn',\n                'createdDate'\n              ],\n              members: {\n                policyStoreId: {},\n                arn: {},\n                createdDate: {\n                  shape: 'S1q'\n                },\n                lastUpdatedDate: {\n                  shape: 'S1q'\n                },\n                description: {\n                  shape: 'S26'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListPolicyTemplates: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId'\n        ],\n        members: {\n          policyStoreId: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyTemplates'\n        ],\n        members: {\n          nextToken: {},\n          policyTemplates: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'policyStoreId',\n                'policyTemplateId',\n                'createdDate',\n                'lastUpdatedDate'\n              ],\n              members: {\n                policyStoreId: {},\n                policyTemplateId: {},\n                description: {\n                  shape: 'S2a'\n                },\n                createdDate: {\n                  shape: 'S1q'\n                },\n                lastUpdatedDate: {\n                  shape: 'S1q'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    PutSchema: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'definition'\n        ],\n        members: {\n          policyStoreId: {},\n          definition: {\n            type: 'structure',\n            members: {\n              cedarJson: {\n                shape: 'S38'\n              }\n            },\n            union: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'namespaces',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          namespaces: {\n            shape: 'S39'\n          },\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateIdentitySource: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'identitySourceId',\n          'updateConfiguration'\n        ],\n        members: {\n          policyStoreId: {},\n          identitySourceId: {},\n          updateConfiguration: {\n            type: 'structure',\n            members: {\n              cognitoUserPoolConfiguration: {\n                type: 'structure',\n                required: [\n                  'userPoolArn'\n                ],\n                members: {\n                  userPoolArn: {},\n                  clientIds: {\n                    shape: 'S1a'\n                  },\n                  groupConfiguration: {\n                    type: 'structure',\n                    required: [\n                      'groupEntityType'\n                    ],\n                    members: {\n                      groupEntityType: {\n                        shape: 'S1d'\n                      }\n                    }\n                  }\n                }\n              },\n              openIdConnectConfiguration: {\n                type: 'structure',\n                required: [\n                  'issuer',\n                  'tokenSelection'\n                ],\n                members: {\n                  issuer: {},\n                  entityIdPrefix: {\n                    shape: 'S1g'\n                  },\n                  groupConfiguration: {\n                    type: 'structure',\n                    required: [\n                      'groupClaim',\n                      'groupEntityType'\n                    ],\n                    members: {\n                      groupClaim: {\n                        shape: 'S1i'\n                      },\n                      groupEntityType: {\n                        shape: 'S1d'\n                      }\n                    }\n                  },\n                  tokenSelection: {\n                    type: 'structure',\n                    members: {\n                      accessTokenOnly: {\n                        type: 'structure',\n                        members: {\n                          principalIdClaim: {\n                            shape: 'S1i'\n                          },\n                          audiences: {\n                            shape: 'S1l'\n                          }\n                        }\n                      },\n                      identityTokenOnly: {\n                        type: 'structure',\n                        members: {\n                          principalIdClaim: {\n                            shape: 'S1i'\n                          },\n                          clientIds: {\n                            shape: 'S1a'\n                          }\n                        }\n                      }\n                    },\n                    union: true\n                  }\n                }\n              }\n            },\n            union: true\n          },\n          principalEntityType: {\n            shape: 'S1o'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'createdDate',\n          'identitySourceId',\n          'lastUpdatedDate',\n          'policyStoreId'\n        ],\n        members: {\n          createdDate: {\n            shape: 'S1q'\n          },\n          identitySourceId: {},\n          lastUpdatedDate: {\n            shape: 'S1q'\n          },\n          policyStoreId: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdatePolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyId',\n          'definition'\n        ],\n        members: {\n          policyStoreId: {},\n          policyId: {},\n          definition: {\n            type: 'structure',\n            members: {\n              'static': {\n                type: 'structure',\n                required: [\n                  'statement'\n                ],\n                members: {\n                  description: {\n                    shape: 'S1v'\n                  },\n                  statement: {\n                    shape: 'S1w'\n                  }\n                }\n              }\n            },\n            union: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyId',\n          'policyType',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          policyId: {},\n          policyType: {},\n          principal: {\n            shape: 'S6'\n          },\n          resource: {\n            shape: 'S6'\n          },\n          actions: {\n            shape: 'S21'\n          },\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          },\n          effect: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdatePolicyStore: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'validationSettings'\n        ],\n        members: {\n          policyStoreId: {},\n          validationSettings: {\n            shape: 'S24'\n          },\n          description: {\n            shape: 'S26'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'arn',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          arn: {},\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdatePolicyTemplate: {\n      input: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyTemplateId',\n          'statement'\n        ],\n        members: {\n          policyStoreId: {},\n          policyTemplateId: {},\n          description: {\n            shape: 'S2a'\n          },\n          statement: {\n            shape: 'S1w'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'policyStoreId',\n          'policyTemplateId',\n          'createdDate',\n          'lastUpdatedDate'\n        ],\n        members: {\n          policyStoreId: {},\n          policyTemplateId: {},\n          createdDate: {\n            shape: 'S1q'\n          },\n          lastUpdatedDate: {\n            shape: 'S1q'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'structure',\n      members: {\n        entityList: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'identifier'\n            ],\n            members: {\n              identifier: {\n                shape: 'S6'\n              },\n              attributes: {\n                type: 'map',\n                key: {},\n                value: {\n                  shape: 'Sb'\n                }\n              },\n              parents: {\n                type: 'list',\n                member: {\n                  shape: 'S6'\n                }\n              }\n            }\n          }\n        }\n      },\n      union: true\n    },\n    S6: {\n      type: 'structure',\n      required: [\n        'entityType',\n        'entityId'\n      ],\n      members: {\n        entityType: {\n          type: 'string',\n          sensitive: true\n        },\n        entityId: {\n          type: 'string',\n          sensitive: true\n        }\n      }\n    },\n    Sb: {\n      type: 'structure',\n      members: {\n        'boolean': {\n          type: 'boolean',\n          sensitive: true\n        },\n        entityIdentifier: {\n          shape: 'S6'\n        },\n        'long': {\n          type: 'long',\n          sensitive: true\n        },\n        string: {\n          type: 'string',\n          sensitive: true\n        },\n        set: {\n          type: 'list',\n          member: {\n            shape: 'Sb'\n          }\n        },\n        record: {\n          type: 'map',\n          key: {},\n          value: {\n            shape: 'Sb'\n          }\n        }\n      },\n      union: true\n    },\n    Sj: {\n      type: 'structure',\n      members: {\n        principal: {\n          shape: 'S6'\n        },\n        action: {\n          shape: 'Sk'\n        },\n        resource: {\n          shape: 'S6'\n        },\n        context: {\n          shape: 'Sn'\n        }\n      }\n    },\n    Sk: {\n      type: 'structure',\n      required: [\n        'actionType',\n        'actionId'\n      ],\n      members: {\n        actionType: {\n          type: 'string',\n          sensitive: true\n        },\n        actionId: {\n          type: 'string',\n          sensitive: true\n        }\n      }\n    },\n    Sn: {\n      type: 'structure',\n      members: {\n        contextMap: {\n          type: 'map',\n          key: {},\n          value: {\n            shape: 'Sb'\n          },\n          sensitive: true\n        }\n      },\n      union: true\n    },\n    St: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'policyId'\n        ],\n        members: {\n          policyId: {}\n        }\n      }\n    },\n    Sw: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'errorDescription'\n        ],\n        members: {\n          errorDescription: {}\n        },\n        sensitive: true\n      }\n    },\n    Sz: {\n      type: 'string',\n      sensitive: true\n    },\n    S11: {\n      type: 'structure',\n      members: {\n        action: {\n          shape: 'Sk'\n        },\n        resource: {\n          shape: 'S6'\n        },\n        context: {\n          shape: 'Sn'\n        }\n      }\n    },\n    S1a: {\n      type: 'list',\n      member: {\n        type: 'string',\n        sensitive: true\n      }\n    },\n    S1d: {\n      type: 'string',\n      sensitive: true\n    },\n    S1g: {\n      type: 'string',\n      sensitive: true\n    },\n    S1i: {\n      type: 'string',\n      sensitive: true\n    },\n    S1l: {\n      type: 'list',\n      member: {}\n    },\n    S1o: {\n      type: 'string',\n      sensitive: true\n    },\n    S1q: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    S1v: {\n      type: 'string',\n      sensitive: true\n    },\n    S1w: {\n      type: 'string',\n      sensitive: true\n    },\n    S21: {\n      type: 'list',\n      member: {\n        shape: 'Sk'\n      }\n    },\n    S24: {\n      type: 'structure',\n      required: [\n        'mode'\n      ],\n      members: {\n        mode: {}\n      }\n    },\n    S26: {\n      type: 'string',\n      sensitive: true\n    },\n    S2a: {\n      type: 'string',\n      sensitive: true\n    },\n    S38: {\n      type: 'string',\n      sensitive: true\n    },\n    S39: {\n      type: 'list',\n      member: {\n        type: 'string',\n        sensitive: true\n      }\n    },\n    S3z: {\n      type: 'structure',\n      members: {\n        unspecified: {\n          type: 'boolean'\n        },\n        identifier: {\n          shape: 'S6'\n        }\n      },\n      union: true\n    }\n  }\n}"]}