{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/request/lib/redirect.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","isUrl","Redirect","request","followRedirect","followRedirects","followAllRedirects","followOriginalHttpMethod","allowRedirect","maxRedirects","redirects","redirectsFollowed","removeRefererHeader","prototype","onRequest","options","self","undefined","redirectTo","response","statusCode","caseless","has","location","get","debug","method","authHeader","_auth","onResponse","setHeader","uri","call","resume","emit","Error","href","test","resolve","uriPrev","parse","protocol","agent","push","redirectUri","src","req","_started","body","_form","headers","removeHeader","hostname","originalHost","split","init","_cjsExports","_Redirect"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,QAAhBC,Y;;;8BAGHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;;AAEA,YAAIN,GAAG,GAAGG,OAAO,CAAC,KAAD,CAAjB;;AACA,YAAII,KAAK,GAAG,UAAZ;;AAEA,iBAASC,QAAT,CAAmBC,OAAnB,EAA4B;AAC1B,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,cAAL,GAAsB,IAAtB;AACA,eAAKC,eAAL,GAAuB,IAAvB;AACA,eAAKC,kBAAL,GAA0B,KAA1B;AACA,eAAKC,wBAAL,GAAgC,KAAhC;;AACA,eAAKC,aAAL,GAAqB,YAAY;AAAE,mBAAO,IAAP;AAAa,WAAhD;;AACA,eAAKC,YAAL,GAAoB,EAApB;AACA,eAAKC,SAAL,GAAiB,EAAjB;AACA,eAAKC,iBAAL,GAAyB,CAAzB;AACA,eAAKC,mBAAL,GAA2B,KAA3B;AACD;;AAEDV,QAAAA,QAAQ,CAACW,SAAT,CAAmBC,SAAnB,GAA+B,UAAUC,OAAV,EAAmB;AAChD,cAAIC,IAAI,GAAG,IAAX;;AAEA,cAAID,OAAO,CAACN,YAAR,KAAyBQ,SAA7B,EAAwC;AACtCD,YAAAA,IAAI,CAACP,YAAL,GAAoBM,OAAO,CAACN,YAA5B;AACD;;AACD,cAAI,OAAOM,OAAO,CAACX,cAAf,KAAkC,UAAtC,EAAkD;AAChDY,YAAAA,IAAI,CAACR,aAAL,GAAqBO,OAAO,CAACX,cAA7B;AACD;;AACD,cAAIW,OAAO,CAACX,cAAR,KAA2Ba,SAA/B,EAA0C;AACxCD,YAAAA,IAAI,CAACX,eAAL,GAAuB,CAAC,CAACU,OAAO,CAACX,cAAjC;AACD;;AACD,cAAIW,OAAO,CAACT,kBAAR,KAA+BW,SAAnC,EAA8C;AAC5CD,YAAAA,IAAI,CAACV,kBAAL,GAA0BS,OAAO,CAACT,kBAAlC;AACD;;AACD,cAAIU,IAAI,CAACX,eAAL,IAAwBW,IAAI,CAACV,kBAAjC,EAAqD;AACnDU,YAAAA,IAAI,CAACN,SAAL,GAAiBM,IAAI,CAACN,SAAL,IAAkB,EAAnC;AACD;;AACD,cAAIK,OAAO,CAACH,mBAAR,KAAgCK,SAApC,EAA+C;AAC7CD,YAAAA,IAAI,CAACJ,mBAAL,GAA2BG,OAAO,CAACH,mBAAnC;AACD;;AACD,cAAIG,OAAO,CAACR,wBAAR,KAAqCU,SAAzC,EAAoD;AAClDD,YAAAA,IAAI,CAACT,wBAAL,GAAgCQ,OAAO,CAACR,wBAAxC;AACD;AACF,SAxBD;;AA0BAL,QAAAA,QAAQ,CAACW,SAAT,CAAmBK,UAAnB,GAAgC,UAAUC,QAAV,EAAoB;AAClD,cAAIH,IAAI,GAAG,IAAX;AACA,cAAIb,OAAO,GAAGa,IAAI,CAACb,OAAnB;AAEA,cAAIe,UAAU,GAAG,IAAjB;;AACA,cAAIC,QAAQ,CAACC,UAAT,IAAuB,GAAvB,IAA8BD,QAAQ,CAACC,UAAT,GAAsB,GAApD,IAA2DD,QAAQ,CAACE,QAAT,CAAkBC,GAAlB,CAAsB,UAAtB,CAA/D,EAAkG;AAChG,gBAAIC,QAAQ,GAAGJ,QAAQ,CAACE,QAAT,CAAkBG,GAAlB,CAAsB,UAAtB,CAAf;AACArB,YAAAA,OAAO,CAACsB,KAAR,CAAc,UAAd,EAA0BF,QAA1B;;AAEA,gBAAIP,IAAI,CAACV,kBAAT,EAA6B;AAC3BY,cAAAA,UAAU,GAAGK,QAAb;AACD,aAFD,MAEO,IAAIP,IAAI,CAACX,eAAT,EAA0B;AAC/B,sBAAQF,OAAO,CAACuB,MAAhB;AACE,qBAAK,OAAL;AACA,qBAAK,KAAL;AACA,qBAAK,MAAL;AACA,qBAAK,QAAL;AACE;AACA;;AACF;AACER,kBAAAA,UAAU,GAAGK,QAAb;AACA;AATJ;AAWD;AACF,WAnBD,MAmBO,IAAIJ,QAAQ,CAACC,UAAT,KAAwB,GAA5B,EAAiC;AACtC,gBAAIO,UAAU,GAAGxB,OAAO,CAACyB,KAAR,CAAcC,UAAd,CAAyBV,QAAzB,CAAjB;;AACA,gBAAIQ,UAAJ,EAAgB;AACdxB,cAAAA,OAAO,CAAC2B,SAAR,CAAkB,eAAlB,EAAmCH,UAAnC;AACAT,cAAAA,UAAU,GAAGf,OAAO,CAAC4B,GAArB;AACD;AACF;;AACD,iBAAOb,UAAP;AACD,SAhCD;;AAkCAhB,QAAAA,QAAQ,CAACW,SAAT,CAAmBgB,UAAnB,GAAgC,UAAUV,QAAV,EAAoB;AAClD,cAAIH,IAAI,GAAG,IAAX;AACA,cAAIb,OAAO,GAAGa,IAAI,CAACb,OAAnB;AAEA,cAAIe,UAAU,GAAGF,IAAI,CAACE,UAAL,CAAgBC,QAAhB,CAAjB;;AACA,cAAI,CAACD,UAAD,IAAe,CAACF,IAAI,CAACR,aAAL,CAAmBwB,IAAnB,CAAwB7B,OAAxB,EAAiCgB,QAAjC,CAApB,EAAgE;AAC9D,mBAAO,KAAP;AACD;;AAEDhB,UAAAA,OAAO,CAACsB,KAAR,CAAc,aAAd,EAA6BP,UAA7B,EATkD,CAWlD;AACA;AACA;;AACA,cAAIC,QAAQ,CAACc,MAAb,EAAqB;AACnBd,YAAAA,QAAQ,CAACc,MAAT;AACD;;AAED,cAAIjB,IAAI,CAACL,iBAAL,IAA0BK,IAAI,CAACP,YAAnC,EAAiD;AAC/CN,YAAAA,OAAO,CAAC+B,IAAR,CAAa,OAAb,EAAsB,IAAIC,KAAJ,CAAU,8DAA8DhC,OAAO,CAAC4B,GAAR,CAAYK,IAApF,CAAtB;AACA,mBAAO,KAAP;AACD;;AACDpB,UAAAA,IAAI,CAACL,iBAAL,IAA0B,CAA1B;;AAEA,cAAI,CAACV,KAAK,CAACoC,IAAN,CAAWnB,UAAX,CAAL,EAA6B;AAC3BA,YAAAA,UAAU,GAAGxB,GAAG,CAAC4C,OAAJ,CAAYnC,OAAO,CAAC4B,GAAR,CAAYK,IAAxB,EAA8BlB,UAA9B,CAAb;AACD;;AAED,cAAIqB,OAAO,GAAGpC,OAAO,CAAC4B,GAAtB;AACA5B,UAAAA,OAAO,CAAC4B,GAAR,GAAcrC,GAAG,CAAC8C,KAAJ,CAAUtB,UAAV,CAAd,CA7BkD,CA+BlD;;AACA,cAAIf,OAAO,CAAC4B,GAAR,CAAYU,QAAZ,KAAyBF,OAAO,CAACE,QAArC,EAA+C;AAC7C,mBAAOtC,OAAO,CAACuC,KAAf;AACD;;AAED1B,UAAAA,IAAI,CAACN,SAAL,CAAeiC,IAAf,CAAoB;AAAEvB,YAAAA,UAAU,EAAED,QAAQ,CAACC,UAAvB;AAAmCwB,YAAAA,WAAW,EAAE1B;AAAhD,WAApB;;AAEA,cAAIF,IAAI,CAACV,kBAAL,IAA2BH,OAAO,CAACuB,MAAR,KAAmB,MAA9C,IACFP,QAAQ,CAACC,UAAT,KAAwB,GADtB,IAC6BD,QAAQ,CAACC,UAAT,KAAwB,GADzD,EAC8D;AAC5DjB,YAAAA,OAAO,CAACuB,MAAR,GAAiBV,IAAI,CAACT,wBAAL,GAAgCJ,OAAO,CAACuB,MAAxC,GAAiD,KAAlE;AACD,WAzCiD,CA0ClD;;;AACA,iBAAOvB,OAAO,CAAC0C,GAAf;AACA,iBAAO1C,OAAO,CAAC2C,GAAf;AACA,iBAAO3C,OAAO,CAAC4C,QAAf;;AACA,cAAI5B,QAAQ,CAACC,UAAT,KAAwB,GAAxB,IAA+BD,QAAQ,CAACC,UAAT,KAAwB,GAA3D,EAAgE;AAC9D;AACA;AACA,mBAAOjB,OAAO,CAAC6C,IAAf;AACA,mBAAO7C,OAAO,CAAC8C,KAAf;;AACA,gBAAI9C,OAAO,CAAC+C,OAAZ,EAAqB;AACnB/C,cAAAA,OAAO,CAACgD,YAAR,CAAqB,MAArB;AACAhD,cAAAA,OAAO,CAACgD,YAAR,CAAqB,cAArB;AACAhD,cAAAA,OAAO,CAACgD,YAAR,CAAqB,gBAArB;;AACA,kBAAIhD,OAAO,CAAC4B,GAAR,CAAYqB,QAAZ,KAAyBjD,OAAO,CAACkD,YAAR,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAA7B,EAAiE;AAC/D;AACA;AACA;AACAnD,gBAAAA,OAAO,CAACgD,YAAR,CAAqB,eAArB;AACD;AACF;AACF;;AAED,cAAI,CAACnC,IAAI,CAACJ,mBAAV,EAA+B;AAC7BT,YAAAA,OAAO,CAAC2B,SAAR,CAAkB,SAAlB,EAA6BS,OAAO,CAACH,IAArC;AACD;;AAEDjC,UAAAA,OAAO,CAAC+B,IAAR,CAAa,UAAb;AAEA/B,UAAAA,OAAO,CAACoD,IAAR;AAEA,iBAAO,IAAP;AACD,SAzED;;AA2EA3D,QAAAA,OAAO,CAACM,QAAR,GAAmBA,QAAnB,CA7J0F,CAgK3F;;AAEA,2BAAAsD,WAAW,GAAG1D,MAAM,CAACF,OAArB;;AACA6D,QAAAA,SAAS,GAAG3D,MAAM,CAACF,OAAP,CAAeM,QAA3B;AAEC,OArKD,EAqKG,OAAO;AACR,eAAOV;AADC,OAAP,CArKH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'url';\nlet _cjsExports;\nlet _Redirect;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n 'use strict'\n\n var url = require('url')\n var isUrl = /^https?:/\n\n function Redirect (request) {\n   this.request = request\n   this.followRedirect = true\n   this.followRedirects = true\n   this.followAllRedirects = false\n   this.followOriginalHttpMethod = false\n   this.allowRedirect = function () { return true }\n   this.maxRedirects = 10\n   this.redirects = []\n   this.redirectsFollowed = 0\n   this.removeRefererHeader = false\n }\n\n Redirect.prototype.onRequest = function (options) {\n   var self = this\n\n   if (options.maxRedirects !== undefined) {\n     self.maxRedirects = options.maxRedirects\n   }\n   if (typeof options.followRedirect === 'function') {\n     self.allowRedirect = options.followRedirect\n   }\n   if (options.followRedirect !== undefined) {\n     self.followRedirects = !!options.followRedirect\n   }\n   if (options.followAllRedirects !== undefined) {\n     self.followAllRedirects = options.followAllRedirects\n   }\n   if (self.followRedirects || self.followAllRedirects) {\n     self.redirects = self.redirects || []\n   }\n   if (options.removeRefererHeader !== undefined) {\n     self.removeRefererHeader = options.removeRefererHeader\n   }\n   if (options.followOriginalHttpMethod !== undefined) {\n     self.followOriginalHttpMethod = options.followOriginalHttpMethod\n   }\n }\n\n Redirect.prototype.redirectTo = function (response) {\n   var self = this\n   var request = self.request\n\n   var redirectTo = null\n   if (response.statusCode >= 300 && response.statusCode < 400 && response.caseless.has('location')) {\n     var location = response.caseless.get('location')\n     request.debug('redirect', location)\n\n     if (self.followAllRedirects) {\n       redirectTo = location\n     } else if (self.followRedirects) {\n       switch (request.method) {\n         case 'PATCH':\n         case 'PUT':\n         case 'POST':\n         case 'DELETE':\n           // Do not follow redirects\n           break\n         default:\n           redirectTo = location\n           break\n       }\n     }\n   } else if (response.statusCode === 401) {\n     var authHeader = request._auth.onResponse(response)\n     if (authHeader) {\n       request.setHeader('authorization', authHeader)\n       redirectTo = request.uri\n     }\n   }\n   return redirectTo\n }\n\n Redirect.prototype.onResponse = function (response) {\n   var self = this\n   var request = self.request\n\n   var redirectTo = self.redirectTo(response)\n   if (!redirectTo || !self.allowRedirect.call(request, response)) {\n     return false\n   }\n\n   request.debug('redirect to', redirectTo)\n\n   // ignore any potential response body.  it cannot possibly be useful\n   // to us at this point.\n   // response.resume should be defined, but check anyway before calling. Workaround for browserify.\n   if (response.resume) {\n     response.resume()\n   }\n\n   if (self.redirectsFollowed >= self.maxRedirects) {\n     request.emit('error', new Error('Exceeded maxRedirects. Probably stuck in a redirect loop ' + request.uri.href))\n     return false\n   }\n   self.redirectsFollowed += 1\n\n   if (!isUrl.test(redirectTo)) {\n     redirectTo = url.resolve(request.uri.href, redirectTo)\n   }\n\n   var uriPrev = request.uri\n   request.uri = url.parse(redirectTo)\n\n   // handle the case where we change protocol from https to http or vice versa\n   if (request.uri.protocol !== uriPrev.protocol) {\n     delete request.agent\n   }\n\n   self.redirects.push({ statusCode: response.statusCode, redirectUri: redirectTo })\n\n   if (self.followAllRedirects && request.method !== 'HEAD' &&\n     response.statusCode !== 401 && response.statusCode !== 307) {\n     request.method = self.followOriginalHttpMethod ? request.method : 'GET'\n   }\n   // request.method = 'GET' // Force all redirects to use GET || commented out fixes #215\n   delete request.src\n   delete request.req\n   delete request._started\n   if (response.statusCode !== 401 && response.statusCode !== 307) {\n     // Remove parameters from the previous response, unless this is the second request\n     // for a server that requires digest authentication.\n     delete request.body\n     delete request._form\n     if (request.headers) {\n       request.removeHeader('host')\n       request.removeHeader('content-type')\n       request.removeHeader('content-length')\n       if (request.uri.hostname !== request.originalHost.split(':')[0]) {\n         // Remove authorization if changing hostnames (but not if just\n         // changing ports or protocols).  This matches the behavior of curl:\n         // https://github.com/bagder/curl/blob/6beb0eee/lib/http.c#L710\n         request.removeHeader('authorization')\n       }\n     }\n   }\n\n   if (!self.removeRefererHeader) {\n     request.setHeader('referer', uriPrev.href)\n   }\n\n   request.emit('redirect')\n\n   request.init()\n\n   return true\n }\n\n exports.Redirect = Redirect\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_Redirect = module.exports.Redirect;\n\n}, () => ({\n  'url': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}