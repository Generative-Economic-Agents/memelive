{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_baseMergeDeep.js"],"names":["baseMergeDeep","object","source","key","srcIndex","mergeFunc","customizer","stack","objValue","safeGet","srcValue","stacked","get","assignMergeValue","newValue","undefined","isCommon","isArr","isArray","isBuff","isBuffer","isTyped","isTypedArray","isArrayLikeObject","copyArray","cloneBuffer","cloneTypedArray","isPlainObject","isArguments","toPlainObject","isObject","isFunction","initCloneObject","set"],"mappings":"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","sourcesContent":["import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n"]}