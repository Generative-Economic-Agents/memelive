{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/credentials/remote_credentials.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","fs","AWS","ENV_RELATIVE_URI","ENV_FULL_URI","ENV_AUTH_TOKEN","ENV_AUTH_TOKEN_FILE","FULL_URI_UNRESTRICTED_PROTOCOLS","FULL_URI_ALLOWED_PROTOCOLS","FULL_URI_ALLOWED_HOSTNAMES","RELATIVE_URI_HOST","RemoteCredentials","util","inherit","Credentials","constructor","options","call","copy","httpOptions","merge","update","timeout","maxRetries","isConfiguredForEcsCredentials","Boolean","process","env","getECSFullUri","relative","full","parsed","urlParse","indexOf","protocol","error","Error","join","code","hostname","getECSAuthToken","data","readFileSync","toString","console","credsFormatIsValid","credData","accessKeyId","secretAccessKey","sessionToken","expireTime","formatCreds","credentials","expired","AccessKeyId","SecretAccessKey","Token","Date","expiration","Expiration","request","callback","httpRequest","HttpRequest","method","headers","Accept","token","Authorization","handleRequestWithRetries","refresh","coalesceRefresh","fn","load","self","fullUri","err","JSON","parse","creds","dataError","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'fs';\nimport { __cjsMetaURL as _req0} from '../core';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var fs = require('fs');\n\n var AWS = require('../core'),\n   ENV_RELATIVE_URI = 'AWS_CONTAINER_CREDENTIALS_RELATIVE_URI',\n   ENV_FULL_URI = 'AWS_CONTAINER_CREDENTIALS_FULL_URI',\n   ENV_AUTH_TOKEN = 'AWS_CONTAINER_AUTHORIZATION_TOKEN',\n   ENV_AUTH_TOKEN_FILE = 'AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE',\n   FULL_URI_UNRESTRICTED_PROTOCOLS = ['https:'],\n   FULL_URI_ALLOWED_PROTOCOLS = ['http:', 'https:'],\n   FULL_URI_ALLOWED_HOSTNAMES = ['localhost', '127.0.0.1', '169.254.170.23'],\n   RELATIVE_URI_HOST = '169.254.170.2';\n\n /**\n  * Represents credentials received from specified URI.\n  *\n  * This class will request refreshable credentials from the relative URI\n  * specified by the AWS_CONTAINER_CREDENTIALS_RELATIVE_URI or the\n  * AWS_CONTAINER_CREDENTIALS_FULL_URI environment variable. If valid credentials\n  * are returned in the response, these will be used with zero configuration.\n  *\n  * This credentials class will by default timeout after 1 second of inactivity\n  * and retry 3 times.\n  * If your requests to the relative URI are timing out, you can increase\n  * the value by configuring them directly:\n  *\n  * ```javascript\n  * AWS.config.credentials = new AWS.RemoteCredentials({\n  *   httpOptions: { timeout: 5000 }, // 5 second timeout\n  *   maxRetries: 10, // retry 10 times\n  *   retryDelayOptions: { base: 200 } // see AWS.Config for information\n  * });\n  * ```\n  *\n  * @see AWS.Config.retryDelayOptions\n  *\n  * @!macro nobrowser\n  */\n AWS.RemoteCredentials = AWS.util.inherit(AWS.Credentials, {\n   constructor: function RemoteCredentials(options) {\n     AWS.Credentials.call(this);\n     options = options ? AWS.util.copy(options) : {};\n     if (!options.httpOptions) options.httpOptions = {};\n     options.httpOptions = AWS.util.merge(\n       this.httpOptions, options.httpOptions);\n     AWS.util.update(this, options);\n   },\n\n   /**\n    * @api private\n    */\n   httpOptions: { timeout: 1000 },\n\n   /**\n    * @api private\n    */\n   maxRetries: 3,\n\n   /**\n    * @api private\n    */\n   isConfiguredForEcsCredentials: function isConfiguredForEcsCredentials() {\n     return Boolean(\n         process &&\n         process.env &&\n         (process.env[ENV_RELATIVE_URI] || process.env[ENV_FULL_URI])\n     );\n   },\n\n   /**\n    * @api private\n    */\n   getECSFullUri: function getECSFullUri() {\n     if (process && process.env) {\n       var relative = process.env[ENV_RELATIVE_URI],\n           full = process.env[ENV_FULL_URI];\n       if (relative) {\n         return 'http://' + RELATIVE_URI_HOST + relative;\n       } else if (full) {\n         var parsed = AWS.util.urlParse(full);\n         if (FULL_URI_ALLOWED_PROTOCOLS.indexOf(parsed.protocol) < 0) {\n           throw AWS.util.error(\n             new Error('Unsupported protocol:  AWS.RemoteCredentials supports '\n               + FULL_URI_ALLOWED_PROTOCOLS.join(',') + ' only; '\n               + parsed.protocol + ' requested.'),\n             { code: 'ECSCredentialsProviderFailure' }\n           );\n         }\n\n         if (FULL_URI_UNRESTRICTED_PROTOCOLS.indexOf(parsed.protocol) < 0 &&\n             FULL_URI_ALLOWED_HOSTNAMES.indexOf(parsed.hostname) < 0) {\n           throw AWS.util.error(\n             new Error('Unsupported hostname: AWS.RemoteCredentials only supports '\n               + FULL_URI_ALLOWED_HOSTNAMES.join(',') + ' for ' + parsed.protocol + '; '\n               + parsed.protocol + '//' + parsed.hostname + ' requested.'),\n             { code: 'ECSCredentialsProviderFailure' }\n           );\n         }\n\n         return full;\n       } else {\n         throw AWS.util.error(\n           new Error('Variable ' + ENV_RELATIVE_URI + ' or ' + ENV_FULL_URI +\n             ' must be set to use AWS.RemoteCredentials.'),\n           { code: 'ECSCredentialsProviderFailure' }\n         );\n       }\n     } else {\n       throw AWS.util.error(\n         new Error('No process info available'),\n         { code: 'ECSCredentialsProviderFailure' }\n       );\n     }\n   },\n\n   /**\n    * @api private\n    */\n   getECSAuthToken: function getECSAuthToken() {\n     if (process && process.env && (process.env[ENV_FULL_URI] || process.env[ENV_AUTH_TOKEN_FILE])) {\n       if (!process.env[ENV_AUTH_TOKEN] && process.env[ENV_AUTH_TOKEN_FILE]) {\n         try {\n           var data = fs.readFileSync(process.env[ENV_AUTH_TOKEN_FILE]).toString();\n           return data;\n         } catch (error) {\n           console.error('Error reading token file:', error);\n           throw error; // Re-throw the error to propagate it\n         }\n       }\n       return process.env[ENV_AUTH_TOKEN];\n     }\n   },\n\n   /**\n    * @api private\n    */\n   credsFormatIsValid: function credsFormatIsValid(credData) {\n     return (!!credData.accessKeyId && !!credData.secretAccessKey &&\n       !!credData.sessionToken && !!credData.expireTime);\n   },\n\n   /**\n    * @api private\n    */\n   formatCreds: function formatCreds(credData) {\n     if (!!credData.credentials) {\n       credData = credData.credentials;\n     }\n\n     return {\n       expired: false,\n       accessKeyId: credData.accessKeyId || credData.AccessKeyId,\n       secretAccessKey: credData.secretAccessKey || credData.SecretAccessKey,\n       sessionToken: credData.sessionToken || credData.Token,\n       expireTime: new Date(credData.expiration || credData.Expiration)\n     };\n   },\n\n   /**\n    * @api private\n    */\n   request: function request(url, callback) {\n     var httpRequest = new AWS.HttpRequest(url);\n     httpRequest.method = 'GET';\n     httpRequest.headers.Accept = 'application/json';\n     var token = this.getECSAuthToken();\n     if (token) {\n       httpRequest.headers.Authorization = token;\n     }\n     AWS.util.handleRequestWithRetries(httpRequest, this, callback);\n   },\n\n   /**\n    * Loads the credentials from the relative URI specified by container\n    *\n    * @callback callback function(err)\n    *   Called when the request to the relative URI responds (or fails). When\n    *   this callback is called with no error, it means that the credentials\n    *   information has been loaded into the object (as the `accessKeyId`,\n    *   `secretAccessKey`, `sessionToken`, and `expireTime` properties).\n    *   @param err [Error] if an error occurred, this value will be filled\n    * @see get\n    */\n   refresh: function refresh(callback) {\n     this.coalesceRefresh(callback || AWS.util.fn.callback);\n   },\n\n   /**\n    * @api private\n    */\n   load: function load(callback) {\n     var self = this;\n     var fullUri;\n\n     try {\n       fullUri = this.getECSFullUri();\n     } catch (err) {\n       callback(err);\n       return;\n     }\n\n     this.request(fullUri, function(err, data) {\n       if (!err) {\n         try {\n           data = JSON.parse(data);\n           var creds = self.formatCreds(data);\n           if (!self.credsFormatIsValid(creds)) {\n             throw AWS.util.error(\n               new Error('Response data is not in valid format'),\n               { code: 'ECSCredentialsProviderFailure' }\n             );\n           }\n           AWS.util.update(self, creds);\n         } catch (dataError) {\n           err = dataError;\n         }\n       }\n       callback(err, creds);\n     });\n   }\n });\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'fs': _req,\n  '../core': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}