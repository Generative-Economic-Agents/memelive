{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/protocol/rest_xml.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","url","define","exports","require","module","__filename","__dirname","AWS","util","Rest","populateBody","req","input","service","api","operations","operation","builder","XML","Builder","params","payload","payloadMember","members","undefined","type","rootElement","name","httpRequest","body","toXML","shape","string","upperFirst","buildRequest","indexOf","method","extractError","resp","data","Parser","parse","httpResponse","toString","e","Code","statusCode","Message","statusMessage","Errors","Error","error","code","message","extractData","parser","request","output","hasEventOutput","isEventStream","createEventStream","HttpClient","streamsApiVersion","stream","isStreaming","toType","length","update","_cjsExports","_buildRequest","_extractError","_extractData"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nimport { __cjsMetaURL as _req0} from '../util';\nimport { __cjsMetaURL as _req1} from './rest';\nlet _cjsExports;\nlet _buildRequest;\nlet _extractError;\nlet _extractData;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n var util = require('../util');\n var Rest = require('./rest');\n\n function populateBody(req) {\n   var input = req.service.api.operations[req.operation].input;\n   var builder = new AWS.XML.Builder();\n   var params = req.params;\n\n   var payload = input.payload;\n   if (payload) {\n     var payloadMember = input.members[payload];\n     params = params[payload];\n     if (params === undefined) return;\n\n     if (payloadMember.type === 'structure') {\n       var rootElement = payloadMember.name;\n       req.httpRequest.body = builder.toXML(params, payloadMember, rootElement, true);\n     } else { // non-xml payload\n       req.httpRequest.body = params;\n     }\n   } else {\n     req.httpRequest.body = builder.toXML(params, input, input.name ||\n       input.shape || util.string.upperFirst(req.operation) + 'Request');\n   }\n }\n\n function buildRequest(req) {\n   Rest.buildRequest(req);\n\n   // never send body payload on GET/HEAD\n   if (['GET', 'HEAD'].indexOf(req.httpRequest.method) < 0) {\n     populateBody(req);\n   }\n }\n\n function extractError(resp) {\n   Rest.extractError(resp);\n\n   var data;\n   try {\n     data = new AWS.XML.Parser().parse(resp.httpResponse.body.toString());\n   } catch (e) {\n     data = {\n       Code: resp.httpResponse.statusCode,\n       Message: resp.httpResponse.statusMessage\n     };\n   }\n\n   if (data.Errors) data = data.Errors;\n   if (data.Error) data = data.Error;\n   if (data.Code) {\n     resp.error = util.error(new Error(), {\n       code: data.Code,\n       message: data.Message\n     });\n   } else {\n     resp.error = util.error(new Error(), {\n       code: resp.httpResponse.statusCode,\n       message: null\n     });\n   }\n }\n\n function extractData(resp) {\n   Rest.extractData(resp);\n\n   var parser;\n   var req = resp.request;\n   var body = resp.httpResponse.body;\n   var operation = req.service.api.operations[req.operation];\n   var output = operation.output;\n\n   var hasEventOutput = operation.hasEventOutput;\n\n   var payload = output.payload;\n   if (payload) {\n     var payloadMember = output.members[payload];\n     if (payloadMember.isEventStream) {\n       parser = new AWS.XML.Parser();\n       resp.data[payload] = util.createEventStream(\n         AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : resp.httpResponse.body,\n         parser,\n         payloadMember\n       );\n     } else if (payloadMember.type === 'structure') {\n       parser = new AWS.XML.Parser();\n       resp.data[payload] = parser.parse(body.toString(), payloadMember);\n     } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n       resp.data[payload] = body;\n     } else {\n       resp.data[payload] = payloadMember.toType(body);\n     }\n   } else if (body.length > 0) {\n     parser = new AWS.XML.Parser();\n     var data = parser.parse(body.toString(), output);\n     util.update(resp.data, data);\n   }\n }\n\n /**\n  * @api private\n  */\n module.exports = {\n   buildRequest: buildRequest,\n   extractError: extractError,\n   extractData: extractData\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_buildRequest = module.exports.buildRequest;\n_extractError = module.exports.extractError;\n_extractData = module.exports.extractData;\n\n}, () => ({\n  '../core': _req,\n  '../util': _req0,\n  './rest': _req1,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}