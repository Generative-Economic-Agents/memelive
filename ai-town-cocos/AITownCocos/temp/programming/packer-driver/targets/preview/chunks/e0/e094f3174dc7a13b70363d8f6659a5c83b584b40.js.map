{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/neptunedata-2023-08-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CancelGremlinQuery","http","method","requestUri","responseCode","input","type","required","members","queryId","location","locationName","output","status","idempotent","CancelLoaderJob","loadId","CancelMLDataProcessingJob","id","neptuneIamRoleArn","clean","CancelMLModelTrainingJob","CancelMLModelTransformJob","CancelOpenCypherQuery","silent","payload","CreateMLEndpoint","mlModelTrainingJobId","mlModelTransformJobId","update","modelName","instanceType","instanceCount","volumeEncryptionKMSKey","arn","creationTimeInMillis","DeleteMLEndpoint","DeletePropertygraphStatistics","statusCode","shape","DeleteSparqlStatistics","ExecuteFastReset","action","token","ExecuteGremlinExplainQuery","gremlinQuery","ExecuteGremlinProfileQuery","results","chop","serializer","indexOps","ExecuteGremlinQuery","requestId","message","code","attributes","result","meta","ExecuteOpenCypherExplainQuery","openCypherQuery","parameters","explainMode","ExecuteOpenCypherQuery","GetEngineStatus","startTime","dbEngineVersion","role","dfeQueryEngine","gremlin","sparql","opencypher","labMode","rollingBackTrxCount","rollingBackTrxEarliestStartTime","features","key","value","settings","GetGremlinQueryStatus","queryString","queryEvalStats","GetLoaderJobStatus","details","errors","page","errorsPerPage","GetMLDataProcessingJob","processingJob","GetMLEndpoint","endpoint","endpointConfig","GetMLModelTrainingJob","hpoJob","modelTransformJob","mlModels","member","GetMLModelTransformJob","baseProcessingJob","remoteModelTransformJob","models","GetOpenCypherQueryStatus","GetPropertygraphStatistics","GetPropertygraphStream","limit","iteratorType","commitNum","opNum","encoding","lastEventId","lastTrxTimestampInMillis","format","records","commitTimestampInMillis","eventId","data","from","to","op","isLastOp","totalRecords","GetPropertygraphSummary","mode","lastStatisticsComputationTime","graphSummary","numNodes","numEdges","numNodeLabels","numEdgeLabels","nodeLabels","edgeLabels","numNodeProperties","numEdgeProperties","nodeProperties","edgeProperties","totalNodePropertyValues","totalEdgePropertyValues","nodeStructures","count","distinctOutgoingEdgeLabels","edgeStructures","GetRDFGraphSummary","numDistinctSubjects","numDistinctPredicates","numQuads","numClasses","classes","predicates","subjectStructures","GetSparqlStatistics","GetSparqlStream","stmt","ListGremlinQueries","includeWaiting","acceptedQueryCount","runningQueryCount","queries","ListLoaderJobs","includeQueuedLoads","loadIds","ListMLDataProcessingJobs","maxItems","ids","ListMLEndpoints","ListMLModelTrainingJobs","ListMLModelTransformJobs","ListOpenCypherQueries","ManagePropertygraphStatistics","ManageSparqlStatistics","StartLoaderJob","source","s3BucketRegion","iamRoleArn","failOnError","parallelism","parserConfiguration","updateSingleCardinalityProperties","queueRequest","dependencies","userProvidedEdgeIds","StartMLDataProcessingJob","previousDataProcessingJobId","inputDataS3Location","processedDataS3Location","sagemakerIamRoleArn","processingInstanceType","processingInstanceVolumeSizeInGB","processingTimeOutInSeconds","modelType","configFileName","subnets","securityGroupIds","s3OutputEncryptionKMSKey","StartMLModelTrainingJob","previousModelTrainingJobId","dataProcessingJobId","trainModelS3Location","baseProcessingInstanceType","trainingInstanceType","trainingInstanceVolumeSizeInGB","trainingTimeOutInSeconds","maxHPONumberOfTrainingJobs","maxHPOParallelTrainingJobs","enableManagedSpotTraining","customModelTrainingParameters","sourceS3DirectoryPath","trainingEntryPointScript","transformEntryPointScript","StartMLModelTransformJob","trainingJobName","modelTransformOutputS3Location","customModelTransformParameters","baseProcessingInstanceVolumeSizeInGB","shapes","Sm","active","statisticsId","S10","document","S18","S19","S1d","waited","elapsed","cancelled","subqueries","S1j","name","outputLocation","failureReason","cloudwatchLogUrl","S1m","S1w","autoCompute","date","note","signatureInfo","signatureCount","predicateCount","S1x","timestampFormat","S2e","S35","S3a","S3t"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2023-08-01',\n    endpointPrefix: 'neptune-db',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon NeptuneData',\n    serviceId: 'neptunedata',\n    signatureVersion: 'v4',\n    signingName: 'neptune-db',\n    uid: 'neptunedata-2023-08-01'\n  },\n  operations: {\n    CancelGremlinQuery: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/gremlin/status/{queryId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'queryId'\n        ],\n        members: {\n          queryId: {\n            location: 'uri',\n            locationName: 'queryId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    CancelLoaderJob: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/loader/{loadId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'loadId'\n        ],\n        members: {\n          loadId: {\n            location: 'uri',\n            locationName: 'loadId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    CancelMLDataProcessingJob: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/ml/dataprocessing/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          },\n          clean: {\n            location: 'querystring',\n            locationName: 'clean',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    CancelMLModelTrainingJob: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/ml/modeltraining/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          },\n          clean: {\n            location: 'querystring',\n            locationName: 'clean',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    CancelMLModelTransformJob: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/ml/modeltransform/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          },\n          clean: {\n            location: 'querystring',\n            locationName: 'clean',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    CancelOpenCypherQuery: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/opencypher/status/{queryId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'queryId'\n        ],\n        members: {\n          queryId: {\n            location: 'uri',\n            locationName: 'queryId'\n          },\n          silent: {\n            location: 'querystring',\n            locationName: 'silent',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {},\n          payload: {\n            type: 'boolean'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateMLEndpoint: {\n      http: {\n        requestUri: '/ml/endpoints',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          id: {},\n          mlModelTrainingJobId: {},\n          mlModelTransformJobId: {},\n          update: {\n            type: 'boolean'\n          },\n          neptuneIamRoleArn: {},\n          modelName: {},\n          instanceType: {},\n          instanceCount: {\n            type: 'integer'\n          },\n          volumeEncryptionKMSKey: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          arn: {},\n          creationTimeInMillis: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    DeleteMLEndpoint: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/ml/endpoints/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          },\n          clean: {\n            location: 'querystring',\n            locationName: 'clean',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    DeletePropertygraphStatistics: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/propertygraph/statistics',\n        responseCode: 200\n      },\n      output: {\n        type: 'structure',\n        members: {\n          statusCode: {\n            location: 'statusCode',\n            type: 'integer'\n          },\n          status: {},\n          payload: {\n            shape: 'Sm'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteSparqlStatistics: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/sparql/statistics',\n        responseCode: 200\n      },\n      output: {\n        type: 'structure',\n        members: {\n          statusCode: {\n            location: 'statusCode',\n            type: 'integer'\n          },\n          status: {},\n          payload: {\n            shape: 'Sm'\n          }\n        }\n      },\n      idempotent: true\n    },\n    ExecuteFastReset: {\n      http: {\n        requestUri: '/system',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'action'\n        ],\n        members: {\n          action: {},\n          token: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status'\n        ],\n        members: {\n          status: {},\n          payload: {\n            type: 'structure',\n            members: {\n              token: {}\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ExecuteGremlinExplainQuery: {\n      http: {\n        requestUri: '/gremlin/explain',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'gremlinQuery'\n        ],\n        members: {\n          gremlinQuery: {\n            locationName: 'gremlin'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          output: {\n            type: 'blob'\n          }\n        },\n        payload: 'output'\n      }\n    },\n    ExecuteGremlinProfileQuery: {\n      http: {\n        requestUri: '/gremlin/profile',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'gremlinQuery'\n        ],\n        members: {\n          gremlinQuery: {\n            locationName: 'gremlin'\n          },\n          results: {\n            locationName: 'profile.results',\n            type: 'boolean'\n          },\n          chop: {\n            locationName: 'profile.chop',\n            type: 'integer'\n          },\n          serializer: {\n            locationName: 'profile.serializer'\n          },\n          indexOps: {\n            locationName: 'profile.indexOps',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          output: {\n            type: 'blob'\n          }\n        },\n        payload: 'output'\n      }\n    },\n    ExecuteGremlinQuery: {\n      http: {\n        requestUri: '/gremlin',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'gremlinQuery'\n        ],\n        members: {\n          gremlinQuery: {\n            locationName: 'gremlin'\n          },\n          serializer: {\n            location: 'header',\n            locationName: 'accept'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          requestId: {},\n          status: {\n            type: 'structure',\n            members: {\n              message: {},\n              code: {\n                type: 'integer'\n              },\n              attributes: {\n                shape: 'S10'\n              }\n            }\n          },\n          result: {\n            shape: 'S10'\n          },\n          meta: {\n            shape: 'S10'\n          }\n        }\n      }\n    },\n    ExecuteOpenCypherExplainQuery: {\n      http: {\n        requestUri: '/opencypher/explain',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'openCypherQuery',\n          'explainMode'\n        ],\n        members: {\n          openCypherQuery: {\n            locationName: 'query'\n          },\n          parameters: {},\n          explainMode: {\n            locationName: 'explain'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'results'\n        ],\n        members: {\n          results: {\n            type: 'blob'\n          }\n        },\n        payload: 'results'\n      }\n    },\n    ExecuteOpenCypherQuery: {\n      http: {\n        requestUri: '/opencypher',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'openCypherQuery'\n        ],\n        members: {\n          openCypherQuery: {\n            locationName: 'query'\n          },\n          parameters: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'results'\n        ],\n        members: {\n          results: {\n            shape: 'S10'\n          }\n        }\n      }\n    },\n    GetEngineStatus: {\n      http: {\n        method: 'GET',\n        requestUri: '/status',\n        responseCode: 200\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {},\n          startTime: {},\n          dbEngineVersion: {},\n          role: {},\n          dfeQueryEngine: {},\n          gremlin: {\n            shape: 'S18'\n          },\n          sparql: {\n            shape: 'S18'\n          },\n          opencypher: {\n            shape: 'S18'\n          },\n          labMode: {\n            shape: 'S19'\n          },\n          rollingBackTrxCount: {\n            type: 'integer'\n          },\n          rollingBackTrxEarliestStartTime: {},\n          features: {\n            type: 'map',\n            key: {},\n            value: {\n              shape: 'S10'\n            }\n          },\n          settings: {\n            shape: 'S19'\n          }\n        }\n      }\n    },\n    GetGremlinQueryStatus: {\n      http: {\n        method: 'GET',\n        requestUri: '/gremlin/status/{queryId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'queryId'\n        ],\n        members: {\n          queryId: {\n            location: 'uri',\n            locationName: 'queryId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          queryId: {},\n          queryString: {},\n          queryEvalStats: {\n            shape: 'S1d'\n          }\n        }\n      }\n    },\n    GetLoaderJobStatus: {\n      http: {\n        method: 'GET',\n        requestUri: '/loader/{loadId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'loadId'\n        ],\n        members: {\n          loadId: {\n            location: 'uri',\n            locationName: 'loadId'\n          },\n          details: {\n            location: 'querystring',\n            locationName: 'details',\n            type: 'boolean'\n          },\n          errors: {\n            location: 'querystring',\n            locationName: 'errors',\n            type: 'boolean'\n          },\n          page: {\n            location: 'querystring',\n            locationName: 'page',\n            type: 'integer'\n          },\n          errorsPerPage: {\n            location: 'querystring',\n            locationName: 'errorsPerPage',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status',\n          'payload'\n        ],\n        members: {\n          status: {},\n          payload: {\n            shape: 'S10'\n          }\n        }\n      }\n    },\n    GetMLDataProcessingJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/ml/dataprocessing/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {},\n          id: {},\n          processingJob: {\n            shape: 'S1j'\n          }\n        }\n      }\n    },\n    GetMLEndpoint: {\n      http: {\n        method: 'GET',\n        requestUri: '/ml/endpoints/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {},\n          id: {},\n          endpoint: {\n            shape: 'S1j'\n          },\n          endpointConfig: {\n            shape: 'S1m'\n          }\n        }\n      }\n    },\n    GetMLModelTrainingJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/ml/modeltraining/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {},\n          id: {},\n          processingJob: {\n            shape: 'S1j'\n          },\n          hpoJob: {\n            shape: 'S1j'\n          },\n          modelTransformJob: {\n            shape: 'S1j'\n          },\n          mlModels: {\n            type: 'list',\n            member: {\n              shape: 'S1m'\n            }\n          }\n        }\n      }\n    },\n    GetMLModelTransformJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/ml/modeltransform/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {},\n          id: {},\n          baseProcessingJob: {\n            shape: 'S1j'\n          },\n          remoteModelTransformJob: {\n            shape: 'S1j'\n          },\n          models: {\n            type: 'list',\n            member: {\n              shape: 'S1m'\n            }\n          }\n        }\n      }\n    },\n    GetOpenCypherQueryStatus: {\n      http: {\n        method: 'GET',\n        requestUri: '/opencypher/status/{queryId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'queryId'\n        ],\n        members: {\n          queryId: {\n            location: 'uri',\n            locationName: 'queryId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          queryId: {},\n          queryString: {},\n          queryEvalStats: {\n            shape: 'S1d'\n          }\n        }\n      }\n    },\n    GetPropertygraphStatistics: {\n      http: {\n        method: 'GET',\n        requestUri: '/propertygraph/statistics',\n        responseCode: 200\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status',\n          'payload'\n        ],\n        members: {\n          status: {},\n          payload: {\n            shape: 'S1w'\n          }\n        }\n      }\n    },\n    GetPropertygraphStream: {\n      http: {\n        method: 'GET',\n        requestUri: '/propertygraph/stream',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          limit: {\n            location: 'querystring',\n            locationName: 'limit',\n            type: 'long'\n          },\n          iteratorType: {\n            location: 'querystring',\n            locationName: 'iteratorType'\n          },\n          commitNum: {\n            location: 'querystring',\n            locationName: 'commitNum',\n            type: 'long'\n          },\n          opNum: {\n            location: 'querystring',\n            locationName: 'opNum',\n            type: 'long'\n          },\n          encoding: {\n            location: 'header',\n            locationName: 'Accept-Encoding'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'lastEventId',\n          'lastTrxTimestampInMillis',\n          'format',\n          'records',\n          'totalRecords'\n        ],\n        members: {\n          lastEventId: {\n            shape: 'S19'\n          },\n          lastTrxTimestampInMillis: {\n            locationName: 'lastTrxTimestamp',\n            type: 'long'\n          },\n          format: {},\n          records: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'commitTimestampInMillis',\n                'eventId',\n                'data',\n                'op'\n              ],\n              members: {\n                commitTimestampInMillis: {\n                  locationName: 'commitTimestamp',\n                  type: 'long'\n                },\n                eventId: {\n                  shape: 'S19'\n                },\n                data: {\n                  type: 'structure',\n                  required: [\n                    'id',\n                    'type',\n                    'key',\n                    'value'\n                  ],\n                  members: {\n                    id: {},\n                    type: {},\n                    key: {},\n                    value: {\n                      shape: 'S10'\n                    },\n                    from: {},\n                    to: {}\n                  }\n                },\n                op: {},\n                isLastOp: {\n                  type: 'boolean'\n                }\n              }\n            }\n          },\n          totalRecords: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    GetPropertygraphSummary: {\n      http: {\n        method: 'GET',\n        requestUri: '/propertygraph/statistics/summary',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          mode: {\n            location: 'querystring',\n            locationName: 'mode'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          statusCode: {\n            location: 'statusCode',\n            type: 'integer'\n          },\n          payload: {\n            type: 'structure',\n            members: {\n              version: {},\n              lastStatisticsComputationTime: {\n                shape: 'S1x'\n              },\n              graphSummary: {\n                type: 'structure',\n                members: {\n                  numNodes: {\n                    type: 'long'\n                  },\n                  numEdges: {\n                    type: 'long'\n                  },\n                  numNodeLabels: {\n                    type: 'long'\n                  },\n                  numEdgeLabels: {\n                    type: 'long'\n                  },\n                  nodeLabels: {\n                    type: 'list',\n                    member: {}\n                  },\n                  edgeLabels: {\n                    type: 'list',\n                    member: {}\n                  },\n                  numNodeProperties: {\n                    type: 'long'\n                  },\n                  numEdgeProperties: {\n                    type: 'long'\n                  },\n                  nodeProperties: {\n                    shape: 'S2e'\n                  },\n                  edgeProperties: {\n                    shape: 'S2e'\n                  },\n                  totalNodePropertyValues: {\n                    type: 'long'\n                  },\n                  totalEdgePropertyValues: {\n                    type: 'long'\n                  },\n                  nodeStructures: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      members: {\n                        count: {\n                          type: 'long'\n                        },\n                        nodeProperties: {\n                          type: 'list',\n                          member: {}\n                        },\n                        distinctOutgoingEdgeLabels: {\n                          type: 'list',\n                          member: {}\n                        }\n                      }\n                    }\n                  },\n                  edgeStructures: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      members: {\n                        count: {\n                          type: 'long'\n                        },\n                        edgeProperties: {\n                          type: 'list',\n                          member: {}\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    GetRDFGraphSummary: {\n      http: {\n        method: 'GET',\n        requestUri: '/rdf/statistics/summary',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          mode: {\n            location: 'querystring',\n            locationName: 'mode'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          statusCode: {\n            location: 'statusCode',\n            type: 'integer'\n          },\n          payload: {\n            type: 'structure',\n            members: {\n              version: {},\n              lastStatisticsComputationTime: {\n                shape: 'S1x'\n              },\n              graphSummary: {\n                type: 'structure',\n                members: {\n                  numDistinctSubjects: {\n                    type: 'long'\n                  },\n                  numDistinctPredicates: {\n                    type: 'long'\n                  },\n                  numQuads: {\n                    type: 'long'\n                  },\n                  numClasses: {\n                    type: 'long'\n                  },\n                  classes: {\n                    type: 'list',\n                    member: {}\n                  },\n                  predicates: {\n                    shape: 'S2e'\n                  },\n                  subjectStructures: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      members: {\n                        count: {\n                          type: 'long'\n                        },\n                        predicates: {\n                          type: 'list',\n                          member: {}\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    GetSparqlStatistics: {\n      http: {\n        method: 'GET',\n        requestUri: '/sparql/statistics',\n        responseCode: 200\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status',\n          'payload'\n        ],\n        members: {\n          status: {},\n          payload: {\n            shape: 'S1w'\n          }\n        }\n      }\n    },\n    GetSparqlStream: {\n      http: {\n        method: 'GET',\n        requestUri: '/sparql/stream',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          limit: {\n            location: 'querystring',\n            locationName: 'limit',\n            type: 'long'\n          },\n          iteratorType: {\n            location: 'querystring',\n            locationName: 'iteratorType'\n          },\n          commitNum: {\n            location: 'querystring',\n            locationName: 'commitNum',\n            type: 'long'\n          },\n          opNum: {\n            location: 'querystring',\n            locationName: 'opNum',\n            type: 'long'\n          },\n          encoding: {\n            location: 'header',\n            locationName: 'Accept-Encoding'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'lastEventId',\n          'lastTrxTimestampInMillis',\n          'format',\n          'records',\n          'totalRecords'\n        ],\n        members: {\n          lastEventId: {\n            shape: 'S19'\n          },\n          lastTrxTimestampInMillis: {\n            locationName: 'lastTrxTimestamp',\n            type: 'long'\n          },\n          format: {},\n          records: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'commitTimestampInMillis',\n                'eventId',\n                'data',\n                'op'\n              ],\n              members: {\n                commitTimestampInMillis: {\n                  locationName: 'commitTimestamp',\n                  type: 'long'\n                },\n                eventId: {\n                  shape: 'S19'\n                },\n                data: {\n                  type: 'structure',\n                  required: [\n                    'stmt'\n                  ],\n                  members: {\n                    stmt: {}\n                  }\n                },\n                op: {},\n                isLastOp: {\n                  type: 'boolean'\n                }\n              }\n            }\n          },\n          totalRecords: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    ListGremlinQueries: {\n      http: {\n        method: 'GET',\n        requestUri: '/gremlin/status',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          includeWaiting: {\n            location: 'querystring',\n            locationName: 'includeWaiting',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          acceptedQueryCount: {\n            type: 'integer'\n          },\n          runningQueryCount: {\n            type: 'integer'\n          },\n          queries: {\n            type: 'list',\n            member: {\n              shape: 'S35'\n            }\n          }\n        }\n      }\n    },\n    ListLoaderJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/loader',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          limit: {\n            location: 'querystring',\n            locationName: 'limit',\n            type: 'integer'\n          },\n          includeQueuedLoads: {\n            location: 'querystring',\n            locationName: 'includeQueuedLoads',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status',\n          'payload'\n        ],\n        members: {\n          status: {},\n          payload: {\n            type: 'structure',\n            members: {\n              loadIds: {\n                shape: 'S3a'\n              }\n            }\n          }\n        }\n      }\n    },\n    ListMLDataProcessingJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/ml/dataprocessing',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxItems: {\n            location: 'querystring',\n            locationName: 'maxItems',\n            type: 'integer'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ids: {\n            shape: 'S3a'\n          }\n        }\n      }\n    },\n    ListMLEndpoints: {\n      http: {\n        method: 'GET',\n        requestUri: '/ml/endpoints',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxItems: {\n            location: 'querystring',\n            locationName: 'maxItems',\n            type: 'integer'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ids: {\n            shape: 'S3a'\n          }\n        }\n      }\n    },\n    ListMLModelTrainingJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/ml/modeltraining',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxItems: {\n            location: 'querystring',\n            locationName: 'maxItems',\n            type: 'integer'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ids: {\n            shape: 'S3a'\n          }\n        }\n      }\n    },\n    ListMLModelTransformJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/ml/modeltransform',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxItems: {\n            location: 'querystring',\n            locationName: 'maxItems',\n            type: 'integer'\n          },\n          neptuneIamRoleArn: {\n            location: 'querystring',\n            locationName: 'neptuneIamRoleArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ids: {\n            shape: 'S3a'\n          }\n        }\n      }\n    },\n    ListOpenCypherQueries: {\n      http: {\n        method: 'GET',\n        requestUri: '/opencypher/status',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          includeWaiting: {\n            location: 'querystring',\n            locationName: 'includeWaiting',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          acceptedQueryCount: {\n            type: 'integer'\n          },\n          runningQueryCount: {\n            type: 'integer'\n          },\n          queries: {\n            type: 'list',\n            member: {\n              shape: 'S35'\n            }\n          }\n        }\n      }\n    },\n    ManagePropertygraphStatistics: {\n      http: {\n        requestUri: '/propertygraph/statistics',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          mode: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status'\n        ],\n        members: {\n          status: {},\n          payload: {\n            shape: 'S3t'\n          }\n        }\n      },\n      idempotent: true\n    },\n    ManageSparqlStatistics: {\n      http: {\n        requestUri: '/sparql/statistics',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          mode: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status'\n        ],\n        members: {\n          status: {},\n          payload: {\n            shape: 'S3t'\n          }\n        }\n      },\n      idempotent: true\n    },\n    StartLoaderJob: {\n      http: {\n        requestUri: '/loader',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'source',\n          'format',\n          's3BucketRegion',\n          'iamRoleArn'\n        ],\n        members: {\n          source: {},\n          format: {},\n          s3BucketRegion: {\n            locationName: 'region'\n          },\n          iamRoleArn: {},\n          mode: {},\n          failOnError: {\n            type: 'boolean'\n          },\n          parallelism: {},\n          parserConfiguration: {\n            shape: 'S19'\n          },\n          updateSingleCardinalityProperties: {\n            type: 'boolean'\n          },\n          queueRequest: {\n            type: 'boolean'\n          },\n          dependencies: {\n            shape: 'S3a'\n          },\n          userProvidedEdgeIds: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status',\n          'payload'\n        ],\n        members: {\n          status: {},\n          payload: {\n            shape: 'S19'\n          }\n        }\n      },\n      idempotent: true\n    },\n    StartMLDataProcessingJob: {\n      http: {\n        requestUri: '/ml/dataprocessing',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'inputDataS3Location',\n          'processedDataS3Location'\n        ],\n        members: {\n          id: {},\n          previousDataProcessingJobId: {},\n          inputDataS3Location: {},\n          processedDataS3Location: {},\n          sagemakerIamRoleArn: {},\n          neptuneIamRoleArn: {},\n          processingInstanceType: {},\n          processingInstanceVolumeSizeInGB: {\n            type: 'integer'\n          },\n          processingTimeOutInSeconds: {\n            type: 'integer'\n          },\n          modelType: {},\n          configFileName: {},\n          subnets: {\n            shape: 'S3a'\n          },\n          securityGroupIds: {\n            shape: 'S3a'\n          },\n          volumeEncryptionKMSKey: {},\n          s3OutputEncryptionKMSKey: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          arn: {},\n          creationTimeInMillis: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    StartMLModelTrainingJob: {\n      http: {\n        requestUri: '/ml/modeltraining',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'dataProcessingJobId',\n          'trainModelS3Location'\n        ],\n        members: {\n          id: {},\n          previousModelTrainingJobId: {},\n          dataProcessingJobId: {},\n          trainModelS3Location: {},\n          sagemakerIamRoleArn: {},\n          neptuneIamRoleArn: {},\n          baseProcessingInstanceType: {},\n          trainingInstanceType: {},\n          trainingInstanceVolumeSizeInGB: {\n            type: 'integer'\n          },\n          trainingTimeOutInSeconds: {\n            type: 'integer'\n          },\n          maxHPONumberOfTrainingJobs: {\n            type: 'integer'\n          },\n          maxHPOParallelTrainingJobs: {\n            type: 'integer'\n          },\n          subnets: {\n            shape: 'S3a'\n          },\n          securityGroupIds: {\n            shape: 'S3a'\n          },\n          volumeEncryptionKMSKey: {},\n          s3OutputEncryptionKMSKey: {},\n          enableManagedSpotTraining: {\n            type: 'boolean'\n          },\n          customModelTrainingParameters: {\n            type: 'structure',\n            required: [\n              'sourceS3DirectoryPath'\n            ],\n            members: {\n              sourceS3DirectoryPath: {},\n              trainingEntryPointScript: {},\n              transformEntryPointScript: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          arn: {},\n          creationTimeInMillis: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    StartMLModelTransformJob: {\n      http: {\n        requestUri: '/ml/modeltransform',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'modelTransformOutputS3Location'\n        ],\n        members: {\n          id: {},\n          dataProcessingJobId: {},\n          mlModelTrainingJobId: {},\n          trainingJobName: {},\n          modelTransformOutputS3Location: {},\n          sagemakerIamRoleArn: {},\n          neptuneIamRoleArn: {},\n          customModelTransformParameters: {\n            type: 'structure',\n            required: [\n              'sourceS3DirectoryPath'\n            ],\n            members: {\n              sourceS3DirectoryPath: {},\n              transformEntryPointScript: {}\n            }\n          },\n          baseProcessingInstanceType: {},\n          baseProcessingInstanceVolumeSizeInGB: {\n            type: 'integer'\n          },\n          subnets: {\n            shape: 'S3a'\n          },\n          securityGroupIds: {\n            shape: 'S3a'\n          },\n          volumeEncryptionKMSKey: {},\n          s3OutputEncryptionKMSKey: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          arn: {},\n          creationTimeInMillis: {\n            type: 'long'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    Sm: {\n      type: 'structure',\n      members: {\n        active: {\n          type: 'boolean'\n        },\n        statisticsId: {}\n      }\n    },\n    S10: {\n      type: 'structure',\n      members: {},\n      document: true\n    },\n    S18: {\n      type: 'structure',\n      required: [\n        'version'\n      ],\n      members: {\n        version: {}\n      }\n    },\n    S19: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1d: {\n      type: 'structure',\n      members: {\n        waited: {\n          type: 'integer'\n        },\n        elapsed: {\n          type: 'integer'\n        },\n        cancelled: {\n          type: 'boolean'\n        },\n        subqueries: {\n          shape: 'S10'\n        }\n      }\n    },\n    S1j: {\n      type: 'structure',\n      members: {\n        name: {},\n        arn: {},\n        status: {},\n        outputLocation: {},\n        failureReason: {},\n        cloudwatchLogUrl: {}\n      }\n    },\n    S1m: {\n      type: 'structure',\n      members: {\n        name: {},\n        arn: {}\n      }\n    },\n    S1w: {\n      type: 'structure',\n      members: {\n        autoCompute: {\n          type: 'boolean'\n        },\n        active: {\n          type: 'boolean'\n        },\n        statisticsId: {},\n        date: {\n          shape: 'S1x'\n        },\n        note: {},\n        signatureInfo: {\n          type: 'structure',\n          members: {\n            signatureCount: {\n              type: 'integer'\n            },\n            instanceCount: {\n              type: 'integer'\n            },\n            predicateCount: {\n              type: 'integer'\n            }\n          }\n        }\n      }\n    },\n    S1x: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    S2e: {\n      type: 'list',\n      member: {\n        type: 'map',\n        key: {},\n        value: {\n          type: 'long'\n        }\n      }\n    },\n    S35: {\n      type: 'structure',\n      members: {\n        queryId: {},\n        queryString: {},\n        queryEvalStats: {\n          shape: 'S1d'\n        }\n      }\n    },\n    S3a: {\n      type: 'list',\n      member: {}\n    },\n    S3t: {\n      type: 'structure',\n      members: {\n        statisticsId: {}\n      }\n    }\n  }\n}"]}