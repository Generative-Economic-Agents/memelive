{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/arc-zonal-shift-2022-10-30.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CancelZonalShift","http","method","requestUri","responseCode","input","type","required","members","zonalShiftId","location","locationName","output","shape","CreatePracticeRunConfiguration","blockedDates","blockedWindows","blockingAlarms","outcomeAlarms","resourceIdentifier","arn","name","practiceRunConfiguration","zonalAutoshiftStatus","DeletePracticeRunConfiguration","idempotent","GetManagedResource","appliedWeights","autoshifts","zonalShifts","ListAutoshifts","maxResults","nextToken","status","items","member","awayFrom","endTime","startTime","ListManagedResources","availabilityZones","practiceRunStatus","ListZonalShifts","comment","expiryTime","practiceRunOutcome","StartZonalShift","expiresIn","UpdatePracticeRunConfiguration","UpdateZonalAutoshiftConfiguration","UpdateZonalShift","shapes","S3","Sb","Sd","Sf","alarmIdentifier","Sl","Sr","key","value","St","appliedStatus","Sw"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2022-10-30',\n    endpointPrefix: 'arc-zonal-shift',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS ARC - Zonal Shift',\n    serviceId: 'ARC Zonal Shift',\n    signatureVersion: 'v4',\n    signingName: 'arc-zonal-shift',\n    uid: 'arc-zonal-shift-2022-10-30'\n  },\n  operations: {\n    CancelZonalShift: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/zonalshifts/{zonalShiftId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'zonalShiftId'\n        ],\n        members: {\n          zonalShiftId: {\n            location: 'uri',\n            locationName: 'zonalShiftId'\n          }\n        }\n      },\n      output: {\n        shape: 'S3'\n      }\n    },\n    CreatePracticeRunConfiguration: {\n      http: {\n        requestUri: '/configuration',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'outcomeAlarms',\n          'resourceIdentifier'\n        ],\n        members: {\n          blockedDates: {\n            shape: 'Sb'\n          },\n          blockedWindows: {\n            shape: 'Sd'\n          },\n          blockingAlarms: {\n            shape: 'Sf'\n          },\n          outcomeAlarms: {\n            shape: 'Sf'\n          },\n          resourceIdentifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'name',\n          'practiceRunConfiguration',\n          'zonalAutoshiftStatus'\n        ],\n        members: {\n          arn: {},\n          name: {},\n          practiceRunConfiguration: {\n            shape: 'Sl'\n          },\n          zonalAutoshiftStatus: {}\n        }\n      }\n    },\n    DeletePracticeRunConfiguration: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/configuration/{resourceIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceIdentifier'\n        ],\n        members: {\n          resourceIdentifier: {\n            location: 'uri',\n            locationName: 'resourceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'name',\n          'zonalAutoshiftStatus'\n        ],\n        members: {\n          arn: {},\n          name: {},\n          zonalAutoshiftStatus: {}\n        }\n      },\n      idempotent: true\n    },\n    GetManagedResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/managedresources/{resourceIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceIdentifier'\n        ],\n        members: {\n          resourceIdentifier: {\n            location: 'uri',\n            locationName: 'resourceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'appliedWeights',\n          'zonalShifts'\n        ],\n        members: {\n          appliedWeights: {\n            shape: 'Sr'\n          },\n          arn: {},\n          autoshifts: {\n            shape: 'St'\n          },\n          name: {},\n          practiceRunConfiguration: {\n            shape: 'Sl'\n          },\n          zonalAutoshiftStatus: {},\n          zonalShifts: {\n            shape: 'Sw'\n          }\n        }\n      }\n    },\n    ListAutoshifts: {\n      http: {\n        method: 'GET',\n        requestUri: '/autoshifts',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          status: {\n            location: 'querystring',\n            locationName: 'status'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'awayFrom',\n                'endTime',\n                'startTime',\n                'status'\n              ],\n              members: {\n                awayFrom: {},\n                endTime: {\n                  type: 'timestamp'\n                },\n                startTime: {\n                  type: 'timestamp'\n                },\n                status: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListManagedResources: {\n      http: {\n        method: 'GET',\n        requestUri: '/managedresources',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'availabilityZones'\n              ],\n              members: {\n                appliedWeights: {\n                  shape: 'Sr'\n                },\n                arn: {},\n                autoshifts: {\n                  shape: 'St'\n                },\n                availabilityZones: {\n                  type: 'list',\n                  member: {}\n                },\n                name: {},\n                practiceRunStatus: {},\n                zonalAutoshiftStatus: {},\n                zonalShifts: {\n                  shape: 'Sw'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListZonalShifts: {\n      http: {\n        method: 'GET',\n        requestUri: '/zonalshifts',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          resourceIdentifier: {\n            location: 'querystring',\n            locationName: 'resourceIdentifier'\n          },\n          status: {\n            location: 'querystring',\n            locationName: 'status'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'awayFrom',\n                'comment',\n                'expiryTime',\n                'resourceIdentifier',\n                'startTime',\n                'status',\n                'zonalShiftId'\n              ],\n              members: {\n                awayFrom: {},\n                comment: {},\n                expiryTime: {\n                  type: 'timestamp'\n                },\n                practiceRunOutcome: {},\n                resourceIdentifier: {},\n                startTime: {\n                  type: 'timestamp'\n                },\n                status: {},\n                zonalShiftId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    StartZonalShift: {\n      http: {\n        requestUri: '/zonalshifts',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'awayFrom',\n          'comment',\n          'expiresIn',\n          'resourceIdentifier'\n        ],\n        members: {\n          awayFrom: {},\n          comment: {},\n          expiresIn: {},\n          resourceIdentifier: {}\n        }\n      },\n      output: {\n        shape: 'S3'\n      }\n    },\n    UpdatePracticeRunConfiguration: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/configuration/{resourceIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceIdentifier'\n        ],\n        members: {\n          blockedDates: {\n            shape: 'Sb'\n          },\n          blockedWindows: {\n            shape: 'Sd'\n          },\n          blockingAlarms: {\n            shape: 'Sf'\n          },\n          outcomeAlarms: {\n            shape: 'Sf'\n          },\n          resourceIdentifier: {\n            location: 'uri',\n            locationName: 'resourceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'name',\n          'practiceRunConfiguration',\n          'zonalAutoshiftStatus'\n        ],\n        members: {\n          arn: {},\n          name: {},\n          practiceRunConfiguration: {\n            shape: 'Sl'\n          },\n          zonalAutoshiftStatus: {}\n        }\n      }\n    },\n    UpdateZonalAutoshiftConfiguration: {\n      http: {\n        method: 'PUT',\n        requestUri: '/managedresources/{resourceIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceIdentifier',\n          'zonalAutoshiftStatus'\n        ],\n        members: {\n          resourceIdentifier: {\n            location: 'uri',\n            locationName: 'resourceIdentifier'\n          },\n          zonalAutoshiftStatus: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'resourceIdentifier',\n          'zonalAutoshiftStatus'\n        ],\n        members: {\n          resourceIdentifier: {},\n          zonalAutoshiftStatus: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateZonalShift: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/zonalshifts/{zonalShiftId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'zonalShiftId'\n        ],\n        members: {\n          comment: {},\n          expiresIn: {},\n          zonalShiftId: {\n            location: 'uri',\n            locationName: 'zonalShiftId'\n          }\n        }\n      },\n      output: {\n        shape: 'S3'\n      }\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'structure',\n      required: [\n        'awayFrom',\n        'comment',\n        'expiryTime',\n        'resourceIdentifier',\n        'startTime',\n        'status',\n        'zonalShiftId'\n      ],\n      members: {\n        awayFrom: {},\n        comment: {},\n        expiryTime: {\n          type: 'timestamp'\n        },\n        resourceIdentifier: {},\n        startTime: {\n          type: 'timestamp'\n        },\n        status: {},\n        zonalShiftId: {}\n      }\n    },\n    Sb: {\n      type: 'list',\n      member: {}\n    },\n    Sd: {\n      type: 'list',\n      member: {}\n    },\n    Sf: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'alarmIdentifier',\n          'type'\n        ],\n        members: {\n          alarmIdentifier: {},\n          type: {}\n        }\n      }\n    },\n    Sl: {\n      type: 'structure',\n      required: [\n        'outcomeAlarms'\n      ],\n      members: {\n        blockedDates: {\n          shape: 'Sb'\n        },\n        blockedWindows: {\n          shape: 'Sd'\n        },\n        blockingAlarms: {\n          shape: 'Sf'\n        },\n        outcomeAlarms: {\n          shape: 'Sf'\n        }\n      }\n    },\n    Sr: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'float'\n      }\n    },\n    St: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'appliedStatus',\n          'awayFrom',\n          'startTime'\n        ],\n        members: {\n          appliedStatus: {},\n          awayFrom: {},\n          startTime: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    Sw: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'appliedStatus',\n          'awayFrom',\n          'comment',\n          'expiryTime',\n          'resourceIdentifier',\n          'startTime',\n          'zonalShiftId'\n        ],\n        members: {\n          appliedStatus: {},\n          awayFrom: {},\n          comment: {},\n          expiryTime: {\n            type: 'timestamp'\n          },\n          practiceRunOutcome: {},\n          resourceIdentifier: {},\n          startTime: {\n            type: 'timestamp'\n          },\n          zonalShiftId: {}\n        }\n      }\n    }\n  }\n}"]}