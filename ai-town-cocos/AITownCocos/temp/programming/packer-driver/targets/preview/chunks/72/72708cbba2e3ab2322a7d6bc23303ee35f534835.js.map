{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/elasticloadbalancingv2-2015-12-01.waiters2.json"],"names":["version","waiters","LoadBalancerExists","delay","operation","maxAttempts","acceptors","matcher","expected","state","LoadBalancerAvailable","argument","LoadBalancersDeleted","TargetInService","TargetDeregistered"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,CADI;AAEbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,kBAAkB,EAAE;AAClBC,YAAAA,KAAK,EAAE,EADW;AAElBC,YAAAA,SAAS,EAAE,uBAFO;AAGlBC,YAAAA,WAAW,EAAE,EAHK;AAIlBC,YAAAA,SAAS,EAAE,CACT;AACEC,cAAAA,OAAO,EAAE,QADX;AAEEC,cAAAA,QAAQ,EAAE,GAFZ;AAGEC,cAAAA,KAAK,EAAE;AAHT,aADS,EAMT;AACEF,cAAAA,OAAO,EAAE,OADX;AAEEC,cAAAA,QAAQ,EAAE,sBAFZ;AAGEC,cAAAA,KAAK,EAAE;AAHT,aANS;AAJO,WADb;AAkBPC,UAAAA,qBAAqB,EAAE;AACrBP,YAAAA,KAAK,EAAE,EADc;AAErBC,YAAAA,SAAS,EAAE,uBAFU;AAGrBC,YAAAA,WAAW,EAAE,EAHQ;AAIrBC,YAAAA,SAAS,EAAE,CACT;AACEG,cAAAA,KAAK,EAAE,SADT;AAEEF,cAAAA,OAAO,EAAE,SAFX;AAGEI,cAAAA,QAAQ,EAAE,4BAHZ;AAIEH,cAAAA,QAAQ,EAAE;AAJZ,aADS,EAOT;AACEC,cAAAA,KAAK,EAAE,OADT;AAEEF,cAAAA,OAAO,EAAE,SAFX;AAGEI,cAAAA,QAAQ,EAAE,4BAHZ;AAIEH,cAAAA,QAAQ,EAAE;AAJZ,aAPS,EAaT;AACEC,cAAAA,KAAK,EAAE,OADT;AAEEF,cAAAA,OAAO,EAAE,OAFX;AAGEC,cAAAA,QAAQ,EAAE;AAHZ,aAbS;AAJU,WAlBhB;AA0CPI,UAAAA,oBAAoB,EAAE;AACpBT,YAAAA,KAAK,EAAE,EADa;AAEpBC,YAAAA,SAAS,EAAE,uBAFS;AAGpBC,YAAAA,WAAW,EAAE,EAHO;AAIpBC,YAAAA,SAAS,EAAE,CACT;AACEG,cAAAA,KAAK,EAAE,OADT;AAEEF,cAAAA,OAAO,EAAE,SAFX;AAGEI,cAAAA,QAAQ,EAAE,4BAHZ;AAIEH,cAAAA,QAAQ,EAAE;AAJZ,aADS,EAOT;AACED,cAAAA,OAAO,EAAE,OADX;AAEEC,cAAAA,QAAQ,EAAE,sBAFZ;AAGEC,cAAAA,KAAK,EAAE;AAHT,aAPS;AAJS,WA1Cf;AA4DPI,UAAAA,eAAe,EAAE;AACfV,YAAAA,KAAK,EAAE,EADQ;AAEfE,YAAAA,WAAW,EAAE,EAFE;AAGfD,YAAAA,SAAS,EAAE,sBAHI;AAIfE,YAAAA,SAAS,EAAE,CACT;AACEK,cAAAA,QAAQ,EAAE,+CADZ;AAEEH,cAAAA,QAAQ,EAAE,SAFZ;AAGED,cAAAA,OAAO,EAAE,SAHX;AAIEE,cAAAA,KAAK,EAAE;AAJT,aADS,EAOT;AACEF,cAAAA,OAAO,EAAE,OADX;AAEEC,cAAAA,QAAQ,EAAE,iBAFZ;AAGEC,cAAAA,KAAK,EAAE;AAHT,aAPS;AAJI,WA5DV;AA8EPK,UAAAA,kBAAkB,EAAE;AAClBX,YAAAA,KAAK,EAAE,EADW;AAElBE,YAAAA,WAAW,EAAE,EAFK;AAGlBD,YAAAA,SAAS,EAAE,sBAHO;AAIlBE,YAAAA,SAAS,EAAE,CACT;AACEC,cAAAA,OAAO,EAAE,OADX;AAEEC,cAAAA,QAAQ,EAAE,eAFZ;AAGEC,cAAAA,KAAK,EAAE;AAHT,aADS,EAMT;AACEE,cAAAA,QAAQ,EAAE,+CADZ;AAEEH,cAAAA,QAAQ,EAAE,QAFZ;AAGED,cAAAA,OAAO,EAAE,SAHX;AAIEE,cAAAA,KAAK,EAAE;AAJT,aANS;AAJO;AA9Eb;AAFI,O","sourcesContent":["export default {\n  version: 2,\n  waiters: {\n    LoadBalancerExists: {\n      delay: 15,\n      operation: 'DescribeLoadBalancers',\n      maxAttempts: 40,\n      acceptors: [\n        {\n          matcher: 'status',\n          expected: 200,\n          state: 'success'\n        },\n        {\n          matcher: 'error',\n          expected: 'LoadBalancerNotFound',\n          state: 'retry'\n        }\n      ]\n    },\n    LoadBalancerAvailable: {\n      delay: 15,\n      operation: 'DescribeLoadBalancers',\n      maxAttempts: 40,\n      acceptors: [\n        {\n          state: 'success',\n          matcher: 'pathAll',\n          argument: 'LoadBalancers[].State.Code',\n          expected: 'active'\n        },\n        {\n          state: 'retry',\n          matcher: 'pathAny',\n          argument: 'LoadBalancers[].State.Code',\n          expected: 'provisioning'\n        },\n        {\n          state: 'retry',\n          matcher: 'error',\n          expected: 'LoadBalancerNotFound'\n        }\n      ]\n    },\n    LoadBalancersDeleted: {\n      delay: 15,\n      operation: 'DescribeLoadBalancers',\n      maxAttempts: 40,\n      acceptors: [\n        {\n          state: 'retry',\n          matcher: 'pathAll',\n          argument: 'LoadBalancers[].State.Code',\n          expected: 'active'\n        },\n        {\n          matcher: 'error',\n          expected: 'LoadBalancerNotFound',\n          state: 'success'\n        }\n      ]\n    },\n    TargetInService: {\n      delay: 15,\n      maxAttempts: 40,\n      operation: 'DescribeTargetHealth',\n      acceptors: [\n        {\n          argument: 'TargetHealthDescriptions[].TargetHealth.State',\n          expected: 'healthy',\n          matcher: 'pathAll',\n          state: 'success'\n        },\n        {\n          matcher: 'error',\n          expected: 'InvalidInstance',\n          state: 'retry'\n        }\n      ]\n    },\n    TargetDeregistered: {\n      delay: 15,\n      maxAttempts: 40,\n      operation: 'DescribeTargetHealth',\n      acceptors: [\n        {\n          matcher: 'error',\n          expected: 'InvalidTarget',\n          state: 'success'\n        },\n        {\n          argument: 'TargetHealthDescriptions[].TargetHealth.State',\n          expected: 'unused',\n          matcher: 'pathAll',\n          state: 'success'\n        }\n      ]\n    }\n  }\n}"]}