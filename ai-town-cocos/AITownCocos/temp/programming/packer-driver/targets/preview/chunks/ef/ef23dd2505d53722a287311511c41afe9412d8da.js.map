{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/ajv/lib/compile/index.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","url","define","exports","require","module","__filename","__dirname","resolve","util","errorClasses","stableStringify","validateGenerator","ucs2length","equal","ValidationError","Validation","compile","schema","root","localRefs","baseId","self","opts","_opts","refVal","undefined","refs","patterns","patternsHash","defaults","defaultsHash","customRules","c","checkCompiling","call","compilation","_compilations","index","compiling","callValidate","formats","_formats","RULES","v","localCompile","validate","cv","errors","$async","sourceCode","source","endCompiling","result","apply","arguments","_schema","_root","isRoot","isTop","schemaPath","errSchemaPath","errorPath","MissingRefError","MissingRef","resolveRef","usePattern","useDefault","useCustomRule","logger","vars","refValCode","patternCode","defaultCode","customRuleCode","processCode","makeValidate","Function","e","error","code","ref","refIndex","_refVal","refCode","resolvedRef","rootRefId","addLocalRef","localSchema","inlineRef","inlineRefs","removeLocalRef","replaceLocalRef","refId","length","inline","regexStr","value","toQuotedString","valueStr","rule","parentSchema","it","validateSchema","deps","definition","dependencies","every","keyword","Object","prototype","hasOwnProperty","Error","join","valid","message","errorsText","macro","compIndex","i","splice","arr","statement","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './resolve';\nimport { __cjsMetaURL as _req0} from './util';\nimport { __cjsMetaURL as _req1} from './error_classes';\nimport { __cjsMetaURL as _req2} from 'fast-json-stable-stringify';\nimport { __cjsMetaURL as _req3} from '../dotjs/validate';\nimport { __cjsMetaURL as _req4} from 'fast-deep-equal';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n 'use strict';\n\n var resolve = require('./resolve')\n   , util = require('./util')\n   , errorClasses = require('./error_classes')\n   , stableStringify = require('fast-json-stable-stringify');\n\n var validateGenerator = require('../dotjs/validate');\n\n /**\n  * Functions below are used inside compiled validations function\n  */\n\n var ucs2length = util.ucs2length;\n var equal = require('fast-deep-equal');\n\n // this error is thrown by async schemas to return validation errors via exception\n var ValidationError = errorClasses.Validation;\n\n module.exports = compile;\n\n\n /**\n  * Compiles schema to validation function\n  * @this   Ajv\n  * @param  {Object} schema schema object\n  * @param  {Object} root object with information about the root schema for this schema\n  * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n  * @param  {String} baseId base ID for IDs in the schema\n  * @return {Function} validation function\n  */\n function compile(schema, root, localRefs, baseId) {\n   /* jshint validthis: true, evil: true */\n   /* eslint no-shadow: 0 */\n   var self = this\n     , opts = this._opts\n     , refVal = [ undefined ]\n     , refs = {}\n     , patterns = []\n     , patternsHash = {}\n     , defaults = []\n     , defaultsHash = {}\n     , customRules = [];\n\n   root = root || { schema: schema, refVal: refVal, refs: refs };\n\n   var c = checkCompiling.call(this, schema, root, baseId);\n   var compilation = this._compilations[c.index];\n   if (c.compiling) return (compilation.callValidate = callValidate);\n\n   var formats = this._formats;\n   var RULES = this.RULES;\n\n   try {\n     var v = localCompile(schema, root, localRefs, baseId);\n     compilation.validate = v;\n     var cv = compilation.callValidate;\n     if (cv) {\n       cv.schema = v.schema;\n       cv.errors = null;\n       cv.refs = v.refs;\n       cv.refVal = v.refVal;\n       cv.root = v.root;\n       cv.$async = v.$async;\n       if (opts.sourceCode) cv.source = v.source;\n     }\n     return v;\n   } finally {\n     endCompiling.call(this, schema, root, baseId);\n   }\n\n   /* @this   {*} - custom context, see passContext option */\n   function callValidate() {\n     /* jshint validthis: true */\n     var validate = compilation.validate;\n     var result = validate.apply(this, arguments);\n     callValidate.errors = validate.errors;\n     return result;\n   }\n\n   function localCompile(_schema, _root, localRefs, baseId) {\n     var isRoot = !_root || (_root && _root.schema == _schema);\n     if (_root.schema != root.schema)\n       return compile.call(self, _schema, _root, localRefs, baseId);\n\n     var $async = _schema.$async === true;\n\n     var sourceCode = validateGenerator({\n       isTop: true,\n       schema: _schema,\n       isRoot: isRoot,\n       baseId: baseId,\n       root: _root,\n       schemaPath: '',\n       errSchemaPath: '#',\n       errorPath: '\"\"',\n       MissingRefError: errorClasses.MissingRef,\n       RULES: RULES,\n       validate: validateGenerator,\n       util: util,\n       resolve: resolve,\n       resolveRef: resolveRef,\n       usePattern: usePattern,\n       useDefault: useDefault,\n       useCustomRule: useCustomRule,\n       opts: opts,\n       formats: formats,\n       logger: self.logger,\n       self: self\n     });\n\n     sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                    + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                    + sourceCode;\n\n     if (opts.processCode) sourceCode = opts.processCode(sourceCode, _schema);\n     // console.log('\\n\\n\\n *** \\n', JSON.stringify(sourceCode));\n     var validate;\n     try {\n       var makeValidate = new Function(\n         'self',\n         'RULES',\n         'formats',\n         'root',\n         'refVal',\n         'defaults',\n         'customRules',\n         'equal',\n         'ucs2length',\n         'ValidationError',\n         sourceCode\n       );\n\n       validate = makeValidate(\n         self,\n         RULES,\n         formats,\n         root,\n         refVal,\n         defaults,\n         customRules,\n         equal,\n         ucs2length,\n         ValidationError\n       );\n\n       refVal[0] = validate;\n     } catch(e) {\n       self.logger.error('Error compiling schema, function code:', sourceCode);\n       throw e;\n     }\n\n     validate.schema = _schema;\n     validate.errors = null;\n     validate.refs = refs;\n     validate.refVal = refVal;\n     validate.root = isRoot ? validate : _root;\n     if ($async) validate.$async = true;\n     if (opts.sourceCode === true) {\n       validate.source = {\n         code: sourceCode,\n         patterns: patterns,\n         defaults: defaults\n       };\n     }\n\n     return validate;\n   }\n\n   function resolveRef(baseId, ref, isRoot) {\n     ref = resolve.url(baseId, ref);\n     var refIndex = refs[ref];\n     var _refVal, refCode;\n     if (refIndex !== undefined) {\n       _refVal = refVal[refIndex];\n       refCode = 'refVal[' + refIndex + ']';\n       return resolvedRef(_refVal, refCode);\n     }\n     if (!isRoot && root.refs) {\n       var rootRefId = root.refs[ref];\n       if (rootRefId !== undefined) {\n         _refVal = root.refVal[rootRefId];\n         refCode = addLocalRef(ref, _refVal);\n         return resolvedRef(_refVal, refCode);\n       }\n     }\n\n     refCode = addLocalRef(ref);\n     var v = resolve.call(self, localCompile, root, ref);\n     if (v === undefined) {\n       var localSchema = localRefs && localRefs[ref];\n       if (localSchema) {\n         v = resolve.inlineRef(localSchema, opts.inlineRefs)\n             ? localSchema\n             : compile.call(self, localSchema, root, localRefs, baseId);\n       }\n     }\n\n     if (v === undefined) {\n       removeLocalRef(ref);\n     } else {\n       replaceLocalRef(ref, v);\n       return resolvedRef(v, refCode);\n     }\n   }\n\n   function addLocalRef(ref, v) {\n     var refId = refVal.length;\n     refVal[refId] = v;\n     refs[ref] = refId;\n     return 'refVal' + refId;\n   }\n\n   function removeLocalRef(ref) {\n     delete refs[ref];\n   }\n\n   function replaceLocalRef(ref, v) {\n     var refId = refs[ref];\n     refVal[refId] = v;\n   }\n\n   function resolvedRef(refVal, code) {\n     return typeof refVal == 'object' || typeof refVal == 'boolean'\n             ? { code: code, schema: refVal, inline: true }\n             : { code: code, $async: refVal && !!refVal.$async };\n   }\n\n   function usePattern(regexStr) {\n     var index = patternsHash[regexStr];\n     if (index === undefined) {\n       index = patternsHash[regexStr] = patterns.length;\n       patterns[index] = regexStr;\n     }\n     return 'pattern' + index;\n   }\n\n   function useDefault(value) {\n     switch (typeof value) {\n       case 'boolean':\n       case 'number':\n         return '' + value;\n       case 'string':\n         return util.toQuotedString(value);\n       case 'object':\n         if (value === null) return 'null';\n         var valueStr = stableStringify(value);\n         var index = defaultsHash[valueStr];\n         if (index === undefined) {\n           index = defaultsHash[valueStr] = defaults.length;\n           defaults[index] = value;\n         }\n         return 'default' + index;\n     }\n   }\n\n   function useCustomRule(rule, schema, parentSchema, it) {\n     if (self._opts.validateSchema !== false) {\n       var deps = rule.definition.dependencies;\n       if (deps && !deps.every(function(keyword) {\n         return Object.prototype.hasOwnProperty.call(parentSchema, keyword);\n       }))\n         throw new Error('parent schema must have all required keywords: ' + deps.join(','));\n\n       var validateSchema = rule.definition.validateSchema;\n       if (validateSchema) {\n         var valid = validateSchema(schema);\n         if (!valid) {\n           var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n           if (self._opts.validateSchema == 'log') self.logger.error(message);\n           else throw new Error(message);\n         }\n       }\n     }\n\n     var compile = rule.definition.compile\n       , inline = rule.definition.inline\n       , macro = rule.definition.macro;\n\n     var validate;\n     if (compile) {\n       validate = compile.call(self, schema, parentSchema, it);\n     } else if (macro) {\n       validate = macro.call(self, schema, parentSchema, it);\n       if (opts.validateSchema !== false) self.validateSchema(validate, true);\n     } else if (inline) {\n       validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n     } else {\n       validate = rule.definition.validate;\n       if (!validate) return;\n     }\n\n     if (validate === undefined)\n       throw new Error('custom keyword \"' + rule.keyword + '\"failed to compile');\n\n     var index = customRules.length;\n     customRules[index] = validate;\n\n     return {\n       code: 'customRule' + index,\n       validate: validate\n     };\n   }\n }\n\n\n /**\n  * Checks if the schema is currently compiled\n  * @this   Ajv\n  * @param  {Object} schema schema to compile\n  * @param  {Object} root root object\n  * @param  {String} baseId base schema ID\n  * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n  */\n function checkCompiling(schema, root, baseId) {\n   /* jshint validthis: true */\n   var index = compIndex.call(this, schema, root, baseId);\n   if (index >= 0) return { index: index, compiling: true };\n   index = this._compilations.length;\n   this._compilations[index] = {\n     schema: schema,\n     root: root,\n     baseId: baseId\n   };\n   return { index: index, compiling: false };\n }\n\n\n /**\n  * Removes the schema from the currently compiled list\n  * @this   Ajv\n  * @param  {Object} schema schema to compile\n  * @param  {Object} root root object\n  * @param  {String} baseId base schema ID\n  */\n function endCompiling(schema, root, baseId) {\n   /* jshint validthis: true */\n   var i = compIndex.call(this, schema, root, baseId);\n   if (i >= 0) this._compilations.splice(i, 1);\n }\n\n\n /**\n  * Index of schema compilation in the currently compiled list\n  * @this   Ajv\n  * @param  {Object} schema schema to compile\n  * @param  {Object} root root object\n  * @param  {String} baseId base schema ID\n  * @return {Integer} compilation index\n  */\n function compIndex(schema, root, baseId) {\n   /* jshint validthis: true */\n   for (var i=0; i<this._compilations.length; i++) {\n     var c = this._compilations[i];\n     if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n   }\n   return -1;\n }\n\n\n function patternCode(i, patterns) {\n   return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n }\n\n\n function defaultCode(i) {\n   return 'var default' + i + ' = defaults[' + i + '];';\n }\n\n\n function refValCode(i, refVal) {\n   return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\n }\n\n\n function customRuleCode(i) {\n   return 'var customRule' + i + ' = customRules[' + i + '];';\n }\n\n\n function vars(arr, statement) {\n   if (!arr.length) return '';\n   var code = '';\n   for (var i=0; i<arr.length; i++)\n     code += statement(i, arr);\n   return code;\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './resolve': _req,\n  './util': _req0,\n  './error_classes': _req1,\n  'fast-json-stable-stringify': _req2,\n  '../dotjs/validate': _req3,\n  'fast-deep-equal': _req4,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}