{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/sdb-2009-04-15.min.json"],"names":["metadata","apiVersion","endpointPrefix","serviceFullName","serviceId","signatureVersion","xmlNamespace","protocol","operations","BatchDeleteAttributes","input","type","required","members","DomainName","Items","member","locationName","Name","Attributes","shape","flattened","BatchPutAttributes","CreateDomain","DeleteAttributes","ItemName","Expected","DeleteDomain","DomainMetadata","output","resultWrapper","ItemCount","ItemNamesSizeBytes","AttributeNameCount","AttributeNamesSizeBytes","AttributeValueCount","AttributeValuesSizeBytes","Timestamp","GetAttributes","AttributeNames","ConsistentRead","ListDomains","MaxNumberOfDomains","NextToken","DomainNames","PutAttributes","Select","SelectExpression","AlternateNameEncoding","shapes","S5","Value","Sa","Replace","Sf","Exists","So","AlternateValueEncoding"],"mappings":"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","sourcesContent":["export default {\n  metadata: {\n    apiVersion: '2009-04-15',\n    endpointPrefix: 'sdb',\n    serviceFullName: 'Amazon SimpleDB',\n    serviceId: 'SimpleDB',\n    signatureVersion: 'v2',\n    xmlNamespace: 'http://sdb.amazonaws.com/doc/2009-04-15/',\n    protocol: 'query'\n  },\n  operations: {\n    BatchDeleteAttributes: {\n      input: {\n        type: 'structure',\n        required: [\n          'DomainName',\n          'Items'\n        ],\n        members: {\n          DomainName: {},\n          Items: {\n            type: 'list',\n            member: {\n              locationName: 'Item',\n              type: 'structure',\n              required: [\n                'Name'\n              ],\n              members: {\n                Name: {\n                  locationName: 'ItemName'\n                },\n                Attributes: {\n                  shape: 'S5'\n                }\n              }\n            },\n            flattened: true\n          }\n        }\n      }\n    },\n    BatchPutAttributes: {\n      input: {\n        type: 'structure',\n        required: [\n          'DomainName',\n          'Items'\n        ],\n        members: {\n          DomainName: {},\n          Items: {\n            type: 'list',\n            member: {\n              locationName: 'Item',\n              type: 'structure',\n              required: [\n                'Name',\n                'Attributes'\n              ],\n              members: {\n                Name: {\n                  locationName: 'ItemName'\n                },\n                Attributes: {\n                  shape: 'Sa'\n                }\n              }\n            },\n            flattened: true\n          }\n        }\n      }\n    },\n    CreateDomain: {\n      input: {\n        type: 'structure',\n        required: [\n          'DomainName'\n        ],\n        members: {\n          DomainName: {}\n        }\n      }\n    },\n    DeleteAttributes: {\n      input: {\n        type: 'structure',\n        required: [\n          'DomainName',\n          'ItemName'\n        ],\n        members: {\n          DomainName: {},\n          ItemName: {},\n          Attributes: {\n            shape: 'S5'\n          },\n          Expected: {\n            shape: 'Sf'\n          }\n        }\n      }\n    },\n    DeleteDomain: {\n      input: {\n        type: 'structure',\n        required: [\n          'DomainName'\n        ],\n        members: {\n          DomainName: {}\n        }\n      }\n    },\n    DomainMetadata: {\n      input: {\n        type: 'structure',\n        required: [\n          'DomainName'\n        ],\n        members: {\n          DomainName: {}\n        }\n      },\n      output: {\n        resultWrapper: 'DomainMetadataResult',\n        type: 'structure',\n        members: {\n          ItemCount: {\n            type: 'integer'\n          },\n          ItemNamesSizeBytes: {\n            type: 'long'\n          },\n          AttributeNameCount: {\n            type: 'integer'\n          },\n          AttributeNamesSizeBytes: {\n            type: 'long'\n          },\n          AttributeValueCount: {\n            type: 'integer'\n          },\n          AttributeValuesSizeBytes: {\n            type: 'long'\n          },\n          Timestamp: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    GetAttributes: {\n      input: {\n        type: 'structure',\n        required: [\n          'DomainName',\n          'ItemName'\n        ],\n        members: {\n          DomainName: {},\n          ItemName: {},\n          AttributeNames: {\n            type: 'list',\n            member: {\n              locationName: 'AttributeName'\n            },\n            flattened: true\n          },\n          ConsistentRead: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'GetAttributesResult',\n        type: 'structure',\n        members: {\n          Attributes: {\n            shape: 'So'\n          }\n        }\n      }\n    },\n    ListDomains: {\n      input: {\n        type: 'structure',\n        members: {\n          MaxNumberOfDomains: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        resultWrapper: 'ListDomainsResult',\n        type: 'structure',\n        members: {\n          DomainNames: {\n            type: 'list',\n            member: {\n              locationName: 'DomainName'\n            },\n            flattened: true\n          },\n          NextToken: {}\n        }\n      }\n    },\n    PutAttributes: {\n      input: {\n        type: 'structure',\n        required: [\n          'DomainName',\n          'ItemName',\n          'Attributes'\n        ],\n        members: {\n          DomainName: {},\n          ItemName: {},\n          Attributes: {\n            shape: 'Sa'\n          },\n          Expected: {\n            shape: 'Sf'\n          }\n        }\n      }\n    },\n    Select: {\n      input: {\n        type: 'structure',\n        required: [\n          'SelectExpression'\n        ],\n        members: {\n          SelectExpression: {},\n          NextToken: {},\n          ConsistentRead: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'SelectResult',\n        type: 'structure',\n        members: {\n          Items: {\n            type: 'list',\n            member: {\n              locationName: 'Item',\n              type: 'structure',\n              required: [\n                'Name',\n                'Attributes'\n              ],\n              members: {\n                Name: {},\n                AlternateNameEncoding: {},\n                Attributes: {\n                  shape: 'So'\n                }\n              }\n            },\n            flattened: true\n          },\n          NextToken: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'list',\n      member: {\n        locationName: 'Attribute',\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {},\n          Value: {}\n        }\n      },\n      flattened: true\n    },\n    Sa: {\n      type: 'list',\n      member: {\n        locationName: 'Attribute',\n        type: 'structure',\n        required: [\n          'Name',\n          'Value'\n        ],\n        members: {\n          Name: {},\n          Value: {},\n          Replace: {\n            type: 'boolean'\n          }\n        }\n      },\n      flattened: true\n    },\n    Sf: {\n      type: 'structure',\n      members: {\n        Name: {},\n        Value: {},\n        Exists: {\n          type: 'boolean'\n        }\n      }\n    },\n    So: {\n      type: 'list',\n      member: {\n        locationName: 'Attribute',\n        type: 'structure',\n        required: [\n          'Name',\n          'Value'\n        ],\n        members: {\n          Name: {},\n          AlternateNameEncoding: {},\n          Value: {},\n          AlternateValueEncoding: {}\n        }\n      },\n      flattened: true\n    }\n  }\n}"]}