{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/shared-ini/ini-loader.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","url","define","exports","require","module","__filename","__dirname","AWS","os","path","parseFile","filename","util","ini","parse","readFileSync","getProfiles","fileContent","tmpContent","Object","keys","forEach","sectionName","test","defineProperty","replace","value","enumerable","getSsoSessions","IniLoader","inherit","constructor","resolvedProfiles","resolvedSsoSessions","clearCachedFiles","loadFrom","options","isConfig","getDefaultFilePath","loadSsoSessionsFrom","join","getHomeDir","env","process","home","HOME","USERPROFILE","HOMEPATH","HOMEDRIVE","homedir","error","Error","_cjsExports","_IniLoader"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nimport { __cjsMetaURL as _req0} from 'os';\nimport { __cjsMetaURL as _req1} from 'path';\nlet _cjsExports;\nlet _IniLoader;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n var os = require('os');\n var path = require('path');\n\n function parseFile(filename) {\n   return AWS.util.ini.parse(AWS.util.readFileSync(filename));\n }\n\n function getProfiles(fileContent) {\n   var tmpContent = {};\n   Object.keys(fileContent).forEach(function(sectionName) {\n     if (/^sso-session\\s/.test(sectionName)) return;\n     Object.defineProperty(tmpContent, sectionName.replace(/^profile\\s/, ''), {\n       value: fileContent[sectionName],\n       enumerable: true\n     });\n   });\n   return tmpContent;\n }\n\n function getSsoSessions(fileContent) {\n   var tmpContent = {};\n   Object.keys(fileContent).forEach(function(sectionName) {\n     if (!/^sso-session\\s/.test(sectionName)) return;\n     Object.defineProperty(tmpContent, sectionName.replace(/^sso-session\\s/, ''), {\n       value: fileContent[sectionName],\n       enumerable: true\n     });\n   });\n   return tmpContent;\n }\n\n /**\n  * Ini file loader class the same as that used in the SDK. It loads and\n  * parses config and credentials files in .ini format and cache the content\n  * to assure files are only read once.\n  * Note that calling operations on the instance instantiated from this class\n  * won't affect the behavior of SDK since SDK uses an internal singleton of\n  * this class.\n  * @!macro nobrowser\n  */\n AWS.IniLoader = AWS.util.inherit({\n   constructor: function IniLoader() {\n     this.resolvedProfiles = {};\n     this.resolvedSsoSessions = {};\n   },\n\n   /** Remove all cached files. Used after config files are updated. */\n   clearCachedFiles: function clearCachedFiles() {\n     this.resolvedProfiles = {};\n     this.resolvedSsoSessions = {};\n   },\n\n   /**\n    * Load configurations from config/credentials files and cache them\n    * for later use. If no file is specified it will try to load default files.\n    *\n    * @param options [map] information describing the file\n    * @option options filename [String] ('~/.aws/credentials' or defined by\n    *   AWS_SHARED_CREDENTIALS_FILE process env var or '~/.aws/config' if\n    *   isConfig is set to true)\n    *   path to the file to be read.\n    * @option options isConfig [Boolean] (false) True to read config file.\n    * @return [map<String,String>] object containing contents from file in key-value\n    *   pairs.\n    */\n   loadFrom: function loadFrom(options) {\n     options = options || {};\n     var isConfig = options.isConfig === true;\n     var filename = options.filename || this.getDefaultFilePath(isConfig);\n     if (!this.resolvedProfiles[filename]) {\n       var fileContent = parseFile(filename);\n       if (isConfig) {\n         Object.defineProperty(this.resolvedProfiles, filename, {\n           value: getProfiles(fileContent)\n         });\n       } else {\n         Object.defineProperty(this.resolvedProfiles, filename, { value: fileContent });\n       }\n     }\n     return this.resolvedProfiles[filename];\n   },\n\n   /**\n    * Load sso sessions from config/credentials files and cache them\n    * for later use. If no file is specified it will try to load default file.\n    *\n    * @param options [map] information describing the file\n    * @option options filename [String] ('~/.aws/config' or defined by\n    *   AWS_CONFIG_FILE process env var)\n    * @return [map<String,String>] object containing contents from file in key-value\n    *   pairs.\n    */\n   loadSsoSessionsFrom: function loadSsoSessionsFrom(options) {\n     options = options || {};\n     var filename = options.filename || this.getDefaultFilePath(true);\n     if (!this.resolvedSsoSessions[filename]) {\n       var fileContent = parseFile(filename);\n       Object.defineProperty(this.resolvedSsoSessions, filename, {\n         value: getSsoSessions(fileContent)\n       });\n     }\n     return this.resolvedSsoSessions[filename];\n   },\n\n   /**\n    * @api private\n    */\n   getDefaultFilePath: function getDefaultFilePath(isConfig) {\n     return path.join(\n       this.getHomeDir(),\n       '.aws',\n       isConfig ? 'config' : 'credentials'\n     );\n   },\n\n   /**\n    * @api private\n    */\n   getHomeDir: function getHomeDir() {\n     var env = process.env;\n     var home = env.HOME ||\n       env.USERPROFILE ||\n       (env.HOMEPATH ? ((env.HOMEDRIVE || 'C:/') + env.HOMEPATH) : null);\n\n     if (home) {\n       return home;\n     }\n\n     if (typeof os.homedir === 'function') {\n       return os.homedir();\n     }\n\n     throw AWS.util.error(\n       new Error('Cannot load credentials, HOME path not set')\n     );\n   }\n });\n\n var IniLoader = AWS.IniLoader;\n\n module.exports = {\n   IniLoader: IniLoader\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_IniLoader = module.exports.IniLoader;\n\n}, () => ({\n  '../core': _req,\n  'os': _req0,\n  'path': _req1,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}