{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/services/rdsutil.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","AWS","rdsutil","setupRequestListeners","service","request","crossRegionOperations","indexOf","operation","params","SourceRegion","util","copy","PreSignedUrl","config","region","doesParamValidation","paramValidation","removeListener","EventListeners","Core","VALIDATE_PARAMETERS","onAsync","buildCrossRegionPresignedUrl","addListener","req","done","endpoint","signatureVersion","destinationRegion","svc","constructor","newReq","on","addDestinationRegionParam","httpRequest","DestinationRegion","body","queryParamsToString","presign","err","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n\n var rdsutil = {\n   /**\n     * @api private\n     */\n    setupRequestListeners: function setupRequestListeners(service, request, crossRegionOperations) {\n     if (crossRegionOperations.indexOf(request.operation) !== -1 &&\n         request.params.SourceRegion) {\n       request.params = AWS.util.copy(request.params);\n       if (request.params.PreSignedUrl ||\n           request.params.SourceRegion === service.config.region) {\n         delete request.params.SourceRegion;\n       } else {\n         var doesParamValidation = !!service.config.paramValidation;\n         // remove the validate parameters listener so we can re-add it after we build the URL\n         if (doesParamValidation) {\n           request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n         }\n         request.onAsync('validate', rdsutil.buildCrossRegionPresignedUrl);\n         if (doesParamValidation) {\n           request.addListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n         }\n       }\n     }\n   },\n\n   /**\n    * @api private\n    */\n   buildCrossRegionPresignedUrl: function buildCrossRegionPresignedUrl(req, done) {\n     var config = AWS.util.copy(req.service.config);\n     config.region = req.params.SourceRegion;\n     delete req.params.SourceRegion;\n     delete config.endpoint;\n     // relevant params for the operation will already be in req.params\n     delete config.params;\n     config.signatureVersion = 'v4';\n     var destinationRegion = req.service.config.region;\n\n     var svc = new req.service.constructor(config);\n     var newReq = svc[req.operation](AWS.util.copy(req.params));\n     newReq.on('build', function addDestinationRegionParam(request) {\n       var httpRequest = request.httpRequest;\n       httpRequest.params.DestinationRegion = destinationRegion;\n       httpRequest.body = AWS.util.queryParamsToString(httpRequest.params);\n     });\n     newReq.presign(function(err, url) {\n       if (err) done(err);\n       else {\n         req.params.PreSignedUrl = url;\n         done();\n       }\n     });\n   }\n };\n\n /**\n  * @api private\n  */\n module.exports = rdsutil;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}