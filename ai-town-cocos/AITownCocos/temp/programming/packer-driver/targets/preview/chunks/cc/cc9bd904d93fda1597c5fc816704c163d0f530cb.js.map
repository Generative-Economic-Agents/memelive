{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/inspector-scan-2023-08-08.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","ScanSbom","http","requestUri","responseCode","input","type","required","members","sbom","shape","outputFormat","output","idempotent","shapes","S2","document"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,gBAFR;AAGRC,UAAAA,WAAW,EAAE,KAHL;AAIRC,UAAAA,QAAQ,EAAE,WAJF;AAKRC,UAAAA,mBAAmB,EAAE,gBALb;AAMRC,UAAAA,eAAe,EAAE,gBANT;AAORC,UAAAA,SAAS,EAAE,gBAPH;AAQRC,UAAAA,gBAAgB,EAAE,IARV;AASRC,UAAAA,WAAW,EAAE,gBATL;AAURC,UAAAA,GAAG,EAAE;AAVG,SAFG;AAcbC,QAAAA,UAAU,EAAE;AACVC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,YADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADE;AAKRC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,MADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH,iBADC;AAIPC,gBAAAA,YAAY,EAAE;AAJP;AALJ,aALC;AAiBRC,YAAAA,MAAM,EAAE;AACNN,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,KAAK,EAAE;AADH;AADC;AAFH,aAjBA;AAyBRG,YAAAA,UAAU,EAAE;AAzBJ;AADA,SAdC;AA2CbC,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACFT,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE,EAFP;AAGFQ,YAAAA,QAAQ,EAAE;AAHR;AADE;AA3CK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2023-08-08',\n    endpointPrefix: 'inspector-scan',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'inspector-scan',\n    serviceFullName: 'Inspector Scan',\n    serviceId: 'Inspector Scan',\n    signatureVersion: 'v4',\n    signingName: 'inspector-scan',\n    uid: 'inspector-scan-2023-08-08'\n  },\n  operations: {\n    ScanSbom: {\n      http: {\n        requestUri: '/scan/sbom',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'sbom'\n        ],\n        members: {\n          sbom: {\n            shape: 'S2'\n          },\n          outputFormat: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          sbom: {\n            shape: 'S2'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S2: {\n      type: 'structure',\n      members: {},\n      document: true\n    }\n  }\n}"]}