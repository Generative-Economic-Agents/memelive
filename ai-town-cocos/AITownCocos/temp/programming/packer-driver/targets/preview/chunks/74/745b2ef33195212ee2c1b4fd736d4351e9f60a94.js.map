{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/license-manager-linux-subscriptions-2018-05-10.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","GetServiceSettings","http","requestUri","responseCode","input","type","members","output","HomeRegions","shape","LinuxSubscriptionsDiscovery","LinuxSubscriptionsDiscoverySettings","Status","StatusMessage","idempotent","ListLinuxSubscriptionInstances","Filters","MaxResults","NextToken","Instances","member","AccountID","AmiId","InstanceID","InstanceType","LastUpdatedTime","ProductCode","Region","SubscriptionName","UsageOperation","ListLinuxSubscriptions","Subscriptions","InstanceCount","Name","Type","UpdateServiceSettings","required","AllowUpdate","shapes","S3","S6","OrganizationIntegration","SourceRegions","S9","key","value","Sc","Operator","Values"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-05-10',\n    endpointPrefix: 'license-manager-linux-subscriptions',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS License Manager Linux Subscriptions',\n    serviceId: 'License Manager Linux Subscriptions',\n    signatureVersion: 'v4',\n    signingName: 'license-manager-linux-subscriptions',\n    uid: 'license-manager-linux-subscriptions-2018-05-10'\n  },\n  operations: {\n    GetServiceSettings: {\n      http: {\n        requestUri: '/subscription/GetServiceSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HomeRegions: {\n            shape: 'S3'\n          },\n          LinuxSubscriptionsDiscovery: {},\n          LinuxSubscriptionsDiscoverySettings: {\n            shape: 'S6'\n          },\n          Status: {},\n          StatusMessage: {\n            shape: 'S9'\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListLinuxSubscriptionInstances: {\n      http: {\n        requestUri: '/subscription/ListLinuxSubscriptionInstances',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Filters: {\n            shape: 'Sc'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Instances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AccountID: {},\n                AmiId: {},\n                InstanceID: {},\n                InstanceType: {},\n                LastUpdatedTime: {},\n                ProductCode: {\n                  type: 'list',\n                  member: {}\n                },\n                Region: {},\n                Status: {},\n                SubscriptionName: {},\n                UsageOperation: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListLinuxSubscriptions: {\n      http: {\n        requestUri: '/subscription/ListLinuxSubscriptions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Filters: {\n            shape: 'Sc'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Subscriptions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                InstanceCount: {\n                  type: 'long'\n                },\n                Name: {},\n                Type: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateServiceSettings: {\n      http: {\n        requestUri: '/subscription/UpdateServiceSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'LinuxSubscriptionsDiscovery',\n          'LinuxSubscriptionsDiscoverySettings'\n        ],\n        members: {\n          AllowUpdate: {\n            type: 'boolean'\n          },\n          LinuxSubscriptionsDiscovery: {},\n          LinuxSubscriptionsDiscoverySettings: {\n            shape: 'S6'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HomeRegions: {\n            shape: 'S3'\n          },\n          LinuxSubscriptionsDiscovery: {},\n          LinuxSubscriptionsDiscoverySettings: {\n            shape: 'S6'\n          },\n          Status: {},\n          StatusMessage: {\n            shape: 'S9'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'list',\n      member: {}\n    },\n    S6: {\n      type: 'structure',\n      required: [\n        'OrganizationIntegration',\n        'SourceRegions'\n      ],\n      members: {\n        OrganizationIntegration: {},\n        SourceRegions: {\n          shape: 'S3'\n        }\n      }\n    },\n    S9: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sc: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Name: {},\n          Operator: {},\n          Values: {\n            shape: 'S3'\n          }\n        }\n      }\n    }\n  }\n}"]}