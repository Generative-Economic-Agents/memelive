{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/request.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","url","define","exports","require","module","__filename","__dirname","AWS","AcceptorStateMachine","inherit","util","domain","jmespath","hardErrorStates","success","error","complete","isTerminalState","machine","Object","prototype","hasOwnProperty","call","_asm","currentState","fsm","setupStates","transition","_","done","self","_haltHandlersOnError","emit","err","Domain","domainEmitter","domainThrown","response","addState","Request","constructor","service","operation","params","endpoint","region","config","customUserAgent","signingRegion","isGlobalEndpoint","active","httpRequest","HttpRequest","appendToUserAgent","startTime","getSkewCorrectedDate","Response","states","SequentialExecutor","emitEvent","send","callback","on","resp","data","runTo","build","state","abort","removeAllListeners","addAbortedError","Error","code","retryable","stream","didCallback","_abortCallback","eachPage","fn","makeAsync","wrappedCallback","result","hasNextPage","nextPage","noop","eachItem","paginationConfig","resultKey","Array","isArray","items","search","continueIteration","arrayEach","item","isPageable","createReadStream","streams","req","HttpClient","streamsApiVersion","PassThrough","process","nextTick","Stream","readable","sent","event","streamHeaders","statusCode","headers","removeListener","EventListeners","Core","HTTP_DATA","HTTP_ERROR","streamHttpError","shouldCheckContentLength","expectedLen","method","parseInt","undefined","isNaN","receivedLen","checkContentLengthAndEmit","end","httpStream","httpResponse","createUnbufferedStream","lengthAccumulator","_write","chunk","length","apply","arguments","unpipe","pipe","arg","eventName","args","eventParameters","origEmit","presign","expires","Signers","Presign","sign","toGet","isPresigned","toUnauthenticated","_unAuthenticated","VALIDATE_CREDENTIALS","SIGN","api","protocol","buildAsGet","addListener","request","path","body","haltHandlersOnError","addPromisesToClass","PromiseDependency","promise","resolve","reject","defineProperty","value","deletePromisesFromClass","addPromises","mixin","_cjsExports"],"mappings":"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iDX,UAAjD;AACA,eAAKW,QAAL,CAAc,OAAd,EAAuB,UAAvB,EAAmC,UAAnC,EAA+CX,UAA/C;AACA,eAAKW,QAAL,CAAc,UAAd,EAA0B,IAA1B,EAAgC,IAAhC,EAAsCX,UAAtC;AACD,SAzCD;;AA0CAF,QAAAA,GAAG,CAACC,WAAJ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './core';\nimport { __cjsMetaURL as _req0} from './state_machine';\nimport { __cjsMetaURL as _req1} from 'jmespath';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('./core');\n var AcceptorStateMachine = require('./state_machine');\n var inherit = AWS.util.inherit;\n var domain = AWS.util.domain;\n var jmespath = require('jmespath');\n\n /**\n  * @api private\n  */\n var hardErrorStates = {success: 1, error: 1, complete: 1};\n\n function isTerminalState(machine) {\n   return Object.prototype.hasOwnProperty.call(hardErrorStates, machine._asm.currentState);\n }\n\n var fsm = new AcceptorStateMachine();\n fsm.setupStates = function() {\n   var transition = function(_, done) {\n     var self = this;\n     self._haltHandlersOnError = false;\n\n     self.emit(self._asm.currentState, function(err) {\n       if (err) {\n         if (isTerminalState(self)) {\n           if (domain && self.domain instanceof domain.Domain) {\n             err.domainEmitter = self;\n             err.domain = self.domain;\n             err.domainThrown = false;\n             self.domain.emit('error', err);\n           } else {\n             throw err;\n           }\n         } else {\n           self.response.error = err;\n           done(err);\n         }\n       } else {\n         done(self.response.error);\n       }\n     });\n\n   };\n\n   this.addState('validate', 'build', 'error', transition);\n   this.addState('build', 'afterBuild', 'restart', transition);\n   this.addState('afterBuild', 'sign', 'restart', transition);\n   this.addState('sign', 'send', 'retry', transition);\n   this.addState('retry', 'afterRetry', 'afterRetry', transition);\n   this.addState('afterRetry', 'sign', 'error', transition);\n   this.addState('send', 'validateResponse', 'retry', transition);\n   this.addState('validateResponse', 'extractData', 'extractError', transition);\n   this.addState('extractError', 'extractData', 'retry', transition);\n   this.addState('extractData', 'success', 'retry', transition);\n   this.addState('restart', 'build', 'error', transition);\n   this.addState('success', 'complete', 'complete', transition);\n   this.addState('error', 'complete', 'complete', transition);\n   this.addState('complete', null, null, transition);\n };\n fsm.setupStates();\n\n /**\n  * ## Asynchronous Requests\n  *\n  * All requests made through the SDK are asynchronous and use a\n  * callback interface. Each service method that kicks off a request\n  * returns an `AWS.Request` object that you can use to register\n  * callbacks.\n  *\n  * For example, the following service method returns the request\n  * object as \"request\", which can be used to register callbacks:\n  *\n  * ```javascript\n  * // request is an AWS.Request object\n  * var request = ec2.describeInstances();\n  *\n  * // register callbacks on request to retrieve response data\n  * request.on('success', function(response) {\n  *   console.log(response.data);\n  * });\n  * ```\n  *\n  * When a request is ready to be sent, the {send} method should\n  * be called:\n  *\n  * ```javascript\n  * request.send();\n  * ```\n  *\n  * Since registered callbacks may or may not be idempotent, requests should only\n  * be sent once. To perform the same operation multiple times, you will need to\n  * create multiple request objects, each with its own registered callbacks.\n  *\n  * ## Removing Default Listeners for Events\n  *\n  * Request objects are built with default listeners for the various events,\n  * depending on the service type. In some cases, you may want to remove\n  * some built-in listeners to customize behaviour. Doing this requires\n  * access to the built-in listener functions, which are exposed through\n  * the {AWS.EventListeners.Core} namespace. For instance, you may\n  * want to customize the HTTP handler used when sending a request. In this\n  * case, you can remove the built-in listener associated with the 'send'\n  * event, the {AWS.EventListeners.Core.SEND} listener and add your own.\n  *\n  * ## Multiple Callbacks and Chaining\n  *\n  * You can register multiple callbacks on any request object. The\n  * callbacks can be registered for different events, or all for the\n  * same event. In addition, you can chain callback registration, for\n  * example:\n  *\n  * ```javascript\n  * request.\n  *   on('success', function(response) {\n  *     console.log(\"Success!\");\n  *   }).\n  *   on('error', function(error, response) {\n  *     console.log(\"Error!\");\n  *   }).\n  *   on('complete', function(response) {\n  *     console.log(\"Always!\");\n  *   }).\n  *   send();\n  * ```\n  *\n  * The above example will print either \"Success! Always!\", or \"Error! Always!\",\n  * depending on whether the request succeeded or not.\n  *\n  * @!attribute httpRequest\n  *   @readonly\n  *   @!group HTTP Properties\n  *   @return [AWS.HttpRequest] the raw HTTP request object\n  *     containing request headers and body information\n  *     sent by the service.\n  *\n  * @!attribute startTime\n  *   @readonly\n  *   @!group Operation Properties\n  *   @return [Date] the time that the request started\n  *\n  * @!group Request Building Events\n  *\n  * @!event validate(request)\n  *   Triggered when a request is being validated. Listeners\n  *   should throw an error if the request should not be sent.\n  *   @param request [Request] the request object being sent\n  *   @see AWS.EventListeners.Core.VALIDATE_CREDENTIALS\n  *   @see AWS.EventListeners.Core.VALIDATE_REGION\n  *   @example Ensuring that a certain parameter is set before sending a request\n  *     var req = s3.putObject(params);\n  *     req.on('validate', function() {\n  *       if (!req.params.Body.match(/^Hello\\s/)) {\n  *         throw new Error('Body must start with \"Hello \"');\n  *       }\n  *     });\n  *     req.send(function(err, data) { ... });\n  *\n  * @!event build(request)\n  *   Triggered when the request payload is being built. Listeners\n  *   should fill the necessary information to send the request\n  *   over HTTP.\n  *   @param (see AWS.Request~validate)\n  *   @example Add a custom HTTP header to a request\n  *     var req = s3.putObject(params);\n  *     req.on('build', function() {\n  *       req.httpRequest.headers['Custom-Header'] = 'value';\n  *     });\n  *     req.send(function(err, data) { ... });\n  *\n  * @!event sign(request)\n  *   Triggered when the request is being signed. Listeners should\n  *   add the correct authentication headers and/or adjust the body,\n  *   depending on the authentication mechanism being used.\n  *   @param (see AWS.Request~validate)\n  *\n  * @!group Request Sending Events\n  *\n  * @!event send(response)\n  *   Triggered when the request is ready to be sent. Listeners\n  *   should call the underlying transport layer to initiate\n  *   the sending of the request.\n  *   @param response [Response] the response object\n  *   @context [Request] the request object that was sent\n  *   @see AWS.EventListeners.Core.SEND\n  *\n  * @!event retry(response)\n  *   Triggered when a request failed and might need to be retried or redirected.\n  *   If the response is retryable, the listener should set the\n  *   `response.error.retryable` property to `true`, and optionally set\n  *   `response.error.retryDelay` to the millisecond delay for the next attempt.\n  *   In the case of a redirect, `response.error.redirect` should be set to\n  *   `true` with `retryDelay` set to an optional delay on the next request.\n  *\n  *   If a listener decides that a request should not be retried,\n  *   it should set both `retryable` and `redirect` to false.\n  *\n  *   Note that a retryable error will be retried at most\n  *   {AWS.Config.maxRetries} times (based on the service object's config).\n  *   Similarly, a request that is redirected will only redirect at most\n  *   {AWS.Config.maxRedirects} times.\n  *\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *   @example Adding a custom retry for a 404 response\n  *     request.on('retry', function(response) {\n  *       // this resource is not yet available, wait 10 seconds to get it again\n  *       if (response.httpResponse.statusCode === 404 && response.error) {\n  *         response.error.retryable = true;   // retry this error\n  *         response.error.retryDelay = 10000; // wait 10 seconds\n  *       }\n  *     });\n  *\n  * @!group Data Parsing Events\n  *\n  * @!event extractError(response)\n  *   Triggered on all non-2xx requests so that listeners can extract\n  *   error details from the response body. Listeners to this event\n  *   should set the `response.error` property.\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *\n  * @!event extractData(response)\n  *   Triggered in successful requests to allow listeners to\n  *   de-serialize the response body into `response.data`.\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *\n  * @!group Completion Events\n  *\n  * @!event success(response)\n  *   Triggered when the request completed successfully.\n  *   `response.data` will contain the response data and\n  *   `response.error` will be null.\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *\n  * @!event error(error, response)\n  *   Triggered when an error occurs at any point during the\n  *   request. `response.error` will contain details about the error\n  *   that occurred. `response.data` will be null.\n  *   @param error [Error] the error object containing details about\n  *     the error that occurred.\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *\n  * @!event complete(response)\n  *   Triggered whenever a request cycle completes. `response.error`\n  *   should be checked, since the request may have failed.\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *\n  * @!group HTTP Events\n  *\n  * @!event httpHeaders(statusCode, headers, response, statusMessage)\n  *   Triggered when headers are sent by the remote server\n  *   @param statusCode [Integer] the HTTP response code\n  *   @param headers [map<String,String>] the response headers\n  *   @param (see AWS.Request~send)\n  *   @param statusMessage [String] A status message corresponding to the HTTP\n  *                                 response code\n  *   @context (see AWS.Request~send)\n  *\n  * @!event httpData(chunk, response)\n  *   Triggered when data is sent by the remote server\n  *   @param chunk [Buffer] the buffer data containing the next data chunk\n  *     from the server\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *   @see AWS.EventListeners.Core.HTTP_DATA\n  *\n  * @!event httpUploadProgress(progress, response)\n  *   Triggered when the HTTP request has uploaded more data\n  *   @param progress [map] An object containing the `loaded` and `total` bytes\n  *     of the request.\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *   @note This event will not be emitted in Node.js 0.8.x.\n  *\n  * @!event httpDownloadProgress(progress, response)\n  *   Triggered when the HTTP request has downloaded more data\n  *   @param progress [map] An object containing the `loaded` and `total` bytes\n  *     of the request.\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *   @note This event will not be emitted in Node.js 0.8.x.\n  *\n  * @!event httpError(error, response)\n  *   Triggered when the HTTP request failed\n  *   @param error [Error] the error object that was thrown\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *\n  * @!event httpDone(response)\n  *   Triggered when the server is finished sending data\n  *   @param (see AWS.Request~send)\n  *   @context (see AWS.Request~send)\n  *\n  * @see AWS.Response\n  */\n AWS.Request = inherit({\n\n   /**\n    * Creates a request for an operation on a given service with\n    * a set of input parameters.\n    *\n    * @param service [AWS.Service] the service to perform the operation on\n    * @param operation [String] the operation to perform on the service\n    * @param params [Object] parameters to send to the operation.\n    *   See the operation's documentation for the format of the\n    *   parameters.\n    */\n   constructor: function Request(service, operation, params) {\n     var endpoint = service.endpoint;\n     var region = service.config.region;\n     var customUserAgent = service.config.customUserAgent;\n\n     if (service.signingRegion) {\n       region = service.signingRegion;\n     } else if (service.isGlobalEndpoint) {\n       region = 'us-east-1';\n     }\n\n     this.domain = domain && domain.active;\n     this.service = service;\n     this.operation = operation;\n     this.params = params || {};\n     this.httpRequest = new AWS.HttpRequest(endpoint, region);\n     this.httpRequest.appendToUserAgent(customUserAgent);\n     this.startTime = service.getSkewCorrectedDate();\n\n     this.response = new AWS.Response(this);\n     this._asm = new AcceptorStateMachine(fsm.states, 'validate');\n     this._haltHandlersOnError = false;\n\n     AWS.SequentialExecutor.call(this);\n     this.emit = this.emitEvent;\n   },\n\n   /**\n    * @!group Sending a Request\n    */\n\n   /**\n    * @overload send(callback = null)\n    *   Sends the request object.\n    *\n    *   @callback callback function(err, data)\n    *     If a callback is supplied, it is called when a response is returned\n    *     from the service.\n    *     @context [AWS.Request] the request object being sent.\n    *     @param err [Error] the error object returned from the request.\n    *       Set to `null` if the request is successful.\n    *     @param data [Object] the de-serialized data returned from\n    *       the request. Set to `null` if a request error occurs.\n    *   @example Sending a request with a callback\n    *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n    *     request.send(function(err, data) { console.log(err, data); });\n    *   @example Sending a request with no callback (using event handlers)\n    *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n    *     request.on('complete', function(response) { ... }); // register a callback\n    *     request.send();\n    */\n   send: function send(callback) {\n     if (callback) {\n       // append to user agent\n       this.httpRequest.appendToUserAgent('callback');\n       this.on('complete', function (resp) {\n         callback.call(resp, resp.error, resp.data);\n       });\n     }\n     this.runTo();\n\n     return this.response;\n   },\n\n   /**\n    * @!method  promise()\n    *   Sends the request and returns a 'thenable' promise.\n    *\n    *   Two callbacks can be provided to the `then` method on the returned promise.\n    *   The first callback will be called if the promise is fulfilled, and the second\n    *   callback will be called if the promise is rejected.\n    *   @callback fulfilledCallback function(data)\n    *     Called if the promise is fulfilled.\n    *     @param data [Object] the de-serialized data returned from the request.\n    *   @callback rejectedCallback function(error)\n    *     Called if the promise is rejected.\n    *     @param error [Error] the error object returned from the request.\n    *   @return [Promise] A promise that represents the state of the request.\n    *   @example Sending a request using promises.\n    *     var request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n    *     var result = request.promise();\n    *     result.then(function(data) { ... }, function(error) { ... });\n    */\n\n   /**\n    * @api private\n    */\n   build: function build(callback) {\n     return this.runTo('send', callback);\n   },\n\n   /**\n    * @api private\n    */\n   runTo: function runTo(state, done) {\n     this._asm.runTo(state, done, this);\n     return this;\n   },\n\n   /**\n    * Aborts a request, emitting the error and complete events.\n    *\n    * @!macro nobrowser\n    * @example Aborting a request after sending\n    *   var params = {\n    *     Bucket: 'bucket', Key: 'key',\n    *     Body: Buffer.alloc(1024 * 1024 * 5) // 5MB payload\n    *   };\n    *   var request = s3.putObject(params);\n    *   request.send(function (err, data) {\n    *     if (err) console.log(\"Error:\", err.code, err.message);\n    *     else console.log(data);\n    *   });\n    *\n    *   // abort request in 1 second\n    *   setTimeout(request.abort.bind(request), 1000);\n    *\n    *   // prints \"Error: RequestAbortedError Request aborted by user\"\n    * @return [AWS.Request] the same request object, for chaining.\n    * @since v1.4.0\n    */\n   abort: function abort() {\n     this.removeAllListeners('validateResponse');\n     this.removeAllListeners('extractError');\n     this.on('validateResponse', function addAbortedError(resp) {\n       resp.error = AWS.util.error(new Error('Request aborted by user'), {\n          code: 'RequestAbortedError', retryable: false\n       });\n     });\n\n     if (this.httpRequest.stream && !this.httpRequest.stream.didCallback) { // abort HTTP stream\n       this.httpRequest.stream.abort();\n       if (this.httpRequest._abortCallback) {\n          this.httpRequest._abortCallback();\n       } else {\n         this.removeAllListeners('send'); // haven't sent yet, so let's not\n       }\n     }\n\n     return this;\n   },\n\n   /**\n    * Iterates over each page of results given a pageable request, calling\n    * the provided callback with each page of data. After all pages have been\n    * retrieved, the callback is called with `null` data.\n    *\n    * @note This operation can generate multiple requests to a service.\n    * @example Iterating over multiple pages of objects in an S3 bucket\n    *   var pages = 1;\n    *   s3.listObjects().eachPage(function(err, data) {\n    *     if (err) return;\n    *     console.log(\"Page\", pages++);\n    *     console.log(data);\n    *   });\n    * @example Iterating over multiple pages with an asynchronous callback\n    *   s3.listObjects(params).eachPage(function(err, data, done) {\n    *     doSomethingAsyncAndOrExpensive(function() {\n    *       // The next page of results isn't fetched until done is called\n    *       done();\n    *     });\n    *   });\n    * @callback callback function(err, data, [doneCallback])\n    *   Called with each page of resulting data from the request. If the\n    *   optional `doneCallback` is provided in the function, it must be called\n    *   when the callback is complete.\n    *\n    *   @param err [Error] an error object, if an error occurred.\n    *   @param data [Object] a single page of response data. If there is no\n    *     more data, this object will be `null`.\n    *   @param doneCallback [Function] an optional done callback. If this\n    *     argument is defined in the function declaration, it should be called\n    *     when the next page is ready to be retrieved. This is useful for\n    *     controlling serial pagination across asynchronous operations.\n    *   @return [Boolean] if the callback returns `false`, pagination will\n    *     stop.\n    *\n    * @see AWS.Request.eachItem\n    * @see AWS.Response.nextPage\n    * @since v1.4.0\n    */\n   eachPage: function eachPage(callback) {\n     // Make all callbacks async-ish\n     callback = AWS.util.fn.makeAsync(callback, 3);\n\n     function wrappedCallback(response) {\n       callback.call(response, response.error, response.data, function (result) {\n         if (result === false) return;\n\n         if (response.hasNextPage()) {\n           response.nextPage().on('complete', wrappedCallback).send();\n         } else {\n           callback.call(response, null, null, AWS.util.fn.noop);\n         }\n       });\n     }\n\n     this.on('complete', wrappedCallback).send();\n   },\n\n   /**\n    * Enumerates over individual items of a request, paging the responses if\n    * necessary.\n    *\n    * @api experimental\n    * @since v1.4.0\n    */\n   eachItem: function eachItem(callback) {\n     var self = this;\n     function wrappedCallback(err, data) {\n       if (err) return callback(err, null);\n       if (data === null) return callback(null, null);\n\n       var config = self.service.paginationConfig(self.operation);\n       var resultKey = config.resultKey;\n       if (Array.isArray(resultKey)) resultKey = resultKey[0];\n       var items = jmespath.search(data, resultKey);\n       var continueIteration = true;\n       AWS.util.arrayEach(items, function(item) {\n         continueIteration = callback(null, item);\n         if (continueIteration === false) {\n           return AWS.util.abort;\n         }\n       });\n       return continueIteration;\n     }\n\n     this.eachPage(wrappedCallback);\n   },\n\n   /**\n    * @return [Boolean] whether the operation can return multiple pages of\n    *   response data.\n    * @see AWS.Response.eachPage\n    * @since v1.4.0\n    */\n   isPageable: function isPageable() {\n     return this.service.paginationConfig(this.operation) ? true : false;\n   },\n\n   /**\n    * Sends the request and converts the request object into a readable stream\n    * that can be read from or piped into a writable stream.\n    *\n    * @note The data read from a readable stream contains only\n    *   the raw HTTP body contents.\n    * @example Manually reading from a stream\n    *   request.createReadStream().on('data', function(data) {\n    *     console.log(\"Got data:\", data.toString());\n    *   });\n    * @example Piping a request body into a file\n    *   var out = fs.createWriteStream('/path/to/outfile.jpg');\n    *   s3.service.getObject(params).createReadStream().pipe(out);\n    * @return [Stream] the readable stream object that can be piped\n    *   or read from (by registering 'data' event listeners).\n    * @!macro nobrowser\n    */\n   createReadStream: function createReadStream() {\n     var streams = AWS.util.stream;\n     var req = this;\n     var stream = null;\n\n     if (AWS.HttpClient.streamsApiVersion === 2) {\n       stream = new streams.PassThrough();\n       process.nextTick(function() { req.send(); });\n     } else {\n       stream = new streams.Stream();\n       stream.readable = true;\n\n       stream.sent = false;\n       stream.on('newListener', function(event) {\n         if (!stream.sent && event === 'data') {\n           stream.sent = true;\n           process.nextTick(function() { req.send(); });\n         }\n       });\n     }\n\n     this.on('error', function(err) {\n       stream.emit('error', err);\n     });\n\n     this.on('httpHeaders', function streamHeaders(statusCode, headers, resp) {\n       if (statusCode < 300) {\n         req.removeListener('httpData', AWS.EventListeners.Core.HTTP_DATA);\n         req.removeListener('httpError', AWS.EventListeners.Core.HTTP_ERROR);\n         req.on('httpError', function streamHttpError(error) {\n           resp.error = error;\n           resp.error.retryable = false;\n         });\n\n         var shouldCheckContentLength = false;\n         var expectedLen;\n         if (req.httpRequest.method !== 'HEAD') {\n           expectedLen = parseInt(headers['content-length'], 10);\n         }\n         if (expectedLen !== undefined && !isNaN(expectedLen) && expectedLen >= 0) {\n           shouldCheckContentLength = true;\n           var receivedLen = 0;\n         }\n\n         var checkContentLengthAndEmit = function checkContentLengthAndEmit() {\n           if (shouldCheckContentLength && receivedLen !== expectedLen) {\n             stream.emit('error', AWS.util.error(\n               new Error('Stream content length mismatch. Received ' +\n                 receivedLen + ' of ' + expectedLen + ' bytes.'),\n               { code: 'StreamContentLengthMismatch' }\n             ));\n           } else if (AWS.HttpClient.streamsApiVersion === 2) {\n             stream.end();\n           } else {\n             stream.emit('end');\n           }\n         };\n\n         var httpStream = resp.httpResponse.createUnbufferedStream();\n\n         if (AWS.HttpClient.streamsApiVersion === 2) {\n           if (shouldCheckContentLength) {\n             var lengthAccumulator = new streams.PassThrough();\n             lengthAccumulator._write = function(chunk) {\n               if (chunk && chunk.length) {\n                 receivedLen += chunk.length;\n               }\n               return streams.PassThrough.prototype._write.apply(this, arguments);\n             };\n\n             lengthAccumulator.on('end', checkContentLengthAndEmit);\n             stream.on('error', function(err) {\n               shouldCheckContentLength = false;\n               httpStream.unpipe(lengthAccumulator);\n               lengthAccumulator.emit('end');\n               lengthAccumulator.end();\n             });\n             httpStream.pipe(lengthAccumulator).pipe(stream, { end: false });\n           } else {\n             httpStream.pipe(stream);\n           }\n         } else {\n\n           if (shouldCheckContentLength) {\n             httpStream.on('data', function(arg) {\n               if (arg && arg.length) {\n                 receivedLen += arg.length;\n               }\n             });\n           }\n\n           httpStream.on('data', function(arg) {\n             stream.emit('data', arg);\n           });\n           httpStream.on('end', checkContentLengthAndEmit);\n         }\n\n         httpStream.on('error', function(err) {\n           shouldCheckContentLength = false;\n           stream.emit('error', err);\n         });\n       }\n     });\n\n     return stream;\n   },\n\n   /**\n    * @param [Array,Response] args This should be the response object,\n    *   or an array of args to send to the event.\n    * @api private\n    */\n   emitEvent: function emit(eventName, args, done) {\n     if (typeof args === 'function') { done = args; args = null; }\n     if (!done) done = function() { };\n     if (!args) args = this.eventParameters(eventName, this.response);\n\n     var origEmit = AWS.SequentialExecutor.prototype.emit;\n     origEmit.call(this, eventName, args, function (err) {\n       if (err) this.response.error = err;\n       done.call(this, err);\n     });\n   },\n\n   /**\n    * @api private\n    */\n   eventParameters: function eventParameters(eventName) {\n     switch (eventName) {\n       case 'restart':\n       case 'validate':\n       case 'sign':\n       case 'build':\n       case 'afterValidate':\n       case 'afterBuild':\n         return [this];\n       case 'error':\n         return [this.response.error, this.response];\n       default:\n         return [this.response];\n     }\n   },\n\n   /**\n    * @api private\n    */\n   presign: function presign(expires, callback) {\n     if (!callback && typeof expires === 'function') {\n       callback = expires;\n       expires = null;\n     }\n     return new AWS.Signers.Presign().sign(this.toGet(), expires, callback);\n   },\n\n   /**\n    * @api private\n    */\n   isPresigned: function isPresigned() {\n     return Object.prototype.hasOwnProperty.call(this.httpRequest.headers, 'presigned-expires');\n   },\n\n   /**\n    * @api private\n    */\n   toUnauthenticated: function toUnauthenticated() {\n     this._unAuthenticated = true;\n     this.removeListener('validate', AWS.EventListeners.Core.VALIDATE_CREDENTIALS);\n     this.removeListener('sign', AWS.EventListeners.Core.SIGN);\n     return this;\n   },\n\n   /**\n    * @api private\n    */\n   toGet: function toGet() {\n     if (this.service.api.protocol === 'query' ||\n         this.service.api.protocol === 'ec2') {\n       this.removeListener('build', this.buildAsGet);\n       this.addListener('build', this.buildAsGet);\n     }\n     return this;\n   },\n\n   /**\n    * @api private\n    */\n   buildAsGet: function buildAsGet(request) {\n     request.httpRequest.method = 'GET';\n     request.httpRequest.path = request.service.endpoint.path +\n                                '?' + request.httpRequest.body;\n     request.httpRequest.body = '';\n\n     // don't need these headers on a GET request\n     delete request.httpRequest.headers['Content-Length'];\n     delete request.httpRequest.headers['Content-Type'];\n   },\n\n   /**\n    * @api private\n    */\n   haltHandlersOnError: function haltHandlersOnError() {\n     this._haltHandlersOnError = true;\n   }\n });\n\n /**\n  * @api private\n  */\n AWS.Request.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n   this.prototype.promise = function promise() {\n     var self = this;\n     // append to user agent\n     this.httpRequest.appendToUserAgent('promise');\n     return new PromiseDependency(function(resolve, reject) {\n       self.on('complete', function(resp) {\n         if (resp.error) {\n           reject(resp.error);\n         } else {\n           // define $response property so that it is not enumerable\n           // this prevents circular reference errors when stringifying the JSON object\n           resolve(Object.defineProperty(\n             resp.data || {},\n             '$response',\n             {value: resp}\n           ));\n         }\n       });\n       self.runTo();\n     });\n   };\n };\n\n /**\n  * @api private\n  */\n AWS.Request.deletePromisesFromClass = function deletePromisesFromClass() {\n   delete this.prototype.promise;\n };\n\n AWS.util.addPromises(AWS.Request);\n\n AWS.util.mixin(AWS.Request, AWS.SequentialExecutor);\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './core': _req,\n  './state_machine': _req0,\n  'jmespath': _req1,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}