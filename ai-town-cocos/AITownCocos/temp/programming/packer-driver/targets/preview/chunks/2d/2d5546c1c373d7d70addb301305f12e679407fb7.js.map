{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/sts-2011-06-15.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","globalEndpoint","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","uid","xmlNamespace","operations","AssumeRole","input","type","required","members","RoleArn","RoleSessionName","PolicyArns","shape","Policy","DurationSeconds","Tags","TransitiveTagKeys","member","ExternalId","SerialNumber","TokenCode","SourceIdentity","ProvidedContexts","ProviderArn","ContextAssertion","output","resultWrapper","Credentials","AssumedRoleUser","PackedPolicySize","AssumeRoleWithSAML","PrincipalArn","SAMLAssertion","sensitive","Subject","SubjectType","Issuer","Audience","NameQualifier","AssumeRoleWithWebIdentity","WebIdentityToken","ProviderId","SubjectFromWebIdentityToken","Provider","DecodeAuthorizationMessage","EncodedMessage","DecodedMessage","GetAccessKeyInfo","AccessKeyId","Account","GetCallerIdentity","UserId","Arn","GetFederationToken","Name","FederatedUser","FederatedUserId","GetSessionToken","shapes","S4","arn","S8","Key","Value","Sl","SecretAccessKey","SessionToken","Expiration","Sq","AssumedRoleId"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2011-06-15',\n    endpointPrefix: 'sts',\n    globalEndpoint: 'sts.amazonaws.com',\n    protocol: 'query',\n    serviceAbbreviation: 'AWS STS',\n    serviceFullName: 'AWS Security Token Service',\n    serviceId: 'STS',\n    signatureVersion: 'v4',\n    uid: 'sts-2011-06-15',\n    xmlNamespace: 'https://sts.amazonaws.com/doc/2011-06-15/'\n  },\n  operations: {\n    AssumeRole: {\n      input: {\n        type: 'structure',\n        required: [\n          'RoleArn',\n          'RoleSessionName'\n        ],\n        members: {\n          RoleArn: {},\n          RoleSessionName: {},\n          PolicyArns: {\n            shape: 'S4'\n          },\n          Policy: {},\n          DurationSeconds: {\n            type: 'integer'\n          },\n          Tags: {\n            shape: 'S8'\n          },\n          TransitiveTagKeys: {\n            type: 'list',\n            member: {}\n          },\n          ExternalId: {},\n          SerialNumber: {},\n          TokenCode: {},\n          SourceIdentity: {},\n          ProvidedContexts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ProviderArn: {},\n                ContextAssertion: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'AssumeRoleResult',\n        type: 'structure',\n        members: {\n          Credentials: {\n            shape: 'Sl'\n          },\n          AssumedRoleUser: {\n            shape: 'Sq'\n          },\n          PackedPolicySize: {\n            type: 'integer'\n          },\n          SourceIdentity: {}\n        }\n      }\n    },\n    AssumeRoleWithSAML: {\n      input: {\n        type: 'structure',\n        required: [\n          'RoleArn',\n          'PrincipalArn',\n          'SAMLAssertion'\n        ],\n        members: {\n          RoleArn: {},\n          PrincipalArn: {},\n          SAMLAssertion: {\n            type: 'string',\n            sensitive: true\n          },\n          PolicyArns: {\n            shape: 'S4'\n          },\n          Policy: {},\n          DurationSeconds: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'AssumeRoleWithSAMLResult',\n        type: 'structure',\n        members: {\n          Credentials: {\n            shape: 'Sl'\n          },\n          AssumedRoleUser: {\n            shape: 'Sq'\n          },\n          PackedPolicySize: {\n            type: 'integer'\n          },\n          Subject: {},\n          SubjectType: {},\n          Issuer: {},\n          Audience: {},\n          NameQualifier: {},\n          SourceIdentity: {}\n        }\n      }\n    },\n    AssumeRoleWithWebIdentity: {\n      input: {\n        type: 'structure',\n        required: [\n          'RoleArn',\n          'RoleSessionName',\n          'WebIdentityToken'\n        ],\n        members: {\n          RoleArn: {},\n          RoleSessionName: {},\n          WebIdentityToken: {\n            type: 'string',\n            sensitive: true\n          },\n          ProviderId: {},\n          PolicyArns: {\n            shape: 'S4'\n          },\n          Policy: {},\n          DurationSeconds: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'AssumeRoleWithWebIdentityResult',\n        type: 'structure',\n        members: {\n          Credentials: {\n            shape: 'Sl'\n          },\n          SubjectFromWebIdentityToken: {},\n          AssumedRoleUser: {\n            shape: 'Sq'\n          },\n          PackedPolicySize: {\n            type: 'integer'\n          },\n          Provider: {},\n          Audience: {},\n          SourceIdentity: {}\n        }\n      }\n    },\n    DecodeAuthorizationMessage: {\n      input: {\n        type: 'structure',\n        required: [\n          'EncodedMessage'\n        ],\n        members: {\n          EncodedMessage: {}\n        }\n      },\n      output: {\n        resultWrapper: 'DecodeAuthorizationMessageResult',\n        type: 'structure',\n        members: {\n          DecodedMessage: {}\n        }\n      }\n    },\n    GetAccessKeyInfo: {\n      input: {\n        type: 'structure',\n        required: [\n          'AccessKeyId'\n        ],\n        members: {\n          AccessKeyId: {}\n        }\n      },\n      output: {\n        resultWrapper: 'GetAccessKeyInfoResult',\n        type: 'structure',\n        members: {\n          Account: {}\n        }\n      }\n    },\n    GetCallerIdentity: {\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        resultWrapper: 'GetCallerIdentityResult',\n        type: 'structure',\n        members: {\n          UserId: {},\n          Account: {},\n          Arn: {}\n        }\n      }\n    },\n    GetFederationToken: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name'\n        ],\n        members: {\n          Name: {},\n          Policy: {},\n          PolicyArns: {\n            shape: 'S4'\n          },\n          DurationSeconds: {\n            type: 'integer'\n          },\n          Tags: {\n            shape: 'S8'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'GetFederationTokenResult',\n        type: 'structure',\n        members: {\n          Credentials: {\n            shape: 'Sl'\n          },\n          FederatedUser: {\n            type: 'structure',\n            required: [\n              'FederatedUserId',\n              'Arn'\n            ],\n            members: {\n              FederatedUserId: {},\n              Arn: {}\n            }\n          },\n          PackedPolicySize: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    GetSessionToken: {\n      input: {\n        type: 'structure',\n        members: {\n          DurationSeconds: {\n            type: 'integer'\n          },\n          SerialNumber: {},\n          TokenCode: {}\n        }\n      },\n      output: {\n        resultWrapper: 'GetSessionTokenResult',\n        type: 'structure',\n        members: {\n          Credentials: {\n            shape: 'Sl'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          arn: {}\n        }\n      }\n    },\n    S8: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sl: {\n      type: 'structure',\n      required: [\n        'AccessKeyId',\n        'SecretAccessKey',\n        'SessionToken',\n        'Expiration'\n      ],\n      members: {\n        AccessKeyId: {},\n        SecretAccessKey: {\n          type: 'string',\n          sensitive: true\n        },\n        SessionToken: {},\n        Expiration: {\n          type: 'timestamp'\n        }\n      }\n    },\n    Sq: {\n      type: 'structure',\n      required: [\n        'AssumedRoleId',\n        'Arn'\n      ],\n      members: {\n        AssumedRoleId: {},\n        Arn: {}\n      }\n    }\n  }\n}"]}