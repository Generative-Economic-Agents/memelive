{"version":3,"sources":["file:///Users/feiwang/cutepet/assets/core/network/http/cryptos.ts"],"names":["h2s","str","length","console","log","a","string","i","parseInt","substr","push","String","fromCharCode","join","key","crtptos","encrypt","data","window","decrypt"],"mappings":";;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,WAASA,GAAT,CAAaC,GAAb,EAAkB;AACd,QAAIA,GAAG,CAACC,MAAJ,GAAa,CAAb,IAAkB,CAAtB,EAAyB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,aAAO,EAAP;AACH;;AACD,QAAIC,CAAJ;AACA,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAAG,CAACC,MAAxB,EAAgCK,CAAC,GAAGA,CAAC,GAAG,CAAxC,EAA2C;AACvCF,MAAAA,CAAC,GAAGG,QAAQ,CAACP,GAAG,CAACQ,MAAJ,CAAWF,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAZ;AACAD,MAAAA,MAAM,CAACI,IAAP,CAAYC,MAAM,CAACC,YAAP,CAAoBP,CAApB,CAAZ;AACH;;AACD,WAAOC,MAAM,CAACO,IAAP,CAAY,EAAZ,CAAP;AACH,G,CAED;;;;;;;;;;;;AACIC,MAAAA,G,GAAMd,GAAG,CAAC,kCAAD,C;AAEPe,MAAAA,O,GAAc,E;;AAEpBA,MAAAA,OAAO,CAACC,OAAR,GAAkBC,IAAI,IAAI;AACtB,eAAOC,MAAM,CAAC,iBAAD,CAAN,CAA0BD,IAA1B,EAAgCH,GAAhC,CAAP;AACH,OAFD;;AAGAC,MAAAA,OAAO,CAACI,OAAR,GAAkBF,IAAI,IAAI;AACtB,eAAOC,MAAM,CAAC,iBAAD,CAAN,CAA0BD,IAA1B,EAAgCH,GAAhC,CAAP;AACH,OAFD;;yBAIeC,O","sourcesContent":["// key 加密了16进制\n\n// import { decrypt, encrypt } from \"../../../../../libs/xxtea\";\n\n// function s2h(str) {\n//   if (str == \"\") return \"\";\n//   let hex = [];\n//   for (var i = 0; i < str.length; i++) {\n//     hex.push(str.charCodeAt(i).toString(16));\n//   }\n//   return hex.join(\"\");\n// }\n\n//转16进制\nfunction h2s(str) {\n    if (str.length % 2 != 0) {\n        console.log('fail');\n        return '';\n    }\n    let a;\n    let string = [];\n    for (var i = 0; i < str.length; i = i + 2) {\n        a = parseInt(str.substr(i, 2), 16);\n        string.push(String.fromCharCode(a));\n    }\n    return string.join('');\n}\n\n//key:qlycjXnrKwT1vNFq  转了16进制\nvar key = h2s('716c79636a586e724b775431764e4671');\n\nconst crtptos:any = {  };\n\ncrtptos.encrypt = data => {\n    return window[\"encryptToString\"](data, key);\n};\ncrtptos.decrypt = data => {\n    return window[\"decryptToString\"](data, key);\n};\n\nexport default crtptos;\n"]}