{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/negate.js"],"names":["negate","predicate","TypeError","FUNC_ERROR_TEXT","args","arguments","length","call","apply"],"mappings":";;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,MAAT,CAAgBC,SAAhB,EAA2B;AACzB,QAAI,OAAOA,SAAP,IAAoB,UAAxB,EAAoC;AAClC,YAAM,IAAIC,SAAJ,CAAcC,eAAd,CAAN;AACD;;AACD,WAAO,YAAW;AAChB,UAAIC,IAAI,GAAGC,SAAX;;AACA,cAAQD,IAAI,CAACE,MAAb;AACE,aAAK,CAAL;AAAQ,iBAAO,CAACL,SAAS,CAACM,IAAV,CAAe,IAAf,CAAR;;AACR,aAAK,CAAL;AAAQ,iBAAO,CAACN,SAAS,CAACM,IAAV,CAAe,IAAf,EAAqBH,IAAI,CAAC,CAAD,CAAzB,CAAR;;AACR,aAAK,CAAL;AAAQ,iBAAO,CAACH,SAAS,CAACM,IAAV,CAAe,IAAf,EAAqBH,IAAI,CAAC,CAAD,CAAzB,EAA8BA,IAAI,CAAC,CAAD,CAAlC,CAAR;;AACR,aAAK,CAAL;AAAQ,iBAAO,CAACH,SAAS,CAACM,IAAV,CAAe,IAAf,EAAqBH,IAAI,CAAC,CAAD,CAAzB,EAA8BA,IAAI,CAAC,CAAD,CAAlC,EAAuCA,IAAI,CAAC,CAAD,CAA3C,CAAR;AAJV;;AAMA,aAAO,CAACH,SAAS,CAACO,KAAV,CAAgB,IAAhB,EAAsBJ,IAAtB,CAAR;AACD,KATD;AAUD;;;;;AArCD;AACID,MAAAA,e,GAAkB,qB;;yBAsCPH,M","sourcesContent":["/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n"]}