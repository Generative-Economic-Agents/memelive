{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/core-js/library/modules/_to-primitive.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","isObject","it","S","fn","val","toString","call","valueOf","TypeError","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;;8BAEHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;AACA,YAAIC,QAAQ,GAAGJ,OAAO,CAAC,cAAD,CAAtB,CAL0F,CAM1F;AACA;;;AACAC,QAAAA,MAAM,CAACF,OAAP,GAAiB,UAAUM,EAAV,EAAcC,CAAd,EAAiB;AAChC,cAAI,CAACF,QAAQ,CAACC,EAAD,CAAb,EAAmB,OAAOA,EAAP;AACnB,cAAIE,EAAJ,EAAQC,GAAR;AACA,cAAIF,CAAC,IAAI,QAAQC,EAAE,GAAGF,EAAE,CAACI,QAAhB,KAA6B,UAAlC,IAAgD,CAACL,QAAQ,CAACI,GAAG,GAAGD,EAAE,CAACG,IAAH,CAAQL,EAAR,CAAP,CAA7D,EAAkF,OAAOG,GAAP;AAClF,cAAI,QAAQD,EAAE,GAAGF,EAAE,CAACM,OAAhB,KAA4B,UAA5B,IAA0C,CAACP,QAAQ,CAACI,GAAG,GAAGD,EAAE,CAACG,IAAH,CAAQL,EAAR,CAAP,CAAvD,EAA4E,OAAOG,GAAP;AAC5E,cAAI,CAACF,CAAD,IAAM,QAAQC,EAAE,GAAGF,EAAE,CAACI,QAAhB,KAA6B,UAAnC,IAAiD,CAACL,QAAQ,CAACI,GAAG,GAAGD,EAAE,CAACG,IAAH,CAAQL,EAAR,CAAP,CAA9D,EAAmF,OAAOG,GAAP;AACnF,gBAAMI,SAAS,CAAC,yCAAD,CAAf;AACD,SAPD,CAR0F,CAkB3F;;;AAEA,2BAAAC,WAAW,GAAGZ,MAAM,CAACF,OAArB;AAGC,OAvBD,EAuBG,OAAO;AACR,wBAAgBJ;AADR,OAAP,CAvBH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './_is-object';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // 7.1.1 ToPrimitive(input [, PreferredType])\n var isObject = require('./_is-object');\n // instead of the ES6 spec version, we didn't implement @@toPrimitive case\n // and the second argument - flag - preferred type is a string\n module.exports = function (it, S) {\n   if (!isObject(it)) return it;\n   var fn, val;\n   if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n   if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n   if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n   throw TypeError(\"Can't convert object to primitive value\");\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './_is-object': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}