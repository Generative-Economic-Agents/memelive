{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/_baseIsEqual.js"],"names":["baseIsEqual","value","other","bitmask","customizer","stack","isObjectLike","baseIsEqualDeep"],"mappings":";;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,UAA5C,EAAwDC,KAAxD,EAA+D;AAC7D,QAAIJ,KAAK,KAAKC,KAAd,EAAqB;AACnB,aAAO,IAAP;AACD;;AACD,QAAID,KAAK,IAAI,IAAT,IAAiBC,KAAK,IAAI,IAA1B,IAAmC,CAACI,YAAY,CAACL,KAAD,CAAb,IAAwB,CAACK,YAAY,CAACJ,KAAD,CAA5E,EAAsF;AACpF,aAAOD,KAAK,KAAKA,KAAV,IAAmBC,KAAK,KAAKA,KAApC;AACD;;AACD,WAAOK,eAAe,CAACN,KAAD,EAAQC,KAAR,EAAeC,OAAf,EAAwBC,UAAxB,EAAoCJ,WAApC,EAAiDK,KAAjD,CAAtB;AACD;;;;AAzBME,MAAAA,e;;AACAD,MAAAA,Y;;;yBA0BQN,W","sourcesContent":["import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n"]}