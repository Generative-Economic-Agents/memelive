{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/event-stream/split-message.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","util","toBuffer","buffer","PRELUDE_MEMBER_LENGTH","PRELUDE_LENGTH","CHECKSUM_LENGTH","MINIMUM_MESSAGE_LENGTH","splitMessage","message","Buffer","isBuffer","length","Error","readUInt32BE","expectedPreludeChecksum","crypto","crc32","slice","expectedMessageChecksum","headersStart","headersEnd","headers","body","_cjsExports","_splitMessage"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;;8BAGHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,IAAI,GAAGJ,OAAO,CAAC,SAAD,CAAP,CAAmBI,IAA9B;;AACA,YAAIC,QAAQ,GAAGD,IAAI,CAACE,MAAL,CAAYD,QAA3B,CAL0F,CAO1F;;AACA,YAAIE,qBAAqB,GAAG,CAA5B,CAR0F,CAS1F;;AACA,YAAIC,cAAc,GAAGD,qBAAqB,GAAG,CAA7C,CAV0F,CAW1F;;AACA,YAAIE,eAAe,GAAG,CAAtB,CAZ0F,CAa1F;;AACA,YAAIC,sBAAsB,GAAGF,cAAc,GAAGC,eAAe,GAAG,CAAhE;AAEA;AACD;AACA;AACA;AACA;;AACC,iBAASE,YAAT,CAAsBC,OAAtB,EAA+B;AAC3B,cAAI,CAACR,IAAI,CAACS,MAAL,CAAYC,QAAZ,CAAqBF,OAArB,CAAL,EAAoCA,OAAO,GAAGP,QAAQ,CAACO,OAAD,CAAlB;;AAEpC,cAAIA,OAAO,CAACG,MAAR,GAAiBL,sBAArB,EAA6C;AACzC,kBAAM,IAAIM,KAAJ,CAAU,yEAAV,CAAN;AACH;;AAED,cAAIJ,OAAO,CAACG,MAAR,KAAmBH,OAAO,CAACK,YAAR,CAAqB,CAArB,CAAvB,EAAgD;AAC5C,kBAAM,IAAID,KAAJ,CAAU,gEAAV,CAAN;AACH;;AAED,cAAIE,uBAAuB,GAAGN,OAAO,CAACK,YAAR,CAAqBT,cAArB,CAA9B;;AAEA,cACIU,uBAAuB,KAAKd,IAAI,CAACe,MAAL,CAAYC,KAAZ,CACxBR,OAAO,CAACS,KAAR,CAAc,CAAd,EAAiBb,cAAjB,CADwB,CADhC,EAIE;AACE,kBAAM,IAAIQ,KAAJ,CACF,oDACAE,uBADA,GAEA,iDAHE,CAAN;AAKH;;AAED,cAAII,uBAAuB,GAAGV,OAAO,CAACK,YAAR,CAAqBL,OAAO,CAACG,MAAR,GAAiBN,eAAtC,CAA9B;;AAEA,cACIa,uBAAuB,KAAKlB,IAAI,CAACe,MAAL,CAAYC,KAAZ,CACxBR,OAAO,CAACS,KAAR,CAAc,CAAd,EAAiBT,OAAO,CAACG,MAAR,GAAiBN,eAAlC,CADwB,CADhC,EAIE;AACE,kBAAM,IAAIO,KAAJ,CACF,8DACIM,uBAFF,CAAN;AAIH;;AAED,cAAIC,YAAY,GAAGf,cAAc,GAAGC,eAApC;AACA,cAAIe,UAAU,GAAGD,YAAY,GAAGX,OAAO,CAACK,YAAR,CAAqBV,qBAArB,CAAhC;AAEA,iBAAO;AACHkB,YAAAA,OAAO,EAAEb,OAAO,CAACS,KAAR,CAAcE,YAAd,EAA4BC,UAA5B,CADN;AAEHE,YAAAA,IAAI,EAAEd,OAAO,CAACS,KAAR,CAAcG,UAAd,EAA0BZ,OAAO,CAACG,MAAR,GAAiBN,eAA3C;AAFH,WAAP;AAIH;AAED;AACD;AACA;;;AACCR,QAAAA,MAAM,CAACF,OAAP,GAAiB;AACbY,UAAAA,YAAY,EAAEA;AADD,SAAjB,CAvE0F,CA4E3F;;AAEA,2BAAAgB,WAAW,GAAG1B,MAAM,CAACF,OAArB;;AACA6B,QAAAA,aAAa,GAAG3B,MAAM,CAACF,OAAP,CAAeY,YAA/B;AAEC,OAjFD,EAiFG,OAAO;AACR,mBAAWhB;AADH,OAAP,CAjFH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nlet _cjsExports;\nlet _splitMessage;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var util = require('../core').util;\n var toBuffer = util.buffer.toBuffer;\n\n // All prelude components are unsigned, 32-bit integers\n var PRELUDE_MEMBER_LENGTH = 4;\n // The prelude consists of two components\n var PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;\n // Checksums are always CRC32 hashes.\n var CHECKSUM_LENGTH = 4;\n // Messages must include a full prelude, a prelude checksum, and a message checksum\n var MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\n\n /**\n  * @api private\n  *\n  * @param {Buffer} message\n  */\n function splitMessage(message) {\n     if (!util.Buffer.isBuffer(message)) message = toBuffer(message);\n\n     if (message.length < MINIMUM_MESSAGE_LENGTH) {\n         throw new Error('Provided message too short to accommodate event stream message overhead');\n     }\n\n     if (message.length !== message.readUInt32BE(0)) {\n         throw new Error('Reported message length does not match received message length');\n     }\n\n     var expectedPreludeChecksum = message.readUInt32BE(PRELUDE_LENGTH);\n\n     if (\n         expectedPreludeChecksum !== util.crypto.crc32(\n             message.slice(0, PRELUDE_LENGTH)\n         )\n     ) {\n         throw new Error(\n             'The prelude checksum specified in the message (' +\n             expectedPreludeChecksum +\n             ') does not match the calculated CRC32 checksum.'\n         );\n     }\n\n     var expectedMessageChecksum = message.readUInt32BE(message.length - CHECKSUM_LENGTH);\n\n     if (\n         expectedMessageChecksum !== util.crypto.crc32(\n             message.slice(0, message.length - CHECKSUM_LENGTH)\n         )\n     ) {\n         throw new Error(\n             'The message checksum did not match the expected value of ' +\n                 expectedMessageChecksum\n         );\n     }\n\n     var headersStart = PRELUDE_LENGTH + CHECKSUM_LENGTH;\n     var headersEnd = headersStart + message.readUInt32BE(PRELUDE_MEMBER_LENGTH);\n\n     return {\n         headers: message.slice(headersStart, headersEnd),\n         body: message.slice(headersEnd, message.length - CHECKSUM_LENGTH),\n     };\n }\n\n /**\n  * @api private\n  */\n module.exports = {\n     splitMessage: splitMessage\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_splitMessage = module.exports.splitMessage;\n\n}, () => ({\n  '../core': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}