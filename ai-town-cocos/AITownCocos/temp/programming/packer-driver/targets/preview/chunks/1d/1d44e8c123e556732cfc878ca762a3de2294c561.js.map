{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/which-typed-array/index.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","url","define","exports","require","module","__filename","__dirname","forEach","availableTypedArrays","callBind","callBound","gOPD","$toString","hasToStringTag","g","globalThis","global","typedArrays","$slice","getPrototypeOf","Object","$indexOf","indexOf","array","value","i","length","cache","__proto__","typedArray","arr","Symbol","toStringTag","proto","descriptor","superProto","get","fn","slice","set","tryTypedArrays","tryAllTypedArrays","found","getter","e","trySlices","tryAllSlices","name","whichTypedArray","tag","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'for-each';\nimport { __cjsMetaURL as _req0} from 'available-typed-arrays';\nimport { __cjsMetaURL as _req1} from 'call-bind';\nimport { __cjsMetaURL as _req2} from 'call-bind/callBound';\nimport { __cjsMetaURL as _req3} from 'gopd';\nimport { __cjsMetaURL as _req4} from 'has-tostringtag/shams';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n 'use strict';\n\n var forEach = require('for-each');\n var availableTypedArrays = require('available-typed-arrays');\n var callBind = require('call-bind');\n var callBound = require('call-bind/callBound');\n var gOPD = require('gopd');\n\n /** @type {(O: object) => string} */\n var $toString = callBound('Object.prototype.toString');\n var hasToStringTag = require('has-tostringtag/shams')();\n\n var g = typeof globalThis === 'undefined' ? global : globalThis;\n var typedArrays = availableTypedArrays();\n\n var $slice = callBound('String.prototype.slice');\n var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\n /** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\n var $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n \tfor (var i = 0; i < array.length; i += 1) {\n \t\tif (array[i] === value) {\n \t\t\treturn i;\n \t\t}\n \t}\n \treturn -1;\n };\n\n /** @typedef {(receiver: import('.').TypedArray) => string | typeof Uint8Array.prototype.slice.call | typeof Uint8Array.prototype.set.call} Getter */\n /** @type {{ [k in `\\$${import('.').TypedArrayName}`]?: Getter } & { __proto__: null }} */\n var cache = { __proto__: null };\n if (hasToStringTag && gOPD && getPrototypeOf) {\n \tforEach(typedArrays, function (typedArray) {\n \t\tvar arr = new g[typedArray]();\n \t\tif (Symbol.toStringTag in arr) {\n \t\t\tvar proto = getPrototypeOf(arr);\n \t\t\t// @ts-expect-error TS won't narrow inside a closure\n \t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n \t\t\tif (!descriptor) {\n \t\t\t\tvar superProto = getPrototypeOf(proto);\n \t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n \t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n \t\t\t}\n \t\t\t// @ts-expect-error TODO: fix\n \t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n \t\t}\n \t});\n } else {\n \tforEach(typedArrays, function (typedArray) {\n \t\tvar arr = new g[typedArray]();\n \t\tvar fn = arr.slice || arr.set;\n \t\tif (fn) {\n \t\t\t// @ts-expect-error TODO: fix\n \t\t\tcache['$' + typedArray] = callBind(fn);\n \t\t}\n \t});\n }\n\n /** @type {(value: object) => false | import('.').TypedArrayName} */\n var tryTypedArrays = function tryAllTypedArrays(value) {\n \t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n \tforEach(\n \t\t// eslint-disable-next-line no-extra-parens\n \t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n \t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n \t\tfunction (getter, typedArray) {\n \t\t\tif (!found) {\n \t\t\t\ttry {\n \t\t\t\t// @ts-expect-error TODO: fix\n \t\t\t\t\tif ('$' + getter(value) === typedArray) {\n \t\t\t\t\t\tfound = $slice(typedArray, 1);\n \t\t\t\t\t}\n \t\t\t\t} catch (e) { /**/ }\n \t\t\t}\n \t\t}\n \t);\n \treturn found;\n };\n\n /** @type {(value: object) => false | import('.').TypedArrayName} */\n var trySlices = function tryAllSlices(value) {\n \t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n \tforEach(\n \t\t// eslint-disable-next-line no-extra-parens\n \t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n \t\t/** @type {(getter: typeof cache, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n \t\t\tif (!found) {\n \t\t\t\ttry {\n \t\t\t\t\t// @ts-expect-error TODO: fix\n \t\t\t\t\tgetter(value);\n \t\t\t\t\tfound = $slice(name, 1);\n \t\t\t\t} catch (e) { /**/ }\n \t\t\t}\n \t\t}\n \t);\n \treturn found;\n };\n\n /** @type {import('.')} */\n module.exports = function whichTypedArray(value) {\n \tif (!value || typeof value !== 'object') { return false; }\n \tif (!hasToStringTag) {\n \t\t/** @type {string} */\n \t\tvar tag = $slice($toString(value), 8, -1);\n \t\tif ($indexOf(typedArrays, tag) > -1) {\n \t\t\treturn tag;\n \t\t}\n \t\tif (tag !== 'Object') {\n \t\t\treturn false;\n \t\t}\n \t\t// node < 0.6 hits here on real Typed Arrays\n \t\treturn trySlices(value);\n \t}\n \tif (!gOPD) { return null; } // unknown engine\n \treturn tryTypedArrays(value);\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'for-each': _req,\n  'available-typed-arrays': _req0,\n  'call-bind': _req1,\n  'call-bind/callBound': _req2,\n  'gopd': _req3,\n  'has-tostringtag/shams': _req4,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}