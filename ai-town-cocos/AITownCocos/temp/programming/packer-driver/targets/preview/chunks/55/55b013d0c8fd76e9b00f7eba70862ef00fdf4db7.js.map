{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/comprehendmedical-2018-10-30.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","DescribeEntitiesDetectionV2Job","input","type","required","members","JobId","output","ComprehendMedicalAsyncJobProperties","shape","DescribeICD10CMInferenceJob","DescribePHIDetectionJob","DescribeRxNormInferenceJob","DescribeSNOMEDCTInferenceJob","DetectEntities","Text","Entities","UnmappedAttributes","PaginationToken","ModelVersion","deprecated","deprecatedMessage","DetectEntitiesV2","DetectPHI","InferICD10CM","member","Id","Category","Type","Score","BeginOffset","EndOffset","Attributes","RelationshipScore","Traits","RelationshipType","ICD10CMConcepts","Description","Code","InferRxNorm","RxNormConcepts","InferSNOMEDCT","SNOMEDCTConcepts","SNOMEDCTDetails","Edition","Language","VersionDate","Characters","OriginalTextCharacters","ListEntitiesDetectionV2Jobs","Filter","NextToken","MaxResults","ComprehendMedicalAsyncJobPropertiesList","ListICD10CMInferenceJobs","ListPHIDetectionJobs","ListRxNormInferenceJobs","ListSNOMEDCTInferenceJobs","StartEntitiesDetectionV2Job","InputDataConfig","OutputDataConfig","DataAccessRoleArn","JobName","ClientRequestToken","idempotencyToken","KMSKey","LanguageCode","StartICD10CMInferenceJob","StartPHIDetectionJob","StartRxNormInferenceJob","StartSNOMEDCTInferenceJob","StopEntitiesDetectionV2Job","StopICD10CMInferenceJob","StopPHIDetectionJob","StopRxNormInferenceJob","StopSNOMEDCTInferenceJob","shapes","S4","JobStatus","Message","SubmitTime","EndTime","ExpirationTime","ManifestFilePath","S9","S3Bucket","S3Key","Sc","St","S10","Name","S14","S16","Attribute","S1m","S21","S2g","S2j","S2o","SubmitTimeBefore","SubmitTimeAfter","S2r"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-10-30',\n    endpointPrefix: 'comprehendmedical',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceAbbreviation: 'ComprehendMedical',\n    serviceFullName: 'AWS Comprehend Medical',\n    serviceId: 'ComprehendMedical',\n    signatureVersion: 'v4',\n    signingName: 'comprehendmedical',\n    targetPrefix: 'ComprehendMedical_20181030',\n    uid: 'comprehendmedical-2018-10-30'\n  },\n  operations: {\n    DescribeEntitiesDetectionV2Job: {\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ComprehendMedicalAsyncJobProperties: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    DescribeICD10CMInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ComprehendMedicalAsyncJobProperties: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    DescribePHIDetectionJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ComprehendMedicalAsyncJobProperties: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    DescribeRxNormInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ComprehendMedicalAsyncJobProperties: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    DescribeSNOMEDCTInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ComprehendMedicalAsyncJobProperties: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    DetectEntities: {\n      input: {\n        type: 'structure',\n        required: [\n          'Text'\n        ],\n        members: {\n          Text: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entities',\n          'ModelVersion'\n        ],\n        members: {\n          Entities: {\n            shape: 'St'\n          },\n          UnmappedAttributes: {\n            shape: 'S16'\n          },\n          PaginationToken: {},\n          ModelVersion: {}\n        }\n      },\n      deprecated: true,\n      deprecatedMessage: 'This operation is deprecated, use DetectEntitiesV2 instead.'\n    },\n    DetectEntitiesV2: {\n      input: {\n        type: 'structure',\n        required: [\n          'Text'\n        ],\n        members: {\n          Text: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entities',\n          'ModelVersion'\n        ],\n        members: {\n          Entities: {\n            shape: 'St'\n          },\n          UnmappedAttributes: {\n            shape: 'S16'\n          },\n          PaginationToken: {},\n          ModelVersion: {}\n        }\n      }\n    },\n    DetectPHI: {\n      input: {\n        type: 'structure',\n        required: [\n          'Text'\n        ],\n        members: {\n          Text: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entities',\n          'ModelVersion'\n        ],\n        members: {\n          Entities: {\n            shape: 'St'\n          },\n          PaginationToken: {},\n          ModelVersion: {}\n        }\n      }\n    },\n    InferICD10CM: {\n      input: {\n        type: 'structure',\n        required: [\n          'Text'\n        ],\n        members: {\n          Text: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entities'\n        ],\n        members: {\n          Entities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {\n                  type: 'integer'\n                },\n                Text: {},\n                Category: {},\n                Type: {},\n                Score: {\n                  type: 'float'\n                },\n                BeginOffset: {\n                  type: 'integer'\n                },\n                EndOffset: {\n                  type: 'integer'\n                },\n                Attributes: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      Type: {},\n                      Score: {\n                        type: 'float'\n                      },\n                      RelationshipScore: {\n                        type: 'float'\n                      },\n                      Id: {\n                        type: 'integer'\n                      },\n                      BeginOffset: {\n                        type: 'integer'\n                      },\n                      EndOffset: {\n                        type: 'integer'\n                      },\n                      Text: {},\n                      Traits: {\n                        shape: 'S1m'\n                      },\n                      Category: {},\n                      RelationshipType: {}\n                    }\n                  }\n                },\n                Traits: {\n                  shape: 'S1m'\n                },\n                ICD10CMConcepts: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      Description: {},\n                      Code: {},\n                      Score: {\n                        type: 'float'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          PaginationToken: {},\n          ModelVersion: {}\n        }\n      }\n    },\n    InferRxNorm: {\n      input: {\n        type: 'structure',\n        required: [\n          'Text'\n        ],\n        members: {\n          Text: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entities'\n        ],\n        members: {\n          Entities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {\n                  type: 'integer'\n                },\n                Text: {},\n                Category: {},\n                Type: {},\n                Score: {\n                  type: 'float'\n                },\n                BeginOffset: {\n                  type: 'integer'\n                },\n                EndOffset: {\n                  type: 'integer'\n                },\n                Attributes: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      Type: {},\n                      Score: {\n                        type: 'float'\n                      },\n                      RelationshipScore: {\n                        type: 'float'\n                      },\n                      Id: {\n                        type: 'integer'\n                      },\n                      BeginOffset: {\n                        type: 'integer'\n                      },\n                      EndOffset: {\n                        type: 'integer'\n                      },\n                      Text: {},\n                      Traits: {\n                        shape: 'S21'\n                      }\n                    }\n                  }\n                },\n                Traits: {\n                  shape: 'S21'\n                },\n                RxNormConcepts: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      Description: {},\n                      Code: {},\n                      Score: {\n                        type: 'float'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          PaginationToken: {},\n          ModelVersion: {}\n        }\n      }\n    },\n    InferSNOMEDCT: {\n      input: {\n        type: 'structure',\n        required: [\n          'Text'\n        ],\n        members: {\n          Text: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Entities'\n        ],\n        members: {\n          Entities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Id: {\n                  type: 'integer'\n                },\n                Text: {},\n                Category: {},\n                Type: {},\n                Score: {\n                  type: 'float'\n                },\n                BeginOffset: {\n                  type: 'integer'\n                },\n                EndOffset: {\n                  type: 'integer'\n                },\n                Attributes: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      Category: {},\n                      Type: {},\n                      Score: {\n                        type: 'float'\n                      },\n                      RelationshipScore: {\n                        type: 'float'\n                      },\n                      RelationshipType: {},\n                      Id: {\n                        type: 'integer'\n                      },\n                      BeginOffset: {\n                        type: 'integer'\n                      },\n                      EndOffset: {\n                        type: 'integer'\n                      },\n                      Text: {},\n                      Traits: {\n                        shape: 'S2g'\n                      },\n                      SNOMEDCTConcepts: {\n                        shape: 'S2j'\n                      }\n                    }\n                  }\n                },\n                Traits: {\n                  shape: 'S2g'\n                },\n                SNOMEDCTConcepts: {\n                  shape: 'S2j'\n                }\n              }\n            }\n          },\n          PaginationToken: {},\n          ModelVersion: {},\n          SNOMEDCTDetails: {\n            type: 'structure',\n            members: {\n              Edition: {},\n              Language: {},\n              VersionDate: {}\n            }\n          },\n          Characters: {\n            type: 'structure',\n            members: {\n              OriginalTextCharacters: {\n                type: 'integer'\n              }\n            }\n          }\n        }\n      }\n    },\n    ListEntitiesDetectionV2Jobs: {\n      input: {\n        type: 'structure',\n        members: {\n          Filter: {\n            shape: 'S2o'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ComprehendMedicalAsyncJobPropertiesList: {\n            shape: 'S2r'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListICD10CMInferenceJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          Filter: {\n            shape: 'S2o'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ComprehendMedicalAsyncJobPropertiesList: {\n            shape: 'S2r'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListPHIDetectionJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          Filter: {\n            shape: 'S2o'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ComprehendMedicalAsyncJobPropertiesList: {\n            shape: 'S2r'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListRxNormInferenceJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          Filter: {\n            shape: 'S2o'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ComprehendMedicalAsyncJobPropertiesList: {\n            shape: 'S2r'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListSNOMEDCTInferenceJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          Filter: {\n            shape: 'S2o'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ComprehendMedicalAsyncJobPropertiesList: {\n            shape: 'S2r'\n          },\n          NextToken: {}\n        }\n      }\n    },\n    StartEntitiesDetectionV2Job: {\n      input: {\n        type: 'structure',\n        required: [\n          'InputDataConfig',\n          'OutputDataConfig',\n          'DataAccessRoleArn',\n          'LanguageCode'\n        ],\n        members: {\n          InputDataConfig: {\n            shape: 'S9'\n          },\n          OutputDataConfig: {\n            shape: 'Sc'\n          },\n          DataAccessRoleArn: {},\n          JobName: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          KMSKey: {},\n          LanguageCode: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    StartICD10CMInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'InputDataConfig',\n          'OutputDataConfig',\n          'DataAccessRoleArn',\n          'LanguageCode'\n        ],\n        members: {\n          InputDataConfig: {\n            shape: 'S9'\n          },\n          OutputDataConfig: {\n            shape: 'Sc'\n          },\n          DataAccessRoleArn: {},\n          JobName: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          KMSKey: {},\n          LanguageCode: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    StartPHIDetectionJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'InputDataConfig',\n          'OutputDataConfig',\n          'DataAccessRoleArn',\n          'LanguageCode'\n        ],\n        members: {\n          InputDataConfig: {\n            shape: 'S9'\n          },\n          OutputDataConfig: {\n            shape: 'Sc'\n          },\n          DataAccessRoleArn: {},\n          JobName: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          KMSKey: {},\n          LanguageCode: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    StartRxNormInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'InputDataConfig',\n          'OutputDataConfig',\n          'DataAccessRoleArn',\n          'LanguageCode'\n        ],\n        members: {\n          InputDataConfig: {\n            shape: 'S9'\n          },\n          OutputDataConfig: {\n            shape: 'Sc'\n          },\n          DataAccessRoleArn: {},\n          JobName: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          KMSKey: {},\n          LanguageCode: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    StartSNOMEDCTInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'InputDataConfig',\n          'OutputDataConfig',\n          'DataAccessRoleArn',\n          'LanguageCode'\n        ],\n        members: {\n          InputDataConfig: {\n            shape: 'S9'\n          },\n          OutputDataConfig: {\n            shape: 'Sc'\n          },\n          DataAccessRoleArn: {},\n          JobName: {},\n          ClientRequestToken: {\n            idempotencyToken: true\n          },\n          KMSKey: {},\n          LanguageCode: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    StopEntitiesDetectionV2Job: {\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    StopICD10CMInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    StopPHIDetectionJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    StopRxNormInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobId: {}\n        }\n      }\n    },\n    StopSNOMEDCTInferenceJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'JobId'\n        ],\n        members: {\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobId: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'structure',\n      members: {\n        JobId: {},\n        JobName: {},\n        JobStatus: {},\n        Message: {},\n        SubmitTime: {\n          type: 'timestamp'\n        },\n        EndTime: {\n          type: 'timestamp'\n        },\n        ExpirationTime: {\n          type: 'timestamp'\n        },\n        InputDataConfig: {\n          shape: 'S9'\n        },\n        OutputDataConfig: {\n          shape: 'Sc'\n        },\n        LanguageCode: {},\n        DataAccessRoleArn: {},\n        ManifestFilePath: {},\n        KMSKey: {},\n        ModelVersion: {}\n      }\n    },\n    S9: {\n      type: 'structure',\n      required: [\n        'S3Bucket'\n      ],\n      members: {\n        S3Bucket: {},\n        S3Key: {}\n      }\n    },\n    Sc: {\n      type: 'structure',\n      required: [\n        'S3Bucket'\n      ],\n      members: {\n        S3Bucket: {},\n        S3Key: {}\n      }\n    },\n    St: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Id: {\n            type: 'integer'\n          },\n          BeginOffset: {\n            type: 'integer'\n          },\n          EndOffset: {\n            type: 'integer'\n          },\n          Score: {\n            type: 'float'\n          },\n          Text: {},\n          Category: {},\n          Type: {},\n          Traits: {\n            shape: 'S10'\n          },\n          Attributes: {\n            type: 'list',\n            member: {\n              shape: 'S14'\n            }\n          }\n        }\n      }\n    },\n    S10: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Name: {},\n          Score: {\n            type: 'float'\n          }\n        }\n      }\n    },\n    S14: {\n      type: 'structure',\n      members: {\n        Type: {},\n        Score: {\n          type: 'float'\n        },\n        RelationshipScore: {\n          type: 'float'\n        },\n        RelationshipType: {},\n        Id: {\n          type: 'integer'\n        },\n        BeginOffset: {\n          type: 'integer'\n        },\n        EndOffset: {\n          type: 'integer'\n        },\n        Text: {},\n        Category: {},\n        Traits: {\n          shape: 'S10'\n        }\n      }\n    },\n    S16: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Type: {},\n          Attribute: {\n            shape: 'S14'\n          }\n        }\n      }\n    },\n    S1m: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Name: {},\n          Score: {\n            type: 'float'\n          }\n        }\n      }\n    },\n    S21: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Name: {},\n          Score: {\n            type: 'float'\n          }\n        }\n      }\n    },\n    S2g: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Name: {},\n          Score: {\n            type: 'float'\n          }\n        }\n      }\n    },\n    S2j: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Description: {},\n          Code: {},\n          Score: {\n            type: 'float'\n          }\n        }\n      }\n    },\n    S2o: {\n      type: 'structure',\n      members: {\n        JobName: {},\n        JobStatus: {},\n        SubmitTimeBefore: {\n          type: 'timestamp'\n        },\n        SubmitTimeAfter: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S2r: {\n      type: 'list',\n      member: {\n        shape: 'S4'\n      }\n    }\n  }\n}"]}