{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/services/ec2.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","AWS","util","update","EC2","prototype","setupRequestListeners","request","removeListener","EventListeners","Query","EXTRACT_ERROR","addListener","extractError","operation","onAsync","buildCopySnapshotPresignedUrl","req","done","params","PresignedUrl","_subRequest","copy","DestinationRegion","service","config","region","endpoint","SourceRegion","svc","constructor","newReq","presign","err","resp","httpResponse","data","XML","Parser","parse","body","toString","Errors","error","Error","code","Code","message","Message","statusCode","requestId","RequestID","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n\n AWS.util.update(AWS.EC2.prototype, {\n   /**\n    * @api private\n    */\n   setupRequestListeners: function setupRequestListeners(request) {\n     request.removeListener('extractError', AWS.EventListeners.Query.EXTRACT_ERROR);\n     request.addListener('extractError', this.extractError);\n\n     if (request.operation === 'copySnapshot') {\n       request.onAsync('validate', this.buildCopySnapshotPresignedUrl);\n     }\n   },\n\n   /**\n    * @api private\n    */\n   buildCopySnapshotPresignedUrl: function buildCopySnapshotPresignedUrl(req, done) {\n     if (req.params.PresignedUrl || req._subRequest) {\n       return done();\n     }\n\n     req.params = AWS.util.copy(req.params);\n     req.params.DestinationRegion = req.service.config.region;\n\n     var config = AWS.util.copy(req.service.config);\n     delete config.endpoint;\n     config.region = req.params.SourceRegion;\n     var svc = new req.service.constructor(config);\n     var newReq = svc[req.operation](req.params);\n     newReq._subRequest = true;\n     newReq.presign(function(err, url) {\n       if (err) done(err);\n       else {\n         req.params.PresignedUrl = url;\n         done();\n       }\n     });\n   },\n\n   /**\n    * @api private\n    */\n   extractError: function extractError(resp) {\n     // EC2 nests the error code and message deeper than other AWS Query services.\n     var httpResponse = resp.httpResponse;\n     var data = new AWS.XML.Parser().parse(httpResponse.body.toString() || '');\n     if (data.Errors) {\n       resp.error = AWS.util.error(new Error(), {\n         code: data.Errors.Error.Code,\n         message: data.Errors.Error.Message\n       });\n     } else {\n       resp.error = AWS.util.error(new Error(), {\n         code: httpResponse.statusCode,\n         message: null\n       });\n     }\n     resp.error.requestId = data.RequestID || null;\n   }\n });\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}