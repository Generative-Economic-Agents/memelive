{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/_lazyValue.js"],"names":["lazyValue","array","__wrapped__","value","dir","__dir__","isArr","isArray","isRight","arrLength","length","view","getView","__views__","start","end","index","iteratees","__iteratees__","iterLength","resIndex","takeCount","nativeMin","__takeCount__","baseWrapperValue","__actions__","result","outer","iterIndex","data","iteratee","type","computed","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Math","min"],"mappings":";;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,SAAT,GAAqB;AACnB,QAAIC,KAAK,GAAG,KAAKC,WAAL,CAAiBC,KAAjB,EAAZ;AAAA,QACIC,GAAG,GAAG,KAAKC,OADf;AAAA,QAEIC,KAAK,GAAGC,OAAO,CAACN,KAAD,CAFnB;AAAA,QAGIO,OAAO,GAAGJ,GAAG,GAAG,CAHpB;AAAA,QAIIK,SAAS,GAAGH,KAAK,GAAGL,KAAK,CAACS,MAAT,GAAkB,CAJvC;AAAA,QAKIC,IAAI,GAAGC,OAAO,CAAC,CAAD,EAAIH,SAAJ,EAAe,KAAKI,SAApB,CALlB;AAAA,QAMIC,KAAK,GAAGH,IAAI,CAACG,KANjB;AAAA,QAOIC,GAAG,GAAGJ,IAAI,CAACI,GAPf;AAAA,QAQIL,MAAM,GAAGK,GAAG,GAAGD,KARnB;AAAA,QASIE,KAAK,GAAGR,OAAO,GAAGO,GAAH,GAAUD,KAAK,GAAG,CATrC;AAAA,QAUIG,SAAS,GAAG,KAAKC,aAVrB;AAAA,QAWIC,UAAU,GAAGF,SAAS,CAACP,MAX3B;AAAA,QAYIU,QAAQ,GAAG,CAZf;AAAA,QAaIC,SAAS,GAAGC,SAAS,CAACZ,MAAD,EAAS,KAAKa,aAAd,CAbzB;;AAeA,QAAI,CAACjB,KAAD,IAAW,CAACE,OAAD,IAAYC,SAAS,IAAIC,MAAzB,IAAmCW,SAAS,IAAIX,MAA/D,EAAwE;AACtE,aAAOc,gBAAgB,CAACvB,KAAD,EAAQ,KAAKwB,WAAb,CAAvB;AACD;;AACD,QAAIC,MAAM,GAAG,EAAb;;AAEAC,IAAAA,KAAK,EACL,OAAOjB,MAAM,MAAMU,QAAQ,GAAGC,SAA9B,EAAyC;AACvCL,MAAAA,KAAK,IAAIZ,GAAT;AAEA,UAAIwB,SAAS,GAAG,CAAC,CAAjB;AAAA,UACIzB,KAAK,GAAGF,KAAK,CAACe,KAAD,CADjB;;AAGA,aAAO,EAAEY,SAAF,GAAcT,UAArB,EAAiC;AAC/B,YAAIU,IAAI,GAAGZ,SAAS,CAACW,SAAD,CAApB;AAAA,YACIE,QAAQ,GAAGD,IAAI,CAACC,QADpB;AAAA,YAEIC,IAAI,GAAGF,IAAI,CAACE,IAFhB;AAAA,YAGIC,QAAQ,GAAGF,QAAQ,CAAC3B,KAAD,CAHvB;;AAKA,YAAI4B,IAAI,IAAIE,aAAZ,EAA2B;AACzB9B,UAAAA,KAAK,GAAG6B,QAAR;AACD,SAFD,MAEO,IAAI,CAACA,QAAL,EAAe;AACpB,cAAID,IAAI,IAAIG,gBAAZ,EAA8B;AAC5B,qBAASP,KAAT;AACD,WAFD,MAEO;AACL,kBAAMA,KAAN;AACD;AACF;AACF;;AACDD,MAAAA,MAAM,CAACN,QAAQ,EAAT,CAAN,GAAqBjB,KAArB;AACD;;AACD,WAAOuB,MAAP;AACD;;;;AAlEMF,MAAAA,gB;;AACAZ,MAAAA,O;;AACAL,MAAAA,O;;;AAEP;AACI2B,MAAAA,gB,GAAmB,C;AACnBD,MAAAA,a,GAAgB,C;AAEpB;;AACIX,MAAAA,S,GAAYa,IAAI,CAACC,G;;yBA2DNpC,S","sourcesContent":["import baseWrapperValue from './_baseWrapperValue.js';\nimport getView from './_getView.js';\nimport isArray from './isArray.js';\n\n/** Used to indicate the type of lazy iteratees. */\nvar LAZY_FILTER_FLAG = 1,\n    LAZY_MAP_FLAG = 2;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Extracts the unwrapped value from its lazy wrapper.\n *\n * @private\n * @name value\n * @memberOf LazyWrapper\n * @returns {*} Returns the unwrapped value.\n */\nfunction lazyValue() {\n  var array = this.__wrapped__.value(),\n      dir = this.__dir__,\n      isArr = isArray(array),\n      isRight = dir < 0,\n      arrLength = isArr ? array.length : 0,\n      view = getView(0, arrLength, this.__views__),\n      start = view.start,\n      end = view.end,\n      length = end - start,\n      index = isRight ? end : (start - 1),\n      iteratees = this.__iteratees__,\n      iterLength = iteratees.length,\n      resIndex = 0,\n      takeCount = nativeMin(length, this.__takeCount__);\n\n  if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n    return baseWrapperValue(array, this.__actions__);\n  }\n  var result = [];\n\n  outer:\n  while (length-- && resIndex < takeCount) {\n    index += dir;\n\n    var iterIndex = -1,\n        value = array[index];\n\n    while (++iterIndex < iterLength) {\n      var data = iteratees[iterIndex],\n          iteratee = data.iteratee,\n          type = data.type,\n          computed = iteratee(value);\n\n      if (type == LAZY_MAP_FLAG) {\n        value = computed;\n      } else if (!computed) {\n        if (type == LAZY_FILTER_FLAG) {\n          continue outer;\n        } else {\n          break outer;\n        }\n      }\n    }\n    result[resIndex++] = value;\n  }\n  return result;\n}\n\nexport default lazyValue;\n"]}