{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/signers/v2.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","AWS","inherit","util","Signers","V2","RequestSigner","addAuthorization","credentials","date","getDate","r","request","params","Timestamp","iso8601","SignatureVersion","SignatureMethod","AWSAccessKeyId","accessKeyId","sessionToken","SecurityToken","Signature","signature","body","queryParamsToString","headers","length","crypto","hmac","secretAccessKey","stringToSign","parts","push","method","endpoint","host","toLowerCase","pathname","join","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n var inherit = AWS.util.inherit;\n\n /**\n  * @api private\n  */\n AWS.Signers.V2 = inherit(AWS.Signers.RequestSigner, {\n   addAuthorization: function addAuthorization(credentials, date) {\n\n     if (!date) date = AWS.util.date.getDate();\n\n     var r = this.request;\n\n     r.params.Timestamp = AWS.util.date.iso8601(date);\n     r.params.SignatureVersion = '2';\n     r.params.SignatureMethod = 'HmacSHA256';\n     r.params.AWSAccessKeyId = credentials.accessKeyId;\n\n     if (credentials.sessionToken) {\n       r.params.SecurityToken = credentials.sessionToken;\n     }\n\n     delete r.params.Signature; // delete old Signature for re-signing\n     r.params.Signature = this.signature(credentials);\n\n     r.body = AWS.util.queryParamsToString(r.params);\n     r.headers['Content-Length'] = r.body.length;\n   },\n\n   signature: function signature(credentials) {\n     return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\n   },\n\n   stringToSign: function stringToSign() {\n     var parts = [];\n     parts.push(this.request.method);\n     parts.push(this.request.endpoint.host.toLowerCase());\n     parts.push(this.request.pathname());\n     parts.push(AWS.util.queryParamsToString(this.request.params));\n     return parts.join('\\n');\n   }\n\n });\n\n /**\n  * @api private\n  */\n module.exports = AWS.Signers.V2;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}