{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/timestream-write-2018-11-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","CreateBatchLoadTask","input","type","required","members","ClientToken","idempotencyToken","sensitive","DataModelConfiguration","shape","DataSourceConfiguration","ReportConfiguration","TargetDatabaseName","TargetTableName","RecordVersion","output","TaskId","endpointdiscovery","CreateDatabase","DatabaseName","KmsKeyId","Tags","Database","CreateTable","TableName","RetentionProperties","MagneticStoreWriteProperties","Schema","Table","DeleteDatabase","DeleteTable","DescribeBatchLoadTask","BatchLoadTaskDescription","ErrorMessage","ProgressReport","RecordsProcessed","RecordsIngested","ParseFailures","RecordIngestionFailures","FileFailures","BytesMetered","TaskStatus","CreationTime","LastUpdatedTime","ResumableUntil","DescribeDatabase","DescribeEndpoints","Endpoints","member","Address","CachePeriodInMinutes","endpointoperation","DescribeTable","ListBatchLoadTasks","NextToken","MaxResults","BatchLoadTasks","ListDatabases","Databases","ListTables","Tables","ListTagsForResource","ResourceARN","ResumeBatchLoadTask","TagResource","UntagResource","TagKeys","UpdateDatabase","UpdateTable","WriteRecords","CommonAttributes","Records","Total","MemoryStore","MagneticStore","shapes","S3","DataModel","TimeColumn","TimeUnit","DimensionMappings","SourceColumn","DestinationColumn","MultiMeasureMappings","TargetMultiMeasureName","MultiMeasureAttributeMappings","MixedMeasureMappings","MeasureName","TargetMeasureName","MeasureValueType","MeasureNameColumn","DataModelS3Configuration","BucketName","ObjectKey","Sb","TargetMultiMeasureAttributeName","Sk","DataSourceS3Configuration","ObjectKeyPrefix","CsvConfiguration","ColumnSeparator","EscapeChar","QuoteChar","NullValue","TrimWhiteSpace","DataFormat","Sq","ReportS3Configuration","EncryptionOption","S10","Key","Value","S15","Arn","TableCount","S1b","MemoryStoreRetentionPeriodInHours","MagneticStoreRetentionPeriodInDays","S1e","EnableMagneticStoreWrites","MagneticStoreRejectedDataLocation","S3Configuration","S1h","CompositePartitionKey","Type","Name","EnforcementInRecord","S1n","TableStatus","S2v","Dimensions","DimensionValueType","MeasureValue","Time","Version","MeasureValues"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-11-01',\n    endpointPrefix: 'ingest.timestream',\n    jsonVersion: '1.0',\n    protocol: 'json',\n    serviceAbbreviation: 'Timestream Write',\n    serviceFullName: 'Amazon Timestream Write',\n    serviceId: 'Timestream Write',\n    signatureVersion: 'v4',\n    signingName: 'timestream',\n    targetPrefix: 'Timestream_20181101',\n    uid: 'timestream-write-2018-11-01'\n  },\n  operations: {\n    CreateBatchLoadTask: {\n      input: {\n        type: 'structure',\n        required: [\n          'DataSourceConfiguration',\n          'ReportConfiguration',\n          'TargetDatabaseName',\n          'TargetTableName'\n        ],\n        members: {\n          ClientToken: {\n            idempotencyToken: true,\n            type: 'string',\n            sensitive: true\n          },\n          DataModelConfiguration: {\n            shape: 'S3'\n          },\n          DataSourceConfiguration: {\n            shape: 'Sk'\n          },\n          ReportConfiguration: {\n            shape: 'Sq'\n          },\n          TargetDatabaseName: {},\n          TargetTableName: {},\n          RecordVersion: {\n            type: 'long'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TaskId'\n        ],\n        members: {\n          TaskId: {}\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    CreateDatabase: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatabaseName'\n        ],\n        members: {\n          DatabaseName: {},\n          KmsKeyId: {},\n          Tags: {\n            shape: 'S10'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Database: {\n            shape: 'S15'\n          }\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    CreateTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatabaseName',\n          'TableName'\n        ],\n        members: {\n          DatabaseName: {},\n          TableName: {},\n          RetentionProperties: {\n            shape: 'S1b'\n          },\n          Tags: {\n            shape: 'S10'\n          },\n          MagneticStoreWriteProperties: {\n            shape: 'S1e'\n          },\n          Schema: {\n            shape: 'S1h'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Table: {\n            shape: 'S1n'\n          }\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    DeleteDatabase: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatabaseName'\n        ],\n        members: {\n          DatabaseName: {}\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    DeleteTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatabaseName',\n          'TableName'\n        ],\n        members: {\n          DatabaseName: {},\n          TableName: {}\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    DescribeBatchLoadTask: {\n      input: {\n        type: 'structure',\n        required: [\n          'TaskId'\n        ],\n        members: {\n          TaskId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'BatchLoadTaskDescription'\n        ],\n        members: {\n          BatchLoadTaskDescription: {\n            type: 'structure',\n            members: {\n              TaskId: {},\n              ErrorMessage: {},\n              DataSourceConfiguration: {\n                shape: 'Sk'\n              },\n              ProgressReport: {\n                type: 'structure',\n                members: {\n                  RecordsProcessed: {\n                    type: 'long'\n                  },\n                  RecordsIngested: {\n                    type: 'long'\n                  },\n                  ParseFailures: {\n                    type: 'long'\n                  },\n                  RecordIngestionFailures: {\n                    type: 'long'\n                  },\n                  FileFailures: {\n                    type: 'long'\n                  },\n                  BytesMetered: {\n                    type: 'long'\n                  }\n                }\n              },\n              ReportConfiguration: {\n                shape: 'Sq'\n              },\n              DataModelConfiguration: {\n                shape: 'S3'\n              },\n              TargetDatabaseName: {},\n              TargetTableName: {},\n              TaskStatus: {},\n              RecordVersion: {\n                type: 'long'\n              },\n              CreationTime: {\n                type: 'timestamp'\n              },\n              LastUpdatedTime: {\n                type: 'timestamp'\n              },\n              ResumableUntil: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    DescribeDatabase: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatabaseName'\n        ],\n        members: {\n          DatabaseName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Database: {\n            shape: 'S15'\n          }\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    DescribeEndpoints: {\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Endpoints'\n        ],\n        members: {\n          Endpoints: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Address',\n                'CachePeriodInMinutes'\n              ],\n              members: {\n                Address: {},\n                CachePeriodInMinutes: {\n                  type: 'long'\n                }\n              }\n            }\n          }\n        }\n      },\n      endpointoperation: true\n    },\n    DescribeTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatabaseName',\n          'TableName'\n        ],\n        members: {\n          DatabaseName: {},\n          TableName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Table: {\n            shape: 'S1n'\n          }\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    ListBatchLoadTasks: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          TaskStatus: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          BatchLoadTasks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                TaskId: {},\n                TaskStatus: {},\n                DatabaseName: {},\n                TableName: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastUpdatedTime: {\n                  type: 'timestamp'\n                },\n                ResumableUntil: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          }\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    ListDatabases: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Databases: {\n            type: 'list',\n            member: {\n              shape: 'S15'\n            }\n          },\n          NextToken: {}\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    ListTables: {\n      input: {\n        type: 'structure',\n        members: {\n          DatabaseName: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tables: {\n            type: 'list',\n            member: {\n              shape: 'S1n'\n            }\n          },\n          NextToken: {}\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN'\n        ],\n        members: {\n          ResourceARN: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S10'\n          }\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    ResumeBatchLoadTask: {\n      input: {\n        type: 'structure',\n        required: [\n          'TaskId'\n        ],\n        members: {\n          TaskId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN',\n          'Tags'\n        ],\n        members: {\n          ResourceARN: {},\n          Tags: {\n            shape: 'S10'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN',\n          'TagKeys'\n        ],\n        members: {\n          ResourceARN: {},\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    UpdateDatabase: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatabaseName',\n          'KmsKeyId'\n        ],\n        members: {\n          DatabaseName: {},\n          KmsKeyId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Database: {\n            shape: 'S15'\n          }\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    UpdateTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatabaseName',\n          'TableName'\n        ],\n        members: {\n          DatabaseName: {},\n          TableName: {},\n          RetentionProperties: {\n            shape: 'S1b'\n          },\n          MagneticStoreWriteProperties: {\n            shape: 'S1e'\n          },\n          Schema: {\n            shape: 'S1h'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Table: {\n            shape: 'S1n'\n          }\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    },\n    WriteRecords: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatabaseName',\n          'TableName',\n          'Records'\n        ],\n        members: {\n          DatabaseName: {},\n          TableName: {},\n          CommonAttributes: {\n            shape: 'S2v'\n          },\n          Records: {\n            type: 'list',\n            member: {\n              shape: 'S2v'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RecordsIngested: {\n            type: 'structure',\n            members: {\n              Total: {\n                type: 'integer'\n              },\n              MemoryStore: {\n                type: 'integer'\n              },\n              MagneticStore: {\n                type: 'integer'\n              }\n            }\n          }\n        }\n      },\n      endpointdiscovery: {\n        required: true\n      }\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'structure',\n      members: {\n        DataModel: {\n          type: 'structure',\n          required: [\n            'DimensionMappings'\n          ],\n          members: {\n            TimeColumn: {},\n            TimeUnit: {},\n            DimensionMappings: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                members: {\n                  SourceColumn: {},\n                  DestinationColumn: {}\n                }\n              }\n            },\n            MultiMeasureMappings: {\n              type: 'structure',\n              required: [\n                'MultiMeasureAttributeMappings'\n              ],\n              members: {\n                TargetMultiMeasureName: {},\n                MultiMeasureAttributeMappings: {\n                  shape: 'Sb'\n                }\n              }\n            },\n            MixedMeasureMappings: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                required: [\n                  'MeasureValueType'\n                ],\n                members: {\n                  MeasureName: {},\n                  SourceColumn: {},\n                  TargetMeasureName: {},\n                  MeasureValueType: {},\n                  MultiMeasureAttributeMappings: {\n                    shape: 'Sb'\n                  }\n                }\n              }\n            },\n            MeasureNameColumn: {}\n          }\n        },\n        DataModelS3Configuration: {\n          type: 'structure',\n          members: {\n            BucketName: {},\n            ObjectKey: {}\n          }\n        }\n      }\n    },\n    Sb: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'SourceColumn'\n        ],\n        members: {\n          SourceColumn: {},\n          TargetMultiMeasureAttributeName: {},\n          MeasureValueType: {}\n        }\n      }\n    },\n    Sk: {\n      type: 'structure',\n      required: [\n        'DataSourceS3Configuration',\n        'DataFormat'\n      ],\n      members: {\n        DataSourceS3Configuration: {\n          type: 'structure',\n          required: [\n            'BucketName'\n          ],\n          members: {\n            BucketName: {},\n            ObjectKeyPrefix: {}\n          }\n        },\n        CsvConfiguration: {\n          type: 'structure',\n          members: {\n            ColumnSeparator: {},\n            EscapeChar: {},\n            QuoteChar: {},\n            NullValue: {},\n            TrimWhiteSpace: {\n              type: 'boolean'\n            }\n          }\n        },\n        DataFormat: {}\n      }\n    },\n    Sq: {\n      type: 'structure',\n      members: {\n        ReportS3Configuration: {\n          type: 'structure',\n          required: [\n            'BucketName'\n          ],\n          members: {\n            BucketName: {},\n            ObjectKeyPrefix: {},\n            EncryptionOption: {},\n            KmsKeyId: {}\n          }\n        }\n      }\n    },\n    S10: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    S15: {\n      type: 'structure',\n      members: {\n        Arn: {},\n        DatabaseName: {},\n        TableCount: {\n          type: 'long'\n        },\n        KmsKeyId: {},\n        CreationTime: {\n          type: 'timestamp'\n        },\n        LastUpdatedTime: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S1b: {\n      type: 'structure',\n      required: [\n        'MemoryStoreRetentionPeriodInHours',\n        'MagneticStoreRetentionPeriodInDays'\n      ],\n      members: {\n        MemoryStoreRetentionPeriodInHours: {\n          type: 'long'\n        },\n        MagneticStoreRetentionPeriodInDays: {\n          type: 'long'\n        }\n      }\n    },\n    S1e: {\n      type: 'structure',\n      required: [\n        'EnableMagneticStoreWrites'\n      ],\n      members: {\n        EnableMagneticStoreWrites: {\n          type: 'boolean'\n        },\n        MagneticStoreRejectedDataLocation: {\n          type: 'structure',\n          members: {\n            S3Configuration: {\n              type: 'structure',\n              members: {\n                BucketName: {},\n                ObjectKeyPrefix: {},\n                EncryptionOption: {},\n                KmsKeyId: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    S1h: {\n      type: 'structure',\n      members: {\n        CompositePartitionKey: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'Type'\n            ],\n            members: {\n              Type: {},\n              Name: {},\n              EnforcementInRecord: {}\n            }\n          }\n        }\n      }\n    },\n    S1n: {\n      type: 'structure',\n      members: {\n        Arn: {},\n        TableName: {},\n        DatabaseName: {},\n        TableStatus: {},\n        RetentionProperties: {\n          shape: 'S1b'\n        },\n        CreationTime: {\n          type: 'timestamp'\n        },\n        LastUpdatedTime: {\n          type: 'timestamp'\n        },\n        MagneticStoreWriteProperties: {\n          shape: 'S1e'\n        },\n        Schema: {\n          shape: 'S1h'\n        }\n      }\n    },\n    S2v: {\n      type: 'structure',\n      members: {\n        Dimensions: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'Name',\n              'Value'\n            ],\n            members: {\n              Name: {},\n              Value: {},\n              DimensionValueType: {}\n            }\n          }\n        },\n        MeasureName: {},\n        MeasureValue: {},\n        MeasureValueType: {},\n        Time: {},\n        TimeUnit: {},\n        Version: {\n          type: 'long'\n        },\n        MeasureValues: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'Name',\n              'Value',\n              'Type'\n            ],\n            members: {\n              Name: {},\n              Value: {},\n              Type: {}\n            }\n          }\n        }\n      }\n    }\n  }\n}"]}