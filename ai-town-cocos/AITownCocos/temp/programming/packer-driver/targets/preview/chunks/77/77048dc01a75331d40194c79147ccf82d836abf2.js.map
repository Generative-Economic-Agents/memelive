{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/services/sqs.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","AWS","util","update","SQS","prototype","setupRequestListeners","request","addListener","buildEndpoint","service","config","computeChecksums","operation","verifySendMessageChecksum","verifySendMessageBatchChecksum","verifyReceiveMessageChecksum","response","data","md5","MD5OfMessageBody","body","params","MessageBody","calculatedMd5","calculateChecksum","msg","throwInvalidChecksumError","MessageId","entries","errors","messageIds","arrayEach","Successful","entry","Id","Entries","isChecksumValid","push","length","join","Messages","message","MD5OfBody","Body","ids","error","Error","retryable","code","checksum","crypto","httpRequest","QueueUrl","endpoint","Endpoint","matches","host","match","region","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n\n AWS.util.update(AWS.SQS.prototype, {\n   /**\n    * @api private\n    */\n   setupRequestListeners: function setupRequestListeners(request) {\n     request.addListener('build', this.buildEndpoint);\n\n     if (request.service.config.computeChecksums) {\n       if (request.operation === 'sendMessage') {\n         request.addListener('extractData', this.verifySendMessageChecksum);\n       } else if (request.operation === 'sendMessageBatch') {\n         request.addListener('extractData', this.verifySendMessageBatchChecksum);\n       } else if (request.operation === 'receiveMessage') {\n         request.addListener('extractData', this.verifyReceiveMessageChecksum);\n       }\n     }\n   },\n\n   /**\n    * @api private\n    */\n   verifySendMessageChecksum: function verifySendMessageChecksum(response) {\n     if (!response.data) return;\n\n     var md5 = response.data.MD5OfMessageBody;\n     var body = this.params.MessageBody;\n     var calculatedMd5 = this.service.calculateChecksum(body);\n     if (calculatedMd5 !== md5) {\n       var msg = 'Got \"' + response.data.MD5OfMessageBody +\n         '\", expecting \"' + calculatedMd5 + '\".';\n       this.service.throwInvalidChecksumError(response,\n         [response.data.MessageId], msg);\n     }\n   },\n\n   /**\n    * @api private\n    */\n   verifySendMessageBatchChecksum: function verifySendMessageBatchChecksum(response) {\n     if (!response.data) return;\n\n     var service = this.service;\n     var entries = {};\n     var errors = [];\n     var messageIds = [];\n     AWS.util.arrayEach(response.data.Successful, function (entry) {\n       entries[entry.Id] = entry;\n     });\n     AWS.util.arrayEach(this.params.Entries, function (entry) {\n       if (entries[entry.Id]) {\n         var md5 = entries[entry.Id].MD5OfMessageBody;\n         var body = entry.MessageBody;\n         if (!service.isChecksumValid(md5, body)) {\n           errors.push(entry.Id);\n           messageIds.push(entries[entry.Id].MessageId);\n         }\n       }\n     });\n\n     if (errors.length > 0) {\n       service.throwInvalidChecksumError(response, messageIds,\n         'Invalid messages: ' + errors.join(', '));\n     }\n   },\n\n   /**\n    * @api private\n    */\n   verifyReceiveMessageChecksum: function verifyReceiveMessageChecksum(response) {\n     if (!response.data) return;\n\n     var service = this.service;\n     var messageIds = [];\n     AWS.util.arrayEach(response.data.Messages, function(message) {\n       var md5 = message.MD5OfBody;\n       var body = message.Body;\n       if (!service.isChecksumValid(md5, body)) {\n         messageIds.push(message.MessageId);\n       }\n     });\n\n     if (messageIds.length > 0) {\n       service.throwInvalidChecksumError(response, messageIds,\n         'Invalid messages: ' + messageIds.join(', '));\n     }\n   },\n\n   /**\n    * @api private\n    */\n   throwInvalidChecksumError: function throwInvalidChecksumError(response, ids, message) {\n     response.error = AWS.util.error(new Error(), {\n       retryable: true,\n       code: 'InvalidChecksum',\n       messageIds: ids,\n       message: response.request.operation +\n                ' returned an invalid MD5 response. ' + message\n     });\n   },\n\n   /**\n    * @api private\n    */\n   isChecksumValid: function isChecksumValid(checksum, data) {\n     return this.calculateChecksum(data) === checksum;\n   },\n\n   /**\n    * @api private\n    */\n   calculateChecksum: function calculateChecksum(data) {\n     return AWS.util.crypto.md5(data, 'hex');\n   },\n\n   /**\n    * @api private\n    */\n   buildEndpoint: function buildEndpoint(request) {\n     var url = request.httpRequest.params.QueueUrl;\n     if (url) {\n       request.httpRequest.endpoint = new AWS.Endpoint(url);\n\n       // signature version 4 requires the region name to be set,\n       // sqs queue urls contain the region name\n       var matches = request.httpRequest.endpoint.host.match(/^sqs\\.(.+?)\\./);\n       if (matches) request.httpRequest.region = matches[1];\n     }\n   }\n });\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}