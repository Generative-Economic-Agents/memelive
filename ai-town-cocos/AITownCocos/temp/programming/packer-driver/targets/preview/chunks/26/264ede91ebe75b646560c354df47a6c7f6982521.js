System.register(["__unresolved_0", "__unresolved_1", "__unresolved_2"], function (_export, _context) {
  "use strict";

  var _cjsLoader, _req, _req0, _cjsExports, __cjsMetaURL;

  _export("default", void 0);

  return {
    setters: [function (_unresolved_) {
      _cjsLoader = _unresolved_.default;
    }, function (_unresolved_2) {
      _req = _unresolved_2.__cjsMetaURL;
    }, function (_unresolved_3) {
      _req0 = _unresolved_3.__cjsMetaURL;
    }],
    execute: function () {
      _export("__cjsMetaURL", __cjsMetaURL = _context.meta.url);

      _cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // #region ORIGINAL CODE
        // Generated by CoffeeScript 1.12.7
        (function () {
          var NodeType, XMLAttribute, XMLNode;
          NodeType = require('./NodeType');
          XMLNode = require('./XMLNode');

          module.exports = XMLAttribute = function () {
            function XMLAttribute(parent, name, value) {
              this.parent = parent;

              if (this.parent) {
                this.options = this.parent.options;
                this.stringify = this.parent.stringify;
              }

              if (name == null) {
                throw new Error("Missing attribute name. " + this.debugInfo(name));
              }

              this.name = this.stringify.name(name);
              this.value = this.stringify.attValue(value);
              this.type = NodeType.Attribute;
              this.isId = false;
              this.schemaTypeInfo = null;
            }

            Object.defineProperty(XMLAttribute.prototype, 'nodeType', {
              get: function get() {
                return this.type;
              }
            });
            Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {
              get: function get() {
                return this.parent;
              }
            });
            Object.defineProperty(XMLAttribute.prototype, 'textContent', {
              get: function get() {
                return this.value;
              },
              set: function set(value) {
                return this.value = value || '';
              }
            });
            Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {
              get: function get() {
                return '';
              }
            });
            Object.defineProperty(XMLAttribute.prototype, 'prefix', {
              get: function get() {
                return '';
              }
            });
            Object.defineProperty(XMLAttribute.prototype, 'localName', {
              get: function get() {
                return this.name;
              }
            });
            Object.defineProperty(XMLAttribute.prototype, 'specified', {
              get: function get() {
                return true;
              }
            });

            XMLAttribute.prototype.clone = function () {
              return Object.create(this);
            };

            XMLAttribute.prototype.toString = function (options) {
              return this.options.writer.attribute(this, this.options.writer.filterOptions(options));
            };

            XMLAttribute.prototype.debugInfo = function (name) {
              name = name || this.name;

              if (name == null) {
                return "parent: <" + this.parent.name + ">";
              } else {
                return "attribute: {" + name + "}, parent: <" + this.parent.name + ">";
              }
            };

            XMLAttribute.prototype.isEqualNode = function (node) {
              if (node.namespaceURI !== this.namespaceURI) {
                return false;
              }

              if (node.prefix !== this.prefix) {
                return false;
              }

              if (node.localName !== this.localName) {
                return false;
              }

              if (node.value !== this.value) {
                return false;
              }

              return true;
            };

            return XMLAttribute;
          }();
        }).call(this); // #endregion ORIGINAL CODE

        _export("default", _cjsExports = module.exports);
      }, () => ({
        './NodeType': _req,
        './XMLNode': _req0
      }));
    }
  };
});
//# sourceMappingURL=264ede91ebe75b646560c354df47a6c7f6982521.js.map