{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/_baseFindIndex.js"],"names":["baseFindIndex","array","predicate","fromIndex","fromRight","length","index"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,aAAT,CAAuBC,KAAvB,EAA8BC,SAA9B,EAAyCC,SAAzC,EAAoDC,SAApD,EAA+D;AAC7D,QAAIC,MAAM,GAAGJ,KAAK,CAACI,MAAnB;AAAA,QACIC,KAAK,GAAGH,SAAS,IAAIC,SAAS,GAAG,CAAH,GAAO,CAAC,CAArB,CADrB;;AAGA,WAAQA,SAAS,GAAGE,KAAK,EAAR,GAAa,EAAEA,KAAF,GAAUD,MAAxC,EAAiD;AAC/C,UAAIH,SAAS,CAACD,KAAK,CAACK,KAAD,CAAN,EAAeA,KAAf,EAAsBL,KAAtB,CAAb,EAA2C;AACzC,eAAOK,KAAP;AACD;AACF;;AACD,WAAO,CAAC,CAAR;AACD;;;;;yBAEcN,a","sourcesContent":["/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n"]}