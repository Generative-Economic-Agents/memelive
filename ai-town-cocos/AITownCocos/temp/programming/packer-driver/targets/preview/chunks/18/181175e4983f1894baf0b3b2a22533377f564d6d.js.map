{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/psl/index.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","Punycode","internals","rules","map","rule","suffix","replace","punySuffix","wildcard","charAt","exception","endsWith","str","indexOf","length","findRule","domain","punyDomain","toASCII","reduce","memo","errorCodes","DOMAIN_TOO_SHORT","DOMAIN_TOO_LONG","LABEL_STARTS_WITH_DASH","LABEL_ENDS_WITH_DASH","LABEL_TOO_LONG","LABEL_TOO_SHORT","LABEL_INVALID_CHARS","validate","input","ascii","labels","split","label","i","test","parse","TypeError","slice","toLowerCase","error","message","code","parsed","tld","sld","subdomain","listed","domainParts","handlePunycode","pop","join","tldParts","privateParts","push","shift","unshift","get","isValid","Boolean","_cjsExports","_errorCodes","_parse","_get","_isValid"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'punycode';\nimport { __cjsMetaURL as _req0} from './data/rules.json';\nlet _cjsExports;\nlet _errorCodes;\nlet _parse;\nlet _get;\nlet _isValid;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n /*eslint no-var:0, prefer-arrow-callback: 0, object-shorthand: 0 */\n 'use strict';\n\n\n var Punycode = require('punycode');\n\n\n var internals = {};\n\n\n //\n // Read rules from file.\n //\n internals.rules = require('./data/rules.json').map(function (rule) {\n\n   return {\n     rule: rule,\n     suffix: rule.replace(/^(\\*\\.|\\!)/, ''),\n     punySuffix: -1,\n     wildcard: rule.charAt(0) === '*',\n     exception: rule.charAt(0) === '!'\n   };\n });\n\n\n //\n // Check is given string ends with `suffix`.\n //\n internals.endsWith = function (str, suffix) {\n\n   return str.indexOf(suffix, str.length - suffix.length) !== -1;\n };\n\n\n //\n // Find rule for a given domain.\n //\n internals.findRule = function (domain) {\n\n   var punyDomain = Punycode.toASCII(domain);\n   return internals.rules.reduce(function (memo, rule) {\n\n     if (rule.punySuffix === -1){\n       rule.punySuffix = Punycode.toASCII(rule.suffix);\n     }\n     if (!internals.endsWith(punyDomain, '.' + rule.punySuffix) && punyDomain !== rule.punySuffix) {\n       return memo;\n     }\n     // This has been commented out as it never seems to run. This is because\n     // sub tlds always appear after their parents and we never find a shorter\n     // match.\n     //if (memo) {\n     //  var memoSuffix = Punycode.toASCII(memo.suffix);\n     //  if (memoSuffix.length >= punySuffix.length) {\n     //    return memo;\n     //  }\n     //}\n     return rule;\n   }, null);\n };\n\n\n //\n // Error codes and messages.\n //\n exports.errorCodes = {\n   DOMAIN_TOO_SHORT: 'Domain name too short.',\n   DOMAIN_TOO_LONG: 'Domain name too long. It should be no more than 255 chars.',\n   LABEL_STARTS_WITH_DASH: 'Domain name label can not start with a dash.',\n   LABEL_ENDS_WITH_DASH: 'Domain name label can not end with a dash.',\n   LABEL_TOO_LONG: 'Domain name label should be at most 63 chars long.',\n   LABEL_TOO_SHORT: 'Domain name label should be at least 1 character long.',\n   LABEL_INVALID_CHARS: 'Domain name label can only contain alphanumeric characters or dashes.'\n };\n\n\n //\n // Validate domain name and throw if not valid.\n //\n // From wikipedia:\n //\n // Hostnames are composed of series of labels concatenated with dots, as are all\n // domain names. Each label must be between 1 and 63 characters long, and the\n // entire hostname (including the delimiting dots) has a maximum of 255 chars.\n //\n // Allowed chars:\n //\n // * `a-z`\n // * `0-9`\n // * `-` but not as a starting or ending character\n // * `.` as a separator for the textual portions of a domain name\n //\n // * http://en.wikipedia.org/wiki/Domain_name\n // * http://en.wikipedia.org/wiki/Hostname\n //\n internals.validate = function (input) {\n\n   // Before we can validate we need to take care of IDNs with unicode chars.\n   var ascii = Punycode.toASCII(input);\n\n   if (ascii.length < 1) {\n     return 'DOMAIN_TOO_SHORT';\n   }\n   if (ascii.length > 255) {\n     return 'DOMAIN_TOO_LONG';\n   }\n\n   // Check each part's length and allowed chars.\n   var labels = ascii.split('.');\n   var label;\n\n   for (var i = 0; i < labels.length; ++i) {\n     label = labels[i];\n     if (!label.length) {\n       return 'LABEL_TOO_SHORT';\n     }\n     if (label.length > 63) {\n       return 'LABEL_TOO_LONG';\n     }\n     if (label.charAt(0) === '-') {\n       return 'LABEL_STARTS_WITH_DASH';\n     }\n     if (label.charAt(label.length - 1) === '-') {\n       return 'LABEL_ENDS_WITH_DASH';\n     }\n     if (!/^[a-z0-9\\-]+$/.test(label)) {\n       return 'LABEL_INVALID_CHARS';\n     }\n   }\n };\n\n\n //\n // Public API\n //\n\n\n //\n // Parse domain.\n //\n exports.parse = function (input) {\n\n   if (typeof input !== 'string') {\n     throw new TypeError('Domain name must be a string.');\n   }\n\n   // Force domain to lowercase.\n   var domain = input.slice(0).toLowerCase();\n\n   // Handle FQDN.\n   // TODO: Simply remove trailing dot?\n   if (domain.charAt(domain.length - 1) === '.') {\n     domain = domain.slice(0, domain.length - 1);\n   }\n\n   // Validate and sanitise input.\n   var error = internals.validate(domain);\n   if (error) {\n     return {\n       input: input,\n       error: {\n         message: exports.errorCodes[error],\n         code: error\n       }\n     };\n   }\n\n   var parsed = {\n     input: input,\n     tld: null,\n     sld: null,\n     domain: null,\n     subdomain: null,\n     listed: false\n   };\n\n   var domainParts = domain.split('.');\n\n   // Non-Internet TLD\n   if (domainParts[domainParts.length - 1] === 'local') {\n     return parsed;\n   }\n\n   var handlePunycode = function () {\n\n     if (!/xn--/.test(domain)) {\n       return parsed;\n     }\n     if (parsed.domain) {\n       parsed.domain = Punycode.toASCII(parsed.domain);\n     }\n     if (parsed.subdomain) {\n       parsed.subdomain = Punycode.toASCII(parsed.subdomain);\n     }\n     return parsed;\n   };\n\n   var rule = internals.findRule(domain);\n\n   // Unlisted tld.\n   if (!rule) {\n     if (domainParts.length < 2) {\n       return parsed;\n     }\n     parsed.tld = domainParts.pop();\n     parsed.sld = domainParts.pop();\n     parsed.domain = [parsed.sld, parsed.tld].join('.');\n     if (domainParts.length) {\n       parsed.subdomain = domainParts.pop();\n     }\n     return handlePunycode();\n   }\n\n   // At this point we know the public suffix is listed.\n   parsed.listed = true;\n\n   var tldParts = rule.suffix.split('.');\n   var privateParts = domainParts.slice(0, domainParts.length - tldParts.length);\n\n   if (rule.exception) {\n     privateParts.push(tldParts.shift());\n   }\n\n   parsed.tld = tldParts.join('.');\n\n   if (!privateParts.length) {\n     return handlePunycode();\n   }\n\n   if (rule.wildcard) {\n     tldParts.unshift(privateParts.pop());\n     parsed.tld = tldParts.join('.');\n   }\n\n   if (!privateParts.length) {\n     return handlePunycode();\n   }\n\n   parsed.sld = privateParts.pop();\n   parsed.domain = [parsed.sld,  parsed.tld].join('.');\n\n   if (privateParts.length) {\n     parsed.subdomain = privateParts.join('.');\n   }\n\n   return handlePunycode();\n };\n\n\n //\n // Get domain.\n //\n exports.get = function (domain) {\n\n   if (!domain) {\n     return null;\n   }\n   return exports.parse(domain).domain || null;\n };\n\n\n //\n // Check whether domain belongs to a known public suffix.\n //\n exports.isValid = function (domain) {\n\n   var parsed = exports.parse(domain);\n   return Boolean(parsed.domain && parsed.listed);\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_errorCodes = module.exports.errorCodes;\n_parse = module.exports.parse;\n_get = module.exports.get;\n_isValid = module.exports.isValid;\n\n}, () => ({\n  'punycode': _req,\n  './data/rules.json': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}