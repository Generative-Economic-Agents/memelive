{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/tnb-2008-10-21.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CancelSolNetworkOperation","http","requestUri","responseCode","input","type","required","members","nsLcmOpOccId","location","locationName","CreateSolFunctionPackage","tags","shape","output","arn","id","onboardingState","operationalState","usageState","CreateSolNetworkInstance","nsDescription","nsName","nsdInfoId","nsInstanceName","CreateSolNetworkPackage","nsdOnboardingState","nsdOperationalState","nsdUsageState","DeleteSolFunctionPackage","method","vnfPkgId","idempotent","DeleteSolNetworkInstance","nsInstanceId","DeleteSolNetworkPackage","GetSolFunctionInstance","vnfInstanceId","instantiatedVnfInfo","vnfState","vnfcResourceInfo","member","cluster","helmChart","nodeGroup","instantiationState","createdAt","lastModified","vnfProductName","vnfProvider","vnfdId","vnfdVersion","GetSolFunctionPackage","vnfd","GetSolFunctionPackageContent","accept","contentType","packageContent","payload","GetSolFunctionPackageDescriptor","GetSolNetworkInstance","lcmOpInfo","nsInstanceDescription","nsState","nsdId","GetSolNetworkOperation","error","lcmOperationType","operationState","tasks","taskContext","key","value","taskEndTime","taskErrorDetails","cause","details","taskName","taskStartTime","taskStatus","GetSolNetworkPackage","nsd","nsdName","nsdVersion","vnfPkgIds","GetSolNetworkPackageContent","nsdContent","GetSolNetworkPackageDescriptor","InstantiateSolNetworkInstance","additionalParamsForNs","dryRun","ListSolFunctionInstances","maxResults","nextToken","functionInstances","vnfPkgName","ListSolFunctionPackages","functionPackages","ListSolNetworkInstances","networkInstances","ListSolNetworkOperations","networkOperations","ListSolNetworkPackages","networkPackages","nsdDesigner","nsdInvariantId","ListTagsForResource","resourceArn","PutSolFunctionPackageContent","file","PutSolNetworkPackageContent","TagResource","TerminateSolNetworkInstance","UntagResource","tagKeys","UpdateSolFunctionPackage","UpdateSolNetworkInstance","modifyVnfInfoData","vnfConfigurableProperties","updateType","UpdateSolNetworkPackage","ValidateSolFunctionPackageContent","ValidateSolNetworkPackageContent","shapes","S4","sensitive","S15","timestampFormat","S1a","overrides","S1b","defaultValue","name","S1t","detail","title","S27","S28","S2e","document"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2008-10-21',\n    endpointPrefix: 'tnb',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS Telco Network Builder',\n    serviceId: 'tnb',\n    signatureVersion: 'v4',\n    signingName: 'tnb',\n    uid: 'tnb-2008-10-21'\n  },\n  operations: {\n    CancelSolNetworkOperation: {\n      http: {\n        requestUri: '/sol/nslcm/v1/ns_lcm_op_occs/{nsLcmOpOccId}/cancel',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsLcmOpOccId'\n        ],\n        members: {\n          nsLcmOpOccId: {\n            location: 'uri',\n            locationName: 'nsLcmOpOccId'\n          }\n        }\n      }\n    },\n    CreateSolFunctionPackage: {\n      http: {\n        requestUri: '/sol/vnfpkgm/v1/vnf_packages',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'id',\n          'onboardingState',\n          'operationalState',\n          'usageState'\n        ],\n        members: {\n          arn: {},\n          id: {},\n          onboardingState: {},\n          operationalState: {},\n          tags: {\n            shape: 'S4'\n          },\n          usageState: {}\n        }\n      }\n    },\n    CreateSolNetworkInstance: {\n      http: {\n        requestUri: '/sol/nslcm/v1/ns_instances',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsName',\n          'nsdInfoId'\n        ],\n        members: {\n          nsDescription: {},\n          nsName: {},\n          nsdInfoId: {},\n          tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'id',\n          'nsInstanceName',\n          'nsdInfoId'\n        ],\n        members: {\n          arn: {},\n          id: {},\n          nsInstanceName: {},\n          nsdInfoId: {},\n          tags: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    CreateSolNetworkPackage: {\n      http: {\n        requestUri: '/sol/nsd/v1/ns_descriptors',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'id',\n          'nsdOnboardingState',\n          'nsdOperationalState',\n          'nsdUsageState'\n        ],\n        members: {\n          arn: {},\n          id: {},\n          nsdOnboardingState: {},\n          nsdOperationalState: {},\n          nsdUsageState: {},\n          tags: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    DeleteSolFunctionPackage: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'vnfPkgId'\n        ],\n        members: {\n          vnfPkgId: {\n            location: 'uri',\n            locationName: 'vnfPkgId'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteSolNetworkInstance: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/sol/nslcm/v1/ns_instances/{nsInstanceId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsInstanceId'\n        ],\n        members: {\n          nsInstanceId: {\n            location: 'uri',\n            locationName: 'nsInstanceId'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteSolNetworkPackage: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/sol/nsd/v1/ns_descriptors/{nsdInfoId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsdInfoId'\n        ],\n        members: {\n          nsdInfoId: {\n            location: 'uri',\n            locationName: 'nsdInfoId'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetSolFunctionInstance: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/vnflcm/v1/vnf_instances/{vnfInstanceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'vnfInstanceId'\n        ],\n        members: {\n          vnfInstanceId: {\n            location: 'uri',\n            locationName: 'vnfInstanceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'id',\n          'instantiationState',\n          'metadata',\n          'nsInstanceId',\n          'vnfPkgId',\n          'vnfdId'\n        ],\n        members: {\n          arn: {},\n          id: {},\n          instantiatedVnfInfo: {\n            type: 'structure',\n            members: {\n              vnfState: {},\n              vnfcResourceInfo: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    metadata: {\n                      type: 'structure',\n                      members: {\n                        cluster: {},\n                        helmChart: {},\n                        nodeGroup: {}\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          instantiationState: {},\n          metadata: {\n            type: 'structure',\n            required: [\n              'createdAt',\n              'lastModified'\n            ],\n            members: {\n              createdAt: {\n                shape: 'S15'\n              },\n              lastModified: {\n                shape: 'S15'\n              }\n            }\n          },\n          nsInstanceId: {},\n          tags: {\n            shape: 'S4'\n          },\n          vnfPkgId: {},\n          vnfProductName: {},\n          vnfProvider: {},\n          vnfdId: {},\n          vnfdVersion: {}\n        }\n      }\n    },\n    GetSolFunctionPackage: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'vnfPkgId'\n        ],\n        members: {\n          vnfPkgId: {\n            location: 'uri',\n            locationName: 'vnfPkgId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'id',\n          'onboardingState',\n          'operationalState',\n          'usageState'\n        ],\n        members: {\n          arn: {},\n          id: {},\n          metadata: {\n            type: 'structure',\n            required: [\n              'createdAt',\n              'lastModified'\n            ],\n            members: {\n              createdAt: {\n                shape: 'S15'\n              },\n              lastModified: {\n                shape: 'S15'\n              },\n              vnfd: {\n                shape: 'S1a'\n              }\n            }\n          },\n          onboardingState: {},\n          operationalState: {},\n          tags: {\n            shape: 'S4'\n          },\n          usageState: {},\n          vnfProductName: {},\n          vnfProvider: {},\n          vnfdId: {},\n          vnfdVersion: {}\n        }\n      }\n    },\n    GetSolFunctionPackageContent: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/package_content',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accept',\n          'vnfPkgId'\n        ],\n        members: {\n          accept: {\n            location: 'header',\n            locationName: 'Accept'\n          },\n          vnfPkgId: {\n            location: 'uri',\n            locationName: 'vnfPkgId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          packageContent: {\n            type: 'blob'\n          }\n        },\n        payload: 'packageContent'\n      }\n    },\n    GetSolFunctionPackageDescriptor: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/vnfd',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accept',\n          'vnfPkgId'\n        ],\n        members: {\n          accept: {\n            location: 'header',\n            locationName: 'Accept'\n          },\n          vnfPkgId: {\n            location: 'uri',\n            locationName: 'vnfPkgId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          vnfd: {\n            type: 'blob'\n          }\n        },\n        payload: 'vnfd'\n      }\n    },\n    GetSolNetworkInstance: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/nslcm/v1/ns_instances/{nsInstanceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsInstanceId'\n        ],\n        members: {\n          nsInstanceId: {\n            location: 'uri',\n            locationName: 'nsInstanceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'id',\n          'metadata',\n          'nsInstanceDescription',\n          'nsInstanceName',\n          'nsdId',\n          'nsdInfoId'\n        ],\n        members: {\n          arn: {},\n          id: {},\n          lcmOpInfo: {\n            type: 'structure',\n            required: [\n              'nsLcmOpOccId'\n            ],\n            members: {\n              nsLcmOpOccId: {}\n            }\n          },\n          metadata: {\n            type: 'structure',\n            required: [\n              'createdAt',\n              'lastModified'\n            ],\n            members: {\n              createdAt: {\n                shape: 'S15'\n              },\n              lastModified: {\n                shape: 'S15'\n              }\n            }\n          },\n          nsInstanceDescription: {},\n          nsInstanceName: {},\n          nsState: {},\n          nsdId: {},\n          nsdInfoId: {},\n          tags: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    GetSolNetworkOperation: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/nslcm/v1/ns_lcm_op_occs/{nsLcmOpOccId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsLcmOpOccId'\n        ],\n        members: {\n          nsLcmOpOccId: {\n            location: 'uri',\n            locationName: 'nsLcmOpOccId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn'\n        ],\n        members: {\n          arn: {},\n          error: {\n            shape: 'S1t'\n          },\n          id: {},\n          lcmOperationType: {},\n          metadata: {\n            type: 'structure',\n            required: [\n              'createdAt',\n              'lastModified'\n            ],\n            members: {\n              createdAt: {\n                shape: 'S15'\n              },\n              lastModified: {\n                shape: 'S15'\n              }\n            }\n          },\n          nsInstanceId: {},\n          operationState: {},\n          tags: {\n            shape: 'S4'\n          },\n          tasks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                taskContext: {\n                  type: 'map',\n                  key: {},\n                  value: {}\n                },\n                taskEndTime: {\n                  shape: 'S15'\n                },\n                taskErrorDetails: {\n                  type: 'structure',\n                  members: {\n                    cause: {},\n                    details: {}\n                  }\n                },\n                taskName: {},\n                taskStartTime: {\n                  shape: 'S15'\n                },\n                taskStatus: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    GetSolNetworkPackage: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/nsd/v1/ns_descriptors/{nsdInfoId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsdInfoId'\n        ],\n        members: {\n          nsdInfoId: {\n            location: 'uri',\n            locationName: 'nsdInfoId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'id',\n          'metadata',\n          'nsdId',\n          'nsdName',\n          'nsdOnboardingState',\n          'nsdOperationalState',\n          'nsdUsageState',\n          'nsdVersion',\n          'vnfPkgIds'\n        ],\n        members: {\n          arn: {},\n          id: {},\n          metadata: {\n            type: 'structure',\n            required: [\n              'createdAt',\n              'lastModified'\n            ],\n            members: {\n              createdAt: {\n                shape: 'S15'\n              },\n              lastModified: {\n                shape: 'S15'\n              },\n              nsd: {\n                shape: 'S27'\n              }\n            }\n          },\n          nsdId: {},\n          nsdName: {},\n          nsdOnboardingState: {},\n          nsdOperationalState: {},\n          nsdUsageState: {},\n          nsdVersion: {},\n          tags: {\n            shape: 'S4'\n          },\n          vnfPkgIds: {\n            shape: 'S28'\n          }\n        }\n      }\n    },\n    GetSolNetworkPackageContent: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd_content',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accept',\n          'nsdInfoId'\n        ],\n        members: {\n          accept: {\n            location: 'header',\n            locationName: 'Accept'\n          },\n          nsdInfoId: {\n            location: 'uri',\n            locationName: 'nsdInfoId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          nsdContent: {\n            type: 'blob'\n          }\n        },\n        payload: 'nsdContent'\n      }\n    },\n    GetSolNetworkPackageDescriptor: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsdInfoId'\n        ],\n        members: {\n          nsdInfoId: {\n            location: 'uri',\n            locationName: 'nsdInfoId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          nsd: {\n            type: 'blob'\n          }\n        },\n        payload: 'nsd'\n      }\n    },\n    InstantiateSolNetworkInstance: {\n      http: {\n        requestUri: '/sol/nslcm/v1/ns_instances/{nsInstanceId}/instantiate',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsInstanceId'\n        ],\n        members: {\n          additionalParamsForNs: {\n            shape: 'S2e'\n          },\n          dryRun: {\n            location: 'querystring',\n            locationName: 'dry_run',\n            type: 'boolean'\n          },\n          nsInstanceId: {\n            location: 'uri',\n            locationName: 'nsInstanceId'\n          },\n          tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'nsLcmOpOccId'\n        ],\n        members: {\n          nsLcmOpOccId: {},\n          tags: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    ListSolFunctionInstances: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/vnflcm/v1/vnf_instances',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'max_results',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextpage_opaque_marker'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          functionInstances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'id',\n                'instantiationState',\n                'metadata',\n                'nsInstanceId',\n                'vnfPkgId'\n              ],\n              members: {\n                arn: {},\n                id: {},\n                instantiatedVnfInfo: {\n                  type: 'structure',\n                  members: {\n                    vnfState: {}\n                  }\n                },\n                instantiationState: {},\n                metadata: {\n                  type: 'structure',\n                  required: [\n                    'createdAt',\n                    'lastModified'\n                  ],\n                  members: {\n                    createdAt: {\n                      shape: 'S15'\n                    },\n                    lastModified: {\n                      shape: 'S15'\n                    }\n                  }\n                },\n                nsInstanceId: {},\n                vnfPkgId: {},\n                vnfPkgName: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListSolFunctionPackages: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/vnfpkgm/v1/vnf_packages',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'max_results',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextpage_opaque_marker'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'functionPackages'\n        ],\n        members: {\n          functionPackages: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'id',\n                'onboardingState',\n                'operationalState',\n                'usageState'\n              ],\n              members: {\n                arn: {},\n                id: {},\n                metadata: {\n                  type: 'structure',\n                  required: [\n                    'createdAt',\n                    'lastModified'\n                  ],\n                  members: {\n                    createdAt: {\n                      shape: 'S15'\n                    },\n                    lastModified: {\n                      shape: 'S15'\n                    }\n                  }\n                },\n                onboardingState: {},\n                operationalState: {},\n                usageState: {},\n                vnfProductName: {},\n                vnfProvider: {},\n                vnfdId: {},\n                vnfdVersion: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListSolNetworkInstances: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/nslcm/v1/ns_instances',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'max_results',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextpage_opaque_marker'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          networkInstances: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'id',\n                'metadata',\n                'nsInstanceDescription',\n                'nsInstanceName',\n                'nsState',\n                'nsdId',\n                'nsdInfoId'\n              ],\n              members: {\n                arn: {},\n                id: {},\n                metadata: {\n                  type: 'structure',\n                  required: [\n                    'createdAt',\n                    'lastModified'\n                  ],\n                  members: {\n                    createdAt: {\n                      shape: 'S15'\n                    },\n                    lastModified: {\n                      shape: 'S15'\n                    }\n                  }\n                },\n                nsInstanceDescription: {},\n                nsInstanceName: {},\n                nsState: {},\n                nsdId: {},\n                nsdInfoId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListSolNetworkOperations: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/nslcm/v1/ns_lcm_op_occs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'max_results',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextpage_opaque_marker'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          networkOperations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'id',\n                'lcmOperationType',\n                'nsInstanceId',\n                'operationState'\n              ],\n              members: {\n                arn: {},\n                error: {\n                  shape: 'S1t'\n                },\n                id: {},\n                lcmOperationType: {},\n                metadata: {\n                  type: 'structure',\n                  required: [\n                    'createdAt',\n                    'lastModified'\n                  ],\n                  members: {\n                    createdAt: {\n                      shape: 'S15'\n                    },\n                    lastModified: {\n                      shape: 'S15'\n                    }\n                  }\n                },\n                nsInstanceId: {},\n                operationState: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListSolNetworkPackages: {\n      http: {\n        method: 'GET',\n        requestUri: '/sol/nsd/v1/ns_descriptors',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'max_results',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextpage_opaque_marker'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'networkPackages'\n        ],\n        members: {\n          networkPackages: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'id',\n                'metadata',\n                'nsdOnboardingState',\n                'nsdOperationalState',\n                'nsdUsageState'\n              ],\n              members: {\n                arn: {},\n                id: {},\n                metadata: {\n                  type: 'structure',\n                  required: [\n                    'createdAt',\n                    'lastModified'\n                  ],\n                  members: {\n                    createdAt: {\n                      shape: 'S15'\n                    },\n                    lastModified: {\n                      shape: 'S15'\n                    }\n                  }\n                },\n                nsdDesigner: {},\n                nsdId: {},\n                nsdInvariantId: {},\n                nsdName: {},\n                nsdOnboardingState: {},\n                nsdOperationalState: {},\n                nsdUsageState: {},\n                nsdVersion: {},\n                vnfPkgIds: {\n                  shape: 'S28'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'tags'\n        ],\n        members: {\n          tags: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    PutSolFunctionPackageContent: {\n      http: {\n        method: 'PUT',\n        requestUri: '/sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/package_content',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'file',\n          'vnfPkgId'\n        ],\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          file: {\n            type: 'blob'\n          },\n          vnfPkgId: {\n            location: 'uri',\n            locationName: 'vnfPkgId'\n          }\n        },\n        payload: 'file'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'id',\n          'metadata',\n          'vnfProductName',\n          'vnfProvider',\n          'vnfdId',\n          'vnfdVersion'\n        ],\n        members: {\n          id: {},\n          metadata: {\n            type: 'structure',\n            members: {\n              vnfd: {\n                shape: 'S1a'\n              }\n            }\n          },\n          vnfProductName: {},\n          vnfProvider: {},\n          vnfdId: {},\n          vnfdVersion: {}\n        }\n      },\n      idempotent: true\n    },\n    PutSolNetworkPackageContent: {\n      http: {\n        method: 'PUT',\n        requestUri: '/sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd_content',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'file',\n          'nsdInfoId'\n        ],\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          file: {\n            type: 'blob'\n          },\n          nsdInfoId: {\n            location: 'uri',\n            locationName: 'nsdInfoId'\n          }\n        },\n        payload: 'file'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'id',\n          'metadata',\n          'nsdId',\n          'nsdName',\n          'nsdVersion',\n          'vnfPkgIds'\n        ],\n        members: {\n          arn: {},\n          id: {},\n          metadata: {\n            type: 'structure',\n            members: {\n              nsd: {\n                shape: 'S27'\n              }\n            }\n          },\n          nsdId: {},\n          nsdName: {},\n          nsdVersion: {},\n          vnfPkgIds: {\n            shape: 'S28'\n          }\n        }\n      },\n      idempotent: true\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    TerminateSolNetworkInstance: {\n      http: {\n        requestUri: '/sol/nslcm/v1/ns_instances/{nsInstanceId}/terminate',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsInstanceId'\n        ],\n        members: {\n          nsInstanceId: {\n            location: 'uri',\n            locationName: 'nsInstanceId'\n          },\n          tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nsLcmOpOccId: {},\n          tags: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateSolFunctionPackage: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'operationalState',\n          'vnfPkgId'\n        ],\n        members: {\n          operationalState: {},\n          vnfPkgId: {\n            location: 'uri',\n            locationName: 'vnfPkgId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'operationalState'\n        ],\n        members: {\n          operationalState: {}\n        }\n      }\n    },\n    UpdateSolNetworkInstance: {\n      http: {\n        requestUri: '/sol/nslcm/v1/ns_instances/{nsInstanceId}/update',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsInstanceId',\n          'updateType'\n        ],\n        members: {\n          modifyVnfInfoData: {\n            type: 'structure',\n            required: [\n              'vnfConfigurableProperties',\n              'vnfInstanceId'\n            ],\n            members: {\n              vnfConfigurableProperties: {\n                shape: 'S2e'\n              },\n              vnfInstanceId: {}\n            }\n          },\n          nsInstanceId: {\n            location: 'uri',\n            locationName: 'nsInstanceId'\n          },\n          tags: {\n            shape: 'S4'\n          },\n          updateType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nsLcmOpOccId: {},\n          tags: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    UpdateSolNetworkPackage: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/sol/nsd/v1/ns_descriptors/{nsdInfoId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'nsdInfoId',\n          'nsdOperationalState'\n        ],\n        members: {\n          nsdInfoId: {\n            location: 'uri',\n            locationName: 'nsdInfoId'\n          },\n          nsdOperationalState: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'nsdOperationalState'\n        ],\n        members: {\n          nsdOperationalState: {}\n        }\n      }\n    },\n    ValidateSolFunctionPackageContent: {\n      http: {\n        method: 'PUT',\n        requestUri: '/sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/package_content/validate',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'file',\n          'vnfPkgId'\n        ],\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          file: {\n            type: 'blob'\n          },\n          vnfPkgId: {\n            location: 'uri',\n            locationName: 'vnfPkgId'\n          }\n        },\n        payload: 'file'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'id',\n          'metadata',\n          'vnfProductName',\n          'vnfProvider',\n          'vnfdId',\n          'vnfdVersion'\n        ],\n        members: {\n          id: {},\n          metadata: {\n            type: 'structure',\n            members: {\n              vnfd: {\n                shape: 'S1a'\n              }\n            }\n          },\n          vnfProductName: {},\n          vnfProvider: {},\n          vnfdId: {},\n          vnfdVersion: {}\n        }\n      },\n      idempotent: true\n    },\n    ValidateSolNetworkPackageContent: {\n      http: {\n        method: 'PUT',\n        requestUri: '/sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd_content/validate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'file',\n          'nsdInfoId'\n        ],\n        members: {\n          contentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          },\n          file: {\n            type: 'blob'\n          },\n          nsdInfoId: {\n            location: 'uri',\n            locationName: 'nsdInfoId'\n          }\n        },\n        payload: 'file'\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'id',\n          'metadata',\n          'nsdId',\n          'nsdName',\n          'nsdVersion',\n          'vnfPkgIds'\n        ],\n        members: {\n          arn: {},\n          id: {},\n          metadata: {\n            type: 'structure',\n            members: {\n              nsd: {\n                shape: 'S27'\n              }\n            }\n          },\n          nsdId: {},\n          nsdName: {},\n          nsdVersion: {},\n          vnfPkgIds: {\n            shape: 'S28'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'map',\n      key: {},\n      value: {},\n      sensitive: true\n    },\n    S15: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    S1a: {\n      type: 'structure',\n      members: {\n        overrides: {\n          shape: 'S1b'\n        }\n      }\n    },\n    S1b: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          defaultValue: {},\n          name: {}\n        }\n      }\n    },\n    S1t: {\n      type: 'structure',\n      required: [\n        'detail'\n      ],\n      members: {\n        detail: {},\n        title: {}\n      }\n    },\n    S27: {\n      type: 'structure',\n      members: {\n        overrides: {\n          shape: 'S1b'\n        }\n      }\n    },\n    S28: {\n      type: 'list',\n      member: {}\n    },\n    S2e: {\n      type: 'structure',\n      members: {},\n      document: true\n    }\n  }\n}"]}