{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/lookoutmetrics-2017-07-25.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","ActivateAnomalyDetector","http","requestUri","input","type","required","members","AnomalyDetectorArn","output","BackTestAnomalyDetector","CreateAlert","AlertName","AlertSensitivityThreshold","AlertDescription","Action","shape","Tags","AlertFilters","AlertArn","CreateAnomalyDetector","AnomalyDetectorName","AnomalyDetectorDescription","AnomalyDetectorConfig","KmsKeyArn","CreateMetricSet","MetricSetName","MetricSetDescription","MetricList","Offset","TimestampColumn","DimensionList","MetricSetFrequency","MetricSource","Timezone","DimensionFilterList","MetricSetArn","DeactivateAnomalyDetector","DeleteAlert","DeleteAnomalyDetector","DescribeAlert","Alert","AlertType","AlertStatus","LastModificationTime","CreationTime","DescribeAnomalyDetectionExecutions","Timestamp","MaxResults","NextToken","ExecutionList","member","Status","FailureReason","DescribeAnomalyDetector","AnomalyDetectorFrequency","FailureType","DescribeMetricSet","DetectMetricSetConfig","AutoDetectionMetricSource","S3SourceConfig","TemplatedPathList","HistoricalDataPathList","DetectedMetricSetConfig","FileFormatDescriptor","CsvFormatDescriptor","FileCompression","Charset","ContainsHeader","Delimiter","HeaderList","QuoteSymbol","JsonFormatDescriptor","GetAnomalyGroup","AnomalyGroupId","AnomalyGroup","StartTime","EndTime","AnomalyGroupScore","PrimaryMetricName","MetricLevelImpactList","MetricName","NumTimeSeries","ContributionMatrix","DimensionContributionList","DimensionName","DimensionValueContributionList","DimensionValue","ContributionScore","GetDataQualityMetrics","AnomalyDetectorDataQualityMetricList","StartTimestamp","MetricSetDataQualityMetricList","DataQualityMetricList","MetricType","MetricDescription","RelatedColumnName","MetricValue","GetFeedback","AnomalyGroupTimeSeriesFeedback","TimeSeriesId","IsAnomaly","GetSampleData","RoleArn","HeaderValues","SampleRows","ListAlerts","AlertSummaryList","ListAnomalyDetectors","AnomalyDetectorSummaryList","ListAnomalyGroupRelatedMetrics","RelationshipTypeFilter","InterMetricImpactList","RelationshipType","ContributionPercentage","ListAnomalyGroupSummaries","SensitivityThreshold","AnomalyGroupSummaryList","AnomalyGroupStatistics","EvaluationStartDate","TotalCount","ItemizedMetricStatsList","OccurrenceCount","ListAnomalyGroupTimeSeries","TimestampList","TimeSeriesList","MetricValueList","ListMetricSets","MetricSetSummaryList","ListTagsForResource","method","responseCode","ResourceArn","location","locationName","PutFeedback","TagResource","UntagResource","TagKeys","UpdateAlert","UpdateAnomalyDetector","UpdateMetricSet","shapes","Sa","SNSConfiguration","SnsTopicArn","SnsFormat","LambdaConfiguration","LambdaArn","Se","key","value","Sh","DimensionValueList","St","S10","AggregationFunction","Namespace","S15","ColumnName","ColumnFormat","S17","S18","AppFlowConfig","FlowName","CloudWatchConfig","BackTestConfiguration","RDSSourceConfig","DBInstanceIdentifier","DatabaseHost","DatabasePort","SecretManagerArn","DatabaseName","TableName","VpcConfiguration","RedshiftSourceConfig","ClusterIdentifier","AthenaSourceConfig","DataCatalog","WorkGroupName","S3ResultsPath","S1a","S1c","S1e","S1r","RunBackTestMode","S1z","SubnetIdList","SecurityGroupIdList","S2e","Name","FilterList","FilterOperation","S3i","Value","S","N","B","SS","NS","BS","Confidence","Message"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2017-07-25',\n    endpointPrefix: 'lookoutmetrics',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'LookoutMetrics',\n    serviceFullName: 'Amazon Lookout for Metrics',\n    serviceId: 'LookoutMetrics',\n    signatureVersion: 'v4',\n    signingName: 'lookoutmetrics',\n    uid: 'lookoutmetrics-2017-07-25'\n  },\n  operations: {\n    ActivateAnomalyDetector: {\n      http: {\n        requestUri: '/ActivateAnomalyDetector'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn'\n        ],\n        members: {\n          AnomalyDetectorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    BackTestAnomalyDetector: {\n      http: {\n        requestUri: '/BackTestAnomalyDetector'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn'\n        ],\n        members: {\n          AnomalyDetectorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateAlert: {\n      http: {\n        requestUri: '/CreateAlert'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AlertName',\n          'AnomalyDetectorArn',\n          'Action'\n        ],\n        members: {\n          AlertName: {},\n          AlertSensitivityThreshold: {\n            type: 'integer'\n          },\n          AlertDescription: {},\n          AnomalyDetectorArn: {},\n          Action: {\n            shape: 'Sa'\n          },\n          Tags: {\n            shape: 'Se'\n          },\n          AlertFilters: {\n            shape: 'Sh'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AlertArn: {}\n        }\n      }\n    },\n    CreateAnomalyDetector: {\n      http: {\n        requestUri: '/CreateAnomalyDetector'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorName',\n          'AnomalyDetectorConfig'\n        ],\n        members: {\n          AnomalyDetectorName: {},\n          AnomalyDetectorDescription: {},\n          AnomalyDetectorConfig: {\n            shape: 'St'\n          },\n          KmsKeyArn: {},\n          Tags: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AnomalyDetectorArn: {}\n        }\n      }\n    },\n    CreateMetricSet: {\n      http: {\n        requestUri: '/CreateMetricSet'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn',\n          'MetricSetName',\n          'MetricList',\n          'MetricSource'\n        ],\n        members: {\n          AnomalyDetectorArn: {},\n          MetricSetName: {},\n          MetricSetDescription: {},\n          MetricList: {\n            shape: 'S10'\n          },\n          Offset: {\n            type: 'integer'\n          },\n          TimestampColumn: {\n            shape: 'S15'\n          },\n          DimensionList: {\n            shape: 'S17'\n          },\n          MetricSetFrequency: {},\n          MetricSource: {\n            shape: 'S18'\n          },\n          Timezone: {},\n          Tags: {\n            shape: 'Se'\n          },\n          DimensionFilterList: {\n            shape: 'S2e'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MetricSetArn: {}\n        }\n      }\n    },\n    DeactivateAnomalyDetector: {\n      http: {\n        requestUri: '/DeactivateAnomalyDetector'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn'\n        ],\n        members: {\n          AnomalyDetectorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteAlert: {\n      http: {\n        requestUri: '/DeleteAlert'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AlertArn'\n        ],\n        members: {\n          AlertArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteAnomalyDetector: {\n      http: {\n        requestUri: '/DeleteAnomalyDetector'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn'\n        ],\n        members: {\n          AnomalyDetectorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DescribeAlert: {\n      http: {\n        requestUri: '/DescribeAlert'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AlertArn'\n        ],\n        members: {\n          AlertArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Alert: {\n            type: 'structure',\n            members: {\n              Action: {\n                shape: 'Sa'\n              },\n              AlertDescription: {},\n              AlertArn: {},\n              AnomalyDetectorArn: {},\n              AlertName: {},\n              AlertSensitivityThreshold: {\n                type: 'integer'\n              },\n              AlertType: {},\n              AlertStatus: {},\n              LastModificationTime: {\n                type: 'timestamp'\n              },\n              CreationTime: {\n                type: 'timestamp'\n              },\n              AlertFilters: {\n                shape: 'Sh'\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeAnomalyDetectionExecutions: {\n      http: {\n        requestUri: '/DescribeAnomalyDetectionExecutions'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn'\n        ],\n        members: {\n          AnomalyDetectorArn: {},\n          Timestamp: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ExecutionList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Timestamp: {},\n                Status: {},\n                FailureReason: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeAnomalyDetector: {\n      http: {\n        requestUri: '/DescribeAnomalyDetector'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn'\n        ],\n        members: {\n          AnomalyDetectorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AnomalyDetectorArn: {},\n          AnomalyDetectorName: {},\n          AnomalyDetectorDescription: {},\n          AnomalyDetectorConfig: {\n            type: 'structure',\n            members: {\n              AnomalyDetectorFrequency: {}\n            }\n          },\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          Status: {},\n          FailureReason: {},\n          KmsKeyArn: {},\n          FailureType: {}\n        }\n      }\n    },\n    DescribeMetricSet: {\n      http: {\n        requestUri: '/DescribeMetricSet'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MetricSetArn'\n        ],\n        members: {\n          MetricSetArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MetricSetArn: {},\n          AnomalyDetectorArn: {},\n          MetricSetName: {},\n          MetricSetDescription: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          Offset: {\n            type: 'integer'\n          },\n          MetricList: {\n            shape: 'S10'\n          },\n          TimestampColumn: {\n            shape: 'S15'\n          },\n          DimensionList: {\n            shape: 'S17'\n          },\n          MetricSetFrequency: {},\n          Timezone: {},\n          MetricSource: {\n            shape: 'S18'\n          },\n          DimensionFilterList: {\n            shape: 'S2e'\n          }\n        }\n      }\n    },\n    DetectMetricSetConfig: {\n      http: {\n        requestUri: '/DetectMetricSetConfig'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn',\n          'AutoDetectionMetricSource'\n        ],\n        members: {\n          AnomalyDetectorArn: {},\n          AutoDetectionMetricSource: {\n            type: 'structure',\n            members: {\n              S3SourceConfig: {\n                type: 'structure',\n                members: {\n                  TemplatedPathList: {\n                    shape: 'S1a'\n                  },\n                  HistoricalDataPathList: {\n                    shape: 'S1c'\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DetectedMetricSetConfig: {\n            type: 'structure',\n            members: {\n              Offset: {\n                shape: 'S3i'\n              },\n              MetricSetFrequency: {\n                shape: 'S3i'\n              },\n              MetricSource: {\n                type: 'structure',\n                members: {\n                  S3SourceConfig: {\n                    type: 'structure',\n                    members: {\n                      FileFormatDescriptor: {\n                        type: 'structure',\n                        members: {\n                          CsvFormatDescriptor: {\n                            type: 'structure',\n                            members: {\n                              FileCompression: {\n                                shape: 'S3i'\n                              },\n                              Charset: {\n                                shape: 'S3i'\n                              },\n                              ContainsHeader: {\n                                shape: 'S3i'\n                              },\n                              Delimiter: {\n                                shape: 'S3i'\n                              },\n                              HeaderList: {\n                                shape: 'S3i'\n                              },\n                              QuoteSymbol: {\n                                shape: 'S3i'\n                              }\n                            }\n                          },\n                          JsonFormatDescriptor: {\n                            type: 'structure',\n                            members: {\n                              FileCompression: {\n                                shape: 'S3i'\n                              },\n                              Charset: {\n                                shape: 'S3i'\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    GetAnomalyGroup: {\n      http: {\n        requestUri: '/GetAnomalyGroup'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyGroupId',\n          'AnomalyDetectorArn'\n        ],\n        members: {\n          AnomalyGroupId: {},\n          AnomalyDetectorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AnomalyGroup: {\n            type: 'structure',\n            members: {\n              StartTime: {},\n              EndTime: {},\n              AnomalyGroupId: {},\n              AnomalyGroupScore: {\n                type: 'double'\n              },\n              PrimaryMetricName: {},\n              MetricLevelImpactList: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    MetricName: {},\n                    NumTimeSeries: {\n                      type: 'integer'\n                    },\n                    ContributionMatrix: {\n                      type: 'structure',\n                      members: {\n                        DimensionContributionList: {\n                          type: 'list',\n                          member: {\n                            type: 'structure',\n                            members: {\n                              DimensionName: {},\n                              DimensionValueContributionList: {\n                                type: 'list',\n                                member: {\n                                  type: 'structure',\n                                  members: {\n                                    DimensionValue: {},\n                                    ContributionScore: {\n                                      type: 'double'\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    GetDataQualityMetrics: {\n      http: {\n        requestUri: '/GetDataQualityMetrics'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn'\n        ],\n        members: {\n          AnomalyDetectorArn: {},\n          MetricSetArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AnomalyDetectorDataQualityMetricList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                StartTimestamp: {\n                  type: 'timestamp'\n                },\n                MetricSetDataQualityMetricList: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      MetricSetArn: {},\n                      DataQualityMetricList: {\n                        type: 'list',\n                        member: {\n                          type: 'structure',\n                          members: {\n                            MetricType: {},\n                            MetricDescription: {},\n                            RelatedColumnName: {},\n                            MetricValue: {\n                              type: 'double'\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    GetFeedback: {\n      http: {\n        requestUri: '/GetFeedback'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn',\n          'AnomalyGroupTimeSeriesFeedback'\n        ],\n        members: {\n          AnomalyDetectorArn: {},\n          AnomalyGroupTimeSeriesFeedback: {\n            type: 'structure',\n            required: [\n              'AnomalyGroupId'\n            ],\n            members: {\n              AnomalyGroupId: {},\n              TimeSeriesId: {}\n            }\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AnomalyGroupTimeSeriesFeedback: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                TimeSeriesId: {},\n                IsAnomaly: {\n                  type: 'boolean'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    GetSampleData: {\n      http: {\n        requestUri: '/GetSampleData'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          S3SourceConfig: {\n            type: 'structure',\n            required: [\n              'RoleArn',\n              'FileFormatDescriptor'\n            ],\n            members: {\n              RoleArn: {},\n              TemplatedPathList: {\n                shape: 'S1a'\n              },\n              HistoricalDataPathList: {\n                shape: 'S1c'\n              },\n              FileFormatDescriptor: {\n                shape: 'S1e'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HeaderValues: {\n            type: 'list',\n            member: {}\n          },\n          SampleRows: {\n            type: 'list',\n            member: {\n              type: 'list',\n              member: {}\n            }\n          }\n        }\n      }\n    },\n    ListAlerts: {\n      http: {\n        requestUri: '/ListAlerts'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AnomalyDetectorArn: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AlertSummaryList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AlertArn: {},\n                AnomalyDetectorArn: {},\n                AlertName: {},\n                AlertSensitivityThreshold: {\n                  type: 'integer'\n                },\n                AlertType: {},\n                AlertStatus: {},\n                LastModificationTime: {\n                  type: 'timestamp'\n                },\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                Tags: {\n                  shape: 'Se'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListAnomalyDetectors: {\n      http: {\n        requestUri: '/ListAnomalyDetectors'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AnomalyDetectorSummaryList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AnomalyDetectorArn: {},\n                AnomalyDetectorName: {},\n                AnomalyDetectorDescription: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                },\n                Status: {},\n                Tags: {\n                  shape: 'Se'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListAnomalyGroupRelatedMetrics: {\n      http: {\n        requestUri: '/ListAnomalyGroupRelatedMetrics'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn',\n          'AnomalyGroupId'\n        ],\n        members: {\n          AnomalyDetectorArn: {},\n          AnomalyGroupId: {},\n          RelationshipTypeFilter: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          InterMetricImpactList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                MetricName: {},\n                AnomalyGroupId: {},\n                RelationshipType: {},\n                ContributionPercentage: {\n                  type: 'double'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListAnomalyGroupSummaries: {\n      http: {\n        requestUri: '/ListAnomalyGroupSummaries'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn',\n          'SensitivityThreshold'\n        ],\n        members: {\n          AnomalyDetectorArn: {},\n          SensitivityThreshold: {\n            type: 'integer'\n          },\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AnomalyGroupSummaryList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                StartTime: {},\n                EndTime: {},\n                AnomalyGroupId: {},\n                AnomalyGroupScore: {\n                  type: 'double'\n                },\n                PrimaryMetricName: {}\n              }\n            }\n          },\n          AnomalyGroupStatistics: {\n            type: 'structure',\n            members: {\n              EvaluationStartDate: {},\n              TotalCount: {\n                type: 'integer'\n              },\n              ItemizedMetricStatsList: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    MetricName: {},\n                    OccurrenceCount: {\n                      type: 'integer'\n                    }\n                  }\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListAnomalyGroupTimeSeries: {\n      http: {\n        requestUri: '/ListAnomalyGroupTimeSeries'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn',\n          'AnomalyGroupId',\n          'MetricName'\n        ],\n        members: {\n          AnomalyDetectorArn: {},\n          AnomalyGroupId: {},\n          MetricName: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AnomalyGroupId: {},\n          MetricName: {},\n          TimestampList: {\n            type: 'list',\n            member: {}\n          },\n          NextToken: {},\n          TimeSeriesList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'TimeSeriesId',\n                'DimensionList',\n                'MetricValueList'\n              ],\n              members: {\n                TimeSeriesId: {},\n                DimensionList: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    required: [\n                      'DimensionName',\n                      'DimensionValue'\n                    ],\n                    members: {\n                      DimensionName: {},\n                      DimensionValue: {}\n                    }\n                  }\n                },\n                MetricValueList: {\n                  type: 'list',\n                  member: {\n                    type: 'double'\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListMetricSets: {\n      http: {\n        requestUri: '/ListMetricSets'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AnomalyDetectorArn: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MetricSetSummaryList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                MetricSetArn: {},\n                AnomalyDetectorArn: {},\n                MetricSetDescription: {},\n                MetricSetName: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                },\n                Tags: {\n                  shape: 'Se'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Se',\n            locationName: 'Tags'\n          }\n        }\n      }\n    },\n    PutFeedback: {\n      http: {\n        requestUri: '/PutFeedback'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn',\n          'AnomalyGroupTimeSeriesFeedback'\n        ],\n        members: {\n          AnomalyDetectorArn: {},\n          AnomalyGroupTimeSeriesFeedback: {\n            type: 'structure',\n            required: [\n              'AnomalyGroupId',\n              'TimeSeriesId',\n              'IsAnomaly'\n            ],\n            members: {\n              AnomalyGroupId: {},\n              TimeSeriesId: {},\n              IsAnomaly: {\n                type: 'boolean'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          Tags: {\n            shape: 'Se',\n            locationName: 'tags'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateAlert: {\n      http: {\n        requestUri: '/UpdateAlert'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AlertArn'\n        ],\n        members: {\n          AlertArn: {},\n          AlertDescription: {},\n          AlertSensitivityThreshold: {\n            type: 'integer'\n          },\n          Action: {\n            shape: 'Sa'\n          },\n          AlertFilters: {\n            shape: 'Sh'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AlertArn: {}\n        }\n      }\n    },\n    UpdateAnomalyDetector: {\n      http: {\n        requestUri: '/UpdateAnomalyDetector'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AnomalyDetectorArn'\n        ],\n        members: {\n          AnomalyDetectorArn: {},\n          KmsKeyArn: {},\n          AnomalyDetectorDescription: {},\n          AnomalyDetectorConfig: {\n            shape: 'St'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AnomalyDetectorArn: {}\n        }\n      }\n    },\n    UpdateMetricSet: {\n      http: {\n        requestUri: '/UpdateMetricSet'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'MetricSetArn'\n        ],\n        members: {\n          MetricSetArn: {},\n          MetricSetDescription: {},\n          MetricList: {\n            shape: 'S10'\n          },\n          Offset: {\n            type: 'integer'\n          },\n          TimestampColumn: {\n            shape: 'S15'\n          },\n          DimensionList: {\n            shape: 'S17'\n          },\n          MetricSetFrequency: {},\n          MetricSource: {\n            shape: 'S18'\n          },\n          DimensionFilterList: {\n            shape: 'S2e'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MetricSetArn: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    Sa: {\n      type: 'structure',\n      members: {\n        SNSConfiguration: {\n          type: 'structure',\n          required: [\n            'RoleArn',\n            'SnsTopicArn'\n          ],\n          members: {\n            RoleArn: {},\n            SnsTopicArn: {},\n            SnsFormat: {}\n          }\n        },\n        LambdaConfiguration: {\n          type: 'structure',\n          required: [\n            'RoleArn',\n            'LambdaArn'\n          ],\n          members: {\n            RoleArn: {},\n            LambdaArn: {}\n          }\n        }\n      }\n    },\n    Se: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sh: {\n      type: 'structure',\n      members: {\n        MetricList: {\n          type: 'list',\n          member: {}\n        },\n        DimensionFilterList: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              DimensionName: {},\n              DimensionValueList: {\n                type: 'list',\n                member: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    St: {\n      type: 'structure',\n      members: {\n        AnomalyDetectorFrequency: {}\n      }\n    },\n    S10: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'MetricName',\n          'AggregationFunction'\n        ],\n        members: {\n          MetricName: {},\n          AggregationFunction: {},\n          Namespace: {}\n        }\n      }\n    },\n    S15: {\n      type: 'structure',\n      members: {\n        ColumnName: {},\n        ColumnFormat: {}\n      }\n    },\n    S17: {\n      type: 'list',\n      member: {}\n    },\n    S18: {\n      type: 'structure',\n      members: {\n        S3SourceConfig: {\n          type: 'structure',\n          members: {\n            RoleArn: {},\n            TemplatedPathList: {\n              shape: 'S1a'\n            },\n            HistoricalDataPathList: {\n              shape: 'S1c'\n            },\n            FileFormatDescriptor: {\n              shape: 'S1e'\n            }\n          }\n        },\n        AppFlowConfig: {\n          type: 'structure',\n          members: {\n            RoleArn: {},\n            FlowName: {}\n          }\n        },\n        CloudWatchConfig: {\n          type: 'structure',\n          members: {\n            RoleArn: {},\n            BackTestConfiguration: {\n              shape: 'S1r'\n            }\n          }\n        },\n        RDSSourceConfig: {\n          type: 'structure',\n          members: {\n            DBInstanceIdentifier: {},\n            DatabaseHost: {},\n            DatabasePort: {\n              type: 'integer'\n            },\n            SecretManagerArn: {},\n            DatabaseName: {},\n            TableName: {},\n            RoleArn: {},\n            VpcConfiguration: {\n              shape: 'S1z'\n            }\n          }\n        },\n        RedshiftSourceConfig: {\n          type: 'structure',\n          members: {\n            ClusterIdentifier: {},\n            DatabaseHost: {},\n            DatabasePort: {\n              type: 'integer'\n            },\n            SecretManagerArn: {},\n            DatabaseName: {},\n            TableName: {},\n            RoleArn: {},\n            VpcConfiguration: {\n              shape: 'S1z'\n            }\n          }\n        },\n        AthenaSourceConfig: {\n          type: 'structure',\n          members: {\n            RoleArn: {},\n            DatabaseName: {},\n            DataCatalog: {},\n            TableName: {},\n            WorkGroupName: {},\n            S3ResultsPath: {},\n            BackTestConfiguration: {\n              shape: 'S1r'\n            }\n          }\n        }\n      }\n    },\n    S1a: {\n      type: 'list',\n      member: {}\n    },\n    S1c: {\n      type: 'list',\n      member: {}\n    },\n    S1e: {\n      type: 'structure',\n      members: {\n        CsvFormatDescriptor: {\n          type: 'structure',\n          members: {\n            FileCompression: {},\n            Charset: {},\n            ContainsHeader: {\n              type: 'boolean'\n            },\n            Delimiter: {},\n            HeaderList: {\n              type: 'list',\n              member: {}\n            },\n            QuoteSymbol: {}\n          }\n        },\n        JsonFormatDescriptor: {\n          type: 'structure',\n          members: {\n            FileCompression: {},\n            Charset: {}\n          }\n        }\n      }\n    },\n    S1r: {\n      type: 'structure',\n      required: [\n        'RunBackTestMode'\n      ],\n      members: {\n        RunBackTestMode: {\n          type: 'boolean'\n        }\n      }\n    },\n    S1z: {\n      type: 'structure',\n      required: [\n        'SubnetIdList',\n        'SecurityGroupIdList'\n      ],\n      members: {\n        SubnetIdList: {\n          type: 'list',\n          member: {}\n        },\n        SecurityGroupIdList: {\n          type: 'list',\n          member: {}\n        }\n      }\n    },\n    S2e: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Name: {},\n          FilterList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DimensionValue: {},\n                FilterOperation: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    S3i: {\n      type: 'structure',\n      members: {\n        Value: {\n          type: 'structure',\n          members: {\n            S: {},\n            N: {},\n            B: {},\n            SS: {\n              type: 'list',\n              member: {}\n            },\n            NS: {\n              type: 'list',\n              member: {}\n            },\n            BS: {\n              type: 'list',\n              member: {}\n            }\n          }\n        },\n        Confidence: {},\n        Message: {}\n      }\n    }\n  }\n}"]}