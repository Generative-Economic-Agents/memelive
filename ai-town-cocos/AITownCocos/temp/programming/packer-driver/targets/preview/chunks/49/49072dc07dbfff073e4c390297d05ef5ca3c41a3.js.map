{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/mediaconnect-2018-11-14.waiters2.json"],"names":["version","waiters","FlowActive","description","operation","delay","maxAttempts","acceptors","state","matcher","argument","expected","FlowStandby","FlowDeleted"],"mappings":"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","sourcesContent":["export default {\n  version: 2,\n  waiters: {\n    FlowActive: {\n      description: 'Wait until a flow is active',\n      operation: 'DescribeFlow',\n      delay: 3,\n      maxAttempts: 40,\n      acceptors: [\n        {\n          state: 'success',\n          matcher: 'path',\n          argument: 'Flow.Status',\n          expected: 'ACTIVE'\n        },\n        {\n          state: 'retry',\n          matcher: 'path',\n          argument: 'Flow.Status',\n          expected: 'STARTING'\n        },\n        {\n          state: 'retry',\n          matcher: 'path',\n          argument: 'Flow.Status',\n          expected: 'UPDATING'\n        },\n        {\n          state: 'retry',\n          matcher: 'status',\n          expected: 500\n        },\n        {\n          state: 'retry',\n          matcher: 'status',\n          expected: 503\n        },\n        {\n          state: 'failure',\n          matcher: 'path',\n          argument: 'Flow.Status',\n          expected: 'ERROR'\n        }\n      ]\n    },\n    FlowStandby: {\n      description: 'Wait until a flow is in standby mode',\n      operation: 'DescribeFlow',\n      delay: 3,\n      maxAttempts: 40,\n      acceptors: [\n        {\n          state: 'success',\n          matcher: 'path',\n          argument: 'Flow.Status',\n          expected: 'STANDBY'\n        },\n        {\n          state: 'retry',\n          matcher: 'path',\n          argument: 'Flow.Status',\n          expected: 'STOPPING'\n        },\n        {\n          state: 'retry',\n          matcher: 'status',\n          expected: 500\n        },\n        {\n          state: 'retry',\n          matcher: 'status',\n          expected: 503\n        },\n        {\n          state: 'failure',\n          matcher: 'path',\n          argument: 'Flow.Status',\n          expected: 'ERROR'\n        }\n      ]\n    },\n    FlowDeleted: {\n      description: 'Wait until a flow is deleted',\n      operation: 'DescribeFlow',\n      delay: 3,\n      maxAttempts: 40,\n      acceptors: [\n        {\n          state: 'success',\n          matcher: 'status',\n          expected: 404\n        },\n        {\n          state: 'retry',\n          matcher: 'path',\n          argument: 'Flow.Status',\n          expected: 'DELETING'\n        },\n        {\n          state: 'retry',\n          matcher: 'status',\n          expected: 500\n        },\n        {\n          state: 'retry',\n          matcher: 'status',\n          expected: 503\n        },\n        {\n          state: 'failure',\n          matcher: 'path',\n          argument: 'Flow.Status',\n          expected: 'ERROR'\n        }\n      ]\n    }\n  }\n}"]}