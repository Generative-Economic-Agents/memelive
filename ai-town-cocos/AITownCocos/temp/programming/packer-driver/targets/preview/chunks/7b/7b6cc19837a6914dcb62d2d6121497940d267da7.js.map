{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/batch-2016-08-10.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","protocols","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","uid","operations","CancelJob","http","requestUri","input","type","required","members","jobId","reason","output","CreateComputeEnvironment","computeEnvironmentName","state","unmanagedvCpus","computeResources","shape","serviceRole","tags","eksConfiguration","computeEnvironmentArn","CreateJobQueue","jobQueueName","schedulingPolicyArn","priority","computeEnvironmentOrder","jobStateTimeLimitActions","jobQueueArn","CreateSchedulingPolicy","name","fairsharePolicy","arn","DeleteComputeEnvironment","computeEnvironment","DeleteJobQueue","jobQueue","DeleteSchedulingPolicy","DeregisterJobDefinition","jobDefinition","DescribeComputeEnvironments","computeEnvironments","maxResults","nextToken","member","ecsClusterArn","status","statusReason","updatePolicy","containerOrchestrationType","uuid","DescribeJobDefinitions","jobDefinitions","jobDefinitionName","jobDefinitionArn","revision","schedulingPriority","parameters","retryStrategy","containerProperties","timeout","nodeProperties","propagateTags","platformCapabilities","ecsProperties","eksProperties","DescribeJobQueues","jobQueues","DescribeJobs","jobs","jobArn","jobName","shareIdentifier","attempts","container","containerInstanceArn","taskArn","exitCode","logStreamName","networkInterfaces","startedAt","stoppedAt","taskProperties","containers","createdAt","dependsOn","image","vcpus","memory","command","jobRoleArn","executionRoleArn","volumes","environment","mountPoints","readonlyRootFilesystem","ulimits","privileged","user","instanceType","resourceRequirements","linuxParameters","logConfiguration","secrets","networkConfiguration","fargatePlatformConfiguration","ephemeralStorage","runtimePlatform","repositoryCredentials","nodeDetails","nodeIndex","isMainNode","arrayProperties","statusSummary","key","value","size","index","podProperties","serviceAccountName","hostNetwork","dnsPolicy","imagePullSecrets","initContainers","podName","nodeName","shareProcessNamespace","eksAttempts","essential","platformVersion","ipcMode","taskRoleArn","pidMode","isCancelled","isTerminated","DescribeSchedulingPolicies","arns","schedulingPolicies","GetJobQueueSnapshot","frontOfQueue","earliestTimeAtPosition","lastUpdatedAt","ListJobs","arrayJobId","multiNodeJobId","jobStatus","filters","values","jobSummaryList","numNodes","ListSchedulingPolicies","ListTagsForResource","method","resourceArn","location","locationName","RegisterJobDefinition","SubmitJob","schedulingPriorityOverride","containerOverrides","nodeOverrides","nodePropertyOverrides","targetNodes","ecsPropertiesOverride","instanceTypes","eksPropertiesOverride","TagResource","TerminateJob","UntagResource","tagKeys","UpdateComputeEnvironment","minvCpus","maxvCpus","desiredvCpus","subnets","securityGroupIds","allocationStrategy","ec2KeyPair","instanceRole","placementGroup","bidPercentage","launchTemplate","ec2Configuration","updateToLatestImageVersion","imageId","UpdateJobQueue","UpdateSchedulingPolicy","shapes","S8","deprecated","deprecatedMessage","spotIamFleetRole","Sb","Sc","Sd","launchTemplateId","launchTemplateName","Se","imageType","imageIdOverride","imageKubernetesVersion","Sj","Sm","eksClusterArn","kubernetesNamespace","Sq","order","Ss","maxTimeSeconds","action","Sy","shareDecaySeconds","computeReservation","shareDistribution","weightFactor","S1g","terminateJobsOnUpdate","jobExecutionTimeoutMinutes","S1o","S1p","evaluateOnExit","onStatusReason","onReason","onExitCode","S1t","S1u","host","sourcePath","efsVolumeConfiguration","fileSystemId","rootDirectory","transitEncryption","transitEncryptionPort","authorizationConfig","accessPointId","iam","S21","S23","containerPath","readOnly","sourceVolume","S25","hardLimit","softLimit","S27","S2a","devices","hostPath","permissions","initProcessEnabled","sharedMemorySize","tmpfs","mountOptions","maxSwap","swappiness","S2h","logDriver","options","secretOptions","S2k","valueFrom","S2m","assignPublicIp","S2o","S2p","sizeInGiB","S2q","operatingSystemFamily","cpuArchitecture","S2r","credentialsParameter","S2s","attemptDurationSeconds","S2t","mainNode","nodeRangeProperties","S2w","S31","containerName","condition","S33","S35","S37","S39","imagePullPolicy","args","env","resources","volumeMounts","securityContext","S3b","S3d","limits","requests","S3h","mountPath","S3j","runAsUser","runAsGroup","allowPrivilegeEscalation","readOnlyRootFilesystem","runAsNonRoot","S3l","path","emptyDir","medium","sizeLimit","secret","secretName","optional","S3q","labels","S45","attachmentId","ipv6Address","privateIpv4Address","S4b","S4k","S4o","S5o","S5s","S5z"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2016-08-10',\n    endpointPrefix: 'batch',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    protocols: [\n      'rest-json'\n    ],\n    serviceAbbreviation: 'AWS Batch',\n    serviceFullName: 'AWS Batch',\n    serviceId: 'Batch',\n    signatureVersion: 'v4',\n    uid: 'batch-2016-08-10'\n  },\n  operations: {\n    CancelJob: {\n      http: {\n        requestUri: '/v1/canceljob'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobId',\n          'reason'\n        ],\n        members: {\n          jobId: {},\n          reason: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateComputeEnvironment: {\n      http: {\n        requestUri: '/v1/createcomputeenvironment'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'computeEnvironmentName',\n          'type'\n        ],\n        members: {\n          computeEnvironmentName: {},\n          type: {},\n          state: {},\n          unmanagedvCpus: {\n            type: 'integer'\n          },\n          computeResources: {\n            shape: 'S8'\n          },\n          serviceRole: {},\n          tags: {\n            shape: 'Sj'\n          },\n          eksConfiguration: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          computeEnvironmentName: {},\n          computeEnvironmentArn: {}\n        }\n      }\n    },\n    CreateJobQueue: {\n      http: {\n        requestUri: '/v1/createjobqueue'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobQueueName',\n          'priority',\n          'computeEnvironmentOrder'\n        ],\n        members: {\n          jobQueueName: {},\n          state: {},\n          schedulingPolicyArn: {},\n          priority: {\n            type: 'integer'\n          },\n          computeEnvironmentOrder: {\n            shape: 'Sq'\n          },\n          tags: {\n            shape: 'Sj'\n          },\n          jobStateTimeLimitActions: {\n            shape: 'Ss'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobQueueName',\n          'jobQueueArn'\n        ],\n        members: {\n          jobQueueName: {},\n          jobQueueArn: {}\n        }\n      }\n    },\n    CreateSchedulingPolicy: {\n      http: {\n        requestUri: '/v1/createschedulingpolicy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {},\n          fairsharePolicy: {\n            shape: 'Sy'\n          },\n          tags: {\n            shape: 'Sj'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'name',\n          'arn'\n        ],\n        members: {\n          name: {},\n          arn: {}\n        }\n      }\n    },\n    DeleteComputeEnvironment: {\n      http: {\n        requestUri: '/v1/deletecomputeenvironment'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'computeEnvironment'\n        ],\n        members: {\n          computeEnvironment: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteJobQueue: {\n      http: {\n        requestUri: '/v1/deletejobqueue'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobQueue'\n        ],\n        members: {\n          jobQueue: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteSchedulingPolicy: {\n      http: {\n        requestUri: '/v1/deleteschedulingpolicy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn'\n        ],\n        members: {\n          arn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeregisterJobDefinition: {\n      http: {\n        requestUri: '/v1/deregisterjobdefinition'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobDefinition'\n        ],\n        members: {\n          jobDefinition: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DescribeComputeEnvironments: {\n      http: {\n        requestUri: '/v1/describecomputeenvironments'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          computeEnvironments: {\n            shape: 'Sb'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          computeEnvironments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'computeEnvironmentName',\n                'computeEnvironmentArn'\n              ],\n              members: {\n                computeEnvironmentName: {},\n                computeEnvironmentArn: {},\n                unmanagedvCpus: {\n                  type: 'integer'\n                },\n                ecsClusterArn: {},\n                tags: {\n                  shape: 'Sj'\n                },\n                type: {},\n                state: {},\n                status: {},\n                statusReason: {},\n                computeResources: {\n                  shape: 'S8'\n                },\n                serviceRole: {},\n                updatePolicy: {\n                  shape: 'S1g'\n                },\n                eksConfiguration: {\n                  shape: 'Sm'\n                },\n                containerOrchestrationType: {},\n                uuid: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    DescribeJobDefinitions: {\n      http: {\n        requestUri: '/v1/describejobdefinitions'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          jobDefinitions: {\n            shape: 'Sb'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          jobDefinitionName: {},\n          status: {},\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          jobDefinitions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'jobDefinitionName',\n                'jobDefinitionArn',\n                'revision',\n                'type'\n              ],\n              members: {\n                jobDefinitionName: {},\n                jobDefinitionArn: {},\n                revision: {\n                  type: 'integer'\n                },\n                status: {},\n                type: {},\n                schedulingPriority: {\n                  type: 'integer'\n                },\n                parameters: {\n                  shape: 'S1o'\n                },\n                retryStrategy: {\n                  shape: 'S1p'\n                },\n                containerProperties: {\n                  shape: 'S1t'\n                },\n                timeout: {\n                  shape: 'S2s'\n                },\n                nodeProperties: {\n                  shape: 'S2t'\n                },\n                tags: {\n                  shape: 'Sj'\n                },\n                propagateTags: {\n                  type: 'boolean'\n                },\n                platformCapabilities: {\n                  shape: 'S33'\n                },\n                ecsProperties: {\n                  shape: 'S2w'\n                },\n                eksProperties: {\n                  shape: 'S35'\n                },\n                containerOrchestrationType: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    DescribeJobQueues: {\n      http: {\n        requestUri: '/v1/describejobqueues'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          jobQueues: {\n            shape: 'Sb'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          jobQueues: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'jobQueueName',\n                'jobQueueArn',\n                'state',\n                'priority',\n                'computeEnvironmentOrder'\n              ],\n              members: {\n                jobQueueName: {},\n                jobQueueArn: {},\n                state: {},\n                schedulingPolicyArn: {},\n                status: {},\n                statusReason: {},\n                priority: {\n                  type: 'integer'\n                },\n                computeEnvironmentOrder: {\n                  shape: 'Sq'\n                },\n                tags: {\n                  shape: 'Sj'\n                },\n                jobStateTimeLimitActions: {\n                  shape: 'Ss'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    DescribeJobs: {\n      http: {\n        requestUri: '/v1/describejobs'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobs'\n        ],\n        members: {\n          jobs: {\n            shape: 'Sb'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          jobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'jobName',\n                'jobId',\n                'jobQueue',\n                'status',\n                'startedAt',\n                'jobDefinition'\n              ],\n              members: {\n                jobArn: {},\n                jobName: {},\n                jobId: {},\n                jobQueue: {},\n                status: {},\n                shareIdentifier: {},\n                schedulingPriority: {\n                  type: 'integer'\n                },\n                attempts: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      container: {\n                        type: 'structure',\n                        members: {\n                          containerInstanceArn: {},\n                          taskArn: {},\n                          exitCode: {\n                            type: 'integer'\n                          },\n                          reason: {},\n                          logStreamName: {},\n                          networkInterfaces: {\n                            shape: 'S45'\n                          }\n                        }\n                      },\n                      startedAt: {\n                        type: 'long'\n                      },\n                      stoppedAt: {\n                        type: 'long'\n                      },\n                      statusReason: {},\n                      taskProperties: {\n                        type: 'list',\n                        member: {\n                          type: 'structure',\n                          members: {\n                            containerInstanceArn: {},\n                            taskArn: {},\n                            containers: {\n                              type: 'list',\n                              member: {\n                                type: 'structure',\n                                members: {\n                                  exitCode: {\n                                    type: 'integer'\n                                  },\n                                  name: {},\n                                  reason: {},\n                                  logStreamName: {},\n                                  networkInterfaces: {\n                                    shape: 'S45'\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                statusReason: {},\n                createdAt: {\n                  type: 'long'\n                },\n                retryStrategy: {\n                  shape: 'S1p'\n                },\n                startedAt: {\n                  type: 'long'\n                },\n                stoppedAt: {\n                  type: 'long'\n                },\n                dependsOn: {\n                  shape: 'S4b'\n                },\n                jobDefinition: {},\n                parameters: {\n                  shape: 'S1o'\n                },\n                container: {\n                  type: 'structure',\n                  members: {\n                    image: {},\n                    vcpus: {\n                      type: 'integer'\n                    },\n                    memory: {\n                      type: 'integer'\n                    },\n                    command: {\n                      shape: 'Sb'\n                    },\n                    jobRoleArn: {},\n                    executionRoleArn: {},\n                    volumes: {\n                      shape: 'S1u'\n                    },\n                    environment: {\n                      shape: 'S21'\n                    },\n                    mountPoints: {\n                      shape: 'S23'\n                    },\n                    readonlyRootFilesystem: {\n                      type: 'boolean'\n                    },\n                    ulimits: {\n                      shape: 'S25'\n                    },\n                    privileged: {\n                      type: 'boolean'\n                    },\n                    user: {},\n                    exitCode: {\n                      type: 'integer'\n                    },\n                    reason: {},\n                    containerInstanceArn: {},\n                    taskArn: {},\n                    logStreamName: {},\n                    instanceType: {},\n                    networkInterfaces: {\n                      shape: 'S45'\n                    },\n                    resourceRequirements: {\n                      shape: 'S27'\n                    },\n                    linuxParameters: {\n                      shape: 'S2a'\n                    },\n                    logConfiguration: {\n                      shape: 'S2h'\n                    },\n                    secrets: {\n                      shape: 'S2k'\n                    },\n                    networkConfiguration: {\n                      shape: 'S2m'\n                    },\n                    fargatePlatformConfiguration: {\n                      shape: 'S2o'\n                    },\n                    ephemeralStorage: {\n                      shape: 'S2p'\n                    },\n                    runtimePlatform: {\n                      shape: 'S2q'\n                    },\n                    repositoryCredentials: {\n                      shape: 'S2r'\n                    }\n                  }\n                },\n                nodeDetails: {\n                  type: 'structure',\n                  members: {\n                    nodeIndex: {\n                      type: 'integer'\n                    },\n                    isMainNode: {\n                      type: 'boolean'\n                    }\n                  }\n                },\n                nodeProperties: {\n                  shape: 'S2t'\n                },\n                arrayProperties: {\n                  type: 'structure',\n                  members: {\n                    statusSummary: {\n                      type: 'map',\n                      key: {},\n                      value: {\n                        type: 'integer'\n                      }\n                    },\n                    size: {\n                      type: 'integer'\n                    },\n                    index: {\n                      type: 'integer'\n                    }\n                  }\n                },\n                timeout: {\n                  shape: 'S2s'\n                },\n                tags: {\n                  shape: 'Sj'\n                },\n                propagateTags: {\n                  type: 'boolean'\n                },\n                platformCapabilities: {\n                  shape: 'S33'\n                },\n                eksProperties: {\n                  type: 'structure',\n                  members: {\n                    podProperties: {\n                      type: 'structure',\n                      members: {\n                        serviceAccountName: {},\n                        hostNetwork: {\n                          type: 'boolean'\n                        },\n                        dnsPolicy: {},\n                        imagePullSecrets: {\n                          shape: 'S37'\n                        },\n                        containers: {\n                          shape: 'S4k'\n                        },\n                        initContainers: {\n                          shape: 'S4k'\n                        },\n                        volumes: {\n                          shape: 'S3l'\n                        },\n                        podName: {},\n                        nodeName: {},\n                        metadata: {\n                          shape: 'S3q'\n                        },\n                        shareProcessNamespace: {\n                          type: 'boolean'\n                        }\n                      }\n                    }\n                  }\n                },\n                eksAttempts: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      containers: {\n                        shape: 'S4o'\n                      },\n                      initContainers: {\n                        shape: 'S4o'\n                      },\n                      podName: {},\n                      nodeName: {},\n                      startedAt: {\n                        type: 'long'\n                      },\n                      stoppedAt: {\n                        type: 'long'\n                      },\n                      statusReason: {}\n                    }\n                  }\n                },\n                ecsProperties: {\n                  type: 'structure',\n                  members: {\n                    taskProperties: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          containers: {\n                            type: 'list',\n                            member: {\n                              type: 'structure',\n                              members: {\n                                command: {\n                                  shape: 'Sb'\n                                },\n                                dependsOn: {\n                                  shape: 'S31'\n                                },\n                                environment: {\n                                  shape: 'S21'\n                                },\n                                essential: {\n                                  type: 'boolean'\n                                },\n                                image: {},\n                                linuxParameters: {\n                                  shape: 'S2a'\n                                },\n                                logConfiguration: {\n                                  shape: 'S2h'\n                                },\n                                mountPoints: {\n                                  shape: 'S23'\n                                },\n                                name: {},\n                                privileged: {\n                                  type: 'boolean'\n                                },\n                                readonlyRootFilesystem: {\n                                  type: 'boolean'\n                                },\n                                repositoryCredentials: {\n                                  shape: 'S2r'\n                                },\n                                resourceRequirements: {\n                                  shape: 'S27'\n                                },\n                                secrets: {\n                                  shape: 'S2k'\n                                },\n                                ulimits: {\n                                  shape: 'S25'\n                                },\n                                user: {},\n                                exitCode: {\n                                  type: 'integer'\n                                },\n                                reason: {},\n                                logStreamName: {},\n                                networkInterfaces: {\n                                  shape: 'S45'\n                                }\n                              }\n                            }\n                          },\n                          containerInstanceArn: {},\n                          taskArn: {},\n                          ephemeralStorage: {\n                            shape: 'S2p'\n                          },\n                          executionRoleArn: {},\n                          platformVersion: {},\n                          ipcMode: {},\n                          taskRoleArn: {},\n                          pidMode: {},\n                          networkConfiguration: {\n                            shape: 'S2m'\n                          },\n                          runtimePlatform: {\n                            shape: 'S2q'\n                          },\n                          volumes: {\n                            shape: 'S1u'\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                isCancelled: {\n                  type: 'boolean'\n                },\n                isTerminated: {\n                  type: 'boolean'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeSchedulingPolicies: {\n      http: {\n        requestUri: '/v1/describeschedulingpolicies'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arns'\n        ],\n        members: {\n          arns: {\n            shape: 'Sb'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          schedulingPolicies: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'name',\n                'arn'\n              ],\n              members: {\n                name: {},\n                arn: {},\n                fairsharePolicy: {\n                  shape: 'Sy'\n                },\n                tags: {\n                  shape: 'Sj'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    GetJobQueueSnapshot: {\n      http: {\n        requestUri: '/v1/getjobqueuesnapshot'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobQueue'\n        ],\n        members: {\n          jobQueue: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          frontOfQueue: {\n            type: 'structure',\n            members: {\n              jobs: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    jobArn: {},\n                    earliestTimeAtPosition: {\n                      type: 'long'\n                    }\n                  }\n                }\n              },\n              lastUpdatedAt: {\n                type: 'long'\n              }\n            }\n          }\n        }\n      }\n    },\n    ListJobs: {\n      http: {\n        requestUri: '/v1/listjobs'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          jobQueue: {},\n          arrayJobId: {},\n          multiNodeJobId: {},\n          jobStatus: {},\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {},\n          filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                values: {\n                  shape: 'Sb'\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobSummaryList'\n        ],\n        members: {\n          jobSummaryList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'jobId',\n                'jobName'\n              ],\n              members: {\n                jobArn: {},\n                jobId: {},\n                jobName: {},\n                createdAt: {\n                  type: 'long'\n                },\n                status: {},\n                statusReason: {},\n                startedAt: {\n                  type: 'long'\n                },\n                stoppedAt: {\n                  type: 'long'\n                },\n                container: {\n                  type: 'structure',\n                  members: {\n                    exitCode: {\n                      type: 'integer'\n                    },\n                    reason: {}\n                  }\n                },\n                arrayProperties: {\n                  type: 'structure',\n                  members: {\n                    size: {\n                      type: 'integer'\n                    },\n                    index: {\n                      type: 'integer'\n                    }\n                  }\n                },\n                nodeProperties: {\n                  type: 'structure',\n                  members: {\n                    isMainNode: {\n                      type: 'boolean'\n                    },\n                    numNodes: {\n                      type: 'integer'\n                    },\n                    nodeIndex: {\n                      type: 'integer'\n                    }\n                  }\n                },\n                jobDefinition: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListSchedulingPolicies: {\n      http: {\n        requestUri: '/v1/listschedulingpolicies'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          schedulingPolicies: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn'\n              ],\n              members: {\n                arn: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sj'\n          }\n        }\n      }\n    },\n    RegisterJobDefinition: {\n      http: {\n        requestUri: '/v1/registerjobdefinition'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobDefinitionName',\n          'type'\n        ],\n        members: {\n          jobDefinitionName: {},\n          type: {},\n          parameters: {\n            shape: 'S1o'\n          },\n          schedulingPriority: {\n            type: 'integer'\n          },\n          containerProperties: {\n            shape: 'S1t'\n          },\n          nodeProperties: {\n            shape: 'S2t'\n          },\n          retryStrategy: {\n            shape: 'S1p'\n          },\n          propagateTags: {\n            type: 'boolean'\n          },\n          timeout: {\n            shape: 'S2s'\n          },\n          tags: {\n            shape: 'Sj'\n          },\n          platformCapabilities: {\n            shape: 'S33'\n          },\n          eksProperties: {\n            shape: 'S35'\n          },\n          ecsProperties: {\n            shape: 'S2w'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobDefinitionName',\n          'jobDefinitionArn',\n          'revision'\n        ],\n        members: {\n          jobDefinitionName: {},\n          jobDefinitionArn: {},\n          revision: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    SubmitJob: {\n      http: {\n        requestUri: '/v1/submitjob'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobName',\n          'jobQueue',\n          'jobDefinition'\n        ],\n        members: {\n          jobName: {},\n          jobQueue: {},\n          shareIdentifier: {},\n          schedulingPriorityOverride: {\n            type: 'integer'\n          },\n          arrayProperties: {\n            type: 'structure',\n            members: {\n              size: {\n                type: 'integer'\n              }\n            }\n          },\n          dependsOn: {\n            shape: 'S4b'\n          },\n          jobDefinition: {},\n          parameters: {\n            shape: 'S1o'\n          },\n          containerOverrides: {\n            shape: 'S5o'\n          },\n          nodeOverrides: {\n            type: 'structure',\n            members: {\n              numNodes: {\n                type: 'integer'\n              },\n              nodePropertyOverrides: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'targetNodes'\n                  ],\n                  members: {\n                    targetNodes: {},\n                    containerOverrides: {\n                      shape: 'S5o'\n                    },\n                    ecsPropertiesOverride: {\n                      shape: 'S5s'\n                    },\n                    instanceTypes: {\n                      shape: 'Sb'\n                    }\n                  }\n                }\n              }\n            }\n          },\n          retryStrategy: {\n            shape: 'S1p'\n          },\n          propagateTags: {\n            type: 'boolean'\n          },\n          timeout: {\n            shape: 'S2s'\n          },\n          tags: {\n            shape: 'Sj'\n          },\n          eksPropertiesOverride: {\n            type: 'structure',\n            members: {\n              podProperties: {\n                type: 'structure',\n                members: {\n                  containers: {\n                    shape: 'S5z'\n                  },\n                  initContainers: {\n                    shape: 'S5z'\n                  },\n                  metadata: {\n                    shape: 'S3q'\n                  }\n                }\n              }\n            }\n          },\n          ecsPropertiesOverride: {\n            shape: 'S5s'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobName',\n          'jobId'\n        ],\n        members: {\n          jobArn: {},\n          jobName: {},\n          jobId: {}\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/v1/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sj'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    TerminateJob: {\n      http: {\n        requestUri: '/v1/terminatejob'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobId',\n          'reason'\n        ],\n        members: {\n          jobId: {},\n          reason: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateComputeEnvironment: {\n      http: {\n        requestUri: '/v1/updatecomputeenvironment'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'computeEnvironment'\n        ],\n        members: {\n          computeEnvironment: {},\n          state: {},\n          unmanagedvCpus: {\n            type: 'integer'\n          },\n          computeResources: {\n            type: 'structure',\n            members: {\n              minvCpus: {\n                type: 'integer'\n              },\n              maxvCpus: {\n                type: 'integer'\n              },\n              desiredvCpus: {\n                type: 'integer'\n              },\n              subnets: {\n                shape: 'Sb'\n              },\n              securityGroupIds: {\n                shape: 'Sb'\n              },\n              allocationStrategy: {},\n              instanceTypes: {\n                shape: 'Sb'\n              },\n              ec2KeyPair: {},\n              instanceRole: {},\n              tags: {\n                shape: 'Sc'\n              },\n              placementGroup: {},\n              bidPercentage: {\n                type: 'integer'\n              },\n              launchTemplate: {\n                shape: 'Sd'\n              },\n              ec2Configuration: {\n                shape: 'Se'\n              },\n              updateToLatestImageVersion: {\n                type: 'boolean'\n              },\n              type: {},\n              imageId: {}\n            }\n          },\n          serviceRole: {},\n          updatePolicy: {\n            shape: 'S1g'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          computeEnvironmentName: {},\n          computeEnvironmentArn: {}\n        }\n      }\n    },\n    UpdateJobQueue: {\n      http: {\n        requestUri: '/v1/updatejobqueue'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobQueue'\n        ],\n        members: {\n          jobQueue: {},\n          state: {},\n          schedulingPolicyArn: {},\n          priority: {\n            type: 'integer'\n          },\n          computeEnvironmentOrder: {\n            shape: 'Sq'\n          },\n          jobStateTimeLimitActions: {\n            shape: 'Ss'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          jobQueueName: {},\n          jobQueueArn: {}\n        }\n      }\n    },\n    UpdateSchedulingPolicy: {\n      http: {\n        requestUri: '/v1/updateschedulingpolicy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn'\n        ],\n        members: {\n          arn: {},\n          fairsharePolicy: {\n            shape: 'Sy'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    }\n  },\n  shapes: {\n    S8: {\n      type: 'structure',\n      required: [\n        'type',\n        'maxvCpus',\n        'subnets'\n      ],\n      members: {\n        type: {},\n        allocationStrategy: {},\n        minvCpus: {\n          type: 'integer'\n        },\n        maxvCpus: {\n          type: 'integer'\n        },\n        desiredvCpus: {\n          type: 'integer'\n        },\n        instanceTypes: {\n          shape: 'Sb'\n        },\n        imageId: {\n          deprecated: true,\n          deprecatedMessage: 'This field is deprecated, use ec2Configuration[].imageIdOverride instead.'\n        },\n        subnets: {\n          shape: 'Sb'\n        },\n        securityGroupIds: {\n          shape: 'Sb'\n        },\n        ec2KeyPair: {},\n        instanceRole: {},\n        tags: {\n          shape: 'Sc'\n        },\n        placementGroup: {},\n        bidPercentage: {\n          type: 'integer'\n        },\n        spotIamFleetRole: {},\n        launchTemplate: {\n          shape: 'Sd'\n        },\n        ec2Configuration: {\n          shape: 'Se'\n        }\n      }\n    },\n    Sb: {\n      type: 'list',\n      member: {}\n    },\n    Sc: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sd: {\n      type: 'structure',\n      members: {\n        launchTemplateId: {},\n        launchTemplateName: {},\n        version: {}\n      }\n    },\n    Se: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'imageType'\n        ],\n        members: {\n          imageType: {},\n          imageIdOverride: {},\n          imageKubernetesVersion: {}\n        }\n      }\n    },\n    Sj: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sm: {\n      type: 'structure',\n      required: [\n        'eksClusterArn',\n        'kubernetesNamespace'\n      ],\n      members: {\n        eksClusterArn: {},\n        kubernetesNamespace: {}\n      }\n    },\n    Sq: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'order',\n          'computeEnvironment'\n        ],\n        members: {\n          order: {\n            type: 'integer'\n          },\n          computeEnvironment: {}\n        }\n      }\n    },\n    Ss: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'reason',\n          'state',\n          'maxTimeSeconds',\n          'action'\n        ],\n        members: {\n          reason: {},\n          state: {},\n          maxTimeSeconds: {\n            type: 'integer'\n          },\n          action: {}\n        }\n      }\n    },\n    Sy: {\n      type: 'structure',\n      members: {\n        shareDecaySeconds: {\n          type: 'integer'\n        },\n        computeReservation: {\n          type: 'integer'\n        },\n        shareDistribution: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'shareIdentifier'\n            ],\n            members: {\n              shareIdentifier: {},\n              weightFactor: {\n                type: 'float'\n              }\n            }\n          }\n        }\n      }\n    },\n    S1g: {\n      type: 'structure',\n      members: {\n        terminateJobsOnUpdate: {\n          type: 'boolean'\n        },\n        jobExecutionTimeoutMinutes: {\n          type: 'long'\n        }\n      }\n    },\n    S1o: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1p: {\n      type: 'structure',\n      members: {\n        attempts: {\n          type: 'integer'\n        },\n        evaluateOnExit: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'action'\n            ],\n            members: {\n              onStatusReason: {},\n              onReason: {},\n              onExitCode: {},\n              action: {}\n            }\n          }\n        }\n      }\n    },\n    S1t: {\n      type: 'structure',\n      members: {\n        image: {},\n        vcpus: {\n          deprecated: true,\n          deprecatedMessage: 'This field is deprecated, use resourceRequirements instead.',\n          type: 'integer'\n        },\n        memory: {\n          deprecated: true,\n          deprecatedMessage: 'This field is deprecated, use resourceRequirements instead.',\n          type: 'integer'\n        },\n        command: {\n          shape: 'Sb'\n        },\n        jobRoleArn: {},\n        executionRoleArn: {},\n        volumes: {\n          shape: 'S1u'\n        },\n        environment: {\n          shape: 'S21'\n        },\n        mountPoints: {\n          shape: 'S23'\n        },\n        readonlyRootFilesystem: {\n          type: 'boolean'\n        },\n        privileged: {\n          type: 'boolean'\n        },\n        ulimits: {\n          shape: 'S25'\n        },\n        user: {},\n        instanceType: {},\n        resourceRequirements: {\n          shape: 'S27'\n        },\n        linuxParameters: {\n          shape: 'S2a'\n        },\n        logConfiguration: {\n          shape: 'S2h'\n        },\n        secrets: {\n          shape: 'S2k'\n        },\n        networkConfiguration: {\n          shape: 'S2m'\n        },\n        fargatePlatformConfiguration: {\n          shape: 'S2o'\n        },\n        ephemeralStorage: {\n          shape: 'S2p'\n        },\n        runtimePlatform: {\n          shape: 'S2q'\n        },\n        repositoryCredentials: {\n          shape: 'S2r'\n        }\n      }\n    },\n    S1u: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          host: {\n            type: 'structure',\n            members: {\n              sourcePath: {}\n            }\n          },\n          name: {},\n          efsVolumeConfiguration: {\n            type: 'structure',\n            required: [\n              'fileSystemId'\n            ],\n            members: {\n              fileSystemId: {},\n              rootDirectory: {},\n              transitEncryption: {},\n              transitEncryptionPort: {\n                type: 'integer'\n              },\n              authorizationConfig: {\n                type: 'structure',\n                members: {\n                  accessPointId: {},\n                  iam: {}\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S21: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          name: {},\n          value: {}\n        }\n      }\n    },\n    S23: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          containerPath: {},\n          readOnly: {\n            type: 'boolean'\n          },\n          sourceVolume: {}\n        }\n      }\n    },\n    S25: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'hardLimit',\n          'name',\n          'softLimit'\n        ],\n        members: {\n          hardLimit: {\n            type: 'integer'\n          },\n          name: {},\n          softLimit: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    S27: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'value',\n          'type'\n        ],\n        members: {\n          value: {},\n          type: {}\n        }\n      }\n    },\n    S2a: {\n      type: 'structure',\n      members: {\n        devices: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'hostPath'\n            ],\n            members: {\n              hostPath: {},\n              containerPath: {},\n              permissions: {\n                type: 'list',\n                member: {}\n              }\n            }\n          }\n        },\n        initProcessEnabled: {\n          type: 'boolean'\n        },\n        sharedMemorySize: {\n          type: 'integer'\n        },\n        tmpfs: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'containerPath',\n              'size'\n            ],\n            members: {\n              containerPath: {},\n              size: {\n                type: 'integer'\n              },\n              mountOptions: {\n                shape: 'Sb'\n              }\n            }\n          }\n        },\n        maxSwap: {\n          type: 'integer'\n        },\n        swappiness: {\n          type: 'integer'\n        }\n      }\n    },\n    S2h: {\n      type: 'structure',\n      required: [\n        'logDriver'\n      ],\n      members: {\n        logDriver: {},\n        options: {\n          type: 'map',\n          key: {},\n          value: {}\n        },\n        secretOptions: {\n          shape: 'S2k'\n        }\n      }\n    },\n    S2k: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name',\n          'valueFrom'\n        ],\n        members: {\n          name: {},\n          valueFrom: {}\n        }\n      }\n    },\n    S2m: {\n      type: 'structure',\n      members: {\n        assignPublicIp: {}\n      }\n    },\n    S2o: {\n      type: 'structure',\n      members: {\n        platformVersion: {}\n      }\n    },\n    S2p: {\n      type: 'structure',\n      required: [\n        'sizeInGiB'\n      ],\n      members: {\n        sizeInGiB: {\n          type: 'integer'\n        }\n      }\n    },\n    S2q: {\n      type: 'structure',\n      members: {\n        operatingSystemFamily: {},\n        cpuArchitecture: {}\n      }\n    },\n    S2r: {\n      type: 'structure',\n      required: [\n        'credentialsParameter'\n      ],\n      members: {\n        credentialsParameter: {}\n      }\n    },\n    S2s: {\n      type: 'structure',\n      members: {\n        attemptDurationSeconds: {\n          type: 'integer'\n        }\n      }\n    },\n    S2t: {\n      type: 'structure',\n      required: [\n        'numNodes',\n        'mainNode',\n        'nodeRangeProperties'\n      ],\n      members: {\n        numNodes: {\n          type: 'integer'\n        },\n        mainNode: {\n          type: 'integer'\n        },\n        nodeRangeProperties: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'targetNodes'\n            ],\n            members: {\n              targetNodes: {},\n              container: {\n                shape: 'S1t'\n              },\n              instanceTypes: {\n                shape: 'Sb'\n              },\n              ecsProperties: {\n                shape: 'S2w'\n              }\n            }\n          }\n        }\n      }\n    },\n    S2w: {\n      type: 'structure',\n      required: [\n        'taskProperties'\n      ],\n      members: {\n        taskProperties: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'containers'\n            ],\n            members: {\n              containers: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'image'\n                  ],\n                  members: {\n                    command: {\n                      shape: 'Sb'\n                    },\n                    dependsOn: {\n                      shape: 'S31'\n                    },\n                    environment: {\n                      shape: 'S21'\n                    },\n                    essential: {\n                      type: 'boolean'\n                    },\n                    image: {},\n                    linuxParameters: {\n                      shape: 'S2a'\n                    },\n                    logConfiguration: {\n                      shape: 'S2h'\n                    },\n                    mountPoints: {\n                      shape: 'S23'\n                    },\n                    name: {},\n                    privileged: {\n                      type: 'boolean'\n                    },\n                    readonlyRootFilesystem: {\n                      type: 'boolean'\n                    },\n                    repositoryCredentials: {\n                      shape: 'S2r'\n                    },\n                    resourceRequirements: {\n                      shape: 'S27'\n                    },\n                    secrets: {\n                      shape: 'S2k'\n                    },\n                    ulimits: {\n                      shape: 'S25'\n                    },\n                    user: {}\n                  }\n                }\n              },\n              ephemeralStorage: {\n                shape: 'S2p'\n              },\n              executionRoleArn: {},\n              platformVersion: {},\n              ipcMode: {},\n              taskRoleArn: {},\n              pidMode: {},\n              networkConfiguration: {\n                shape: 'S2m'\n              },\n              runtimePlatform: {\n                shape: 'S2q'\n              },\n              volumes: {\n                shape: 'S1u'\n              }\n            }\n          }\n        }\n      }\n    },\n    S31: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          containerName: {},\n          condition: {}\n        }\n      }\n    },\n    S33: {\n      type: 'list',\n      member: {}\n    },\n    S35: {\n      type: 'structure',\n      members: {\n        podProperties: {\n          type: 'structure',\n          members: {\n            serviceAccountName: {},\n            hostNetwork: {\n              type: 'boolean'\n            },\n            dnsPolicy: {},\n            imagePullSecrets: {\n              shape: 'S37'\n            },\n            containers: {\n              shape: 'S39'\n            },\n            initContainers: {\n              shape: 'S39'\n            },\n            volumes: {\n              shape: 'S3l'\n            },\n            metadata: {\n              shape: 'S3q'\n            },\n            shareProcessNamespace: {\n              type: 'boolean'\n            }\n          }\n        }\n      }\n    },\n    S37: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {}\n        }\n      }\n    },\n    S39: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'image'\n        ],\n        members: {\n          name: {},\n          image: {},\n          imagePullPolicy: {},\n          command: {\n            shape: 'Sb'\n          },\n          args: {\n            shape: 'Sb'\n          },\n          env: {\n            shape: 'S3b'\n          },\n          resources: {\n            shape: 'S3d'\n          },\n          volumeMounts: {\n            shape: 'S3h'\n          },\n          securityContext: {\n            shape: 'S3j'\n          }\n        }\n      }\n    },\n    S3b: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {},\n          value: {}\n        }\n      }\n    },\n    S3d: {\n      type: 'structure',\n      members: {\n        limits: {\n          type: 'map',\n          key: {},\n          value: {}\n        },\n        requests: {\n          type: 'map',\n          key: {},\n          value: {}\n        }\n      }\n    },\n    S3h: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          name: {},\n          mountPath: {},\n          readOnly: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    S3j: {\n      type: 'structure',\n      members: {\n        runAsUser: {\n          type: 'long'\n        },\n        runAsGroup: {\n          type: 'long'\n        },\n        privileged: {\n          type: 'boolean'\n        },\n        allowPrivilegeEscalation: {\n          type: 'boolean'\n        },\n        readOnlyRootFilesystem: {\n          type: 'boolean'\n        },\n        runAsNonRoot: {\n          type: 'boolean'\n        }\n      }\n    },\n    S3l: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {},\n          hostPath: {\n            type: 'structure',\n            members: {\n              path: {}\n            }\n          },\n          emptyDir: {\n            type: 'structure',\n            members: {\n              medium: {},\n              sizeLimit: {}\n            }\n          },\n          secret: {\n            type: 'structure',\n            required: [\n              'secretName'\n            ],\n            members: {\n              secretName: {},\n              optional: {\n                type: 'boolean'\n              }\n            }\n          }\n        }\n      }\n    },\n    S3q: {\n      type: 'structure',\n      members: {\n        labels: {\n          type: 'map',\n          key: {},\n          value: {}\n        }\n      }\n    },\n    S45: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          attachmentId: {},\n          ipv6Address: {},\n          privateIpv4Address: {}\n        }\n      }\n    },\n    S4b: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          jobId: {},\n          type: {}\n        }\n      }\n    },\n    S4k: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          name: {},\n          image: {},\n          imagePullPolicy: {},\n          command: {\n            shape: 'Sb'\n          },\n          args: {\n            shape: 'Sb'\n          },\n          env: {\n            shape: 'S3b'\n          },\n          resources: {\n            shape: 'S3d'\n          },\n          exitCode: {\n            type: 'integer'\n          },\n          reason: {},\n          volumeMounts: {\n            shape: 'S3h'\n          },\n          securityContext: {\n            shape: 'S3j'\n          }\n        }\n      }\n    },\n    S4o: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          name: {},\n          exitCode: {\n            type: 'integer'\n          },\n          reason: {}\n        }\n      }\n    },\n    S5o: {\n      type: 'structure',\n      members: {\n        vcpus: {\n          deprecated: true,\n          deprecatedMessage: 'This field is deprecated, use resourceRequirements instead.',\n          type: 'integer'\n        },\n        memory: {\n          deprecated: true,\n          deprecatedMessage: 'This field is deprecated, use resourceRequirements instead.',\n          type: 'integer'\n        },\n        command: {\n          shape: 'Sb'\n        },\n        instanceType: {},\n        environment: {\n          shape: 'S21'\n        },\n        resourceRequirements: {\n          shape: 'S27'\n        }\n      }\n    },\n    S5s: {\n      type: 'structure',\n      members: {\n        taskProperties: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              containers: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    command: {\n                      shape: 'Sb'\n                    },\n                    environment: {\n                      shape: 'S21'\n                    },\n                    name: {},\n                    resourceRequirements: {\n                      shape: 'S27'\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S5z: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          name: {},\n          image: {},\n          command: {\n            shape: 'Sb'\n          },\n          args: {\n            shape: 'Sb'\n          },\n          env: {\n            shape: 'S3b'\n          },\n          resources: {\n            shape: 'S3d'\n          }\n        }\n      }\n    }\n  }\n}"]}