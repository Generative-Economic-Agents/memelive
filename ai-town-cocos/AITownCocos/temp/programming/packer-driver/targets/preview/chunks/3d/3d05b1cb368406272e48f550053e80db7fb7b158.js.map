{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/random.js"],"names":["random","lower","upper","floating","isIterateeCall","undefined","toFinite","temp","rand","nativeRandom","nativeMin","freeParseFloat","length","baseRandom","parseFloat","Math","min"],"mappings":";;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwC;AACtC,QAAIA,QAAQ,IAAI,OAAOA,QAAP,IAAmB,SAA/B,IAA4CC,cAAc,CAACH,KAAD,EAAQC,KAAR,EAAeC,QAAf,CAA9D,EAAwF;AACtFD,MAAAA,KAAK,GAAGC,QAAQ,GAAGE,SAAnB;AACD;;AACD,QAAIF,QAAQ,KAAKE,SAAjB,EAA4B;AAC1B,UAAI,OAAOH,KAAP,IAAgB,SAApB,EAA+B;AAC7BC,QAAAA,QAAQ,GAAGD,KAAX;AACAA,QAAAA,KAAK,GAAGG,SAAR;AACD,OAHD,MAIK,IAAI,OAAOJ,KAAP,IAAgB,SAApB,EAA+B;AAClCE,QAAAA,QAAQ,GAAGF,KAAX;AACAA,QAAAA,KAAK,GAAGI,SAAR;AACD;AACF;;AACD,QAAIJ,KAAK,KAAKI,SAAV,IAAuBH,KAAK,KAAKG,SAArC,EAAgD;AAC9CJ,MAAAA,KAAK,GAAG,CAAR;AACAC,MAAAA,KAAK,GAAG,CAAR;AACD,KAHD,MAIK;AACHD,MAAAA,KAAK,GAAGK,QAAQ,CAACL,KAAD,CAAhB;;AACA,UAAIC,KAAK,KAAKG,SAAd,EAAyB;AACvBH,QAAAA,KAAK,GAAGD,KAAR;AACAA,QAAAA,KAAK,GAAG,CAAR;AACD,OAHD,MAGO;AACLC,QAAAA,KAAK,GAAGI,QAAQ,CAACJ,KAAD,CAAhB;AACD;AACF;;AACD,QAAID,KAAK,GAAGC,KAAZ,EAAmB;AACjB,UAAIK,IAAI,GAAGN,KAAX;AACAA,MAAAA,KAAK,GAAGC,KAAR;AACAA,MAAAA,KAAK,GAAGK,IAAR;AACD;;AACD,QAAIJ,QAAQ,IAAIF,KAAK,GAAG,CAApB,IAAyBC,KAAK,GAAG,CAArC,EAAwC;AACtC,UAAIM,IAAI,GAAGC,YAAY,EAAvB;AACA,aAAOC,SAAS,CAACT,KAAK,GAAIO,IAAI,IAAIN,KAAK,GAAGD,KAAR,GAAgBU,cAAc,CAAC,SAAS,CAACH,IAAI,GAAG,EAAR,EAAYI,MAAZ,GAAqB,CAA9B,CAAD,CAAlC,CAAd,EAAsFV,KAAtF,CAAhB;AACD;;AACD,WAAOW,UAAU,CAACZ,KAAD,EAAQC,KAAR,CAAjB;AACD;;;;AA/EMW,MAAAA,U;;AACAT,MAAAA,c;;AACAE,MAAAA,Q;;;AAEP;AACIK,MAAAA,c,GAAiBG,U;AAErB;;AACIJ,MAAAA,S,GAAYK,IAAI,CAACC,G;AACjBP,MAAAA,Y,GAAeM,IAAI,CAACf,M;;yBAwETA,M","sourcesContent":["import baseRandom from './_baseRandom.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nexport default random;\n"]}