{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/forecast-2018-06-26.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","CreateAutoPredictor","input","type","required","members","PredictorName","ForecastHorizon","ForecastTypes","shape","ForecastDimensions","ForecastFrequency","DataConfig","EncryptionConfig","ReferencePredictorArn","OptimizationMetric","ExplainPredictor","Tags","MonitorConfig","MonitorName","TimeAlignmentBoundary","output","PredictorArn","CreateDataset","DatasetName","Domain","DatasetType","DataFrequency","Schema","DatasetArn","CreateDatasetGroup","DatasetGroupName","DatasetArns","DatasetGroupArn","CreateDatasetImportJob","DatasetImportJobName","DataSource","TimestampFormat","TimeZone","UseGeolocationForTimeZone","GeolocationFormat","Format","ImportMode","DatasetImportJobArn","CreateExplainability","ExplainabilityName","ResourceArn","ExplainabilityConfig","EnableVisualization","StartDateTime","EndDateTime","ExplainabilityArn","CreateExplainabilityExport","ExplainabilityExportName","Destination","ExplainabilityExportArn","CreateForecast","ForecastName","TimeSeriesSelector","ForecastArn","CreateForecastExportJob","ForecastExportJobName","ForecastExportJobArn","CreateMonitor","MonitorArn","CreatePredictor","AlgorithmArn","PerformAutoML","AutoMLOverrideStrategy","PerformHPO","TrainingParameters","EvaluationParameters","HPOConfig","InputDataConfig","FeaturizationConfig","CreatePredictorBacktestExportJob","PredictorBacktestExportJobName","PredictorBacktestExportJobArn","CreateWhatIfAnalysis","WhatIfAnalysisName","WhatIfAnalysisArn","CreateWhatIfForecast","WhatIfForecastName","TimeSeriesTransformations","TimeSeriesReplacementsDataSource","WhatIfForecastArn","CreateWhatIfForecastExport","WhatIfForecastExportName","WhatIfForecastArns","WhatIfForecastExportArn","DeleteDataset","idempotent","DeleteDatasetGroup","DeleteDatasetImportJob","DeleteExplainability","DeleteExplainabilityExport","DeleteForecast","DeleteForecastExportJob","DeleteMonitor","DeletePredictor","DeletePredictorBacktestExportJob","DeleteResourceTree","DeleteWhatIfAnalysis","DeleteWhatIfForecast","DeleteWhatIfForecastExport","DescribeAutoPredictor","DatasetImportJobArns","ReferencePredictorSummary","EstimatedTimeRemainingInMinutes","Status","Message","CreationTime","LastModificationTime","ExplainabilityInfo","MonitorInfo","DescribeDataset","DescribeDatasetGroup","DescribeDatasetImportJob","FieldStatistics","key","value","Count","CountDistinct","CountNull","CountNan","Min","Max","Avg","Stddev","CountLong","CountDistinctLong","CountNullLong","CountNanLong","DataSize","DescribeExplainability","DescribeExplainabilityExport","DescribeForecast","DescribeForecastExportJob","DescribeMonitor","LastEvaluationTime","LastEvaluationState","Baseline","PredictorBaseline","BaselineMetrics","member","Name","Value","EstimatedEvaluationTimeRemainingInMinutes","DescribePredictor","AutoMLAlgorithmArns","PredictorExecutionDetails","PredictorExecutions","TestWindows","TestWindowStart","TestWindowEnd","IsAutoPredictor","DescribePredictorBacktestExportJob","DescribeWhatIfAnalysis","DescribeWhatIfForecast","DescribeWhatIfForecastExport","GetAccuracyMetrics","PredictorEvaluationResults","ItemCount","EvaluationType","Metrics","RMSE","deprecated","deprecatedMessage","WeightedQuantileLosses","Quantile","LossValue","ErrorMetrics","ForecastType","WAPE","MASE","MAPE","AverageWeightedQuantileLoss","ListDatasetGroups","NextToken","MaxResults","DatasetGroups","ListDatasetImportJobs","Filters","DatasetImportJobs","ListDatasets","Datasets","ListExplainabilities","Explainabilities","ListExplainabilityExports","ExplainabilityExports","ListForecastExportJobs","ForecastExportJobs","ListForecasts","Forecasts","CreatedUsingAutoPredictor","ListMonitorEvaluations","PredictorMonitorEvaluations","EvaluationTime","EvaluationState","WindowStartDatetime","WindowEndDatetime","PredictorEvent","Detail","Datetime","MonitorDataSource","MetricResults","MetricName","MetricValue","NumItemsEvaluated","ListMonitors","Monitors","ListPredictorBacktestExportJobs","PredictorBacktestExportJobs","ListPredictors","Predictors","ListTagsForResource","ListWhatIfAnalyses","WhatIfAnalyses","ListWhatIfForecastExports","WhatIfForecastExports","ListWhatIfForecasts","WhatIfForecasts","ResumeResource","StopResource","TagResource","UntagResource","TagKeys","UpdateDatasetGroup","shapes","S4","S6","S8","AttributeConfigs","AttributeName","Transformations","AdditionalDatasets","Configuration","Sh","Si","RoleArn","KMSKeyArn","Sm","Key","sensitive","So","Sr","Month","DayOfMonth","DayOfWeek","Hour","S10","Attributes","AttributeType","S16","S19","S3Config","S1a","Path","S1k","TimeSeriesGranularity","TimePointGranularity","S1q","S1t","TimeSeriesIdentifiers","S22","S25","NumberOfBacktestWindows","BackTestWindowOffset","S26","ParameterRanges","CategoricalParameterRanges","Values","ContinuousParameterRanges","MaxValue","MinValue","ScalingType","IntegerParameterRanges","S2g","SupplementaryFeatures","S2j","Featurizations","FeaturizationPipeline","FeaturizationMethodName","FeaturizationMethodParameters","S2w","Action","Operation","TimeSeriesConditions","AttributeValue","Condition","S34","S38","S3q","Arn","State","S5m"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-06-26',\n    endpointPrefix: 'forecast',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceFullName: 'Amazon Forecast Service',\n    serviceId: 'forecast',\n    signatureVersion: 'v4',\n    signingName: 'forecast',\n    targetPrefix: 'AmazonForecast',\n    uid: 'forecast-2018-06-26'\n  },\n  operations: {\n    CreateAutoPredictor: {\n      input: {\n        type: 'structure',\n        required: [\n          'PredictorName'\n        ],\n        members: {\n          PredictorName: {},\n          ForecastHorizon: {\n            type: 'integer'\n          },\n          ForecastTypes: {\n            shape: 'S4'\n          },\n          ForecastDimensions: {\n            shape: 'S6'\n          },\n          ForecastFrequency: {},\n          DataConfig: {\n            shape: 'S8'\n          },\n          EncryptionConfig: {\n            shape: 'Si'\n          },\n          ReferencePredictorArn: {},\n          OptimizationMetric: {},\n          ExplainPredictor: {\n            type: 'boolean'\n          },\n          Tags: {\n            shape: 'Sm'\n          },\n          MonitorConfig: {\n            type: 'structure',\n            required: [\n              'MonitorName'\n            ],\n            members: {\n              MonitorName: {}\n            }\n          },\n          TimeAlignmentBoundary: {\n            shape: 'Sr'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PredictorArn: {}\n        }\n      }\n    },\n    CreateDataset: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatasetName',\n          'Domain',\n          'DatasetType',\n          'Schema'\n        ],\n        members: {\n          DatasetName: {},\n          Domain: {},\n          DatasetType: {},\n          DataFrequency: {},\n          Schema: {\n            shape: 'S10'\n          },\n          EncryptionConfig: {\n            shape: 'Si'\n          },\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetArn: {}\n        }\n      }\n    },\n    CreateDatasetGroup: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatasetGroupName',\n          'Domain'\n        ],\n        members: {\n          DatasetGroupName: {},\n          Domain: {},\n          DatasetArns: {\n            shape: 'S16'\n          },\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetGroupArn: {}\n        }\n      }\n    },\n    CreateDatasetImportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatasetImportJobName',\n          'DatasetArn',\n          'DataSource'\n        ],\n        members: {\n          DatasetImportJobName: {},\n          DatasetArn: {},\n          DataSource: {\n            shape: 'S19'\n          },\n          TimestampFormat: {},\n          TimeZone: {},\n          UseGeolocationForTimeZone: {\n            type: 'boolean'\n          },\n          GeolocationFormat: {},\n          Tags: {\n            shape: 'Sm'\n          },\n          Format: {},\n          ImportMode: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetImportJobArn: {}\n        }\n      }\n    },\n    CreateExplainability: {\n      input: {\n        type: 'structure',\n        required: [\n          'ExplainabilityName',\n          'ResourceArn',\n          'ExplainabilityConfig'\n        ],\n        members: {\n          ExplainabilityName: {},\n          ResourceArn: {},\n          ExplainabilityConfig: {\n            shape: 'S1k'\n          },\n          DataSource: {\n            shape: 'S19'\n          },\n          Schema: {\n            shape: 'S10'\n          },\n          EnableVisualization: {\n            type: 'boolean'\n          },\n          StartDateTime: {},\n          EndDateTime: {},\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ExplainabilityArn: {}\n        }\n      }\n    },\n    CreateExplainabilityExport: {\n      input: {\n        type: 'structure',\n        required: [\n          'ExplainabilityExportName',\n          'ExplainabilityArn',\n          'Destination'\n        ],\n        members: {\n          ExplainabilityExportName: {},\n          ExplainabilityArn: {},\n          Destination: {\n            shape: 'S1q'\n          },\n          Tags: {\n            shape: 'Sm'\n          },\n          Format: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ExplainabilityExportArn: {}\n        }\n      }\n    },\n    CreateForecast: {\n      input: {\n        type: 'structure',\n        required: [\n          'ForecastName',\n          'PredictorArn'\n        ],\n        members: {\n          ForecastName: {},\n          PredictorArn: {},\n          ForecastTypes: {\n            shape: 'S4'\n          },\n          Tags: {\n            shape: 'Sm'\n          },\n          TimeSeriesSelector: {\n            shape: 'S1t'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ForecastArn: {}\n        }\n      }\n    },\n    CreateForecastExportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'ForecastExportJobName',\n          'ForecastArn',\n          'Destination'\n        ],\n        members: {\n          ForecastExportJobName: {},\n          ForecastArn: {},\n          Destination: {\n            shape: 'S1q'\n          },\n          Tags: {\n            shape: 'Sm'\n          },\n          Format: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ForecastExportJobArn: {}\n        }\n      }\n    },\n    CreateMonitor: {\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorName',\n          'ResourceArn'\n        ],\n        members: {\n          MonitorName: {},\n          ResourceArn: {},\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MonitorArn: {}\n        }\n      }\n    },\n    CreatePredictor: {\n      input: {\n        type: 'structure',\n        required: [\n          'PredictorName',\n          'ForecastHorizon',\n          'InputDataConfig',\n          'FeaturizationConfig'\n        ],\n        members: {\n          PredictorName: {},\n          AlgorithmArn: {},\n          ForecastHorizon: {\n            type: 'integer'\n          },\n          ForecastTypes: {\n            shape: 'S4'\n          },\n          PerformAutoML: {\n            type: 'boolean'\n          },\n          AutoMLOverrideStrategy: {},\n          PerformHPO: {\n            type: 'boolean'\n          },\n          TrainingParameters: {\n            shape: 'S22'\n          },\n          EvaluationParameters: {\n            shape: 'S25'\n          },\n          HPOConfig: {\n            shape: 'S26'\n          },\n          InputDataConfig: {\n            shape: 'S2g'\n          },\n          FeaturizationConfig: {\n            shape: 'S2j'\n          },\n          EncryptionConfig: {\n            shape: 'Si'\n          },\n          Tags: {\n            shape: 'Sm'\n          },\n          OptimizationMetric: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PredictorArn: {}\n        }\n      }\n    },\n    CreatePredictorBacktestExportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'PredictorBacktestExportJobName',\n          'PredictorArn',\n          'Destination'\n        ],\n        members: {\n          PredictorBacktestExportJobName: {},\n          PredictorArn: {},\n          Destination: {\n            shape: 'S1q'\n          },\n          Tags: {\n            shape: 'Sm'\n          },\n          Format: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PredictorBacktestExportJobArn: {}\n        }\n      }\n    },\n    CreateWhatIfAnalysis: {\n      input: {\n        type: 'structure',\n        required: [\n          'WhatIfAnalysisName',\n          'ForecastArn'\n        ],\n        members: {\n          WhatIfAnalysisName: {},\n          ForecastArn: {},\n          TimeSeriesSelector: {\n            shape: 'S1t'\n          },\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WhatIfAnalysisArn: {}\n        }\n      }\n    },\n    CreateWhatIfForecast: {\n      input: {\n        type: 'structure',\n        required: [\n          'WhatIfForecastName',\n          'WhatIfAnalysisArn'\n        ],\n        members: {\n          WhatIfForecastName: {},\n          WhatIfAnalysisArn: {},\n          TimeSeriesTransformations: {\n            shape: 'S2w'\n          },\n          TimeSeriesReplacementsDataSource: {\n            shape: 'S34'\n          },\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WhatIfForecastArn: {}\n        }\n      }\n    },\n    CreateWhatIfForecastExport: {\n      input: {\n        type: 'structure',\n        required: [\n          'WhatIfForecastExportName',\n          'WhatIfForecastArns',\n          'Destination'\n        ],\n        members: {\n          WhatIfForecastExportName: {},\n          WhatIfForecastArns: {\n            shape: 'S38'\n          },\n          Destination: {\n            shape: 'S1q'\n          },\n          Tags: {\n            shape: 'Sm'\n          },\n          Format: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WhatIfForecastExportArn: {}\n        }\n      }\n    },\n    DeleteDataset: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatasetArn'\n        ],\n        members: {\n          DatasetArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteDatasetGroup: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatasetGroupArn'\n        ],\n        members: {\n          DatasetGroupArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteDatasetImportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatasetImportJobArn'\n        ],\n        members: {\n          DatasetImportJobArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteExplainability: {\n      input: {\n        type: 'structure',\n        required: [\n          'ExplainabilityArn'\n        ],\n        members: {\n          ExplainabilityArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteExplainabilityExport: {\n      input: {\n        type: 'structure',\n        required: [\n          'ExplainabilityExportArn'\n        ],\n        members: {\n          ExplainabilityExportArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteForecast: {\n      input: {\n        type: 'structure',\n        required: [\n          'ForecastArn'\n        ],\n        members: {\n          ForecastArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteForecastExportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'ForecastExportJobArn'\n        ],\n        members: {\n          ForecastExportJobArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteMonitor: {\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorArn'\n        ],\n        members: {\n          MonitorArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeletePredictor: {\n      input: {\n        type: 'structure',\n        required: [\n          'PredictorArn'\n        ],\n        members: {\n          PredictorArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeletePredictorBacktestExportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'PredictorBacktestExportJobArn'\n        ],\n        members: {\n          PredictorBacktestExportJobArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteResourceTree: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteWhatIfAnalysis: {\n      input: {\n        type: 'structure',\n        required: [\n          'WhatIfAnalysisArn'\n        ],\n        members: {\n          WhatIfAnalysisArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteWhatIfForecast: {\n      input: {\n        type: 'structure',\n        required: [\n          'WhatIfForecastArn'\n        ],\n        members: {\n          WhatIfForecastArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteWhatIfForecastExport: {\n      input: {\n        type: 'structure',\n        required: [\n          'WhatIfForecastExportArn'\n        ],\n        members: {\n          WhatIfForecastExportArn: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeAutoPredictor: {\n      input: {\n        type: 'structure',\n        required: [\n          'PredictorArn'\n        ],\n        members: {\n          PredictorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PredictorArn: {},\n          PredictorName: {},\n          ForecastHorizon: {\n            type: 'integer'\n          },\n          ForecastTypes: {\n            shape: 'S4'\n          },\n          ForecastFrequency: {},\n          ForecastDimensions: {\n            shape: 'S6'\n          },\n          DatasetImportJobArns: {\n            shape: 'S16'\n          },\n          DataConfig: {\n            shape: 'S8'\n          },\n          EncryptionConfig: {\n            shape: 'Si'\n          },\n          ReferencePredictorSummary: {\n            shape: 'S3q'\n          },\n          EstimatedTimeRemainingInMinutes: {\n            type: 'long'\n          },\n          Status: {},\n          Message: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          OptimizationMetric: {},\n          ExplainabilityInfo: {\n            type: 'structure',\n            members: {\n              ExplainabilityArn: {},\n              Status: {}\n            }\n          },\n          MonitorInfo: {\n            type: 'structure',\n            members: {\n              MonitorArn: {},\n              Status: {}\n            }\n          },\n          TimeAlignmentBoundary: {\n            shape: 'Sr'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeDataset: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatasetArn'\n        ],\n        members: {\n          DatasetArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetArn: {},\n          DatasetName: {},\n          Domain: {},\n          DatasetType: {},\n          DataFrequency: {},\n          Schema: {\n            shape: 'S10'\n          },\n          EncryptionConfig: {\n            shape: 'Si'\n          },\n          Status: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeDatasetGroup: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatasetGroupArn'\n        ],\n        members: {\n          DatasetGroupArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetGroupName: {},\n          DatasetGroupArn: {},\n          DatasetArns: {\n            shape: 'S16'\n          },\n          Domain: {},\n          Status: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeDatasetImportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatasetImportJobArn'\n        ],\n        members: {\n          DatasetImportJobArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetImportJobName: {},\n          DatasetImportJobArn: {},\n          DatasetArn: {},\n          TimestampFormat: {},\n          TimeZone: {},\n          UseGeolocationForTimeZone: {\n            type: 'boolean'\n          },\n          GeolocationFormat: {},\n          DataSource: {\n            shape: 'S19'\n          },\n          EstimatedTimeRemainingInMinutes: {\n            type: 'long'\n          },\n          FieldStatistics: {\n            type: 'map',\n            key: {},\n            value: {\n              type: 'structure',\n              members: {\n                Count: {\n                  type: 'integer'\n                },\n                CountDistinct: {\n                  type: 'integer'\n                },\n                CountNull: {\n                  type: 'integer'\n                },\n                CountNan: {\n                  type: 'integer'\n                },\n                Min: {},\n                Max: {},\n                Avg: {\n                  type: 'double'\n                },\n                Stddev: {\n                  type: 'double'\n                },\n                CountLong: {\n                  type: 'long'\n                },\n                CountDistinctLong: {\n                  type: 'long'\n                },\n                CountNullLong: {\n                  type: 'long'\n                },\n                CountNanLong: {\n                  type: 'long'\n                }\n              }\n            }\n          },\n          DataSize: {\n            type: 'double'\n          },\n          Status: {},\n          Message: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          Format: {},\n          ImportMode: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeExplainability: {\n      input: {\n        type: 'structure',\n        required: [\n          'ExplainabilityArn'\n        ],\n        members: {\n          ExplainabilityArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ExplainabilityArn: {},\n          ExplainabilityName: {},\n          ResourceArn: {},\n          ExplainabilityConfig: {\n            shape: 'S1k'\n          },\n          EnableVisualization: {\n            type: 'boolean'\n          },\n          DataSource: {\n            shape: 'S19'\n          },\n          Schema: {\n            shape: 'S10'\n          },\n          StartDateTime: {},\n          EndDateTime: {},\n          EstimatedTimeRemainingInMinutes: {\n            type: 'long'\n          },\n          Message: {},\n          Status: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeExplainabilityExport: {\n      input: {\n        type: 'structure',\n        required: [\n          'ExplainabilityExportArn'\n        ],\n        members: {\n          ExplainabilityExportArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ExplainabilityExportArn: {},\n          ExplainabilityExportName: {},\n          ExplainabilityArn: {},\n          Destination: {\n            shape: 'S1q'\n          },\n          Message: {},\n          Status: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          Format: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeForecast: {\n      input: {\n        type: 'structure',\n        required: [\n          'ForecastArn'\n        ],\n        members: {\n          ForecastArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ForecastArn: {},\n          ForecastName: {},\n          ForecastTypes: {\n            shape: 'S4'\n          },\n          PredictorArn: {},\n          DatasetGroupArn: {},\n          EstimatedTimeRemainingInMinutes: {\n            type: 'long'\n          },\n          Status: {},\n          Message: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          TimeSeriesSelector: {\n            shape: 'S1t'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeForecastExportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'ForecastExportJobArn'\n        ],\n        members: {\n          ForecastExportJobArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ForecastExportJobArn: {},\n          ForecastExportJobName: {},\n          ForecastArn: {},\n          Destination: {\n            shape: 'S1q'\n          },\n          Message: {},\n          Status: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          Format: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeMonitor: {\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorArn'\n        ],\n        members: {\n          MonitorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MonitorName: {},\n          MonitorArn: {},\n          ResourceArn: {},\n          Status: {},\n          LastEvaluationTime: {\n            type: 'timestamp'\n          },\n          LastEvaluationState: {},\n          Baseline: {\n            type: 'structure',\n            members: {\n              PredictorBaseline: {\n                type: 'structure',\n                members: {\n                  BaselineMetrics: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      members: {\n                        Name: {},\n                        Value: {\n                          type: 'double'\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          Message: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          EstimatedEvaluationTimeRemainingInMinutes: {\n            type: 'long'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribePredictor: {\n      input: {\n        type: 'structure',\n        required: [\n          'PredictorArn'\n        ],\n        members: {\n          PredictorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PredictorArn: {},\n          PredictorName: {},\n          AlgorithmArn: {},\n          AutoMLAlgorithmArns: {\n            shape: 'S16'\n          },\n          ForecastHorizon: {\n            type: 'integer'\n          },\n          ForecastTypes: {\n            shape: 'S4'\n          },\n          PerformAutoML: {\n            type: 'boolean'\n          },\n          AutoMLOverrideStrategy: {},\n          PerformHPO: {\n            type: 'boolean'\n          },\n          TrainingParameters: {\n            shape: 'S22'\n          },\n          EvaluationParameters: {\n            shape: 'S25'\n          },\n          HPOConfig: {\n            shape: 'S26'\n          },\n          InputDataConfig: {\n            shape: 'S2g'\n          },\n          FeaturizationConfig: {\n            shape: 'S2j'\n          },\n          EncryptionConfig: {\n            shape: 'Si'\n          },\n          PredictorExecutionDetails: {\n            type: 'structure',\n            members: {\n              PredictorExecutions: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    AlgorithmArn: {},\n                    TestWindows: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          TestWindowStart: {\n                            type: 'timestamp'\n                          },\n                          TestWindowEnd: {\n                            type: 'timestamp'\n                          },\n                          Status: {},\n                          Message: {}\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          EstimatedTimeRemainingInMinutes: {\n            type: 'long'\n          },\n          IsAutoPredictor: {\n            type: 'boolean'\n          },\n          DatasetImportJobArns: {\n            shape: 'S16'\n          },\n          Status: {},\n          Message: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          OptimizationMetric: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribePredictorBacktestExportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'PredictorBacktestExportJobArn'\n        ],\n        members: {\n          PredictorBacktestExportJobArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PredictorBacktestExportJobArn: {},\n          PredictorBacktestExportJobName: {},\n          PredictorArn: {},\n          Destination: {\n            shape: 'S1q'\n          },\n          Message: {},\n          Status: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          Format: {}\n        }\n      },\n      idempotent: true\n    },\n    DescribeWhatIfAnalysis: {\n      input: {\n        type: 'structure',\n        required: [\n          'WhatIfAnalysisArn'\n        ],\n        members: {\n          WhatIfAnalysisArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WhatIfAnalysisName: {},\n          WhatIfAnalysisArn: {},\n          ForecastArn: {},\n          EstimatedTimeRemainingInMinutes: {\n            type: 'long'\n          },\n          Status: {},\n          Message: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          TimeSeriesSelector: {\n            shape: 'S1t'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeWhatIfForecast: {\n      input: {\n        type: 'structure',\n        required: [\n          'WhatIfForecastArn'\n        ],\n        members: {\n          WhatIfForecastArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WhatIfForecastName: {},\n          WhatIfForecastArn: {},\n          WhatIfAnalysisArn: {},\n          EstimatedTimeRemainingInMinutes: {\n            type: 'long'\n          },\n          Status: {},\n          Message: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          TimeSeriesTransformations: {\n            shape: 'S2w'\n          },\n          TimeSeriesReplacementsDataSource: {\n            shape: 'S34'\n          },\n          ForecastTypes: {\n            shape: 'S4'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeWhatIfForecastExport: {\n      input: {\n        type: 'structure',\n        required: [\n          'WhatIfForecastExportArn'\n        ],\n        members: {\n          WhatIfForecastExportArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WhatIfForecastExportArn: {},\n          WhatIfForecastExportName: {},\n          WhatIfForecastArns: {\n            type: 'list',\n            member: {}\n          },\n          Destination: {\n            shape: 'S1q'\n          },\n          Message: {},\n          Status: {},\n          CreationTime: {\n            type: 'timestamp'\n          },\n          EstimatedTimeRemainingInMinutes: {\n            type: 'long'\n          },\n          LastModificationTime: {\n            type: 'timestamp'\n          },\n          Format: {}\n        }\n      },\n      idempotent: true\n    },\n    GetAccuracyMetrics: {\n      input: {\n        type: 'structure',\n        required: [\n          'PredictorArn'\n        ],\n        members: {\n          PredictorArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PredictorEvaluationResults: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AlgorithmArn: {},\n                TestWindows: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      TestWindowStart: {\n                        type: 'timestamp'\n                      },\n                      TestWindowEnd: {\n                        type: 'timestamp'\n                      },\n                      ItemCount: {\n                        type: 'integer'\n                      },\n                      EvaluationType: {},\n                      Metrics: {\n                        type: 'structure',\n                        members: {\n                          RMSE: {\n                            deprecated: true,\n                            deprecatedMessage: 'This property is deprecated, please refer to ErrorMetrics for both RMSE and WAPE',\n                            type: 'double'\n                          },\n                          WeightedQuantileLosses: {\n                            type: 'list',\n                            member: {\n                              type: 'structure',\n                              members: {\n                                Quantile: {\n                                  type: 'double'\n                                },\n                                LossValue: {\n                                  type: 'double'\n                                }\n                              }\n                            }\n                          },\n                          ErrorMetrics: {\n                            type: 'list',\n                            member: {\n                              type: 'structure',\n                              members: {\n                                ForecastType: {},\n                                WAPE: {\n                                  type: 'double'\n                                },\n                                RMSE: {\n                                  type: 'double'\n                                },\n                                MASE: {\n                                  type: 'double'\n                                },\n                                MAPE: {\n                                  type: 'double'\n                                }\n                              }\n                            }\n                          },\n                          AverageWeightedQuantileLoss: {\n                            type: 'double'\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          IsAutoPredictor: {\n            type: 'boolean'\n          },\n          AutoMLOverrideStrategy: {},\n          OptimizationMetric: {}\n        }\n      },\n      idempotent: true\n    },\n    ListDatasetGroups: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetGroups: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DatasetGroupArn: {},\n                DatasetGroupName: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListDatasetImportJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetImportJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DatasetImportJobArn: {},\n                DatasetImportJobName: {},\n                DataSource: {\n                  shape: 'S19'\n                },\n                Status: {},\n                Message: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                },\n                ImportMode: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListDatasets: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Datasets: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DatasetArn: {},\n                DatasetName: {},\n                DatasetType: {},\n                Domain: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListExplainabilities: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Explainabilities: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ExplainabilityArn: {},\n                ExplainabilityName: {},\n                ResourceArn: {},\n                ExplainabilityConfig: {\n                  shape: 'S1k'\n                },\n                Status: {},\n                Message: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListExplainabilityExports: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ExplainabilityExports: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ExplainabilityExportArn: {},\n                ExplainabilityExportName: {},\n                Destination: {\n                  shape: 'S1q'\n                },\n                Status: {},\n                Message: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListForecastExportJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ForecastExportJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ForecastExportJobArn: {},\n                ForecastExportJobName: {},\n                Destination: {\n                  shape: 'S1q'\n                },\n                Status: {},\n                Message: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListForecasts: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Forecasts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ForecastArn: {},\n                ForecastName: {},\n                PredictorArn: {},\n                CreatedUsingAutoPredictor: {\n                  type: 'boolean'\n                },\n                DatasetGroupArn: {},\n                Status: {},\n                Message: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListMonitorEvaluations: {\n      input: {\n        type: 'structure',\n        required: [\n          'MonitorArn'\n        ],\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          MonitorArn: {},\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          PredictorMonitorEvaluations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ResourceArn: {},\n                MonitorArn: {},\n                EvaluationTime: {\n                  type: 'timestamp'\n                },\n                EvaluationState: {},\n                WindowStartDatetime: {\n                  type: 'timestamp'\n                },\n                WindowEndDatetime: {\n                  type: 'timestamp'\n                },\n                PredictorEvent: {\n                  type: 'structure',\n                  members: {\n                    Detail: {},\n                    Datetime: {\n                      type: 'timestamp'\n                    }\n                  }\n                },\n                MonitorDataSource: {\n                  type: 'structure',\n                  members: {\n                    DatasetImportJobArn: {},\n                    ForecastArn: {},\n                    PredictorArn: {}\n                  }\n                },\n                MetricResults: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      MetricName: {},\n                      MetricValue: {\n                        type: 'double'\n                      }\n                    }\n                  }\n                },\n                NumItemsEvaluated: {\n                  type: 'long'\n                },\n                Message: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListMonitors: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Monitors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                MonitorArn: {},\n                MonitorName: {},\n                ResourceArn: {},\n                Status: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListPredictorBacktestExportJobs: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PredictorBacktestExportJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                PredictorBacktestExportJobArn: {},\n                PredictorBacktestExportJobName: {},\n                Destination: {\n                  shape: 'S1q'\n                },\n                Status: {},\n                Message: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListPredictors: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Predictors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                PredictorArn: {},\n                PredictorName: {},\n                DatasetGroupArn: {},\n                IsAutoPredictor: {\n                  type: 'boolean'\n                },\n                ReferencePredictorSummary: {\n                  shape: 'S3q'\n                },\n                Status: {},\n                Message: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      }\n    },\n    ListWhatIfAnalyses: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WhatIfAnalyses: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                WhatIfAnalysisArn: {},\n                WhatIfAnalysisName: {},\n                ForecastArn: {},\n                Status: {},\n                Message: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListWhatIfForecastExports: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WhatIfForecastExports: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                WhatIfForecastExportArn: {},\n                WhatIfForecastArns: {\n                  shape: 'S38'\n                },\n                WhatIfForecastExportName: {},\n                Destination: {\n                  shape: 'S1q'\n                },\n                Status: {},\n                Message: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListWhatIfForecasts: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          Filters: {\n            shape: 'S5m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          WhatIfForecasts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                WhatIfForecastArn: {},\n                WhatIfForecastName: {},\n                WhatIfAnalysisArn: {},\n                Status: {},\n                Message: {},\n                CreationTime: {\n                  type: 'timestamp'\n                },\n                LastModificationTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ResumeResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {}\n        }\n      },\n      idempotent: true\n    },\n    StopResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {}\n        }\n      },\n      idempotent: true\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {},\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {},\n          TagKeys: {\n            type: 'list',\n            member: {\n              shape: 'So'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateDatasetGroup: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatasetGroupArn',\n          'DatasetArns'\n        ],\n        members: {\n          DatasetGroupArn: {},\n          DatasetArns: {\n            shape: 'S16'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'list',\n      member: {}\n    },\n    S6: {\n      type: 'list',\n      member: {}\n    },\n    S8: {\n      type: 'structure',\n      required: [\n        'DatasetGroupArn'\n      ],\n      members: {\n        DatasetGroupArn: {},\n        AttributeConfigs: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'AttributeName',\n              'Transformations'\n            ],\n            members: {\n              AttributeName: {},\n              Transformations: {\n                type: 'map',\n                key: {},\n                value: {}\n              }\n            }\n          }\n        },\n        AdditionalDatasets: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'Name'\n            ],\n            members: {\n              Name: {},\n              Configuration: {\n                type: 'map',\n                key: {},\n                value: {\n                  shape: 'Sh'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    Sh: {\n      type: 'list',\n      member: {}\n    },\n    Si: {\n      type: 'structure',\n      required: [\n        'RoleArn',\n        'KMSKeyArn'\n      ],\n      members: {\n        RoleArn: {},\n        KMSKeyArn: {}\n      }\n    },\n    Sm: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {\n            shape: 'So'\n          },\n          Value: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      }\n    },\n    So: {\n      type: 'string',\n      sensitive: true\n    },\n    Sr: {\n      type: 'structure',\n      members: {\n        Month: {},\n        DayOfMonth: {\n          type: 'integer'\n        },\n        DayOfWeek: {},\n        Hour: {\n          type: 'integer'\n        }\n      }\n    },\n    S10: {\n      type: 'structure',\n      members: {\n        Attributes: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              AttributeName: {},\n              AttributeType: {}\n            }\n          }\n        }\n      }\n    },\n    S16: {\n      type: 'list',\n      member: {}\n    },\n    S19: {\n      type: 'structure',\n      required: [\n        'S3Config'\n      ],\n      members: {\n        S3Config: {\n          shape: 'S1a'\n        }\n      }\n    },\n    S1a: {\n      type: 'structure',\n      required: [\n        'Path',\n        'RoleArn'\n      ],\n      members: {\n        Path: {},\n        RoleArn: {},\n        KMSKeyArn: {}\n      }\n    },\n    S1k: {\n      type: 'structure',\n      required: [\n        'TimeSeriesGranularity',\n        'TimePointGranularity'\n      ],\n      members: {\n        TimeSeriesGranularity: {},\n        TimePointGranularity: {}\n      }\n    },\n    S1q: {\n      type: 'structure',\n      required: [\n        'S3Config'\n      ],\n      members: {\n        S3Config: {\n          shape: 'S1a'\n        }\n      }\n    },\n    S1t: {\n      type: 'structure',\n      members: {\n        TimeSeriesIdentifiers: {\n          type: 'structure',\n          members: {\n            DataSource: {\n              shape: 'S19'\n            },\n            Schema: {\n              shape: 'S10'\n            },\n            Format: {}\n          }\n        }\n      }\n    },\n    S22: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S25: {\n      type: 'structure',\n      members: {\n        NumberOfBacktestWindows: {\n          type: 'integer'\n        },\n        BackTestWindowOffset: {\n          type: 'integer'\n        }\n      }\n    },\n    S26: {\n      type: 'structure',\n      members: {\n        ParameterRanges: {\n          type: 'structure',\n          members: {\n            CategoricalParameterRanges: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                required: [\n                  'Name',\n                  'Values'\n                ],\n                members: {\n                  Name: {},\n                  Values: {\n                    shape: 'Sh'\n                  }\n                }\n              }\n            },\n            ContinuousParameterRanges: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                required: [\n                  'Name',\n                  'MaxValue',\n                  'MinValue'\n                ],\n                members: {\n                  Name: {},\n                  MaxValue: {\n                    type: 'double'\n                  },\n                  MinValue: {\n                    type: 'double'\n                  },\n                  ScalingType: {}\n                }\n              }\n            },\n            IntegerParameterRanges: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                required: [\n                  'Name',\n                  'MaxValue',\n                  'MinValue'\n                ],\n                members: {\n                  Name: {},\n                  MaxValue: {\n                    type: 'integer'\n                  },\n                  MinValue: {\n                    type: 'integer'\n                  },\n                  ScalingType: {}\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S2g: {\n      type: 'structure',\n      required: [\n        'DatasetGroupArn'\n      ],\n      members: {\n        DatasetGroupArn: {},\n        SupplementaryFeatures: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'Name',\n              'Value'\n            ],\n            members: {\n              Name: {},\n              Value: {}\n            }\n          }\n        }\n      }\n    },\n    S2j: {\n      type: 'structure',\n      required: [\n        'ForecastFrequency'\n      ],\n      members: {\n        ForecastFrequency: {},\n        ForecastDimensions: {\n          shape: 'S6'\n        },\n        Featurizations: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'AttributeName'\n            ],\n            members: {\n              AttributeName: {},\n              FeaturizationPipeline: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'FeaturizationMethodName'\n                  ],\n                  members: {\n                    FeaturizationMethodName: {},\n                    FeaturizationMethodParameters: {\n                      type: 'map',\n                      key: {},\n                      value: {}\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S2w: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Action: {\n            type: 'structure',\n            required: [\n              'AttributeName',\n              'Operation',\n              'Value'\n            ],\n            members: {\n              AttributeName: {},\n              Operation: {},\n              Value: {\n                type: 'double'\n              }\n            }\n          },\n          TimeSeriesConditions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'AttributeName',\n                'AttributeValue',\n                'Condition'\n              ],\n              members: {\n                AttributeName: {},\n                AttributeValue: {},\n                Condition: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    S34: {\n      type: 'structure',\n      required: [\n        'S3Config',\n        'Schema'\n      ],\n      members: {\n        S3Config: {\n          shape: 'S1a'\n        },\n        Schema: {\n          shape: 'S10'\n        },\n        Format: {},\n        TimestampFormat: {}\n      }\n    },\n    S38: {\n      type: 'list',\n      member: {}\n    },\n    S3q: {\n      type: 'structure',\n      members: {\n        Arn: {},\n        State: {}\n      }\n    },\n    S5m: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value',\n          'Condition'\n        ],\n        members: {\n          Key: {},\n          Value: {},\n          Condition: {}\n        }\n      }\n    }\n  }\n}"]}