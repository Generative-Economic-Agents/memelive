{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_charsStartIndex.js"],"names":["charsStartIndex","strSymbols","chrSymbols","index","length","baseIndexOf"],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,eAAT,CAAyBC,UAAzB,EAAqCC,UAArC,EAAiD;AAC/C,QAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,QACIC,MAAM,GAAGH,UAAU,CAACG,MADxB;;AAGA,WAAO,EAAED,KAAF,GAAUC,MAAV,IAAoBC,WAAW,CAACH,UAAD,EAAaD,UAAU,CAACE,KAAD,CAAvB,EAAgC,CAAhC,CAAX,GAAgD,CAAC,CAA5E,EAA+E,CAAE;;AACjF,WAAOA,KAAP;AACD;;;;AAjBME,MAAAA,W;;;yBAmBQL,e","sourcesContent":["import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nexport default charsStartIndex;\n"]}