{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/account-2021-02-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","AcceptPrimaryEmailUpdate","http","requestUri","responseCode","input","type","required","members","AccountId","Otp","sensitive","PrimaryEmail","shape","output","Status","DeleteAlternateContact","AlternateContactType","idempotent","DisableRegion","RegionName","EnableRegion","GetAlternateContact","AlternateContact","EmailAddress","Name","PhoneNumber","Title","GetContactInformation","ContactInformation","GetPrimaryEmail","GetRegionOptStatus","RegionOptStatus","ListRegions","MaxResults","NextToken","RegionOptStatusContains","member","Regions","PutAlternateContact","PutContactInformation","StartPrimaryEmailUpdate","shapes","S4","Sf","Sg","Sh","Si","Sl","AddressLine1","AddressLine2","AddressLine3","City","CompanyName","CountryCode","DistrictOrCounty","FullName","PostalCode","StateOrRegion","WebsiteUrl","Sm"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,SAFR;AAGRC,UAAAA,WAAW,EAAE,KAHL;AAIRC,UAAAA,QAAQ,EAAE,WAJF;AAKRC,UAAAA,eAAe,EAAE,aALT;AAMRC,UAAAA,SAAS,EAAE,SANH;AAORC,UAAAA,gBAAgB,EAAE,IAPV;AAQRC,UAAAA,WAAW,EAAE,SARL;AASRC,UAAAA,GAAG,EAAE;AATG,SAFG;AAabC,QAAAA,UAAU,EAAE;AACVC,UAAAA,wBAAwB,EAAE;AACxBC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,2BADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADkB;AAKxBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,KAFQ,EAGR,cAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE,EADJ;AAEPC,gBAAAA,GAAG,EAAE;AACHJ,kBAAAA,IAAI,EAAE,QADH;AAEHK,kBAAAA,SAAS,EAAE;AAFR,iBAFE;AAMPC,gBAAAA,YAAY,EAAE;AACZC,kBAAAA,KAAK,EAAE;AADK;AANP;AAPJ,aALiB;AAuBxBC,YAAAA,MAAM,EAAE;AACNR,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPO,gBAAAA,MAAM,EAAE;AADD;AAFH;AAvBgB,WADhB;AA+BVC,UAAAA,sBAAsB,EAAE;AACtBd,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,yBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADgB;AAKtBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,sBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE,EADJ;AAEPQ,gBAAAA,oBAAoB,EAAE;AAFf;AALJ,aALe;AAetBC,YAAAA,UAAU,EAAE;AAfU,WA/Bd;AAgDVC,UAAAA,aAAa,EAAE;AACbjB,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,gBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADO;AAKbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE,EADJ;AAEPW,gBAAAA,UAAU,EAAE;AAFL;AALJ;AALM,WAhDL;AAgEVC,UAAAA,YAAY,EAAE;AACZnB,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,eADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADM;AAKZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE,EADJ;AAEPW,gBAAAA,UAAU,EAAE;AAFL;AALJ;AALK,WAhEJ;AAgFVE,UAAAA,mBAAmB,EAAE;AACnBpB,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,sBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADa;AAKnBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,sBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE,EADJ;AAEPQ,gBAAAA,oBAAoB,EAAE;AAFf;AALJ,aALY;AAenBH,YAAAA,MAAM,EAAE;AACNR,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPe,gBAAAA,gBAAgB,EAAE;AAChBjB,kBAAAA,IAAI,EAAE,WADU;AAEhBE,kBAAAA,OAAO,EAAE;AACPS,oBAAAA,oBAAoB,EAAE,EADf;AAEPO,oBAAAA,YAAY,EAAE;AACZX,sBAAAA,KAAK,EAAE;AADK,qBAFP;AAKPY,oBAAAA,IAAI,EAAE;AACJZ,sBAAAA,KAAK,EAAE;AADH,qBALC;AAQPa,oBAAAA,WAAW,EAAE;AACXb,sBAAAA,KAAK,EAAE;AADI,qBARN;AAWPc,oBAAAA,KAAK,EAAE;AACLd,sBAAAA,KAAK,EAAE;AADF;AAXA;AAFO;AADX;AAFH;AAfW,WAhFX;AAuHVe,UAAAA,qBAAqB,EAAE;AACrB1B,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,wBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADe;AAKrBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE;AADJ;AAFJ,aALc;AAWrBK,YAAAA,MAAM,EAAE;AACNR,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPqB,gBAAAA,kBAAkB,EAAE;AAClBhB,kBAAAA,KAAK,EAAE;AADW;AADb;AAFH;AAXa,WAvHb;AA2IViB,UAAAA,eAAe,EAAE;AACf5B,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,kBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADS;AAKfC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE;AADJ;AALJ,aALQ;AAcfK,YAAAA,MAAM,EAAE;AACNR,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPI,gBAAAA,YAAY,EAAE;AACZC,kBAAAA,KAAK,EAAE;AADK;AADP;AAFH;AAdO,WA3IP;AAkKVkB,UAAAA,kBAAkB,EAAE;AAClB7B,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,qBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADY;AAKlBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,YADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE,EADJ;AAEPW,gBAAAA,UAAU,EAAE;AAFL;AALJ,aALW;AAelBN,YAAAA,MAAM,EAAE;AACNR,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPY,gBAAAA,UAAU,EAAE,EADL;AAEPY,gBAAAA,eAAe,EAAE;AAFV;AAFH;AAfU,WAlKV;AAyLVC,UAAAA,WAAW,EAAE;AACX/B,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,cADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE,EADJ;AAEPyB,gBAAAA,UAAU,EAAE;AACV5B,kBAAAA,IAAI,EAAE;AADI,iBAFL;AAKP6B,gBAAAA,SAAS,EAAE,EALJ;AAMPC,gBAAAA,uBAAuB,EAAE;AACvB9B,kBAAAA,IAAI,EAAE,MADiB;AAEvB+B,kBAAAA,MAAM,EAAE;AAFe;AANlB;AAFJ,aALI;AAmBXvB,YAAAA,MAAM,EAAE;AACNR,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP2B,gBAAAA,SAAS,EAAE,EADJ;AAEPG,gBAAAA,OAAO,EAAE;AACPhC,kBAAAA,IAAI,EAAE,MADC;AAEP+B,kBAAAA,MAAM,EAAE;AACN/B,oBAAAA,IAAI,EAAE,WADA;AAENE,oBAAAA,OAAO,EAAE;AACPY,sBAAAA,UAAU,EAAE,EADL;AAEPY,sBAAAA,eAAe,EAAE;AAFV;AAFH;AAFD;AAFF;AAFH;AAnBG,WAzLH;AA6NVO,UAAAA,mBAAmB,EAAE;AACnBrC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,sBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADa;AAKnBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,sBADQ,EAER,cAFQ,EAGR,MAHQ,EAIR,aAJQ,EAKR,OALQ,CAFL;AASLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE,EADJ;AAEPQ,gBAAAA,oBAAoB,EAAE,EAFf;AAGPO,gBAAAA,YAAY,EAAE;AACZX,kBAAAA,KAAK,EAAE;AADK,iBAHP;AAMPY,gBAAAA,IAAI,EAAE;AACJZ,kBAAAA,KAAK,EAAE;AADH,iBANC;AASPa,gBAAAA,WAAW,EAAE;AACXb,kBAAAA,KAAK,EAAE;AADI,iBATN;AAYPc,gBAAAA,KAAK,EAAE;AACLd,kBAAAA,KAAK,EAAE;AADF;AAZA;AATJ,aALY;AA+BnBK,YAAAA,UAAU,EAAE;AA/BO,WA7NX;AA8PVsB,UAAAA,qBAAqB,EAAE;AACrBtC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,wBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADe;AAKrBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,oBADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE,EADJ;AAEPoB,gBAAAA,kBAAkB,EAAE;AAClBhB,kBAAAA,KAAK,EAAE;AADW;AAFb;AALJ,aALc;AAiBrBK,YAAAA,UAAU,EAAE;AAjBS,WA9Pb;AAiRVuB,UAAAA,uBAAuB,EAAE;AACvBvC,YAAAA,IAAI,EAAE;AACJC,cAAAA,UAAU,EAAE,0BADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADiB;AAKvBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,WADQ,EAER,cAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,SAAS,EAAE,EADJ;AAEPG,gBAAAA,YAAY,EAAE;AACZC,kBAAAA,KAAK,EAAE;AADK;AAFP;AANJ,aALgB;AAkBvBC,YAAAA,MAAM,EAAE;AACNR,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPO,gBAAAA,MAAM,EAAE;AADD;AAFH;AAlBe;AAjRf,SAbC;AAwTb2B,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACFrC,YAAAA,IAAI,EAAE,QADJ;AAEFK,YAAAA,SAAS,EAAE;AAFT,WADE;AAKNiC,UAAAA,EAAE,EAAE;AACFtC,YAAAA,IAAI,EAAE,QADJ;AAEFK,YAAAA,SAAS,EAAE;AAFT,WALE;AASNkC,UAAAA,EAAE,EAAE;AACFvC,YAAAA,IAAI,EAAE,QADJ;AAEFK,YAAAA,SAAS,EAAE;AAFT,WATE;AAaNmC,UAAAA,EAAE,EAAE;AACFxC,YAAAA,IAAI,EAAE,QADJ;AAEFK,YAAAA,SAAS,EAAE;AAFT,WAbE;AAiBNoC,UAAAA,EAAE,EAAE;AACFzC,YAAAA,IAAI,EAAE,QADJ;AAEFK,YAAAA,SAAS,EAAE;AAFT,WAjBE;AAqBNqC,UAAAA,EAAE,EAAE;AACF1C,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,cADQ,EAER,MAFQ,EAGR,aAHQ,EAIR,UAJQ,EAKR,aALQ,EAMR,YANQ,CAFR;AAUFC,YAAAA,OAAO,EAAE;AACPyC,cAAAA,YAAY,EAAE;AACZpC,gBAAAA,KAAK,EAAE;AADK,eADP;AAIPqC,cAAAA,YAAY,EAAE;AACZrC,gBAAAA,KAAK,EAAE;AADK,eAJP;AAOPsC,cAAAA,YAAY,EAAE;AACZtC,gBAAAA,KAAK,EAAE;AADK,eAPP;AAUPuC,cAAAA,IAAI,EAAE;AACJ9C,gBAAAA,IAAI,EAAE,QADF;AAEJK,gBAAAA,SAAS,EAAE;AAFP,eAVC;AAcP0C,cAAAA,WAAW,EAAE;AACX/C,gBAAAA,IAAI,EAAE,QADK;AAEXK,gBAAAA,SAAS,EAAE;AAFA,eAdN;AAkBP2C,cAAAA,WAAW,EAAE;AACXhD,gBAAAA,IAAI,EAAE,QADK;AAEXK,gBAAAA,SAAS,EAAE;AAFA,eAlBN;AAsBP4C,cAAAA,gBAAgB,EAAE;AAChBjD,gBAAAA,IAAI,EAAE,QADU;AAEhBK,gBAAAA,SAAS,EAAE;AAFK,eAtBX;AA0BP6C,cAAAA,QAAQ,EAAE;AACRlD,gBAAAA,IAAI,EAAE,QADE;AAERK,gBAAAA,SAAS,EAAE;AAFH,eA1BH;AA8BPe,cAAAA,WAAW,EAAE;AACXpB,gBAAAA,IAAI,EAAE,QADK;AAEXK,gBAAAA,SAAS,EAAE;AAFA,eA9BN;AAkCP8C,cAAAA,UAAU,EAAE;AACVnD,gBAAAA,IAAI,EAAE,QADI;AAEVK,gBAAAA,SAAS,EAAE;AAFD,eAlCL;AAsCP+C,cAAAA,aAAa,EAAE;AACbpD,gBAAAA,IAAI,EAAE,QADO;AAEbK,gBAAAA,SAAS,EAAE;AAFE,eAtCR;AA0CPgD,cAAAA,UAAU,EAAE;AACVrD,gBAAAA,IAAI,EAAE,QADI;AAEVK,gBAAAA,SAAS,EAAE;AAFD;AA1CL;AAVP,WArBE;AA+ENiD,UAAAA,EAAE,EAAE;AACFtD,YAAAA,IAAI,EAAE,QADJ;AAEFK,YAAAA,SAAS,EAAE;AAFT;AA/EE;AAxTK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-02-01',\n    endpointPrefix: 'account',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS Account',\n    serviceId: 'Account',\n    signatureVersion: 'v4',\n    signingName: 'account',\n    uid: 'account-2021-02-01'\n  },\n  operations: {\n    AcceptPrimaryEmailUpdate: {\n      http: {\n        requestUri: '/acceptPrimaryEmailUpdate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AccountId',\n          'Otp',\n          'PrimaryEmail'\n        ],\n        members: {\n          AccountId: {},\n          Otp: {\n            type: 'string',\n            sensitive: true\n          },\n          PrimaryEmail: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Status: {}\n        }\n      }\n    },\n    DeleteAlternateContact: {\n      http: {\n        requestUri: '/deleteAlternateContact',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AlternateContactType'\n        ],\n        members: {\n          AccountId: {},\n          AlternateContactType: {}\n        }\n      },\n      idempotent: true\n    },\n    DisableRegion: {\n      http: {\n        requestUri: '/disableRegion',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RegionName'\n        ],\n        members: {\n          AccountId: {},\n          RegionName: {}\n        }\n      }\n    },\n    EnableRegion: {\n      http: {\n        requestUri: '/enableRegion',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RegionName'\n        ],\n        members: {\n          AccountId: {},\n          RegionName: {}\n        }\n      }\n    },\n    GetAlternateContact: {\n      http: {\n        requestUri: '/getAlternateContact',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AlternateContactType'\n        ],\n        members: {\n          AccountId: {},\n          AlternateContactType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AlternateContact: {\n            type: 'structure',\n            members: {\n              AlternateContactType: {},\n              EmailAddress: {\n                shape: 'Sf'\n              },\n              Name: {\n                shape: 'Sg'\n              },\n              PhoneNumber: {\n                shape: 'Sh'\n              },\n              Title: {\n                shape: 'Si'\n              }\n            }\n          }\n        }\n      }\n    },\n    GetContactInformation: {\n      http: {\n        requestUri: '/getContactInformation',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AccountId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ContactInformation: {\n            shape: 'Sl'\n          }\n        }\n      }\n    },\n    GetPrimaryEmail: {\n      http: {\n        requestUri: '/getPrimaryEmail',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AccountId'\n        ],\n        members: {\n          AccountId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          PrimaryEmail: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    GetRegionOptStatus: {\n      http: {\n        requestUri: '/getRegionOptStatus',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'RegionName'\n        ],\n        members: {\n          AccountId: {},\n          RegionName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          RegionName: {},\n          RegionOptStatus: {}\n        }\n      }\n    },\n    ListRegions: {\n      http: {\n        requestUri: '/listRegions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AccountId: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          RegionOptStatusContains: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          Regions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                RegionName: {},\n                RegionOptStatus: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    PutAlternateContact: {\n      http: {\n        requestUri: '/putAlternateContact',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AlternateContactType',\n          'EmailAddress',\n          'Name',\n          'PhoneNumber',\n          'Title'\n        ],\n        members: {\n          AccountId: {},\n          AlternateContactType: {},\n          EmailAddress: {\n            shape: 'Sf'\n          },\n          Name: {\n            shape: 'Sg'\n          },\n          PhoneNumber: {\n            shape: 'Sh'\n          },\n          Title: {\n            shape: 'Si'\n          }\n        }\n      },\n      idempotent: true\n    },\n    PutContactInformation: {\n      http: {\n        requestUri: '/putContactInformation',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ContactInformation'\n        ],\n        members: {\n          AccountId: {},\n          ContactInformation: {\n            shape: 'Sl'\n          }\n        }\n      },\n      idempotent: true\n    },\n    StartPrimaryEmailUpdate: {\n      http: {\n        requestUri: '/startPrimaryEmailUpdate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'AccountId',\n          'PrimaryEmail'\n        ],\n        members: {\n          AccountId: {},\n          PrimaryEmail: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Status: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'string',\n      sensitive: true\n    },\n    Sf: {\n      type: 'string',\n      sensitive: true\n    },\n    Sg: {\n      type: 'string',\n      sensitive: true\n    },\n    Sh: {\n      type: 'string',\n      sensitive: true\n    },\n    Si: {\n      type: 'string',\n      sensitive: true\n    },\n    Sl: {\n      type: 'structure',\n      required: [\n        'AddressLine1',\n        'City',\n        'CountryCode',\n        'FullName',\n        'PhoneNumber',\n        'PostalCode'\n      ],\n      members: {\n        AddressLine1: {\n          shape: 'Sm'\n        },\n        AddressLine2: {\n          shape: 'Sm'\n        },\n        AddressLine3: {\n          shape: 'Sm'\n        },\n        City: {\n          type: 'string',\n          sensitive: true\n        },\n        CompanyName: {\n          type: 'string',\n          sensitive: true\n        },\n        CountryCode: {\n          type: 'string',\n          sensitive: true\n        },\n        DistrictOrCounty: {\n          type: 'string',\n          sensitive: true\n        },\n        FullName: {\n          type: 'string',\n          sensitive: true\n        },\n        PhoneNumber: {\n          type: 'string',\n          sensitive: true\n        },\n        PostalCode: {\n          type: 'string',\n          sensitive: true\n        },\n        StateOrRegion: {\n          type: 'string',\n          sensitive: true\n        },\n        WebsiteUrl: {\n          type: 'string',\n          sensitive: true\n        }\n      }\n    },\n    Sm: {\n      type: 'string',\n      sensitive: true\n    }\n  }\n}"]}