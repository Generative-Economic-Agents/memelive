{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/sshpk/lib/dhe.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","_req5","_req6","_req7","_req8","_req9","url","define","exports","require","module","__filename","__dirname","DiffieHellman","generateECDSA","generateED25519","assert","crypto","Buffer","algs","utils","nacl","Key","PrivateKey","CRYPTO_HAVE_ECDH","createECDH","undefined","ecdh","ec","jsbn","BigInteger","key","assertCompatible","_isPriv","isPrivateKey","_algo","type","_curve","curve","_key","Error","_dh","createDiffieHellman","part","p","data","g","_p","_g","setPrivateKey","x","setPublicKey","y","_ecParams","X9ECParameters","_priv","ECPrivate","d","call","Q","k","prototype","getPublicKey","toPublic","getPrivateKey","getKey","_keyCheck","pk","isPub","object","deepEqual","setKey","r","slice","computeSecret","otherpk","pub","ECPublic","deriveSharedSecret","A","length","priv","strictEqual","secret","box","before","Uint8Array","from","generateKey","parts","generateKeys","push","name","q","n","getN","randomBytes","bitLength","n1","subtract","ONE","mod","add","getG","multiply","toByteArray","getCurve","encodePointHex","pair","keyPair","secretKey","publicKey","concat","params","curves","a","b","h","ECCurveFp","G","decodePointHex","toString","getH","buffer","_params","_pub","mpNormalize","pubKey","ok","S","getX","toBigInteger","sign","osCurve","dh","ecParams","cByteLen","Math","ceil","c","_cjsExports","_DiffieHellman","_generateECDSA","_generateED25519"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'assert-plus';\nimport { __cjsMetaURL as _req0} from 'crypto';\nimport { __cjsMetaURL as _req1} from 'safer-buffer';\nimport { __cjsMetaURL as _req2} from './algs';\nimport { __cjsMetaURL as _req3} from './utils';\nimport { __cjsMetaURL as _req4} from 'tweetnacl';\nimport { __cjsMetaURL as _req5} from './key';\nimport { __cjsMetaURL as _req6} from './private-key';\nimport { __cjsMetaURL as _req7} from 'ecc-jsbn';\nimport { __cjsMetaURL as _req8} from 'ecc-jsbn/lib/ec';\nimport { __cjsMetaURL as _req9} from 'jsbn';\nlet _cjsExports;\nlet _DiffieHellman;\nlet _generateECDSA;\nlet _generateED25519;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // Copyright 2017 Joyent, Inc.\n\n module.exports = {\n \tDiffieHellman: DiffieHellman,\n \tgenerateECDSA: generateECDSA,\n \tgenerateED25519: generateED25519\n };\n\n var assert = require('assert-plus');\n var crypto = require('crypto');\n var Buffer = require('safer-buffer').Buffer;\n var algs = require('./algs');\n var utils = require('./utils');\n var nacl = require('tweetnacl');\n\n var Key = require('./key');\n var PrivateKey = require('./private-key');\n\n var CRYPTO_HAVE_ECDH = (crypto.createECDH !== undefined);\n\n var ecdh = require('ecc-jsbn');\n var ec = require('ecc-jsbn/lib/ec');\n var jsbn = require('jsbn').BigInteger;\n\n function DiffieHellman(key) {\n \tutils.assertCompatible(key, Key, [1, 4], 'key');\n \tthis._isPriv = PrivateKey.isPrivateKey(key, [1, 3]);\n \tthis._algo = key.type;\n \tthis._curve = key.curve;\n \tthis._key = key;\n \tif (key.type === 'dsa') {\n \t\tif (!CRYPTO_HAVE_ECDH) {\n \t\t\tthrow (new Error('Due to bugs in the node 0.10 ' +\n \t\t\t    'crypto API, node 0.12.x or later is required ' +\n \t\t\t    'to use DH'));\n \t\t}\n \t\tthis._dh = crypto.createDiffieHellman(\n \t\t    key.part.p.data, undefined,\n \t\t    key.part.g.data, undefined);\n \t\tthis._p = key.part.p;\n \t\tthis._g = key.part.g;\n \t\tif (this._isPriv)\n \t\t\tthis._dh.setPrivateKey(key.part.x.data);\n \t\tthis._dh.setPublicKey(key.part.y.data);\n\n \t} else if (key.type === 'ecdsa') {\n \t\tif (!CRYPTO_HAVE_ECDH) {\n \t\t\tthis._ecParams = new X9ECParameters(this._curve);\n\n \t\t\tif (this._isPriv) {\n \t\t\t\tthis._priv = new ECPrivate(\n \t\t\t\t    this._ecParams, key.part.d.data);\n \t\t\t}\n \t\t\treturn;\n \t\t}\n\n \t\tvar curve = {\n \t\t\t'nistp256': 'prime256v1',\n \t\t\t'nistp384': 'secp384r1',\n \t\t\t'nistp521': 'secp521r1'\n \t\t}[key.curve];\n \t\tthis._dh = crypto.createECDH(curve);\n \t\tif (typeof (this._dh) !== 'object' ||\n \t\t    typeof (this._dh.setPrivateKey) !== 'function') {\n \t\t\tCRYPTO_HAVE_ECDH = false;\n \t\t\tDiffieHellman.call(this, key);\n \t\t\treturn;\n \t\t}\n \t\tif (this._isPriv)\n \t\t\tthis._dh.setPrivateKey(key.part.d.data);\n \t\tthis._dh.setPublicKey(key.part.Q.data);\n\n \t} else if (key.type === 'curve25519') {\n \t\tif (this._isPriv) {\n \t\t\tutils.assertCompatible(key, PrivateKey, [1, 5], 'key');\n \t\t\tthis._priv = key.part.k.data;\n \t\t}\n\n \t} else {\n \t\tthrow (new Error('DH not supported for ' + key.type + ' keys'));\n \t}\n }\n\n DiffieHellman.prototype.getPublicKey = function () {\n \tif (this._isPriv)\n \t\treturn (this._key.toPublic());\n \treturn (this._key);\n };\n\n DiffieHellman.prototype.getPrivateKey = function () {\n \tif (this._isPriv)\n \t\treturn (this._key);\n \telse\n \t\treturn (undefined);\n };\n DiffieHellman.prototype.getKey = DiffieHellman.prototype.getPrivateKey;\n\n DiffieHellman.prototype._keyCheck = function (pk, isPub) {\n \tassert.object(pk, 'key');\n \tif (!isPub)\n \t\tutils.assertCompatible(pk, PrivateKey, [1, 3], 'key');\n \tutils.assertCompatible(pk, Key, [1, 4], 'key');\n\n \tif (pk.type !== this._algo) {\n \t\tthrow (new Error('A ' + pk.type + ' key cannot be used in ' +\n \t\t    this._algo + ' Diffie-Hellman'));\n \t}\n\n \tif (pk.curve !== this._curve) {\n \t\tthrow (new Error('A key from the ' + pk.curve + ' curve ' +\n \t\t    'cannot be used with a ' + this._curve +\n \t\t    ' Diffie-Hellman'));\n \t}\n\n \tif (pk.type === 'dsa') {\n \t\tassert.deepEqual(pk.part.p, this._p,\n \t\t    'DSA key prime does not match');\n \t\tassert.deepEqual(pk.part.g, this._g,\n \t\t    'DSA key generator does not match');\n \t}\n };\n\n DiffieHellman.prototype.setKey = function (pk) {\n \tthis._keyCheck(pk);\n\n \tif (pk.type === 'dsa') {\n \t\tthis._dh.setPrivateKey(pk.part.x.data);\n \t\tthis._dh.setPublicKey(pk.part.y.data);\n\n \t} else if (pk.type === 'ecdsa') {\n \t\tif (CRYPTO_HAVE_ECDH) {\n \t\t\tthis._dh.setPrivateKey(pk.part.d.data);\n \t\t\tthis._dh.setPublicKey(pk.part.Q.data);\n \t\t} else {\n \t\t\tthis._priv = new ECPrivate(\n \t\t\t    this._ecParams, pk.part.d.data);\n \t\t}\n\n \t} else if (pk.type === 'curve25519') {\n \t\tvar k = pk.part.k;\n \t\tif (!pk.part.k)\n \t\t\tk = pk.part.r;\n \t\tthis._priv = k.data;\n \t\tif (this._priv[0] === 0x00)\n \t\t\tthis._priv = this._priv.slice(1);\n \t\tthis._priv = this._priv.slice(0, 32);\n \t}\n \tthis._key = pk;\n \tthis._isPriv = true;\n };\n DiffieHellman.prototype.setPrivateKey = DiffieHellman.prototype.setKey;\n\n DiffieHellman.prototype.computeSecret = function (otherpk) {\n \tthis._keyCheck(otherpk, true);\n \tif (!this._isPriv)\n \t\tthrow (new Error('DH exchange has not been initialized with ' +\n \t\t    'a private key yet'));\n\n \tvar pub;\n \tif (this._algo === 'dsa') {\n \t\treturn (this._dh.computeSecret(\n \t\t    otherpk.part.y.data));\n\n \t} else if (this._algo === 'ecdsa') {\n \t\tif (CRYPTO_HAVE_ECDH) {\n \t\t\treturn (this._dh.computeSecret(\n \t\t\t    otherpk.part.Q.data));\n \t\t} else {\n \t\t\tpub = new ECPublic(\n \t\t\t    this._ecParams, otherpk.part.Q.data);\n \t\t\treturn (this._priv.deriveSharedSecret(pub));\n \t\t}\n\n \t} else if (this._algo === 'curve25519') {\n \t\tpub = otherpk.part.A.data;\n \t\twhile (pub[0] === 0x00 && pub.length > 32)\n \t\t\tpub = pub.slice(1);\n \t\tvar priv = this._priv;\n \t\tassert.strictEqual(pub.length, 32);\n \t\tassert.strictEqual(priv.length, 32);\n\n \t\tvar secret = nacl.box.before(new Uint8Array(pub),\n \t\t    new Uint8Array(priv));\n\n \t\treturn (Buffer.from(secret));\n \t}\n\n \tthrow (new Error('Invalid algorithm: ' + this._algo));\n };\n\n DiffieHellman.prototype.generateKey = function () {\n \tvar parts = [];\n \tvar priv, pub;\n \tif (this._algo === 'dsa') {\n \t\tthis._dh.generateKeys();\n\n \t\tparts.push({name: 'p', data: this._p.data});\n \t\tparts.push({name: 'q', data: this._key.part.q.data});\n \t\tparts.push({name: 'g', data: this._g.data});\n \t\tparts.push({name: 'y', data: this._dh.getPublicKey()});\n \t\tparts.push({name: 'x', data: this._dh.getPrivateKey()});\n \t\tthis._key = new PrivateKey({\n \t\t\ttype: 'dsa',\n \t\t\tparts: parts\n \t\t});\n \t\tthis._isPriv = true;\n \t\treturn (this._key);\n\n \t} else if (this._algo === 'ecdsa') {\n \t\tif (CRYPTO_HAVE_ECDH) {\n \t\t\tthis._dh.generateKeys();\n\n \t\t\tparts.push({name: 'curve',\n \t\t\t    data: Buffer.from(this._curve)});\n \t\t\tparts.push({name: 'Q', data: this._dh.getPublicKey()});\n \t\t\tparts.push({name: 'd', data: this._dh.getPrivateKey()});\n \t\t\tthis._key = new PrivateKey({\n \t\t\t\ttype: 'ecdsa',\n \t\t\t\tcurve: this._curve,\n \t\t\t\tparts: parts\n \t\t\t});\n \t\t\tthis._isPriv = true;\n \t\t\treturn (this._key);\n\n \t\t} else {\n \t\t\tvar n = this._ecParams.getN();\n \t\t\tvar r = new jsbn(crypto.randomBytes(n.bitLength()));\n \t\t\tvar n1 = n.subtract(jsbn.ONE);\n \t\t\tpriv = r.mod(n1).add(jsbn.ONE);\n \t\t\tpub = this._ecParams.getG().multiply(priv);\n\n \t\t\tpriv = Buffer.from(priv.toByteArray());\n \t\t\tpub = Buffer.from(this._ecParams.getCurve().\n \t\t\t    encodePointHex(pub), 'hex');\n\n \t\t\tthis._priv = new ECPrivate(this._ecParams, priv);\n\n \t\t\tparts.push({name: 'curve',\n \t\t\t    data: Buffer.from(this._curve)});\n \t\t\tparts.push({name: 'Q', data: pub});\n \t\t\tparts.push({name: 'd', data: priv});\n\n \t\t\tthis._key = new PrivateKey({\n \t\t\t\ttype: 'ecdsa',\n \t\t\t\tcurve: this._curve,\n \t\t\t\tparts: parts\n \t\t\t});\n \t\t\tthis._isPriv = true;\n \t\t\treturn (this._key);\n \t\t}\n\n \t} else if (this._algo === 'curve25519') {\n \t\tvar pair = nacl.box.keyPair();\n \t\tpriv = Buffer.from(pair.secretKey);\n \t\tpub = Buffer.from(pair.publicKey);\n \t\tpriv = Buffer.concat([priv, pub]);\n \t\tassert.strictEqual(priv.length, 64);\n \t\tassert.strictEqual(pub.length, 32);\n\n \t\tparts.push({name: 'A', data: pub});\n \t\tparts.push({name: 'k', data: priv});\n \t\tthis._key = new PrivateKey({\n \t\t\ttype: 'curve25519',\n \t\t\tparts: parts\n \t\t});\n \t\tthis._isPriv = true;\n \t\treturn (this._key);\n \t}\n\n \tthrow (new Error('Invalid algorithm: ' + this._algo));\n };\n DiffieHellman.prototype.generateKeys = DiffieHellman.prototype.generateKey;\n\n /* These are helpers for using ecc-jsbn (for node 0.10 compatibility). */\n\n function X9ECParameters(name) {\n \tvar params = algs.curves[name];\n \tassert.object(params);\n\n \tvar p = new jsbn(params.p);\n \tvar a = new jsbn(params.a);\n \tvar b = new jsbn(params.b);\n \tvar n = new jsbn(params.n);\n \tvar h = jsbn.ONE;\n \tvar curve = new ec.ECCurveFp(p, a, b);\n \tvar G = curve.decodePointHex(params.G.toString('hex'));\n\n \tthis.curve = curve;\n \tthis.g = G;\n \tthis.n = n;\n \tthis.h = h;\n }\n X9ECParameters.prototype.getCurve = function () { return (this.curve); };\n X9ECParameters.prototype.getG = function () { return (this.g); };\n X9ECParameters.prototype.getN = function () { return (this.n); };\n X9ECParameters.prototype.getH = function () { return (this.h); };\n\n function ECPublic(params, buffer) {\n \tthis._params = params;\n \tif (buffer[0] === 0x00)\n \t\tbuffer = buffer.slice(1);\n \tthis._pub = params.getCurve().decodePointHex(buffer.toString('hex'));\n }\n\n function ECPrivate(params, buffer) {\n \tthis._params = params;\n \tthis._priv = new jsbn(utils.mpNormalize(buffer));\n }\n ECPrivate.prototype.deriveSharedSecret = function (pubKey) {\n \tassert.ok(pubKey instanceof ECPublic);\n \tvar S = pubKey._pub.multiply(this._priv);\n \treturn (Buffer.from(S.getX().toBigInteger().toByteArray()));\n };\n\n function generateED25519() {\n \tvar pair = nacl.sign.keyPair();\n \tvar priv = Buffer.from(pair.secretKey);\n \tvar pub = Buffer.from(pair.publicKey);\n \tassert.strictEqual(priv.length, 64);\n \tassert.strictEqual(pub.length, 32);\n\n \tvar parts = [];\n \tparts.push({name: 'A', data: pub});\n \tparts.push({name: 'k', data: priv.slice(0, 32)});\n \tvar key = new PrivateKey({\n \t\ttype: 'ed25519',\n \t\tparts: parts\n \t});\n \treturn (key);\n }\n\n /* Generates a new ECDSA private key on a given curve. */\n function generateECDSA(curve) {\n \tvar parts = [];\n \tvar key;\n\n \tif (CRYPTO_HAVE_ECDH) {\n \t\t/*\n \t\t * Node crypto doesn't expose key generation directly, but the\n \t\t * ECDH instances can generate keys. It turns out this just\n \t\t * calls into the OpenSSL generic key generator, and we can\n \t\t * read its output happily without doing an actual DH. So we\n \t\t * use that here.\n \t\t */\n \t\tvar osCurve = {\n \t\t\t'nistp256': 'prime256v1',\n \t\t\t'nistp384': 'secp384r1',\n \t\t\t'nistp521': 'secp521r1'\n \t\t}[curve];\n\n \t\tvar dh = crypto.createECDH(osCurve);\n \t\tdh.generateKeys();\n\n \t\tparts.push({name: 'curve',\n \t\t    data: Buffer.from(curve)});\n \t\tparts.push({name: 'Q', data: dh.getPublicKey()});\n \t\tparts.push({name: 'd', data: dh.getPrivateKey()});\n\n \t\tkey = new PrivateKey({\n \t\t\ttype: 'ecdsa',\n \t\t\tcurve: curve,\n \t\t\tparts: parts\n \t\t});\n \t\treturn (key);\n \t} else {\n\n \t\tvar ecParams = new X9ECParameters(curve);\n\n \t\t/* This algorithm taken from FIPS PUB 186-4 (section B.4.1) */\n \t\tvar n = ecParams.getN();\n \t\t/*\n \t\t * The crypto.randomBytes() function can only give us whole\n \t\t * bytes, so taking a nod from X9.62, we round up.\n \t\t */\n \t\tvar cByteLen = Math.ceil((n.bitLength() + 64) / 8);\n \t\tvar c = new jsbn(crypto.randomBytes(cByteLen));\n\n \t\tvar n1 = n.subtract(jsbn.ONE);\n \t\tvar priv = c.mod(n1).add(jsbn.ONE);\n \t\tvar pub = ecParams.getG().multiply(priv);\n\n \t\tpriv = Buffer.from(priv.toByteArray());\n \t\tpub = Buffer.from(ecParams.getCurve().\n \t\t    encodePointHex(pub), 'hex');\n\n \t\tparts.push({name: 'curve', data: Buffer.from(curve)});\n \t\tparts.push({name: 'Q', data: pub});\n \t\tparts.push({name: 'd', data: priv});\n\n \t\tkey = new PrivateKey({\n \t\t\ttype: 'ecdsa',\n \t\t\tcurve: curve,\n \t\t\tparts: parts\n \t\t});\n \t\treturn (key);\n \t}\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_DiffieHellman = module.exports.DiffieHellman;\n_generateECDSA = module.exports.generateECDSA;\n_generateED25519 = module.exports.generateED25519;\n\n}, () => ({\n  'assert-plus': _req,\n  'crypto': _req0,\n  'safer-buffer': _req1,\n  './algs': _req2,\n  './utils': _req3,\n  'tweetnacl': _req4,\n  './key': _req5,\n  './private-key': _req6,\n  'ecc-jsbn': _req7,\n  'ecc-jsbn/lib/ec': _req8,\n  'jsbn': _req9,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}