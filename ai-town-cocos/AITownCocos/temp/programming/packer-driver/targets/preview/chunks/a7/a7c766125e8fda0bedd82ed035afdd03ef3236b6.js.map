{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/assets/src/manager/BoneResManager.ts.ts"],"names":["BoneResManager","constructor","_templetDic","ins","self","_ins","agent","navigator","userAgent","console","log"],"mappings":";;;iBACqBA,c;;;;;;;;;;;;;yBAAAA,c,GAAN,MAAMA,cAAN,CAAqB;AAIhCC,QAAAA,WAAW,GAAG;AAAA,eAFNC,WAEM;AACV,eAAKA,WAAL,GAAmB,EAAnB;AACH;;AACoB,mBAAHC,GAAG,GAAmB;AACpC,cAAIC,IAAI,GAAG,IAAX;;AACA,cAAIA,IAAI,CAACC,IAAL,IAAa,IAAjB,EAAuB;AACnBD,YAAAA,IAAI,CAACC,IAAL,GAAY,IAAIL,cAAJ,EAAZ;AACA,gBAAIM,KAAK,GAAGC,SAAS,CAACC,SAAtB,CAFmB,CAGnB;AACA;AACA;;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,KAArC;AACH;;AACD,iBAAOF,IAAI,CAACC,IAAZ;AACH,SAlB+B,CAoBhgC,O;;AAAfL,MAAAA,c,CACVK,I","sourcesContent":["\nexport default class BoneResManager {\n    static _ins: BoneResManager;\n    private _templetDic: object;\n\n    constructor() {\n        this._templetDic = {};\n    }\n    public static get ins(): BoneResManager {\n        let self = this;\n        if (self._ins == null) {\n            self._ins = new BoneResManager();\n            let agent = navigator.userAgent;\n            // if (agent.indexOf('iPhone') == -1&&agent.indexOf('AWM-A0') == -1) {\n            //     Laya.timer.loop(1000, self, self._ins.excGC);\n            // }\n            console.log('navigator.userAgent :', agent);\n        }\n        return self._ins;\n    }\n    \n    // public preloadRes(arr:string[],func:Laya.Handler = null){\n    //     let temparr:any[] = [];\n    //     for(let i = 0;i<arr.length;i++){\n    //         let png = arr[i].replace(\".sk\",\".png\");\n    //         temparr.push({url:arr[i],type:Laya.Loader.BUFFER});\n    //         temparr.push({url:png,type:Laya.Loader.IMAGE});\n    //         if(Laya.loader.getRes(arr[i])){\n    //            // Laya.loader.clearRes(arr[i]);\n               \n    //             console.log(\"has load:\"+arr[i]);\n    //         }\n    //         if(Laya.loader.getRes(png)){\n    //            // Laya.loader.clearRes(png);\n               \n    //             console.log(\"has load:\"+png);\n    //         }\n    //     }\n    //     Laya.loader.load(temparr, func,Laya.Handler.create(this,(progress,...args)=>{\n    //         console.log('加载进度: ' + progress);\n    //     }));\n    //     Laya.loader.on(Laya.Event.ERROR, this, (da) => {\n           \n    //         console.log('加载错误1: ' + da);\n    //     });\n    // }\n    // /**\n    //  * 超尺寸龙骨资源加载\n    //  * @param arr \n    //  * @param func \n    //  */\n    // public preloadRes2(arr:string[],func:Laya.Handler = null){\n    //     let temparr:any[] = [];\n    //     console.log(arr,'arrpreloadRes2');\n    //     for(let i = 0;i<arr.length;i++){\n    //         if(arr[i].indexOf(\".sk\")!=-1){\n    //             temparr.push({url:arr[i],type:Laya.Loader.BUFFER});\n    //         }else if(arr[i].indexOf(\".png\")!=-1){\n    //             temparr.push({url:arr[i],type:Laya.Loader.IMAGE});\n    //         }\n           \n    //         if(Laya.loader.getRes(arr[i])){\n    //            // Laya.loader.clearRes(arr[i]);\n    //             console.log(\"has load:\"+arr[i]);\n    //         }\n    //     }\n    //     console.log(temparr,'temparr');\n    //     Laya.loader.load(temparr, func);\n    //     Laya.loader.on(Laya.Event.ERROR, this, (da) => {\n    //         console.log('加载错误2: ' + da);\n    //     });\n    // }\n    // public hasTemp(url: string): boolean {\n    //     if (this._templetDic[url]) {\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    // public static _frominit: boolean;\n    // public getSkelet(url: string, parseComplete: Laya.Handler) : Laya.Skeleton{\n    //     if (!this._templetDic[url]) {\n    //         let mFactory = new Laya.Templet();\n    //         let obj = {\n    //             url: url,\n    //             templet: mFactory,\n    //             gettime: Laya.timer.currTimer,\n    //         };\n    //         this._templetDic[url] = obj;\n    //         mFactory.on(Laya.Event.COMPLETE, this, this._parseComplete, [url, parseComplete]);\n    //         console.log('getSkelet', url);\n    //         mFactory.on(Laya.Event.ERROR, this, this.onError, [url]);\n    //         mFactory.loadAni(obj.url);\n    //     } else {\n    //         this._templetDic[url].gettime = Laya.timer.currTimer;\n    //         let ske;\n    //         try{\n    //             ske = this._createSke(url);\n    //         }catch(e){\n    //             this._templetDic[url] = null;\n    //             this.getSkelet(url,parseComplete)\n    //         }\n    //         return ske;\n    //     }\n    // }\n    // private onError(url, evt): void {\n    //     console.log('error', evt,url);\n    //     if (BoneResManager._frominit) {\n    //         let bus = window['bus'];\n    //         bus.emit(bus.busName.game.resourceLoadFail);\n    //         this._templetDic[url] = {};\n    //     }else{\n    //         showMsg2(\"网络异常，请检查网络设置\");\n    //     }\n    // }\n    // private _createSke(url): Laya.Skeleton {\n    //     let s = this;\n    //     if (!this._templetDic[url]) {\n           \n    //         for (let key in s._templetDic) {\n    //             if (this._templetDic[key] && this._templetDic[key].templet) {\n    //                 url = key;\n    //                 break;\n    //             }\n    //         }\n    //     }\n    //     if(!this._templetDic[url])return null;\n    //     let templ: Laya.Templet = this._templetDic[url].templet;\n    //     let ske: Laya.Skeleton;\n    //     if (templ) {\n    //         ske = templ.buildArmature();\n    //     }\n    //     return ske;\n    // }\n    // private _parseComplete(url: string, parseComplete: Laya.Handler) {\n    //     console.log('_parseComplete:', url, typeof parseComplete);\n    //     let ske = this._createSke(url);\n    //     if (parseComplete) {\n    //         parseComplete.runWith(ske);\n    //     }\n    // }\n    // public excGC() {\n    //     let s = this;\n    //     for (let key in s._templetDic) {\n    //         let lasttime = s._templetDic[key].gettime;\n    //         if (Laya.timer.currTimer - lasttime > 180000) {\n    //             let templ: Laya.Templet = this._templetDic[key].templet;\n\n    //             if (templ) {\n                   \n    //                 templ.off(Laya.Event.COMPLETE, this, this._parseComplete);\n    //                 templ.destroy(); //释放动画模板类下的纹理数据\n    //                 this._templetDic[key] = null;\n    //             }\n    //         }\n    //     }\n    // }\n    // public clearBone(url) {\n    //     let s = this;\n    //     s._templetDic[url] = null;\n    //     // Laya.Resource.destroyUnusedResources();\n    // }\n    // public destroy() {\n    //     let s = this;\n    //     for (let key in s._templetDic) {\n    //         if (!this._templetDic[key]) continue;\n    //         let lasttime = s._templetDic[key].gettime;\n    //         let templ: Laya.Templet = this._templetDic[key].templet;\n    //         if (templ) {\n    //             templ.off(Laya.Event.COMPLETE, this, this._parseComplete);\n    //             templ.destroy();\n    //             this._templetDic[key] = null;\n    //             templ = null;\n    //         }\n    //     }\n    //     this._templetDic = {};\n       \n    // }\n}\n"]}