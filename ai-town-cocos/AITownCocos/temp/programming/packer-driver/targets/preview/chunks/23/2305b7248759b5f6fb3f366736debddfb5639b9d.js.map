{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/machinelearning-2014-12-12.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","AddTags","input","type","required","members","Tags","shape","ResourceId","ResourceType","output","CreateBatchPrediction","BatchPredictionId","BatchPredictionName","MLModelId","BatchPredictionDataSourceId","OutputUri","CreateDataSourceFromRDS","DataSourceId","DataSourceName","RDSData","DatabaseInformation","SelectSqlQuery","DatabaseCredentials","Username","Password","sensitive","S3StagingLocation","DataRearrangement","DataSchema","DataSchemaUri","ResourceRole","ServiceRole","SubnetId","SecurityGroupIds","member","RoleARN","ComputeStatistics","CreateDataSourceFromRedshift","DataSpec","CreateDataSourceFromS3","DataLocationS3","DataSchemaLocationS3","CreateEvaluation","EvaluationId","EvaluationName","EvaluationDataSourceId","CreateMLModel","MLModelName","MLModelType","Parameters","TrainingDataSourceId","Recipe","RecipeUri","CreateRealtimeEndpoint","RealtimeEndpointInfo","DeleteBatchPrediction","DeleteDataSource","DeleteEvaluation","DeleteMLModel","DeleteRealtimeEndpoint","DeleteTags","TagKeys","DescribeBatchPredictions","FilterVariable","EQ","GT","LT","GE","LE","NE","Prefix","SortOrder","NextToken","Limit","Results","InputDataLocationS3","CreatedByIamUser","CreatedAt","LastUpdatedAt","Name","Status","Message","ComputeTime","FinishedAt","StartedAt","TotalRecordCount","InvalidRecordCount","DescribeDataSources","DataSizeInBytes","NumberOfFiles","RedshiftMetadata","RDSMetadata","DescribeEvaluations","PerformanceMetrics","DescribeMLModels","SizeInBytes","EndpointInfo","TrainingParameters","Algorithm","ScoreThreshold","ScoreThresholdLastUpdatedAt","DescribeTags","GetBatchPrediction","LogUri","GetDataSource","Verbose","DataSourceSchema","GetEvaluation","GetMLModel","Schema","Predict","Record","key","value","PredictEndpoint","Prediction","predictedLabel","predictedValue","predictedScores","details","UpdateBatchPrediction","UpdateDataSource","UpdateEvaluation","UpdateMLModel","shapes","S2","Key","Value","Sf","InstanceIdentifier","DatabaseName","Sy","ClusterIdentifier","S1d","S1j","PeakRequestsPerSecond","EndpointUrl","EndpointStatus","S2i","RedshiftDatabase","DatabaseUserName","S2j","Database","DataPipelineId","S2q","Properties"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2014-12-12',\n    endpointPrefix: 'machinelearning',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceFullName: 'Amazon Machine Learning',\n    serviceId: 'Machine Learning',\n    signatureVersion: 'v4',\n    targetPrefix: 'AmazonML_20141212',\n    uid: 'machinelearning-2014-12-12'\n  },\n  operations: {\n    AddTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'Tags',\n          'ResourceId',\n          'ResourceType'\n        ],\n        members: {\n          Tags: {\n            shape: 'S2'\n          },\n          ResourceId: {},\n          ResourceType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceId: {},\n          ResourceType: {}\n        }\n      }\n    },\n    CreateBatchPrediction: {\n      input: {\n        type: 'structure',\n        required: [\n          'BatchPredictionId',\n          'MLModelId',\n          'BatchPredictionDataSourceId',\n          'OutputUri'\n        ],\n        members: {\n          BatchPredictionId: {},\n          BatchPredictionName: {},\n          MLModelId: {},\n          BatchPredictionDataSourceId: {},\n          OutputUri: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BatchPredictionId: {}\n        }\n      }\n    },\n    CreateDataSourceFromRDS: {\n      input: {\n        type: 'structure',\n        required: [\n          'DataSourceId',\n          'RDSData',\n          'RoleARN'\n        ],\n        members: {\n          DataSourceId: {},\n          DataSourceName: {},\n          RDSData: {\n            type: 'structure',\n            required: [\n              'DatabaseInformation',\n              'SelectSqlQuery',\n              'DatabaseCredentials',\n              'S3StagingLocation',\n              'ResourceRole',\n              'ServiceRole',\n              'SubnetId',\n              'SecurityGroupIds'\n            ],\n            members: {\n              DatabaseInformation: {\n                shape: 'Sf'\n              },\n              SelectSqlQuery: {},\n              DatabaseCredentials: {\n                type: 'structure',\n                required: [\n                  'Username',\n                  'Password'\n                ],\n                members: {\n                  Username: {},\n                  Password: {\n                    type: 'string',\n                    sensitive: true\n                  }\n                }\n              },\n              S3StagingLocation: {},\n              DataRearrangement: {},\n              DataSchema: {},\n              DataSchemaUri: {},\n              ResourceRole: {},\n              ServiceRole: {},\n              SubnetId: {},\n              SecurityGroupIds: {\n                type: 'list',\n                member: {}\n              }\n            }\n          },\n          RoleARN: {},\n          ComputeStatistics: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DataSourceId: {}\n        }\n      }\n    },\n    CreateDataSourceFromRedshift: {\n      input: {\n        type: 'structure',\n        required: [\n          'DataSourceId',\n          'DataSpec',\n          'RoleARN'\n        ],\n        members: {\n          DataSourceId: {},\n          DataSourceName: {},\n          DataSpec: {\n            type: 'structure',\n            required: [\n              'DatabaseInformation',\n              'SelectSqlQuery',\n              'DatabaseCredentials',\n              'S3StagingLocation'\n            ],\n            members: {\n              DatabaseInformation: {\n                shape: 'Sy'\n              },\n              SelectSqlQuery: {},\n              DatabaseCredentials: {\n                type: 'structure',\n                required: [\n                  'Username',\n                  'Password'\n                ],\n                members: {\n                  Username: {},\n                  Password: {\n                    type: 'string',\n                    sensitive: true\n                  }\n                }\n              },\n              S3StagingLocation: {},\n              DataRearrangement: {},\n              DataSchema: {},\n              DataSchemaUri: {}\n            }\n          },\n          RoleARN: {},\n          ComputeStatistics: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DataSourceId: {}\n        }\n      }\n    },\n    CreateDataSourceFromS3: {\n      input: {\n        type: 'structure',\n        required: [\n          'DataSourceId',\n          'DataSpec'\n        ],\n        members: {\n          DataSourceId: {},\n          DataSourceName: {},\n          DataSpec: {\n            type: 'structure',\n            required: [\n              'DataLocationS3'\n            ],\n            members: {\n              DataLocationS3: {},\n              DataRearrangement: {},\n              DataSchema: {},\n              DataSchemaLocationS3: {}\n            }\n          },\n          ComputeStatistics: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DataSourceId: {}\n        }\n      }\n    },\n    CreateEvaluation: {\n      input: {\n        type: 'structure',\n        required: [\n          'EvaluationId',\n          'MLModelId',\n          'EvaluationDataSourceId'\n        ],\n        members: {\n          EvaluationId: {},\n          EvaluationName: {},\n          MLModelId: {},\n          EvaluationDataSourceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EvaluationId: {}\n        }\n      }\n    },\n    CreateMLModel: {\n      input: {\n        type: 'structure',\n        required: [\n          'MLModelId',\n          'MLModelType',\n          'TrainingDataSourceId'\n        ],\n        members: {\n          MLModelId: {},\n          MLModelName: {},\n          MLModelType: {},\n          Parameters: {\n            shape: 'S1d'\n          },\n          TrainingDataSourceId: {},\n          Recipe: {},\n          RecipeUri: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MLModelId: {}\n        }\n      }\n    },\n    CreateRealtimeEndpoint: {\n      input: {\n        type: 'structure',\n        required: [\n          'MLModelId'\n        ],\n        members: {\n          MLModelId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MLModelId: {},\n          RealtimeEndpointInfo: {\n            shape: 'S1j'\n          }\n        }\n      }\n    },\n    DeleteBatchPrediction: {\n      input: {\n        type: 'structure',\n        required: [\n          'BatchPredictionId'\n        ],\n        members: {\n          BatchPredictionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BatchPredictionId: {}\n        }\n      }\n    },\n    DeleteDataSource: {\n      input: {\n        type: 'structure',\n        required: [\n          'DataSourceId'\n        ],\n        members: {\n          DataSourceId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DataSourceId: {}\n        }\n      }\n    },\n    DeleteEvaluation: {\n      input: {\n        type: 'structure',\n        required: [\n          'EvaluationId'\n        ],\n        members: {\n          EvaluationId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EvaluationId: {}\n        }\n      }\n    },\n    DeleteMLModel: {\n      input: {\n        type: 'structure',\n        required: [\n          'MLModelId'\n        ],\n        members: {\n          MLModelId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MLModelId: {}\n        }\n      }\n    },\n    DeleteRealtimeEndpoint: {\n      input: {\n        type: 'structure',\n        required: [\n          'MLModelId'\n        ],\n        members: {\n          MLModelId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MLModelId: {},\n          RealtimeEndpointInfo: {\n            shape: 'S1j'\n          }\n        }\n      }\n    },\n    DeleteTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'TagKeys',\n          'ResourceId',\n          'ResourceType'\n        ],\n        members: {\n          TagKeys: {\n            type: 'list',\n            member: {}\n          },\n          ResourceId: {},\n          ResourceType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceId: {},\n          ResourceType: {}\n        }\n      }\n    },\n    DescribeBatchPredictions: {\n      input: {\n        type: 'structure',\n        members: {\n          FilterVariable: {},\n          EQ: {},\n          GT: {},\n          LT: {},\n          GE: {},\n          LE: {},\n          NE: {},\n          Prefix: {},\n          SortOrder: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                BatchPredictionId: {},\n                MLModelId: {},\n                BatchPredictionDataSourceId: {},\n                InputDataLocationS3: {},\n                CreatedByIamUser: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                LastUpdatedAt: {\n                  type: 'timestamp'\n                },\n                Name: {},\n                Status: {},\n                OutputUri: {},\n                Message: {},\n                ComputeTime: {\n                  type: 'long'\n                },\n                FinishedAt: {\n                  type: 'timestamp'\n                },\n                StartedAt: {\n                  type: 'timestamp'\n                },\n                TotalRecordCount: {\n                  type: 'long'\n                },\n                InvalidRecordCount: {\n                  type: 'long'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeDataSources: {\n      input: {\n        type: 'structure',\n        members: {\n          FilterVariable: {},\n          EQ: {},\n          GT: {},\n          LT: {},\n          GE: {},\n          LE: {},\n          NE: {},\n          Prefix: {},\n          SortOrder: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                DataSourceId: {},\n                DataLocationS3: {},\n                DataRearrangement: {},\n                CreatedByIamUser: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                LastUpdatedAt: {\n                  type: 'timestamp'\n                },\n                DataSizeInBytes: {\n                  type: 'long'\n                },\n                NumberOfFiles: {\n                  type: 'long'\n                },\n                Name: {},\n                Status: {},\n                Message: {},\n                RedshiftMetadata: {\n                  shape: 'S2i'\n                },\n                RDSMetadata: {\n                  shape: 'S2j'\n                },\n                RoleARN: {},\n                ComputeStatistics: {\n                  type: 'boolean'\n                },\n                ComputeTime: {\n                  type: 'long'\n                },\n                FinishedAt: {\n                  type: 'timestamp'\n                },\n                StartedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeEvaluations: {\n      input: {\n        type: 'structure',\n        members: {\n          FilterVariable: {},\n          EQ: {},\n          GT: {},\n          LT: {},\n          GE: {},\n          LE: {},\n          NE: {},\n          Prefix: {},\n          SortOrder: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                EvaluationId: {},\n                MLModelId: {},\n                EvaluationDataSourceId: {},\n                InputDataLocationS3: {},\n                CreatedByIamUser: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                LastUpdatedAt: {\n                  type: 'timestamp'\n                },\n                Name: {},\n                Status: {},\n                PerformanceMetrics: {\n                  shape: 'S2q'\n                },\n                Message: {},\n                ComputeTime: {\n                  type: 'long'\n                },\n                FinishedAt: {\n                  type: 'timestamp'\n                },\n                StartedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeMLModels: {\n      input: {\n        type: 'structure',\n        members: {\n          FilterVariable: {},\n          EQ: {},\n          GT: {},\n          LT: {},\n          GE: {},\n          LE: {},\n          NE: {},\n          Prefix: {},\n          SortOrder: {},\n          NextToken: {},\n          Limit: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                MLModelId: {},\n                TrainingDataSourceId: {},\n                CreatedByIamUser: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                LastUpdatedAt: {\n                  type: 'timestamp'\n                },\n                Name: {},\n                Status: {},\n                SizeInBytes: {\n                  type: 'long'\n                },\n                EndpointInfo: {\n                  shape: 'S1j'\n                },\n                TrainingParameters: {\n                  shape: 'S1d'\n                },\n                InputDataLocationS3: {},\n                Algorithm: {},\n                MLModelType: {},\n                ScoreThreshold: {\n                  type: 'float'\n                },\n                ScoreThresholdLastUpdatedAt: {\n                  type: 'timestamp'\n                },\n                Message: {},\n                ComputeTime: {\n                  type: 'long'\n                },\n                FinishedAt: {\n                  type: 'timestamp'\n                },\n                StartedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    DescribeTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceId',\n          'ResourceType'\n        ],\n        members: {\n          ResourceId: {},\n          ResourceType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ResourceId: {},\n          ResourceType: {},\n          Tags: {\n            shape: 'S2'\n          }\n        }\n      }\n    },\n    GetBatchPrediction: {\n      input: {\n        type: 'structure',\n        required: [\n          'BatchPredictionId'\n        ],\n        members: {\n          BatchPredictionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BatchPredictionId: {},\n          MLModelId: {},\n          BatchPredictionDataSourceId: {},\n          InputDataLocationS3: {},\n          CreatedByIamUser: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          LastUpdatedAt: {\n            type: 'timestamp'\n          },\n          Name: {},\n          Status: {},\n          OutputUri: {},\n          LogUri: {},\n          Message: {},\n          ComputeTime: {\n            type: 'long'\n          },\n          FinishedAt: {\n            type: 'timestamp'\n          },\n          StartedAt: {\n            type: 'timestamp'\n          },\n          TotalRecordCount: {\n            type: 'long'\n          },\n          InvalidRecordCount: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    GetDataSource: {\n      input: {\n        type: 'structure',\n        required: [\n          'DataSourceId'\n        ],\n        members: {\n          DataSourceId: {},\n          Verbose: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DataSourceId: {},\n          DataLocationS3: {},\n          DataRearrangement: {},\n          CreatedByIamUser: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          LastUpdatedAt: {\n            type: 'timestamp'\n          },\n          DataSizeInBytes: {\n            type: 'long'\n          },\n          NumberOfFiles: {\n            type: 'long'\n          },\n          Name: {},\n          Status: {},\n          LogUri: {},\n          Message: {},\n          RedshiftMetadata: {\n            shape: 'S2i'\n          },\n          RDSMetadata: {\n            shape: 'S2j'\n          },\n          RoleARN: {},\n          ComputeStatistics: {\n            type: 'boolean'\n          },\n          ComputeTime: {\n            type: 'long'\n          },\n          FinishedAt: {\n            type: 'timestamp'\n          },\n          StartedAt: {\n            type: 'timestamp'\n          },\n          DataSourceSchema: {}\n        }\n      }\n    },\n    GetEvaluation: {\n      input: {\n        type: 'structure',\n        required: [\n          'EvaluationId'\n        ],\n        members: {\n          EvaluationId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EvaluationId: {},\n          MLModelId: {},\n          EvaluationDataSourceId: {},\n          InputDataLocationS3: {},\n          CreatedByIamUser: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          LastUpdatedAt: {\n            type: 'timestamp'\n          },\n          Name: {},\n          Status: {},\n          PerformanceMetrics: {\n            shape: 'S2q'\n          },\n          LogUri: {},\n          Message: {},\n          ComputeTime: {\n            type: 'long'\n          },\n          FinishedAt: {\n            type: 'timestamp'\n          },\n          StartedAt: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetMLModel: {\n      input: {\n        type: 'structure',\n        required: [\n          'MLModelId'\n        ],\n        members: {\n          MLModelId: {},\n          Verbose: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MLModelId: {},\n          TrainingDataSourceId: {},\n          CreatedByIamUser: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          LastUpdatedAt: {\n            type: 'timestamp'\n          },\n          Name: {},\n          Status: {},\n          SizeInBytes: {\n            type: 'long'\n          },\n          EndpointInfo: {\n            shape: 'S1j'\n          },\n          TrainingParameters: {\n            shape: 'S1d'\n          },\n          InputDataLocationS3: {},\n          MLModelType: {},\n          ScoreThreshold: {\n            type: 'float'\n          },\n          ScoreThresholdLastUpdatedAt: {\n            type: 'timestamp'\n          },\n          LogUri: {},\n          Message: {},\n          ComputeTime: {\n            type: 'long'\n          },\n          FinishedAt: {\n            type: 'timestamp'\n          },\n          StartedAt: {\n            type: 'timestamp'\n          },\n          Recipe: {},\n          Schema: {}\n        }\n      }\n    },\n    Predict: {\n      input: {\n        type: 'structure',\n        required: [\n          'MLModelId',\n          'Record',\n          'PredictEndpoint'\n        ],\n        members: {\n          MLModelId: {},\n          Record: {\n            type: 'map',\n            key: {},\n            value: {}\n          },\n          PredictEndpoint: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Prediction: {\n            type: 'structure',\n            members: {\n              predictedLabel: {},\n              predictedValue: {\n                type: 'float'\n              },\n              predictedScores: {\n                type: 'map',\n                key: {},\n                value: {\n                  type: 'float'\n                }\n              },\n              details: {\n                type: 'map',\n                key: {},\n                value: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    UpdateBatchPrediction: {\n      input: {\n        type: 'structure',\n        required: [\n          'BatchPredictionId',\n          'BatchPredictionName'\n        ],\n        members: {\n          BatchPredictionId: {},\n          BatchPredictionName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BatchPredictionId: {}\n        }\n      }\n    },\n    UpdateDataSource: {\n      input: {\n        type: 'structure',\n        required: [\n          'DataSourceId',\n          'DataSourceName'\n        ],\n        members: {\n          DataSourceId: {},\n          DataSourceName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DataSourceId: {}\n        }\n      }\n    },\n    UpdateEvaluation: {\n      input: {\n        type: 'structure',\n        required: [\n          'EvaluationId',\n          'EvaluationName'\n        ],\n        members: {\n          EvaluationId: {},\n          EvaluationName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          EvaluationId: {}\n        }\n      }\n    },\n    UpdateMLModel: {\n      input: {\n        type: 'structure',\n        required: [\n          'MLModelId'\n        ],\n        members: {\n          MLModelId: {},\n          MLModelName: {},\n          ScoreThreshold: {\n            type: 'float'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          MLModelId: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S2: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sf: {\n      type: 'structure',\n      required: [\n        'InstanceIdentifier',\n        'DatabaseName'\n      ],\n      members: {\n        InstanceIdentifier: {},\n        DatabaseName: {}\n      }\n    },\n    Sy: {\n      type: 'structure',\n      required: [\n        'DatabaseName',\n        'ClusterIdentifier'\n      ],\n      members: {\n        DatabaseName: {},\n        ClusterIdentifier: {}\n      }\n    },\n    S1d: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1j: {\n      type: 'structure',\n      members: {\n        PeakRequestsPerSecond: {\n          type: 'integer'\n        },\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        EndpointUrl: {},\n        EndpointStatus: {}\n      }\n    },\n    S2i: {\n      type: 'structure',\n      members: {\n        RedshiftDatabase: {\n          shape: 'Sy'\n        },\n        DatabaseUserName: {},\n        SelectSqlQuery: {}\n      }\n    },\n    S2j: {\n      type: 'structure',\n      members: {\n        Database: {\n          shape: 'Sf'\n        },\n        DatabaseUserName: {},\n        SelectSqlQuery: {},\n        ResourceRole: {},\n        ServiceRole: {},\n        DataPipelineId: {}\n      }\n    },\n    S2q: {\n      type: 'structure',\n      members: {\n        Properties: {\n          type: 'map',\n          key: {},\n          value: {}\n        }\n      }\n    }\n  }\n}"]}