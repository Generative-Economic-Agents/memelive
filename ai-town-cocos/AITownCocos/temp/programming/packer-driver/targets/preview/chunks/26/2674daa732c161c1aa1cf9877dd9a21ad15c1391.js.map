{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/url/url.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","punycode","parse","urlParse","resolve","urlResolve","resolveObject","urlResolveObject","format","urlFormat","Url","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","path","href","protocolPattern","portPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","isObject","u","prototype","isString","TypeError","rest","trim","proto","exec","lowerProto","toLowerCase","substr","length","match","hostEnd","i","hec","indexOf","atSign","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","split","l","part","newpart","j","k","charCodeAt","validParts","notHost","bit","push","unshift","join","domainArray","newOut","s","encode","p","h","ae","esc","encodeURIComponent","escape","qm","obj","call","replace","Object","keys","stringify","charAt","source","relative","rel","result","forEach","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","splice","isAbsolute","arg","_cjsExports","_parse","_resolve","_resolveObject","_format","_Url"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'punycode';\nimport { __cjsMetaURL as _req0} from 'querystring';\nlet _cjsExports;\nlet _parse;\nlet _resolve;\nlet _resolveObject;\nlet _format;\nlet _Url;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // Copyright Joyent, Inc. and other Node contributors.\n //\n // Permission is hereby granted, free of charge, to any person obtaining a\n // copy of this software and associated documentation files (the\n // \"Software\"), to deal in the Software without restriction, including\n // without limitation the rights to use, copy, modify, merge, publish,\n // distribute, sublicense, and/or sell copies of the Software, and to permit\n // persons to whom the Software is furnished to do so, subject to the\n // following conditions:\n //\n // The above copyright notice and this permission notice shall be included\n // in all copies or substantial portions of the Software.\n //\n // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n var punycode = require('punycode');\n\n exports.parse = urlParse;\n exports.resolve = urlResolve;\n exports.resolveObject = urlResolveObject;\n exports.format = urlFormat;\n\n exports.Url = Url;\n\n function Url() {\n   this.protocol = null;\n   this.slashes = null;\n   this.auth = null;\n   this.host = null;\n   this.port = null;\n   this.hostname = null;\n   this.hash = null;\n   this.search = null;\n   this.query = null;\n   this.pathname = null;\n   this.path = null;\n   this.href = null;\n }\n\n // Reference: RFC 3986, RFC 1808, RFC 2396\n\n // define these here so at least they only have to be\n // compiled once on the first module load.\n var protocolPattern = /^([a-z0-9.+-]+:)/i,\n     portPattern = /:[0-9]*$/,\n\n     // RFC 2396: characters reserved for delimiting URLs.\n     // We actually just auto-escape these.\n     delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n     // RFC 2396: characters not allowed for various reasons.\n     unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n     // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n     autoEscape = ['\\''].concat(unwise),\n     // Characters that are never ever allowed in a hostname.\n     // Note that any invalid chars are also handled, but these\n     // are the ones that are *expected* to be seen, so we fast-path\n     // them.\n     nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n     hostEndingChars = ['/', '?', '#'],\n     hostnameMaxLen = 255,\n     hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n     hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n     // protocols that can allow \"unsafe\" and \"unwise\" chars.\n     unsafeProtocol = {\n       'javascript': true,\n       'javascript:': true\n     },\n     // protocols that never have a hostname.\n     hostlessProtocol = {\n       'javascript': true,\n       'javascript:': true\n     },\n     // protocols that always contain a // bit.\n     slashedProtocol = {\n       'http': true,\n       'https': true,\n       'ftp': true,\n       'gopher': true,\n       'file': true,\n       'http:': true,\n       'https:': true,\n       'ftp:': true,\n       'gopher:': true,\n       'file:': true\n     },\n     querystring = require('querystring');\n\n function urlParse(url, parseQueryString, slashesDenoteHost) {\n   if (url && isObject(url) && url instanceof Url) return url;\n\n   var u = new Url;\n   u.parse(url, parseQueryString, slashesDenoteHost);\n   return u;\n }\n\n Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n   if (!isString(url)) {\n     throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n   }\n\n   var rest = url;\n\n   // trim before proceeding.\n   // This is to support parse stuff like \"  http://foo.com  \\n\"\n   rest = rest.trim();\n\n   var proto = protocolPattern.exec(rest);\n   if (proto) {\n     proto = proto[0];\n     var lowerProto = proto.toLowerCase();\n     this.protocol = lowerProto;\n     rest = rest.substr(proto.length);\n   }\n\n   // figure out if it's got a host\n   // user@server is *always* interpreted as a hostname, and url\n   // resolution will treat //foo/bar as host=foo,path=bar because that's\n   // how the browser resolves relative URLs.\n   if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n     var slashes = rest.substr(0, 2) === '//';\n     if (slashes && !(proto && hostlessProtocol[proto])) {\n       rest = rest.substr(2);\n       this.slashes = true;\n     }\n   }\n\n   if (!hostlessProtocol[proto] &&\n       (slashes || (proto && !slashedProtocol[proto]))) {\n\n     // there's a hostname.\n     // the first instance of /, ?, ;, or # ends the host.\n     //\n     // If there is an @ in the hostname, then non-host chars *are* allowed\n     // to the left of the last @ sign, unless some host-ending character\n     // comes *before* the @-sign.\n     // URLs are obnoxious.\n     //\n     // ex:\n     // http://a@b@c/ => user:a@b host:c\n     // http://a@b?@c => user:a host:c path:/?@c\n\n     // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     // Review our test case against browsers more comprehensively.\n\n     // find the first instance of any hostEndingChars\n     var hostEnd = -1;\n     for (var i = 0; i < hostEndingChars.length; i++) {\n       var hec = rest.indexOf(hostEndingChars[i]);\n       if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n         hostEnd = hec;\n     }\n\n     // at this point, either we have an explicit point where the\n     // auth portion cannot go past, or the last @ char is the decider.\n     var auth, atSign;\n     if (hostEnd === -1) {\n       // atSign can be anywhere.\n       atSign = rest.lastIndexOf('@');\n     } else {\n       // atSign must be in auth portion.\n       // http://a@b/c@d => host:b auth:a path:/c@d\n       atSign = rest.lastIndexOf('@', hostEnd);\n     }\n\n     // Now we have a portion which is definitely the auth.\n     // Pull that off.\n     if (atSign !== -1) {\n       auth = rest.slice(0, atSign);\n       rest = rest.slice(atSign + 1);\n       this.auth = decodeURIComponent(auth);\n     }\n\n     // the host is the remaining to the left of the first non-host char\n     hostEnd = -1;\n     for (var i = 0; i < nonHostChars.length; i++) {\n       var hec = rest.indexOf(nonHostChars[i]);\n       if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n         hostEnd = hec;\n     }\n     // if we still have not hit it, then the entire thing is a host.\n     if (hostEnd === -1)\n       hostEnd = rest.length;\n\n     this.host = rest.slice(0, hostEnd);\n     rest = rest.slice(hostEnd);\n\n     // pull out port.\n     this.parseHost();\n\n     // we've indicated that there is a hostname,\n     // so even if it's empty, it has to be present.\n     this.hostname = this.hostname || '';\n\n     // if hostname begins with [ and ends with ]\n     // assume that it's an IPv6 address.\n     var ipv6Hostname = this.hostname[0] === '[' &&\n         this.hostname[this.hostname.length - 1] === ']';\n\n     // validate a little.\n     if (!ipv6Hostname) {\n       var hostparts = this.hostname.split(/\\./);\n       for (var i = 0, l = hostparts.length; i < l; i++) {\n         var part = hostparts[i];\n         if (!part) continue;\n         if (!part.match(hostnamePartPattern)) {\n           var newpart = '';\n           for (var j = 0, k = part.length; j < k; j++) {\n             if (part.charCodeAt(j) > 127) {\n               // we replace non-ASCII char with a temporary placeholder\n               // we need this to make sure size of hostname is not\n               // broken by replacing non-ASCII by nothing\n               newpart += 'x';\n             } else {\n               newpart += part[j];\n             }\n           }\n           // we test again with ASCII char only\n           if (!newpart.match(hostnamePartPattern)) {\n             var validParts = hostparts.slice(0, i);\n             var notHost = hostparts.slice(i + 1);\n             var bit = part.match(hostnamePartStart);\n             if (bit) {\n               validParts.push(bit[1]);\n               notHost.unshift(bit[2]);\n             }\n             if (notHost.length) {\n               rest = '/' + notHost.join('.') + rest;\n             }\n             this.hostname = validParts.join('.');\n             break;\n           }\n         }\n       }\n     }\n\n     if (this.hostname.length > hostnameMaxLen) {\n       this.hostname = '';\n     } else {\n       // hostnames are always lower case.\n       this.hostname = this.hostname.toLowerCase();\n     }\n\n     if (!ipv6Hostname) {\n       // IDNA Support: Returns a puny coded representation of \"domain\".\n       // It only converts the part of the domain name that\n       // has non ASCII characters. I.e. it dosent matter if\n       // you call it with a domain that already is in ASCII.\n       var domainArray = this.hostname.split('.');\n       var newOut = [];\n       for (var i = 0; i < domainArray.length; ++i) {\n         var s = domainArray[i];\n         newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n             'xn--' + punycode.encode(s) : s);\n       }\n       this.hostname = newOut.join('.');\n     }\n\n     var p = this.port ? ':' + this.port : '';\n     var h = this.hostname || '';\n     this.host = h + p;\n     this.href += this.host;\n\n     // strip [ and ] from the hostname\n     // the host field still retains them, though\n     if (ipv6Hostname) {\n       this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n       if (rest[0] !== '/') {\n         rest = '/' + rest;\n       }\n     }\n   }\n\n   // now rest is set to the post-host stuff.\n   // chop off any delim chars.\n   if (!unsafeProtocol[lowerProto]) {\n\n     // First, make 100% sure that any \"autoEscape\" chars get\n     // escaped, even if encodeURIComponent doesn't think they\n     // need to be.\n     for (var i = 0, l = autoEscape.length; i < l; i++) {\n       var ae = autoEscape[i];\n       var esc = encodeURIComponent(ae);\n       if (esc === ae) {\n         esc = escape(ae);\n       }\n       rest = rest.split(ae).join(esc);\n     }\n   }\n\n\n   // chop off from the tail first.\n   var hash = rest.indexOf('#');\n   if (hash !== -1) {\n     // got a fragment string.\n     this.hash = rest.substr(hash);\n     rest = rest.slice(0, hash);\n   }\n   var qm = rest.indexOf('?');\n   if (qm !== -1) {\n     this.search = rest.substr(qm);\n     this.query = rest.substr(qm + 1);\n     if (parseQueryString) {\n       this.query = querystring.parse(this.query);\n     }\n     rest = rest.slice(0, qm);\n   } else if (parseQueryString) {\n     // no query string, but parseQueryString still requested\n     this.search = '';\n     this.query = {};\n   }\n   if (rest) this.pathname = rest;\n   if (slashedProtocol[lowerProto] &&\n       this.hostname && !this.pathname) {\n     this.pathname = '/';\n   }\n\n   //to support http.request\n   if (this.pathname || this.search) {\n     var p = this.pathname || '';\n     var s = this.search || '';\n     this.path = p + s;\n   }\n\n   // finally, reconstruct the href based on what has been validated.\n   this.href = this.format();\n   return this;\n };\n\n // format a parsed object into a url string\n function urlFormat(obj) {\n   // ensure it's an object, and not a string url.\n   // If it's an obj, this is a no-op.\n   // this way, you can call url_format() on strings\n   // to clean up potentially wonky urls.\n   if (isString(obj)) obj = urlParse(obj);\n   if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n   return obj.format();\n }\n\n Url.prototype.format = function() {\n   var auth = this.auth || '';\n   if (auth) {\n     auth = encodeURIComponent(auth);\n     auth = auth.replace(/%3A/i, ':');\n     auth += '@';\n   }\n\n   var protocol = this.protocol || '',\n       pathname = this.pathname || '',\n       hash = this.hash || '',\n       host = false,\n       query = '';\n\n   if (this.host) {\n     host = auth + this.host;\n   } else if (this.hostname) {\n     host = auth + (this.hostname.indexOf(':') === -1 ?\n         this.hostname :\n         '[' + this.hostname + ']');\n     if (this.port) {\n       host += ':' + this.port;\n     }\n   }\n\n   if (this.query &&\n       isObject(this.query) &&\n       Object.keys(this.query).length) {\n     query = querystring.stringify(this.query);\n   }\n\n   var search = this.search || (query && ('?' + query)) || '';\n\n   if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n   // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   // unless they had them to begin with.\n   if (this.slashes ||\n       (!protocol || slashedProtocol[protocol]) && host !== false) {\n     host = '//' + (host || '');\n     if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n   } else if (!host) {\n     host = '';\n   }\n\n   if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n   if (search && search.charAt(0) !== '?') search = '?' + search;\n\n   pathname = pathname.replace(/[?#]/g, function(match) {\n     return encodeURIComponent(match);\n   });\n   search = search.replace('#', '%23');\n\n   return protocol + host + pathname + search + hash;\n };\n\n function urlResolve(source, relative) {\n   return urlParse(source, false, true).resolve(relative);\n }\n\n Url.prototype.resolve = function(relative) {\n   return this.resolveObject(urlParse(relative, false, true)).format();\n };\n\n function urlResolveObject(source, relative) {\n   if (!source) return relative;\n   return urlParse(source, false, true).resolveObject(relative);\n }\n\n Url.prototype.resolveObject = function(relative) {\n   if (isString(relative)) {\n     var rel = new Url();\n     rel.parse(relative, false, true);\n     relative = rel;\n   }\n\n   var result = new Url();\n   Object.keys(this).forEach(function(k) {\n     result[k] = this[k];\n   }, this);\n\n   // hash is always overridden, no matter what.\n   // even href=\"\" will remove it.\n   result.hash = relative.hash;\n\n   // if the relative url is empty, then there's nothing left to do here.\n   if (relative.href === '') {\n     result.href = result.format();\n     return result;\n   }\n\n   // hrefs like //foo/bar always cut to the protocol.\n   if (relative.slashes && !relative.protocol) {\n     // take everything except the protocol from relative\n     Object.keys(relative).forEach(function(k) {\n       if (k !== 'protocol')\n         result[k] = relative[k];\n     });\n\n     //urlParse appends trailing / to urls like http://www.example.com\n     if (slashedProtocol[result.protocol] &&\n         result.hostname && !result.pathname) {\n       result.path = result.pathname = '/';\n     }\n\n     result.href = result.format();\n     return result;\n   }\n\n   if (relative.protocol && relative.protocol !== result.protocol) {\n     // if it's a known url protocol, then changing\n     // the protocol does weird things\n     // first, if it's not file:, then we MUST have a host,\n     // and if there was a path\n     // to begin with, then we MUST have a path.\n     // if it is file:, then the host is dropped,\n     // because that's known to be hostless.\n     // anything else is assumed to be absolute.\n     if (!slashedProtocol[relative.protocol]) {\n       Object.keys(relative).forEach(function(k) {\n         result[k] = relative[k];\n       });\n       result.href = result.format();\n       return result;\n     }\n\n     result.protocol = relative.protocol;\n     if (!relative.host && !hostlessProtocol[relative.protocol]) {\n       var relPath = (relative.pathname || '').split('/');\n       while (relPath.length && !(relative.host = relPath.shift()));\n       if (!relative.host) relative.host = '';\n       if (!relative.hostname) relative.hostname = '';\n       if (relPath[0] !== '') relPath.unshift('');\n       if (relPath.length < 2) relPath.unshift('');\n       result.pathname = relPath.join('/');\n     } else {\n       result.pathname = relative.pathname;\n     }\n     result.search = relative.search;\n     result.query = relative.query;\n     result.host = relative.host || '';\n     result.auth = relative.auth;\n     result.hostname = relative.hostname || relative.host;\n     result.port = relative.port;\n     // to support http.request\n     if (result.pathname || result.search) {\n       var p = result.pathname || '';\n       var s = result.search || '';\n       result.path = p + s;\n     }\n     result.slashes = result.slashes || relative.slashes;\n     result.href = result.format();\n     return result;\n   }\n\n   var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n       isRelAbs = (\n           relative.host ||\n           relative.pathname && relative.pathname.charAt(0) === '/'\n       ),\n       mustEndAbs = (isRelAbs || isSourceAbs ||\n                     (result.host && relative.pathname)),\n       removeAllDots = mustEndAbs,\n       srcPath = result.pathname && result.pathname.split('/') || [],\n       relPath = relative.pathname && relative.pathname.split('/') || [],\n       psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n   // if the url is a non-slashed url, then relative\n   // links like ../.. should be able\n   // to crawl up to the hostname, as well.  This is strange.\n   // result.protocol has already been set by now.\n   // Later on, put the first path part into the host field.\n   if (psychotic) {\n     result.hostname = '';\n     result.port = null;\n     if (result.host) {\n       if (srcPath[0] === '') srcPath[0] = result.host;\n       else srcPath.unshift(result.host);\n     }\n     result.host = '';\n     if (relative.protocol) {\n       relative.hostname = null;\n       relative.port = null;\n       if (relative.host) {\n         if (relPath[0] === '') relPath[0] = relative.host;\n         else relPath.unshift(relative.host);\n       }\n       relative.host = null;\n     }\n     mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n   }\n\n   if (isRelAbs) {\n     // it's absolute.\n     result.host = (relative.host || relative.host === '') ?\n                   relative.host : result.host;\n     result.hostname = (relative.hostname || relative.hostname === '') ?\n                       relative.hostname : result.hostname;\n     result.search = relative.search;\n     result.query = relative.query;\n     srcPath = relPath;\n     // fall through to the dot-handling below.\n   } else if (relPath.length) {\n     // it's relative\n     // throw away the existing file, and take the new path instead.\n     if (!srcPath) srcPath = [];\n     srcPath.pop();\n     srcPath = srcPath.concat(relPath);\n     result.search = relative.search;\n     result.query = relative.query;\n   } else if (!isNullOrUndefined(relative.search)) {\n     // just pull out the search.\n     // like href='?foo'.\n     // Put this after the other two cases because it simplifies the booleans\n     if (psychotic) {\n       result.hostname = result.host = srcPath.shift();\n       //occationaly the auth can get stuck only in host\n       //this especialy happens in cases like\n       //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                        result.host.split('@') : false;\n       if (authInHost) {\n         result.auth = authInHost.shift();\n         result.host = result.hostname = authInHost.shift();\n       }\n     }\n     result.search = relative.search;\n     result.query = relative.query;\n     //to support http.request\n     if (!isNull(result.pathname) || !isNull(result.search)) {\n       result.path = (result.pathname ? result.pathname : '') +\n                     (result.search ? result.search : '');\n     }\n     result.href = result.format();\n     return result;\n   }\n\n   if (!srcPath.length) {\n     // no path at all.  easy.\n     // we've already handled the other stuff above.\n     result.pathname = null;\n     //to support http.request\n     if (result.search) {\n       result.path = '/' + result.search;\n     } else {\n       result.path = null;\n     }\n     result.href = result.format();\n     return result;\n   }\n\n   // if a url ENDs in . or .., then it must get a trailing slash.\n   // however, if it ends in anything else non-slashy,\n   // then it must NOT get a trailing slash.\n   var last = srcPath.slice(-1)[0];\n   var hasTrailingSlash = (\n       (result.host || relative.host) && (last === '.' || last === '..') ||\n       last === '');\n\n   // strip single dots, resolve double dots to parent dir\n   // if the path tries to go above the root, `up` ends up > 0\n   var up = 0;\n   for (var i = srcPath.length; i >= 0; i--) {\n     last = srcPath[i];\n     if (last == '.') {\n       srcPath.splice(i, 1);\n     } else if (last === '..') {\n       srcPath.splice(i, 1);\n       up++;\n     } else if (up) {\n       srcPath.splice(i, 1);\n       up--;\n     }\n   }\n\n   // if the path is allowed to go above the root, restore leading ..s\n   if (!mustEndAbs && !removeAllDots) {\n     for (; up--; up) {\n       srcPath.unshift('..');\n     }\n   }\n\n   if (mustEndAbs && srcPath[0] !== '' &&\n       (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n     srcPath.unshift('');\n   }\n\n   if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n     srcPath.push('');\n   }\n\n   var isAbsolute = srcPath[0] === '' ||\n       (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n   // put the host back\n   if (psychotic) {\n     result.hostname = result.host = isAbsolute ? '' :\n                                     srcPath.length ? srcPath.shift() : '';\n     //occationaly the auth can get stuck only in host\n     //this especialy happens in cases like\n     //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                      result.host.split('@') : false;\n     if (authInHost) {\n       result.auth = authInHost.shift();\n       result.host = result.hostname = authInHost.shift();\n     }\n   }\n\n   mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n   if (mustEndAbs && !isAbsolute) {\n     srcPath.unshift('');\n   }\n\n   if (!srcPath.length) {\n     result.pathname = null;\n     result.path = null;\n   } else {\n     result.pathname = srcPath.join('/');\n   }\n\n   //to support request.http\n   if (!isNull(result.pathname) || !isNull(result.search)) {\n     result.path = (result.pathname ? result.pathname : '') +\n                   (result.search ? result.search : '');\n   }\n   result.auth = relative.auth || result.auth;\n   result.slashes = result.slashes || relative.slashes;\n   result.href = result.format();\n   return result;\n };\n\n Url.prototype.parseHost = function() {\n   var host = this.host;\n   var port = portPattern.exec(host);\n   if (port) {\n     port = port[0];\n     if (port !== ':') {\n       this.port = port.substr(1);\n     }\n     host = host.substr(0, host.length - port.length);\n   }\n   if (host) this.hostname = host;\n };\n\n function isString(arg) {\n   return typeof arg === \"string\";\n }\n\n function isObject(arg) {\n   return typeof arg === 'object' && arg !== null;\n }\n\n function isNull(arg) {\n   return arg === null;\n }\n function isNullOrUndefined(arg) {\n   return  arg == null;\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_parse = module.exports.parse;\n_resolve = module.exports.resolve;\n_resolveObject = module.exports.resolveObject;\n_format = module.exports.format;\n_Url = module.exports.Url;\n\n}, () => ({\n  'punycode': _req,\n  'querystring': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}