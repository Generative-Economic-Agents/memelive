{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/connect-contact-lens-2020-08-21.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","ListRealtimeContactAnalysisSegments","http","requestUri","input","type","required","members","InstanceId","ContactId","MaxResults","NextToken","output","Segments","member","Transcript","Id","ParticipantId","ParticipantRole","Content","BeginOffsetMillis","EndOffsetMillis","Sentiment","IssuesDetected","CharacterOffsets","BeginOffsetChar","EndOffsetChar","Categories","MatchedCategories","MatchedDetails","key","value","PointsOfInterest","shapes"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-08-21',\n    endpointPrefix: 'contact-lens',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'Amazon Connect Contact Lens',\n    serviceFullName: 'Amazon Connect Contact Lens',\n    serviceId: 'Connect Contact Lens',\n    signatureVersion: 'v4',\n    signingName: 'connect',\n    uid: 'connect-contact-lens-2020-08-21'\n  },\n  operations: {\n    ListRealtimeContactAnalysisSegments: {\n      http: {\n        requestUri: '/realtime-contact-analysis/analysis-segments'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'InstanceId',\n          'ContactId'\n        ],\n        members: {\n          InstanceId: {},\n          ContactId: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          NextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Segments'\n        ],\n        members: {\n          Segments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Transcript: {\n                  type: 'structure',\n                  required: [\n                    'Id',\n                    'ParticipantId',\n                    'ParticipantRole',\n                    'Content',\n                    'BeginOffsetMillis',\n                    'EndOffsetMillis',\n                    'Sentiment'\n                  ],\n                  members: {\n                    Id: {},\n                    ParticipantId: {},\n                    ParticipantRole: {},\n                    Content: {},\n                    BeginOffsetMillis: {\n                      type: 'integer'\n                    },\n                    EndOffsetMillis: {\n                      type: 'integer'\n                    },\n                    Sentiment: {},\n                    IssuesDetected: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        required: [\n                          'CharacterOffsets'\n                        ],\n                        members: {\n                          CharacterOffsets: {\n                            type: 'structure',\n                            required: [\n                              'BeginOffsetChar',\n                              'EndOffsetChar'\n                            ],\n                            members: {\n                              BeginOffsetChar: {\n                                type: 'integer'\n                              },\n                              EndOffsetChar: {\n                                type: 'integer'\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                Categories: {\n                  type: 'structure',\n                  required: [\n                    'MatchedCategories',\n                    'MatchedDetails'\n                  ],\n                  members: {\n                    MatchedCategories: {\n                      type: 'list',\n                      member: {}\n                    },\n                    MatchedDetails: {\n                      type: 'map',\n                      key: {},\n                      value: {\n                        type: 'structure',\n                        required: [\n                          'PointsOfInterest'\n                        ],\n                        members: {\n                          PointsOfInterest: {\n                            type: 'list',\n                            member: {\n                              type: 'structure',\n                              required: [\n                                'BeginOffsetMillis',\n                                'EndOffsetMillis'\n                              ],\n                              members: {\n                                BeginOffsetMillis: {\n                                  type: 'integer'\n                                },\n                                EndOffsetMillis: {\n                                  type: 'integer'\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    }\n  },\n  shapes: {}\n}"]}