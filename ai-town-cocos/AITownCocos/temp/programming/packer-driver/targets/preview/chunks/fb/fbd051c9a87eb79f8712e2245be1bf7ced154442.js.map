{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/mq-2017-11-27.min.json"],"names":["metadata","apiVersion","endpointPrefix","signingName","serviceFullName","serviceId","protocol","jsonVersion","uid","signatureVersion","operations","CreateBroker","http","requestUri","responseCode","input","type","members","AuthenticationStrategy","locationName","AutoMinorVersionUpgrade","BrokerName","Configuration","shape","CreatorRequestId","idempotencyToken","DeploymentMode","EncryptionOptions","EngineType","EngineVersion","HostInstanceType","LdapServerMetadata","Logs","MaintenanceWindowStartTime","PubliclyAccessible","SecurityGroups","StorageType","SubnetIds","Tags","Users","member","ConsoleAccess","Groups","Password","Username","ReplicationUser","required","DataReplicationMode","DataReplicationPrimaryBrokerArn","output","BrokerArn","BrokerId","CreateConfiguration","Name","Arn","Created","Id","LatestRevision","CreateTags","ResourceArn","location","CreateUser","DeleteBroker","method","DeleteTags","TagKeys","DeleteUser","DescribeBroker","ActionsRequired","ActionRequiredCode","ActionRequiredInfo","BrokerInstances","ConsoleURL","Endpoints","IpAddress","BrokerState","Configurations","Current","History","Pending","Audit","AuditLogGroup","General","GeneralLogGroup","PendingAuthenticationStrategy","PendingEngineVersion","PendingHostInstanceType","PendingLdapServerMetadata","PendingSecurityGroups","DataReplicationMetadata","PendingDataReplicationMetadata","PendingDataReplicationMode","DescribeBrokerEngineTypes","MaxResults","NextToken","BrokerEngineTypes","EngineVersions","DescribeBrokerInstanceOptions","BrokerInstanceOptions","AvailabilityZones","SupportedDeploymentModes","SupportedEngineVersions","DescribeConfiguration","ConfigurationId","Description","DescribeConfigurationRevision","ConfigurationRevision","Data","DescribeUser","PendingChange","ListBrokers","BrokerSummaries","ListConfigurationRevisions","Revisions","ListConfigurations","ListTags","ListUsers","Promote","Mode","RebootBroker","UpdateBroker","UpdateConfiguration","Warnings","AttributeName","ElementName","Reason","UpdateUser","shapes","S5","Revision","S8","KmsKeyId","UseAwsOwnedKey","Sa","Hosts","RoleBase","RoleName","RoleSearchMatching","RoleSearchSubtree","ServiceAccountPassword","ServiceAccountUsername","UserBase","UserRoleName","UserSearchMatching","UserSearchSubtree","Sb","Sc","Sd","DayOfWeek","TimeOfDay","TimeZone","Sg","key","value","Sn","timestampFormat","So","S16","S19","S1c","DataReplicationCounterpart","Region","DataReplicationRole"],"mappings":"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","sourcesContent":["export default {\n  metadata: {\n    apiVersion: '2017-11-27',\n    endpointPrefix: 'mq',\n    signingName: 'mq',\n    serviceFullName: 'AmazonMQ',\n    serviceId: 'mq',\n    protocol: 'rest-json',\n    jsonVersion: '1.1',\n    uid: 'mq-2017-11-27',\n    signatureVersion: 'v4'\n  },\n  operations: {\n    CreateBroker: {\n      http: {\n        requestUri: '/v1/brokers',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AuthenticationStrategy: {\n            locationName: 'authenticationStrategy'\n          },\n          AutoMinorVersionUpgrade: {\n            locationName: 'autoMinorVersionUpgrade',\n            type: 'boolean'\n          },\n          BrokerName: {\n            locationName: 'brokerName'\n          },\n          Configuration: {\n            shape: 'S5',\n            locationName: 'configuration'\n          },\n          CreatorRequestId: {\n            locationName: 'creatorRequestId',\n            idempotencyToken: true\n          },\n          DeploymentMode: {\n            locationName: 'deploymentMode'\n          },\n          EncryptionOptions: {\n            shape: 'S8',\n            locationName: 'encryptionOptions'\n          },\n          EngineType: {\n            locationName: 'engineType'\n          },\n          EngineVersion: {\n            locationName: 'engineVersion'\n          },\n          HostInstanceType: {\n            locationName: 'hostInstanceType'\n          },\n          LdapServerMetadata: {\n            shape: 'Sa',\n            locationName: 'ldapServerMetadata'\n          },\n          Logs: {\n            shape: 'Sc',\n            locationName: 'logs'\n          },\n          MaintenanceWindowStartTime: {\n            shape: 'Sd',\n            locationName: 'maintenanceWindowStartTime'\n          },\n          PubliclyAccessible: {\n            locationName: 'publiclyAccessible',\n            type: 'boolean'\n          },\n          SecurityGroups: {\n            shape: 'Sb',\n            locationName: 'securityGroups'\n          },\n          StorageType: {\n            locationName: 'storageType'\n          },\n          SubnetIds: {\n            shape: 'Sb',\n            locationName: 'subnetIds'\n          },\n          Tags: {\n            shape: 'Sg',\n            locationName: 'tags'\n          },\n          Users: {\n            locationName: 'users',\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ConsoleAccess: {\n                  locationName: 'consoleAccess',\n                  type: 'boolean'\n                },\n                Groups: {\n                  shape: 'Sb',\n                  locationName: 'groups'\n                },\n                Password: {\n                  locationName: 'password'\n                },\n                Username: {\n                  locationName: 'username'\n                },\n                ReplicationUser: {\n                  locationName: 'replicationUser',\n                  type: 'boolean'\n                }\n              },\n              required: [\n                'Username',\n                'Password'\n              ]\n            }\n          },\n          DataReplicationMode: {\n            locationName: 'dataReplicationMode'\n          },\n          DataReplicationPrimaryBrokerArn: {\n            locationName: 'dataReplicationPrimaryBrokerArn'\n          }\n        },\n        required: [\n          'EngineVersion',\n          'HostInstanceType',\n          'AutoMinorVersionUpgrade',\n          'Users',\n          'BrokerName',\n          'DeploymentMode',\n          'EngineType',\n          'PubliclyAccessible'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BrokerArn: {\n            locationName: 'brokerArn'\n          },\n          BrokerId: {\n            locationName: 'brokerId'\n          }\n        }\n      }\n    },\n    CreateConfiguration: {\n      http: {\n        requestUri: '/v1/configurations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AuthenticationStrategy: {\n            locationName: 'authenticationStrategy'\n          },\n          EngineType: {\n            locationName: 'engineType'\n          },\n          EngineVersion: {\n            locationName: 'engineVersion'\n          },\n          Name: {\n            locationName: 'name'\n          },\n          Tags: {\n            shape: 'Sg',\n            locationName: 'tags'\n          }\n        },\n        required: [\n          'EngineVersion',\n          'EngineType',\n          'Name'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Arn: {\n            locationName: 'arn'\n          },\n          AuthenticationStrategy: {\n            locationName: 'authenticationStrategy'\n          },\n          Created: {\n            shape: 'Sn',\n            locationName: 'created'\n          },\n          Id: {\n            locationName: 'id'\n          },\n          LatestRevision: {\n            shape: 'So',\n            locationName: 'latestRevision'\n          },\n          Name: {\n            locationName: 'name'\n          }\n        }\n      }\n    },\n    CreateTags: {\n      http: {\n        requestUri: '/v1/tags/{resource-arn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resource-arn'\n          },\n          Tags: {\n            shape: 'Sg',\n            locationName: 'tags'\n          }\n        },\n        required: [\n          'ResourceArn'\n        ]\n      }\n    },\n    CreateUser: {\n      http: {\n        requestUri: '/v1/brokers/{broker-id}/users/{username}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            location: 'uri',\n            locationName: 'broker-id'\n          },\n          ConsoleAccess: {\n            locationName: 'consoleAccess',\n            type: 'boolean'\n          },\n          Groups: {\n            shape: 'Sb',\n            locationName: 'groups'\n          },\n          Password: {\n            locationName: 'password'\n          },\n          Username: {\n            location: 'uri',\n            locationName: 'username'\n          },\n          ReplicationUser: {\n            locationName: 'replicationUser',\n            type: 'boolean'\n          }\n        },\n        required: [\n          'Username',\n          'BrokerId',\n          'Password'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteBroker: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/brokers/{broker-id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            location: 'uri',\n            locationName: 'broker-id'\n          }\n        },\n        required: [\n          'BrokerId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            locationName: 'brokerId'\n          }\n        }\n      }\n    },\n    DeleteTags: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/tags/{resource-arn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resource-arn'\n          },\n          TagKeys: {\n            shape: 'Sb',\n            location: 'querystring',\n            locationName: 'tagKeys'\n          }\n        },\n        required: [\n          'TagKeys',\n          'ResourceArn'\n        ]\n      }\n    },\n    DeleteUser: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/brokers/{broker-id}/users/{username}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            location: 'uri',\n            locationName: 'broker-id'\n          },\n          Username: {\n            location: 'uri',\n            locationName: 'username'\n          }\n        },\n        required: [\n          'Username',\n          'BrokerId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DescribeBroker: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/brokers/{broker-id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            location: 'uri',\n            locationName: 'broker-id'\n          }\n        },\n        required: [\n          'BrokerId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ActionsRequired: {\n            locationName: 'actionsRequired',\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ActionRequiredCode: {\n                  locationName: 'actionRequiredCode'\n                },\n                ActionRequiredInfo: {\n                  locationName: 'actionRequiredInfo'\n                }\n              }\n            }\n          },\n          AuthenticationStrategy: {\n            locationName: 'authenticationStrategy'\n          },\n          AutoMinorVersionUpgrade: {\n            locationName: 'autoMinorVersionUpgrade',\n            type: 'boolean'\n          },\n          BrokerArn: {\n            locationName: 'brokerArn'\n          },\n          BrokerId: {\n            locationName: 'brokerId'\n          },\n          BrokerInstances: {\n            locationName: 'brokerInstances',\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ConsoleURL: {\n                  locationName: 'consoleURL'\n                },\n                Endpoints: {\n                  shape: 'Sb',\n                  locationName: 'endpoints'\n                },\n                IpAddress: {\n                  locationName: 'ipAddress'\n                }\n              }\n            }\n          },\n          BrokerName: {\n            locationName: 'brokerName'\n          },\n          BrokerState: {\n            locationName: 'brokerState'\n          },\n          Configurations: {\n            locationName: 'configurations',\n            type: 'structure',\n            members: {\n              Current: {\n                shape: 'S5',\n                locationName: 'current'\n              },\n              History: {\n                locationName: 'history',\n                type: 'list',\n                member: {\n                  shape: 'S5'\n                }\n              },\n              Pending: {\n                shape: 'S5',\n                locationName: 'pending'\n              }\n            }\n          },\n          Created: {\n            shape: 'Sn',\n            locationName: 'created'\n          },\n          DeploymentMode: {\n            locationName: 'deploymentMode'\n          },\n          EncryptionOptions: {\n            shape: 'S8',\n            locationName: 'encryptionOptions'\n          },\n          EngineType: {\n            locationName: 'engineType'\n          },\n          EngineVersion: {\n            locationName: 'engineVersion'\n          },\n          HostInstanceType: {\n            locationName: 'hostInstanceType'\n          },\n          LdapServerMetadata: {\n            shape: 'S16',\n            locationName: 'ldapServerMetadata'\n          },\n          Logs: {\n            locationName: 'logs',\n            type: 'structure',\n            members: {\n              Audit: {\n                locationName: 'audit',\n                type: 'boolean'\n              },\n              AuditLogGroup: {\n                locationName: 'auditLogGroup'\n              },\n              General: {\n                locationName: 'general',\n                type: 'boolean'\n              },\n              GeneralLogGroup: {\n                locationName: 'generalLogGroup'\n              },\n              Pending: {\n                locationName: 'pending',\n                type: 'structure',\n                members: {\n                  Audit: {\n                    locationName: 'audit',\n                    type: 'boolean'\n                  },\n                  General: {\n                    locationName: 'general',\n                    type: 'boolean'\n                  }\n                }\n              }\n            },\n            required: [\n              'GeneralLogGroup',\n              'General'\n            ]\n          },\n          MaintenanceWindowStartTime: {\n            shape: 'Sd',\n            locationName: 'maintenanceWindowStartTime'\n          },\n          PendingAuthenticationStrategy: {\n            locationName: 'pendingAuthenticationStrategy'\n          },\n          PendingEngineVersion: {\n            locationName: 'pendingEngineVersion'\n          },\n          PendingHostInstanceType: {\n            locationName: 'pendingHostInstanceType'\n          },\n          PendingLdapServerMetadata: {\n            shape: 'S16',\n            locationName: 'pendingLdapServerMetadata'\n          },\n          PendingSecurityGroups: {\n            shape: 'Sb',\n            locationName: 'pendingSecurityGroups'\n          },\n          PubliclyAccessible: {\n            locationName: 'publiclyAccessible',\n            type: 'boolean'\n          },\n          SecurityGroups: {\n            shape: 'Sb',\n            locationName: 'securityGroups'\n          },\n          StorageType: {\n            locationName: 'storageType'\n          },\n          SubnetIds: {\n            shape: 'Sb',\n            locationName: 'subnetIds'\n          },\n          Tags: {\n            shape: 'Sg',\n            locationName: 'tags'\n          },\n          Users: {\n            shape: 'S19',\n            locationName: 'users'\n          },\n          DataReplicationMetadata: {\n            shape: 'S1c',\n            locationName: 'dataReplicationMetadata'\n          },\n          DataReplicationMode: {\n            locationName: 'dataReplicationMode'\n          },\n          PendingDataReplicationMetadata: {\n            shape: 'S1c',\n            locationName: 'pendingDataReplicationMetadata'\n          },\n          PendingDataReplicationMode: {\n            locationName: 'pendingDataReplicationMode'\n          }\n        }\n      }\n    },\n    DescribeBrokerEngineTypes: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/broker-engine-types',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          EngineType: {\n            location: 'querystring',\n            locationName: 'engineType'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BrokerEngineTypes: {\n            locationName: 'brokerEngineTypes',\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                EngineType: {\n                  locationName: 'engineType'\n                },\n                EngineVersions: {\n                  locationName: 'engineVersions',\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      Name: {\n                        locationName: 'name'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          MaxResults: {\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            locationName: 'nextToken'\n          }\n        }\n      }\n    },\n    DescribeBrokerInstanceOptions: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/broker-instance-options',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          EngineType: {\n            location: 'querystring',\n            locationName: 'engineType'\n          },\n          HostInstanceType: {\n            location: 'querystring',\n            locationName: 'hostInstanceType'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          StorageType: {\n            location: 'querystring',\n            locationName: 'storageType'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BrokerInstanceOptions: {\n            locationName: 'brokerInstanceOptions',\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AvailabilityZones: {\n                  locationName: 'availabilityZones',\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      Name: {\n                        locationName: 'name'\n                      }\n                    }\n                  }\n                },\n                EngineType: {\n                  locationName: 'engineType'\n                },\n                HostInstanceType: {\n                  locationName: 'hostInstanceType'\n                },\n                StorageType: {\n                  locationName: 'storageType'\n                },\n                SupportedDeploymentModes: {\n                  locationName: 'supportedDeploymentModes',\n                  type: 'list',\n                  member: {}\n                },\n                SupportedEngineVersions: {\n                  shape: 'Sb',\n                  locationName: 'supportedEngineVersions'\n                }\n              }\n            }\n          },\n          MaxResults: {\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            locationName: 'nextToken'\n          }\n        }\n      }\n    },\n    DescribeConfiguration: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/configurations/{configuration-id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ConfigurationId: {\n            location: 'uri',\n            locationName: 'configuration-id'\n          }\n        },\n        required: [\n          'ConfigurationId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Arn: {\n            locationName: 'arn'\n          },\n          AuthenticationStrategy: {\n            locationName: 'authenticationStrategy'\n          },\n          Created: {\n            shape: 'Sn',\n            locationName: 'created'\n          },\n          Description: {\n            locationName: 'description'\n          },\n          EngineType: {\n            locationName: 'engineType'\n          },\n          EngineVersion: {\n            locationName: 'engineVersion'\n          },\n          Id: {\n            locationName: 'id'\n          },\n          LatestRevision: {\n            shape: 'So',\n            locationName: 'latestRevision'\n          },\n          Name: {\n            locationName: 'name'\n          },\n          Tags: {\n            shape: 'Sg',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    DescribeConfigurationRevision: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/configurations/{configuration-id}/revisions/{configuration-revision}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ConfigurationId: {\n            location: 'uri',\n            locationName: 'configuration-id'\n          },\n          ConfigurationRevision: {\n            location: 'uri',\n            locationName: 'configuration-revision'\n          }\n        },\n        required: [\n          'ConfigurationRevision',\n          'ConfigurationId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConfigurationId: {\n            locationName: 'configurationId'\n          },\n          Created: {\n            shape: 'Sn',\n            locationName: 'created'\n          },\n          Data: {\n            locationName: 'data'\n          },\n          Description: {\n            locationName: 'description'\n          }\n        }\n      }\n    },\n    DescribeUser: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/brokers/{broker-id}/users/{username}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            location: 'uri',\n            locationName: 'broker-id'\n          },\n          Username: {\n            location: 'uri',\n            locationName: 'username'\n          }\n        },\n        required: [\n          'Username',\n          'BrokerId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            locationName: 'brokerId'\n          },\n          ConsoleAccess: {\n            locationName: 'consoleAccess',\n            type: 'boolean'\n          },\n          Groups: {\n            shape: 'Sb',\n            locationName: 'groups'\n          },\n          Pending: {\n            locationName: 'pending',\n            type: 'structure',\n            members: {\n              ConsoleAccess: {\n                locationName: 'consoleAccess',\n                type: 'boolean'\n              },\n              Groups: {\n                shape: 'Sb',\n                locationName: 'groups'\n              },\n              PendingChange: {\n                locationName: 'pendingChange'\n              }\n            },\n            required: [\n              'PendingChange'\n            ]\n          },\n          Username: {\n            locationName: 'username'\n          },\n          ReplicationUser: {\n            locationName: 'replicationUser',\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    ListBrokers: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/brokers',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BrokerSummaries: {\n            locationName: 'brokerSummaries',\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                BrokerArn: {\n                  locationName: 'brokerArn'\n                },\n                BrokerId: {\n                  locationName: 'brokerId'\n                },\n                BrokerName: {\n                  locationName: 'brokerName'\n                },\n                BrokerState: {\n                  locationName: 'brokerState'\n                },\n                Created: {\n                  shape: 'Sn',\n                  locationName: 'created'\n                },\n                DeploymentMode: {\n                  locationName: 'deploymentMode'\n                },\n                EngineType: {\n                  locationName: 'engineType'\n                },\n                HostInstanceType: {\n                  locationName: 'hostInstanceType'\n                }\n              },\n              required: [\n                'DeploymentMode',\n                'EngineType'\n              ]\n            }\n          },\n          NextToken: {\n            locationName: 'nextToken'\n          }\n        }\n      }\n    },\n    ListConfigurationRevisions: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/configurations/{configuration-id}/revisions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ConfigurationId: {\n            location: 'uri',\n            locationName: 'configuration-id'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        },\n        required: [\n          'ConfigurationId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ConfigurationId: {\n            locationName: 'configurationId'\n          },\n          MaxResults: {\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            locationName: 'nextToken'\n          },\n          Revisions: {\n            locationName: 'revisions',\n            type: 'list',\n            member: {\n              shape: 'So'\n            }\n          }\n        }\n      }\n    },\n    ListConfigurations: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/configurations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Configurations: {\n            locationName: 'configurations',\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Arn: {\n                  locationName: 'arn'\n                },\n                AuthenticationStrategy: {\n                  locationName: 'authenticationStrategy'\n                },\n                Created: {\n                  shape: 'Sn',\n                  locationName: 'created'\n                },\n                Description: {\n                  locationName: 'description'\n                },\n                EngineType: {\n                  locationName: 'engineType'\n                },\n                EngineVersion: {\n                  locationName: 'engineVersion'\n                },\n                Id: {\n                  locationName: 'id'\n                },\n                LatestRevision: {\n                  shape: 'So',\n                  locationName: 'latestRevision'\n                },\n                Name: {\n                  locationName: 'name'\n                },\n                Tags: {\n                  shape: 'Sg',\n                  locationName: 'tags'\n                }\n              },\n              required: [\n                'Description',\n                'EngineVersion',\n                'LatestRevision',\n                'AuthenticationStrategy',\n                'EngineType',\n                'Id',\n                'Arn',\n                'Name',\n                'Created'\n              ]\n            }\n          },\n          MaxResults: {\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            locationName: 'nextToken'\n          }\n        }\n      }\n    },\n    ListTags: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/tags/{resource-arn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resource-arn'\n          }\n        },\n        required: [\n          'ResourceArn'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Sg',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    ListUsers: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/brokers/{broker-id}/users',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            location: 'uri',\n            locationName: 'broker-id'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        },\n        required: [\n          'BrokerId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            locationName: 'brokerId'\n          },\n          MaxResults: {\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            locationName: 'nextToken'\n          },\n          Users: {\n            shape: 'S19',\n            locationName: 'users'\n          }\n        }\n      }\n    },\n    Promote: {\n      http: {\n        requestUri: '/v1/brokers/{broker-id}/promote',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            location: 'uri',\n            locationName: 'broker-id'\n          },\n          Mode: {\n            locationName: 'mode'\n          }\n        },\n        required: [\n          'BrokerId',\n          'Mode'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            locationName: 'brokerId'\n          }\n        }\n      }\n    },\n    RebootBroker: {\n      http: {\n        requestUri: '/v1/brokers/{broker-id}/reboot',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            location: 'uri',\n            locationName: 'broker-id'\n          }\n        },\n        required: [\n          'BrokerId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateBroker: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/brokers/{broker-id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          AuthenticationStrategy: {\n            locationName: 'authenticationStrategy'\n          },\n          AutoMinorVersionUpgrade: {\n            locationName: 'autoMinorVersionUpgrade',\n            type: 'boolean'\n          },\n          BrokerId: {\n            location: 'uri',\n            locationName: 'broker-id'\n          },\n          Configuration: {\n            shape: 'S5',\n            locationName: 'configuration'\n          },\n          EngineVersion: {\n            locationName: 'engineVersion'\n          },\n          HostInstanceType: {\n            locationName: 'hostInstanceType'\n          },\n          LdapServerMetadata: {\n            shape: 'Sa',\n            locationName: 'ldapServerMetadata'\n          },\n          Logs: {\n            shape: 'Sc',\n            locationName: 'logs'\n          },\n          MaintenanceWindowStartTime: {\n            shape: 'Sd',\n            locationName: 'maintenanceWindowStartTime'\n          },\n          SecurityGroups: {\n            shape: 'Sb',\n            locationName: 'securityGroups'\n          },\n          DataReplicationMode: {\n            locationName: 'dataReplicationMode'\n          }\n        },\n        required: [\n          'BrokerId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AuthenticationStrategy: {\n            locationName: 'authenticationStrategy'\n          },\n          AutoMinorVersionUpgrade: {\n            locationName: 'autoMinorVersionUpgrade',\n            type: 'boolean'\n          },\n          BrokerId: {\n            locationName: 'brokerId'\n          },\n          Configuration: {\n            shape: 'S5',\n            locationName: 'configuration'\n          },\n          EngineVersion: {\n            locationName: 'engineVersion'\n          },\n          HostInstanceType: {\n            locationName: 'hostInstanceType'\n          },\n          LdapServerMetadata: {\n            shape: 'S16',\n            locationName: 'ldapServerMetadata'\n          },\n          Logs: {\n            shape: 'Sc',\n            locationName: 'logs'\n          },\n          MaintenanceWindowStartTime: {\n            shape: 'Sd',\n            locationName: 'maintenanceWindowStartTime'\n          },\n          SecurityGroups: {\n            shape: 'Sb',\n            locationName: 'securityGroups'\n          },\n          DataReplicationMetadata: {\n            shape: 'S1c',\n            locationName: 'dataReplicationMetadata'\n          },\n          DataReplicationMode: {\n            locationName: 'dataReplicationMode'\n          },\n          PendingDataReplicationMetadata: {\n            shape: 'S1c',\n            locationName: 'pendingDataReplicationMetadata'\n          },\n          PendingDataReplicationMode: {\n            locationName: 'pendingDataReplicationMode'\n          }\n        }\n      }\n    },\n    UpdateConfiguration: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/configurations/{configuration-id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ConfigurationId: {\n            location: 'uri',\n            locationName: 'configuration-id'\n          },\n          Data: {\n            locationName: 'data'\n          },\n          Description: {\n            locationName: 'description'\n          }\n        },\n        required: [\n          'ConfigurationId',\n          'Data'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Arn: {\n            locationName: 'arn'\n          },\n          Created: {\n            shape: 'Sn',\n            locationName: 'created'\n          },\n          Id: {\n            locationName: 'id'\n          },\n          LatestRevision: {\n            shape: 'So',\n            locationName: 'latestRevision'\n          },\n          Name: {\n            locationName: 'name'\n          },\n          Warnings: {\n            locationName: 'warnings',\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AttributeName: {\n                  locationName: 'attributeName'\n                },\n                ElementName: {\n                  locationName: 'elementName'\n                },\n                Reason: {\n                  locationName: 'reason'\n                }\n              },\n              required: [\n                'Reason'\n              ]\n            }\n          }\n        }\n      }\n    },\n    UpdateUser: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/brokers/{broker-id}/users/{username}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          BrokerId: {\n            location: 'uri',\n            locationName: 'broker-id'\n          },\n          ConsoleAccess: {\n            locationName: 'consoleAccess',\n            type: 'boolean'\n          },\n          Groups: {\n            shape: 'Sb',\n            locationName: 'groups'\n          },\n          Password: {\n            locationName: 'password'\n          },\n          Username: {\n            location: 'uri',\n            locationName: 'username'\n          },\n          ReplicationUser: {\n            locationName: 'replicationUser',\n            type: 'boolean'\n          }\n        },\n        required: [\n          'Username',\n          'BrokerId'\n        ]\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'structure',\n      members: {\n        Id: {\n          locationName: 'id'\n        },\n        Revision: {\n          locationName: 'revision',\n          type: 'integer'\n        }\n      },\n      required: [\n        'Id'\n      ]\n    },\n    S8: {\n      type: 'structure',\n      members: {\n        KmsKeyId: {\n          locationName: 'kmsKeyId'\n        },\n        UseAwsOwnedKey: {\n          locationName: 'useAwsOwnedKey',\n          type: 'boolean'\n        }\n      },\n      required: [\n        'UseAwsOwnedKey'\n      ]\n    },\n    Sa: {\n      type: 'structure',\n      members: {\n        Hosts: {\n          shape: 'Sb',\n          locationName: 'hosts'\n        },\n        RoleBase: {\n          locationName: 'roleBase'\n        },\n        RoleName: {\n          locationName: 'roleName'\n        },\n        RoleSearchMatching: {\n          locationName: 'roleSearchMatching'\n        },\n        RoleSearchSubtree: {\n          locationName: 'roleSearchSubtree',\n          type: 'boolean'\n        },\n        ServiceAccountPassword: {\n          locationName: 'serviceAccountPassword'\n        },\n        ServiceAccountUsername: {\n          locationName: 'serviceAccountUsername'\n        },\n        UserBase: {\n          locationName: 'userBase'\n        },\n        UserRoleName: {\n          locationName: 'userRoleName'\n        },\n        UserSearchMatching: {\n          locationName: 'userSearchMatching'\n        },\n        UserSearchSubtree: {\n          locationName: 'userSearchSubtree',\n          type: 'boolean'\n        }\n      },\n      required: [\n        'Hosts',\n        'UserSearchMatching',\n        'UserBase',\n        'RoleSearchMatching',\n        'ServiceAccountUsername',\n        'RoleBase',\n        'ServiceAccountPassword'\n      ]\n    },\n    Sb: {\n      type: 'list',\n      member: {}\n    },\n    Sc: {\n      type: 'structure',\n      members: {\n        Audit: {\n          locationName: 'audit',\n          type: 'boolean'\n        },\n        General: {\n          locationName: 'general',\n          type: 'boolean'\n        }\n      }\n    },\n    Sd: {\n      type: 'structure',\n      members: {\n        DayOfWeek: {\n          locationName: 'dayOfWeek'\n        },\n        TimeOfDay: {\n          locationName: 'timeOfDay'\n        },\n        TimeZone: {\n          locationName: 'timeZone'\n        }\n      },\n      required: [\n        'TimeOfDay',\n        'DayOfWeek'\n      ]\n    },\n    Sg: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sn: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    So: {\n      type: 'structure',\n      members: {\n        Created: {\n          shape: 'Sn',\n          locationName: 'created'\n        },\n        Description: {\n          locationName: 'description'\n        },\n        Revision: {\n          locationName: 'revision',\n          type: 'integer'\n        }\n      },\n      required: [\n        'Revision',\n        'Created'\n      ]\n    },\n    S16: {\n      type: 'structure',\n      members: {\n        Hosts: {\n          shape: 'Sb',\n          locationName: 'hosts'\n        },\n        RoleBase: {\n          locationName: 'roleBase'\n        },\n        RoleName: {\n          locationName: 'roleName'\n        },\n        RoleSearchMatching: {\n          locationName: 'roleSearchMatching'\n        },\n        RoleSearchSubtree: {\n          locationName: 'roleSearchSubtree',\n          type: 'boolean'\n        },\n        ServiceAccountUsername: {\n          locationName: 'serviceAccountUsername'\n        },\n        UserBase: {\n          locationName: 'userBase'\n        },\n        UserRoleName: {\n          locationName: 'userRoleName'\n        },\n        UserSearchMatching: {\n          locationName: 'userSearchMatching'\n        },\n        UserSearchSubtree: {\n          locationName: 'userSearchSubtree',\n          type: 'boolean'\n        }\n      },\n      required: [\n        'Hosts',\n        'UserSearchMatching',\n        'UserBase',\n        'RoleSearchMatching',\n        'ServiceAccountUsername',\n        'RoleBase'\n      ]\n    },\n    S19: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          PendingChange: {\n            locationName: 'pendingChange'\n          },\n          Username: {\n            locationName: 'username'\n          }\n        },\n        required: [\n          'Username'\n        ]\n      }\n    },\n    S1c: {\n      type: 'structure',\n      members: {\n        DataReplicationCounterpart: {\n          locationName: 'dataReplicationCounterpart',\n          type: 'structure',\n          members: {\n            BrokerId: {\n              locationName: 'brokerId'\n            },\n            Region: {\n              locationName: 'region'\n            }\n          },\n          required: [\n            'BrokerId',\n            'Region'\n          ]\n        },\n        DataReplicationRole: {\n          locationName: 'dataReplicationRole'\n        }\n      },\n      required: [\n        'DataReplicationRole'\n      ]\n    }\n  }\n}"]}