{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/vpc-lattice-2022-11-30.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","BatchUpdateRule","http","method","requestUri","responseCode","input","type","required","members","listenerIdentifier","location","locationName","rules","member","action","shape","match","priority","ruleIdentifier","serviceIdentifier","output","successful","arn","id","isDefault","name","unsuccessful","failureCode","failureMessage","idempotent","CreateAccessLogSubscription","clientToken","idempotencyToken","destinationArn","resourceIdentifier","tags","resourceArn","resourceId","CreateListener","defaultAction","port","serviceArn","CreateRule","CreateService","authType","certificateArn","customDomainName","dnsEntry","status","CreateServiceNetwork","CreateServiceNetworkServiceAssociation","serviceNetworkIdentifier","createdBy","CreateServiceNetworkVpcAssociation","securityGroupIds","vpcIdentifier","CreateTargetGroup","config","DeleteAccessLogSubscription","accessLogSubscriptionIdentifier","DeleteAuthPolicy","DeleteListener","DeleteResourcePolicy","DeleteRule","DeleteService","DeleteServiceNetwork","DeleteServiceNetworkServiceAssociation","serviceNetworkServiceAssociationIdentifier","DeleteServiceNetworkVpcAssociation","serviceNetworkVpcAssociationIdentifier","DeleteTargetGroup","targetGroupIdentifier","DeregisterTargets","targets","GetAccessLogSubscription","createdAt","lastUpdatedAt","GetAuthPolicy","policy","state","GetListener","GetResourcePolicy","GetRule","GetService","GetServiceNetwork","numberOfAssociatedServices","numberOfAssociatedVPCs","GetServiceNetworkServiceAssociation","serviceName","serviceNetworkArn","serviceNetworkId","serviceNetworkName","GetServiceNetworkVpcAssociation","vpcId","GetTargetGroup","serviceArns","ListAccessLogSubscriptions","maxResults","nextToken","items","ListListeners","ListRules","ListServiceNetworkServiceAssociations","ListServiceNetworkVpcAssociations","ListServiceNetworks","ListServices","ListTagsForResource","ListTargetGroups","targetGroupType","ipAddressType","lambdaEventStructureVersion","ListTargets","reasonCode","PutAuthPolicy","PutResourcePolicy","RegisterTargets","TagResource","UntagResource","tagKeys","UpdateAccessLogSubscription","UpdateListener","UpdateRule","UpdateService","UpdateServiceNetwork","UpdateServiceNetworkVpcAssociation","UpdateTargetGroup","healthCheck","shapes","S5","fixedResponse","statusCode","forward","targetGroups","weight","union","Sd","httpMatch","headerMatches","caseSensitive","contains","exact","prefix","pathMatch","S19","key","value","S1y","domainName","hostedZoneId","S2k","S2n","protocolVersion","S2o","enabled","healthCheckIntervalSeconds","healthCheckTimeoutSeconds","healthyThresholdCount","matcher","httpCode","path","unhealthyThresholdCount","S3w","S3z","S40","S44","timestampFormat","S4r"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2022-11-30',\n    endpointPrefix: 'vpc-lattice',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon VPC Lattice',\n    serviceId: 'VPC Lattice',\n    signatureVersion: 'v4',\n    signingName: 'vpc-lattice',\n    uid: 'vpc-lattice-2022-11-30'\n  },\n  operations: {\n    BatchUpdateRule: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/services/{serviceIdentifier}/listeners/{listenerIdentifier}/rules',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'listenerIdentifier',\n          'rules',\n          'serviceIdentifier'\n        ],\n        members: {\n          listenerIdentifier: {\n            location: 'uri',\n            locationName: 'listenerIdentifier'\n          },\n          rules: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'ruleIdentifier'\n              ],\n              members: {\n                action: {\n                  shape: 'S5'\n                },\n                match: {\n                  shape: 'Sd'\n                },\n                priority: {\n                  type: 'integer'\n                },\n                ruleIdentifier: {}\n              }\n            }\n          },\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          successful: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                action: {\n                  shape: 'S5'\n                },\n                arn: {},\n                id: {},\n                isDefault: {\n                  type: 'boolean'\n                },\n                match: {\n                  shape: 'Sd'\n                },\n                name: {},\n                priority: {\n                  type: 'integer'\n                }\n              }\n            }\n          },\n          unsuccessful: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                failureCode: {},\n                failureMessage: {},\n                ruleIdentifier: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateAccessLogSubscription: {\n      http: {\n        requestUri: '/accesslogsubscriptions',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'destinationArn',\n          'resourceIdentifier'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          destinationArn: {},\n          resourceIdentifier: {},\n          tags: {\n            shape: 'S19'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'destinationArn',\n          'id',\n          'resourceArn',\n          'resourceId'\n        ],\n        members: {\n          arn: {},\n          destinationArn: {},\n          id: {},\n          resourceArn: {},\n          resourceId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateListener: {\n      http: {\n        requestUri: '/services/{serviceIdentifier}/listeners',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'defaultAction',\n          'name',\n          'protocol',\n          'serviceIdentifier'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          defaultAction: {\n            shape: 'S5'\n          },\n          name: {},\n          port: {\n            type: 'integer'\n          },\n          protocol: {},\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          },\n          tags: {\n            shape: 'S19'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          defaultAction: {\n            shape: 'S5'\n          },\n          id: {},\n          name: {},\n          port: {\n            type: 'integer'\n          },\n          protocol: {},\n          serviceArn: {},\n          serviceId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateRule: {\n      http: {\n        requestUri: '/services/{serviceIdentifier}/listeners/{listenerIdentifier}/rules',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'action',\n          'listenerIdentifier',\n          'match',\n          'name',\n          'priority',\n          'serviceIdentifier'\n        ],\n        members: {\n          action: {\n            shape: 'S5'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          listenerIdentifier: {\n            location: 'uri',\n            locationName: 'listenerIdentifier'\n          },\n          match: {\n            shape: 'Sd'\n          },\n          name: {},\n          priority: {\n            type: 'integer'\n          },\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          },\n          tags: {\n            shape: 'S19'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          action: {\n            shape: 'S5'\n          },\n          arn: {},\n          id: {},\n          match: {\n            shape: 'Sd'\n          },\n          name: {},\n          priority: {\n            type: 'integer'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateService: {\n      http: {\n        requestUri: '/services',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          authType: {},\n          certificateArn: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          customDomainName: {},\n          name: {},\n          tags: {\n            shape: 'S19'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          authType: {},\n          certificateArn: {},\n          customDomainName: {},\n          dnsEntry: {\n            shape: 'S1y'\n          },\n          id: {},\n          name: {},\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateServiceNetwork: {\n      http: {\n        requestUri: '/servicenetworks',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          authType: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          name: {},\n          tags: {\n            shape: 'S19'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          authType: {},\n          id: {},\n          name: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateServiceNetworkServiceAssociation: {\n      http: {\n        requestUri: '/servicenetworkserviceassociations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceIdentifier',\n          'serviceNetworkIdentifier'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          serviceIdentifier: {},\n          serviceNetworkIdentifier: {},\n          tags: {\n            shape: 'S19'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createdBy: {},\n          customDomainName: {},\n          dnsEntry: {\n            shape: 'S1y'\n          },\n          id: {},\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateServiceNetworkVpcAssociation: {\n      http: {\n        requestUri: '/servicenetworkvpcassociations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceNetworkIdentifier',\n          'vpcIdentifier'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          securityGroupIds: {\n            type: 'list',\n            member: {}\n          },\n          serviceNetworkIdentifier: {},\n          tags: {\n            shape: 'S19'\n          },\n          vpcIdentifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createdBy: {},\n          id: {},\n          securityGroupIds: {\n            shape: 'S2k'\n          },\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateTargetGroup: {\n      http: {\n        requestUri: '/targetgroups',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'type'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          config: {\n            shape: 'S2n'\n          },\n          name: {},\n          tags: {\n            shape: 'S19'\n          },\n          type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          config: {\n            shape: 'S2n'\n          },\n          id: {},\n          name: {},\n          status: {},\n          type: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteAccessLogSubscription: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/accesslogsubscriptions/{accessLogSubscriptionIdentifier}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accessLogSubscriptionIdentifier'\n        ],\n        members: {\n          accessLogSubscriptionIdentifier: {\n            location: 'uri',\n            locationName: 'accessLogSubscriptionIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteAuthPolicy: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/authpolicy/{resourceIdentifier}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceIdentifier'\n        ],\n        members: {\n          resourceIdentifier: {\n            location: 'uri',\n            locationName: 'resourceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteListener: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/services/{serviceIdentifier}/listeners/{listenerIdentifier}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'listenerIdentifier',\n          'serviceIdentifier'\n        ],\n        members: {\n          listenerIdentifier: {\n            location: 'uri',\n            locationName: 'listenerIdentifier'\n          },\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteResourcePolicy: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/resourcepolicy/{resourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteRule: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/services/{serviceIdentifier}/listeners/{listenerIdentifier}/rules/{ruleIdentifier}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'listenerIdentifier',\n          'ruleIdentifier',\n          'serviceIdentifier'\n        ],\n        members: {\n          listenerIdentifier: {\n            location: 'uri',\n            locationName: 'listenerIdentifier'\n          },\n          ruleIdentifier: {\n            location: 'uri',\n            locationName: 'ruleIdentifier'\n          },\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteService: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/services/{serviceIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceIdentifier'\n        ],\n        members: {\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          id: {},\n          name: {},\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteServiceNetwork: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/servicenetworks/{serviceNetworkIdentifier}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceNetworkIdentifier'\n        ],\n        members: {\n          serviceNetworkIdentifier: {\n            location: 'uri',\n            locationName: 'serviceNetworkIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteServiceNetworkServiceAssociation: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/servicenetworkserviceassociations/{serviceNetworkServiceAssociationIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceNetworkServiceAssociationIdentifier'\n        ],\n        members: {\n          serviceNetworkServiceAssociationIdentifier: {\n            location: 'uri',\n            locationName: 'serviceNetworkServiceAssociationIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          id: {},\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteServiceNetworkVpcAssociation: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/servicenetworkvpcassociations/{serviceNetworkVpcAssociationIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceNetworkVpcAssociationIdentifier'\n        ],\n        members: {\n          serviceNetworkVpcAssociationIdentifier: {\n            location: 'uri',\n            locationName: 'serviceNetworkVpcAssociationIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          id: {},\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteTargetGroup: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/targetgroups/{targetGroupIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'targetGroupIdentifier'\n        ],\n        members: {\n          targetGroupIdentifier: {\n            location: 'uri',\n            locationName: 'targetGroupIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          id: {},\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    DeregisterTargets: {\n      http: {\n        requestUri: '/targetgroups/{targetGroupIdentifier}/deregistertargets',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'targetGroupIdentifier',\n          'targets'\n        ],\n        members: {\n          targetGroupIdentifier: {\n            location: 'uri',\n            locationName: 'targetGroupIdentifier'\n          },\n          targets: {\n            type: 'list',\n            member: {\n              shape: 'S3w'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          successful: {\n            shape: 'S3z'\n          },\n          unsuccessful: {\n            shape: 'S40'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetAccessLogSubscription: {\n      http: {\n        method: 'GET',\n        requestUri: '/accesslogsubscriptions/{accessLogSubscriptionIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accessLogSubscriptionIdentifier'\n        ],\n        members: {\n          accessLogSubscriptionIdentifier: {\n            location: 'uri',\n            locationName: 'accessLogSubscriptionIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'createdAt',\n          'destinationArn',\n          'id',\n          'lastUpdatedAt',\n          'resourceArn',\n          'resourceId'\n        ],\n        members: {\n          arn: {},\n          createdAt: {\n            shape: 'S44'\n          },\n          destinationArn: {},\n          id: {},\n          lastUpdatedAt: {\n            shape: 'S44'\n          },\n          resourceArn: {},\n          resourceId: {}\n        }\n      }\n    },\n    GetAuthPolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/authpolicy/{resourceIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceIdentifier'\n        ],\n        members: {\n          resourceIdentifier: {\n            location: 'uri',\n            locationName: 'resourceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          createdAt: {\n            shape: 'S44'\n          },\n          lastUpdatedAt: {\n            shape: 'S44'\n          },\n          policy: {},\n          state: {}\n        }\n      }\n    },\n    GetListener: {\n      http: {\n        method: 'GET',\n        requestUri: '/services/{serviceIdentifier}/listeners/{listenerIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'listenerIdentifier',\n          'serviceIdentifier'\n        ],\n        members: {\n          listenerIdentifier: {\n            location: 'uri',\n            locationName: 'listenerIdentifier'\n          },\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createdAt: {\n            shape: 'S44'\n          },\n          defaultAction: {\n            shape: 'S5'\n          },\n          id: {},\n          lastUpdatedAt: {\n            shape: 'S44'\n          },\n          name: {},\n          port: {\n            type: 'integer'\n          },\n          protocol: {},\n          serviceArn: {},\n          serviceId: {}\n        }\n      }\n    },\n    GetResourcePolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/resourcepolicy/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          policy: {}\n        }\n      }\n    },\n    GetRule: {\n      http: {\n        method: 'GET',\n        requestUri: '/services/{serviceIdentifier}/listeners/{listenerIdentifier}/rules/{ruleIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'listenerIdentifier',\n          'ruleIdentifier',\n          'serviceIdentifier'\n        ],\n        members: {\n          listenerIdentifier: {\n            location: 'uri',\n            locationName: 'listenerIdentifier'\n          },\n          ruleIdentifier: {\n            location: 'uri',\n            locationName: 'ruleIdentifier'\n          },\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          action: {\n            shape: 'S5'\n          },\n          arn: {},\n          createdAt: {\n            shape: 'S44'\n          },\n          id: {},\n          isDefault: {\n            type: 'boolean'\n          },\n          lastUpdatedAt: {\n            shape: 'S44'\n          },\n          match: {\n            shape: 'Sd'\n          },\n          name: {},\n          priority: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    GetService: {\n      http: {\n        method: 'GET',\n        requestUri: '/services/{serviceIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceIdentifier'\n        ],\n        members: {\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          authType: {},\n          certificateArn: {},\n          createdAt: {\n            shape: 'S44'\n          },\n          customDomainName: {},\n          dnsEntry: {\n            shape: 'S1y'\n          },\n          failureCode: {},\n          failureMessage: {},\n          id: {},\n          lastUpdatedAt: {\n            shape: 'S44'\n          },\n          name: {},\n          status: {}\n        }\n      }\n    },\n    GetServiceNetwork: {\n      http: {\n        method: 'GET',\n        requestUri: '/servicenetworks/{serviceNetworkIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceNetworkIdentifier'\n        ],\n        members: {\n          serviceNetworkIdentifier: {\n            location: 'uri',\n            locationName: 'serviceNetworkIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          authType: {},\n          createdAt: {\n            shape: 'S44'\n          },\n          id: {},\n          lastUpdatedAt: {\n            shape: 'S44'\n          },\n          name: {},\n          numberOfAssociatedServices: {\n            type: 'long'\n          },\n          numberOfAssociatedVPCs: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    GetServiceNetworkServiceAssociation: {\n      http: {\n        method: 'GET',\n        requestUri: '/servicenetworkserviceassociations/{serviceNetworkServiceAssociationIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceNetworkServiceAssociationIdentifier'\n        ],\n        members: {\n          serviceNetworkServiceAssociationIdentifier: {\n            location: 'uri',\n            locationName: 'serviceNetworkServiceAssociationIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createdAt: {\n            shape: 'S44'\n          },\n          createdBy: {},\n          customDomainName: {},\n          dnsEntry: {\n            shape: 'S1y'\n          },\n          failureCode: {},\n          failureMessage: {},\n          id: {},\n          serviceArn: {},\n          serviceId: {},\n          serviceName: {},\n          serviceNetworkArn: {},\n          serviceNetworkId: {},\n          serviceNetworkName: {},\n          status: {}\n        }\n      }\n    },\n    GetServiceNetworkVpcAssociation: {\n      http: {\n        method: 'GET',\n        requestUri: '/servicenetworkvpcassociations/{serviceNetworkVpcAssociationIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceNetworkVpcAssociationIdentifier'\n        ],\n        members: {\n          serviceNetworkVpcAssociationIdentifier: {\n            location: 'uri',\n            locationName: 'serviceNetworkVpcAssociationIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createdAt: {\n            shape: 'S44'\n          },\n          createdBy: {},\n          failureCode: {},\n          failureMessage: {},\n          id: {},\n          lastUpdatedAt: {\n            shape: 'S44'\n          },\n          securityGroupIds: {\n            shape: 'S2k'\n          },\n          serviceNetworkArn: {},\n          serviceNetworkId: {},\n          serviceNetworkName: {},\n          status: {},\n          vpcId: {}\n        }\n      }\n    },\n    GetTargetGroup: {\n      http: {\n        method: 'GET',\n        requestUri: '/targetgroups/{targetGroupIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'targetGroupIdentifier'\n        ],\n        members: {\n          targetGroupIdentifier: {\n            location: 'uri',\n            locationName: 'targetGroupIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          config: {\n            shape: 'S2n'\n          },\n          createdAt: {\n            shape: 'S44'\n          },\n          failureCode: {},\n          failureMessage: {},\n          id: {},\n          lastUpdatedAt: {\n            shape: 'S44'\n          },\n          name: {},\n          serviceArns: {\n            shape: 'S4r'\n          },\n          status: {},\n          type: {}\n        }\n      }\n    },\n    ListAccessLogSubscriptions: {\n      http: {\n        method: 'GET',\n        requestUri: '/accesslogsubscriptions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceIdentifier'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          resourceIdentifier: {\n            location: 'querystring',\n            locationName: 'resourceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'createdAt',\n                'destinationArn',\n                'id',\n                'lastUpdatedAt',\n                'resourceArn',\n                'resourceId'\n              ],\n              members: {\n                arn: {},\n                createdAt: {\n                  shape: 'S44'\n                },\n                destinationArn: {},\n                id: {},\n                lastUpdatedAt: {\n                  shape: 'S44'\n                },\n                resourceArn: {},\n                resourceId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListListeners: {\n      http: {\n        method: 'GET',\n        requestUri: '/services/{serviceIdentifier}/listeners',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceIdentifier'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                createdAt: {\n                  shape: 'S44'\n                },\n                id: {},\n                lastUpdatedAt: {\n                  shape: 'S44'\n                },\n                name: {},\n                port: {\n                  type: 'integer'\n                },\n                protocol: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListRules: {\n      http: {\n        method: 'GET',\n        requestUri: '/services/{serviceIdentifier}/listeners/{listenerIdentifier}/rules',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'listenerIdentifier',\n          'serviceIdentifier'\n        ],\n        members: {\n          listenerIdentifier: {\n            location: 'uri',\n            locationName: 'listenerIdentifier'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                createdAt: {\n                  shape: 'S44'\n                },\n                id: {},\n                isDefault: {\n                  type: 'boolean'\n                },\n                lastUpdatedAt: {\n                  shape: 'S44'\n                },\n                name: {},\n                priority: {\n                  type: 'integer'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListServiceNetworkServiceAssociations: {\n      http: {\n        method: 'GET',\n        requestUri: '/servicenetworkserviceassociations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          serviceIdentifier: {\n            location: 'querystring',\n            locationName: 'serviceIdentifier'\n          },\n          serviceNetworkIdentifier: {\n            location: 'querystring',\n            locationName: 'serviceNetworkIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                createdAt: {\n                  shape: 'S44'\n                },\n                createdBy: {},\n                customDomainName: {},\n                dnsEntry: {\n                  shape: 'S1y'\n                },\n                id: {},\n                serviceArn: {},\n                serviceId: {},\n                serviceName: {},\n                serviceNetworkArn: {},\n                serviceNetworkId: {},\n                serviceNetworkName: {},\n                status: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListServiceNetworkVpcAssociations: {\n      http: {\n        method: 'GET',\n        requestUri: '/servicenetworkvpcassociations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          serviceNetworkIdentifier: {\n            location: 'querystring',\n            locationName: 'serviceNetworkIdentifier'\n          },\n          vpcIdentifier: {\n            location: 'querystring',\n            locationName: 'vpcIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                createdAt: {\n                  shape: 'S44'\n                },\n                createdBy: {},\n                id: {},\n                lastUpdatedAt: {\n                  shape: 'S44'\n                },\n                serviceNetworkArn: {},\n                serviceNetworkId: {},\n                serviceNetworkName: {},\n                status: {},\n                vpcId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListServiceNetworks: {\n      http: {\n        method: 'GET',\n        requestUri: '/servicenetworks',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                createdAt: {\n                  shape: 'S44'\n                },\n                id: {},\n                lastUpdatedAt: {\n                  shape: 'S44'\n                },\n                name: {},\n                numberOfAssociatedServices: {\n                  type: 'long'\n                },\n                numberOfAssociatedVPCs: {\n                  type: 'long'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListServices: {\n      http: {\n        method: 'GET',\n        requestUri: '/services',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                createdAt: {\n                  shape: 'S44'\n                },\n                customDomainName: {},\n                dnsEntry: {\n                  shape: 'S1y'\n                },\n                id: {},\n                lastUpdatedAt: {\n                  shape: 'S44'\n                },\n                name: {},\n                status: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S19'\n          }\n        }\n      }\n    },\n    ListTargetGroups: {\n      http: {\n        method: 'GET',\n        requestUri: '/targetgroups',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          targetGroupType: {\n            location: 'querystring',\n            locationName: 'targetGroupType'\n          },\n          vpcIdentifier: {\n            location: 'querystring',\n            locationName: 'vpcIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                createdAt: {\n                  shape: 'S44'\n                },\n                id: {},\n                ipAddressType: {},\n                lambdaEventStructureVersion: {},\n                lastUpdatedAt: {\n                  shape: 'S44'\n                },\n                name: {},\n                port: {\n                  type: 'integer'\n                },\n                protocol: {},\n                serviceArns: {\n                  shape: 'S4r'\n                },\n                status: {},\n                type: {},\n                vpcIdentifier: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTargets: {\n      http: {\n        requestUri: '/targetgroups/{targetGroupIdentifier}/listtargets',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'targetGroupIdentifier'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          targetGroupIdentifier: {\n            location: 'uri',\n            locationName: 'targetGroupIdentifier'\n          },\n          targets: {\n            type: 'list',\n            member: {\n              shape: 'S3w'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                id: {},\n                port: {\n                  type: 'integer'\n                },\n                reasonCode: {},\n                status: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    PutAuthPolicy: {\n      http: {\n        method: 'PUT',\n        requestUri: '/authpolicy/{resourceIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'policy',\n          'resourceIdentifier'\n        ],\n        members: {\n          policy: {},\n          resourceIdentifier: {\n            location: 'uri',\n            locationName: 'resourceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          policy: {},\n          state: {}\n        }\n      }\n    },\n    PutResourcePolicy: {\n      http: {\n        method: 'PUT',\n        requestUri: '/resourcepolicy/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'policy',\n          'resourceArn'\n        ],\n        members: {\n          policy: {},\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    RegisterTargets: {\n      http: {\n        requestUri: '/targetgroups/{targetGroupIdentifier}/registertargets',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'targetGroupIdentifier',\n          'targets'\n        ],\n        members: {\n          targetGroupIdentifier: {\n            location: 'uri',\n            locationName: 'targetGroupIdentifier'\n          },\n          targets: {\n            type: 'list',\n            member: {\n              shape: 'S3w'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          successful: {\n            shape: 'S3z'\n          },\n          unsuccessful: {\n            shape: 'S40'\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S19'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateAccessLogSubscription: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/accesslogsubscriptions/{accessLogSubscriptionIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'accessLogSubscriptionIdentifier',\n          'destinationArn'\n        ],\n        members: {\n          accessLogSubscriptionIdentifier: {\n            location: 'uri',\n            locationName: 'accessLogSubscriptionIdentifier'\n          },\n          destinationArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'destinationArn',\n          'id',\n          'resourceArn',\n          'resourceId'\n        ],\n        members: {\n          arn: {},\n          destinationArn: {},\n          id: {},\n          resourceArn: {},\n          resourceId: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateListener: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/services/{serviceIdentifier}/listeners/{listenerIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'defaultAction',\n          'listenerIdentifier',\n          'serviceIdentifier'\n        ],\n        members: {\n          defaultAction: {\n            shape: 'S5'\n          },\n          listenerIdentifier: {\n            location: 'uri',\n            locationName: 'listenerIdentifier'\n          },\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          defaultAction: {\n            shape: 'S5'\n          },\n          id: {},\n          name: {},\n          port: {\n            type: 'integer'\n          },\n          protocol: {},\n          serviceArn: {},\n          serviceId: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateRule: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/services/{serviceIdentifier}/listeners/{listenerIdentifier}/rules/{ruleIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'listenerIdentifier',\n          'ruleIdentifier',\n          'serviceIdentifier'\n        ],\n        members: {\n          action: {\n            shape: 'S5'\n          },\n          listenerIdentifier: {\n            location: 'uri',\n            locationName: 'listenerIdentifier'\n          },\n          match: {\n            shape: 'Sd'\n          },\n          priority: {\n            type: 'integer'\n          },\n          ruleIdentifier: {\n            location: 'uri',\n            locationName: 'ruleIdentifier'\n          },\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          action: {\n            shape: 'S5'\n          },\n          arn: {},\n          id: {},\n          isDefault: {\n            type: 'boolean'\n          },\n          match: {\n            shape: 'Sd'\n          },\n          name: {},\n          priority: {\n            type: 'integer'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateService: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/services/{serviceIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'serviceIdentifier'\n        ],\n        members: {\n          authType: {},\n          certificateArn: {},\n          serviceIdentifier: {\n            location: 'uri',\n            locationName: 'serviceIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          authType: {},\n          certificateArn: {},\n          customDomainName: {},\n          id: {},\n          name: {}\n        }\n      }\n    },\n    UpdateServiceNetwork: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/servicenetworks/{serviceNetworkIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'authType',\n          'serviceNetworkIdentifier'\n        ],\n        members: {\n          authType: {},\n          serviceNetworkIdentifier: {\n            location: 'uri',\n            locationName: 'serviceNetworkIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          authType: {},\n          id: {},\n          name: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateServiceNetworkVpcAssociation: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/servicenetworkvpcassociations/{serviceNetworkVpcAssociationIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'securityGroupIds',\n          'serviceNetworkVpcAssociationIdentifier'\n        ],\n        members: {\n          securityGroupIds: {\n            type: 'list',\n            member: {}\n          },\n          serviceNetworkVpcAssociationIdentifier: {\n            location: 'uri',\n            locationName: 'serviceNetworkVpcAssociationIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          createdBy: {},\n          id: {},\n          securityGroupIds: {\n            shape: 'S2k'\n          },\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateTargetGroup: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/targetgroups/{targetGroupIdentifier}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'healthCheck',\n          'targetGroupIdentifier'\n        ],\n        members: {\n          healthCheck: {\n            shape: 'S2o'\n          },\n          targetGroupIdentifier: {\n            location: 'uri',\n            locationName: 'targetGroupIdentifier'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          config: {\n            shape: 'S2n'\n          },\n          id: {},\n          name: {},\n          status: {},\n          type: {}\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'structure',\n      members: {\n        fixedResponse: {\n          type: 'structure',\n          required: [\n            'statusCode'\n          ],\n          members: {\n            statusCode: {\n              type: 'integer'\n            }\n          }\n        },\n        forward: {\n          type: 'structure',\n          required: [\n            'targetGroups'\n          ],\n          members: {\n            targetGroups: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                required: [\n                  'targetGroupIdentifier'\n                ],\n                members: {\n                  targetGroupIdentifier: {},\n                  weight: {\n                    type: 'integer'\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      union: true\n    },\n    Sd: {\n      type: 'structure',\n      members: {\n        httpMatch: {\n          type: 'structure',\n          members: {\n            headerMatches: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                required: [\n                  'match',\n                  'name'\n                ],\n                members: {\n                  caseSensitive: {\n                    type: 'boolean'\n                  },\n                  match: {\n                    type: 'structure',\n                    members: {\n                      contains: {},\n                      exact: {},\n                      prefix: {}\n                    },\n                    union: true\n                  },\n                  name: {}\n                }\n              }\n            },\n            method: {},\n            pathMatch: {\n              type: 'structure',\n              required: [\n                'match'\n              ],\n              members: {\n                caseSensitive: {\n                  type: 'boolean'\n                },\n                match: {\n                  type: 'structure',\n                  members: {\n                    exact: {},\n                    prefix: {}\n                  },\n                  union: true\n                }\n              }\n            }\n          }\n        }\n      },\n      union: true\n    },\n    S19: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1y: {\n      type: 'structure',\n      members: {\n        domainName: {},\n        hostedZoneId: {}\n      }\n    },\n    S2k: {\n      type: 'list',\n      member: {}\n    },\n    S2n: {\n      type: 'structure',\n      members: {\n        healthCheck: {\n          shape: 'S2o'\n        },\n        ipAddressType: {},\n        lambdaEventStructureVersion: {},\n        port: {\n          type: 'integer'\n        },\n        protocol: {},\n        protocolVersion: {},\n        vpcIdentifier: {}\n      }\n    },\n    S2o: {\n      type: 'structure',\n      members: {\n        enabled: {\n          type: 'boolean'\n        },\n        healthCheckIntervalSeconds: {\n          type: 'integer'\n        },\n        healthCheckTimeoutSeconds: {\n          type: 'integer'\n        },\n        healthyThresholdCount: {\n          type: 'integer'\n        },\n        matcher: {\n          type: 'structure',\n          members: {\n            httpCode: {}\n          },\n          union: true\n        },\n        path: {},\n        port: {\n          type: 'integer'\n        },\n        protocol: {},\n        protocolVersion: {},\n        unhealthyThresholdCount: {\n          type: 'integer'\n        }\n      }\n    },\n    S3w: {\n      type: 'structure',\n      required: [\n        'id'\n      ],\n      members: {\n        id: {},\n        port: {\n          type: 'integer'\n        }\n      }\n    },\n    S3z: {\n      type: 'list',\n      member: {\n        shape: 'S3w'\n      }\n    },\n    S40: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          failureCode: {},\n          failureMessage: {},\n          id: {},\n          port: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    S44: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    S4r: {\n      type: 'list',\n      member: {}\n    }\n  }\n}"]}