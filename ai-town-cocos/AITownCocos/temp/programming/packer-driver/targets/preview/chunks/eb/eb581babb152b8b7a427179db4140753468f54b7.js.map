{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/entityresolution-2018-05-10.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","AddPolicyStatement","http","requestUri","responseCode","input","type","required","members","action","member","arn","location","locationName","condition","effect","principal","statementId","output","policy","token","idempotent","BatchDeleteUniqueId","method","inputSource","uniqueIds","workflowName","deleted","uniqueId","disconnectedUniqueIds","errors","errorType","status","CreateIdMappingWorkflow","description","idMappingTechniques","shape","inputSourceConfig","outputSourceConfig","roleArn","tags","workflowArn","CreateIdNamespace","idMappingWorkflowProperties","idNamespaceName","createdAt","idNamespaceArn","updatedAt","CreateMatchingWorkflow","incrementalRunConfig","resolutionTechniques","CreateSchemaMapping","mappedInputFields","schemaName","schemaArn","DeleteIdMappingWorkflow","message","DeleteIdNamespace","DeleteMatchingWorkflow","DeletePolicyStatement","DeleteSchemaMapping","GetIdMappingJob","jobId","endTime","errorDetails","metrics","inputRecords","recordsNotProcessed","totalRecordsProcessed","startTime","GetIdMappingWorkflow","GetIdNamespace","GetMatchId","applyNormalization","record","key","value","sensitive","matchId","matchRule","GetMatchingJob","matchIDs","KMSArn","outputS3Path","GetMatchingWorkflow","GetPolicy","GetProviderService","providerName","providerServiceName","anonymizedOutput","providerComponentSchema","providerSchemaAttributes","fieldName","hashing","subType","schemas","providerConfigurationDefinition","providerEndpointConfiguration","marketplaceConfiguration","assetId","dataSetId","listingId","revisionId","union","providerEntityOutputDefinition","providerIdNameSpaceConfiguration","providerSourceConfigurationDefinition","providerTargetConfigurationDefinition","providerIntermediateDataAccessConfiguration","awsAccountIds","requiredBucketActions","providerJobConfiguration","providerServiceArn","providerServiceDisplayName","providerServiceType","GetSchemaMapping","hasWorkflows","ListIdMappingJobs","maxResults","nextToken","jobs","ListIdMappingWorkflows","workflowSummaries","ListIdNamespaces","idNamespaceSummaries","ListMatchingJobs","ListMatchingWorkflows","resolutionType","ListProviderServices","providerServiceSummaries","ListSchemaMappings","schemaList","ListTagsForResource","resourceArn","PutPolicy","StartIdMappingJob","StartMatchingJob","TagResource","UntagResource","tagKeys","UpdateIdMappingWorkflow","UpdateIdNamespace","UpdateMatchingWorkflow","UpdateSchemaMapping","shapes","Ss","idMappingType","providerProperties","Su","intermediateSourceConfiguration","intermediateS3Path","providerConfiguration","Sx","document","Sz","inputSourceARN","S13","S17","S1d","S1g","S1n","incrementalRunType","S1p","S1t","hashed","name","S1y","ruleBasedProperties","attributeMatchingModel","rules","matchingKeys","ruleName","S2a","groupName","matchKey","S2t","errorMessage","S2x","S45"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-05-10',\n    endpointPrefix: 'entityresolution',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'AWSEntityResolution',\n    serviceFullName: 'AWS EntityResolution',\n    serviceId: 'EntityResolution',\n    signatureVersion: 'v4',\n    signingName: 'entityresolution',\n    uid: 'entityresolution-2018-05-10'\n  },\n  operations: {\n    AddPolicyStatement: {\n      http: {\n        requestUri: '/policies/{arn}/{statementId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'action',\n          'arn',\n          'effect',\n          'principal',\n          'statementId'\n        ],\n        members: {\n          action: {\n            type: 'list',\n            member: {}\n          },\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          },\n          condition: {},\n          effect: {},\n          principal: {\n            type: 'list',\n            member: {}\n          },\n          statementId: {\n            location: 'uri',\n            locationName: 'statementId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'token'\n        ],\n        members: {\n          arn: {},\n          policy: {},\n          token: {}\n        }\n      },\n      idempotent: true\n    },\n    BatchDeleteUniqueId: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/matchingworkflows/{workflowName}/uniqueids',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'uniqueIds',\n          'workflowName'\n        ],\n        members: {\n          inputSource: {\n            location: 'header',\n            locationName: 'inputSource'\n          },\n          uniqueIds: {\n            location: 'header',\n            locationName: 'uniqueIds',\n            type: 'list',\n            member: {}\n          },\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'deleted',\n          'disconnectedUniqueIds',\n          'errors',\n          'status'\n        ],\n        members: {\n          deleted: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'uniqueId'\n              ],\n              members: {\n                uniqueId: {}\n              }\n            }\n          },\n          disconnectedUniqueIds: {\n            type: 'list',\n            member: {}\n          },\n          errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'errorType',\n                'uniqueId'\n              ],\n              members: {\n                errorType: {},\n                uniqueId: {}\n              }\n            }\n          },\n          status: {}\n        }\n      }\n    },\n    CreateIdMappingWorkflow: {\n      http: {\n        requestUri: '/idmappingworkflows',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'idMappingTechniques',\n          'inputSourceConfig',\n          'roleArn',\n          'workflowName'\n        ],\n        members: {\n          description: {},\n          idMappingTechniques: {\n            shape: 'Ss'\n          },\n          inputSourceConfig: {\n            shape: 'Sz'\n          },\n          outputSourceConfig: {\n            shape: 'S13'\n          },\n          roleArn: {},\n          tags: {\n            shape: 'S17'\n          },\n          workflowName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'idMappingTechniques',\n          'inputSourceConfig',\n          'roleArn',\n          'workflowArn',\n          'workflowName'\n        ],\n        members: {\n          description: {},\n          idMappingTechniques: {\n            shape: 'Ss'\n          },\n          inputSourceConfig: {\n            shape: 'Sz'\n          },\n          outputSourceConfig: {\n            shape: 'S13'\n          },\n          roleArn: {},\n          workflowArn: {},\n          workflowName: {}\n        }\n      }\n    },\n    CreateIdNamespace: {\n      http: {\n        requestUri: '/idnamespaces',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'idNamespaceName',\n          'type'\n        ],\n        members: {\n          description: {},\n          idMappingWorkflowProperties: {\n            shape: 'S1d'\n          },\n          idNamespaceName: {},\n          inputSourceConfig: {\n            shape: 'S1g'\n          },\n          roleArn: {},\n          tags: {\n            shape: 'S17'\n          },\n          type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'createdAt',\n          'idNamespaceArn',\n          'idNamespaceName',\n          'type',\n          'updatedAt'\n        ],\n        members: {\n          createdAt: {\n            type: 'timestamp'\n          },\n          description: {},\n          idMappingWorkflowProperties: {\n            shape: 'S1d'\n          },\n          idNamespaceArn: {},\n          idNamespaceName: {},\n          inputSourceConfig: {\n            shape: 'S1g'\n          },\n          roleArn: {},\n          tags: {\n            shape: 'S17'\n          },\n          type: {},\n          updatedAt: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    CreateMatchingWorkflow: {\n      http: {\n        requestUri: '/matchingworkflows',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'inputSourceConfig',\n          'outputSourceConfig',\n          'resolutionTechniques',\n          'roleArn',\n          'workflowName'\n        ],\n        members: {\n          description: {},\n          incrementalRunConfig: {\n            shape: 'S1n'\n          },\n          inputSourceConfig: {\n            shape: 'S1p'\n          },\n          outputSourceConfig: {\n            shape: 'S1t'\n          },\n          resolutionTechniques: {\n            shape: 'S1y'\n          },\n          roleArn: {},\n          tags: {\n            shape: 'S17'\n          },\n          workflowName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'inputSourceConfig',\n          'outputSourceConfig',\n          'resolutionTechniques',\n          'roleArn',\n          'workflowArn',\n          'workflowName'\n        ],\n        members: {\n          description: {},\n          incrementalRunConfig: {\n            shape: 'S1n'\n          },\n          inputSourceConfig: {\n            shape: 'S1p'\n          },\n          outputSourceConfig: {\n            shape: 'S1t'\n          },\n          resolutionTechniques: {\n            shape: 'S1y'\n          },\n          roleArn: {},\n          workflowArn: {},\n          workflowName: {}\n        }\n      }\n    },\n    CreateSchemaMapping: {\n      http: {\n        requestUri: '/schemas',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'mappedInputFields',\n          'schemaName'\n        ],\n        members: {\n          description: {},\n          mappedInputFields: {\n            shape: 'S2a'\n          },\n          schemaName: {},\n          tags: {\n            shape: 'S17'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'description',\n          'mappedInputFields',\n          'schemaArn',\n          'schemaName'\n        ],\n        members: {\n          description: {},\n          mappedInputFields: {\n            shape: 'S2a'\n          },\n          schemaArn: {},\n          schemaName: {}\n        }\n      }\n    },\n    DeleteIdMappingWorkflow: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/idmappingworkflows/{workflowName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workflowName'\n        ],\n        members: {\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'message'\n        ],\n        members: {\n          message: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteIdNamespace: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/idnamespaces/{idNamespaceName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'idNamespaceName'\n        ],\n        members: {\n          idNamespaceName: {\n            location: 'uri',\n            locationName: 'idNamespaceName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'message'\n        ],\n        members: {\n          message: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteMatchingWorkflow: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/matchingworkflows/{workflowName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workflowName'\n        ],\n        members: {\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'message'\n        ],\n        members: {\n          message: {}\n        }\n      },\n      idempotent: true\n    },\n    DeletePolicyStatement: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/policies/{arn}/{statementId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn',\n          'statementId'\n        ],\n        members: {\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          },\n          statementId: {\n            location: 'uri',\n            locationName: 'statementId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'token'\n        ],\n        members: {\n          arn: {},\n          policy: {},\n          token: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteSchemaMapping: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/schemas/{schemaName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'schemaName'\n        ],\n        members: {\n          schemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'message'\n        ],\n        members: {\n          message: {}\n        }\n      },\n      idempotent: true\n    },\n    GetIdMappingJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/idmappingworkflows/{workflowName}/jobs/{jobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobId',\n          'workflowName'\n        ],\n        members: {\n          jobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobId',\n          'startTime',\n          'status'\n        ],\n        members: {\n          endTime: {\n            type: 'timestamp'\n          },\n          errorDetails: {\n            shape: 'S2t'\n          },\n          jobId: {},\n          metrics: {\n            type: 'structure',\n            members: {\n              inputRecords: {\n                type: 'integer'\n              },\n              recordsNotProcessed: {\n                type: 'integer'\n              },\n              totalRecordsProcessed: {\n                type: 'integer'\n              }\n            }\n          },\n          outputSourceConfig: {\n            shape: 'S2x'\n          },\n          startTime: {\n            type: 'timestamp'\n          },\n          status: {}\n        }\n      }\n    },\n    GetIdMappingWorkflow: {\n      http: {\n        method: 'GET',\n        requestUri: '/idmappingworkflows/{workflowName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workflowName'\n        ],\n        members: {\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'createdAt',\n          'idMappingTechniques',\n          'inputSourceConfig',\n          'roleArn',\n          'updatedAt',\n          'workflowArn',\n          'workflowName'\n        ],\n        members: {\n          createdAt: {\n            type: 'timestamp'\n          },\n          description: {},\n          idMappingTechniques: {\n            shape: 'Ss'\n          },\n          inputSourceConfig: {\n            shape: 'Sz'\n          },\n          outputSourceConfig: {\n            shape: 'S13'\n          },\n          roleArn: {},\n          tags: {\n            shape: 'S17'\n          },\n          updatedAt: {\n            type: 'timestamp'\n          },\n          workflowArn: {},\n          workflowName: {}\n        }\n      }\n    },\n    GetIdNamespace: {\n      http: {\n        method: 'GET',\n        requestUri: '/idnamespaces/{idNamespaceName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'idNamespaceName'\n        ],\n        members: {\n          idNamespaceName: {\n            location: 'uri',\n            locationName: 'idNamespaceName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'createdAt',\n          'idNamespaceArn',\n          'idNamespaceName',\n          'type',\n          'updatedAt'\n        ],\n        members: {\n          createdAt: {\n            type: 'timestamp'\n          },\n          description: {},\n          idMappingWorkflowProperties: {\n            shape: 'S1d'\n          },\n          idNamespaceArn: {},\n          idNamespaceName: {},\n          inputSourceConfig: {\n            shape: 'S1g'\n          },\n          roleArn: {},\n          tags: {\n            shape: 'S17'\n          },\n          type: {},\n          updatedAt: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetMatchId: {\n      http: {\n        requestUri: '/matchingworkflows/{workflowName}/matches',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'record',\n          'workflowName'\n        ],\n        members: {\n          applyNormalization: {\n            type: 'boolean'\n          },\n          record: {\n            type: 'map',\n            key: {},\n            value: {},\n            sensitive: true\n          },\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          matchId: {},\n          matchRule: {}\n        }\n      }\n    },\n    GetMatchingJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/matchingworkflows/{workflowName}/jobs/{jobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'jobId',\n          'workflowName'\n        ],\n        members: {\n          jobId: {\n            location: 'uri',\n            locationName: 'jobId'\n          },\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobId',\n          'startTime',\n          'status'\n        ],\n        members: {\n          endTime: {\n            type: 'timestamp'\n          },\n          errorDetails: {\n            shape: 'S2t'\n          },\n          jobId: {},\n          metrics: {\n            type: 'structure',\n            members: {\n              inputRecords: {\n                type: 'integer'\n              },\n              matchIDs: {\n                type: 'integer'\n              },\n              recordsNotProcessed: {\n                type: 'integer'\n              },\n              totalRecordsProcessed: {\n                type: 'integer'\n              }\n            }\n          },\n          outputSourceConfig: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'outputS3Path',\n                'roleArn'\n              ],\n              members: {\n                KMSArn: {},\n                outputS3Path: {},\n                roleArn: {}\n              }\n            }\n          },\n          startTime: {\n            type: 'timestamp'\n          },\n          status: {}\n        }\n      }\n    },\n    GetMatchingWorkflow: {\n      http: {\n        method: 'GET',\n        requestUri: '/matchingworkflows/{workflowName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workflowName'\n        ],\n        members: {\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'createdAt',\n          'inputSourceConfig',\n          'outputSourceConfig',\n          'resolutionTechniques',\n          'roleArn',\n          'updatedAt',\n          'workflowArn',\n          'workflowName'\n        ],\n        members: {\n          createdAt: {\n            type: 'timestamp'\n          },\n          description: {},\n          incrementalRunConfig: {\n            shape: 'S1n'\n          },\n          inputSourceConfig: {\n            shape: 'S1p'\n          },\n          outputSourceConfig: {\n            shape: 'S1t'\n          },\n          resolutionTechniques: {\n            shape: 'S1y'\n          },\n          roleArn: {},\n          tags: {\n            shape: 'S17'\n          },\n          updatedAt: {\n            type: 'timestamp'\n          },\n          workflowArn: {},\n          workflowName: {}\n        }\n      }\n    },\n    GetPolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/policies/{arn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn'\n        ],\n        members: {\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'token'\n        ],\n        members: {\n          arn: {},\n          policy: {},\n          token: {}\n        }\n      }\n    },\n    GetProviderService: {\n      http: {\n        method: 'GET',\n        requestUri: '/providerservices/{providerName}/{providerServiceName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'providerName',\n          'providerServiceName'\n        ],\n        members: {\n          providerName: {\n            location: 'uri',\n            locationName: 'providerName'\n          },\n          providerServiceName: {\n            location: 'uri',\n            locationName: 'providerServiceName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'anonymizedOutput',\n          'providerEndpointConfiguration',\n          'providerEntityOutputDefinition',\n          'providerName',\n          'providerServiceArn',\n          'providerServiceDisplayName',\n          'providerServiceName',\n          'providerServiceType'\n        ],\n        members: {\n          anonymizedOutput: {\n            type: 'boolean'\n          },\n          providerComponentSchema: {\n            type: 'structure',\n            members: {\n              providerSchemaAttributes: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'fieldName',\n                    'type'\n                  ],\n                  members: {\n                    fieldName: {},\n                    hashing: {\n                      type: 'boolean'\n                    },\n                    subType: {},\n                    type: {}\n                  }\n                }\n              },\n              schemas: {\n                type: 'list',\n                member: {\n                  type: 'list',\n                  member: {}\n                }\n              }\n            }\n          },\n          providerConfigurationDefinition: {\n            shape: 'Sx'\n          },\n          providerEndpointConfiguration: {\n            type: 'structure',\n            members: {\n              marketplaceConfiguration: {\n                type: 'structure',\n                required: [\n                  'assetId',\n                  'dataSetId',\n                  'listingId',\n                  'revisionId'\n                ],\n                members: {\n                  assetId: {},\n                  dataSetId: {},\n                  listingId: {},\n                  revisionId: {}\n                }\n              }\n            },\n            union: true\n          },\n          providerEntityOutputDefinition: {\n            shape: 'Sx'\n          },\n          providerIdNameSpaceConfiguration: {\n            type: 'structure',\n            members: {\n              description: {},\n              providerSourceConfigurationDefinition: {\n                shape: 'Sx'\n              },\n              providerTargetConfigurationDefinition: {\n                shape: 'Sx'\n              }\n            }\n          },\n          providerIntermediateDataAccessConfiguration: {\n            type: 'structure',\n            members: {\n              awsAccountIds: {\n                type: 'list',\n                member: {}\n              },\n              requiredBucketActions: {\n                type: 'list',\n                member: {}\n              }\n            }\n          },\n          providerJobConfiguration: {\n            shape: 'Sx'\n          },\n          providerName: {},\n          providerServiceArn: {},\n          providerServiceDisplayName: {},\n          providerServiceName: {},\n          providerServiceType: {}\n        }\n      }\n    },\n    GetSchemaMapping: {\n      http: {\n        method: 'GET',\n        requestUri: '/schemas/{schemaName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'schemaName'\n        ],\n        members: {\n          schemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'createdAt',\n          'hasWorkflows',\n          'mappedInputFields',\n          'schemaArn',\n          'schemaName',\n          'updatedAt'\n        ],\n        members: {\n          createdAt: {\n            type: 'timestamp'\n          },\n          description: {},\n          hasWorkflows: {\n            type: 'boolean'\n          },\n          mappedInputFields: {\n            shape: 'S2a'\n          },\n          schemaArn: {},\n          schemaName: {},\n          tags: {\n            shape: 'S17'\n          },\n          updatedAt: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    ListIdMappingJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/idmappingworkflows/{workflowName}/jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workflowName'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          jobs: {\n            shape: 'S45'\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListIdMappingWorkflows: {\n      http: {\n        method: 'GET',\n        requestUri: '/idmappingworkflows',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          workflowSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'createdAt',\n                'updatedAt',\n                'workflowArn',\n                'workflowName'\n              ],\n              members: {\n                createdAt: {\n                  type: 'timestamp'\n                },\n                updatedAt: {\n                  type: 'timestamp'\n                },\n                workflowArn: {},\n                workflowName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListIdNamespaces: {\n      http: {\n        method: 'GET',\n        requestUri: '/idnamespaces',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          idNamespaceSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'createdAt',\n                'idNamespaceArn',\n                'idNamespaceName',\n                'type',\n                'updatedAt'\n              ],\n              members: {\n                createdAt: {\n                  type: 'timestamp'\n                },\n                description: {},\n                idNamespaceArn: {},\n                idNamespaceName: {},\n                type: {},\n                updatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListMatchingJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/matchingworkflows/{workflowName}/jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workflowName'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          jobs: {\n            shape: 'S45'\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListMatchingWorkflows: {\n      http: {\n        method: 'GET',\n        requestUri: '/matchingworkflows',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          workflowSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'createdAt',\n                'resolutionType',\n                'updatedAt',\n                'workflowArn',\n                'workflowName'\n              ],\n              members: {\n                createdAt: {\n                  type: 'timestamp'\n                },\n                resolutionType: {},\n                updatedAt: {\n                  type: 'timestamp'\n                },\n                workflowArn: {},\n                workflowName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListProviderServices: {\n      http: {\n        method: 'GET',\n        requestUri: '/providerservices',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          providerName: {\n            location: 'querystring',\n            locationName: 'providerName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          providerServiceSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'providerName',\n                'providerServiceArn',\n                'providerServiceDisplayName',\n                'providerServiceName',\n                'providerServiceType'\n              ],\n              members: {\n                providerName: {},\n                providerServiceArn: {},\n                providerServiceDisplayName: {},\n                providerServiceName: {},\n                providerServiceType: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListSchemaMappings: {\n      http: {\n        method: 'GET',\n        requestUri: '/schemas',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          schemaList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'createdAt',\n                'hasWorkflows',\n                'schemaArn',\n                'schemaName',\n                'updatedAt'\n              ],\n              members: {\n                createdAt: {\n                  type: 'timestamp'\n                },\n                hasWorkflows: {\n                  type: 'boolean'\n                },\n                schemaArn: {},\n                schemaName: {},\n                updatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'tags'\n        ],\n        members: {\n          tags: {\n            shape: 'S17'\n          }\n        }\n      }\n    },\n    PutPolicy: {\n      http: {\n        method: 'PUT',\n        requestUri: '/policies/{arn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn',\n          'policy'\n        ],\n        members: {\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          },\n          policy: {},\n          token: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'token'\n        ],\n        members: {\n          arn: {},\n          policy: {},\n          token: {}\n        }\n      },\n      idempotent: true\n    },\n    StartIdMappingJob: {\n      http: {\n        requestUri: '/idmappingworkflows/{workflowName}/jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workflowName'\n        ],\n        members: {\n          outputSourceConfig: {\n            shape: 'S2x'\n          },\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobId'\n        ],\n        members: {\n          jobId: {},\n          outputSourceConfig: {\n            shape: 'S2x'\n          }\n        }\n      }\n    },\n    StartMatchingJob: {\n      http: {\n        requestUri: '/matchingworkflows/{workflowName}/jobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workflowName'\n        ],\n        members: {\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobId'\n        ],\n        members: {\n          jobId: {}\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S17'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateIdMappingWorkflow: {\n      http: {\n        method: 'PUT',\n        requestUri: '/idmappingworkflows/{workflowName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'idMappingTechniques',\n          'inputSourceConfig',\n          'roleArn',\n          'workflowName'\n        ],\n        members: {\n          description: {},\n          idMappingTechniques: {\n            shape: 'Ss'\n          },\n          inputSourceConfig: {\n            shape: 'Sz'\n          },\n          outputSourceConfig: {\n            shape: 'S13'\n          },\n          roleArn: {},\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'idMappingTechniques',\n          'inputSourceConfig',\n          'roleArn',\n          'workflowArn',\n          'workflowName'\n        ],\n        members: {\n          description: {},\n          idMappingTechniques: {\n            shape: 'Ss'\n          },\n          inputSourceConfig: {\n            shape: 'Sz'\n          },\n          outputSourceConfig: {\n            shape: 'S13'\n          },\n          roleArn: {},\n          workflowArn: {},\n          workflowName: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateIdNamespace: {\n      http: {\n        method: 'PUT',\n        requestUri: '/idnamespaces/{idNamespaceName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'idNamespaceName'\n        ],\n        members: {\n          description: {},\n          idMappingWorkflowProperties: {\n            shape: 'S1d'\n          },\n          idNamespaceName: {\n            location: 'uri',\n            locationName: 'idNamespaceName'\n          },\n          inputSourceConfig: {\n            shape: 'S1g'\n          },\n          roleArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'createdAt',\n          'idNamespaceArn',\n          'idNamespaceName',\n          'type',\n          'updatedAt'\n        ],\n        members: {\n          createdAt: {\n            type: 'timestamp'\n          },\n          description: {},\n          idMappingWorkflowProperties: {\n            shape: 'S1d'\n          },\n          idNamespaceArn: {},\n          idNamespaceName: {},\n          inputSourceConfig: {\n            shape: 'S1g'\n          },\n          roleArn: {},\n          type: {},\n          updatedAt: {\n            type: 'timestamp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateMatchingWorkflow: {\n      http: {\n        method: 'PUT',\n        requestUri: '/matchingworkflows/{workflowName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'inputSourceConfig',\n          'outputSourceConfig',\n          'resolutionTechniques',\n          'roleArn',\n          'workflowName'\n        ],\n        members: {\n          description: {},\n          incrementalRunConfig: {\n            shape: 'S1n'\n          },\n          inputSourceConfig: {\n            shape: 'S1p'\n          },\n          outputSourceConfig: {\n            shape: 'S1t'\n          },\n          resolutionTechniques: {\n            shape: 'S1y'\n          },\n          roleArn: {},\n          workflowName: {\n            location: 'uri',\n            locationName: 'workflowName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'inputSourceConfig',\n          'outputSourceConfig',\n          'resolutionTechniques',\n          'roleArn',\n          'workflowName'\n        ],\n        members: {\n          description: {},\n          incrementalRunConfig: {\n            shape: 'S1n'\n          },\n          inputSourceConfig: {\n            shape: 'S1p'\n          },\n          outputSourceConfig: {\n            shape: 'S1t'\n          },\n          resolutionTechniques: {\n            shape: 'S1y'\n          },\n          roleArn: {},\n          workflowName: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateSchemaMapping: {\n      http: {\n        method: 'PUT',\n        requestUri: '/schemas/{schemaName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'mappedInputFields',\n          'schemaName'\n        ],\n        members: {\n          description: {},\n          mappedInputFields: {\n            shape: 'S2a'\n          },\n          schemaName: {\n            location: 'uri',\n            locationName: 'schemaName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'mappedInputFields',\n          'schemaArn',\n          'schemaName'\n        ],\n        members: {\n          description: {},\n          mappedInputFields: {\n            shape: 'S2a'\n          },\n          schemaArn: {},\n          schemaName: {}\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    Ss: {\n      type: 'structure',\n      required: [\n        'idMappingType'\n      ],\n      members: {\n        idMappingType: {},\n        providerProperties: {\n          shape: 'Su'\n        }\n      }\n    },\n    Su: {\n      type: 'structure',\n      required: [\n        'providerServiceArn'\n      ],\n      members: {\n        intermediateSourceConfiguration: {\n          type: 'structure',\n          required: [\n            'intermediateS3Path'\n          ],\n          members: {\n            intermediateS3Path: {}\n          }\n        },\n        providerConfiguration: {\n          shape: 'Sx'\n        },\n        providerServiceArn: {}\n      }\n    },\n    Sx: {\n      type: 'structure',\n      members: {},\n      document: true\n    },\n    Sz: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'inputSourceARN'\n        ],\n        members: {\n          inputSourceARN: {},\n          schemaName: {},\n          type: {}\n        }\n      }\n    },\n    S13: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'outputS3Path'\n        ],\n        members: {\n          KMSArn: {},\n          outputS3Path: {}\n        }\n      }\n    },\n    S17: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1d: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'idMappingType'\n        ],\n        members: {\n          idMappingType: {},\n          providerProperties: {\n            type: 'structure',\n            required: [\n              'providerServiceArn'\n            ],\n            members: {\n              providerConfiguration: {\n                shape: 'Sx'\n              },\n              providerServiceArn: {}\n            }\n          }\n        }\n      }\n    },\n    S1g: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'inputSourceARN'\n        ],\n        members: {\n          inputSourceARN: {},\n          schemaName: {}\n        }\n      }\n    },\n    S1n: {\n      type: 'structure',\n      members: {\n        incrementalRunType: {}\n      }\n    },\n    S1p: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'inputSourceARN',\n          'schemaName'\n        ],\n        members: {\n          applyNormalization: {\n            type: 'boolean'\n          },\n          inputSourceARN: {},\n          schemaName: {}\n        }\n      }\n    },\n    S1t: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'output',\n          'outputS3Path'\n        ],\n        members: {\n          KMSArn: {},\n          applyNormalization: {\n            type: 'boolean'\n          },\n          output: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'name'\n              ],\n              members: {\n                hashed: {\n                  type: 'boolean'\n                },\n                name: {}\n              }\n            }\n          },\n          outputS3Path: {}\n        }\n      }\n    },\n    S1y: {\n      type: 'structure',\n      required: [\n        'resolutionType'\n      ],\n      members: {\n        providerProperties: {\n          shape: 'Su'\n        },\n        resolutionType: {},\n        ruleBasedProperties: {\n          type: 'structure',\n          required: [\n            'attributeMatchingModel',\n            'rules'\n          ],\n          members: {\n            attributeMatchingModel: {},\n            rules: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                required: [\n                  'matchingKeys',\n                  'ruleName'\n                ],\n                members: {\n                  matchingKeys: {\n                    type: 'list',\n                    member: {}\n                  },\n                  ruleName: {}\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S2a: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'fieldName',\n          'type'\n        ],\n        members: {\n          fieldName: {},\n          groupName: {},\n          matchKey: {},\n          subType: {},\n          type: {}\n        }\n      }\n    },\n    S2t: {\n      type: 'structure',\n      members: {\n        errorMessage: {}\n      }\n    },\n    S2x: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'outputS3Path',\n          'roleArn'\n        ],\n        members: {\n          KMSArn: {},\n          outputS3Path: {},\n          roleArn: {}\n        }\n      }\n    },\n    S45: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'jobId',\n          'startTime',\n          'status'\n        ],\n        members: {\n          endTime: {\n            type: 'timestamp'\n          },\n          jobId: {},\n          startTime: {\n            type: 'timestamp'\n          },\n          status: {}\n        }\n      }\n    }\n  }\n}"]}