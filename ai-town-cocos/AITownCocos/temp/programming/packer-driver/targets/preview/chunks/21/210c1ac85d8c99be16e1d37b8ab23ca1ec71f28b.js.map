{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/workspaces-web-2020-07-08.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","AssociateBrowserSettings","http","method","requestUri","responseCode","input","type","required","members","browserSettingsArn","location","locationName","portalArn","output","idempotent","AssociateIpAccessSettings","ipAccessSettingsArn","AssociateNetworkSettings","networkSettingsArn","AssociateTrustStore","trustStoreArn","AssociateUserAccessLoggingSettings","userAccessLoggingSettingsArn","AssociateUserSettings","userSettingsArn","CreateBrowserSettings","additionalEncryptionContext","shape","browserPolicy","clientToken","idempotencyToken","customerManagedKey","tags","CreateIdentityProvider","identityProviderDetails","identityProviderName","identityProviderType","identityProviderArn","CreateIpAccessSettings","description","displayName","ipRules","CreateNetworkSettings","securityGroupIds","subnetIds","vpcId","CreatePortal","authenticationType","instanceType","maxConcurrentSessions","portalEndpoint","CreateTrustStore","certificateList","CreateUserAccessLoggingSettings","kinesisStreamArn","CreateUserSettings","cookieSynchronizationConfiguration","copyAllowed","disconnectTimeoutInMinutes","downloadAllowed","idleDisconnectTimeoutInMinutes","pasteAllowed","printAllowed","uploadAllowed","DeleteBrowserSettings","DeleteIdentityProvider","DeleteIpAccessSettings","DeleteNetworkSettings","DeletePortal","DeleteTrustStore","DeleteUserAccessLoggingSettings","DeleteUserSettings","DisassociateBrowserSettings","DisassociateIpAccessSettings","DisassociateNetworkSettings","DisassociateTrustStore","DisassociateUserAccessLoggingSettings","DisassociateUserSettings","GetBrowserSettings","browserSettings","GetIdentityProvider","identityProvider","GetIpAccessSettings","ipAccessSettings","GetNetworkSettings","networkSettings","GetPortal","portal","GetPortalServiceProviderMetadata","serviceProviderSamlMetadata","GetTrustStore","trustStore","associatedPortalArns","GetTrustStoreCertificate","thumbprint","certificate","body","issuer","notValidAfter","notValidBefore","subject","GetUserAccessLoggingSettings","userAccessLoggingSettings","GetUserSettings","userSettings","ListBrowserSettings","maxResults","nextToken","member","ListIdentityProviders","identityProviders","ListIpAccessSettings","creationDate","ListNetworkSettings","ListPortals","portals","browserType","portalStatus","rendererType","ListTagsForResource","resourceArn","ListTrustStoreCertificates","ListTrustStores","trustStores","ListUserAccessLoggingSettings","ListUserSettings","TagResource","UntagResource","tagKeys","UpdateBrowserSettings","UpdateIdentityProvider","UpdateIpAccessSettings","UpdateNetworkSettings","UpdatePortal","UpdateTrustStore","certificatesToAdd","certificatesToDelete","UpdateUserAccessLoggingSettings","UpdateUserSettings","shapes","Sf","key","value","Sh","sensitive","Sk","Key","Value","Sm","Sq","Sr","Sw","Sx","Sy","ipRange","S13","S15","S1g","S1n","allowlist","blocklist","S1o","domain","name","path","S2r","S2s","S2v","S2y","S32","S35","statusReason","S3n","S3q"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-07-08',\n    endpointPrefix: 'workspaces-web',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon WorkSpaces Web',\n    serviceId: 'WorkSpaces Web',\n    signatureVersion: 'v4',\n    signingName: 'workspaces-web',\n    uid: 'workspaces-web-2020-07-08'\n  },\n  operations: {\n    AssociateBrowserSettings: {\n      http: {\n        method: 'PUT',\n        requestUri: '/portals/{portalArn+}/browserSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'browserSettingsArn',\n          'portalArn'\n        ],\n        members: {\n          browserSettingsArn: {\n            location: 'querystring',\n            locationName: 'browserSettingsArn'\n          },\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'browserSettingsArn',\n          'portalArn'\n        ],\n        members: {\n          browserSettingsArn: {},\n          portalArn: {}\n        }\n      },\n      idempotent: true\n    },\n    AssociateIpAccessSettings: {\n      http: {\n        method: 'PUT',\n        requestUri: '/portals/{portalArn+}/ipAccessSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ipAccessSettingsArn',\n          'portalArn'\n        ],\n        members: {\n          ipAccessSettingsArn: {\n            location: 'querystring',\n            locationName: 'ipAccessSettingsArn'\n          },\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ipAccessSettingsArn',\n          'portalArn'\n        ],\n        members: {\n          ipAccessSettingsArn: {},\n          portalArn: {}\n        }\n      },\n      idempotent: true\n    },\n    AssociateNetworkSettings: {\n      http: {\n        method: 'PUT',\n        requestUri: '/portals/{portalArn+}/networkSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'networkSettingsArn',\n          'portalArn'\n        ],\n        members: {\n          networkSettingsArn: {\n            location: 'querystring',\n            locationName: 'networkSettingsArn'\n          },\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'networkSettingsArn',\n          'portalArn'\n        ],\n        members: {\n          networkSettingsArn: {},\n          portalArn: {}\n        }\n      },\n      idempotent: true\n    },\n    AssociateTrustStore: {\n      http: {\n        method: 'PUT',\n        requestUri: '/portals/{portalArn+}/trustStores',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn',\n          'trustStoreArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          },\n          trustStoreArn: {\n            location: 'querystring',\n            locationName: 'trustStoreArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'portalArn',\n          'trustStoreArn'\n        ],\n        members: {\n          portalArn: {},\n          trustStoreArn: {}\n        }\n      },\n      idempotent: true\n    },\n    AssociateUserAccessLoggingSettings: {\n      http: {\n        method: 'PUT',\n        requestUri: '/portals/{portalArn+}/userAccessLoggingSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn',\n          'userAccessLoggingSettingsArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          },\n          userAccessLoggingSettingsArn: {\n            location: 'querystring',\n            locationName: 'userAccessLoggingSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'portalArn',\n          'userAccessLoggingSettingsArn'\n        ],\n        members: {\n          portalArn: {},\n          userAccessLoggingSettingsArn: {}\n        }\n      },\n      idempotent: true\n    },\n    AssociateUserSettings: {\n      http: {\n        method: 'PUT',\n        requestUri: '/portals/{portalArn+}/userSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn',\n          'userSettingsArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          },\n          userSettingsArn: {\n            location: 'querystring',\n            locationName: 'userSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'portalArn',\n          'userSettingsArn'\n        ],\n        members: {\n          portalArn: {},\n          userSettingsArn: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateBrowserSettings: {\n      http: {\n        requestUri: '/browserSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'browserPolicy'\n        ],\n        members: {\n          additionalEncryptionContext: {\n            shape: 'Sf'\n          },\n          browserPolicy: {\n            shape: 'Sh'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          customerManagedKey: {},\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'browserSettingsArn'\n        ],\n        members: {\n          browserSettingsArn: {}\n        }\n      }\n    },\n    CreateIdentityProvider: {\n      http: {\n        requestUri: '/identityProviders',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'identityProviderDetails',\n          'identityProviderName',\n          'identityProviderType',\n          'portalArn'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          identityProviderDetails: {\n            shape: 'Sq'\n          },\n          identityProviderName: {\n            shape: 'Sr'\n          },\n          identityProviderType: {},\n          portalArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'identityProviderArn'\n        ],\n        members: {\n          identityProviderArn: {}\n        }\n      }\n    },\n    CreateIpAccessSettings: {\n      http: {\n        requestUri: '/ipAccessSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ipRules'\n        ],\n        members: {\n          additionalEncryptionContext: {\n            shape: 'Sf'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          customerManagedKey: {},\n          description: {\n            shape: 'Sw'\n          },\n          displayName: {\n            shape: 'Sx'\n          },\n          ipRules: {\n            shape: 'Sy'\n          },\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ipAccessSettingsArn'\n        ],\n        members: {\n          ipAccessSettingsArn: {}\n        }\n      }\n    },\n    CreateNetworkSettings: {\n      http: {\n        requestUri: '/networkSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'securityGroupIds',\n          'subnetIds',\n          'vpcId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          securityGroupIds: {\n            shape: 'S13'\n          },\n          subnetIds: {\n            shape: 'S15'\n          },\n          tags: {\n            shape: 'Sk'\n          },\n          vpcId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'networkSettingsArn'\n        ],\n        members: {\n          networkSettingsArn: {}\n        }\n      }\n    },\n    CreatePortal: {\n      http: {\n        requestUri: '/portals',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          additionalEncryptionContext: {\n            shape: 'Sf'\n          },\n          authenticationType: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          customerManagedKey: {},\n          displayName: {\n            shape: 'Sx'\n          },\n          instanceType: {},\n          maxConcurrentSessions: {\n            type: 'integer'\n          },\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'portalArn',\n          'portalEndpoint'\n        ],\n        members: {\n          portalArn: {},\n          portalEndpoint: {}\n        }\n      }\n    },\n    CreateTrustStore: {\n      http: {\n        requestUri: '/trustStores',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'certificateList'\n        ],\n        members: {\n          certificateList: {\n            shape: 'S1g'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'trustStoreArn'\n        ],\n        members: {\n          trustStoreArn: {}\n        }\n      }\n    },\n    CreateUserAccessLoggingSettings: {\n      http: {\n        requestUri: '/userAccessLoggingSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'kinesisStreamArn'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          kinesisStreamArn: {},\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'userAccessLoggingSettingsArn'\n        ],\n        members: {\n          userAccessLoggingSettingsArn: {}\n        }\n      }\n    },\n    CreateUserSettings: {\n      http: {\n        requestUri: '/userSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'copyAllowed',\n          'downloadAllowed',\n          'pasteAllowed',\n          'printAllowed',\n          'uploadAllowed'\n        ],\n        members: {\n          additionalEncryptionContext: {\n            shape: 'Sf'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          cookieSynchronizationConfiguration: {\n            shape: 'S1n'\n          },\n          copyAllowed: {},\n          customerManagedKey: {},\n          disconnectTimeoutInMinutes: {\n            type: 'integer'\n          },\n          downloadAllowed: {},\n          idleDisconnectTimeoutInMinutes: {\n            type: 'integer'\n          },\n          pasteAllowed: {},\n          printAllowed: {},\n          tags: {\n            shape: 'Sk'\n          },\n          uploadAllowed: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'userSettingsArn'\n        ],\n        members: {\n          userSettingsArn: {}\n        }\n      }\n    },\n    DeleteBrowserSettings: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/browserSettings/{browserSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'browserSettingsArn'\n        ],\n        members: {\n          browserSettingsArn: {\n            location: 'uri',\n            locationName: 'browserSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteIdentityProvider: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/identityProviders/{identityProviderArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'identityProviderArn'\n        ],\n        members: {\n          identityProviderArn: {\n            location: 'uri',\n            locationName: 'identityProviderArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteIpAccessSettings: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/ipAccessSettings/{ipAccessSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ipAccessSettingsArn'\n        ],\n        members: {\n          ipAccessSettingsArn: {\n            location: 'uri',\n            locationName: 'ipAccessSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteNetworkSettings: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/networkSettings/{networkSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'networkSettingsArn'\n        ],\n        members: {\n          networkSettingsArn: {\n            location: 'uri',\n            locationName: 'networkSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeletePortal: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/portals/{portalArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteTrustStore: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/trustStores/{trustStoreArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'trustStoreArn'\n        ],\n        members: {\n          trustStoreArn: {\n            location: 'uri',\n            locationName: 'trustStoreArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteUserAccessLoggingSettings: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/userAccessLoggingSettings/{userAccessLoggingSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'userAccessLoggingSettingsArn'\n        ],\n        members: {\n          userAccessLoggingSettingsArn: {\n            location: 'uri',\n            locationName: 'userAccessLoggingSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteUserSettings: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/userSettings/{userSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'userSettingsArn'\n        ],\n        members: {\n          userSettingsArn: {\n            location: 'uri',\n            locationName: 'userSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DisassociateBrowserSettings: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/portals/{portalArn+}/browserSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DisassociateIpAccessSettings: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/portals/{portalArn+}/ipAccessSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DisassociateNetworkSettings: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/portals/{portalArn+}/networkSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DisassociateTrustStore: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/portals/{portalArn+}/trustStores',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DisassociateUserAccessLoggingSettings: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/portals/{portalArn+}/userAccessLoggingSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DisassociateUserSettings: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/portals/{portalArn+}/userSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetBrowserSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/browserSettings/{browserSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'browserSettingsArn'\n        ],\n        members: {\n          browserSettingsArn: {\n            location: 'uri',\n            locationName: 'browserSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          browserSettings: {\n            shape: 'S2r'\n          }\n        }\n      }\n    },\n    GetIdentityProvider: {\n      http: {\n        method: 'GET',\n        requestUri: '/identityProviders/{identityProviderArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'identityProviderArn'\n        ],\n        members: {\n          identityProviderArn: {\n            location: 'uri',\n            locationName: 'identityProviderArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          identityProvider: {\n            shape: 'S2v'\n          }\n        }\n      }\n    },\n    GetIpAccessSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/ipAccessSettings/{ipAccessSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ipAccessSettingsArn'\n        ],\n        members: {\n          ipAccessSettingsArn: {\n            location: 'uri',\n            locationName: 'ipAccessSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ipAccessSettings: {\n            shape: 'S2y'\n          }\n        }\n      }\n    },\n    GetNetworkSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/networkSettings/{networkSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'networkSettingsArn'\n        ],\n        members: {\n          networkSettingsArn: {\n            location: 'uri',\n            locationName: 'networkSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          networkSettings: {\n            shape: 'S32'\n          }\n        }\n      }\n    },\n    GetPortal: {\n      http: {\n        method: 'GET',\n        requestUri: '/portals/{portalArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          portal: {\n            shape: 'S35'\n          }\n        }\n      }\n    },\n    GetPortalServiceProviderMetadata: {\n      http: {\n        method: 'GET',\n        requestUri: '/portalIdp/{portalArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          portalArn: {},\n          serviceProviderSamlMetadata: {}\n        }\n      }\n    },\n    GetTrustStore: {\n      http: {\n        method: 'GET',\n        requestUri: '/trustStores/{trustStoreArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'trustStoreArn'\n        ],\n        members: {\n          trustStoreArn: {\n            location: 'uri',\n            locationName: 'trustStoreArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          trustStore: {\n            type: 'structure',\n            required: [\n              'trustStoreArn'\n            ],\n            members: {\n              associatedPortalArns: {\n                shape: 'S2s'\n              },\n              trustStoreArn: {}\n            }\n          }\n        }\n      }\n    },\n    GetTrustStoreCertificate: {\n      http: {\n        method: 'GET',\n        requestUri: '/trustStores/{trustStoreArn+}/certificate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'thumbprint',\n          'trustStoreArn'\n        ],\n        members: {\n          thumbprint: {\n            location: 'querystring',\n            locationName: 'thumbprint'\n          },\n          trustStoreArn: {\n            location: 'uri',\n            locationName: 'trustStoreArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'trustStoreArn'\n        ],\n        members: {\n          certificate: {\n            type: 'structure',\n            members: {\n              body: {\n                type: 'blob'\n              },\n              issuer: {},\n              notValidAfter: {\n                type: 'timestamp'\n              },\n              notValidBefore: {\n                type: 'timestamp'\n              },\n              subject: {},\n              thumbprint: {}\n            }\n          },\n          trustStoreArn: {}\n        }\n      }\n    },\n    GetUserAccessLoggingSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/userAccessLoggingSettings/{userAccessLoggingSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'userAccessLoggingSettingsArn'\n        ],\n        members: {\n          userAccessLoggingSettingsArn: {\n            location: 'uri',\n            locationName: 'userAccessLoggingSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          userAccessLoggingSettings: {\n            shape: 'S3n'\n          }\n        }\n      }\n    },\n    GetUserSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/userSettings/{userSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'userSettingsArn'\n        ],\n        members: {\n          userSettingsArn: {\n            location: 'uri',\n            locationName: 'userSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          userSettings: {\n            shape: 'S3q'\n          }\n        }\n      }\n    },\n    ListBrowserSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/browserSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          browserSettings: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'browserSettingsArn'\n              ],\n              members: {\n                browserSettingsArn: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListIdentityProviders: {\n      http: {\n        method: 'GET',\n        requestUri: '/portals/{portalArn+}/identityProviders',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          identityProviders: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'identityProviderArn'\n              ],\n              members: {\n                identityProviderArn: {},\n                identityProviderName: {\n                  shape: 'Sr'\n                },\n                identityProviderType: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListIpAccessSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/ipAccessSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ipAccessSettings: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'ipAccessSettingsArn'\n              ],\n              members: {\n                creationDate: {\n                  type: 'timestamp'\n                },\n                description: {\n                  shape: 'Sw'\n                },\n                displayName: {\n                  shape: 'Sx'\n                },\n                ipAccessSettingsArn: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListNetworkSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/networkSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          networkSettings: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'networkSettingsArn'\n              ],\n              members: {\n                networkSettingsArn: {},\n                vpcId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListPortals: {\n      http: {\n        method: 'GET',\n        requestUri: '/portals',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          portals: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'portalArn'\n              ],\n              members: {\n                authenticationType: {},\n                browserSettingsArn: {},\n                browserType: {},\n                creationDate: {\n                  type: 'timestamp'\n                },\n                displayName: {\n                  shape: 'Sx'\n                },\n                instanceType: {},\n                ipAccessSettingsArn: {},\n                maxConcurrentSessions: {\n                  type: 'integer'\n                },\n                networkSettingsArn: {},\n                portalArn: {},\n                portalEndpoint: {},\n                portalStatus: {},\n                rendererType: {},\n                trustStoreArn: {},\n                userAccessLoggingSettingsArn: {},\n                userSettingsArn: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      }\n    },\n    ListTrustStoreCertificates: {\n      http: {\n        method: 'GET',\n        requestUri: '/trustStores/{trustStoreArn+}/certificates',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'trustStoreArn'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          trustStoreArn: {\n            location: 'uri',\n            locationName: 'trustStoreArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'trustStoreArn'\n        ],\n        members: {\n          certificateList: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                issuer: {},\n                notValidAfter: {\n                  type: 'timestamp'\n                },\n                notValidBefore: {\n                  type: 'timestamp'\n                },\n                subject: {},\n                thumbprint: {}\n              }\n            }\n          },\n          nextToken: {},\n          trustStoreArn: {}\n        }\n      }\n    },\n    ListTrustStores: {\n      http: {\n        method: 'GET',\n        requestUri: '/trustStores',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          trustStores: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                trustStoreArn: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListUserAccessLoggingSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/userAccessLoggingSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          userAccessLoggingSettings: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'userAccessLoggingSettingsArn'\n              ],\n              members: {\n                kinesisStreamArn: {},\n                userAccessLoggingSettingsArn: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListUserSettings: {\n      http: {\n        method: 'GET',\n        requestUri: '/userSettings',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          userSettings: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'userSettingsArn'\n              ],\n              members: {\n                cookieSynchronizationConfiguration: {\n                  shape: 'S1n'\n                },\n                copyAllowed: {},\n                disconnectTimeoutInMinutes: {\n                  type: 'integer'\n                },\n                downloadAllowed: {},\n                idleDisconnectTimeoutInMinutes: {\n                  type: 'integer'\n                },\n                pasteAllowed: {},\n                printAllowed: {},\n                uploadAllowed: {},\n                userSettingsArn: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {\n              shape: 'Sm'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateBrowserSettings: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/browserSettings/{browserSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'browserSettingsArn'\n        ],\n        members: {\n          browserPolicy: {\n            shape: 'Sh'\n          },\n          browserSettingsArn: {\n            location: 'uri',\n            locationName: 'browserSettingsArn'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'browserSettings'\n        ],\n        members: {\n          browserSettings: {\n            shape: 'S2r'\n          }\n        }\n      }\n    },\n    UpdateIdentityProvider: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/identityProviders/{identityProviderArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'identityProviderArn'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          identityProviderArn: {\n            location: 'uri',\n            locationName: 'identityProviderArn'\n          },\n          identityProviderDetails: {\n            shape: 'Sq'\n          },\n          identityProviderName: {\n            shape: 'Sr'\n          },\n          identityProviderType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'identityProvider'\n        ],\n        members: {\n          identityProvider: {\n            shape: 'S2v'\n          }\n        }\n      }\n    },\n    UpdateIpAccessSettings: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/ipAccessSettings/{ipAccessSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ipAccessSettingsArn'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          description: {\n            shape: 'Sw'\n          },\n          displayName: {\n            shape: 'Sx'\n          },\n          ipAccessSettingsArn: {\n            location: 'uri',\n            locationName: 'ipAccessSettingsArn'\n          },\n          ipRules: {\n            shape: 'Sy'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ipAccessSettings'\n        ],\n        members: {\n          ipAccessSettings: {\n            shape: 'S2y'\n          }\n        }\n      }\n    },\n    UpdateNetworkSettings: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/networkSettings/{networkSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'networkSettingsArn'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          networkSettingsArn: {\n            location: 'uri',\n            locationName: 'networkSettingsArn'\n          },\n          securityGroupIds: {\n            shape: 'S13'\n          },\n          subnetIds: {\n            shape: 'S15'\n          },\n          vpcId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'networkSettings'\n        ],\n        members: {\n          networkSettings: {\n            shape: 'S32'\n          }\n        }\n      }\n    },\n    UpdatePortal: {\n      http: {\n        method: 'PUT',\n        requestUri: '/portals/{portalArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'portalArn'\n        ],\n        members: {\n          authenticationType: {},\n          displayName: {\n            shape: 'Sx'\n          },\n          instanceType: {},\n          maxConcurrentSessions: {\n            type: 'integer'\n          },\n          portalArn: {\n            location: 'uri',\n            locationName: 'portalArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          portal: {\n            shape: 'S35'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateTrustStore: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/trustStores/{trustStoreArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'trustStoreArn'\n        ],\n        members: {\n          certificatesToAdd: {\n            shape: 'S1g'\n          },\n          certificatesToDelete: {\n            type: 'list',\n            member: {}\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          trustStoreArn: {\n            location: 'uri',\n            locationName: 'trustStoreArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'trustStoreArn'\n        ],\n        members: {\n          trustStoreArn: {}\n        }\n      }\n    },\n    UpdateUserAccessLoggingSettings: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/userAccessLoggingSettings/{userAccessLoggingSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'userAccessLoggingSettingsArn'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          kinesisStreamArn: {},\n          userAccessLoggingSettingsArn: {\n            location: 'uri',\n            locationName: 'userAccessLoggingSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'userAccessLoggingSettings'\n        ],\n        members: {\n          userAccessLoggingSettings: {\n            shape: 'S3n'\n          }\n        }\n      }\n    },\n    UpdateUserSettings: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/userSettings/{userSettingsArn+}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'userSettingsArn'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          cookieSynchronizationConfiguration: {\n            shape: 'S1n'\n          },\n          copyAllowed: {},\n          disconnectTimeoutInMinutes: {\n            type: 'integer'\n          },\n          downloadAllowed: {},\n          idleDisconnectTimeoutInMinutes: {\n            type: 'integer'\n          },\n          pasteAllowed: {},\n          printAllowed: {},\n          uploadAllowed: {},\n          userSettingsArn: {\n            location: 'uri',\n            locationName: 'userSettingsArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'userSettings'\n        ],\n        members: {\n          userSettings: {\n            shape: 'S3q'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    Sf: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sh: {\n      type: 'string',\n      sensitive: true\n    },\n    Sk: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {\n            shape: 'Sm'\n          },\n          Value: {\n            type: 'string',\n            sensitive: true\n          }\n        },\n        sensitive: true\n      }\n    },\n    Sm: {\n      type: 'string',\n      sensitive: true\n    },\n    Sq: {\n      type: 'map',\n      key: {},\n      value: {},\n      sensitive: true\n    },\n    Sr: {\n      type: 'string',\n      sensitive: true\n    },\n    Sw: {\n      type: 'string',\n      sensitive: true\n    },\n    Sx: {\n      type: 'string',\n      sensitive: true\n    },\n    Sy: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ipRange'\n        ],\n        members: {\n          description: {\n            shape: 'Sw'\n          },\n          ipRange: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      },\n      sensitive: true\n    },\n    S13: {\n      type: 'list',\n      member: {}\n    },\n    S15: {\n      type: 'list',\n      member: {}\n    },\n    S1g: {\n      type: 'list',\n      member: {\n        type: 'blob'\n      }\n    },\n    S1n: {\n      type: 'structure',\n      required: [\n        'allowlist'\n      ],\n      members: {\n        allowlist: {\n          shape: 'S1o'\n        },\n        blocklist: {\n          shape: 'S1o'\n        }\n      },\n      sensitive: true\n    },\n    S1o: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'domain'\n        ],\n        members: {\n          domain: {\n            type: 'string',\n            sensitive: true\n          },\n          name: {\n            type: 'string',\n            sensitive: true\n          },\n          path: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      }\n    },\n    S2r: {\n      type: 'structure',\n      required: [\n        'browserSettingsArn'\n      ],\n      members: {\n        additionalEncryptionContext: {\n          shape: 'Sf'\n        },\n        associatedPortalArns: {\n          shape: 'S2s'\n        },\n        browserPolicy: {\n          shape: 'Sh'\n        },\n        browserSettingsArn: {},\n        customerManagedKey: {}\n      }\n    },\n    S2s: {\n      type: 'list',\n      member: {}\n    },\n    S2v: {\n      type: 'structure',\n      required: [\n        'identityProviderArn'\n      ],\n      members: {\n        identityProviderArn: {},\n        identityProviderDetails: {\n          shape: 'Sq'\n        },\n        identityProviderName: {\n          shape: 'Sr'\n        },\n        identityProviderType: {}\n      }\n    },\n    S2y: {\n      type: 'structure',\n      required: [\n        'ipAccessSettingsArn'\n      ],\n      members: {\n        additionalEncryptionContext: {\n          shape: 'Sf'\n        },\n        associatedPortalArns: {\n          shape: 'S2s'\n        },\n        creationDate: {\n          type: 'timestamp'\n        },\n        customerManagedKey: {},\n        description: {\n          shape: 'Sw'\n        },\n        displayName: {\n          shape: 'Sx'\n        },\n        ipAccessSettingsArn: {},\n        ipRules: {\n          shape: 'Sy'\n        }\n      }\n    },\n    S32: {\n      type: 'structure',\n      required: [\n        'networkSettingsArn'\n      ],\n      members: {\n        associatedPortalArns: {\n          shape: 'S2s'\n        },\n        networkSettingsArn: {},\n        securityGroupIds: {\n          shape: 'S13'\n        },\n        subnetIds: {\n          shape: 'S15'\n        },\n        vpcId: {}\n      }\n    },\n    S35: {\n      type: 'structure',\n      required: [\n        'portalArn'\n      ],\n      members: {\n        additionalEncryptionContext: {\n          shape: 'Sf'\n        },\n        authenticationType: {},\n        browserSettingsArn: {},\n        browserType: {},\n        creationDate: {\n          type: 'timestamp'\n        },\n        customerManagedKey: {},\n        displayName: {\n          shape: 'Sx'\n        },\n        instanceType: {},\n        ipAccessSettingsArn: {},\n        maxConcurrentSessions: {\n          type: 'integer'\n        },\n        networkSettingsArn: {},\n        portalArn: {},\n        portalEndpoint: {},\n        portalStatus: {},\n        rendererType: {},\n        statusReason: {},\n        trustStoreArn: {},\n        userAccessLoggingSettingsArn: {},\n        userSettingsArn: {}\n      }\n    },\n    S3n: {\n      type: 'structure',\n      required: [\n        'userAccessLoggingSettingsArn'\n      ],\n      members: {\n        associatedPortalArns: {\n          shape: 'S2s'\n        },\n        kinesisStreamArn: {},\n        userAccessLoggingSettingsArn: {}\n      }\n    },\n    S3q: {\n      type: 'structure',\n      required: [\n        'userSettingsArn'\n      ],\n      members: {\n        additionalEncryptionContext: {\n          shape: 'Sf'\n        },\n        associatedPortalArns: {\n          shape: 'S2s'\n        },\n        cookieSynchronizationConfiguration: {\n          shape: 'S1n'\n        },\n        copyAllowed: {},\n        customerManagedKey: {},\n        disconnectTimeoutInMinutes: {\n          type: 'integer'\n        },\n        downloadAllowed: {},\n        idleDisconnectTimeoutInMinutes: {\n          type: 'integer'\n        },\n        pasteAllowed: {},\n        printAllowed: {},\n        uploadAllowed: {},\n        userSettingsArn: {}\n      }\n    }\n  }\n}"]}