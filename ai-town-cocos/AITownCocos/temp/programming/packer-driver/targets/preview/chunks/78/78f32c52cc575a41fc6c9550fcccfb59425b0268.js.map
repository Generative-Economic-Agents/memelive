{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/rds-data-2018-08-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","BatchExecuteStatement","http","requestUri","responseCode","input","type","required","members","resourceArn","secretArn","sql","database","schema","parameterSets","member","shape","transactionId","output","updateResults","generatedFields","BeginTransaction","CommitTransaction","transactionStatus","ExecuteSql","dbClusterOrInstanceArn","awsSecretStoreArn","sqlStatements","sqlStatementResults","resultFrame","resultSetMetadata","columnCount","columnMetadata","records","values","numberOfRecordsUpdated","deprecated","deprecatedMessage","ExecuteStatement","parameters","includeResultMetadata","continueAfterTimeout","resultSetOptions","decimalReturnType","longReturnType","formatRecordsAs","formattedRecords","RollbackTransaction","shapes","S6","name","value","typeHint","S9","isNull","booleanValue","longValue","doubleValue","stringValue","blobValue","arrayValue","union","Sf","booleanValues","longValues","doubleValues","stringValues","arrayValues","Sq","S13","typeName","label","schemaName","tableName","isAutoIncrement","isSigned","isCurrency","isCaseSensitive","nullable","precision","scale","arrayBaseColumnType","S1a","bitValue","bigIntValue","intValue","realValue","structValue","attributes","S1d"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2018-08-01',\n    endpointPrefix: 'rds-data',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'AWS RDS DataService',\n    serviceId: 'RDS Data',\n    signatureVersion: 'v4',\n    signingName: 'rds-data',\n    uid: 'rds-data-2018-08-01'\n  },\n  operations: {\n    BatchExecuteStatement: {\n      http: {\n        requestUri: '/BatchExecute',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'secretArn',\n          'sql'\n        ],\n        members: {\n          resourceArn: {},\n          secretArn: {},\n          sql: {},\n          database: {},\n          schema: {},\n          parameterSets: {\n            type: 'list',\n            member: {\n              shape: 'S6'\n            }\n          },\n          transactionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          updateResults: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                generatedFields: {\n                  shape: 'Sq'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    BeginTransaction: {\n      http: {\n        requestUri: '/BeginTransaction',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'secretArn'\n        ],\n        members: {\n          resourceArn: {},\n          secretArn: {},\n          database: {},\n          schema: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          transactionId: {}\n        }\n      }\n    },\n    CommitTransaction: {\n      http: {\n        requestUri: '/CommitTransaction',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'secretArn',\n          'transactionId'\n        ],\n        members: {\n          resourceArn: {},\n          secretArn: {},\n          transactionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          transactionStatus: {}\n        }\n      }\n    },\n    ExecuteSql: {\n      http: {\n        requestUri: '/ExecuteSql',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'dbClusterOrInstanceArn',\n          'awsSecretStoreArn',\n          'sqlStatements'\n        ],\n        members: {\n          dbClusterOrInstanceArn: {},\n          awsSecretStoreArn: {},\n          sqlStatements: {},\n          database: {},\n          schema: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          sqlStatementResults: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                resultFrame: {\n                  type: 'structure',\n                  members: {\n                    resultSetMetadata: {\n                      type: 'structure',\n                      members: {\n                        columnCount: {\n                          type: 'long'\n                        },\n                        columnMetadata: {\n                          shape: 'S13'\n                        }\n                      }\n                    },\n                    records: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          values: {\n                            type: 'list',\n                            member: {\n                              shape: 'S1a'\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                numberOfRecordsUpdated: {\n                  type: 'long'\n                }\n              }\n            }\n          }\n        }\n      },\n      deprecated: true,\n      deprecatedMessage: 'The ExecuteSql API is deprecated, please use the ExecuteStatement API.'\n    },\n    ExecuteStatement: {\n      http: {\n        requestUri: '/Execute',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'secretArn',\n          'sql'\n        ],\n        members: {\n          resourceArn: {},\n          secretArn: {},\n          sql: {},\n          database: {},\n          schema: {},\n          parameters: {\n            shape: 'S6'\n          },\n          transactionId: {},\n          includeResultMetadata: {\n            type: 'boolean'\n          },\n          continueAfterTimeout: {\n            type: 'boolean'\n          },\n          resultSetOptions: {\n            type: 'structure',\n            members: {\n              decimalReturnType: {},\n              longReturnType: {}\n            }\n          },\n          formatRecordsAs: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          records: {\n            type: 'list',\n            member: {\n              shape: 'Sq'\n            }\n          },\n          columnMetadata: {\n            shape: 'S13'\n          },\n          numberOfRecordsUpdated: {\n            type: 'long'\n          },\n          generatedFields: {\n            shape: 'Sq'\n          },\n          formattedRecords: {}\n        }\n      }\n    },\n    RollbackTransaction: {\n      http: {\n        requestUri: '/RollbackTransaction',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'secretArn',\n          'transactionId'\n        ],\n        members: {\n          resourceArn: {},\n          secretArn: {},\n          transactionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          transactionStatus: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S6: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          name: {},\n          value: {\n            shape: 'S9'\n          },\n          typeHint: {}\n        }\n      }\n    },\n    S9: {\n      type: 'structure',\n      members: {\n        isNull: {\n          type: 'boolean'\n        },\n        booleanValue: {\n          type: 'boolean'\n        },\n        longValue: {\n          type: 'long'\n        },\n        doubleValue: {\n          type: 'double'\n        },\n        stringValue: {},\n        blobValue: {\n          type: 'blob'\n        },\n        arrayValue: {\n          shape: 'Sf'\n        }\n      },\n      union: true\n    },\n    Sf: {\n      type: 'structure',\n      members: {\n        booleanValues: {\n          type: 'list',\n          member: {\n            type: 'boolean'\n          }\n        },\n        longValues: {\n          type: 'list',\n          member: {\n            type: 'long'\n          }\n        },\n        doubleValues: {\n          type: 'list',\n          member: {\n            type: 'double'\n          }\n        },\n        stringValues: {\n          type: 'list',\n          member: {}\n        },\n        arrayValues: {\n          type: 'list',\n          member: {\n            shape: 'Sf'\n          }\n        }\n      },\n      union: true\n    },\n    Sq: {\n      type: 'list',\n      member: {\n        shape: 'S9'\n      }\n    },\n    S13: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          name: {},\n          type: {\n            type: 'integer'\n          },\n          typeName: {},\n          label: {},\n          schemaName: {},\n          tableName: {},\n          isAutoIncrement: {\n            type: 'boolean'\n          },\n          isSigned: {\n            type: 'boolean'\n          },\n          isCurrency: {\n            type: 'boolean'\n          },\n          isCaseSensitive: {\n            type: 'boolean'\n          },\n          nullable: {\n            type: 'integer'\n          },\n          precision: {\n            type: 'integer'\n          },\n          scale: {\n            type: 'integer'\n          },\n          arrayBaseColumnType: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    S1a: {\n      type: 'structure',\n      members: {\n        isNull: {\n          type: 'boolean'\n        },\n        bitValue: {\n          type: 'boolean'\n        },\n        bigIntValue: {\n          type: 'long'\n        },\n        intValue: {\n          type: 'integer'\n        },\n        doubleValue: {\n          type: 'double'\n        },\n        realValue: {\n          type: 'float'\n        },\n        stringValue: {},\n        blobValue: {\n          type: 'blob'\n        },\n        arrayValues: {\n          shape: 'S1d'\n        },\n        structValue: {\n          type: 'structure',\n          members: {\n            attributes: {\n              shape: 'S1d'\n            }\n          }\n        }\n      },\n      union: true\n    },\n    S1d: {\n      type: 'list',\n      member: {\n        shape: 'S1a'\n      }\n    }\n  }\n}"]}