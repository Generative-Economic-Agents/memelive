{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/docdb-elastic-2022-11-28.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CopyClusterSnapshot","http","requestUri","responseCode","input","type","required","members","copyTags","kmsKeyId","snapshotArn","location","locationName","tags","shape","targetSnapshotName","output","snapshot","idempotent","CreateCluster","adminUserName","adminUserPassword","authType","backupRetentionPeriod","clientToken","idempotencyToken","clusterName","preferredBackupWindow","preferredMaintenanceWindow","shardCapacity","shardCount","shardInstanceCount","subnetIds","vpcSecurityGroupIds","cluster","CreateClusterSnapshot","clusterArn","snapshotName","DeleteCluster","method","DeleteClusterSnapshot","GetCluster","GetClusterSnapshot","ListClusterSnapshots","maxResults","nextToken","snapshotType","snapshots","member","snapshotCreationTime","status","ListClusters","clusters","ListTagsForResource","resourceArn","RestoreClusterFromSnapshot","StartCluster","StopCluster","TagResource","UntagResource","tagKeys","UpdateCluster","shapes","S4","key","value","S9","clusterCreationTime","Sc","Se","sensitive","Si","clusterEndpoint","createTime","shards","shardId"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2022-11-28',\n    endpointPrefix: 'docdb-elastic',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'DocDB Elastic',\n    serviceFullName: 'Amazon DocumentDB Elastic Clusters',\n    serviceId: 'DocDB Elastic',\n    signatureVersion: 'v4',\n    signingName: 'docdb-elastic',\n    uid: 'docdb-elastic-2022-11-28'\n  },\n  operations: {\n    CopyClusterSnapshot: {\n      http: {\n        requestUri: '/cluster-snapshot/{snapshotArn}/copy',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'snapshotArn',\n          'targetSnapshotName'\n        ],\n        members: {\n          copyTags: {\n            type: 'boolean'\n          },\n          kmsKeyId: {},\n          snapshotArn: {\n            location: 'uri',\n            locationName: 'snapshotArn'\n          },\n          tags: {\n            shape: 'S4'\n          },\n          targetSnapshotName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'snapshot'\n        ],\n        members: {\n          snapshot: {\n            shape: 'S9'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateCluster: {\n      http: {\n        requestUri: '/cluster',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'adminUserName',\n          'adminUserPassword',\n          'authType',\n          'clusterName',\n          'shardCapacity',\n          'shardCount'\n        ],\n        members: {\n          adminUserName: {},\n          adminUserPassword: {\n            shape: 'Se'\n          },\n          authType: {},\n          backupRetentionPeriod: {\n            type: 'integer'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          clusterName: {},\n          kmsKeyId: {},\n          preferredBackupWindow: {},\n          preferredMaintenanceWindow: {},\n          shardCapacity: {\n            type: 'integer'\n          },\n          shardCount: {\n            type: 'integer'\n          },\n          shardInstanceCount: {\n            type: 'integer'\n          },\n          subnetIds: {\n            shape: 'Sc'\n          },\n          tags: {\n            shape: 'S4'\n          },\n          vpcSecurityGroupIds: {\n            shape: 'Sc'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'cluster'\n        ],\n        members: {\n          cluster: {\n            shape: 'Si'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateClusterSnapshot: {\n      http: {\n        requestUri: '/cluster-snapshot',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clusterArn',\n          'snapshotName'\n        ],\n        members: {\n          clusterArn: {},\n          snapshotName: {},\n          tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'snapshot'\n        ],\n        members: {\n          snapshot: {\n            shape: 'S9'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteCluster: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/cluster/{clusterArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clusterArn'\n        ],\n        members: {\n          clusterArn: {\n            location: 'uri',\n            locationName: 'clusterArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'cluster'\n        ],\n        members: {\n          cluster: {\n            shape: 'Si'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteClusterSnapshot: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/cluster-snapshot/{snapshotArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'snapshotArn'\n        ],\n        members: {\n          snapshotArn: {\n            location: 'uri',\n            locationName: 'snapshotArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'snapshot'\n        ],\n        members: {\n          snapshot: {\n            shape: 'S9'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetCluster: {\n      http: {\n        method: 'GET',\n        requestUri: '/cluster/{clusterArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clusterArn'\n        ],\n        members: {\n          clusterArn: {\n            location: 'uri',\n            locationName: 'clusterArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'cluster'\n        ],\n        members: {\n          cluster: {\n            shape: 'Si'\n          }\n        }\n      }\n    },\n    GetClusterSnapshot: {\n      http: {\n        method: 'GET',\n        requestUri: '/cluster-snapshot/{snapshotArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'snapshotArn'\n        ],\n        members: {\n          snapshotArn: {\n            location: 'uri',\n            locationName: 'snapshotArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'snapshot'\n        ],\n        members: {\n          snapshot: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    ListClusterSnapshots: {\n      http: {\n        method: 'GET',\n        requestUri: '/cluster-snapshots',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          clusterArn: {\n            location: 'querystring',\n            locationName: 'clusterArn'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          snapshotType: {\n            location: 'querystring',\n            locationName: 'snapshotType'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          snapshots: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'clusterArn',\n                'snapshotArn',\n                'snapshotCreationTime',\n                'snapshotName',\n                'status'\n              ],\n              members: {\n                clusterArn: {},\n                snapshotArn: {},\n                snapshotCreationTime: {},\n                snapshotName: {},\n                status: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListClusters: {\n      http: {\n        method: 'GET',\n        requestUri: '/clusters',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          clusters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'clusterArn',\n                'clusterName',\n                'status'\n              ],\n              members: {\n                clusterArn: {},\n                clusterName: {},\n                status: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S4'\n          }\n        }\n      }\n    },\n    RestoreClusterFromSnapshot: {\n      http: {\n        requestUri: '/cluster-snapshot/{snapshotArn}/restore',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clusterName',\n          'snapshotArn'\n        ],\n        members: {\n          clusterName: {},\n          kmsKeyId: {},\n          shardCapacity: {\n            type: 'integer'\n          },\n          shardInstanceCount: {\n            type: 'integer'\n          },\n          snapshotArn: {\n            location: 'uri',\n            locationName: 'snapshotArn'\n          },\n          subnetIds: {\n            shape: 'Sc'\n          },\n          tags: {\n            shape: 'S4'\n          },\n          vpcSecurityGroupIds: {\n            shape: 'Sc'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'cluster'\n        ],\n        members: {\n          cluster: {\n            shape: 'Si'\n          }\n        }\n      },\n      idempotent: true\n    },\n    StartCluster: {\n      http: {\n        requestUri: '/cluster/{clusterArn}/start',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clusterArn'\n        ],\n        members: {\n          clusterArn: {\n            location: 'uri',\n            locationName: 'clusterArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'cluster'\n        ],\n        members: {\n          cluster: {\n            shape: 'Si'\n          }\n        }\n      },\n      idempotent: true\n    },\n    StopCluster: {\n      http: {\n        requestUri: '/cluster/{clusterArn}/stop',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clusterArn'\n        ],\n        members: {\n          clusterArn: {\n            location: 'uri',\n            locationName: 'clusterArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'cluster'\n        ],\n        members: {\n          cluster: {\n            shape: 'Si'\n          }\n        }\n      },\n      idempotent: true\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateCluster: {\n      http: {\n        method: 'PUT',\n        requestUri: '/cluster/{clusterArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clusterArn'\n        ],\n        members: {\n          adminUserPassword: {\n            shape: 'Se'\n          },\n          authType: {},\n          backupRetentionPeriod: {\n            type: 'integer'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          clusterArn: {\n            location: 'uri',\n            locationName: 'clusterArn'\n          },\n          preferredBackupWindow: {},\n          preferredMaintenanceWindow: {},\n          shardCapacity: {\n            type: 'integer'\n          },\n          shardCount: {\n            type: 'integer'\n          },\n          shardInstanceCount: {\n            type: 'integer'\n          },\n          subnetIds: {\n            shape: 'Sc'\n          },\n          vpcSecurityGroupIds: {\n            shape: 'Sc'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'cluster'\n        ],\n        members: {\n          cluster: {\n            shape: 'Si'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S9: {\n      type: 'structure',\n      required: [\n        'adminUserName',\n        'clusterArn',\n        'clusterCreationTime',\n        'kmsKeyId',\n        'snapshotArn',\n        'snapshotCreationTime',\n        'snapshotName',\n        'status',\n        'subnetIds',\n        'vpcSecurityGroupIds'\n      ],\n      members: {\n        adminUserName: {},\n        clusterArn: {},\n        clusterCreationTime: {},\n        kmsKeyId: {},\n        snapshotArn: {},\n        snapshotCreationTime: {},\n        snapshotName: {},\n        snapshotType: {},\n        status: {},\n        subnetIds: {\n          shape: 'Sc'\n        },\n        vpcSecurityGroupIds: {\n          shape: 'Sc'\n        }\n      }\n    },\n    Sc: {\n      type: 'list',\n      member: {}\n    },\n    Se: {\n      type: 'string',\n      sensitive: true\n    },\n    Si: {\n      type: 'structure',\n      required: [\n        'adminUserName',\n        'authType',\n        'clusterArn',\n        'clusterEndpoint',\n        'clusterName',\n        'createTime',\n        'kmsKeyId',\n        'preferredMaintenanceWindow',\n        'shardCapacity',\n        'shardCount',\n        'status',\n        'subnetIds',\n        'vpcSecurityGroupIds'\n      ],\n      members: {\n        adminUserName: {},\n        authType: {},\n        backupRetentionPeriod: {\n          type: 'integer'\n        },\n        clusterArn: {},\n        clusterEndpoint: {},\n        clusterName: {},\n        createTime: {},\n        kmsKeyId: {},\n        preferredBackupWindow: {},\n        preferredMaintenanceWindow: {},\n        shardCapacity: {\n          type: 'integer'\n        },\n        shardCount: {\n          type: 'integer'\n        },\n        shardInstanceCount: {\n          type: 'integer'\n        },\n        shards: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'createTime',\n              'shardId',\n              'status'\n            ],\n            members: {\n              createTime: {},\n              shardId: {},\n              status: {}\n            }\n          }\n        },\n        status: {},\n        subnetIds: {\n          shape: 'Sc'\n        },\n        vpcSecurityGroupIds: {\n          shape: 'Sc'\n        }\n      }\n    }\n  }\n}"]}