{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/services/s3.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","url","define","exports","require","module","__filename","__dirname","AWS","v4Credentials","resolveRegionalEndpointsFlag","s3util","regionUtil","operationsWith200StatusCodeError","regionRedirectErrorCodes","OBJECT_LAMBDA_SERVICE","util","update","S3","prototype","getSignatureVersion","request","defaultApiVersion","api","signatureVersion","userDefinedVersion","_originalConfig","regionDefinedVersion","config","isPresigned","getSigningName","req","operation","_super","Service","_parsedArn","service","call","getSignerClass","Signers","RequestSigner","getVersion","validateService","msg","messages","region","endpoint","s3BucketEndpoint","push","length","join","error","Error","name","message","shouldDisableBodySigning","signerClass","s3DisableBodySigning","V4","httpRequest","protocol","setupRequestListeners","addListener","setExpiresString","prependListener","validateScheme","validateBucketName","optInUsEast1RegionalEndpoint","removeListener","EventListeners","Core","VALIDATE_REGION","addContentType","computeContentMd5","computeSseCustomerKeyMd5","populateURI","addExpect100Continue","extractError","hoistPayloadMember","extractData","extractErrorFrom200Response","prepareSignedUrl","COMPUTE_SHA256","disableBodySigning","isArnInParam","ARN","parse","params","Bucket","validateS3AccessPointArn","validateArnResourceType","validateArnRegion","validateOutpostsAccessPointArn","validateOutpostsArn","validateArnAccount","validateArnService","populateUriFromAccessPointArn","validatePopulateUriFromArn","validateBucketEndpoint","correctBucketRegionFromCache","onAsync","requestBucketRegion","isBrowser","reqRegionForNetworkingError","scheme","sensitive","SSECustomerKey","CopySourceSSECustomerKey","code","allowFipsEndpoint","resource","indexOf","bucket","key","Key","slashIndex","copy","prefix","substr","isValidAccelerateOperation","invalidOperations","s3UsEast1RegionalEndpoint","env","sharedConfig","clientConfig","hostname","insertPoint","regionalEndpoint","substring","updateEndpoint","b","pathStyleBucketName","useAccelerateEndpoint","useDualstackEndpoint","port","host","virtualHostedBucket","removeVirtualHostedBucketFromPath","path","encodedS3Key","uriEscapePath","replace","RegExp","accessPointArn","isOutpostArn","isObjectLambdaArn","outpostsSuffix","outpostId","serviceName","fipsSuffix","useFipsEndpoint","dualStackSuffix","dnsSuffix","getEndpointSuffix","useArnRegion","s3UseArnRegion","accessPoint","accountId","accesspointName","split","encodedArn","uriEscape","len","headers","isNode","Body","stream","Stream","method","contentType","body","match","charset","replaceFn","_","charsetName","toUpperCase","willComputeChecksums","rules","operations","input","members","needsContentMD5","computeChecksums","ContentMD5","Buffer","isBuffer","md5","crypto","keys","each","header","value","bucketName","s3ForcePathStyle","dnsCompatibleBucketName","sslEnabled","resp","httpResponse","toString","data","retryableError","statusCode","_requestRegionForBucket","bucketRegionCache","updateReqBucketRegion","s3Config","newConfig","Host","_asm","currentState","LocationConstraint","clearBucketRegionCache","createBucketConfiguration","CreateBucketConfiguration","extractRequestIds","codes","cachedRegion","XML","Parser","Region","Code","Message","done","reqOperation","reqParams","MaxKeys","regionReq","send","getRegionReq","listObjects","buckets","Object","i","requestRegion","extendedRequestId","cfId","requestId","getSignedUrl","callback","expires","Expires","makeRequest","defer","presign","createPresignedPost","undefined","boundParams","self","pathname","finalizePost","urlFormat","fields","preparePostFields","credentials","Fields","Conditions","getCredentials","err","conditions","expiresInSeconds","now","getSkewCorrectedDate","slice","signingDate","date","iso8601","shortDate","scope","createScope","credential","accessKeyId","sessionToken","field","hasOwnProperty","condition","Policy","preparePostPolicy","Date","valueOf","hmac","getSigningKey","expiration","base64","encode","JSON","stringify","noPresignedContentLength","ContentLength","createBucket","copiedParams","globalEndpoint","writeGetObjectResponse","Endpoint","upload","options","merge","uploader","ManagedUpload","response","expiresstring","parseTimestamp","e","console","log","addPromisesToClass","PromiseDependency","getSignedUrlPromise","promisifyMethod","deletePromisesFromClass","addPromises","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nimport { __cjsMetaURL as _req0} from '../signers/v4_credentials';\nimport { __cjsMetaURL as _req1} from '../config_regional_endpoint';\nimport { __cjsMetaURL as _req2} from './s3util';\nimport { __cjsMetaURL as _req3} from '../region_config';\nimport { __cjsMetaURL as _req4} from '../s3/managed_upload';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('../core');\n var v4Credentials = require('../signers/v4_credentials');\n var resolveRegionalEndpointsFlag = require('../config_regional_endpoint');\n var s3util = require('./s3util');\n var regionUtil = require('../region_config');\n\n // Pull in managed upload extension\n require('../s3/managed_upload');\n\n /**\n  * @api private\n  */\n var operationsWith200StatusCodeError = {\n   'completeMultipartUpload': true,\n   'copyObject': true,\n   'uploadPartCopy': true\n };\n\n /**\n  * @api private\n  */\n  var regionRedirectErrorCodes = [\n   'AuthorizationHeaderMalformed', // non-head operations on virtual-hosted global bucket endpoints\n   'BadRequest', // head operations on virtual-hosted global bucket endpoints\n   'PermanentRedirect', // non-head operations on path-style or regional endpoints\n   301 // head operations on path-style or regional endpoints\n  ];\n\n var OBJECT_LAMBDA_SERVICE = 's3-object-lambda';\n\n AWS.util.update(AWS.S3.prototype, {\n   /**\n    * @api private\n    */\n   getSignatureVersion: function getSignatureVersion(request) {\n     var defaultApiVersion = this.api.signatureVersion;\n     var userDefinedVersion = this._originalConfig ? this._originalConfig.signatureVersion : null;\n     var regionDefinedVersion = this.config.signatureVersion;\n     var isPresigned = request ? request.isPresigned() : false;\n     /*\n       1) User defined version specified:\n         a) always return user defined version\n       2) No user defined version specified:\n         a) If not using presigned urls, default to V4\n         b) If using presigned urls, default to lowest version the region supports\n     */\n     if (userDefinedVersion) {\n       userDefinedVersion = userDefinedVersion === 'v2' ? 's3' : userDefinedVersion;\n       return userDefinedVersion;\n     }\n     if (isPresigned !== true) {\n       defaultApiVersion = 'v4';\n     } else if (regionDefinedVersion) {\n       defaultApiVersion = regionDefinedVersion;\n     }\n     return defaultApiVersion;\n   },\n\n   /**\n    * @api private\n    */\n   getSigningName: function getSigningName(req) {\n     if (req && req.operation === 'writeGetObjectResponse') {\n       return OBJECT_LAMBDA_SERVICE;\n     }\n\n     var _super = AWS.Service.prototype.getSigningName;\n     return (req && req._parsedArn && req._parsedArn.service)\n       ? req._parsedArn.service\n       : _super.call(this);\n   },\n\n   /**\n    * @api private\n    */\n   getSignerClass: function getSignerClass(request) {\n     var signatureVersion = this.getSignatureVersion(request);\n     return AWS.Signers.RequestSigner.getVersion(signatureVersion);\n   },\n\n   /**\n    * @api private\n    */\n   validateService: function validateService() {\n     var msg;\n     var messages = [];\n\n     // default to us-east-1 when no region is provided\n     if (!this.config.region) this.config.region = 'us-east-1';\n\n     if (!this.config.endpoint && this.config.s3BucketEndpoint) {\n       messages.push('An endpoint must be provided when configuring ' +\n                     '`s3BucketEndpoint` to true.');\n     }\n     if (messages.length === 1) {\n       msg = messages[0];\n     } else if (messages.length > 1) {\n       msg = 'Multiple configuration errors:\\n' + messages.join('\\n');\n     }\n     if (msg) {\n       throw AWS.util.error(new Error(),\n         {name: 'InvalidEndpoint', message: msg});\n     }\n   },\n\n   /**\n    * @api private\n    */\n   shouldDisableBodySigning: function shouldDisableBodySigning(request) {\n     var signerClass = this.getSignerClass();\n     if (this.config.s3DisableBodySigning === true && signerClass === AWS.Signers.V4\n         && request.httpRequest.endpoint.protocol === 'https:') {\n       return true;\n     }\n     return false;\n   },\n\n   /**\n    * @api private\n    */\n   setupRequestListeners: function setupRequestListeners(request) {\n     request.addListener('validateResponse', this.setExpiresString);\n     var prependListener = true;\n     request.addListener('validate', this.validateScheme);\n     request.addListener('validate', this.validateBucketName, prependListener);\n     request.addListener('validate', this.optInUsEast1RegionalEndpoint, prependListener);\n\n     request.removeListener('validate',\n       AWS.EventListeners.Core.VALIDATE_REGION);\n     request.addListener('build', this.addContentType);\n     request.addListener('build', this.computeContentMd5);\n     request.addListener('build', this.computeSseCustomerKeyMd5);\n     request.addListener('build', this.populateURI);\n     request.addListener('afterBuild', this.addExpect100Continue);\n     request.addListener('extractError', this.extractError);\n     request.addListener('extractData', AWS.util.hoistPayloadMember);\n     request.addListener('extractData', this.extractData);\n     request.addListener('extractData', this.extractErrorFrom200Response);\n     request.addListener('beforePresign', this.prepareSignedUrl);\n     if (this.shouldDisableBodySigning(request))  {\n       request.removeListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n       request.addListener('afterBuild', this.disableBodySigning);\n     }\n     //deal with ARNs supplied to Bucket\n     if (request.operation !== 'createBucket' && s3util.isArnInParam(request, 'Bucket')) {\n       // avoid duplicate parsing in the future\n       request._parsedArn = AWS.util.ARN.parse(request.params.Bucket);\n\n       request.removeListener('validate', this.validateBucketName);\n       request.removeListener('build', this.populateURI);\n       if (request._parsedArn.service === 's3') {\n         request.addListener('validate', s3util.validateS3AccessPointArn);\n         request.addListener('validate', this.validateArnResourceType);\n         request.addListener('validate', this.validateArnRegion);\n       } else if (request._parsedArn.service === 's3-outposts') {\n         request.addListener('validate', s3util.validateOutpostsAccessPointArn);\n         request.addListener('validate', s3util.validateOutpostsArn);\n         request.addListener('validate', s3util.validateArnRegion);\n       }\n       request.addListener('validate', s3util.validateArnAccount);\n       request.addListener('validate', s3util.validateArnService);\n       request.addListener('build', this.populateUriFromAccessPointArn);\n       request.addListener('build', s3util.validatePopulateUriFromArn);\n       return;\n     }\n     //listeners regarding region inference\n     request.addListener('validate', this.validateBucketEndpoint);\n     request.addListener('validate', this.correctBucketRegionFromCache);\n     request.onAsync('extractError', this.requestBucketRegion);\n     if (AWS.util.isBrowser()) {\n       request.onAsync('retry', this.reqRegionForNetworkingError);\n     }\n   },\n\n   /**\n    * @api private\n    */\n   validateScheme: function(req) {\n     var params = req.params,\n         scheme = req.httpRequest.endpoint.protocol,\n         sensitive = params.SSECustomerKey || params.CopySourceSSECustomerKey;\n     if (sensitive && scheme !== 'https:') {\n       var msg = 'Cannot send SSE keys over HTTP. Set \\'sslEnabled\\'' +\n         'to \\'true\\' in your configuration';\n       throw AWS.util.error(new Error(),\n         { code: 'ConfigError', message: msg });\n     }\n   },\n\n   /**\n    * @api private\n    */\n   validateBucketEndpoint: function(req) {\n     if (!req.params.Bucket && req.service.config.s3BucketEndpoint) {\n       var msg = 'Cannot send requests to root API with `s3BucketEndpoint` set.';\n       throw AWS.util.error(new Error(),\n         { code: 'ConfigError', message: msg });\n     }\n   },\n\n   /**\n    * @api private\n    */\n    validateArnRegion: function validateArnRegion(req) {\n     s3util.validateArnRegion(req, { allowFipsEndpoint: true });\n   },\n\n   /**\n    * Validate resource-type supplied in S3 ARN\n    */\n   validateArnResourceType: function validateArnResourceType(req) {\n     var resource = req._parsedArn.resource;\n\n     if (\n       resource.indexOf('accesspoint:') !== 0 &&\n       resource.indexOf('accesspoint/') !== 0\n     ) {\n       throw AWS.util.error(new Error(), {\n         code: 'InvalidARN',\n         message: 'ARN resource should begin with \\'accesspoint/\\''\n       });\n     }\n   },\n\n   /**\n    * @api private\n    */\n   validateBucketName: function validateBucketName(req) {\n     var service = req.service;\n     var signatureVersion = service.getSignatureVersion(req);\n     var bucket = req.params && req.params.Bucket;\n     var key = req.params && req.params.Key;\n     var slashIndex = bucket && bucket.indexOf('/');\n     if (bucket && slashIndex >= 0) {\n       if (typeof key === 'string' && slashIndex > 0) {\n         req.params = AWS.util.copy(req.params);\n         // Need to include trailing slash to match sigv2 behavior\n         var prefix = bucket.substr(slashIndex + 1) || '';\n         req.params.Key = prefix + '/' + key;\n         req.params.Bucket = bucket.substr(0, slashIndex);\n       } else if (signatureVersion === 'v4') {\n         var msg = 'Bucket names cannot contain forward slashes. Bucket: ' + bucket;\n         throw AWS.util.error(new Error(),\n           { code: 'InvalidBucket', message: msg });\n       }\n     }\n   },\n\n   /**\n    * @api private\n    */\n   isValidAccelerateOperation: function isValidAccelerateOperation(operation) {\n     var invalidOperations = [\n       'createBucket',\n       'deleteBucket',\n       'listBuckets'\n     ];\n     return invalidOperations.indexOf(operation) === -1;\n   },\n\n   /**\n    * When us-east-1 region endpoint configuration is set, in stead of sending request to\n    * global endpoint(e.g. 's3.amazonaws.com'), we will send request to\n    * 's3.us-east-1.amazonaws.com'.\n    * @api private\n    */\n   optInUsEast1RegionalEndpoint: function optInUsEast1RegionalEndpoint(req) {\n     var service = req.service;\n     var config = service.config;\n     config.s3UsEast1RegionalEndpoint = resolveRegionalEndpointsFlag(service._originalConfig, {\n       env: 'AWS_S3_US_EAST_1_REGIONAL_ENDPOINT',\n       sharedConfig: 's3_us_east_1_regional_endpoint',\n       clientConfig: 's3UsEast1RegionalEndpoint'\n     });\n     if (\n       !(service._originalConfig || {}).endpoint &&\n       req.httpRequest.region === 'us-east-1' &&\n       config.s3UsEast1RegionalEndpoint === 'regional' &&\n       req.httpRequest.endpoint.hostname.indexOf('s3.amazonaws.com') >= 0\n     ) {\n       var insertPoint = config.endpoint.indexOf('.amazonaws.com');\n       var regionalEndpoint = config.endpoint.substring(0, insertPoint) +\n         '.us-east-1' + config.endpoint.substring(insertPoint);\n       req.httpRequest.updateEndpoint(regionalEndpoint);\n     }\n   },\n\n   /**\n    * S3 prefers dns-compatible bucket names to be moved from the uri path\n    * to the hostname as a sub-domain.  This is not possible, even for dns-compat\n    * buckets when using SSL and the bucket name contains a dot ('.').  The\n    * ssl wildcard certificate is only 1-level deep.\n    *\n    * @api private\n    */\n   populateURI: function populateURI(req) {\n     var httpRequest = req.httpRequest;\n     var b = req.params.Bucket;\n     var service = req.service;\n     var endpoint = httpRequest.endpoint;\n     if (b) {\n       if (!service.pathStyleBucketName(b)) {\n         if (service.config.useAccelerateEndpoint && service.isValidAccelerateOperation(req.operation)) {\n           if (service.config.useDualstackEndpoint) {\n             endpoint.hostname = b + '.s3-accelerate.dualstack.amazonaws.com';\n           } else {\n             endpoint.hostname = b + '.s3-accelerate.amazonaws.com';\n           }\n         } else if (!service.config.s3BucketEndpoint) {\n           endpoint.hostname =\n             b + '.' + endpoint.hostname;\n         }\n\n         var port = endpoint.port;\n         if (port !== 80 && port !== 443) {\n           endpoint.host = endpoint.hostname + ':' +\n             endpoint.port;\n         } else {\n           endpoint.host = endpoint.hostname;\n         }\n\n         httpRequest.virtualHostedBucket = b; // needed for signing the request\n         service.removeVirtualHostedBucketFromPath(req);\n       }\n     }\n   },\n\n   /**\n    * Takes the bucket name out of the path if bucket is virtual-hosted\n    *\n    * @api private\n    */\n   removeVirtualHostedBucketFromPath: function removeVirtualHostedBucketFromPath(req) {\n     var httpRequest = req.httpRequest;\n     var bucket = httpRequest.virtualHostedBucket;\n     if (bucket && httpRequest.path) {\n       if (req.params && req.params.Key) {\n         var encodedS3Key = '/' + AWS.util.uriEscapePath(req.params.Key);\n         if (httpRequest.path.indexOf(encodedS3Key) === 0 && (httpRequest.path.length === encodedS3Key.length || httpRequest.path[encodedS3Key.length] === '?')) {\n           //path only contains key or path contains only key and querystring\n           return;\n         }\n       }\n       httpRequest.path = httpRequest.path.replace(new RegExp('/' + bucket), '');\n       if (httpRequest.path[0] !== '/') {\n         httpRequest.path = '/' + httpRequest.path;\n       }\n     }\n   },\n\n   /**\n    * When user supply an access point ARN in the Bucket parameter, we need to\n    * populate the URI according to the ARN.\n    */\n   populateUriFromAccessPointArn: function populateUriFromAccessPointArn(req) {\n     var accessPointArn = req._parsedArn;\n\n     var isOutpostArn = accessPointArn.service === 's3-outposts';\n     var isObjectLambdaArn = accessPointArn.service === 's3-object-lambda';\n\n     var outpostsSuffix = isOutpostArn ? '.' + accessPointArn.outpostId: '';\n     var serviceName = isOutpostArn ? 's3-outposts': 's3-accesspoint';\n     var fipsSuffix = !isOutpostArn && req.service.config.useFipsEndpoint ? '-fips': '';\n     var dualStackSuffix = !isOutpostArn &&\n       req.service.config.useDualstackEndpoint ? '.dualstack' : '';\n\n     var endpoint = req.httpRequest.endpoint;\n     var dnsSuffix = regionUtil.getEndpointSuffix(accessPointArn.region);\n     var useArnRegion = req.service.config.s3UseArnRegion;\n\n     endpoint.hostname = [\n       accessPointArn.accessPoint + '-' + accessPointArn.accountId + outpostsSuffix,\n       serviceName + fipsSuffix + dualStackSuffix,\n       useArnRegion ? accessPointArn.region : req.service.config.region,\n       dnsSuffix\n     ].join('.');\n\n     if (isObjectLambdaArn) {\n       // should be in the format: \"accesspoint/${accesspointName}\"\n       var serviceName = 's3-object-lambda';\n       var accesspointName = accessPointArn.resource.split('/')[1];\n       var fipsSuffix = req.service.config.useFipsEndpoint ? '-fips': '';\n       endpoint.hostname = [\n         accesspointName + '-' + accessPointArn.accountId,\n         serviceName + fipsSuffix,\n         useArnRegion ? accessPointArn.region : req.service.config.region,\n         dnsSuffix\n       ].join('.');\n     }\n     endpoint.host = endpoint.hostname;\n     var encodedArn = AWS.util.uriEscape(req.params.Bucket);\n     var path = req.httpRequest.path;\n     //remove the Bucket value from path\n     req.httpRequest.path = path.replace(new RegExp('/' + encodedArn), '');\n     if (req.httpRequest.path[0] !== '/') {\n       req.httpRequest.path = '/' + req.httpRequest.path;\n     }\n     req.httpRequest.region = accessPointArn.region; //region used to sign\n   },\n\n   /**\n    * Adds Expect: 100-continue header if payload is greater-or-equal 1MB\n    * @api private\n    */\n   addExpect100Continue: function addExpect100Continue(req) {\n     var len = req.httpRequest.headers['Content-Length'];\n     if (AWS.util.isNode() && (len >= 1024 * 1024 || req.params.Body instanceof AWS.util.stream.Stream)) {\n       req.httpRequest.headers['Expect'] = '100-continue';\n     }\n   },\n\n   /**\n    * Adds a default content type if none is supplied.\n    *\n    * @api private\n    */\n   addContentType: function addContentType(req) {\n     var httpRequest = req.httpRequest;\n     if (httpRequest.method === 'GET' || httpRequest.method === 'HEAD') {\n       // Content-Type is not set in GET/HEAD requests\n       delete httpRequest.headers['Content-Type'];\n       return;\n     }\n\n     if (!httpRequest.headers['Content-Type']) { // always have a Content-Type\n       httpRequest.headers['Content-Type'] = 'application/octet-stream';\n     }\n\n     var contentType = httpRequest.headers['Content-Type'];\n     if (AWS.util.isBrowser()) {\n       if (typeof httpRequest.body === 'string' && !contentType.match(/;\\s*charset=/)) {\n         var charset = '; charset=UTF-8';\n         httpRequest.headers['Content-Type'] += charset;\n       } else {\n         var replaceFn = function(_, prefix, charsetName) {\n           return prefix + charsetName.toUpperCase();\n         };\n\n         httpRequest.headers['Content-Type'] =\n           contentType.replace(/(;\\s*charset=)(.+)$/, replaceFn);\n       }\n     }\n   },\n\n   /**\n    * Checks whether checksums should be computed for the request if it's not\n    * already set by {AWS.EventListeners.Core.COMPUTE_CHECKSUM}. It depends on\n    * whether {AWS.Config.computeChecksums} is set.\n    *\n    * @param req [AWS.Request] the request to check against\n    * @return [Boolean] whether to compute checksums for a request.\n    * @api private\n    */\n   willComputeChecksums: function willComputeChecksums(req) {\n     var rules = req.service.api.operations[req.operation].input.members;\n     var body = req.httpRequest.body;\n     var needsContentMD5 = req.service.config.computeChecksums &&\n       rules.ContentMD5 &&\n       !req.params.ContentMD5 &&\n       body &&\n       (AWS.util.Buffer.isBuffer(req.httpRequest.body) || typeof req.httpRequest.body === 'string');\n\n     // Sha256 signing disabled, and not a presigned url\n     if (needsContentMD5 && req.service.shouldDisableBodySigning(req) && !req.isPresigned()) {\n       return true;\n     }\n\n     // SigV2 and presign, for backwards compatibility purpose.\n     if (needsContentMD5 && this.getSignatureVersion(req) === 's3' && req.isPresigned()) {\n       return true;\n     }\n\n     return false;\n   },\n\n   /**\n    * A listener that computes the Content-MD5 and sets it in the header.\n    * This listener is to support S3-specific features like\n    * s3DisableBodySigning and SigV2 presign. Content MD5 logic for SigV4 is\n    * handled in AWS.EventListeners.Core.COMPUTE_CHECKSUM\n    *\n    * @api private\n    */\n   computeContentMd5: function computeContentMd5(req) {\n     if (req.service.willComputeChecksums(req)) {\n       var md5 = AWS.util.crypto.md5(req.httpRequest.body, 'base64');\n       req.httpRequest.headers['Content-MD5'] = md5;\n     }\n   },\n\n   /**\n    * @api private\n    */\n   computeSseCustomerKeyMd5: function computeSseCustomerKeyMd5(req) {\n     var keys = {\n       SSECustomerKey: 'x-amz-server-side-encryption-customer-key-MD5',\n       CopySourceSSECustomerKey: 'x-amz-copy-source-server-side-encryption-customer-key-MD5'\n     };\n     AWS.util.each(keys, function(key, header) {\n       if (req.params[key]) {\n         var value = AWS.util.crypto.md5(req.params[key], 'base64');\n         req.httpRequest.headers[header] = value;\n       }\n     });\n   },\n\n   /**\n    * Returns true if the bucket name should be left in the URI path for\n    * a request to S3.  This function takes into account the current\n    * endpoint protocol (e.g. http or https).\n    *\n    * @api private\n    */\n   pathStyleBucketName: function pathStyleBucketName(bucketName) {\n     // user can force path style requests via the configuration\n     if (this.config.s3ForcePathStyle) return true;\n     if (this.config.s3BucketEndpoint) return false;\n\n     if (s3util.dnsCompatibleBucketName(bucketName)) {\n       return (this.config.sslEnabled && bucketName.match(/\\./)) ? true : false;\n     } else {\n       return true; // not dns compatible names must always use path style\n     }\n   },\n\n   /**\n    * For COPY operations, some can be error even with status code 200.\n    * SDK treats the response as exception when response body indicates\n    * an exception or body is empty.\n    *\n    * @api private\n    */\n   extractErrorFrom200Response: function extractErrorFrom200Response(resp) {\n     if (!operationsWith200StatusCodeError[resp.request.operation]) return;\n     var httpResponse = resp.httpResponse;\n     if (httpResponse.body && httpResponse.body.toString().match('<Error>')) {\n       // Response body with '<Error>...</Error>' indicates an exception.\n       // Get S3 client object. In ManagedUpload, this.service refers to\n       // S3 client object.\n       resp.data = null;\n       var service = this.service ? this.service : this;\n       service.extractError(resp);\n       throw resp.error;\n     } else if (!httpResponse.body || !httpResponse.body.toString().match(/<[\\w_]/)) {\n       // When body is empty or incomplete, S3 might stop the request on detecting client\n       // side aborting the request.\n       resp.data = null;\n       throw AWS.util.error(new Error(), {\n         code: 'InternalError',\n         message: 'S3 aborted request'\n       });\n     }\n   },\n\n   /**\n    * @return [Boolean] whether the error can be retried\n    * @api private\n    */\n   retryableError: function retryableError(error, request) {\n     if (operationsWith200StatusCodeError[request.operation] &&\n         error.statusCode === 200) {\n       return true;\n     } else if (request._requestRegionForBucket &&\n         request.service.bucketRegionCache[request._requestRegionForBucket]) {\n       return false;\n     } else if (error && error.code === 'RequestTimeout') {\n       return true;\n     } else if (error &&\n         regionRedirectErrorCodes.indexOf(error.code) != -1 &&\n         error.region && error.region != request.httpRequest.region) {\n       request.httpRequest.region = error.region;\n       if (error.statusCode === 301) {\n         request.service.updateReqBucketRegion(request);\n       }\n       return true;\n     } else {\n       var _super = AWS.Service.prototype.retryableError;\n       return _super.call(this, error, request);\n     }\n   },\n\n   /**\n    * Updates httpRequest with region. If region is not provided, then\n    * the httpRequest will be updated based on httpRequest.region\n    *\n    * @api private\n    */\n   updateReqBucketRegion: function updateReqBucketRegion(request, region) {\n     var httpRequest = request.httpRequest;\n     if (typeof region === 'string' && region.length) {\n       httpRequest.region = region;\n     }\n     if (!httpRequest.endpoint.host.match(/s3(?!-accelerate).*\\.amazonaws\\.com$/)) {\n       return;\n     }\n     var service = request.service;\n     var s3Config = service.config;\n     var s3BucketEndpoint = s3Config.s3BucketEndpoint;\n     if (s3BucketEndpoint) {\n       delete s3Config.s3BucketEndpoint;\n     }\n     var newConfig = AWS.util.copy(s3Config);\n     delete newConfig.endpoint;\n     newConfig.region = httpRequest.region;\n\n     httpRequest.endpoint = (new AWS.S3(newConfig)).endpoint;\n     service.populateURI(request);\n     s3Config.s3BucketEndpoint = s3BucketEndpoint;\n     httpRequest.headers.Host = httpRequest.endpoint.host;\n\n     if (request._asm.currentState === 'validate') {\n       request.removeListener('build', service.populateURI);\n       request.addListener('build', service.removeVirtualHostedBucketFromPath);\n     }\n   },\n\n   /**\n    * Provides a specialized parser for getBucketLocation -- all other\n    * operations are parsed by the super class.\n    *\n    * @api private\n    */\n   extractData: function extractData(resp) {\n     var req = resp.request;\n     if (req.operation === 'getBucketLocation') {\n       var match = resp.httpResponse.body.toString().match(/>(.+)<\\/Location/);\n       delete resp.data['_'];\n       if (match) {\n         resp.data.LocationConstraint = match[1];\n       } else {\n         resp.data.LocationConstraint = '';\n       }\n     }\n     var bucket = req.params.Bucket || null;\n     if (req.operation === 'deleteBucket' && typeof bucket === 'string' && !resp.error) {\n       req.service.clearBucketRegionCache(bucket);\n     } else {\n       var headers = resp.httpResponse.headers || {};\n       var region = headers['x-amz-bucket-region'] || null;\n       if (!region && req.operation === 'createBucket' && !resp.error) {\n         var createBucketConfiguration = req.params.CreateBucketConfiguration;\n         if (!createBucketConfiguration) {\n           region = 'us-east-1';\n         } else if (createBucketConfiguration.LocationConstraint === 'EU') {\n           region = 'eu-west-1';\n         } else {\n           region = createBucketConfiguration.LocationConstraint;\n         }\n       }\n       if (region) {\n           if (bucket && region !== req.service.bucketRegionCache[bucket]) {\n             req.service.bucketRegionCache[bucket] = region;\n           }\n       }\n     }\n     req.service.extractRequestIds(resp);\n   },\n\n   /**\n    * Extracts an error object from the http response.\n    *\n    * @api private\n    */\n   extractError: function extractError(resp) {\n     var codes = {\n       304: 'NotModified',\n       403: 'Forbidden',\n       400: 'BadRequest',\n       404: 'NotFound'\n     };\n\n     var req = resp.request;\n     var code = resp.httpResponse.statusCode;\n     var body = resp.httpResponse.body || '';\n\n     var headers = resp.httpResponse.headers || {};\n     var region = headers['x-amz-bucket-region'] || null;\n     var bucket = req.params.Bucket || null;\n     var bucketRegionCache = req.service.bucketRegionCache;\n     if (region && bucket && region !== bucketRegionCache[bucket]) {\n       bucketRegionCache[bucket] = region;\n     }\n\n     var cachedRegion;\n     if (codes[code] && body.length === 0) {\n       if (bucket && !region) {\n         cachedRegion = bucketRegionCache[bucket] || null;\n         if (cachedRegion !== req.httpRequest.region) {\n           region = cachedRegion;\n         }\n       }\n       resp.error = AWS.util.error(new Error(), {\n         code: codes[code],\n         message: null,\n         region: region\n       });\n     } else {\n       var data = new AWS.XML.Parser().parse(body.toString());\n\n       if (data.Region && !region) {\n         region = data.Region;\n         if (bucket && region !== bucketRegionCache[bucket]) {\n           bucketRegionCache[bucket] = region;\n         }\n       } else if (bucket && !region && !data.Region) {\n         cachedRegion = bucketRegionCache[bucket] || null;\n         if (cachedRegion !== req.httpRequest.region) {\n           region = cachedRegion;\n         }\n       }\n\n       resp.error = AWS.util.error(new Error(), {\n         code: data.Code || code,\n         message: data.Message || null,\n         region: region\n       });\n     }\n     req.service.extractRequestIds(resp);\n   },\n\n   /**\n    * If region was not obtained synchronously, then send async request\n    * to get bucket region for errors resulting from wrong region.\n    *\n    * @api private\n    */\n   requestBucketRegion: function requestBucketRegion(resp, done) {\n     var error = resp.error;\n     var req = resp.request;\n     var bucket = req.params.Bucket || null;\n\n     if (!error || !bucket || error.region || req.operation === 'listObjects' ||\n         (AWS.util.isNode() && req.operation === 'headBucket') ||\n         (error.statusCode === 400 && req.operation !== 'headObject') ||\n         regionRedirectErrorCodes.indexOf(error.code) === -1) {\n       return done();\n     }\n     var reqOperation = AWS.util.isNode() ? 'headBucket' : 'listObjects';\n     var reqParams = {Bucket: bucket};\n     if (reqOperation === 'listObjects') reqParams.MaxKeys = 0;\n     var regionReq = req.service[reqOperation](reqParams);\n     regionReq._requestRegionForBucket = bucket;\n     regionReq.send(function() {\n       var region = req.service.bucketRegionCache[bucket] || null;\n       error.region = region;\n       done();\n     });\n   },\n\n    /**\n    * For browser only. If NetworkingError received, will attempt to obtain\n    * the bucket region.\n    *\n    * @api private\n    */\n    reqRegionForNetworkingError: function reqRegionForNetworkingError(resp, done) {\n     if (!AWS.util.isBrowser()) {\n       return done();\n     }\n     var error = resp.error;\n     var request = resp.request;\n     var bucket = request.params.Bucket;\n     if (!error || error.code !== 'NetworkingError' || !bucket ||\n         request.httpRequest.region === 'us-east-1') {\n       return done();\n     }\n     var service = request.service;\n     var bucketRegionCache = service.bucketRegionCache;\n     var cachedRegion = bucketRegionCache[bucket] || null;\n\n     if (cachedRegion && cachedRegion !== request.httpRequest.region) {\n       service.updateReqBucketRegion(request, cachedRegion);\n       done();\n     } else if (!s3util.dnsCompatibleBucketName(bucket)) {\n       service.updateReqBucketRegion(request, 'us-east-1');\n       if (bucketRegionCache[bucket] !== 'us-east-1') {\n         bucketRegionCache[bucket] = 'us-east-1';\n       }\n       done();\n     } else if (request.httpRequest.virtualHostedBucket) {\n       var getRegionReq = service.listObjects({Bucket: bucket, MaxKeys: 0});\n       service.updateReqBucketRegion(getRegionReq, 'us-east-1');\n       getRegionReq._requestRegionForBucket = bucket;\n\n       getRegionReq.send(function() {\n         var region = service.bucketRegionCache[bucket] || null;\n         if (region && region !== request.httpRequest.region) {\n           service.updateReqBucketRegion(request, region);\n         }\n         done();\n       });\n     } else {\n       // DNS-compatible path-style\n       // (s3ForcePathStyle or bucket name with dot over https)\n       // Cannot obtain region information for this case\n       done();\n     }\n    },\n\n   /**\n    * Cache for bucket region.\n    *\n    * @api private\n    */\n    bucketRegionCache: {},\n\n   /**\n    * Clears bucket region cache.\n    *\n    * @api private\n    */\n    clearBucketRegionCache: function(buckets) {\n     var bucketRegionCache = this.bucketRegionCache;\n     if (!buckets) {\n       buckets = Object.keys(bucketRegionCache);\n     } else if (typeof buckets === 'string') {\n       buckets = [buckets];\n     }\n     for (var i = 0; i < buckets.length; i++) {\n       delete bucketRegionCache[buckets[i]];\n     }\n     return bucketRegionCache;\n    },\n\n    /**\n     * Corrects request region if bucket's cached region is different\n     *\n     * @api private\n     */\n   correctBucketRegionFromCache: function correctBucketRegionFromCache(req) {\n     var bucket = req.params.Bucket || null;\n     if (bucket) {\n       var service = req.service;\n       var requestRegion = req.httpRequest.region;\n       var cachedRegion = service.bucketRegionCache[bucket];\n       if (cachedRegion && cachedRegion !== requestRegion) {\n         service.updateReqBucketRegion(req, cachedRegion);\n       }\n     }\n   },\n\n   /**\n    * Extracts S3 specific request ids from the http response.\n    *\n    * @api private\n    */\n   extractRequestIds: function extractRequestIds(resp) {\n     var extendedRequestId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-id-2'] : null;\n     var cfId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-cf-id'] : null;\n     resp.extendedRequestId = extendedRequestId;\n     resp.cfId = cfId;\n\n     if (resp.error) {\n       resp.error.requestId = resp.requestId || null;\n       resp.error.extendedRequestId = extendedRequestId;\n       resp.error.cfId = cfId;\n     }\n   },\n\n   /**\n    * Get a pre-signed URL for a given operation name.\n    *\n    * @note You must ensure that you have static or previously resolved\n    *   credentials if you call this method synchronously (with no callback),\n    *   otherwise it may not properly sign the request. If you cannot guarantee\n    *   this (you are using an asynchronous credential provider, i.e., EC2\n    *   IAM roles), you should always call this method with an asynchronous\n    *   callback.\n    * @note Not all operation parameters are supported when using pre-signed\n    *   URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,\n    *   `ContentLength`, or `Tagging` must be provided as headers when sending a\n    *   request. If you are using pre-signed URLs to upload from a browser and\n    *   need to use these fields, see {createPresignedPost}.\n    * @note The default signer allows altering the request by adding corresponding\n    *   headers to set some parameters (e.g. Range) and these added parameters\n    *   won't be signed. You must use signatureVersion v4 to to include these\n    *   parameters in the signed portion of the URL and enforce exact matching\n    *   between headers and signed params in the URL.\n    * @note This operation cannot be used with a promise. See note above regarding\n    *   asynchronous credentials and use with a callback.\n    * @param operation [String] the name of the operation to call\n    * @param params [map] parameters to pass to the operation. See the given\n    *   operation for the expected operation parameters. In addition, you can\n    *   also pass the \"Expires\" parameter to inform S3 how long the URL should\n    *   work for.\n    * @option params Expires [Integer] (900) the number of seconds to expire\n    *   the pre-signed URL operation in. Defaults to 15 minutes.\n    * @param callback [Function] if a callback is provided, this function will\n    *   pass the URL as the second parameter (after the error parameter) to\n    *   the callback function.\n    * @return [String] if called synchronously (with no callback), returns the\n    *   signed URL.\n    * @return [null] nothing is returned if a callback is provided.\n    * @example Pre-signing a getObject operation (synchronously)\n    *   var params = {Bucket: 'bucket', Key: 'key'};\n    *   var url = s3.getSignedUrl('getObject', params);\n    *   console.log('The URL is', url);\n    * @example Pre-signing a putObject (asynchronously)\n    *   var params = {Bucket: 'bucket', Key: 'key'};\n    *   s3.getSignedUrl('putObject', params, function (err, url) {\n    *     console.log('The URL is', url);\n    *   });\n    * @example Pre-signing a putObject operation with a specific payload\n    *   var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};\n    *   var url = s3.getSignedUrl('putObject', params);\n    *   console.log('The URL is', url);\n    * @example Passing in a 1-minute expiry time for a pre-signed URL\n    *   var params = {Bucket: 'bucket', Key: 'key', Expires: 60};\n    *   var url = s3.getSignedUrl('getObject', params);\n    *   console.log('The URL is', url); // expires in 60 seconds\n    */\n   getSignedUrl: function getSignedUrl(operation, params, callback) {\n     params = AWS.util.copy(params || {});\n     var expires = params.Expires || 900;\n\n     if (typeof expires !== 'number') {\n       throw AWS.util.error(new Error(),\n         { code: 'InvalidParameterException', message: 'The expiration must be a number, received ' + typeof expires });\n     }\n\n     delete params.Expires; // we can't validate this\n     var request = this.makeRequest(operation, params);\n\n     if (callback) {\n       AWS.util.defer(function() {\n         request.presign(expires, callback);\n       });\n     } else {\n       return request.presign(expires, callback);\n     }\n   },\n\n   /**\n    * @!method  getSignedUrlPromise()\n    *   Returns a 'thenable' promise that will be resolved with a pre-signed URL\n    *   for a given operation name.\n    *\n    *   Two callbacks can be provided to the `then` method on the returned promise.\n    *   The first callback will be called if the promise is fulfilled, and the second\n    *   callback will be called if the promise is rejected.\n    *   @note Not all operation parameters are supported when using pre-signed\n    *      URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,\n    *      `ContentLength`, or `Tagging` must be provided as headers when sending a\n    *      request. If you are using pre-signed URLs to upload from a browser and\n    *      need to use these fields, see {createPresignedPost}.\n    *   @param operation [String] the name of the operation to call\n    *   @param params [map] parameters to pass to the operation. See the given\n    *      operation for the expected operation parameters. In addition, you can\n    *      also pass the \"Expires\" parameter to inform S3 how long the URL should\n    *      work for.\n    *   @option params Expires [Integer] (900) the number of seconds to expire\n    *      the pre-signed URL operation in. Defaults to 15 minutes.\n    *   @callback fulfilledCallback function(url)\n    *     Called if the promise is fulfilled.\n    *     @param url [String] the signed url\n    *   @callback rejectedCallback function(err)\n    *     Called if the promise is rejected.\n    *     @param err [Error] if an error occurred, this value will be filled\n    *   @return [Promise] A promise that represents the state of the `refresh` call.\n    *   @example Pre-signing a getObject operation\n    *      var params = {Bucket: 'bucket', Key: 'key'};\n    *      var promise = s3.getSignedUrlPromise('getObject', params);\n    *      promise.then(function(url) {\n    *        console.log('The URL is', url);\n    *      }, function(err) { ... });\n    *   @example Pre-signing a putObject operation with a specific payload\n    *      var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};\n    *      var promise = s3.getSignedUrlPromise('putObject', params);\n    *      promise.then(function(url) {\n    *        console.log('The URL is', url);\n    *      }, function(err) { ... });\n    *   @example Passing in a 1-minute expiry time for a pre-signed URL\n    *      var params = {Bucket: 'bucket', Key: 'key', Expires: 60};\n    *      var promise = s3.getSignedUrlPromise('getObject', params);\n    *      promise.then(function(url) {\n    *        console.log('The URL is', url);\n    *      }, function(err) { ... });\n    */\n\n   /**\n    * Get a pre-signed POST policy to support uploading to S3 directly from an\n    * HTML form.\n    *\n    * @param params [map]\n    * @option params Bucket [String]     The bucket to which the post should be\n    *                                    uploaded\n    * @option params Expires [Integer]   (3600) The number of seconds for which\n    *                                    the presigned policy should be valid.\n    * @option params Conditions [Array]  An array of conditions that must be met\n    *                                    for the presigned policy to allow the\n    *                                    upload. This can include required tags,\n    *                                    the accepted range for content lengths,\n    *                                    etc.\n    * @see http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-HTTPPOSTConstructPolicy.html\n    * @option params Fields [map]        Fields to include in the form. All\n    *                                    values passed in as fields will be\n    *                                    signed as exact match conditions.\n    * @param callback [Function]\n    *\n    * @note All fields passed in when creating presigned post data will be signed\n    *   as exact match conditions. Any fields that will be interpolated by S3\n    *   must be added to the fields hash after signing, and an appropriate\n    *   condition for such fields must be explicitly added to the Conditions\n    *   array passed to this function before signing.\n    *\n    * @example Presiging post data with a known key\n    *   var params = {\n    *     Bucket: 'bucket',\n    *     Fields: {\n    *       key: 'key'\n    *     }\n    *   };\n    *   s3.createPresignedPost(params, function(err, data) {\n    *     if (err) {\n    *       console.error('Presigning post data encountered an error', err);\n    *     } else {\n    *       console.log('The post data is', data);\n    *     }\n    *   });\n    *\n    * @example Presigning post data with an interpolated key\n    *   var params = {\n    *     Bucket: 'bucket',\n    *     Conditions: [\n    *       ['starts-with', '$key', 'path/to/uploads/']\n    *     ]\n    *   };\n    *   s3.createPresignedPost(params, function(err, data) {\n    *     if (err) {\n    *       console.error('Presigning post data encountered an error', err);\n    *     } else {\n    *       data.Fields.key = 'path/to/uploads/${filename}';\n    *       console.log('The post data is', data);\n    *     }\n    *   });\n    *\n    * @note You must ensure that you have static or previously resolved\n    *   credentials if you call this method synchronously (with no callback),\n    *   otherwise it may not properly sign the request. If you cannot guarantee\n    *   this (you are using an asynchronous credential provider, i.e., EC2\n    *   IAM roles), you should always call this method with an asynchronous\n    *   callback.\n    *\n    * @return [map]  If called synchronously (with no callback), returns a hash\n    *                with the url to set as the form action and a hash of fields\n    *                to include in the form.\n    * @return [null] Nothing is returned if a callback is provided.\n    *\n    * @callback callback function (err, data)\n    *  @param err [Error] the error object returned from the policy signer\n    *  @param data [map] The data necessary to construct an HTML form\n    *  @param data.url [String] The URL to use as the action of the form\n    *  @param data.fields [map] A hash of fields that must be included in the\n    *                           form for the upload to succeed. This hash will\n    *                           include the signed POST policy, your access key\n    *                           ID and security token (if present), etc. These\n    *                           may be safely included as input elements of type\n    *                           'hidden.'\n    */\n   createPresignedPost: function createPresignedPost(params, callback) {\n     if (typeof params === 'function' && callback === undefined) {\n       callback = params;\n       params = null;\n     }\n\n     params = AWS.util.copy(params || {});\n     var boundParams = this.config.params || {};\n     var bucket = params.Bucket || boundParams.Bucket,\n       self = this,\n       config = this.config,\n       endpoint = AWS.util.copy(this.endpoint);\n     if (!config.s3BucketEndpoint) {\n       endpoint.pathname = '/' + bucket;\n     }\n\n     function finalizePost() {\n       return {\n         url: AWS.util.urlFormat(endpoint),\n         fields: self.preparePostFields(\n           config.credentials,\n           config.region,\n           bucket,\n           params.Fields,\n           params.Conditions,\n           params.Expires\n         )\n       };\n     }\n\n     if (callback) {\n       config.getCredentials(function (err) {\n         if (err) {\n           callback(err);\n         } else {\n           try {\n             callback(null, finalizePost());\n           } catch (err) {\n             callback(err);\n           }\n         }\n       });\n     } else {\n       return finalizePost();\n     }\n   },\n\n   /**\n    * @api private\n    */\n   preparePostFields: function preparePostFields(\n     credentials,\n     region,\n     bucket,\n     fields,\n     conditions,\n     expiresInSeconds\n   ) {\n     var now = this.getSkewCorrectedDate();\n     if (!credentials || !region || !bucket) {\n       throw new Error('Unable to create a POST object policy without a bucket,'\n         + ' region, and credentials');\n     }\n     fields = AWS.util.copy(fields || {});\n     conditions = (conditions || []).slice(0);\n     expiresInSeconds = expiresInSeconds || 3600;\n\n     var signingDate = AWS.util.date.iso8601(now).replace(/[:\\-]|\\.\\d{3}/g, '');\n     var shortDate = signingDate.substr(0, 8);\n     var scope = v4Credentials.createScope(shortDate, region, 's3');\n     var credential = credentials.accessKeyId + '/' + scope;\n\n     fields['bucket'] = bucket;\n     fields['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256';\n     fields['X-Amz-Credential'] = credential;\n     fields['X-Amz-Date'] = signingDate;\n     if (credentials.sessionToken) {\n       fields['X-Amz-Security-Token'] = credentials.sessionToken;\n     }\n     for (var field in fields) {\n       if (fields.hasOwnProperty(field)) {\n         var condition = {};\n         condition[field] = fields[field];\n         conditions.push(condition);\n       }\n     }\n\n     fields.Policy = this.preparePostPolicy(\n       new Date(now.valueOf() + expiresInSeconds * 1000),\n       conditions\n     );\n     fields['X-Amz-Signature'] = AWS.util.crypto.hmac(\n       v4Credentials.getSigningKey(credentials, shortDate, region, 's3', true),\n       fields.Policy,\n       'hex'\n     );\n\n     return fields;\n   },\n\n   /**\n    * @api private\n    */\n   preparePostPolicy: function preparePostPolicy(expiration, conditions) {\n     return AWS.util.base64.encode(JSON.stringify({\n       expiration: AWS.util.date.iso8601(expiration),\n       conditions: conditions\n     }));\n   },\n\n   /**\n    * @api private\n    */\n   prepareSignedUrl: function prepareSignedUrl(request) {\n     request.addListener('validate', request.service.noPresignedContentLength);\n     request.removeListener('build', request.service.addContentType);\n     if (!request.params.Body) {\n       // no Content-MD5/SHA-256 if body is not provided\n       request.removeListener('build', request.service.computeContentMd5);\n     } else {\n       request.addListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n     }\n   },\n\n   /**\n    * @api private\n    * @param request\n    */\n   disableBodySigning: function disableBodySigning(request) {\n     var headers = request.httpRequest.headers;\n     // Add the header to anything that isn't a presigned url, unless that presigned url had a body defined\n     if (!Object.prototype.hasOwnProperty.call(headers, 'presigned-expires')) {\n       headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n     }\n   },\n\n   /**\n    * @api private\n    */\n   noPresignedContentLength: function noPresignedContentLength(request) {\n     if (request.params.ContentLength !== undefined) {\n       throw AWS.util.error(new Error(), {code: 'UnexpectedParameter',\n         message: 'ContentLength is not supported in pre-signed URLs.'});\n     }\n   },\n\n   createBucket: function createBucket(params, callback) {\n     // When creating a bucket *outside* the classic region, the location\n     // constraint must be set for the bucket and it must match the endpoint.\n     // This chunk of code will set the location constraint param based\n     // on the region (when possible), but it will not override a passed-in\n     // location constraint.\n     if (typeof params === 'function' || !params) {\n       callback = callback || params;\n       params = {};\n     }\n     var hostname = this.endpoint.hostname;\n     // copy params so that appending keys does not unintentioinallly\n     // mutate params object argument passed in by user\n     var copiedParams = AWS.util.copy(params);\n\n     if (hostname !== this.api.globalEndpoint && !params.CreateBucketConfiguration) {\n       copiedParams.CreateBucketConfiguration = { LocationConstraint: this.config.region };\n     }\n     return this.makeRequest('createBucket', copiedParams, callback);\n   },\n\n   writeGetObjectResponse: function writeGetObjectResponse(params, callback) {\n\n     var request = this.makeRequest('writeGetObjectResponse', AWS.util.copy(params), callback);\n     var hostname = this.endpoint.hostname;\n     if (hostname.indexOf(this.config.region) !== -1) {\n       // hostname specifies a region already\n       hostname = hostname.replace('s3.', OBJECT_LAMBDA_SERVICE + '.');\n     } else {\n       // Hostname doesn't have a region.\n       // Object Lambda requires an explicit region.\n       hostname = hostname.replace('s3.', OBJECT_LAMBDA_SERVICE + '.' + this.config.region + '.');\n     }\n\n     request.httpRequest.endpoint = new AWS.Endpoint(hostname, this.config);\n     return request;\n   },\n\n   /**\n    * @see AWS.S3.ManagedUpload\n    * @overload upload(params = {}, [options], [callback])\n    *   Uploads an arbitrarily sized buffer, blob, or stream, using intelligent\n    *   concurrent handling of parts if the payload is large enough. You can\n    *   configure the concurrent queue size by setting `options`. Note that this\n    *   is the only operation for which the SDK can retry requests with stream\n    *   bodies.\n    *\n    *   @param (see AWS.S3.putObject)\n    *   @option (see AWS.S3.ManagedUpload.constructor)\n    *   @return [AWS.S3.ManagedUpload] the managed upload object that can call\n    *     `send()` or track progress.\n    *   @example Uploading a stream object\n    *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n    *     s3.upload(params, function(err, data) {\n    *       console.log(err, data);\n    *     });\n    *   @example Uploading a stream with concurrency of 1 and partSize of 10mb\n    *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n    *     var options = {partSize: 10 * 1024 * 1024, queueSize: 1};\n    *     s3.upload(params, options, function(err, data) {\n    *       console.log(err, data);\n    *     });\n    * @callback callback function(err, data)\n    *   @param err [Error] an error or null if no error occurred.\n    *   @param data [map] The response data from the successful upload:\n    *   @param data.Location [String] the URL of the uploaded object\n    *   @param data.ETag [String] the ETag of the uploaded object\n    *   @param data.Bucket [String]  the bucket to which the object was uploaded\n    *   @param data.Key [String] the key to which the object was uploaded\n    */\n   upload: function upload(params, options, callback) {\n     if (typeof options === 'function' && callback === undefined) {\n       callback = options;\n       options = null;\n     }\n\n     options = options || {};\n     options = AWS.util.merge(options || {}, {service: this, params: params});\n\n     var uploader = new AWS.S3.ManagedUpload(options);\n     if (typeof callback === 'function') uploader.send(callback);\n     return uploader;\n   },\n\n   /**\n    * @api private\n    */\n   setExpiresString: function setExpiresString(response) {\n     // Check if response contains Expires value, and populate ExpiresString.\n     if (response && response.httpResponse && response.httpResponse.headers) {\n       if ('expires' in response.httpResponse.headers) {\n         response.httpResponse.headers.expiresstring = response.httpResponse.headers.expires;\n       }\n     }\n\n     // Check if value in Expires is not a Date using parseTimestamp.\n     try {\n       if (response && response.httpResponse && response.httpResponse.headers) {\n         if ('expires' in response.httpResponse.headers) {\n           AWS.util.date.parseTimestamp(response.httpResponse.headers.expires);\n         }\n       }\n     } catch (e) {\n       console.log('AWS SDK', '(warning)', e);\n       delete response.httpResponse.headers.expires;\n     }\n   }\n });\n\n /**\n  * @api private\n  */\n AWS.S3.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n   this.prototype.getSignedUrlPromise = AWS.util.promisifyMethod('getSignedUrl', PromiseDependency);\n };\n\n /**\n  * @api private\n  */\n AWS.S3.deletePromisesFromClass = function deletePromisesFromClass() {\n   delete this.prototype.getSignedUrlPromise;\n };\n\n AWS.util.addPromises(AWS.S3);\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n  '../signers/v4_credentials': _req0,\n  '../config_regional_endpoint': _req1,\n  './s3util': _req2,\n  '../region_config': _req3,\n  '../s3/managed_upload': _req4,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}