{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/lookoutvision-2020-11-20.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateDataset","http","requestUri","responseCode","input","type","required","members","ProjectName","location","locationName","DatasetType","DatasetSource","GroundTruthManifest","S3Object","Bucket","Key","VersionId","ClientToken","idempotencyToken","output","DatasetMetadata","shape","CreateModel","Description","OutputConfig","KmsKeyId","Tags","ModelMetadata","CreateProject","ProjectMetadata","DeleteDataset","method","DeleteModel","ModelVersion","ModelArn","DeleteProject","ProjectArn","DescribeDataset","DatasetDescription","CreationTimestamp","LastUpdatedTimestamp","Status","StatusMessage","ImageStats","Total","Labeled","Normal","Anomaly","DescribeModel","ModelDescription","Performance","EvaluationManifest","EvaluationResult","EvaluationEndTimestamp","MinInferenceUnits","MaxInferenceUnits","DescribeModelPackagingJob","JobName","ModelPackagingDescription","ModelPackagingConfiguration","ModelPackagingJobDescription","ModelPackagingMethod","ModelPackagingOutputDetails","Greengrass","ComponentVersionArn","ComponentName","ComponentVersion","DescribeProject","ProjectDescription","Datasets","member","DetectAnomalies","Body","requiresLength","streaming","ContentType","payload","DetectAnomalyResult","Source","Type","IsAnomalous","Confidence","Anomalies","Name","PixelAnomaly","TotalPercentageArea","Color","AnomalyMask","ListDatasetEntries","AnomalyClass","BeforeCreationDate","AfterCreationDate","NextToken","MaxResults","SourceRefContains","DatasetEntries","ListModelPackagingJobs","ModelPackagingJobs","ListModels","Models","ListProjects","Projects","ListTagsForResource","ResourceArn","StartModel","StartModelPackagingJob","Configuration","StopModel","TagResource","UntagResource","TagKeys","UpdateDatasetEntries","Changes","shapes","Sc","Si","S3Location","Sj","Prefix","Sm","Value","Sr","Sw","F1Score","Recall","Precision","S10","S1h","S1n","CompilerOptions","TargetDevice","TargetPlatform","Os","Arch","Accelerator","S3OutputLocation","ComponentDescription"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-11-20',\n    endpointPrefix: 'lookoutvision',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon Lookout for Vision',\n    serviceId: 'LookoutVision',\n    signatureVersion: 'v4',\n    signingName: 'lookoutvision',\n    uid: 'lookoutvision-2020-11-20'\n  },\n  operations: {\n    CreateDataset: {\n      http: {\n        requestUri: '/2020-11-20/projects/{projectName}/datasets',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'DatasetType'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          DatasetType: {},\n          DatasetSource: {\n            type: 'structure',\n            members: {\n              GroundTruthManifest: {\n                type: 'structure',\n                members: {\n                  S3Object: {\n                    type: 'structure',\n                    required: [\n                      'Bucket',\n                      'Key'\n                    ],\n                    members: {\n                      Bucket: {},\n                      Key: {},\n                      VersionId: {}\n                    }\n                  }\n                }\n              }\n            }\n          },\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'X-Amzn-Client-Token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetMetadata: {\n            shape: 'Sc'\n          }\n        }\n      }\n    },\n    CreateModel: {\n      http: {\n        requestUri: '/2020-11-20/projects/{projectName}/models',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'OutputConfig'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          Description: {},\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'X-Amzn-Client-Token'\n          },\n          OutputConfig: {\n            shape: 'Si'\n          },\n          KmsKeyId: {},\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ModelMetadata: {\n            shape: 'Sr'\n          }\n        }\n      }\n    },\n    CreateProject: {\n      http: {\n        requestUri: '/2020-11-20/projects'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName'\n        ],\n        members: {\n          ProjectName: {},\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'X-Amzn-Client-Token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ProjectMetadata: {\n            shape: 'S10'\n          }\n        }\n      }\n    },\n    DeleteDataset: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2020-11-20/projects/{projectName}/datasets/{datasetType}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'DatasetType'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          DatasetType: {\n            location: 'uri',\n            locationName: 'datasetType'\n          },\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'X-Amzn-Client-Token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteModel: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2020-11-20/projects/{projectName}/models/{modelVersion}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'ModelVersion'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          ModelVersion: {\n            location: 'uri',\n            locationName: 'modelVersion'\n          },\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'X-Amzn-Client-Token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ModelArn: {}\n        }\n      }\n    },\n    DeleteProject: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2020-11-20/projects/{projectName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'X-Amzn-Client-Token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ProjectArn: {}\n        }\n      }\n    },\n    DescribeDataset: {\n      http: {\n        method: 'GET',\n        requestUri: '/2020-11-20/projects/{projectName}/datasets/{datasetType}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'DatasetType'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          DatasetType: {\n            location: 'uri',\n            locationName: 'datasetType'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetDescription: {\n            type: 'structure',\n            members: {\n              ProjectName: {},\n              DatasetType: {},\n              CreationTimestamp: {\n                type: 'timestamp'\n              },\n              LastUpdatedTimestamp: {\n                type: 'timestamp'\n              },\n              Status: {},\n              StatusMessage: {},\n              ImageStats: {\n                type: 'structure',\n                members: {\n                  Total: {\n                    type: 'integer'\n                  },\n                  Labeled: {\n                    type: 'integer'\n                  },\n                  Normal: {\n                    type: 'integer'\n                  },\n                  Anomaly: {\n                    type: 'integer'\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeModel: {\n      http: {\n        method: 'GET',\n        requestUri: '/2020-11-20/projects/{projectName}/models/{modelVersion}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'ModelVersion'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          ModelVersion: {\n            location: 'uri',\n            locationName: 'modelVersion'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ModelDescription: {\n            type: 'structure',\n            members: {\n              ModelVersion: {},\n              ModelArn: {},\n              CreationTimestamp: {\n                type: 'timestamp'\n              },\n              Description: {},\n              Status: {},\n              StatusMessage: {},\n              Performance: {\n                shape: 'Sw'\n              },\n              OutputConfig: {\n                shape: 'Si'\n              },\n              EvaluationManifest: {\n                shape: 'S1h'\n              },\n              EvaluationResult: {\n                shape: 'S1h'\n              },\n              EvaluationEndTimestamp: {\n                type: 'timestamp'\n              },\n              KmsKeyId: {},\n              MinInferenceUnits: {\n                type: 'integer'\n              },\n              MaxInferenceUnits: {\n                type: 'integer'\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeModelPackagingJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/2020-11-20/projects/{projectName}/modelpackagingjobs/{jobName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'JobName'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          JobName: {\n            location: 'uri',\n            locationName: 'jobName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ModelPackagingDescription: {\n            type: 'structure',\n            members: {\n              JobName: {},\n              ProjectName: {},\n              ModelVersion: {},\n              ModelPackagingConfiguration: {\n                shape: 'S1n'\n              },\n              ModelPackagingJobDescription: {},\n              ModelPackagingMethod: {},\n              ModelPackagingOutputDetails: {\n                type: 'structure',\n                members: {\n                  Greengrass: {\n                    type: 'structure',\n                    members: {\n                      ComponentVersionArn: {},\n                      ComponentName: {},\n                      ComponentVersion: {}\n                    }\n                  }\n                }\n              },\n              Status: {},\n              StatusMessage: {},\n              CreationTimestamp: {\n                type: 'timestamp'\n              },\n              LastUpdatedTimestamp: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeProject: {\n      http: {\n        method: 'GET',\n        requestUri: '/2020-11-20/projects/{projectName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ProjectDescription: {\n            type: 'structure',\n            members: {\n              ProjectArn: {},\n              ProjectName: {},\n              CreationTimestamp: {\n                type: 'timestamp'\n              },\n              Datasets: {\n                type: 'list',\n                member: {\n                  shape: 'Sc'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DetectAnomalies: {\n      http: {\n        requestUri: '/2020-11-20/projects/{projectName}/models/{modelVersion}/detect'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'ModelVersion',\n          'Body',\n          'ContentType'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          ModelVersion: {\n            location: 'uri',\n            locationName: 'modelVersion'\n          },\n          Body: {\n            type: 'blob',\n            requiresLength: true,\n            streaming: true\n          },\n          ContentType: {\n            location: 'header',\n            locationName: 'Content-Type'\n          }\n        },\n        payload: 'Body'\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DetectAnomalyResult: {\n            type: 'structure',\n            members: {\n              Source: {\n                type: 'structure',\n                members: {\n                  Type: {}\n                }\n              },\n              IsAnomalous: {\n                type: 'boolean'\n              },\n              Confidence: {\n                type: 'float'\n              },\n              Anomalies: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    Name: {},\n                    PixelAnomaly: {\n                      type: 'structure',\n                      members: {\n                        TotalPercentageArea: {\n                          type: 'float'\n                        },\n                        Color: {}\n                      }\n                    }\n                  }\n                }\n              },\n              AnomalyMask: {\n                type: 'blob'\n              }\n            }\n          }\n        }\n      }\n    },\n    ListDatasetEntries: {\n      http: {\n        method: 'GET',\n        requestUri: '/2020-11-20/projects/{projectName}/datasets/{datasetType}/entries'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'DatasetType'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          DatasetType: {\n            location: 'uri',\n            locationName: 'datasetType'\n          },\n          Labeled: {\n            location: 'querystring',\n            locationName: 'labeled',\n            type: 'boolean'\n          },\n          AnomalyClass: {\n            location: 'querystring',\n            locationName: 'anomalyClass'\n          },\n          BeforeCreationDate: {\n            location: 'querystring',\n            locationName: 'createdBefore',\n            type: 'timestamp'\n          },\n          AfterCreationDate: {\n            location: 'querystring',\n            locationName: 'createdAfter',\n            type: 'timestamp'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          SourceRefContains: {\n            location: 'querystring',\n            locationName: 'sourceRefContains'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          DatasetEntries: {\n            type: 'list',\n            member: {}\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListModelPackagingJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/2020-11-20/projects/{projectName}/modelpackagingjobs'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ModelPackagingJobs: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                JobName: {},\n                ProjectName: {},\n                ModelVersion: {},\n                ModelPackagingJobDescription: {},\n                ModelPackagingMethod: {},\n                Status: {},\n                StatusMessage: {},\n                CreationTimestamp: {\n                  type: 'timestamp'\n                },\n                LastUpdatedTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListModels: {\n      http: {\n        method: 'GET',\n        requestUri: '/2020-11-20/projects/{projectName}/models'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Models: {\n            type: 'list',\n            member: {\n              shape: 'Sr'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListProjects: {\n      http: {\n        method: 'GET',\n        requestUri: '/2020-11-20/projects'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Projects: {\n            type: 'list',\n            member: {\n              shape: 'S10'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/2020-11-20/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      }\n    },\n    StartModel: {\n      http: {\n        requestUri: '/2020-11-20/projects/{projectName}/models/{modelVersion}/start',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'ModelVersion',\n          'MinInferenceUnits'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          ModelVersion: {\n            location: 'uri',\n            locationName: 'modelVersion'\n          },\n          MinInferenceUnits: {\n            type: 'integer'\n          },\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'X-Amzn-Client-Token'\n          },\n          MaxInferenceUnits: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Status: {}\n        }\n      }\n    },\n    StartModelPackagingJob: {\n      http: {\n        requestUri: '/2020-11-20/projects/{projectName}/modelpackagingjobs'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'ModelVersion',\n          'Configuration'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          ModelVersion: {},\n          JobName: {},\n          Configuration: {\n            shape: 'S1n'\n          },\n          Description: {},\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'X-Amzn-Client-Token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          JobName: {}\n        }\n      }\n    },\n    StopModel: {\n      http: {\n        requestUri: '/2020-11-20/projects/{projectName}/models/{modelVersion}/stop',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'ModelVersion'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          ModelVersion: {\n            location: 'uri',\n            locationName: 'modelVersion'\n          },\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'X-Amzn-Client-Token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Status: {}\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/2020-11-20/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          Tags: {\n            shape: 'Sm'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2020-11-20/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateDatasetEntries: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/2020-11-20/projects/{projectName}/datasets/{datasetType}/entries',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ProjectName',\n          'DatasetType',\n          'Changes'\n        ],\n        members: {\n          ProjectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          DatasetType: {\n            location: 'uri',\n            locationName: 'datasetType'\n          },\n          Changes: {\n            type: 'blob'\n          },\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'X-Amzn-Client-Token'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Status: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    Sc: {\n      type: 'structure',\n      members: {\n        DatasetType: {},\n        CreationTimestamp: {\n          type: 'timestamp'\n        },\n        Status: {},\n        StatusMessage: {}\n      }\n    },\n    Si: {\n      type: 'structure',\n      required: [\n        'S3Location'\n      ],\n      members: {\n        S3Location: {\n          shape: 'Sj'\n        }\n      }\n    },\n    Sj: {\n      type: 'structure',\n      required: [\n        'Bucket'\n      ],\n      members: {\n        Bucket: {},\n        Prefix: {}\n      }\n    },\n    Sm: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sr: {\n      type: 'structure',\n      members: {\n        CreationTimestamp: {\n          type: 'timestamp'\n        },\n        ModelVersion: {},\n        ModelArn: {},\n        Description: {},\n        Status: {},\n        StatusMessage: {},\n        Performance: {\n          shape: 'Sw'\n        }\n      }\n    },\n    Sw: {\n      type: 'structure',\n      members: {\n        F1Score: {\n          type: 'float'\n        },\n        Recall: {\n          type: 'float'\n        },\n        Precision: {\n          type: 'float'\n        }\n      }\n    },\n    S10: {\n      type: 'structure',\n      members: {\n        ProjectArn: {},\n        ProjectName: {},\n        CreationTimestamp: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S1h: {\n      type: 'structure',\n      required: [\n        'Bucket',\n        'Key'\n      ],\n      members: {\n        Bucket: {},\n        Key: {}\n      }\n    },\n    S1n: {\n      type: 'structure',\n      required: [\n        'Greengrass'\n      ],\n      members: {\n        Greengrass: {\n          type: 'structure',\n          required: [\n            'S3OutputLocation',\n            'ComponentName'\n          ],\n          members: {\n            CompilerOptions: {},\n            TargetDevice: {},\n            TargetPlatform: {\n              type: 'structure',\n              required: [\n                'Os',\n                'Arch'\n              ],\n              members: {\n                Os: {},\n                Arch: {},\n                Accelerator: {}\n              }\n            },\n            S3OutputLocation: {\n              shape: 'Sj'\n            },\n            ComponentName: {},\n            ComponentVersion: {},\n            ComponentDescription: {},\n            Tags: {\n              shape: 'Sm'\n            }\n          }\n        }\n      }\n    }\n  }\n}"]}