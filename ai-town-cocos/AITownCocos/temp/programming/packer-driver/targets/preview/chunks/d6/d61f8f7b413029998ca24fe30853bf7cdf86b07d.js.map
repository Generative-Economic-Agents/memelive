{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/_createWrap.js"],"names":["createWrap","func","bitmask","thisArg","partials","holders","argPos","ary","arity","isBindKey","WRAP_BIND_KEY_FLAG","TypeError","FUNC_ERROR_TEXT","length","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","undefined","nativeMax","toInteger","partialsRight","holdersRight","data","getData","newData","mergeData","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_BIND_FLAG","result","createBind","createCurry","createPartial","createHybrid","apply","setter","baseSetData","setData","setWrapToString","Math","max"],"mappings":"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","sourcesContent":["import baseSetData from './_baseSetData.js';\nimport createBind from './_createBind.js';\nimport createCurry from './_createCurry.js';\nimport createHybrid from './_createHybrid.js';\nimport createPartial from './_createPartial.js';\nimport getData from './_getData.js';\nimport mergeData from './_mergeData.js';\nimport setData from './_setData.js';\nimport setWrapToString from './_setWrapToString.js';\nimport toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that either curries or invokes `func` with optional\n * `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags.\n *    1 - `_.bind`\n *    2 - `_.bindKey`\n *    4 - `_.curry` or `_.curryRight` of a bound function\n *    8 - `_.curry`\n *   16 - `_.curryRight`\n *   32 - `_.partial`\n *   64 - `_.partialRight`\n *  128 - `_.rearg`\n *  256 - `_.ary`\n *  512 - `_.flip`\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to be partially applied.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n  if (!isBindKey && typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var length = partials ? partials.length : 0;\n  if (!length) {\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n    partials = holders = undefined;\n  }\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n  arity = arity === undefined ? arity : toInteger(arity);\n  length -= holders ? holders.length : 0;\n\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n    var partialsRight = partials,\n        holdersRight = holders;\n\n    partials = holders = undefined;\n  }\n  var data = isBindKey ? undefined : getData(func);\n\n  var newData = [\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n    argPos, ary, arity\n  ];\n\n  if (data) {\n    mergeData(newData, data);\n  }\n  func = newData[0];\n  bitmask = newData[1];\n  thisArg = newData[2];\n  partials = newData[3];\n  holders = newData[4];\n  arity = newData[9] = newData[9] === undefined\n    ? (isBindKey ? 0 : func.length)\n    : nativeMax(newData[9] - length, 0);\n\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n  }\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n    var result = createBind(func, bitmask, thisArg);\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n    result = createCurry(func, bitmask, arity);\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n    result = createPartial(func, bitmask, thisArg, partials);\n  } else {\n    result = createHybrid.apply(undefined, newData);\n  }\n  var setter = data ? baseSetData : setData;\n  return setWrapToString(setter(result, newData), func, bitmask);\n}\n\nexport default createWrap;\n"]}