{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/route53-2013-04-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","globalEndpoint","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","uid","operations","ActivateKeySigningKey","http","requestUri","input","type","required","members","HostedZoneId","location","locationName","Name","output","ChangeInfo","shape","AssociateVPCWithHostedZone","xmlNamespace","uri","VPC","Comment","ChangeCidrCollection","Id","CollectionVersion","Changes","member","LocationName","Action","CidrList","ChangeResourceRecordSets","ChangeBatch","ResourceRecordSet","ChangeTagsForResource","ResourceType","ResourceId","AddTags","RemoveTagKeys","CreateCidrCollection","responseCode","CallerReference","Collection","Arn","Version","Location","CreateHealthCheck","HealthCheckConfig","HealthCheck","CreateHostedZone","HostedZoneConfig","DelegationSetId","HostedZone","DelegationSet","CreateKeySigningKey","KeyManagementServiceArn","Status","KeySigningKey","CreateQueryLoggingConfig","CloudWatchLogsLogGroupArn","QueryLoggingConfig","CreateReusableDelegationSet","CreateTrafficPolicy","Document","TrafficPolicy","CreateTrafficPolicyInstance","TTL","TrafficPolicyId","TrafficPolicyVersion","TrafficPolicyInstance","CreateTrafficPolicyVersion","CreateVPCAssociationAuthorization","DeactivateKeySigningKey","DeleteCidrCollection","method","DeleteHealthCheck","HealthCheckId","DeleteHostedZone","DeleteKeySigningKey","DeleteQueryLoggingConfig","DeleteReusableDelegationSet","DeleteTrafficPolicy","DeleteTrafficPolicyInstance","DeleteVPCAssociationAuthorization","DisableHostedZoneDNSSEC","DisassociateVPCFromHostedZone","EnableHostedZoneDNSSEC","GetAccountLimit","Type","Limit","Value","Count","GetChange","GetCheckerIpRanges","CheckerIpRanges","GetDNSSEC","ServeSignature","StatusMessage","KeySigningKeys","GetGeoLocation","ContinentCode","CountryCode","SubdivisionCode","GeoLocationDetails","GetHealthCheck","GetHealthCheckCount","HealthCheckCount","GetHealthCheckLastFailureReason","HealthCheckObservations","GetHealthCheckStatus","GetHostedZone","VPCs","GetHostedZoneCount","HostedZoneCount","GetHostedZoneLimit","GetQueryLoggingConfig","GetReusableDelegationSet","GetReusableDelegationSetLimit","GetTrafficPolicy","GetTrafficPolicyInstance","GetTrafficPolicyInstanceCount","TrafficPolicyInstanceCount","ListCidrBlocks","CollectionId","NextToken","MaxResults","CidrBlocks","CidrBlock","ListCidrCollections","CidrCollections","ListCidrLocations","CidrLocations","ListGeoLocations","StartContinentCode","StartCountryCode","StartSubdivisionCode","MaxItems","GeoLocationDetailsList","IsTruncated","NextContinentCode","NextCountryCode","NextSubdivisionCode","ListHealthChecks","Marker","HealthChecks","NextMarker","ListHostedZones","HostedZoneType","HostedZones","ListHostedZonesByName","DNSName","NextDNSName","NextHostedZoneId","ListHostedZonesByVPC","VPCId","VPCRegion","HostedZoneSummaries","Owner","OwningAccount","OwningService","ListQueryLoggingConfigs","QueryLoggingConfigs","ListResourceRecordSets","StartRecordName","StartRecordType","StartRecordIdentifier","ResourceRecordSets","NextRecordName","NextRecordType","NextRecordIdentifier","ListReusableDelegationSets","DelegationSets","ListTagsForResource","ResourceTagSet","ListTagsForResources","ResourceIds","ResourceTagSets","ListTrafficPolicies","TrafficPolicyIdMarker","TrafficPolicySummaries","LatestVersion","TrafficPolicyCount","ListTrafficPolicyInstances","HostedZoneIdMarker","TrafficPolicyInstanceNameMarker","TrafficPolicyInstanceTypeMarker","TrafficPolicyInstances","ListTrafficPolicyInstancesByHostedZone","ListTrafficPolicyInstancesByPolicy","ListTrafficPolicyVersions","TrafficPolicyVersionMarker","TrafficPolicies","ListVPCAssociationAuthorizations","TestDNSAnswer","RecordName","RecordType","ResolverIP","EDNS0ClientSubnetIP","EDNS0ClientSubnetMask","Nameserver","RecordData","ResponseCode","Protocol","UpdateHealthCheck","HealthCheckVersion","IPAddress","Port","ResourcePath","FullyQualifiedDomainName","SearchString","FailureThreshold","Inverted","Disabled","HealthThreshold","ChildHealthChecks","EnableSNI","Regions","AlarmIdentifier","InsufficientDataHealthStatus","ResetElements","UpdateHostedZoneComment","UpdateTrafficPolicyComment","UpdateTrafficPolicyInstance","shapes","S5","SubmittedAt","Sa","Sv","SetIdentifier","Weight","Region","GeoLocation","Failover","MultiValueAnswer","ResourceRecords","AliasTarget","EvaluateTargetHealth","TrafficPolicyInstanceId","CidrRoutingConfig","GeoProximityLocation","AWSRegion","LocalZoneGroup","Coordinates","Latitude","Longitude","Bias","S1s","Key","S27","RequestInterval","MeasureLatency","RoutingControlArn","S2k","S2m","S2o","S2u","LinkedService","CloudWatchAlarmConfiguration","EvaluationPeriods","Threshold","ComparisonOperator","Period","MetricName","Namespace","Statistic","Dimensions","S2v","ServicePrincipal","Description","S3b","PrivateZone","S3e","Config","ResourceRecordSetCount","S3g","NameServers","S3m","KmsArn","Flag","SigningAlgorithmMnemonic","SigningAlgorithmType","DigestAlgorithmMnemonic","DigestAlgorithmType","KeyTag","DigestValue","PublicKey","DSRecord","DNSKEYRecord","CreatedDate","LastModifiedDate","S3t","S42","S47","State","Message","TrafficPolicyType","S5o","ContinentName","CountryName","SubdivisionName","S5z","StatusReport","CheckedTime","S67","S7k","S85","Tags","S8g"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2013-04-01',\n    endpointPrefix: 'route53',\n    globalEndpoint: 'route53.amazonaws.com',\n    protocol: 'rest-xml',\n    serviceAbbreviation: 'Route 53',\n    serviceFullName: 'Amazon Route 53',\n    serviceId: 'Route 53',\n    signatureVersion: 'v4',\n    uid: 'route53-2013-04-01'\n  },\n  operations: {\n    ActivateKeySigningKey: {\n      http: {\n        requestUri: '/2013-04-01/keysigningkey/{HostedZoneId}/{Name}/activate'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'Name'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'HostedZoneId'\n          },\n          Name: {\n            location: 'uri',\n            locationName: 'Name'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    AssociateVPCWithHostedZone: {\n      http: {\n        requestUri: '/2013-04-01/hostedzone/{Id}/associatevpc'\n      },\n      input: {\n        locationName: 'AssociateVPCWithHostedZoneRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'VPC'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          VPC: {\n            shape: 'Sa'\n          },\n          Comment: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    ChangeCidrCollection: {\n      http: {\n        requestUri: '/2013-04-01/cidrcollection/{CidrCollectionId}'\n      },\n      input: {\n        locationName: 'ChangeCidrCollectionRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'Id',\n          'Changes'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'CidrCollectionId'\n          },\n          CollectionVersion: {\n            type: 'long'\n          },\n          Changes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'LocationName',\n                'Action',\n                'CidrList'\n              ],\n              members: {\n                LocationName: {},\n                Action: {},\n                CidrList: {\n                  type: 'list',\n                  member: {\n                    locationName: 'Cidr'\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {}\n        }\n      }\n    },\n    ChangeResourceRecordSets: {\n      http: {\n        requestUri: '/2013-04-01/hostedzone/{Id}/rrset/'\n      },\n      input: {\n        locationName: 'ChangeResourceRecordSetsRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'ChangeBatch'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          ChangeBatch: {\n            type: 'structure',\n            required: [\n              'Changes'\n            ],\n            members: {\n              Comment: {},\n              Changes: {\n                type: 'list',\n                member: {\n                  locationName: 'Change',\n                  type: 'structure',\n                  required: [\n                    'Action',\n                    'ResourceRecordSet'\n                  ],\n                  members: {\n                    Action: {},\n                    ResourceRecordSet: {\n                      shape: 'Sv'\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    ChangeTagsForResource: {\n      http: {\n        requestUri: '/2013-04-01/tags/{ResourceType}/{ResourceId}'\n      },\n      input: {\n        locationName: 'ChangeTagsForResourceRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'ResourceType',\n          'ResourceId'\n        ],\n        members: {\n          ResourceType: {\n            location: 'uri',\n            locationName: 'ResourceType'\n          },\n          ResourceId: {\n            location: 'uri',\n            locationName: 'ResourceId'\n          },\n          AddTags: {\n            shape: 'S1s'\n          },\n          RemoveTagKeys: {\n            type: 'list',\n            member: {\n              locationName: 'Key'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateCidrCollection: {\n      http: {\n        requestUri: '/2013-04-01/cidrcollection',\n        responseCode: 201\n      },\n      input: {\n        locationName: 'CreateCidrCollectionRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'Name',\n          'CallerReference'\n        ],\n        members: {\n          Name: {},\n          CallerReference: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Collection: {\n            type: 'structure',\n            members: {\n              Arn: {},\n              Id: {},\n              Name: {},\n              Version: {\n                type: 'long'\n              }\n            }\n          },\n          Location: {\n            location: 'header',\n            locationName: 'Location'\n          }\n        }\n      }\n    },\n    CreateHealthCheck: {\n      http: {\n        requestUri: '/2013-04-01/healthcheck',\n        responseCode: 201\n      },\n      input: {\n        locationName: 'CreateHealthCheckRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'CallerReference',\n          'HealthCheckConfig'\n        ],\n        members: {\n          CallerReference: {},\n          HealthCheckConfig: {\n            shape: 'S27'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HealthCheck',\n          'Location'\n        ],\n        members: {\n          HealthCheck: {\n            shape: 'S2u'\n          },\n          Location: {\n            location: 'header',\n            locationName: 'Location'\n          }\n        }\n      }\n    },\n    CreateHostedZone: {\n      http: {\n        requestUri: '/2013-04-01/hostedzone',\n        responseCode: 201\n      },\n      input: {\n        locationName: 'CreateHostedZoneRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'Name',\n          'CallerReference'\n        ],\n        members: {\n          Name: {},\n          VPC: {\n            shape: 'Sa'\n          },\n          CallerReference: {},\n          HostedZoneConfig: {\n            shape: 'S3b'\n          },\n          DelegationSetId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HostedZone',\n          'ChangeInfo',\n          'DelegationSet',\n          'Location'\n        ],\n        members: {\n          HostedZone: {\n            shape: 'S3e'\n          },\n          ChangeInfo: {\n            shape: 'S5'\n          },\n          DelegationSet: {\n            shape: 'S3g'\n          },\n          VPC: {\n            shape: 'Sa'\n          },\n          Location: {\n            location: 'header',\n            locationName: 'Location'\n          }\n        }\n      }\n    },\n    CreateKeySigningKey: {\n      http: {\n        requestUri: '/2013-04-01/keysigningkey',\n        responseCode: 201\n      },\n      input: {\n        locationName: 'CreateKeySigningKeyRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'CallerReference',\n          'HostedZoneId',\n          'KeyManagementServiceArn',\n          'Name',\n          'Status'\n        ],\n        members: {\n          CallerReference: {},\n          HostedZoneId: {},\n          KeyManagementServiceArn: {},\n          Name: {},\n          Status: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo',\n          'KeySigningKey',\n          'Location'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          },\n          KeySigningKey: {\n            shape: 'S3m'\n          },\n          Location: {\n            location: 'header',\n            locationName: 'Location'\n          }\n        }\n      }\n    },\n    CreateQueryLoggingConfig: {\n      http: {\n        requestUri: '/2013-04-01/queryloggingconfig',\n        responseCode: 201\n      },\n      input: {\n        locationName: 'CreateQueryLoggingConfigRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'CloudWatchLogsLogGroupArn'\n        ],\n        members: {\n          HostedZoneId: {},\n          CloudWatchLogsLogGroupArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'QueryLoggingConfig',\n          'Location'\n        ],\n        members: {\n          QueryLoggingConfig: {\n            shape: 'S3t'\n          },\n          Location: {\n            location: 'header',\n            locationName: 'Location'\n          }\n        }\n      }\n    },\n    CreateReusableDelegationSet: {\n      http: {\n        requestUri: '/2013-04-01/delegationset',\n        responseCode: 201\n      },\n      input: {\n        locationName: 'CreateReusableDelegationSetRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'CallerReference'\n        ],\n        members: {\n          CallerReference: {},\n          HostedZoneId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'DelegationSet',\n          'Location'\n        ],\n        members: {\n          DelegationSet: {\n            shape: 'S3g'\n          },\n          Location: {\n            location: 'header',\n            locationName: 'Location'\n          }\n        }\n      }\n    },\n    CreateTrafficPolicy: {\n      http: {\n        requestUri: '/2013-04-01/trafficpolicy',\n        responseCode: 201\n      },\n      input: {\n        locationName: 'CreateTrafficPolicyRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'Name',\n          'Document'\n        ],\n        members: {\n          Name: {},\n          Document: {},\n          Comment: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicy',\n          'Location'\n        ],\n        members: {\n          TrafficPolicy: {\n            shape: 'S42'\n          },\n          Location: {\n            location: 'header',\n            locationName: 'Location'\n          }\n        }\n      }\n    },\n    CreateTrafficPolicyInstance: {\n      http: {\n        requestUri: '/2013-04-01/trafficpolicyinstance',\n        responseCode: 201\n      },\n      input: {\n        locationName: 'CreateTrafficPolicyInstanceRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'Name',\n          'TTL',\n          'TrafficPolicyId',\n          'TrafficPolicyVersion'\n        ],\n        members: {\n          HostedZoneId: {},\n          Name: {},\n          TTL: {\n            type: 'long'\n          },\n          TrafficPolicyId: {},\n          TrafficPolicyVersion: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyInstance',\n          'Location'\n        ],\n        members: {\n          TrafficPolicyInstance: {\n            shape: 'S47'\n          },\n          Location: {\n            location: 'header',\n            locationName: 'Location'\n          }\n        }\n      }\n    },\n    CreateTrafficPolicyVersion: {\n      http: {\n        requestUri: '/2013-04-01/trafficpolicy/{Id}',\n        responseCode: 201\n      },\n      input: {\n        locationName: 'CreateTrafficPolicyVersionRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'Id',\n          'Document'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          Document: {},\n          Comment: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicy',\n          'Location'\n        ],\n        members: {\n          TrafficPolicy: {\n            shape: 'S42'\n          },\n          Location: {\n            location: 'header',\n            locationName: 'Location'\n          }\n        }\n      }\n    },\n    CreateVPCAssociationAuthorization: {\n      http: {\n        requestUri: '/2013-04-01/hostedzone/{Id}/authorizevpcassociation'\n      },\n      input: {\n        locationName: 'CreateVPCAssociationAuthorizationRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'VPC'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          VPC: {\n            shape: 'Sa'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'VPC'\n        ],\n        members: {\n          HostedZoneId: {},\n          VPC: {\n            shape: 'Sa'\n          }\n        }\n      }\n    },\n    DeactivateKeySigningKey: {\n      http: {\n        requestUri: '/2013-04-01/keysigningkey/{HostedZoneId}/{Name}/deactivate'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'Name'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'HostedZoneId'\n          },\n          Name: {\n            location: 'uri',\n            locationName: 'Name'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    DeleteCidrCollection: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2013-04-01/cidrcollection/{CidrCollectionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'CidrCollectionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteHealthCheck: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2013-04-01/healthcheck/{HealthCheckId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HealthCheckId'\n        ],\n        members: {\n          HealthCheckId: {\n            location: 'uri',\n            locationName: 'HealthCheckId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteHostedZone: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2013-04-01/hostedzone/{Id}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    DeleteKeySigningKey: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2013-04-01/keysigningkey/{HostedZoneId}/{Name}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'Name'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'HostedZoneId'\n          },\n          Name: {\n            location: 'uri',\n            locationName: 'Name'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    DeleteQueryLoggingConfig: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2013-04-01/queryloggingconfig/{Id}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteReusableDelegationSet: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2013-04-01/delegationset/{Id}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteTrafficPolicy: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2013-04-01/trafficpolicy/{Id}/{Version}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id',\n          'Version'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          Version: {\n            location: 'uri',\n            locationName: 'Version',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteTrafficPolicyInstance: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/2013-04-01/trafficpolicyinstance/{Id}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteVPCAssociationAuthorization: {\n      http: {\n        requestUri: '/2013-04-01/hostedzone/{Id}/deauthorizevpcassociation'\n      },\n      input: {\n        locationName: 'DeleteVPCAssociationAuthorizationRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'VPC'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          VPC: {\n            shape: 'Sa'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DisableHostedZoneDNSSEC: {\n      http: {\n        requestUri: '/2013-04-01/hostedzone/{Id}/disable-dnssec'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HostedZoneId'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    DisassociateVPCFromHostedZone: {\n      http: {\n        requestUri: '/2013-04-01/hostedzone/{Id}/disassociatevpc'\n      },\n      input: {\n        locationName: 'DisassociateVPCFromHostedZoneRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'VPC'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          VPC: {\n            shape: 'Sa'\n          },\n          Comment: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    EnableHostedZoneDNSSEC: {\n      http: {\n        requestUri: '/2013-04-01/hostedzone/{Id}/enable-dnssec'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HostedZoneId'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    GetAccountLimit: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/accountlimit/{Type}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Type'\n        ],\n        members: {\n          Type: {\n            location: 'uri',\n            locationName: 'Type'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Limit',\n          'Count'\n        ],\n        members: {\n          Limit: {\n            type: 'structure',\n            required: [\n              'Type',\n              'Value'\n            ],\n            members: {\n              Type: {},\n              Value: {\n                type: 'long'\n              }\n            }\n          },\n          Count: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    GetChange: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/change/{Id}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChangeInfo'\n        ],\n        members: {\n          ChangeInfo: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    GetCheckerIpRanges: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/checkeripranges'\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'CheckerIpRanges'\n        ],\n        members: {\n          CheckerIpRanges: {\n            type: 'list',\n            member: {}\n          }\n        }\n      }\n    },\n    GetDNSSEC: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/hostedzone/{Id}/dnssec'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HostedZoneId'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Status',\n          'KeySigningKeys'\n        ],\n        members: {\n          Status: {\n            type: 'structure',\n            members: {\n              ServeSignature: {},\n              StatusMessage: {}\n            }\n          },\n          KeySigningKeys: {\n            type: 'list',\n            member: {\n              shape: 'S3m'\n            }\n          }\n        }\n      }\n    },\n    GetGeoLocation: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/geolocation'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          ContinentCode: {\n            location: 'querystring',\n            locationName: 'continentcode'\n          },\n          CountryCode: {\n            location: 'querystring',\n            locationName: 'countrycode'\n          },\n          SubdivisionCode: {\n            location: 'querystring',\n            locationName: 'subdivisioncode'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'GeoLocationDetails'\n        ],\n        members: {\n          GeoLocationDetails: {\n            shape: 'S5o'\n          }\n        }\n      }\n    },\n    GetHealthCheck: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/healthcheck/{HealthCheckId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HealthCheckId'\n        ],\n        members: {\n          HealthCheckId: {\n            location: 'uri',\n            locationName: 'HealthCheckId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HealthCheck'\n        ],\n        members: {\n          HealthCheck: {\n            shape: 'S2u'\n          }\n        }\n      }\n    },\n    GetHealthCheckCount: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/healthcheckcount'\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HealthCheckCount'\n        ],\n        members: {\n          HealthCheckCount: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    GetHealthCheckLastFailureReason: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/healthcheck/{HealthCheckId}/lastfailurereason'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HealthCheckId'\n        ],\n        members: {\n          HealthCheckId: {\n            location: 'uri',\n            locationName: 'HealthCheckId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HealthCheckObservations'\n        ],\n        members: {\n          HealthCheckObservations: {\n            shape: 'S5z'\n          }\n        }\n      }\n    },\n    GetHealthCheckStatus: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/healthcheck/{HealthCheckId}/status'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HealthCheckId'\n        ],\n        members: {\n          HealthCheckId: {\n            location: 'uri',\n            locationName: 'HealthCheckId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HealthCheckObservations'\n        ],\n        members: {\n          HealthCheckObservations: {\n            shape: 'S5z'\n          }\n        }\n      }\n    },\n    GetHostedZone: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/hostedzone/{Id}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HostedZone'\n        ],\n        members: {\n          HostedZone: {\n            shape: 'S3e'\n          },\n          DelegationSet: {\n            shape: 'S3g'\n          },\n          VPCs: {\n            shape: 'S67'\n          }\n        }\n      }\n    },\n    GetHostedZoneCount: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/hostedzonecount'\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HostedZoneCount'\n        ],\n        members: {\n          HostedZoneCount: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    GetHostedZoneLimit: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/hostedzonelimit/{Id}/{Type}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Type',\n          'HostedZoneId'\n        ],\n        members: {\n          Type: {\n            location: 'uri',\n            locationName: 'Type'\n          },\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Limit',\n          'Count'\n        ],\n        members: {\n          Limit: {\n            type: 'structure',\n            required: [\n              'Type',\n              'Value'\n            ],\n            members: {\n              Type: {},\n              Value: {\n                type: 'long'\n              }\n            }\n          },\n          Count: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    GetQueryLoggingConfig: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/queryloggingconfig/{Id}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'QueryLoggingConfig'\n        ],\n        members: {\n          QueryLoggingConfig: {\n            shape: 'S3t'\n          }\n        }\n      }\n    },\n    GetReusableDelegationSet: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/delegationset/{Id}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'DelegationSet'\n        ],\n        members: {\n          DelegationSet: {\n            shape: 'S3g'\n          }\n        }\n      }\n    },\n    GetReusableDelegationSetLimit: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/reusabledelegationsetlimit/{Id}/{Type}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Type',\n          'DelegationSetId'\n        ],\n        members: {\n          Type: {\n            location: 'uri',\n            locationName: 'Type'\n          },\n          DelegationSetId: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Limit',\n          'Count'\n        ],\n        members: {\n          Limit: {\n            type: 'structure',\n            required: [\n              'Type',\n              'Value'\n            ],\n            members: {\n              Type: {},\n              Value: {\n                type: 'long'\n              }\n            }\n          },\n          Count: {\n            type: 'long'\n          }\n        }\n      }\n    },\n    GetTrafficPolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/trafficpolicy/{Id}/{Version}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id',\n          'Version'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          Version: {\n            location: 'uri',\n            locationName: 'Version',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicy'\n        ],\n        members: {\n          TrafficPolicy: {\n            shape: 'S42'\n          }\n        }\n      }\n    },\n    GetTrafficPolicyInstance: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/trafficpolicyinstance/{Id}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyInstance'\n        ],\n        members: {\n          TrafficPolicyInstance: {\n            shape: 'S47'\n          }\n        }\n      }\n    },\n    GetTrafficPolicyInstanceCount: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/trafficpolicyinstancecount'\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyInstanceCount'\n        ],\n        members: {\n          TrafficPolicyInstanceCount: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    ListCidrBlocks: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/cidrcollection/{CidrCollectionId}/cidrblocks'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionId'\n        ],\n        members: {\n          CollectionId: {\n            location: 'uri',\n            locationName: 'CidrCollectionId'\n          },\n          LocationName: {\n            location: 'querystring',\n            locationName: 'location'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nexttoken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxresults'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          CidrBlocks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                CidrBlock: {},\n                LocationName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListCidrCollections: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/cidrcollection'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nexttoken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxresults'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          CidrCollections: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Arn: {},\n                Id: {},\n                Name: {},\n                Version: {\n                  type: 'long'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListCidrLocations: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/cidrcollection/{CidrCollectionId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'CollectionId'\n        ],\n        members: {\n          CollectionId: {\n            location: 'uri',\n            locationName: 'CidrCollectionId'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nexttoken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxresults'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          CidrLocations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                LocationName: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListGeoLocations: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/geolocations'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          StartContinentCode: {\n            location: 'querystring',\n            locationName: 'startcontinentcode'\n          },\n          StartCountryCode: {\n            location: 'querystring',\n            locationName: 'startcountrycode'\n          },\n          StartSubdivisionCode: {\n            location: 'querystring',\n            locationName: 'startsubdivisioncode'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'GeoLocationDetailsList',\n          'IsTruncated',\n          'MaxItems'\n        ],\n        members: {\n          GeoLocationDetailsList: {\n            type: 'list',\n            member: {\n              shape: 'S5o',\n              locationName: 'GeoLocationDetails'\n            }\n          },\n          IsTruncated: {\n            type: 'boolean'\n          },\n          NextContinentCode: {},\n          NextCountryCode: {},\n          NextSubdivisionCode: {},\n          MaxItems: {}\n        }\n      }\n    },\n    ListHealthChecks: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/healthcheck'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Marker: {\n            location: 'querystring',\n            locationName: 'marker'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HealthChecks',\n          'Marker',\n          'IsTruncated',\n          'MaxItems'\n        ],\n        members: {\n          HealthChecks: {\n            type: 'list',\n            member: {\n              shape: 'S2u',\n              locationName: 'HealthCheck'\n            }\n          },\n          Marker: {},\n          IsTruncated: {\n            type: 'boolean'\n          },\n          NextMarker: {},\n          MaxItems: {}\n        }\n      }\n    },\n    ListHostedZones: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/hostedzone'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Marker: {\n            location: 'querystring',\n            locationName: 'marker'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          },\n          DelegationSetId: {\n            location: 'querystring',\n            locationName: 'delegationsetid'\n          },\n          HostedZoneType: {\n            location: 'querystring',\n            locationName: 'hostedzonetype'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HostedZones',\n          'Marker',\n          'IsTruncated',\n          'MaxItems'\n        ],\n        members: {\n          HostedZones: {\n            shape: 'S7k'\n          },\n          Marker: {},\n          IsTruncated: {\n            type: 'boolean'\n          },\n          NextMarker: {},\n          MaxItems: {}\n        }\n      }\n    },\n    ListHostedZonesByName: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/hostedzonesbyname'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          DNSName: {\n            location: 'querystring',\n            locationName: 'dnsname'\n          },\n          HostedZoneId: {\n            location: 'querystring',\n            locationName: 'hostedzoneid'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HostedZones',\n          'IsTruncated',\n          'MaxItems'\n        ],\n        members: {\n          HostedZones: {\n            shape: 'S7k'\n          },\n          DNSName: {},\n          HostedZoneId: {},\n          IsTruncated: {\n            type: 'boolean'\n          },\n          NextDNSName: {},\n          NextHostedZoneId: {},\n          MaxItems: {}\n        }\n      }\n    },\n    ListHostedZonesByVPC: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/hostedzonesbyvpc'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'VPCId',\n          'VPCRegion'\n        ],\n        members: {\n          VPCId: {\n            location: 'querystring',\n            locationName: 'vpcid'\n          },\n          VPCRegion: {\n            location: 'querystring',\n            locationName: 'vpcregion'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nexttoken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HostedZoneSummaries',\n          'MaxItems'\n        ],\n        members: {\n          HostedZoneSummaries: {\n            type: 'list',\n            member: {\n              locationName: 'HostedZoneSummary',\n              type: 'structure',\n              required: [\n                'HostedZoneId',\n                'Name',\n                'Owner'\n              ],\n              members: {\n                HostedZoneId: {},\n                Name: {},\n                Owner: {\n                  type: 'structure',\n                  members: {\n                    OwningAccount: {},\n                    OwningService: {}\n                  }\n                }\n              }\n            }\n          },\n          MaxItems: {},\n          NextToken: {}\n        }\n      }\n    },\n    ListQueryLoggingConfigs: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/queryloggingconfig'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          HostedZoneId: {\n            location: 'querystring',\n            locationName: 'hostedzoneid'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nexttoken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxresults'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'QueryLoggingConfigs'\n        ],\n        members: {\n          QueryLoggingConfigs: {\n            type: 'list',\n            member: {\n              shape: 'S3t',\n              locationName: 'QueryLoggingConfig'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListResourceRecordSets: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/hostedzone/{Id}/rrset'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HostedZoneId'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          StartRecordName: {\n            location: 'querystring',\n            locationName: 'name'\n          },\n          StartRecordType: {\n            location: 'querystring',\n            locationName: 'type'\n          },\n          StartRecordIdentifier: {\n            location: 'querystring',\n            locationName: 'identifier'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ResourceRecordSets',\n          'IsTruncated',\n          'MaxItems'\n        ],\n        members: {\n          ResourceRecordSets: {\n            type: 'list',\n            member: {\n              shape: 'Sv',\n              locationName: 'ResourceRecordSet'\n            }\n          },\n          IsTruncated: {\n            type: 'boolean'\n          },\n          NextRecordName: {},\n          NextRecordType: {},\n          NextRecordIdentifier: {},\n          MaxItems: {}\n        }\n      }\n    },\n    ListReusableDelegationSets: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/delegationset'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          Marker: {\n            location: 'querystring',\n            locationName: 'marker'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'DelegationSets',\n          'Marker',\n          'IsTruncated',\n          'MaxItems'\n        ],\n        members: {\n          DelegationSets: {\n            type: 'list',\n            member: {\n              shape: 'S3g',\n              locationName: 'DelegationSet'\n            }\n          },\n          Marker: {},\n          IsTruncated: {\n            type: 'boolean'\n          },\n          NextMarker: {},\n          MaxItems: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/tags/{ResourceType}/{ResourceId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceType',\n          'ResourceId'\n        ],\n        members: {\n          ResourceType: {\n            location: 'uri',\n            locationName: 'ResourceType'\n          },\n          ResourceId: {\n            location: 'uri',\n            locationName: 'ResourceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ResourceTagSet'\n        ],\n        members: {\n          ResourceTagSet: {\n            shape: 'S85'\n          }\n        }\n      }\n    },\n    ListTagsForResources: {\n      http: {\n        requestUri: '/2013-04-01/tags/{ResourceType}'\n      },\n      input: {\n        locationName: 'ListTagsForResourcesRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'ResourceType',\n          'ResourceIds'\n        ],\n        members: {\n          ResourceType: {\n            location: 'uri',\n            locationName: 'ResourceType'\n          },\n          ResourceIds: {\n            type: 'list',\n            member: {\n              locationName: 'ResourceId'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ResourceTagSets'\n        ],\n        members: {\n          ResourceTagSets: {\n            type: 'list',\n            member: {\n              shape: 'S85',\n              locationName: 'ResourceTagSet'\n            }\n          }\n        }\n      }\n    },\n    ListTrafficPolicies: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/trafficpolicies'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          TrafficPolicyIdMarker: {\n            location: 'querystring',\n            locationName: 'trafficpolicyid'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicySummaries',\n          'IsTruncated',\n          'TrafficPolicyIdMarker',\n          'MaxItems'\n        ],\n        members: {\n          TrafficPolicySummaries: {\n            type: 'list',\n            member: {\n              locationName: 'TrafficPolicySummary',\n              type: 'structure',\n              required: [\n                'Id',\n                'Name',\n                'Type',\n                'LatestVersion',\n                'TrafficPolicyCount'\n              ],\n              members: {\n                Id: {},\n                Name: {},\n                Type: {},\n                LatestVersion: {\n                  type: 'integer'\n                },\n                TrafficPolicyCount: {\n                  type: 'integer'\n                }\n              }\n            }\n          },\n          IsTruncated: {\n            type: 'boolean'\n          },\n          TrafficPolicyIdMarker: {},\n          MaxItems: {}\n        }\n      }\n    },\n    ListTrafficPolicyInstances: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/trafficpolicyinstances'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          HostedZoneIdMarker: {\n            location: 'querystring',\n            locationName: 'hostedzoneid'\n          },\n          TrafficPolicyInstanceNameMarker: {\n            location: 'querystring',\n            locationName: 'trafficpolicyinstancename'\n          },\n          TrafficPolicyInstanceTypeMarker: {\n            location: 'querystring',\n            locationName: 'trafficpolicyinstancetype'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyInstances',\n          'IsTruncated',\n          'MaxItems'\n        ],\n        members: {\n          TrafficPolicyInstances: {\n            shape: 'S8g'\n          },\n          HostedZoneIdMarker: {},\n          TrafficPolicyInstanceNameMarker: {},\n          TrafficPolicyInstanceTypeMarker: {},\n          IsTruncated: {\n            type: 'boolean'\n          },\n          MaxItems: {}\n        }\n      }\n    },\n    ListTrafficPolicyInstancesByHostedZone: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/trafficpolicyinstances/hostedzone'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HostedZoneId'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'querystring',\n            locationName: 'id'\n          },\n          TrafficPolicyInstanceNameMarker: {\n            location: 'querystring',\n            locationName: 'trafficpolicyinstancename'\n          },\n          TrafficPolicyInstanceTypeMarker: {\n            location: 'querystring',\n            locationName: 'trafficpolicyinstancetype'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyInstances',\n          'IsTruncated',\n          'MaxItems'\n        ],\n        members: {\n          TrafficPolicyInstances: {\n            shape: 'S8g'\n          },\n          TrafficPolicyInstanceNameMarker: {},\n          TrafficPolicyInstanceTypeMarker: {},\n          IsTruncated: {\n            type: 'boolean'\n          },\n          MaxItems: {}\n        }\n      }\n    },\n    ListTrafficPolicyInstancesByPolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/trafficpolicyinstances/trafficpolicy'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyId',\n          'TrafficPolicyVersion'\n        ],\n        members: {\n          TrafficPolicyId: {\n            location: 'querystring',\n            locationName: 'id'\n          },\n          TrafficPolicyVersion: {\n            location: 'querystring',\n            locationName: 'version',\n            type: 'integer'\n          },\n          HostedZoneIdMarker: {\n            location: 'querystring',\n            locationName: 'hostedzoneid'\n          },\n          TrafficPolicyInstanceNameMarker: {\n            location: 'querystring',\n            locationName: 'trafficpolicyinstancename'\n          },\n          TrafficPolicyInstanceTypeMarker: {\n            location: 'querystring',\n            locationName: 'trafficpolicyinstancetype'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyInstances',\n          'IsTruncated',\n          'MaxItems'\n        ],\n        members: {\n          TrafficPolicyInstances: {\n            shape: 'S8g'\n          },\n          HostedZoneIdMarker: {},\n          TrafficPolicyInstanceNameMarker: {},\n          TrafficPolicyInstanceTypeMarker: {},\n          IsTruncated: {\n            type: 'boolean'\n          },\n          MaxItems: {}\n        }\n      }\n    },\n    ListTrafficPolicyVersions: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/trafficpolicies/{Id}/versions'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          TrafficPolicyVersionMarker: {\n            location: 'querystring',\n            locationName: 'trafficpolicyversion'\n          },\n          MaxItems: {\n            location: 'querystring',\n            locationName: 'maxitems'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicies',\n          'IsTruncated',\n          'TrafficPolicyVersionMarker',\n          'MaxItems'\n        ],\n        members: {\n          TrafficPolicies: {\n            type: 'list',\n            member: {\n              shape: 'S42',\n              locationName: 'TrafficPolicy'\n            }\n          },\n          IsTruncated: {\n            type: 'boolean'\n          },\n          TrafficPolicyVersionMarker: {},\n          MaxItems: {}\n        }\n      }\n    },\n    ListVPCAssociationAuthorizations: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/hostedzone/{Id}/authorizevpcassociation'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HostedZoneId'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nexttoken'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxresults'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'VPCs'\n        ],\n        members: {\n          HostedZoneId: {},\n          NextToken: {},\n          VPCs: {\n            shape: 'S67'\n          }\n        }\n      }\n    },\n    TestDNSAnswer: {\n      http: {\n        method: 'GET',\n        requestUri: '/2013-04-01/testdnsanswer'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'HostedZoneId',\n          'RecordName',\n          'RecordType'\n        ],\n        members: {\n          HostedZoneId: {\n            location: 'querystring',\n            locationName: 'hostedzoneid'\n          },\n          RecordName: {\n            location: 'querystring',\n            locationName: 'recordname'\n          },\n          RecordType: {\n            location: 'querystring',\n            locationName: 'recordtype'\n          },\n          ResolverIP: {\n            location: 'querystring',\n            locationName: 'resolverip'\n          },\n          EDNS0ClientSubnetIP: {\n            location: 'querystring',\n            locationName: 'edns0clientsubnetip'\n          },\n          EDNS0ClientSubnetMask: {\n            location: 'querystring',\n            locationName: 'edns0clientsubnetmask'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Nameserver',\n          'RecordName',\n          'RecordType',\n          'RecordData',\n          'ResponseCode',\n          'Protocol'\n        ],\n        members: {\n          Nameserver: {},\n          RecordName: {},\n          RecordType: {},\n          RecordData: {\n            type: 'list',\n            member: {\n              locationName: 'RecordDataEntry'\n            }\n          },\n          ResponseCode: {},\n          Protocol: {}\n        }\n      }\n    },\n    UpdateHealthCheck: {\n      http: {\n        requestUri: '/2013-04-01/healthcheck/{HealthCheckId}'\n      },\n      input: {\n        locationName: 'UpdateHealthCheckRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'HealthCheckId'\n        ],\n        members: {\n          HealthCheckId: {\n            location: 'uri',\n            locationName: 'HealthCheckId'\n          },\n          HealthCheckVersion: {\n            type: 'long'\n          },\n          IPAddress: {},\n          Port: {\n            type: 'integer'\n          },\n          ResourcePath: {},\n          FullyQualifiedDomainName: {},\n          SearchString: {},\n          FailureThreshold: {\n            type: 'integer'\n          },\n          Inverted: {\n            type: 'boolean'\n          },\n          Disabled: {\n            type: 'boolean'\n          },\n          HealthThreshold: {\n            type: 'integer'\n          },\n          ChildHealthChecks: {\n            shape: 'S2k'\n          },\n          EnableSNI: {\n            type: 'boolean'\n          },\n          Regions: {\n            shape: 'S2m'\n          },\n          AlarmIdentifier: {\n            shape: 'S2o'\n          },\n          InsufficientDataHealthStatus: {},\n          ResetElements: {\n            type: 'list',\n            member: {\n              locationName: 'ResettableElementName'\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HealthCheck'\n        ],\n        members: {\n          HealthCheck: {\n            shape: 'S2u'\n          }\n        }\n      }\n    },\n    UpdateHostedZoneComment: {\n      http: {\n        requestUri: '/2013-04-01/hostedzone/{Id}'\n      },\n      input: {\n        locationName: 'UpdateHostedZoneCommentRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'Id'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          Comment: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'HostedZone'\n        ],\n        members: {\n          HostedZone: {\n            shape: 'S3e'\n          }\n        }\n      }\n    },\n    UpdateTrafficPolicyComment: {\n      http: {\n        requestUri: '/2013-04-01/trafficpolicy/{Id}/{Version}'\n      },\n      input: {\n        locationName: 'UpdateTrafficPolicyCommentRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'Id',\n          'Version',\n          'Comment'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          Version: {\n            location: 'uri',\n            locationName: 'Version',\n            type: 'integer'\n          },\n          Comment: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicy'\n        ],\n        members: {\n          TrafficPolicy: {\n            shape: 'S42'\n          }\n        }\n      }\n    },\n    UpdateTrafficPolicyInstance: {\n      http: {\n        requestUri: '/2013-04-01/trafficpolicyinstance/{Id}'\n      },\n      input: {\n        locationName: 'UpdateTrafficPolicyInstanceRequest',\n        xmlNamespace: {\n          uri: 'https://route53.amazonaws.com/doc/2013-04-01/'\n        },\n        type: 'structure',\n        required: [\n          'Id',\n          'TTL',\n          'TrafficPolicyId',\n          'TrafficPolicyVersion'\n        ],\n        members: {\n          Id: {\n            location: 'uri',\n            locationName: 'Id'\n          },\n          TTL: {\n            type: 'long'\n          },\n          TrafficPolicyId: {},\n          TrafficPolicyVersion: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'TrafficPolicyInstance'\n        ],\n        members: {\n          TrafficPolicyInstance: {\n            shape: 'S47'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'structure',\n      required: [\n        'Id',\n        'Status',\n        'SubmittedAt'\n      ],\n      members: {\n        Id: {},\n        Status: {},\n        SubmittedAt: {\n          type: 'timestamp'\n        },\n        Comment: {}\n      }\n    },\n    Sa: {\n      type: 'structure',\n      members: {\n        VPCRegion: {},\n        VPCId: {}\n      }\n    },\n    Sv: {\n      type: 'structure',\n      required: [\n        'Name',\n        'Type'\n      ],\n      members: {\n        Name: {},\n        Type: {},\n        SetIdentifier: {},\n        Weight: {\n          type: 'long'\n        },\n        Region: {},\n        GeoLocation: {\n          type: 'structure',\n          members: {\n            ContinentCode: {},\n            CountryCode: {},\n            SubdivisionCode: {}\n          }\n        },\n        Failover: {},\n        MultiValueAnswer: {\n          type: 'boolean'\n        },\n        TTL: {\n          type: 'long'\n        },\n        ResourceRecords: {\n          type: 'list',\n          member: {\n            locationName: 'ResourceRecord',\n            type: 'structure',\n            required: [\n              'Value'\n            ],\n            members: {\n              Value: {}\n            }\n          }\n        },\n        AliasTarget: {\n          type: 'structure',\n          required: [\n            'HostedZoneId',\n            'DNSName',\n            'EvaluateTargetHealth'\n          ],\n          members: {\n            HostedZoneId: {},\n            DNSName: {},\n            EvaluateTargetHealth: {\n              type: 'boolean'\n            }\n          }\n        },\n        HealthCheckId: {},\n        TrafficPolicyInstanceId: {},\n        CidrRoutingConfig: {\n          type: 'structure',\n          required: [\n            'CollectionId',\n            'LocationName'\n          ],\n          members: {\n            CollectionId: {},\n            LocationName: {}\n          }\n        },\n        GeoProximityLocation: {\n          type: 'structure',\n          members: {\n            AWSRegion: {},\n            LocalZoneGroup: {},\n            Coordinates: {\n              type: 'structure',\n              required: [\n                'Latitude',\n                'Longitude'\n              ],\n              members: {\n                Latitude: {},\n                Longitude: {}\n              }\n            },\n            Bias: {\n              type: 'integer'\n            }\n          }\n        }\n      }\n    },\n    S1s: {\n      type: 'list',\n      member: {\n        locationName: 'Tag',\n        type: 'structure',\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    S27: {\n      type: 'structure',\n      required: [\n        'Type'\n      ],\n      members: {\n        IPAddress: {},\n        Port: {\n          type: 'integer'\n        },\n        Type: {},\n        ResourcePath: {},\n        FullyQualifiedDomainName: {},\n        SearchString: {},\n        RequestInterval: {\n          type: 'integer'\n        },\n        FailureThreshold: {\n          type: 'integer'\n        },\n        MeasureLatency: {\n          type: 'boolean'\n        },\n        Inverted: {\n          type: 'boolean'\n        },\n        Disabled: {\n          type: 'boolean'\n        },\n        HealthThreshold: {\n          type: 'integer'\n        },\n        ChildHealthChecks: {\n          shape: 'S2k'\n        },\n        EnableSNI: {\n          type: 'boolean'\n        },\n        Regions: {\n          shape: 'S2m'\n        },\n        AlarmIdentifier: {\n          shape: 'S2o'\n        },\n        InsufficientDataHealthStatus: {},\n        RoutingControlArn: {}\n      }\n    },\n    S2k: {\n      type: 'list',\n      member: {\n        locationName: 'ChildHealthCheck'\n      }\n    },\n    S2m: {\n      type: 'list',\n      member: {\n        locationName: 'Region'\n      }\n    },\n    S2o: {\n      type: 'structure',\n      required: [\n        'Region',\n        'Name'\n      ],\n      members: {\n        Region: {},\n        Name: {}\n      }\n    },\n    S2u: {\n      type: 'structure',\n      required: [\n        'Id',\n        'CallerReference',\n        'HealthCheckConfig',\n        'HealthCheckVersion'\n      ],\n      members: {\n        Id: {},\n        CallerReference: {},\n        LinkedService: {\n          shape: 'S2v'\n        },\n        HealthCheckConfig: {\n          shape: 'S27'\n        },\n        HealthCheckVersion: {\n          type: 'long'\n        },\n        CloudWatchAlarmConfiguration: {\n          type: 'structure',\n          required: [\n            'EvaluationPeriods',\n            'Threshold',\n            'ComparisonOperator',\n            'Period',\n            'MetricName',\n            'Namespace',\n            'Statistic'\n          ],\n          members: {\n            EvaluationPeriods: {\n              type: 'integer'\n            },\n            Threshold: {\n              type: 'double'\n            },\n            ComparisonOperator: {},\n            Period: {\n              type: 'integer'\n            },\n            MetricName: {},\n            Namespace: {},\n            Statistic: {},\n            Dimensions: {\n              type: 'list',\n              member: {\n                locationName: 'Dimension',\n                type: 'structure',\n                required: [\n                  'Name',\n                  'Value'\n                ],\n                members: {\n                  Name: {},\n                  Value: {}\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S2v: {\n      type: 'structure',\n      members: {\n        ServicePrincipal: {},\n        Description: {}\n      }\n    },\n    S3b: {\n      type: 'structure',\n      members: {\n        Comment: {},\n        PrivateZone: {\n          type: 'boolean'\n        }\n      }\n    },\n    S3e: {\n      type: 'structure',\n      required: [\n        'Id',\n        'Name',\n        'CallerReference'\n      ],\n      members: {\n        Id: {},\n        Name: {},\n        CallerReference: {},\n        Config: {\n          shape: 'S3b'\n        },\n        ResourceRecordSetCount: {\n          type: 'long'\n        },\n        LinkedService: {\n          shape: 'S2v'\n        }\n      }\n    },\n    S3g: {\n      type: 'structure',\n      required: [\n        'NameServers'\n      ],\n      members: {\n        Id: {},\n        CallerReference: {},\n        NameServers: {\n          type: 'list',\n          member: {\n            locationName: 'NameServer'\n          }\n        }\n      }\n    },\n    S3m: {\n      type: 'structure',\n      members: {\n        Name: {},\n        KmsArn: {},\n        Flag: {\n          type: 'integer'\n        },\n        SigningAlgorithmMnemonic: {},\n        SigningAlgorithmType: {\n          type: 'integer'\n        },\n        DigestAlgorithmMnemonic: {},\n        DigestAlgorithmType: {\n          type: 'integer'\n        },\n        KeyTag: {\n          type: 'integer'\n        },\n        DigestValue: {},\n        PublicKey: {},\n        DSRecord: {},\n        DNSKEYRecord: {},\n        Status: {},\n        StatusMessage: {},\n        CreatedDate: {\n          type: 'timestamp'\n        },\n        LastModifiedDate: {\n          type: 'timestamp'\n        }\n      }\n    },\n    S3t: {\n      type: 'structure',\n      required: [\n        'Id',\n        'HostedZoneId',\n        'CloudWatchLogsLogGroupArn'\n      ],\n      members: {\n        Id: {},\n        HostedZoneId: {},\n        CloudWatchLogsLogGroupArn: {}\n      }\n    },\n    S42: {\n      type: 'structure',\n      required: [\n        'Id',\n        'Version',\n        'Name',\n        'Type',\n        'Document'\n      ],\n      members: {\n        Id: {},\n        Version: {\n          type: 'integer'\n        },\n        Name: {},\n        Type: {},\n        Document: {},\n        Comment: {}\n      }\n    },\n    S47: {\n      type: 'structure',\n      required: [\n        'Id',\n        'HostedZoneId',\n        'Name',\n        'TTL',\n        'State',\n        'Message',\n        'TrafficPolicyId',\n        'TrafficPolicyVersion',\n        'TrafficPolicyType'\n      ],\n      members: {\n        Id: {},\n        HostedZoneId: {},\n        Name: {},\n        TTL: {\n          type: 'long'\n        },\n        State: {},\n        Message: {},\n        TrafficPolicyId: {},\n        TrafficPolicyVersion: {\n          type: 'integer'\n        },\n        TrafficPolicyType: {}\n      }\n    },\n    S5o: {\n      type: 'structure',\n      members: {\n        ContinentCode: {},\n        ContinentName: {},\n        CountryCode: {},\n        CountryName: {},\n        SubdivisionCode: {},\n        SubdivisionName: {}\n      }\n    },\n    S5z: {\n      type: 'list',\n      member: {\n        locationName: 'HealthCheckObservation',\n        type: 'structure',\n        members: {\n          Region: {},\n          IPAddress: {},\n          StatusReport: {\n            type: 'structure',\n            members: {\n              Status: {},\n              CheckedTime: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    S67: {\n      type: 'list',\n      member: {\n        shape: 'Sa',\n        locationName: 'VPC'\n      }\n    },\n    S7k: {\n      type: 'list',\n      member: {\n        shape: 'S3e',\n        locationName: 'HostedZone'\n      }\n    },\n    S85: {\n      type: 'structure',\n      members: {\n        ResourceType: {},\n        ResourceId: {},\n        Tags: {\n          shape: 'S1s'\n        }\n      }\n    },\n    S8g: {\n      type: 'list',\n      member: {\n        shape: 'S47',\n        locationName: 'TrafficPolicyInstance'\n      }\n    }\n  }\n}"]}