{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/keyspaces-2022-02-10.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","CreateKeyspace","input","type","required","members","keyspaceName","tags","shape","replicationSpecification","replicationStrategy","regionList","output","resourceArn","CreateTable","tableName","schemaDefinition","comment","capacitySpecification","encryptionSpecification","pointInTimeRecovery","ttl","defaultTimeToLive","clientSideTimestamps","autoScalingSpecification","replicaSpecifications","DeleteKeyspace","DeleteTable","GetKeyspace","replicationRegions","GetTable","creationTimestamp","status","earliestRestorableTimestamp","member","region","GetTableAutoScalingSettings","ListKeyspaces","nextToken","maxResults","keyspaces","ListTables","tables","ListTagsForResource","RestoreTable","sourceKeyspaceName","sourceTableName","targetKeyspaceName","targetTableName","restoreTimestamp","capacitySpecificationOverride","encryptionSpecificationOverride","pointInTimeRecoveryOverride","tagsOverride","restoredTableARN","TagResource","UntagResource","UpdateTable","addColumns","shapes","S3","key","value","S9","Sf","allColumns","partitionKeys","name","clusteringKeys","orderBy","staticColumns","Sg","Sq","message","Ss","throughputMode","readCapacityUnits","writeCapacityUnits","Sv","kmsKeyIdentifier","Sy","S10","S13","S15","writeCapacityAutoScaling","readCapacityAutoScaling","S16","autoScalingDisabled","minimumUnits","maximumUnits","scalingPolicy","targetTrackingScalingPolicyConfiguration","disableScaleIn","scaleInCooldown","scaleOutCooldown","targetValue","S1c","S1p","lastUpdateToPayPerRequestTimestamp"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2022-02-10',\n    endpointPrefix: 'cassandra',\n    jsonVersion: '1.0',\n    protocol: 'json',\n    serviceFullName: 'Amazon Keyspaces',\n    serviceId: 'Keyspaces',\n    signatureVersion: 'v4',\n    signingName: 'cassandra',\n    targetPrefix: 'KeyspacesService',\n    uid: 'keyspaces-2022-02-10'\n  },\n  operations: {\n    CreateKeyspace: {\n      input: {\n        type: 'structure',\n        required: [\n          'keyspaceName'\n        ],\n        members: {\n          keyspaceName: {},\n          tags: {\n            shape: 'S3'\n          },\n          replicationSpecification: {\n            type: 'structure',\n            required: [\n              'replicationStrategy'\n            ],\n            members: {\n              replicationStrategy: {},\n              regionList: {\n                shape: 'S9'\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {}\n        }\n      }\n    },\n    CreateTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'keyspaceName',\n          'tableName',\n          'schemaDefinition'\n        ],\n        members: {\n          keyspaceName: {},\n          tableName: {},\n          schemaDefinition: {\n            shape: 'Sf'\n          },\n          comment: {\n            shape: 'Sq'\n          },\n          capacitySpecification: {\n            shape: 'Ss'\n          },\n          encryptionSpecification: {\n            shape: 'Sv'\n          },\n          pointInTimeRecovery: {\n            shape: 'Sy'\n          },\n          ttl: {\n            shape: 'S10'\n          },\n          defaultTimeToLive: {\n            type: 'integer'\n          },\n          tags: {\n            shape: 'S3'\n          },\n          clientSideTimestamps: {\n            shape: 'S13'\n          },\n          autoScalingSpecification: {\n            shape: 'S15'\n          },\n          replicaSpecifications: {\n            shape: 'S1c'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {}\n        }\n      }\n    },\n    DeleteKeyspace: {\n      input: {\n        type: 'structure',\n        required: [\n          'keyspaceName'\n        ],\n        members: {\n          keyspaceName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'keyspaceName',\n          'tableName'\n        ],\n        members: {\n          keyspaceName: {},\n          tableName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    GetKeyspace: {\n      input: {\n        type: 'structure',\n        required: [\n          'keyspaceName'\n        ],\n        members: {\n          keyspaceName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'keyspaceName',\n          'resourceArn',\n          'replicationStrategy'\n        ],\n        members: {\n          keyspaceName: {},\n          resourceArn: {},\n          replicationStrategy: {},\n          replicationRegions: {\n            shape: 'S9'\n          }\n        }\n      }\n    },\n    GetTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'keyspaceName',\n          'tableName'\n        ],\n        members: {\n          keyspaceName: {},\n          tableName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'keyspaceName',\n          'tableName',\n          'resourceArn'\n        ],\n        members: {\n          keyspaceName: {},\n          tableName: {},\n          resourceArn: {},\n          creationTimestamp: {\n            type: 'timestamp'\n          },\n          status: {},\n          schemaDefinition: {\n            shape: 'Sf'\n          },\n          capacitySpecification: {\n            shape: 'S1p'\n          },\n          encryptionSpecification: {\n            shape: 'Sv'\n          },\n          pointInTimeRecovery: {\n            type: 'structure',\n            required: [\n              'status'\n            ],\n            members: {\n              status: {},\n              earliestRestorableTimestamp: {\n                type: 'timestamp'\n              }\n            }\n          },\n          ttl: {\n            shape: 'S10'\n          },\n          defaultTimeToLive: {\n            type: 'integer'\n          },\n          comment: {\n            shape: 'Sq'\n          },\n          clientSideTimestamps: {\n            shape: 'S13'\n          },\n          replicaSpecifications: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                region: {},\n                status: {},\n                capacitySpecification: {\n                  shape: 'S1p'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    GetTableAutoScalingSettings: {\n      input: {\n        type: 'structure',\n        required: [\n          'keyspaceName',\n          'tableName'\n        ],\n        members: {\n          keyspaceName: {},\n          tableName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'keyspaceName',\n          'tableName',\n          'resourceArn'\n        ],\n        members: {\n          keyspaceName: {},\n          tableName: {},\n          resourceArn: {},\n          autoScalingSpecification: {\n            shape: 'S15'\n          },\n          replicaSpecifications: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                region: {},\n                autoScalingSpecification: {\n                  shape: 'S15'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListKeyspaces: {\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'keyspaces'\n        ],\n        members: {\n          nextToken: {},\n          keyspaces: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'keyspaceName',\n                'resourceArn',\n                'replicationStrategy'\n              ],\n              members: {\n                keyspaceName: {},\n                resourceArn: {},\n                replicationStrategy: {},\n                replicationRegions: {\n                  shape: 'S9'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTables: {\n      input: {\n        type: 'structure',\n        required: [\n          'keyspaceName'\n        ],\n        members: {\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          },\n          keyspaceName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          tables: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'keyspaceName',\n                'tableName',\n                'resourceArn'\n              ],\n              members: {\n                keyspaceName: {},\n                tableName: {},\n                resourceArn: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          tags: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    RestoreTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'sourceKeyspaceName',\n          'sourceTableName',\n          'targetKeyspaceName',\n          'targetTableName'\n        ],\n        members: {\n          sourceKeyspaceName: {},\n          sourceTableName: {},\n          targetKeyspaceName: {},\n          targetTableName: {},\n          restoreTimestamp: {\n            type: 'timestamp'\n          },\n          capacitySpecificationOverride: {\n            shape: 'Ss'\n          },\n          encryptionSpecificationOverride: {\n            shape: 'Sv'\n          },\n          pointInTimeRecoveryOverride: {\n            shape: 'Sy'\n          },\n          tagsOverride: {\n            shape: 'S3'\n          },\n          autoScalingSpecification: {\n            shape: 'S15'\n          },\n          replicaSpecifications: {\n            shape: 'S1c'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'restoredTableARN'\n        ],\n        members: {\n          restoredTableARN: {}\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {},\n          tags: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {},\n          tags: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateTable: {\n      input: {\n        type: 'structure',\n        required: [\n          'keyspaceName',\n          'tableName'\n        ],\n        members: {\n          keyspaceName: {},\n          tableName: {},\n          addColumns: {\n            shape: 'Sg'\n          },\n          capacitySpecification: {\n            shape: 'Ss'\n          },\n          encryptionSpecification: {\n            shape: 'Sv'\n          },\n          pointInTimeRecovery: {\n            shape: 'Sy'\n          },\n          ttl: {\n            shape: 'S10'\n          },\n          defaultTimeToLive: {\n            type: 'integer'\n          },\n          clientSideTimestamps: {\n            shape: 'S13'\n          },\n          autoScalingSpecification: {\n            shape: 'S15'\n          },\n          replicaSpecifications: {\n            shape: 'S1c'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'key',\n          'value'\n        ],\n        members: {\n          key: {},\n          value: {}\n        }\n      }\n    },\n    S9: {\n      type: 'list',\n      member: {}\n    },\n    Sf: {\n      type: 'structure',\n      required: [\n        'allColumns',\n        'partitionKeys'\n      ],\n      members: {\n        allColumns: {\n          shape: 'Sg'\n        },\n        partitionKeys: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'name'\n            ],\n            members: {\n              name: {}\n            }\n          }\n        },\n        clusteringKeys: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'name',\n              'orderBy'\n            ],\n            members: {\n              name: {},\n              orderBy: {}\n            }\n          }\n        },\n        staticColumns: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'name'\n            ],\n            members: {\n              name: {}\n            }\n          }\n        }\n      }\n    },\n    Sg: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name',\n          'type'\n        ],\n        members: {\n          name: {},\n          type: {}\n        }\n      }\n    },\n    Sq: {\n      type: 'structure',\n      required: [\n        'message'\n      ],\n      members: {\n        message: {}\n      }\n    },\n    Ss: {\n      type: 'structure',\n      required: [\n        'throughputMode'\n      ],\n      members: {\n        throughputMode: {},\n        readCapacityUnits: {\n          type: 'long'\n        },\n        writeCapacityUnits: {\n          type: 'long'\n        }\n      }\n    },\n    Sv: {\n      type: 'structure',\n      required: [\n        'type'\n      ],\n      members: {\n        type: {},\n        kmsKeyIdentifier: {}\n      }\n    },\n    Sy: {\n      type: 'structure',\n      required: [\n        'status'\n      ],\n      members: {\n        status: {}\n      }\n    },\n    S10: {\n      type: 'structure',\n      required: [\n        'status'\n      ],\n      members: {\n        status: {}\n      }\n    },\n    S13: {\n      type: 'structure',\n      required: [\n        'status'\n      ],\n      members: {\n        status: {}\n      }\n    },\n    S15: {\n      type: 'structure',\n      members: {\n        writeCapacityAutoScaling: {\n          shape: 'S16'\n        },\n        readCapacityAutoScaling: {\n          shape: 'S16'\n        }\n      }\n    },\n    S16: {\n      type: 'structure',\n      members: {\n        autoScalingDisabled: {\n          type: 'boolean'\n        },\n        minimumUnits: {\n          type: 'long'\n        },\n        maximumUnits: {\n          type: 'long'\n        },\n        scalingPolicy: {\n          type: 'structure',\n          members: {\n            targetTrackingScalingPolicyConfiguration: {\n              type: 'structure',\n              required: [\n                'targetValue'\n              ],\n              members: {\n                disableScaleIn: {\n                  type: 'boolean'\n                },\n                scaleInCooldown: {\n                  type: 'integer'\n                },\n                scaleOutCooldown: {\n                  type: 'integer'\n                },\n                targetValue: {\n                  type: 'double'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S1c: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'region'\n        ],\n        members: {\n          region: {},\n          readCapacityUnits: {\n            type: 'long'\n          },\n          readCapacityAutoScaling: {\n            shape: 'S16'\n          }\n        }\n      }\n    },\n    S1p: {\n      type: 'structure',\n      required: [\n        'throughputMode'\n      ],\n      members: {\n        throughputMode: {},\n        readCapacityUnits: {\n          type: 'long'\n        },\n        writeCapacityUnits: {\n          type: 'long'\n        },\n        lastUpdateToPayPerRequestTimestamp: {\n          type: 'timestamp'\n        }\n      }\n    }\n  }\n}"]}