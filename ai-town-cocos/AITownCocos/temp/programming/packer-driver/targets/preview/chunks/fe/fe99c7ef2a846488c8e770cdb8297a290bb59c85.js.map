{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/node_modules/lodash-es/isEmpty.js"],"names":["isEmpty","value","isArrayLike","isArray","splice","isBuffer","isTypedArray","isArguments","length","tag","getTag","mapTag","setTag","size","isPrototype","baseKeys","key","hasOwnProperty","call","objectProto","Object","prototype"],"mappings":";;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AACD,QAAIC,WAAW,CAACD,KAAD,CAAX,KACCE,OAAO,CAACF,KAAD,CAAP,IAAkB,OAAOA,KAAP,IAAgB,QAAlC,IAA8C,OAAOA,KAAK,CAACG,MAAb,IAAuB,UAArE,IACCC,QAAQ,CAACJ,KAAD,CADT,IACoBK,YAAY,CAACL,KAAD,CADhC,IAC2CM,WAAW,CAACN,KAAD,CAFvD,CAAJ,EAEqE;AACnE,aAAO,CAACA,KAAK,CAACO,MAAd;AACD;;AACD,QAAIC,GAAG,GAAGC,MAAM,CAACT,KAAD,CAAhB;;AACA,QAAIQ,GAAG,IAAIE,MAAP,IAAiBF,GAAG,IAAIG,MAA5B,EAAoC;AAClC,aAAO,CAACX,KAAK,CAACY,IAAd;AACD;;AACD,QAAIC,WAAW,CAACb,KAAD,CAAf,EAAwB;AACtB,aAAO,CAACc,QAAQ,CAACd,KAAD,CAAR,CAAgBO,MAAxB;AACD;;AACD,SAAK,IAAIQ,GAAT,IAAgBf,KAAhB,EAAuB;AACrB,UAAIgB,cAAc,CAACC,IAAf,CAAoBjB,KAApB,EAA2Be,GAA3B,CAAJ,EAAqC;AACnC,eAAO,KAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD;;;;AA1EMD,MAAAA,Q;;AACAL,MAAAA,M;;AACAH,MAAAA,W;;AACAJ,MAAAA,O;;AACAD,MAAAA,W;;AACAG,MAAAA,Q;;AACAS,MAAAA,W;;AACAR,MAAAA,Y;;;AAEP;AACIK,MAAAA,M,GAAS,c;AACTC,MAAAA,M,GAAS,c;AAEb;;AACIO,MAAAA,W,GAAcC,MAAM,CAACC,S;AAEzB;;AACIJ,MAAAA,c,GAAiBE,WAAW,CAACF,c;;yBA2DlBjB,O","sourcesContent":["import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n"]}