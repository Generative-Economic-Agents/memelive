{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/greengrassv2-2020-11-30.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","protocol","protocols","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","uid","operations","AssociateServiceRoleToAccount","http","method","requestUri","responseCode","input","type","required","members","roleArn","locationName","output","associatedAt","BatchAssociateClientDeviceWithCoreDevice","entries","member","thingName","coreDeviceThingName","location","errorEntries","code","message","BatchDisassociateClientDeviceFromCoreDevice","CancelDeployment","deploymentId","CreateComponentVersion","inlineRecipe","lambdaFunction","lambdaArn","componentName","componentVersion","componentPlatforms","shape","componentDependencies","key","value","versionRequirement","dependencyType","componentLambdaParameters","eventSources","topic","maxQueueSize","maxInstancesCount","maxIdleTimeInSeconds","timeoutInSeconds","statusTimeoutInSeconds","pinned","inputPayloadEncodingType","execArgs","environmentVariables","linuxProcessParams","isolationMode","containerParams","memorySizeInKB","mountROSysfs","volumes","sourcePath","destinationPath","permission","addGroupOwner","devices","path","tags","clientToken","idempotencyToken","arn","creationTimestamp","status","CreateDeployment","targetArn","deploymentName","components","iotJobConfiguration","deploymentPolicies","parentTargetArn","iotJobId","iotJobArn","DeleteComponent","DeleteCoreDevice","DeleteDeployment","DescribeComponent","publisher","description","platforms","DisassociateServiceRoleFromAccount","disassociatedAt","GetComponent","recipeOutputFormat","recipe","GetComponentVersionArtifact","artifactName","s3EndpointType","iotEndpointType","preSignedUrl","GetConnectivityInfo","connectivityInfo","GetCoreDevice","coreVersion","platform","architecture","lastStatusUpdateTimestamp","GetDeployment","revisionId","deploymentStatus","isLatestForTarget","GetServiceRoleForAccount","ListClientDevicesAssociatedWithCoreDevice","maxResults","nextToken","associatedClientDevices","associationTimestamp","ListComponentVersions","componentVersions","ListComponents","scope","latestVersion","ListCoreDevices","thingGroupArn","coreDevices","ListDeployments","historyFilter","deployments","ListEffectiveDeployments","effectiveDeployments","coreDeviceExecutionStatus","reason","modifiedTimestamp","statusDetails","errorStack","errorTypes","ListInstalledComponents","topologyFilter","installedComponents","lifecycleState","lifecycleStateDetails","isRoot","lastStatusChangeTimestamp","lastReportedTimestamp","lastInstallationSource","lifecycleStatusCodes","ListTagsForResource","resourceArn","ResolveComponentCandidates","componentCandidates","versionRequirements","resolvedComponentVersions","vendorGuidance","TagResource","UntagResource","tagKeys","UpdateConnectivityInfo","shapes","Sp","Sq","name","attributes","S1f","S1m","componentState","errors","vendorGuidanceMessage","S1t","configurationUpdate","merge","reset","runWith","posixUser","systemResourceLimits","memory","cpus","windowsUser","S23","jobExecutionsRolloutConfig","exponentialRate","baseRatePerMinute","incrementFactor","rateIncreaseCriteria","numberOfNotifiedThings","numberOfSucceededThings","maximumPerMinute","abortConfig","criteriaList","failureType","action","thresholdPercentage","minNumberOfExecutedThings","timeoutConfig","inProgressTimeoutInMinutes","S2k","failureHandlingPolicy","componentUpdatePolicy","configurationValidationPolicy","S3b","id","hostAddress","portNumber"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-11-30',\n    endpointPrefix: 'greengrass',\n    protocol: 'rest-json',\n    protocols: [\n      'rest-json'\n    ],\n    serviceAbbreviation: 'AWS GreengrassV2',\n    serviceFullName: 'AWS IoT Greengrass V2',\n    serviceId: 'GreengrassV2',\n    signatureVersion: 'v4',\n    uid: 'greengrassv2-2020-11-30'\n  },\n  operations: {\n    AssociateServiceRoleToAccount: {\n      http: {\n        method: 'PUT',\n        requestUri: '/greengrass/servicerole',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'roleArn'\n        ],\n        members: {\n          roleArn: {\n            locationName: 'RoleArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          associatedAt: {\n            locationName: 'AssociatedAt'\n          }\n        }\n      }\n    },\n    BatchAssociateClientDeviceWithCoreDevice: {\n      http: {\n        requestUri: '/greengrass/v2/coreDevices/{coreDeviceThingName}/associateClientDevices',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'coreDeviceThingName'\n        ],\n        members: {\n          entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'thingName'\n              ],\n              members: {\n                thingName: {}\n              }\n            }\n          },\n          coreDeviceThingName: {\n            location: 'uri',\n            locationName: 'coreDeviceThingName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          errorEntries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                thingName: {},\n                code: {},\n                message: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    BatchDisassociateClientDeviceFromCoreDevice: {\n      http: {\n        requestUri: '/greengrass/v2/coreDevices/{coreDeviceThingName}/disassociateClientDevices',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'coreDeviceThingName'\n        ],\n        members: {\n          entries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'thingName'\n              ],\n              members: {\n                thingName: {}\n              }\n            }\n          },\n          coreDeviceThingName: {\n            location: 'uri',\n            locationName: 'coreDeviceThingName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          errorEntries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                thingName: {},\n                code: {},\n                message: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    CancelDeployment: {\n      http: {\n        requestUri: '/greengrass/v2/deployments/{deploymentId}/cancel'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'deploymentId'\n        ],\n        members: {\n          deploymentId: {\n            location: 'uri',\n            locationName: 'deploymentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          message: {}\n        }\n      }\n    },\n    CreateComponentVersion: {\n      http: {\n        requestUri: '/greengrass/v2/createComponentVersion',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        members: {\n          inlineRecipe: {\n            type: 'blob'\n          },\n          lambdaFunction: {\n            type: 'structure',\n            required: [\n              'lambdaArn'\n            ],\n            members: {\n              lambdaArn: {},\n              componentName: {},\n              componentVersion: {},\n              componentPlatforms: {\n                shape: 'Sp'\n              },\n              componentDependencies: {\n                type: 'map',\n                key: {},\n                value: {\n                  type: 'structure',\n                  members: {\n                    versionRequirement: {},\n                    dependencyType: {}\n                  }\n                }\n              },\n              componentLambdaParameters: {\n                type: 'structure',\n                members: {\n                  eventSources: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      required: [\n                        'topic',\n                        'type'\n                      ],\n                      members: {\n                        topic: {},\n                        type: {}\n                      }\n                    }\n                  },\n                  maxQueueSize: {\n                    type: 'integer'\n                  },\n                  maxInstancesCount: {\n                    type: 'integer'\n                  },\n                  maxIdleTimeInSeconds: {\n                    type: 'integer'\n                  },\n                  timeoutInSeconds: {\n                    type: 'integer'\n                  },\n                  statusTimeoutInSeconds: {\n                    type: 'integer'\n                  },\n                  pinned: {\n                    type: 'boolean'\n                  },\n                  inputPayloadEncodingType: {},\n                  execArgs: {\n                    type: 'list',\n                    member: {}\n                  },\n                  environmentVariables: {\n                    type: 'map',\n                    key: {},\n                    value: {}\n                  },\n                  linuxProcessParams: {\n                    type: 'structure',\n                    members: {\n                      isolationMode: {},\n                      containerParams: {\n                        type: 'structure',\n                        members: {\n                          memorySizeInKB: {\n                            type: 'integer'\n                          },\n                          mountROSysfs: {\n                            type: 'boolean'\n                          },\n                          volumes: {\n                            type: 'list',\n                            member: {\n                              type: 'structure',\n                              required: [\n                                'sourcePath',\n                                'destinationPath'\n                              ],\n                              members: {\n                                sourcePath: {},\n                                destinationPath: {},\n                                permission: {},\n                                addGroupOwner: {\n                                  type: 'boolean'\n                                }\n                              }\n                            }\n                          },\n                          devices: {\n                            type: 'list',\n                            member: {\n                              type: 'structure',\n                              required: [\n                                'path'\n                              ],\n                              members: {\n                                path: {},\n                                permission: {},\n                                addGroupOwner: {\n                                  type: 'boolean'\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          tags: {\n            shape: 'S1f'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'componentName',\n          'componentVersion',\n          'creationTimestamp',\n          'status'\n        ],\n        members: {\n          arn: {},\n          componentName: {},\n          componentVersion: {},\n          creationTimestamp: {\n            type: 'timestamp'\n          },\n          status: {\n            shape: 'S1m'\n          }\n        }\n      }\n    },\n    CreateDeployment: {\n      http: {\n        requestUri: '/greengrass/v2/deployments',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'targetArn'\n        ],\n        members: {\n          targetArn: {},\n          deploymentName: {},\n          components: {\n            shape: 'S1t'\n          },\n          iotJobConfiguration: {\n            shape: 'S23'\n          },\n          deploymentPolicies: {\n            shape: 'S2k'\n          },\n          parentTargetArn: {},\n          tags: {\n            shape: 'S1f'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          deploymentId: {},\n          iotJobId: {},\n          iotJobArn: {}\n        }\n      }\n    },\n    DeleteComponent: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/greengrass/v2/components/{arn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn'\n        ],\n        members: {\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          }\n        }\n      }\n    },\n    DeleteCoreDevice: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/greengrass/v2/coreDevices/{coreDeviceThingName}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'coreDeviceThingName'\n        ],\n        members: {\n          coreDeviceThingName: {\n            location: 'uri',\n            locationName: 'coreDeviceThingName'\n          }\n        }\n      }\n    },\n    DeleteDeployment: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/greengrass/v2/deployments/{deploymentId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'deploymentId'\n        ],\n        members: {\n          deploymentId: {\n            location: 'uri',\n            locationName: 'deploymentId'\n          }\n        }\n      }\n    },\n    DescribeComponent: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/components/{arn}/metadata'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn'\n        ],\n        members: {\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          arn: {},\n          componentName: {},\n          componentVersion: {},\n          creationTimestamp: {\n            type: 'timestamp'\n          },\n          publisher: {},\n          description: {},\n          status: {\n            shape: 'S1m'\n          },\n          platforms: {\n            shape: 'Sp'\n          },\n          tags: {\n            shape: 'S1f'\n          }\n        }\n      }\n    },\n    DisassociateServiceRoleFromAccount: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/greengrass/servicerole',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          disassociatedAt: {\n            locationName: 'DisassociatedAt'\n          }\n        }\n      }\n    },\n    GetComponent: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/components/{arn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn'\n        ],\n        members: {\n          recipeOutputFormat: {\n            location: 'querystring',\n            locationName: 'recipeOutputFormat'\n          },\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'recipeOutputFormat',\n          'recipe'\n        ],\n        members: {\n          recipeOutputFormat: {},\n          recipe: {\n            type: 'blob'\n          },\n          tags: {\n            shape: 'S1f'\n          }\n        }\n      }\n    },\n    GetComponentVersionArtifact: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/components/{arn}/artifacts/{artifactName+}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn',\n          'artifactName'\n        ],\n        members: {\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          },\n          artifactName: {\n            location: 'uri',\n            locationName: 'artifactName'\n          },\n          s3EndpointType: {\n            location: 'querystring',\n            locationName: 's3EndpointType'\n          },\n          iotEndpointType: {\n            location: 'header',\n            locationName: 'x-amz-iot-endpoint-type'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'preSignedUrl'\n        ],\n        members: {\n          preSignedUrl: {}\n        }\n      }\n    },\n    GetConnectivityInfo: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/things/{thingName}/connectivityInfo',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'thingName'\n        ],\n        members: {\n          thingName: {\n            location: 'uri',\n            locationName: 'thingName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          connectivityInfo: {\n            shape: 'S3b',\n            locationName: 'ConnectivityInfo'\n          },\n          message: {\n            locationName: 'Message'\n          }\n        }\n      }\n    },\n    GetCoreDevice: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/coreDevices/{coreDeviceThingName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'coreDeviceThingName'\n        ],\n        members: {\n          coreDeviceThingName: {\n            location: 'uri',\n            locationName: 'coreDeviceThingName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          coreDeviceThingName: {},\n          coreVersion: {},\n          platform: {},\n          architecture: {},\n          status: {},\n          lastStatusUpdateTimestamp: {\n            type: 'timestamp'\n          },\n          tags: {\n            shape: 'S1f'\n          }\n        }\n      }\n    },\n    GetDeployment: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/deployments/{deploymentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'deploymentId'\n        ],\n        members: {\n          deploymentId: {\n            location: 'uri',\n            locationName: 'deploymentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          targetArn: {},\n          revisionId: {},\n          deploymentId: {},\n          deploymentName: {},\n          deploymentStatus: {},\n          iotJobId: {},\n          iotJobArn: {},\n          components: {\n            shape: 'S1t'\n          },\n          deploymentPolicies: {\n            shape: 'S2k'\n          },\n          iotJobConfiguration: {\n            shape: 'S23'\n          },\n          creationTimestamp: {\n            type: 'timestamp'\n          },\n          isLatestForTarget: {\n            type: 'boolean'\n          },\n          parentTargetArn: {},\n          tags: {\n            shape: 'S1f'\n          }\n        }\n      }\n    },\n    GetServiceRoleForAccount: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/servicerole',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          associatedAt: {\n            locationName: 'AssociatedAt'\n          },\n          roleArn: {\n            locationName: 'RoleArn'\n          }\n        }\n      }\n    },\n    ListClientDevicesAssociatedWithCoreDevice: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/coreDevices/{coreDeviceThingName}/associatedClientDevices',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'coreDeviceThingName'\n        ],\n        members: {\n          coreDeviceThingName: {\n            location: 'uri',\n            locationName: 'coreDeviceThingName'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          associatedClientDevices: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                thingName: {},\n                associationTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListComponentVersions: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/components/{arn}/versions'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'arn'\n        ],\n        members: {\n          arn: {\n            location: 'uri',\n            locationName: 'arn'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          componentVersions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                componentName: {},\n                componentVersion: {},\n                arn: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListComponents: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/components'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          scope: {\n            location: 'querystring',\n            locationName: 'scope'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          components: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                componentName: {},\n                latestVersion: {\n                  type: 'structure',\n                  members: {\n                    arn: {},\n                    componentVersion: {},\n                    creationTimestamp: {\n                      type: 'timestamp'\n                    },\n                    description: {},\n                    publisher: {},\n                    platforms: {\n                      shape: 'Sp'\n                    }\n                  }\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListCoreDevices: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/coreDevices'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          thingGroupArn: {\n            location: 'querystring',\n            locationName: 'thingGroupArn'\n          },\n          status: {\n            location: 'querystring',\n            locationName: 'status'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          coreDevices: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                coreDeviceThingName: {},\n                status: {},\n                lastStatusUpdateTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDeployments: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/deployments'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          targetArn: {\n            location: 'querystring',\n            locationName: 'targetArn'\n          },\n          historyFilter: {\n            location: 'querystring',\n            locationName: 'historyFilter'\n          },\n          parentTargetArn: {\n            location: 'querystring',\n            locationName: 'parentTargetArn'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          deployments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                targetArn: {},\n                revisionId: {},\n                deploymentId: {},\n                deploymentName: {},\n                creationTimestamp: {\n                  type: 'timestamp'\n                },\n                deploymentStatus: {},\n                isLatestForTarget: {\n                  type: 'boolean'\n                },\n                parentTargetArn: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListEffectiveDeployments: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/coreDevices/{coreDeviceThingName}/effectiveDeployments'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'coreDeviceThingName'\n        ],\n        members: {\n          coreDeviceThingName: {\n            location: 'uri',\n            locationName: 'coreDeviceThingName'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          effectiveDeployments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'deploymentId',\n                'deploymentName',\n                'targetArn',\n                'coreDeviceExecutionStatus',\n                'creationTimestamp',\n                'modifiedTimestamp'\n              ],\n              members: {\n                deploymentId: {},\n                deploymentName: {},\n                iotJobId: {},\n                iotJobArn: {},\n                description: {},\n                targetArn: {},\n                coreDeviceExecutionStatus: {},\n                reason: {},\n                creationTimestamp: {\n                  type: 'timestamp'\n                },\n                modifiedTimestamp: {\n                  type: 'timestamp'\n                },\n                statusDetails: {\n                  type: 'structure',\n                  members: {\n                    errorStack: {\n                      type: 'list',\n                      member: {}\n                    },\n                    errorTypes: {\n                      type: 'list',\n                      member: {}\n                    }\n                  }\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListInstalledComponents: {\n      http: {\n        method: 'GET',\n        requestUri: '/greengrass/v2/coreDevices/{coreDeviceThingName}/installedComponents'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'coreDeviceThingName'\n        ],\n        members: {\n          coreDeviceThingName: {\n            location: 'uri',\n            locationName: 'coreDeviceThingName'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          topologyFilter: {\n            location: 'querystring',\n            locationName: 'topologyFilter'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          installedComponents: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                componentName: {},\n                componentVersion: {},\n                lifecycleState: {},\n                lifecycleStateDetails: {},\n                isRoot: {\n                  type: 'boolean'\n                },\n                lastStatusChangeTimestamp: {\n                  type: 'timestamp'\n                },\n                lastReportedTimestamp: {\n                  type: 'timestamp'\n                },\n                lastInstallationSource: {},\n                lifecycleStatusCodes: {\n                  type: 'list',\n                  member: {}\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S1f'\n          }\n        }\n      }\n    },\n    ResolveComponentCandidates: {\n      http: {\n        requestUri: '/greengrass/v2/resolveComponentCandidates'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          platform: {\n            shape: 'Sq'\n          },\n          componentCandidates: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                componentName: {},\n                componentVersion: {},\n                versionRequirements: {\n                  type: 'map',\n                  key: {},\n                  value: {}\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          resolvedComponentVersions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                arn: {},\n                componentName: {},\n                componentVersion: {},\n                recipe: {\n                  type: 'blob'\n                },\n                vendorGuidance: {},\n                message: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S1f'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateConnectivityInfo: {\n      http: {\n        method: 'PUT',\n        requestUri: '/greengrass/things/{thingName}/connectivityInfo',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'thingName',\n          'connectivityInfo'\n        ],\n        members: {\n          thingName: {\n            location: 'uri',\n            locationName: 'thingName'\n          },\n          connectivityInfo: {\n            shape: 'S3b',\n            locationName: 'ConnectivityInfo'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          version: {\n            locationName: 'Version'\n          },\n          message: {\n            locationName: 'Message'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    Sp: {\n      type: 'list',\n      member: {\n        shape: 'Sq'\n      }\n    },\n    Sq: {\n      type: 'structure',\n      members: {\n        name: {},\n        attributes: {\n          type: 'map',\n          key: {},\n          value: {}\n        }\n      }\n    },\n    S1f: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1m: {\n      type: 'structure',\n      members: {\n        componentState: {},\n        message: {},\n        errors: {\n          type: 'map',\n          key: {},\n          value: {}\n        },\n        vendorGuidance: {},\n        vendorGuidanceMessage: {}\n      }\n    },\n    S1t: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        required: [\n          'componentVersion'\n        ],\n        members: {\n          componentVersion: {},\n          configurationUpdate: {\n            type: 'structure',\n            members: {\n              merge: {},\n              reset: {\n                type: 'list',\n                member: {}\n              }\n            }\n          },\n          runWith: {\n            type: 'structure',\n            members: {\n              posixUser: {},\n              systemResourceLimits: {\n                type: 'structure',\n                members: {\n                  memory: {\n                    type: 'long'\n                  },\n                  cpus: {\n                    type: 'double'\n                  }\n                }\n              },\n              windowsUser: {}\n            }\n          }\n        }\n      }\n    },\n    S23: {\n      type: 'structure',\n      members: {\n        jobExecutionsRolloutConfig: {\n          type: 'structure',\n          members: {\n            exponentialRate: {\n              type: 'structure',\n              required: [\n                'baseRatePerMinute',\n                'incrementFactor',\n                'rateIncreaseCriteria'\n              ],\n              members: {\n                baseRatePerMinute: {\n                  type: 'integer'\n                },\n                incrementFactor: {\n                  type: 'double'\n                },\n                rateIncreaseCriteria: {\n                  type: 'structure',\n                  members: {\n                    numberOfNotifiedThings: {\n                      type: 'integer'\n                    },\n                    numberOfSucceededThings: {\n                      type: 'integer'\n                    }\n                  }\n                }\n              }\n            },\n            maximumPerMinute: {\n              type: 'integer'\n            }\n          }\n        },\n        abortConfig: {\n          type: 'structure',\n          required: [\n            'criteriaList'\n          ],\n          members: {\n            criteriaList: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                required: [\n                  'failureType',\n                  'action',\n                  'thresholdPercentage',\n                  'minNumberOfExecutedThings'\n                ],\n                members: {\n                  failureType: {},\n                  action: {},\n                  thresholdPercentage: {\n                    type: 'double'\n                  },\n                  minNumberOfExecutedThings: {\n                    type: 'integer'\n                  }\n                }\n              }\n            }\n          }\n        },\n        timeoutConfig: {\n          type: 'structure',\n          members: {\n            inProgressTimeoutInMinutes: {\n              type: 'long'\n            }\n          }\n        }\n      }\n    },\n    S2k: {\n      type: 'structure',\n      members: {\n        failureHandlingPolicy: {},\n        componentUpdatePolicy: {\n          type: 'structure',\n          members: {\n            timeoutInSeconds: {\n              type: 'integer'\n            },\n            action: {}\n          }\n        },\n        configurationValidationPolicy: {\n          type: 'structure',\n          members: {\n            timeoutInSeconds: {\n              type: 'integer'\n            }\n          }\n        }\n      }\n    },\n    S3b: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          id: {\n            locationName: 'Id'\n          },\n          hostAddress: {\n            locationName: 'HostAddress'\n          },\n          portNumber: {\n            locationName: 'PortNumber',\n            type: 'integer'\n          },\n          metadata: {\n            locationName: 'Metadata'\n          }\n        }\n      }\n    }\n  }\n}"]}