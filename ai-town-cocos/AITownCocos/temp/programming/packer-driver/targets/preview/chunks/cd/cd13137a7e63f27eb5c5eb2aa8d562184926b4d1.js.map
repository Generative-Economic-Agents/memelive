{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/forever-agent/index.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","ForeverAgent","SSL","ForeverAgentSSL","util","Agent","net","tls","AgentSSL","getConnectionName","host","port","name","localAddress","options","self","requests","sockets","freeSockets","maxSockets","defaultMaxSockets","minSockets","defaultMinSockets","on","socket","length","shift","onSocket","push","onIdleError","destroy","_onIdleError","inherits","prototype","createConnection","addRequestNoreuse","addRequest","req","useChunkedEncodingByDefault","idleSocket","pop","removeListener","_reusedSocket","removeSocket","s","index","indexOf","splice","createSocket","emit","call","createConnectionSSL","connect","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,SAAhBC,Y;;AACgBC,MAAAA,K,SAAhBD,Y;;AACgBE,MAAAA,K,QAAhBF,Y;;AACgBG,MAAAA,K,QAAhBH,Y;;AACgBI,MAAAA,K,UAAhBJ,Y;;;8BAEHA,Y,GAAe,cAAYK,G;;AACjCP,MAAAA,UAAU,CAACQ,MAAX,CAAkBN,YAAlB,EAAgC,UAAUO,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGCF,QAAAA,MAAM,CAACF,OAAP,GAAiBK,YAAjB;AACAA,QAAAA,YAAY,CAACC,GAAb,GAAmBC,eAAnB;;AAEA,YAAIC,IAAI,GAAGP,OAAO,CAAC,MAAD,CAAlB;AAAA,YACIQ,KAAK,GAAGR,OAAO,CAAC,MAAD,CAAP,CAAgBQ,KAD5B;AAAA,YAEIC,GAAG,GAAGT,OAAO,CAAC,KAAD,CAFjB;AAAA,YAGIU,GAAG,GAAGV,OAAO,CAAC,KAAD,CAHjB;AAAA,YAIIW,QAAQ,GAAGX,OAAO,CAAC,OAAD,CAAP,CAAiBQ,KAJhC;;AAMA,iBAASI,iBAAT,CAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;AACrC,cAAIC,IAAI,GAAG,EAAX;;AACA,cAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;AAC5BE,YAAAA,IAAI,GAAGF,IAAI,GAAG,GAAP,GAAaC,IAApB;AACD,WAFD,MAEO;AACL;AACAC,YAAAA,IAAI,GAAGF,IAAI,CAACA,IAAL,GAAY,GAAZ,GAAkBA,IAAI,CAACC,IAAvB,GAA8B,GAA9B,IAAqCD,IAAI,CAACG,YAAL,GAAqBH,IAAI,CAACG,YAAL,GAAoB,GAAzC,GAAgD,GAArF,CAAP;AACD;;AACD,iBAAOD,IAAP;AACD;;AAED,iBAASX,YAAT,CAAsBa,OAAtB,EAA+B;AAC7B,cAAIC,IAAI,GAAG,IAAX;AACAA,UAAAA,IAAI,CAACD,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACAC,UAAAA,IAAI,CAACC,QAAL,GAAgB,EAAhB;AACAD,UAAAA,IAAI,CAACE,OAAL,GAAe,EAAf;AACAF,UAAAA,IAAI,CAACG,WAAL,GAAmB,EAAnB;AACAH,UAAAA,IAAI,CAACI,UAAL,GAAkBJ,IAAI,CAACD,OAAL,CAAaK,UAAb,IAA2Bd,KAAK,CAACe,iBAAnD;AACAL,UAAAA,IAAI,CAACM,UAAL,GAAkBN,IAAI,CAACD,OAAL,CAAaO,UAAb,IAA2BpB,YAAY,CAACqB,iBAA1D;AACAP,UAAAA,IAAI,CAACQ,EAAL,CAAQ,MAAR,EAAgB,UAASC,MAAT,EAAiBd,IAAjB,EAAuBC,IAAvB,EAA6B;AAC3C,gBAAIC,IAAI,GAAGH,iBAAiB,CAACC,IAAD,EAAOC,IAAP,CAA5B;;AAEA,gBAAII,IAAI,CAACC,QAAL,CAAcJ,IAAd,KAAuBG,IAAI,CAACC,QAAL,CAAcJ,IAAd,EAAoBa,MAA/C,EAAuD;AACrDV,cAAAA,IAAI,CAACC,QAAL,CAAcJ,IAAd,EAAoBc,KAApB,GAA4BC,QAA5B,CAAqCH,MAArC;AACD,aAFD,MAEO,IAAIT,IAAI,CAACE,OAAL,CAAaL,IAAb,EAAmBa,MAAnB,GAA4BV,IAAI,CAACM,UAArC,EAAiD;AACtD,kBAAI,CAACN,IAAI,CAACG,WAAL,CAAiBN,IAAjB,CAAL,EAA6BG,IAAI,CAACG,WAAL,CAAiBN,IAAjB,IAAyB,EAAzB;AAC7BG,cAAAA,IAAI,CAACG,WAAL,CAAiBN,IAAjB,EAAuBgB,IAAvB,CAA4BJ,MAA5B,EAFsD,CAItD;;AACA,kBAAIK,WAAW,GAAG,SAAdA,WAAc,GAAW;AAC3BL,gBAAAA,MAAM,CAACM,OAAP;AACD,eAFD;;AAGAN,cAAAA,MAAM,CAACO,YAAP,GAAsBF,WAAtB;AACAL,cAAAA,MAAM,CAACD,EAAP,CAAU,OAAV,EAAmBM,WAAnB;AACD,aAVM,MAUA;AACL;AACA;AACA;AACA;AACAL,cAAAA,MAAM,CAACM,OAAP;AACD;AACF,WAtBD;AAwBD;;AACD1B,QAAAA,IAAI,CAAC4B,QAAL,CAAc/B,YAAd,EAA4BI,KAA5B;AAEAJ,QAAAA,YAAY,CAACqB,iBAAb,GAAiC,CAAjC;AAGArB,QAAAA,YAAY,CAACgC,SAAb,CAAuBC,gBAAvB,GAA0C5B,GAAG,CAAC4B,gBAA9C;AACAjC,QAAAA,YAAY,CAACgC,SAAb,CAAuBE,iBAAvB,GAA2C9B,KAAK,CAAC4B,SAAN,CAAgBG,UAA3D;;AACAnC,QAAAA,YAAY,CAACgC,SAAb,CAAuBG,UAAvB,GAAoC,UAASC,GAAT,EAAc3B,IAAd,EAAoBC,IAApB,EAA0B;AAC5D,cAAIC,IAAI,GAAGH,iBAAiB,CAACC,IAAD,EAAOC,IAAP,CAA5B;;AAEA,cAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,gBAAII,OAAO,GAAGJ,IAAd;AACAC,YAAAA,IAAI,GAAGG,OAAO,CAACH,IAAf;AACAD,YAAAA,IAAI,GAAGI,OAAO,CAACJ,IAAf;AACD;;AAED,cAAI,KAAKQ,WAAL,CAAiBN,IAAjB,KAA0B,KAAKM,WAAL,CAAiBN,IAAjB,EAAuBa,MAAvB,GAAgC,CAA1D,IAA+D,CAACY,GAAG,CAACC,2BAAxE,EAAqG;AACnG,gBAAIC,UAAU,GAAG,KAAKrB,WAAL,CAAiBN,IAAjB,EAAuB4B,GAAvB,EAAjB;AACAD,YAAAA,UAAU,CAACE,cAAX,CAA0B,OAA1B,EAAmCF,UAAU,CAACR,YAA9C;AACA,mBAAOQ,UAAU,CAACR,YAAlB;AACAM,YAAAA,GAAG,CAACK,aAAJ,GAAoB,IAApB;AACAL,YAAAA,GAAG,CAACV,QAAJ,CAAaY,UAAb;AACD,WAND,MAMO;AACL,iBAAKJ,iBAAL,CAAuBE,GAAvB,EAA4B3B,IAA5B,EAAkCC,IAAlC;AACD;AACF,SAlBD;;AAoBAV,QAAAA,YAAY,CAACgC,SAAb,CAAuBU,YAAvB,GAAsC,UAASC,CAAT,EAAYhC,IAAZ,EAAkBF,IAAlB,EAAwBC,IAAxB,EAA8B;AAClE,cAAI,KAAKM,OAAL,CAAaL,IAAb,CAAJ,EAAwB;AACtB,gBAAIiC,KAAK,GAAG,KAAK5B,OAAL,CAAaL,IAAb,EAAmBkC,OAAnB,CAA2BF,CAA3B,CAAZ;;AACA,gBAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,mBAAK5B,OAAL,CAAaL,IAAb,EAAmBmC,MAAnB,CAA0BF,KAA1B,EAAiC,CAAjC;AACD;AACF,WALD,MAKO,IAAI,KAAK5B,OAAL,CAAaL,IAAb,KAAsB,KAAKK,OAAL,CAAaL,IAAb,EAAmBa,MAAnB,KAA8B,CAAxD,EAA2D;AAChE;AACA,mBAAO,KAAKR,OAAL,CAAaL,IAAb,CAAP;AACA,mBAAO,KAAKI,QAAL,CAAcJ,IAAd,CAAP;AACD;;AAED,cAAI,KAAKM,WAAL,CAAiBN,IAAjB,CAAJ,EAA4B;AAC1B,gBAAIiC,KAAK,GAAG,KAAK3B,WAAL,CAAiBN,IAAjB,EAAuBkC,OAAvB,CAA+BF,CAA/B,CAAZ;;AACA,gBAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,mBAAK3B,WAAL,CAAiBN,IAAjB,EAAuBmC,MAAvB,CAA8BF,KAA9B,EAAqC,CAArC;;AACA,kBAAI,KAAK3B,WAAL,CAAiBN,IAAjB,EAAuBa,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,uBAAO,KAAKP,WAAL,CAAiBN,IAAjB,CAAP;AACD;AACF;AACF;;AAED,cAAI,KAAKI,QAAL,CAAcJ,IAAd,KAAuB,KAAKI,QAAL,CAAcJ,IAAd,EAAoBa,MAA/C,EAAuD;AACrD;AACA;AACA,iBAAKuB,YAAL,CAAkBpC,IAAlB,EAAwBF,IAAxB,EAA8BC,IAA9B,EAAoCsC,IAApC,CAAyC,MAAzC;AACD;AACF,SA3BD;;AA6BA,iBAAS9C,eAAT,CAA0BW,OAA1B,EAAmC;AACjCb,UAAAA,YAAY,CAACiD,IAAb,CAAkB,IAAlB,EAAwBpC,OAAxB;AACD;;AACDV,QAAAA,IAAI,CAAC4B,QAAL,CAAc7B,eAAd,EAA+BF,YAA/B;AAEAE,QAAAA,eAAe,CAAC8B,SAAhB,CAA0BC,gBAA1B,GAA6CiB,mBAA7C;AACAhD,QAAAA,eAAe,CAAC8B,SAAhB,CAA0BE,iBAA1B,GAA8C3B,QAAQ,CAACyB,SAAT,CAAmBG,UAAjE;;AAEA,iBAASe,mBAAT,CAA8BxC,IAA9B,EAAoCD,IAApC,EAA0CI,OAA1C,EAAmD;AACjD,cAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC5BG,YAAAA,OAAO,GAAGH,IAAV;AACD,WAFD,MAEO,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AACnCI,YAAAA,OAAO,GAAGJ,IAAV;AACD,WAFM,MAEA,IAAI,OAAOI,OAAP,KAAmB,QAAvB,EAAiC;AACtCA,YAAAA,OAAO,GAAGA,OAAV;AACD,WAFM,MAEA;AACLA,YAAAA,OAAO,GAAG,EAAV;AACD;;AAED,cAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC5BG,YAAAA,OAAO,CAACH,IAAR,GAAeA,IAAf;AACD;;AAED,cAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5BI,YAAAA,OAAO,CAACJ,IAAR,GAAeA,IAAf;AACD;;AAED,iBAAOH,GAAG,CAAC6C,OAAJ,CAAYtC,OAAZ,CAAP;AACD,SA7IyF,CAgJ3F;;;AAEA,2BAAAuC,WAAW,GAAGvD,MAAM,CAACF,OAArB;AAGC,OArJD,EAqJG,OAAO;AACR,gBAAQR,IADA;AAER,gBAAQE,KAFA;AAGR,eAAOC,KAHC;AAIR,eAAOC,KAJC;AAKR,iBAASC;AALD,OAAP,CArJH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'util';\nimport { __cjsMetaURL as _req0} from 'http';\nimport { __cjsMetaURL as _req1} from 'net';\nimport { __cjsMetaURL as _req2} from 'tls';\nimport { __cjsMetaURL as _req3} from 'https';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n module.exports = ForeverAgent\n ForeverAgent.SSL = ForeverAgentSSL\n\n var util = require('util')\n   , Agent = require('http').Agent\n   , net = require('net')\n   , tls = require('tls')\n   , AgentSSL = require('https').Agent\n   \n function getConnectionName(host, port) {  \n   var name = ''\n   if (typeof host === 'string') {\n     name = host + ':' + port\n   } else {\n     // For node.js v012.0 and iojs-v1.5.1, host is an object. And any existing localAddress is part of the connection name.\n     name = host.host + ':' + host.port + ':' + (host.localAddress ? (host.localAddress + ':') : ':')\n   }\n   return name\n }    \n\n function ForeverAgent(options) {\n   var self = this\n   self.options = options || {}\n   self.requests = {}\n   self.sockets = {}\n   self.freeSockets = {}\n   self.maxSockets = self.options.maxSockets || Agent.defaultMaxSockets\n   self.minSockets = self.options.minSockets || ForeverAgent.defaultMinSockets\n   self.on('free', function(socket, host, port) {\n     var name = getConnectionName(host, port)\n\n     if (self.requests[name] && self.requests[name].length) {\n       self.requests[name].shift().onSocket(socket)\n     } else if (self.sockets[name].length < self.minSockets) {\n       if (!self.freeSockets[name]) self.freeSockets[name] = []\n       self.freeSockets[name].push(socket)\n       \n       // if an error happens while we don't use the socket anyway, meh, throw the socket away\n       var onIdleError = function() {\n         socket.destroy()\n       }\n       socket._onIdleError = onIdleError\n       socket.on('error', onIdleError)\n     } else {\n       // If there are no pending requests just destroy the\n       // socket and it will get removed from the pool. This\n       // gets us out of timeout issues and allows us to\n       // default to Connection:keep-alive.\n       socket.destroy()\n     }\n   })\n\n }\n util.inherits(ForeverAgent, Agent)\n\n ForeverAgent.defaultMinSockets = 5\n\n\n ForeverAgent.prototype.createConnection = net.createConnection\n ForeverAgent.prototype.addRequestNoreuse = Agent.prototype.addRequest\n ForeverAgent.prototype.addRequest = function(req, host, port) {\n   var name = getConnectionName(host, port)\n   \n   if (typeof host !== 'string') {\n     var options = host\n     port = options.port\n     host = options.host\n   }\n\n   if (this.freeSockets[name] && this.freeSockets[name].length > 0 && !req.useChunkedEncodingByDefault) {\n     var idleSocket = this.freeSockets[name].pop()\n     idleSocket.removeListener('error', idleSocket._onIdleError)\n     delete idleSocket._onIdleError\n     req._reusedSocket = true\n     req.onSocket(idleSocket)\n   } else {\n     this.addRequestNoreuse(req, host, port)\n   }\n }\n\n ForeverAgent.prototype.removeSocket = function(s, name, host, port) {\n   if (this.sockets[name]) {\n     var index = this.sockets[name].indexOf(s)\n     if (index !== -1) {\n       this.sockets[name].splice(index, 1)\n     }\n   } else if (this.sockets[name] && this.sockets[name].length === 0) {\n     // don't leak\n     delete this.sockets[name]\n     delete this.requests[name]\n   }\n   \n   if (this.freeSockets[name]) {\n     var index = this.freeSockets[name].indexOf(s)\n     if (index !== -1) {\n       this.freeSockets[name].splice(index, 1)\n       if (this.freeSockets[name].length === 0) {\n         delete this.freeSockets[name]\n       }\n     }\n   }\n\n   if (this.requests[name] && this.requests[name].length) {\n     // If we have pending requests and a socket gets closed a new one\n     // needs to be created to take over in the pool for the one that closed.\n     this.createSocket(name, host, port).emit('free')\n   }\n }\n\n function ForeverAgentSSL (options) {\n   ForeverAgent.call(this, options)\n }\n util.inherits(ForeverAgentSSL, ForeverAgent)\n\n ForeverAgentSSL.prototype.createConnection = createConnectionSSL\n ForeverAgentSSL.prototype.addRequestNoreuse = AgentSSL.prototype.addRequest\n\n function createConnectionSSL (port, host, options) {\n   if (typeof port === 'object') {\n     options = port;\n   } else if (typeof host === 'object') {\n     options = host;\n   } else if (typeof options === 'object') {\n     options = options;\n   } else {\n     options = {};\n   }\n\n   if (typeof port === 'number') {\n     options.port = port;\n   }\n\n   if (typeof host === 'string') {\n     options.host = host;\n   }\n\n   return tls.connect(options);\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'util': _req,\n  'http': _req0,\n  'net': _req1,\n  'tls': _req2,\n  'https': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}