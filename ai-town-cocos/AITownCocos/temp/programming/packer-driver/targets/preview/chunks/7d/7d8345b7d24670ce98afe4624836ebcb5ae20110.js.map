{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/emr-containers-2020-10-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CancelJobRun","http","method","requestUri","input","type","required","members","id","location","locationName","virtualClusterId","output","CreateJobTemplate","name","clientToken","idempotencyToken","jobTemplateData","shape","tags","kmsKeyArn","arn","createdAt","CreateManagedEndpoint","releaseLabel","executionRoleArn","certificateArn","deprecated","deprecatedMessage","configurationOverrides","CreateSecurityConfiguration","securityConfigurationData","CreateVirtualCluster","containerProvider","securityConfigurationId","DeleteJobTemplate","DeleteManagedEndpoint","DeleteVirtualCluster","DescribeJobRun","jobRun","DescribeJobTemplate","jobTemplate","DescribeManagedEndpoint","endpoint","DescribeSecurityConfiguration","securityConfiguration","DescribeVirtualCluster","virtualCluster","GetManagedEndpointSessionCredentials","endpointIdentifier","virtualClusterIdentifier","credentialType","durationInSeconds","logContext","credentials","token","sensitive","union","expiresAt","ListJobRuns","createdBefore","createdAfter","states","member","maxResults","nextToken","jobRuns","ListJobTemplates","templates","ListManagedEndpoints","types","endpoints","ListSecurityConfigurations","securityConfigurations","ListTagsForResource","resourceArn","ListVirtualClusters","containerProviderId","containerProviderType","eksAccessEntryIntegrated","virtualClusters","StartJobRun","jobDriver","jobTemplateId","jobTemplateParameters","key","value","retryPolicyConfiguration","TagResource","UntagResource","tagKeys","shapes","S7","applicationConfiguration","monitoringConfiguration","persistentAppUI","cloudWatchMonitoringConfiguration","logGroupName","logStreamNamePrefix","s3MonitoringConfiguration","logUri","parameterConfiguration","defaultValue","jobTags","Sb","classification","properties","configurations","Sl","sparkSubmitJobDriver","entryPoint","entryPointArguments","sparkSubmitParameters","sparkSqlJobDriver","sparkSqlParameters","Sn","Sx","S13","timestampFormat","S19","containerLogRotationConfiguration","rotationSize","maxFilesToKeep","S1l","authorizationConfiguration","lakeFormationConfiguration","authorizedSessionTagValue","secureNamespaceInfo","clusterId","namespace","queryEngineRoleArn","encryptionConfiguration","inTransitEncryptionConfiguration","tlsCertificateConfiguration","certificateProviderType","publicCertificateSecretArn","privateCertificateSecretArn","S20","info","eksInfo","S2e","state","createdBy","finishedAt","stateDetails","failureReason","retryPolicyExecution","currentAttemptCount","S2j","maxAttempts","S2o","decryptionError","S2s","certificateAuthority","certificateData","serverUrl","securityGroup","subnetIds","S2z","S32"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-10-01',\n    endpointPrefix: 'emr-containers',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon EMR Containers',\n    serviceId: 'EMR containers',\n    signatureVersion: 'v4',\n    signingName: 'emr-containers',\n    uid: 'emr-containers-2020-10-01'\n  },\n  operations: {\n    CancelJobRun: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/virtualclusters/{virtualClusterId}/jobruns/{jobRunId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id',\n          'virtualClusterId'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'jobRunId'\n          },\n          virtualClusterId: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          virtualClusterId: {}\n        }\n      }\n    },\n    CreateJobTemplate: {\n      http: {\n        requestUri: '/jobtemplates'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'clientToken',\n          'jobTemplateData'\n        ],\n        members: {\n          name: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          jobTemplateData: {\n            shape: 'S7'\n          },\n          tags: {\n            shape: 'Sx'\n          },\n          kmsKeyArn: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          name: {},\n          arn: {},\n          createdAt: {\n            shape: 'S13'\n          }\n        }\n      }\n    },\n    CreateManagedEndpoint: {\n      http: {\n        requestUri: '/virtualclusters/{virtualClusterId}/endpoints'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'virtualClusterId',\n          'type',\n          'releaseLabel',\n          'executionRoleArn',\n          'clientToken'\n        ],\n        members: {\n          name: {},\n          virtualClusterId: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          },\n          type: {},\n          releaseLabel: {},\n          executionRoleArn: {},\n          certificateArn: {\n            deprecated: true,\n            deprecatedMessage: 'Customer provided certificate-arn is deprecated and would be removed in future.'\n          },\n          configurationOverrides: {\n            shape: 'S19'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'Sx'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          name: {},\n          arn: {},\n          virtualClusterId: {}\n        }\n      }\n    },\n    CreateSecurityConfiguration: {\n      http: {\n        requestUri: '/securityconfigurations'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clientToken',\n          'name',\n          'securityConfigurationData'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          name: {},\n          securityConfigurationData: {\n            shape: 'S1l'\n          },\n          tags: {\n            shape: 'Sx'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          name: {},\n          arn: {}\n        }\n      }\n    },\n    CreateVirtualCluster: {\n      http: {\n        requestUri: '/virtualclusters'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'containerProvider',\n          'clientToken'\n        ],\n        members: {\n          name: {},\n          containerProvider: {\n            shape: 'S20'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'Sx'\n          },\n          securityConfigurationId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          name: {},\n          arn: {}\n        }\n      }\n    },\n    DeleteJobTemplate: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/jobtemplates/{templateId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'templateId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {}\n        }\n      }\n    },\n    DeleteManagedEndpoint: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/virtualclusters/{virtualClusterId}/endpoints/{endpointId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id',\n          'virtualClusterId'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'endpointId'\n          },\n          virtualClusterId: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          virtualClusterId: {}\n        }\n      }\n    },\n    DeleteVirtualCluster: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/virtualclusters/{virtualClusterId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {}\n        }\n      }\n    },\n    DescribeJobRun: {\n      http: {\n        method: 'GET',\n        requestUri: '/virtualclusters/{virtualClusterId}/jobruns/{jobRunId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id',\n          'virtualClusterId'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'jobRunId'\n          },\n          virtualClusterId: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          jobRun: {\n            shape: 'S2e'\n          }\n        }\n      }\n    },\n    DescribeJobTemplate: {\n      http: {\n        method: 'GET',\n        requestUri: '/jobtemplates/{templateId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'templateId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          jobTemplate: {\n            shape: 'S2o'\n          }\n        }\n      }\n    },\n    DescribeManagedEndpoint: {\n      http: {\n        method: 'GET',\n        requestUri: '/virtualclusters/{virtualClusterId}/endpoints/{endpointId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id',\n          'virtualClusterId'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'endpointId'\n          },\n          virtualClusterId: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          endpoint: {\n            shape: 'S2s'\n          }\n        }\n      }\n    },\n    DescribeSecurityConfiguration: {\n      http: {\n        method: 'GET',\n        requestUri: '/securityconfigurations/{securityConfigurationId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'securityConfigurationId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          securityConfiguration: {\n            shape: 'S2z'\n          }\n        }\n      }\n    },\n    DescribeVirtualCluster: {\n      http: {\n        method: 'GET',\n        requestUri: '/virtualclusters/{virtualClusterId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualCluster: {\n            shape: 'S32'\n          }\n        }\n      }\n    },\n    GetManagedEndpointSessionCredentials: {\n      http: {\n        requestUri: '/virtualclusters/{virtualClusterId}/endpoints/{endpointId}/credentials'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'executionRoleArn',\n          'credentialType',\n          'endpointIdentifier',\n          'virtualClusterIdentifier'\n        ],\n        members: {\n          endpointIdentifier: {\n            location: 'uri',\n            locationName: 'endpointId'\n          },\n          virtualClusterIdentifier: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          },\n          executionRoleArn: {},\n          credentialType: {},\n          durationInSeconds: {\n            type: 'integer'\n          },\n          logContext: {},\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          credentials: {\n            type: 'structure',\n            members: {\n              token: {\n                type: 'string',\n                sensitive: true\n              }\n            },\n            union: true\n          },\n          expiresAt: {\n            shape: 'S13'\n          }\n        }\n      }\n    },\n    ListJobRuns: {\n      http: {\n        method: 'GET',\n        requestUri: '/virtualclusters/{virtualClusterId}/jobruns'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'virtualClusterId'\n        ],\n        members: {\n          virtualClusterId: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          },\n          createdBefore: {\n            shape: 'S13',\n            location: 'querystring',\n            locationName: 'createdBefore'\n          },\n          createdAfter: {\n            shape: 'S13',\n            location: 'querystring',\n            locationName: 'createdAfter'\n          },\n          name: {\n            location: 'querystring',\n            locationName: 'name'\n          },\n          states: {\n            location: 'querystring',\n            locationName: 'states',\n            type: 'list',\n            member: {}\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          jobRuns: {\n            type: 'list',\n            member: {\n              shape: 'S2e'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListJobTemplates: {\n      http: {\n        method: 'GET',\n        requestUri: '/jobtemplates'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          createdAfter: {\n            shape: 'S13',\n            location: 'querystring',\n            locationName: 'createdAfter'\n          },\n          createdBefore: {\n            shape: 'S13',\n            location: 'querystring',\n            locationName: 'createdBefore'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          templates: {\n            type: 'list',\n            member: {\n              shape: 'S2o'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListManagedEndpoints: {\n      http: {\n        method: 'GET',\n        requestUri: '/virtualclusters/{virtualClusterId}/endpoints'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'virtualClusterId'\n        ],\n        members: {\n          virtualClusterId: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          },\n          createdBefore: {\n            shape: 'S13',\n            location: 'querystring',\n            locationName: 'createdBefore'\n          },\n          createdAfter: {\n            shape: 'S13',\n            location: 'querystring',\n            locationName: 'createdAfter'\n          },\n          types: {\n            location: 'querystring',\n            locationName: 'types',\n            type: 'list',\n            member: {}\n          },\n          states: {\n            location: 'querystring',\n            locationName: 'states',\n            type: 'list',\n            member: {}\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          endpoints: {\n            type: 'list',\n            member: {\n              shape: 'S2s'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListSecurityConfigurations: {\n      http: {\n        method: 'GET',\n        requestUri: '/securityconfigurations'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          createdAfter: {\n            shape: 'S13',\n            location: 'querystring',\n            locationName: 'createdAfter'\n          },\n          createdBefore: {\n            shape: 'S13',\n            location: 'querystring',\n            locationName: 'createdBefore'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          securityConfigurations: {\n            type: 'list',\n            member: {\n              shape: 'S2z'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sx'\n          }\n        }\n      }\n    },\n    ListVirtualClusters: {\n      http: {\n        method: 'GET',\n        requestUri: '/virtualclusters'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          containerProviderId: {\n            location: 'querystring',\n            locationName: 'containerProviderId'\n          },\n          containerProviderType: {\n            location: 'querystring',\n            locationName: 'containerProviderType'\n          },\n          createdAfter: {\n            shape: 'S13',\n            location: 'querystring',\n            locationName: 'createdAfter'\n          },\n          createdBefore: {\n            shape: 'S13',\n            location: 'querystring',\n            locationName: 'createdBefore'\n          },\n          states: {\n            location: 'querystring',\n            locationName: 'states',\n            type: 'list',\n            member: {}\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          eksAccessEntryIntegrated: {\n            location: 'querystring',\n            locationName: 'eksAccessEntryIntegrated',\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          virtualClusters: {\n            type: 'list',\n            member: {\n              shape: 'S32'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    StartJobRun: {\n      http: {\n        requestUri: '/virtualclusters/{virtualClusterId}/jobruns'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'virtualClusterId',\n          'clientToken'\n        ],\n        members: {\n          name: {},\n          virtualClusterId: {\n            location: 'uri',\n            locationName: 'virtualClusterId'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          executionRoleArn: {},\n          releaseLabel: {},\n          jobDriver: {\n            shape: 'Sl'\n          },\n          configurationOverrides: {\n            shape: 'S19'\n          },\n          tags: {\n            shape: 'Sx'\n          },\n          jobTemplateId: {},\n          jobTemplateParameters: {\n            type: 'map',\n            key: {},\n            value: {}\n          },\n          retryPolicyConfiguration: {\n            shape: 'S2j'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          id: {},\n          name: {},\n          arn: {},\n          virtualClusterId: {}\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sx'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    }\n  },\n  shapes: {\n    S7: {\n      type: 'structure',\n      required: [\n        'executionRoleArn',\n        'releaseLabel',\n        'jobDriver'\n      ],\n      members: {\n        executionRoleArn: {},\n        releaseLabel: {},\n        configurationOverrides: {\n          type: 'structure',\n          members: {\n            applicationConfiguration: {\n              shape: 'Sb'\n            },\n            monitoringConfiguration: {\n              type: 'structure',\n              members: {\n                persistentAppUI: {},\n                cloudWatchMonitoringConfiguration: {\n                  type: 'structure',\n                  members: {\n                    logGroupName: {},\n                    logStreamNamePrefix: {}\n                  }\n                },\n                s3MonitoringConfiguration: {\n                  type: 'structure',\n                  members: {\n                    logUri: {}\n                  }\n                }\n              }\n            }\n          }\n        },\n        jobDriver: {\n          shape: 'Sl'\n        },\n        parameterConfiguration: {\n          type: 'map',\n          key: {},\n          value: {\n            type: 'structure',\n            members: {\n              type: {},\n              defaultValue: {}\n            }\n          }\n        },\n        jobTags: {\n          shape: 'Sx'\n        }\n      }\n    },\n    Sb: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'classification'\n        ],\n        members: {\n          classification: {},\n          properties: {\n            type: 'map',\n            key: {},\n            value: {},\n            sensitive: true\n          },\n          configurations: {\n            shape: 'Sb'\n          }\n        }\n      }\n    },\n    Sl: {\n      type: 'structure',\n      members: {\n        sparkSubmitJobDriver: {\n          type: 'structure',\n          required: [\n            'entryPoint'\n          ],\n          members: {\n            entryPoint: {\n              shape: 'Sn'\n            },\n            entryPointArguments: {\n              type: 'list',\n              member: {\n                type: 'string',\n                sensitive: true\n              }\n            },\n            sparkSubmitParameters: {\n              type: 'string',\n              sensitive: true\n            }\n          }\n        },\n        sparkSqlJobDriver: {\n          type: 'structure',\n          members: {\n            entryPoint: {\n              shape: 'Sn'\n            },\n            sparkSqlParameters: {\n              type: 'string',\n              sensitive: true\n            }\n          }\n        }\n      }\n    },\n    Sn: {\n      type: 'string',\n      sensitive: true\n    },\n    Sx: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S13: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    S19: {\n      type: 'structure',\n      members: {\n        applicationConfiguration: {\n          shape: 'Sb'\n        },\n        monitoringConfiguration: {\n          type: 'structure',\n          members: {\n            persistentAppUI: {},\n            cloudWatchMonitoringConfiguration: {\n              type: 'structure',\n              required: [\n                'logGroupName'\n              ],\n              members: {\n                logGroupName: {},\n                logStreamNamePrefix: {}\n              }\n            },\n            s3MonitoringConfiguration: {\n              type: 'structure',\n              required: [\n                'logUri'\n              ],\n              members: {\n                logUri: {}\n              }\n            },\n            containerLogRotationConfiguration: {\n              type: 'structure',\n              required: [\n                'rotationSize',\n                'maxFilesToKeep'\n              ],\n              members: {\n                rotationSize: {},\n                maxFilesToKeep: {\n                  type: 'integer'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S1l: {\n      type: 'structure',\n      members: {\n        authorizationConfiguration: {\n          type: 'structure',\n          members: {\n            lakeFormationConfiguration: {\n              type: 'structure',\n              members: {\n                authorizedSessionTagValue: {},\n                secureNamespaceInfo: {\n                  type: 'structure',\n                  members: {\n                    clusterId: {},\n                    namespace: {}\n                  }\n                },\n                queryEngineRoleArn: {}\n              }\n            },\n            encryptionConfiguration: {\n              type: 'structure',\n              members: {\n                inTransitEncryptionConfiguration: {\n                  type: 'structure',\n                  members: {\n                    tlsCertificateConfiguration: {\n                      type: 'structure',\n                      members: {\n                        certificateProviderType: {},\n                        publicCertificateSecretArn: {},\n                        privateCertificateSecretArn: {}\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    S20: {\n      type: 'structure',\n      required: [\n        'type',\n        'id'\n      ],\n      members: {\n        type: {},\n        id: {},\n        info: {\n          type: 'structure',\n          members: {\n            eksInfo: {\n              type: 'structure',\n              members: {\n                namespace: {}\n              }\n            }\n          },\n          union: true\n        }\n      }\n    },\n    S2e: {\n      type: 'structure',\n      members: {\n        id: {},\n        name: {},\n        virtualClusterId: {},\n        arn: {},\n        state: {},\n        clientToken: {},\n        executionRoleArn: {},\n        releaseLabel: {},\n        configurationOverrides: {\n          shape: 'S19'\n        },\n        jobDriver: {\n          shape: 'Sl'\n        },\n        createdAt: {\n          shape: 'S13'\n        },\n        createdBy: {},\n        finishedAt: {\n          shape: 'S13'\n        },\n        stateDetails: {},\n        failureReason: {},\n        tags: {\n          shape: 'Sx'\n        },\n        retryPolicyConfiguration: {\n          shape: 'S2j'\n        },\n        retryPolicyExecution: {\n          type: 'structure',\n          required: [\n            'currentAttemptCount'\n          ],\n          members: {\n            currentAttemptCount: {\n              type: 'integer'\n            }\n          }\n        }\n      }\n    },\n    S2j: {\n      type: 'structure',\n      required: [\n        'maxAttempts'\n      ],\n      members: {\n        maxAttempts: {\n          type: 'integer'\n        }\n      }\n    },\n    S2o: {\n      type: 'structure',\n      required: [\n        'jobTemplateData'\n      ],\n      members: {\n        name: {},\n        id: {},\n        arn: {},\n        createdAt: {\n          shape: 'S13'\n        },\n        createdBy: {},\n        tags: {\n          shape: 'Sx'\n        },\n        jobTemplateData: {\n          shape: 'S7'\n        },\n        kmsKeyArn: {},\n        decryptionError: {}\n      }\n    },\n    S2s: {\n      type: 'structure',\n      members: {\n        id: {},\n        name: {},\n        arn: {},\n        virtualClusterId: {},\n        type: {},\n        state: {},\n        releaseLabel: {},\n        executionRoleArn: {},\n        certificateArn: {\n          deprecated: true,\n          deprecatedMessage: 'Customer provided certificate-arn is deprecated and would be removed in future.'\n        },\n        certificateAuthority: {\n          type: 'structure',\n          members: {\n            certificateArn: {},\n            certificateData: {}\n          }\n        },\n        configurationOverrides: {\n          shape: 'S19'\n        },\n        serverUrl: {},\n        createdAt: {\n          shape: 'S13'\n        },\n        securityGroup: {},\n        subnetIds: {\n          type: 'list',\n          member: {}\n        },\n        stateDetails: {},\n        failureReason: {},\n        tags: {\n          shape: 'Sx'\n        }\n      }\n    },\n    S2z: {\n      type: 'structure',\n      members: {\n        id: {},\n        name: {},\n        arn: {},\n        createdAt: {\n          shape: 'S13'\n        },\n        createdBy: {},\n        securityConfigurationData: {\n          shape: 'S1l'\n        },\n        tags: {\n          shape: 'Sx'\n        }\n      }\n    },\n    S32: {\n      type: 'structure',\n      members: {\n        id: {},\n        name: {},\n        arn: {},\n        state: {},\n        containerProvider: {\n          shape: 'S20'\n        },\n        createdAt: {\n          shape: 'S13'\n        },\n        tags: {\n          shape: 'Sx'\n        },\n        securityConfigurationId: {}\n      }\n    }\n  }\n}"]}