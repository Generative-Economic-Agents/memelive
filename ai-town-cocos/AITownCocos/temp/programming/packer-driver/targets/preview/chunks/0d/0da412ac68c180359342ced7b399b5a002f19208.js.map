{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/mturk-requester-2017-01-17.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","targetPrefix","uid","operations","AcceptQualificationRequest","input","type","required","members","QualificationRequestId","IntegerValue","output","ApproveAssignment","AssignmentId","RequesterFeedback","OverrideRejection","idempotent","AssociateQualificationWithWorker","QualificationTypeId","WorkerId","SendNotification","CreateAdditionalAssignmentsForHIT","HITId","NumberOfAdditionalAssignments","UniqueRequestToken","CreateHIT","MaxAssignments","AutoApprovalDelayInSeconds","LifetimeInSeconds","AssignmentDurationInSeconds","Reward","Title","Keywords","Description","Question","RequesterAnnotation","QualificationRequirements","shape","AssignmentReviewPolicy","HITReviewPolicy","HITLayoutId","HITLayoutParameters","HIT","CreateHITType","HITTypeId","CreateHITWithHITType","CreateQualificationType","Name","QualificationTypeStatus","RetryDelayInSeconds","Test","AnswerKey","TestDurationInSeconds","AutoGranted","AutoGrantedValue","QualificationType","CreateWorkerBlock","Reason","DeleteHIT","DeleteQualificationType","DeleteWorkerBlock","DisassociateQualificationFromWorker","GetAccountBalance","AvailableBalance","OnHoldBalance","GetAssignment","Assignment","GetFileUploadURL","QuestionIdentifier","FileUploadURL","GetHIT","GetQualificationScore","Qualification","GetQualificationType","ListAssignmentsForHIT","NextToken","MaxResults","AssignmentStatuses","member","NumResults","Assignments","ListBonusPayments","BonusPayments","BonusAmount","GrantTime","ListHITs","HITs","ListHITsForQualificationType","ListQualificationRequests","QualificationRequests","Answer","SubmitTime","ListQualificationTypes","Query","MustBeRequestable","MustBeOwnedByCaller","QualificationTypes","ListReviewPolicyResultsForHIT","PolicyLevels","RetrieveActions","RetrieveResults","AssignmentReviewReport","HITReviewReport","ListReviewableHITs","Status","ListWorkerBlocks","WorkerBlocks","ListWorkersWithQualificationType","Qualifications","NotifyWorkers","Subject","MessageText","WorkerIds","NotifyWorkersFailureStatuses","NotifyWorkersFailureCode","NotifyWorkersFailureMessage","RejectAssignment","RejectQualificationRequest","SendBonus","SendTestEventNotification","Notification","TestEventType","UpdateExpirationForHIT","ExpireAt","UpdateHITReviewStatus","Revert","UpdateHITTypeOfHIT","UpdateNotificationSettings","Active","UpdateQualificationType","shapes","Si","Comparator","IntegerValues","LocaleValues","RequiredToPreview","deprecated","ActionsGuarded","Sn","Country","Subdivision","Sq","PolicyName","Parameters","Key","Values","MapEntries","St","Sw","Value","Sz","HITGroupId","CreationTime","HITStatus","Expiration","HITReviewStatus","NumberOfAssignmentsPending","NumberOfAssignmentsAvailable","NumberOfAssignmentsCompleted","S1a","IsRequestable","S1p","AssignmentStatus","AutoApprovalTime","AcceptTime","ApprovalTime","RejectionTime","Deadline","S1x","LocaleValue","S2d","S2r","ReviewResults","ActionId","SubjectId","SubjectType","QuestionId","ReviewActions","ActionName","TargetId","TargetType","CompleteTime","Result","ErrorCode","S3k","Destination","Transport","Version","EventTypes"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2017-01-17',\n    endpointPrefix: 'mturk-requester',\n    jsonVersion: '1.1',\n    protocol: 'json',\n    serviceAbbreviation: 'Amazon MTurk',\n    serviceFullName: 'Amazon Mechanical Turk',\n    serviceId: 'MTurk',\n    signatureVersion: 'v4',\n    targetPrefix: 'MTurkRequesterServiceV20170117',\n    uid: 'mturk-requester-2017-01-17'\n  },\n  operations: {\n    AcceptQualificationRequest: {\n      input: {\n        type: 'structure',\n        required: [\n          'QualificationRequestId'\n        ],\n        members: {\n          QualificationRequestId: {},\n          IntegerValue: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    ApproveAssignment: {\n      input: {\n        type: 'structure',\n        required: [\n          'AssignmentId'\n        ],\n        members: {\n          AssignmentId: {},\n          RequesterFeedback: {},\n          OverrideRejection: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    AssociateQualificationWithWorker: {\n      input: {\n        type: 'structure',\n        required: [\n          'QualificationTypeId',\n          'WorkerId'\n        ],\n        members: {\n          QualificationTypeId: {},\n          WorkerId: {},\n          IntegerValue: {\n            type: 'integer'\n          },\n          SendNotification: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateAdditionalAssignmentsForHIT: {\n      input: {\n        type: 'structure',\n        required: [\n          'HITId',\n          'NumberOfAdditionalAssignments'\n        ],\n        members: {\n          HITId: {},\n          NumberOfAdditionalAssignments: {\n            type: 'integer'\n          },\n          UniqueRequestToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateHIT: {\n      input: {\n        type: 'structure',\n        required: [\n          'LifetimeInSeconds',\n          'AssignmentDurationInSeconds',\n          'Reward',\n          'Title',\n          'Description'\n        ],\n        members: {\n          MaxAssignments: {\n            type: 'integer'\n          },\n          AutoApprovalDelayInSeconds: {\n            type: 'long'\n          },\n          LifetimeInSeconds: {\n            type: 'long'\n          },\n          AssignmentDurationInSeconds: {\n            type: 'long'\n          },\n          Reward: {},\n          Title: {},\n          Keywords: {},\n          Description: {},\n          Question: {},\n          RequesterAnnotation: {},\n          QualificationRequirements: {\n            shape: 'Si'\n          },\n          UniqueRequestToken: {},\n          AssignmentReviewPolicy: {\n            shape: 'Sq'\n          },\n          HITReviewPolicy: {\n            shape: 'Sq'\n          },\n          HITLayoutId: {},\n          HITLayoutParameters: {\n            shape: 'Sw'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HIT: {\n            shape: 'Sz'\n          }\n        }\n      }\n    },\n    CreateHITType: {\n      input: {\n        type: 'structure',\n        required: [\n          'AssignmentDurationInSeconds',\n          'Reward',\n          'Title',\n          'Description'\n        ],\n        members: {\n          AutoApprovalDelayInSeconds: {\n            type: 'long'\n          },\n          AssignmentDurationInSeconds: {\n            type: 'long'\n          },\n          Reward: {},\n          Title: {},\n          Keywords: {},\n          Description: {},\n          QualificationRequirements: {\n            shape: 'Si'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HITTypeId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateHITWithHITType: {\n      input: {\n        type: 'structure',\n        required: [\n          'HITTypeId',\n          'LifetimeInSeconds'\n        ],\n        members: {\n          HITTypeId: {},\n          MaxAssignments: {\n            type: 'integer'\n          },\n          LifetimeInSeconds: {\n            type: 'long'\n          },\n          Question: {},\n          RequesterAnnotation: {},\n          UniqueRequestToken: {},\n          AssignmentReviewPolicy: {\n            shape: 'Sq'\n          },\n          HITReviewPolicy: {\n            shape: 'Sq'\n          },\n          HITLayoutId: {},\n          HITLayoutParameters: {\n            shape: 'Sw'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HIT: {\n            shape: 'Sz'\n          }\n        }\n      }\n    },\n    CreateQualificationType: {\n      input: {\n        type: 'structure',\n        required: [\n          'Name',\n          'Description',\n          'QualificationTypeStatus'\n        ],\n        members: {\n          Name: {},\n          Keywords: {},\n          Description: {},\n          QualificationTypeStatus: {},\n          RetryDelayInSeconds: {\n            type: 'long'\n          },\n          Test: {},\n          AnswerKey: {},\n          TestDurationInSeconds: {\n            type: 'long'\n          },\n          AutoGranted: {\n            type: 'boolean'\n          },\n          AutoGrantedValue: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          QualificationType: {\n            shape: 'S1a'\n          }\n        }\n      }\n    },\n    CreateWorkerBlock: {\n      input: {\n        type: 'structure',\n        required: [\n          'WorkerId',\n          'Reason'\n        ],\n        members: {\n          WorkerId: {},\n          Reason: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteHIT: {\n      input: {\n        type: 'structure',\n        required: [\n          'HITId'\n        ],\n        members: {\n          HITId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteQualificationType: {\n      input: {\n        type: 'structure',\n        required: [\n          'QualificationTypeId'\n        ],\n        members: {\n          QualificationTypeId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteWorkerBlock: {\n      input: {\n        type: 'structure',\n        required: [\n          'WorkerId'\n        ],\n        members: {\n          WorkerId: {},\n          Reason: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DisassociateQualificationFromWorker: {\n      input: {\n        type: 'structure',\n        required: [\n          'WorkerId',\n          'QualificationTypeId'\n        ],\n        members: {\n          WorkerId: {},\n          QualificationTypeId: {},\n          Reason: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    GetAccountBalance: {\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        members: {\n          AvailableBalance: {},\n          OnHoldBalance: {}\n        }\n      },\n      idempotent: true\n    },\n    GetAssignment: {\n      input: {\n        type: 'structure',\n        required: [\n          'AssignmentId'\n        ],\n        members: {\n          AssignmentId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Assignment: {\n            shape: 'S1p'\n          },\n          HIT: {\n            shape: 'Sz'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetFileUploadURL: {\n      input: {\n        type: 'structure',\n        required: [\n          'AssignmentId',\n          'QuestionIdentifier'\n        ],\n        members: {\n          AssignmentId: {},\n          QuestionIdentifier: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          FileUploadURL: {}\n        }\n      },\n      idempotent: true\n    },\n    GetHIT: {\n      input: {\n        type: 'structure',\n        required: [\n          'HITId'\n        ],\n        members: {\n          HITId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HIT: {\n            shape: 'Sz'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetQualificationScore: {\n      input: {\n        type: 'structure',\n        required: [\n          'QualificationTypeId',\n          'WorkerId'\n        ],\n        members: {\n          QualificationTypeId: {},\n          WorkerId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Qualification: {\n            shape: 'S1x'\n          }\n        }\n      },\n      idempotent: true\n    },\n    GetQualificationType: {\n      input: {\n        type: 'structure',\n        required: [\n          'QualificationTypeId'\n        ],\n        members: {\n          QualificationTypeId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          QualificationType: {\n            shape: 'S1a'\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListAssignmentsForHIT: {\n      input: {\n        type: 'structure',\n        required: [\n          'HITId'\n        ],\n        members: {\n          HITId: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          AssignmentStatuses: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          NumResults: {\n            type: 'integer'\n          },\n          Assignments: {\n            type: 'list',\n            member: {\n              shape: 'S1p'\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListBonusPayments: {\n      input: {\n        type: 'structure',\n        members: {\n          HITId: {},\n          AssignmentId: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NumResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          BonusPayments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                WorkerId: {},\n                BonusAmount: {},\n                AssignmentId: {},\n                Reason: {},\n                GrantTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListHITs: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          NumResults: {\n            type: 'integer'\n          },\n          HITs: {\n            shape: 'S2d'\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListHITsForQualificationType: {\n      input: {\n        type: 'structure',\n        required: [\n          'QualificationTypeId'\n        ],\n        members: {\n          QualificationTypeId: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          NumResults: {\n            type: 'integer'\n          },\n          HITs: {\n            shape: 'S2d'\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListQualificationRequests: {\n      input: {\n        type: 'structure',\n        members: {\n          QualificationTypeId: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NumResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          QualificationRequests: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                QualificationRequestId: {},\n                QualificationTypeId: {},\n                WorkerId: {},\n                Test: {},\n                Answer: {},\n                SubmitTime: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListQualificationTypes: {\n      input: {\n        type: 'structure',\n        required: [\n          'MustBeRequestable'\n        ],\n        members: {\n          Query: {},\n          MustBeRequestable: {\n            type: 'boolean'\n          },\n          MustBeOwnedByCaller: {\n            type: 'boolean'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NumResults: {\n            type: 'integer'\n          },\n          NextToken: {},\n          QualificationTypes: {\n            type: 'list',\n            member: {\n              shape: 'S1a'\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListReviewPolicyResultsForHIT: {\n      input: {\n        type: 'structure',\n        required: [\n          'HITId'\n        ],\n        members: {\n          HITId: {},\n          PolicyLevels: {\n            type: 'list',\n            member: {}\n          },\n          RetrieveActions: {\n            type: 'boolean'\n          },\n          RetrieveResults: {\n            type: 'boolean'\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          HITId: {},\n          AssignmentReviewPolicy: {\n            shape: 'Sq'\n          },\n          HITReviewPolicy: {\n            shape: 'Sq'\n          },\n          AssignmentReviewReport: {\n            shape: 'S2r'\n          },\n          HITReviewReport: {\n            shape: 'S2r'\n          },\n          NextToken: {}\n        }\n      },\n      idempotent: true\n    },\n    ListReviewableHITs: {\n      input: {\n        type: 'structure',\n        members: {\n          HITTypeId: {},\n          Status: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          NumResults: {\n            type: 'integer'\n          },\n          HITs: {\n            shape: 'S2d'\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListWorkerBlocks: {\n      input: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          NumResults: {\n            type: 'integer'\n          },\n          WorkerBlocks: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                WorkerId: {},\n                Reason: {}\n              }\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    ListWorkersWithQualificationType: {\n      input: {\n        type: 'structure',\n        required: [\n          'QualificationTypeId'\n        ],\n        members: {\n          QualificationTypeId: {},\n          Status: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NextToken: {},\n          NumResults: {\n            type: 'integer'\n          },\n          Qualifications: {\n            type: 'list',\n            member: {\n              shape: 'S1x'\n            }\n          }\n        }\n      },\n      idempotent: true\n    },\n    NotifyWorkers: {\n      input: {\n        type: 'structure',\n        required: [\n          'Subject',\n          'MessageText',\n          'WorkerIds'\n        ],\n        members: {\n          Subject: {},\n          MessageText: {},\n          WorkerIds: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          NotifyWorkersFailureStatuses: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                NotifyWorkersFailureCode: {},\n                NotifyWorkersFailureMessage: {},\n                WorkerId: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    RejectAssignment: {\n      input: {\n        type: 'structure',\n        required: [\n          'AssignmentId',\n          'RequesterFeedback'\n        ],\n        members: {\n          AssignmentId: {},\n          RequesterFeedback: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    RejectQualificationRequest: {\n      input: {\n        type: 'structure',\n        required: [\n          'QualificationRequestId'\n        ],\n        members: {\n          QualificationRequestId: {},\n          Reason: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    SendBonus: {\n      input: {\n        type: 'structure',\n        required: [\n          'WorkerId',\n          'BonusAmount',\n          'AssignmentId',\n          'Reason'\n        ],\n        members: {\n          WorkerId: {},\n          BonusAmount: {},\n          AssignmentId: {},\n          Reason: {},\n          UniqueRequestToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    SendTestEventNotification: {\n      input: {\n        type: 'structure',\n        required: [\n          'Notification',\n          'TestEventType'\n        ],\n        members: {\n          Notification: {\n            shape: 'S3k'\n          },\n          TestEventType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateExpirationForHIT: {\n      input: {\n        type: 'structure',\n        required: [\n          'HITId',\n          'ExpireAt'\n        ],\n        members: {\n          HITId: {},\n          ExpireAt: {\n            type: 'timestamp'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateHITReviewStatus: {\n      input: {\n        type: 'structure',\n        required: [\n          'HITId'\n        ],\n        members: {\n          HITId: {},\n          Revert: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateHITTypeOfHIT: {\n      input: {\n        type: 'structure',\n        required: [\n          'HITId',\n          'HITTypeId'\n        ],\n        members: {\n          HITId: {},\n          HITTypeId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateNotificationSettings: {\n      input: {\n        type: 'structure',\n        required: [\n          'HITTypeId'\n        ],\n        members: {\n          HITTypeId: {},\n          Notification: {\n            shape: 'S3k'\n          },\n          Active: {\n            type: 'boolean'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateQualificationType: {\n      input: {\n        type: 'structure',\n        required: [\n          'QualificationTypeId'\n        ],\n        members: {\n          QualificationTypeId: {},\n          Description: {},\n          QualificationTypeStatus: {},\n          Test: {},\n          AnswerKey: {},\n          TestDurationInSeconds: {\n            type: 'long'\n          },\n          RetryDelayInSeconds: {\n            type: 'long'\n          },\n          AutoGranted: {\n            type: 'boolean'\n          },\n          AutoGrantedValue: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          QualificationType: {\n            shape: 'S1a'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    Si: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'QualificationTypeId',\n          'Comparator'\n        ],\n        members: {\n          QualificationTypeId: {},\n          Comparator: {},\n          IntegerValues: {\n            type: 'list',\n            member: {\n              type: 'integer'\n            }\n          },\n          LocaleValues: {\n            type: 'list',\n            member: {\n              shape: 'Sn'\n            }\n          },\n          RequiredToPreview: {\n            deprecated: true,\n            type: 'boolean'\n          },\n          ActionsGuarded: {}\n        }\n      }\n    },\n    Sn: {\n      type: 'structure',\n      required: [\n        'Country'\n      ],\n      members: {\n        Country: {},\n        Subdivision: {}\n      }\n    },\n    Sq: {\n      type: 'structure',\n      required: [\n        'PolicyName'\n      ],\n      members: {\n        PolicyName: {},\n        Parameters: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              Key: {},\n              Values: {\n                shape: 'St'\n              },\n              MapEntries: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    Key: {},\n                    Values: {\n                      shape: 'St'\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    St: {\n      type: 'list',\n      member: {}\n    },\n    Sw: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Name',\n          'Value'\n        ],\n        members: {\n          Name: {},\n          Value: {}\n        }\n      }\n    },\n    Sz: {\n      type: 'structure',\n      members: {\n        HITId: {},\n        HITTypeId: {},\n        HITGroupId: {},\n        HITLayoutId: {},\n        CreationTime: {\n          type: 'timestamp'\n        },\n        Title: {},\n        Description: {},\n        Question: {},\n        Keywords: {},\n        HITStatus: {},\n        MaxAssignments: {\n          type: 'integer'\n        },\n        Reward: {},\n        AutoApprovalDelayInSeconds: {\n          type: 'long'\n        },\n        Expiration: {\n          type: 'timestamp'\n        },\n        AssignmentDurationInSeconds: {\n          type: 'long'\n        },\n        RequesterAnnotation: {},\n        QualificationRequirements: {\n          shape: 'Si'\n        },\n        HITReviewStatus: {},\n        NumberOfAssignmentsPending: {\n          type: 'integer'\n        },\n        NumberOfAssignmentsAvailable: {\n          type: 'integer'\n        },\n        NumberOfAssignmentsCompleted: {\n          type: 'integer'\n        }\n      }\n    },\n    S1a: {\n      type: 'structure',\n      members: {\n        QualificationTypeId: {},\n        CreationTime: {\n          type: 'timestamp'\n        },\n        Name: {},\n        Description: {},\n        Keywords: {},\n        QualificationTypeStatus: {},\n        Test: {},\n        TestDurationInSeconds: {\n          type: 'long'\n        },\n        AnswerKey: {},\n        RetryDelayInSeconds: {\n          type: 'long'\n        },\n        IsRequestable: {\n          type: 'boolean'\n        },\n        AutoGranted: {\n          type: 'boolean'\n        },\n        AutoGrantedValue: {\n          type: 'integer'\n        }\n      }\n    },\n    S1p: {\n      type: 'structure',\n      members: {\n        AssignmentId: {},\n        WorkerId: {},\n        HITId: {},\n        AssignmentStatus: {},\n        AutoApprovalTime: {\n          type: 'timestamp'\n        },\n        AcceptTime: {\n          type: 'timestamp'\n        },\n        SubmitTime: {\n          type: 'timestamp'\n        },\n        ApprovalTime: {\n          type: 'timestamp'\n        },\n        RejectionTime: {\n          type: 'timestamp'\n        },\n        Deadline: {\n          type: 'timestamp'\n        },\n        Answer: {},\n        RequesterFeedback: {}\n      }\n    },\n    S1x: {\n      type: 'structure',\n      members: {\n        QualificationTypeId: {},\n        WorkerId: {},\n        GrantTime: {\n          type: 'timestamp'\n        },\n        IntegerValue: {\n          type: 'integer'\n        },\n        LocaleValue: {\n          shape: 'Sn'\n        },\n        Status: {}\n      }\n    },\n    S2d: {\n      type: 'list',\n      member: {\n        shape: 'Sz'\n      }\n    },\n    S2r: {\n      type: 'structure',\n      members: {\n        ReviewResults: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              ActionId: {},\n              SubjectId: {},\n              SubjectType: {},\n              QuestionId: {},\n              Key: {},\n              Value: {}\n            }\n          }\n        },\n        ReviewActions: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              ActionId: {},\n              ActionName: {},\n              TargetId: {},\n              TargetType: {},\n              Status: {},\n              CompleteTime: {\n                type: 'timestamp'\n              },\n              Result: {},\n              ErrorCode: {}\n            }\n          }\n        }\n      }\n    },\n    S3k: {\n      type: 'structure',\n      required: [\n        'Destination',\n        'Transport',\n        'Version',\n        'EventTypes'\n      ],\n      members: {\n        Destination: {},\n        Transport: {},\n        Version: {},\n        EventTypes: {\n          type: 'list',\n          member: {}\n        }\n      }\n    }\n  }\n}"]}