{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/healthlake-2017-07-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","targetPrefix","uid","operations","CreateFHIRDatastore","input","type","required","members","DatastoreName","DatastoreTypeVersion","SseConfiguration","shape","PreloadDataConfig","ClientToken","idempotencyToken","Tags","IdentityProviderConfiguration","output","DatastoreId","DatastoreArn","DatastoreStatus","DatastoreEndpoint","DeleteFHIRDatastore","DescribeFHIRDatastore","DatastoreProperties","DescribeFHIRExportJob","JobId","ExportJobProperties","DescribeFHIRImportJob","ImportJobProperties","ListFHIRDatastores","Filter","CreatedBefore","CreatedAfter","NextToken","MaxResults","DatastorePropertiesList","member","ListFHIRExportJobs","JobName","JobStatus","SubmittedBefore","SubmittedAfter","ExportJobPropertiesList","ListFHIRImportJobs","ImportJobPropertiesList","ListTagsForResource","ResourceARN","StartFHIRExportJob","OutputDataConfig","DataAccessRoleArn","StartFHIRImportJob","InputDataConfig","JobOutputDataConfig","TagResource","UntagResource","TagKeys","shapes","S4","KmsEncryptionConfig","CmkType","KmsKeyId","S8","PreloadDataType","Sb","Key","Value","Sf","AuthorizationStrategy","FineGrainedAuthorizationEnabled","Metadata","IdpLambdaArn","St","CreatedAt","ErrorCause","ErrorMessage","ErrorCategory","S12","SubmitTime","EndTime","Message","S15","S3Configuration","S3Uri","union","S1c","JobProgressReport","TotalNumberOfScannedFiles","TotalSizeOfScannedFilesInMB","TotalNumberOfImportedFiles","TotalNumberOfResourcesScanned","TotalNumberOfResourcesImported","TotalNumberOfResourcesWithCustomerError","TotalNumberOfFilesReadWithCustomerError","Throughput","S1d"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2017-07-01',\n    endpointPrefix: 'healthlake',\n    jsonVersion: '1.0',\n    protocol: 'json',\n    serviceAbbreviation: 'HealthLake',\n    serviceFullName: 'Amazon HealthLake',\n    serviceId: 'HealthLake',\n    signatureVersion: 'v4',\n    signingName: 'healthlake',\n    targetPrefix: 'HealthLake',\n    uid: 'healthlake-2017-07-01'\n  },\n  operations: {\n    CreateFHIRDatastore: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatastoreTypeVersion'\n        ],\n        members: {\n          DatastoreName: {},\n          DatastoreTypeVersion: {},\n          SseConfiguration: {\n            shape: 'S4'\n          },\n          PreloadDataConfig: {\n            shape: 'S8'\n          },\n          ClientToken: {\n            idempotencyToken: true\n          },\n          Tags: {\n            shape: 'Sb'\n          },\n          IdentityProviderConfiguration: {\n            shape: 'Sf'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'DatastoreId',\n          'DatastoreArn',\n          'DatastoreStatus',\n          'DatastoreEndpoint'\n        ],\n        members: {\n          DatastoreId: {},\n          DatastoreArn: {},\n          DatastoreStatus: {},\n          DatastoreEndpoint: {}\n        }\n      }\n    },\n    DeleteFHIRDatastore: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatastoreId'\n        ],\n        members: {\n          DatastoreId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'DatastoreId',\n          'DatastoreArn',\n          'DatastoreStatus',\n          'DatastoreEndpoint'\n        ],\n        members: {\n          DatastoreId: {},\n          DatastoreArn: {},\n          DatastoreStatus: {},\n          DatastoreEndpoint: {}\n        }\n      }\n    },\n    DescribeFHIRDatastore: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatastoreId'\n        ],\n        members: {\n          DatastoreId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'DatastoreProperties'\n        ],\n        members: {\n          DatastoreProperties: {\n            shape: 'St'\n          }\n        }\n      }\n    },\n    DescribeFHIRExportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatastoreId',\n          'JobId'\n        ],\n        members: {\n          DatastoreId: {},\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ExportJobProperties'\n        ],\n        members: {\n          ExportJobProperties: {\n            shape: 'S12'\n          }\n        }\n      }\n    },\n    DescribeFHIRImportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatastoreId',\n          'JobId'\n        ],\n        members: {\n          DatastoreId: {},\n          JobId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ImportJobProperties'\n        ],\n        members: {\n          ImportJobProperties: {\n            shape: 'S1c'\n          }\n        }\n      }\n    },\n    ListFHIRDatastores: {\n      input: {\n        type: 'structure',\n        members: {\n          Filter: {\n            type: 'structure',\n            members: {\n              DatastoreName: {},\n              DatastoreStatus: {},\n              CreatedBefore: {\n                type: 'timestamp'\n              },\n              CreatedAfter: {\n                type: 'timestamp'\n              }\n            }\n          },\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'DatastorePropertiesList'\n        ],\n        members: {\n          DatastorePropertiesList: {\n            type: 'list',\n            member: {\n              shape: 'St'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListFHIRExportJobs: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatastoreId'\n        ],\n        members: {\n          DatastoreId: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          JobName: {},\n          JobStatus: {},\n          SubmittedBefore: {\n            type: 'timestamp'\n          },\n          SubmittedAfter: {\n            type: 'timestamp'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ExportJobPropertiesList'\n        ],\n        members: {\n          ExportJobPropertiesList: {\n            type: 'list',\n            member: {\n              shape: 'S12'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListFHIRImportJobs: {\n      input: {\n        type: 'structure',\n        required: [\n          'DatastoreId'\n        ],\n        members: {\n          DatastoreId: {},\n          NextToken: {},\n          MaxResults: {\n            type: 'integer'\n          },\n          JobName: {},\n          JobStatus: {},\n          SubmittedBefore: {\n            type: 'timestamp'\n          },\n          SubmittedAfter: {\n            type: 'timestamp'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ImportJobPropertiesList'\n        ],\n        members: {\n          ImportJobPropertiesList: {\n            type: 'list',\n            member: {\n              shape: 'S1c'\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN'\n        ],\n        members: {\n          ResourceARN: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'Sb'\n          }\n        }\n      }\n    },\n    StartFHIRExportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'OutputDataConfig',\n          'DatastoreId',\n          'DataAccessRoleArn',\n          'ClientToken'\n        ],\n        members: {\n          JobName: {},\n          OutputDataConfig: {\n            shape: 'S15'\n          },\n          DatastoreId: {},\n          DataAccessRoleArn: {},\n          ClientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'JobId',\n          'JobStatus'\n        ],\n        members: {\n          JobId: {},\n          JobStatus: {},\n          DatastoreId: {}\n        }\n      }\n    },\n    StartFHIRImportJob: {\n      input: {\n        type: 'structure',\n        required: [\n          'InputDataConfig',\n          'JobOutputDataConfig',\n          'DatastoreId',\n          'DataAccessRoleArn',\n          'ClientToken'\n        ],\n        members: {\n          JobName: {},\n          InputDataConfig: {\n            shape: 'S1d'\n          },\n          JobOutputDataConfig: {\n            shape: 'S15'\n          },\n          DatastoreId: {},\n          DataAccessRoleArn: {},\n          ClientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'JobId',\n          'JobStatus'\n        ],\n        members: {\n          JobId: {},\n          JobStatus: {},\n          DatastoreId: {}\n        }\n      }\n    },\n    TagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN',\n          'Tags'\n        ],\n        members: {\n          ResourceARN: {},\n          Tags: {\n            shape: 'Sb'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceARN',\n          'TagKeys'\n        ],\n        members: {\n          ResourceARN: {},\n          TagKeys: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    }\n  },\n  shapes: {\n    S4: {\n      type: 'structure',\n      required: [\n        'KmsEncryptionConfig'\n      ],\n      members: {\n        KmsEncryptionConfig: {\n          type: 'structure',\n          required: [\n            'CmkType'\n          ],\n          members: {\n            CmkType: {},\n            KmsKeyId: {}\n          }\n        }\n      }\n    },\n    S8: {\n      type: 'structure',\n      required: [\n        'PreloadDataType'\n      ],\n      members: {\n        PreloadDataType: {}\n      }\n    },\n    Sb: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key',\n          'Value'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sf: {\n      type: 'structure',\n      required: [\n        'AuthorizationStrategy'\n      ],\n      members: {\n        AuthorizationStrategy: {},\n        FineGrainedAuthorizationEnabled: {\n          type: 'boolean'\n        },\n        Metadata: {},\n        IdpLambdaArn: {}\n      }\n    },\n    St: {\n      type: 'structure',\n      required: [\n        'DatastoreId',\n        'DatastoreArn',\n        'DatastoreStatus',\n        'DatastoreTypeVersion',\n        'DatastoreEndpoint'\n      ],\n      members: {\n        DatastoreId: {},\n        DatastoreArn: {},\n        DatastoreName: {},\n        DatastoreStatus: {},\n        CreatedAt: {\n          type: 'timestamp'\n        },\n        DatastoreTypeVersion: {},\n        DatastoreEndpoint: {},\n        SseConfiguration: {\n          shape: 'S4'\n        },\n        PreloadDataConfig: {\n          shape: 'S8'\n        },\n        IdentityProviderConfiguration: {\n          shape: 'Sf'\n        },\n        ErrorCause: {\n          type: 'structure',\n          members: {\n            ErrorMessage: {},\n            ErrorCategory: {}\n          }\n        }\n      }\n    },\n    S12: {\n      type: 'structure',\n      required: [\n        'JobId',\n        'JobStatus',\n        'SubmitTime',\n        'DatastoreId',\n        'OutputDataConfig'\n      ],\n      members: {\n        JobId: {},\n        JobName: {},\n        JobStatus: {},\n        SubmitTime: {\n          type: 'timestamp'\n        },\n        EndTime: {\n          type: 'timestamp'\n        },\n        DatastoreId: {},\n        OutputDataConfig: {\n          shape: 'S15'\n        },\n        DataAccessRoleArn: {},\n        Message: {}\n      }\n    },\n    S15: {\n      type: 'structure',\n      members: {\n        S3Configuration: {\n          type: 'structure',\n          required: [\n            'S3Uri',\n            'KmsKeyId'\n          ],\n          members: {\n            S3Uri: {},\n            KmsKeyId: {}\n          }\n        }\n      },\n      union: true\n    },\n    S1c: {\n      type: 'structure',\n      required: [\n        'JobId',\n        'JobStatus',\n        'SubmitTime',\n        'DatastoreId',\n        'InputDataConfig'\n      ],\n      members: {\n        JobId: {},\n        JobName: {},\n        JobStatus: {},\n        SubmitTime: {\n          type: 'timestamp'\n        },\n        EndTime: {\n          type: 'timestamp'\n        },\n        DatastoreId: {},\n        InputDataConfig: {\n          shape: 'S1d'\n        },\n        JobOutputDataConfig: {\n          shape: 'S15'\n        },\n        JobProgressReport: {\n          type: 'structure',\n          members: {\n            TotalNumberOfScannedFiles: {\n              type: 'long'\n            },\n            TotalSizeOfScannedFilesInMB: {\n              type: 'double'\n            },\n            TotalNumberOfImportedFiles: {\n              type: 'long'\n            },\n            TotalNumberOfResourcesScanned: {\n              type: 'long'\n            },\n            TotalNumberOfResourcesImported: {\n              type: 'long'\n            },\n            TotalNumberOfResourcesWithCustomerError: {\n              type: 'long'\n            },\n            TotalNumberOfFilesReadWithCustomerError: {\n              type: 'long'\n            },\n            Throughput: {\n              type: 'double'\n            }\n          }\n        },\n        DataAccessRoleArn: {},\n        Message: {}\n      }\n    },\n    S1d: {\n      type: 'structure',\n      members: {\n        S3Uri: {}\n      },\n      union: true\n    }\n  }\n}"]}