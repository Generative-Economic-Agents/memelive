{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/elasticloadbalancing-2012-06-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","protocol","serviceFullName","serviceId","signatureVersion","uid","xmlNamespace","operations","AddTags","input","type","required","members","LoadBalancerNames","shape","Tags","output","resultWrapper","ApplySecurityGroupsToLoadBalancer","LoadBalancerName","SecurityGroups","AttachLoadBalancerToSubnets","Subnets","ConfigureHealthCheck","HealthCheck","CreateAppCookieStickinessPolicy","PolicyName","CookieName","CreateLBCookieStickinessPolicy","CookieExpirationPeriod","CreateLoadBalancer","Listeners","AvailabilityZones","Scheme","DNSName","CreateLoadBalancerListeners","CreateLoadBalancerPolicy","PolicyTypeName","PolicyAttributes","member","AttributeName","AttributeValue","DeleteLoadBalancer","DeleteLoadBalancerListeners","LoadBalancerPorts","DeleteLoadBalancerPolicy","DeregisterInstancesFromLoadBalancer","Instances","DescribeAccountLimits","Marker","PageSize","Limits","Name","Max","NextMarker","DescribeInstanceHealth","InstanceStates","InstanceId","State","ReasonCode","Description","DescribeLoadBalancerAttributes","LoadBalancerAttributes","DescribeLoadBalancerPolicies","PolicyNames","PolicyDescriptions","PolicyAttributeDescriptions","DescribeLoadBalancerPolicyTypes","PolicyTypeNames","PolicyTypeDescriptions","PolicyAttributeTypeDescriptions","AttributeType","DefaultValue","Cardinality","DescribeLoadBalancers","LoadBalancerDescriptions","CanonicalHostedZoneName","CanonicalHostedZoneNameID","ListenerDescriptions","Listener","Policies","AppCookieStickinessPolicies","LBCookieStickinessPolicies","OtherPolicies","BackendServerDescriptions","InstancePort","VPCId","SourceSecurityGroup","OwnerAlias","GroupName","CreatedTime","DescribeTags","TagDescriptions","DetachLoadBalancerFromSubnets","DisableAvailabilityZonesForLoadBalancer","EnableAvailabilityZonesForLoadBalancer","ModifyLoadBalancerAttributes","RegisterInstancesWithLoadBalancer","RemoveTags","Key","SetLoadBalancerListenerSSLCertificate","LoadBalancerPort","SSLCertificateId","SetLoadBalancerPoliciesForBackendServer","SetLoadBalancerPoliciesOfListener","shapes","S2","S4","Value","Sa","Se","Si","Target","Interval","Timeout","UnhealthyThreshold","HealthyThreshold","Sx","Sy","Protocol","InstanceProtocol","S13","S1p","S2a","CrossZoneLoadBalancing","Enabled","AccessLog","S3BucketName","EmitInterval","S3BucketPrefix","ConnectionDraining","ConnectionSettings","IdleTimeout","AdditionalAttributes","S2s"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2012-06-01',\n    endpointPrefix: 'elasticloadbalancing',\n    protocol: 'query',\n    serviceFullName: 'Elastic Load Balancing',\n    serviceId: 'Elastic Load Balancing',\n    signatureVersion: 'v4',\n    uid: 'elasticloadbalancing-2012-06-01',\n    xmlNamespace: 'http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/'\n  },\n  operations: {\n    AddTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerNames',\n          'Tags'\n        ],\n        members: {\n          LoadBalancerNames: {\n            shape: 'S2'\n          },\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'AddTagsResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    ApplySecurityGroupsToLoadBalancer: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'SecurityGroups'\n        ],\n        members: {\n          LoadBalancerName: {},\n          SecurityGroups: {\n            shape: 'Sa'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'ApplySecurityGroupsToLoadBalancerResult',\n        type: 'structure',\n        members: {\n          SecurityGroups: {\n            shape: 'Sa'\n          }\n        }\n      }\n    },\n    AttachLoadBalancerToSubnets: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'Subnets'\n        ],\n        members: {\n          LoadBalancerName: {},\n          Subnets: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'AttachLoadBalancerToSubnetsResult',\n        type: 'structure',\n        members: {\n          Subnets: {\n            shape: 'Se'\n          }\n        }\n      }\n    },\n    ConfigureHealthCheck: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'HealthCheck'\n        ],\n        members: {\n          LoadBalancerName: {},\n          HealthCheck: {\n            shape: 'Si'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'ConfigureHealthCheckResult',\n        type: 'structure',\n        members: {\n          HealthCheck: {\n            shape: 'Si'\n          }\n        }\n      }\n    },\n    CreateAppCookieStickinessPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'PolicyName',\n          'CookieName'\n        ],\n        members: {\n          LoadBalancerName: {},\n          PolicyName: {},\n          CookieName: {}\n        }\n      },\n      output: {\n        resultWrapper: 'CreateAppCookieStickinessPolicyResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateLBCookieStickinessPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'PolicyName'\n        ],\n        members: {\n          LoadBalancerName: {},\n          PolicyName: {},\n          CookieExpirationPeriod: {\n            type: 'long'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'CreateLBCookieStickinessPolicyResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateLoadBalancer: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'Listeners'\n        ],\n        members: {\n          LoadBalancerName: {},\n          Listeners: {\n            shape: 'Sx'\n          },\n          AvailabilityZones: {\n            shape: 'S13'\n          },\n          Subnets: {\n            shape: 'Se'\n          },\n          SecurityGroups: {\n            shape: 'Sa'\n          },\n          Scheme: {},\n          Tags: {\n            shape: 'S4'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'CreateLoadBalancerResult',\n        type: 'structure',\n        members: {\n          DNSName: {}\n        }\n      }\n    },\n    CreateLoadBalancerListeners: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'Listeners'\n        ],\n        members: {\n          LoadBalancerName: {},\n          Listeners: {\n            shape: 'Sx'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'CreateLoadBalancerListenersResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    CreateLoadBalancerPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'PolicyName',\n          'PolicyTypeName'\n        ],\n        members: {\n          LoadBalancerName: {},\n          PolicyName: {},\n          PolicyTypeName: {},\n          PolicyAttributes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                AttributeName: {},\n                AttributeValue: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'CreateLoadBalancerPolicyResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteLoadBalancer: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName'\n        ],\n        members: {\n          LoadBalancerName: {}\n        }\n      },\n      output: {\n        resultWrapper: 'DeleteLoadBalancerResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteLoadBalancerListeners: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'LoadBalancerPorts'\n        ],\n        members: {\n          LoadBalancerName: {},\n          LoadBalancerPorts: {\n            type: 'list',\n            member: {\n              type: 'integer'\n            }\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'DeleteLoadBalancerListenersResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteLoadBalancerPolicy: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'PolicyName'\n        ],\n        members: {\n          LoadBalancerName: {},\n          PolicyName: {}\n        }\n      },\n      output: {\n        resultWrapper: 'DeleteLoadBalancerPolicyResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeregisterInstancesFromLoadBalancer: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'Instances'\n        ],\n        members: {\n          LoadBalancerName: {},\n          Instances: {\n            shape: 'S1p'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'DeregisterInstancesFromLoadBalancerResult',\n        type: 'structure',\n        members: {\n          Instances: {\n            shape: 'S1p'\n          }\n        }\n      }\n    },\n    DescribeAccountLimits: {\n      input: {\n        type: 'structure',\n        members: {\n          Marker: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'DescribeAccountLimitsResult',\n        type: 'structure',\n        members: {\n          Limits: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Name: {},\n                Max: {}\n              }\n            }\n          },\n          NextMarker: {}\n        }\n      }\n    },\n    DescribeInstanceHealth: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName'\n        ],\n        members: {\n          LoadBalancerName: {},\n          Instances: {\n            shape: 'S1p'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'DescribeInstanceHealthResult',\n        type: 'structure',\n        members: {\n          InstanceStates: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                InstanceId: {},\n                State: {},\n                ReasonCode: {},\n                Description: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeLoadBalancerAttributes: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName'\n        ],\n        members: {\n          LoadBalancerName: {}\n        }\n      },\n      output: {\n        resultWrapper: 'DescribeLoadBalancerAttributesResult',\n        type: 'structure',\n        members: {\n          LoadBalancerAttributes: {\n            shape: 'S2a'\n          }\n        }\n      }\n    },\n    DescribeLoadBalancerPolicies: {\n      input: {\n        type: 'structure',\n        members: {\n          LoadBalancerName: {},\n          PolicyNames: {\n            shape: 'S2s'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'DescribeLoadBalancerPoliciesResult',\n        type: 'structure',\n        members: {\n          PolicyDescriptions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                PolicyName: {},\n                PolicyTypeName: {},\n                PolicyAttributeDescriptions: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      AttributeName: {},\n                      AttributeValue: {}\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeLoadBalancerPolicyTypes: {\n      input: {\n        type: 'structure',\n        members: {\n          PolicyTypeNames: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'DescribeLoadBalancerPolicyTypesResult',\n        type: 'structure',\n        members: {\n          PolicyTypeDescriptions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                PolicyTypeName: {},\n                Description: {},\n                PolicyAttributeTypeDescriptions: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      AttributeName: {},\n                      AttributeType: {},\n                      Description: {},\n                      DefaultValue: {},\n                      Cardinality: {}\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeLoadBalancers: {\n      input: {\n        type: 'structure',\n        members: {\n          LoadBalancerNames: {\n            shape: 'S2'\n          },\n          Marker: {},\n          PageSize: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'DescribeLoadBalancersResult',\n        type: 'structure',\n        members: {\n          LoadBalancerDescriptions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                LoadBalancerName: {},\n                DNSName: {},\n                CanonicalHostedZoneName: {},\n                CanonicalHostedZoneNameID: {},\n                ListenerDescriptions: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      Listener: {\n                        shape: 'Sy'\n                      },\n                      PolicyNames: {\n                        shape: 'S2s'\n                      }\n                    }\n                  }\n                },\n                Policies: {\n                  type: 'structure',\n                  members: {\n                    AppCookieStickinessPolicies: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          PolicyName: {},\n                          CookieName: {}\n                        }\n                      }\n                    },\n                    LBCookieStickinessPolicies: {\n                      type: 'list',\n                      member: {\n                        type: 'structure',\n                        members: {\n                          PolicyName: {},\n                          CookieExpirationPeriod: {\n                            type: 'long'\n                          }\n                        }\n                      }\n                    },\n                    OtherPolicies: {\n                      shape: 'S2s'\n                    }\n                  }\n                },\n                BackendServerDescriptions: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    members: {\n                      InstancePort: {\n                        type: 'integer'\n                      },\n                      PolicyNames: {\n                        shape: 'S2s'\n                      }\n                    }\n                  }\n                },\n                AvailabilityZones: {\n                  shape: 'S13'\n                },\n                Subnets: {\n                  shape: 'Se'\n                },\n                VPCId: {},\n                Instances: {\n                  shape: 'S1p'\n                },\n                HealthCheck: {\n                  shape: 'Si'\n                },\n                SourceSecurityGroup: {\n                  type: 'structure',\n                  members: {\n                    OwnerAlias: {},\n                    GroupName: {}\n                  }\n                },\n                SecurityGroups: {\n                  shape: 'Sa'\n                },\n                CreatedTime: {\n                  type: 'timestamp'\n                },\n                Scheme: {}\n              }\n            }\n          },\n          NextMarker: {}\n        }\n      }\n    },\n    DescribeTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerNames'\n        ],\n        members: {\n          LoadBalancerNames: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'DescribeTagsResult',\n        type: 'structure',\n        members: {\n          TagDescriptions: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                LoadBalancerName: {},\n                Tags: {\n                  shape: 'S4'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    DetachLoadBalancerFromSubnets: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'Subnets'\n        ],\n        members: {\n          LoadBalancerName: {},\n          Subnets: {\n            shape: 'Se'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'DetachLoadBalancerFromSubnetsResult',\n        type: 'structure',\n        members: {\n          Subnets: {\n            shape: 'Se'\n          }\n        }\n      }\n    },\n    DisableAvailabilityZonesForLoadBalancer: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'AvailabilityZones'\n        ],\n        members: {\n          LoadBalancerName: {},\n          AvailabilityZones: {\n            shape: 'S13'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'DisableAvailabilityZonesForLoadBalancerResult',\n        type: 'structure',\n        members: {\n          AvailabilityZones: {\n            shape: 'S13'\n          }\n        }\n      }\n    },\n    EnableAvailabilityZonesForLoadBalancer: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'AvailabilityZones'\n        ],\n        members: {\n          LoadBalancerName: {},\n          AvailabilityZones: {\n            shape: 'S13'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'EnableAvailabilityZonesForLoadBalancerResult',\n        type: 'structure',\n        members: {\n          AvailabilityZones: {\n            shape: 'S13'\n          }\n        }\n      }\n    },\n    ModifyLoadBalancerAttributes: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'LoadBalancerAttributes'\n        ],\n        members: {\n          LoadBalancerName: {},\n          LoadBalancerAttributes: {\n            shape: 'S2a'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'ModifyLoadBalancerAttributesResult',\n        type: 'structure',\n        members: {\n          LoadBalancerName: {},\n          LoadBalancerAttributes: {\n            shape: 'S2a'\n          }\n        }\n      }\n    },\n    RegisterInstancesWithLoadBalancer: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'Instances'\n        ],\n        members: {\n          LoadBalancerName: {},\n          Instances: {\n            shape: 'S1p'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'RegisterInstancesWithLoadBalancerResult',\n        type: 'structure',\n        members: {\n          Instances: {\n            shape: 'S1p'\n          }\n        }\n      }\n    },\n    RemoveTags: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerNames',\n          'Tags'\n        ],\n        members: {\n          LoadBalancerNames: {\n            shape: 'S2'\n          },\n          Tags: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                Key: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'RemoveTagsResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    SetLoadBalancerListenerSSLCertificate: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'LoadBalancerPort',\n          'SSLCertificateId'\n        ],\n        members: {\n          LoadBalancerName: {},\n          LoadBalancerPort: {\n            type: 'integer'\n          },\n          SSLCertificateId: {}\n        }\n      },\n      output: {\n        resultWrapper: 'SetLoadBalancerListenerSSLCertificateResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    SetLoadBalancerPoliciesForBackendServer: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'InstancePort',\n          'PolicyNames'\n        ],\n        members: {\n          LoadBalancerName: {},\n          InstancePort: {\n            type: 'integer'\n          },\n          PolicyNames: {\n            shape: 'S2s'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'SetLoadBalancerPoliciesForBackendServerResult',\n        type: 'structure',\n        members: {}\n      }\n    },\n    SetLoadBalancerPoliciesOfListener: {\n      input: {\n        type: 'structure',\n        required: [\n          'LoadBalancerName',\n          'LoadBalancerPort',\n          'PolicyNames'\n        ],\n        members: {\n          LoadBalancerName: {},\n          LoadBalancerPort: {\n            type: 'integer'\n          },\n          PolicyNames: {\n            shape: 'S2s'\n          }\n        }\n      },\n      output: {\n        resultWrapper: 'SetLoadBalancerPoliciesOfListenerResult',\n        type: 'structure',\n        members: {}\n      }\n    }\n  },\n  shapes: {\n    S2: {\n      type: 'list',\n      member: {}\n    },\n    S4: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'Key'\n        ],\n        members: {\n          Key: {},\n          Value: {}\n        }\n      }\n    },\n    Sa: {\n      type: 'list',\n      member: {}\n    },\n    Se: {\n      type: 'list',\n      member: {}\n    },\n    Si: {\n      type: 'structure',\n      required: [\n        'Target',\n        'Interval',\n        'Timeout',\n        'UnhealthyThreshold',\n        'HealthyThreshold'\n      ],\n      members: {\n        Target: {},\n        Interval: {\n          type: 'integer'\n        },\n        Timeout: {\n          type: 'integer'\n        },\n        UnhealthyThreshold: {\n          type: 'integer'\n        },\n        HealthyThreshold: {\n          type: 'integer'\n        }\n      }\n    },\n    Sx: {\n      type: 'list',\n      member: {\n        shape: 'Sy'\n      }\n    },\n    Sy: {\n      type: 'structure',\n      required: [\n        'Protocol',\n        'LoadBalancerPort',\n        'InstancePort'\n      ],\n      members: {\n        Protocol: {},\n        LoadBalancerPort: {\n          type: 'integer'\n        },\n        InstanceProtocol: {},\n        InstancePort: {\n          type: 'integer'\n        },\n        SSLCertificateId: {}\n      }\n    },\n    S13: {\n      type: 'list',\n      member: {}\n    },\n    S1p: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          InstanceId: {}\n        }\n      }\n    },\n    S2a: {\n      type: 'structure',\n      members: {\n        CrossZoneLoadBalancing: {\n          type: 'structure',\n          required: [\n            'Enabled'\n          ],\n          members: {\n            Enabled: {\n              type: 'boolean'\n            }\n          }\n        },\n        AccessLog: {\n          type: 'structure',\n          required: [\n            'Enabled'\n          ],\n          members: {\n            Enabled: {\n              type: 'boolean'\n            },\n            S3BucketName: {},\n            EmitInterval: {\n              type: 'integer'\n            },\n            S3BucketPrefix: {}\n          }\n        },\n        ConnectionDraining: {\n          type: 'structure',\n          required: [\n            'Enabled'\n          ],\n          members: {\n            Enabled: {\n              type: 'boolean'\n            },\n            Timeout: {\n              type: 'integer'\n            }\n          }\n        },\n        ConnectionSettings: {\n          type: 'structure',\n          required: [\n            'IdleTimeout'\n          ],\n          members: {\n            IdleTimeout: {\n              type: 'integer'\n            }\n          }\n        },\n        AdditionalAttributes: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              Key: {},\n              Value: {}\n            }\n          }\n        }\n      }\n    },\n    S2s: {\n      type: 'list',\n      member: {}\n    }\n  }\n}"]}