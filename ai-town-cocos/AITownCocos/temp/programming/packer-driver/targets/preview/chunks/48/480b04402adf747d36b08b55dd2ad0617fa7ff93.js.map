{"version":3,"sources":["file:///Users/feiwang/workSpace/AITown/cutepet/assets/src/game/components/listViewCtrl4.ts"],"names":["_decorator","Component","Node","ScrollView","Vec3","instantiate","ListItemComponent","ccclass","property","menu","_temp_vec3","ListViewCtrl4","_items","_itemTemplateUITrans","_itemdata","_conNodeArr","onLoad","initData","itemdata","reset","initialize","scheduleOnce","i","length","getComponent","setData","scrollView","scrollToBottom","content","removeAllChildren","item","itemTemplate","setPosition","addChild","indexlabelComp","index_label","string","push","cellnode","getChildByName","active","update","dt","addItem","newItem","removeItem","onScrolling","onScrollEnded","event","console","log","scrollOffset","getScrollOffset","maxScrollOffset","getMaxScrollOffset","y","node","emit","getItemAtBottom","position"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, ScrollView, Label, Button, Vec3, UITransform, instantiate, error, Vec2, System, Color, Layout } from \"cc\";\nimport { ListItemComponent } from \"./ListItemComponent\";\nimport { observer } from \"../App\";\nconst { ccclass, property, menu } = _decorator;\n\nconst _temp_vec3 = new Vec3();\n/**\n * scrollview 操作版\n * 遮罩显示list cell\n * cell length 不限制 \n * 适用cell 高度自适应显示\n */\n@ccclass(\"ListViewCtrl4\")\n@menu('UI/ListViewCtrl4')\nexport class ListViewCtrl4 extends Component {\n    @property(Node)\n    public itemTemplate: Node = null!;\n    @property(Node)\n    public cellnode: Node = null!;\n\n\n    @property(Node)\n    public content: Node = null!;\n    @property(ScrollView)\n    public scrollView: ScrollView = null!;\n    private _items: Node[] = [];\n    private _itemTemplateUITrans!: UITransform;\n\n    onLoad() {\n    }\n\n    //=================外部调用设置=======================\n    private _itemdata: any[] = null;\n    /**\n     * 设置spwan,itemdata;\n     * \n     */\n    public initData(itemdata) {\n        this.reset();\n        this._itemdata = itemdata;\n        this.initialize();\n\n        this.scheduleOnce(() => {\n            for (let i = 0; i < this._itemdata.length; i++) {\n                this._items[i].getComponent(ListItemComponent).setData(this._itemdata[i]);\n            }\n            this.scheduleOnce(() => {\n                this.scrollView.scrollToBottom(1);\n            }, 0.1);\n        }, 0.1)\n        // this.scrollView.node.on('scroll-ended', this.onScrollEnded, this);//暂不处理\n    }\n\n    public reset() {\n        this._itemdata = [];\n        this.content.removeAllChildren();\n        this._items = [];\n    }\n    //=================外部调用设置end=======================\n    private _conNodeArr: Node[] = [];\n    // 初始化 item\n    initialize() {\n\n        // for (let index = 0; index < 101; index++) {\n        //     let node = new Node();\n        //     let layout = node.addComponent(Layout);\n        //     layout.type = 2;\n        //     layout.resizeMode =1; \n        //     node.setPosition(0, 0, 0);\n        //     this.content.addChild(node);\n\n        // }\n        for (let i = 0; i < this._itemdata.length; i++) { // spawn items, we only need to do this once\n            let item = instantiate(this.itemTemplate) as Node;\n            item.setPosition(0, 0, 0);\n            this.content.addChild(item);\n            // let itemUITrans = item.getComponent(UITransform);\n            const indexlabelComp = item.getComponent(ListItemComponent)!.index_label;\n            indexlabelComp.string = i + 1 + \"\";\n            this._items.push(item);\n        }\n        if (this._itemdata.length >= 100) {\n            let item = instantiate(this.cellnode) as Node;\n            item.getChildByName(\"Label\").active = true;\n            item.setPosition(0, 0, 0);\n            this.content.addChild(item);\n        }\n    }\n\n\n\n    update(dt: number) {\n        if (!this._itemTemplateUITrans) {\n            return;//未初始化；\n        }\n    }\n\n    addItem() {\n        // 创建新元素\n        let newItem = instantiate(this.itemTemplate) as Node;\n        // 将新元素添加到内容节点\n        this.content.addChild(newItem);\n        // 更新 ScrollView 的 content 大小\n        //  this.content.getComponent(UITransform).height += newItem.getComponent(UITransform).height;\n    }\n\n    removeItem() {\n\n    }\n\n    onScrolling() {\n        // let scrollOffset = this.scrollView.getScrollOffset(); // 获取滚动偏移量\n        // let maxScrollOffset = this.scrollView.getMaxScrollOffset(); // 获取最大滚动偏移量\n        // console.log(scrollOffset,maxScrollOffset);\n        // if (maxScrollOffset.y - scrollOffset.y > 300 ) {//还差300滚动到顶部的时候，开始获取数据\n        //     // this.addItem();\n        // }\n    }\n    onScrollEnded(event: Event) {\n        // 滚动结束事件被触发，可以在这里处理回弹结束的逻辑\n        console.log('Scrolling has ended');\n        // 你可以在这里添加更多的判断逻辑来确定是否是回弹事件\n        let scrollOffset = this.scrollView.getScrollOffset(); // 获取滚动偏移量\n        let maxScrollOffset = this.scrollView.getMaxScrollOffset(); // 获取最大滚动偏移量\n        if (maxScrollOffset.y - scrollOffset.y > 300) {//还差300滚动到顶部的时候，开始获取数据\n            this.node.emit(\"scrollended\");\n        }\n    }\n\n    getItemAtBottom() {\n        let item = this._items[0];\n        for (let i = 1; i < this._items.length; ++i) {\n            if (item.position.y > this._items[i].position.y) {\n                item = this._items[i];\n            }\n        }\n        return item;\n    }\n\n}\n\n"]}