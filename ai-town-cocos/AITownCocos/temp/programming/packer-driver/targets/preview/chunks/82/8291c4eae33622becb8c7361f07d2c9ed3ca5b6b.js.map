{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/sshpk/lib/private-key.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","_req5","_req6","_req7","_req8","_req9","_req10","_req11","_req12","_req13","_req14","_req15","_req16","_req17","_req18","_req19","url","define","exports","require","module","__filename","__dirname","PrivateKey","assert","Buffer","algs","crypto","Fingerprint","Signature","errs","util","utils","dhe","generateECDSA","generateED25519","edCompat","nacl","Key","InvalidAlgorithmError","KeyParseError","KeyEncryptedError","formats","opts","object","call","_pubCache","undefined","inherits","prototype","toBuffer","format","options","string","optionalObject","write","hash","algo","type","toPublic","fingerprint","algInfo","info","pubParts","i","parts","length","p","push","part","source","comment","derive","newType","priv","pub","pair","k","data","slice","box","keyPair","fromSecretKey","Uint8Array","from","publicKey","name","mpNormalize","sign","fromSeed","Error","createVerify","hashAlgo","createSign","defaultHashAlgorithm","Signer","v","nm","err","toUpperCase","e","message","match","ok","oldSign","bind","key","curve","sig","parse","hashAlgorithm","buffer","filename","optionalString","read","isPrivateKey","obj","ver","isCompatible","generate","_sshpkApiVersion","_oldVersionDetect","func","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'assert-plus';\nimport { __cjsMetaURL as _req0} from 'safer-buffer';\nimport { __cjsMetaURL as _req1} from './algs';\nimport { __cjsMetaURL as _req2} from 'crypto';\nimport { __cjsMetaURL as _req3} from './fingerprint';\nimport { __cjsMetaURL as _req4} from './signature';\nimport { __cjsMetaURL as _req5} from './errors';\nimport { __cjsMetaURL as _req6} from 'util';\nimport { __cjsMetaURL as _req7} from './utils';\nimport { __cjsMetaURL as _req8} from './dhe';\nimport { __cjsMetaURL as _req9} from './ed-compat';\nimport { __cjsMetaURL as _req10} from 'tweetnacl';\nimport { __cjsMetaURL as _req11} from './key';\nimport { __cjsMetaURL as _req12} from './formats/auto';\nimport { __cjsMetaURL as _req13} from './formats/pem';\nimport { __cjsMetaURL as _req14} from './formats/pkcs1';\nimport { __cjsMetaURL as _req15} from './formats/pkcs8';\nimport { __cjsMetaURL as _req16} from './formats/rfc4253';\nimport { __cjsMetaURL as _req17} from './formats/ssh-private';\nimport { __cjsMetaURL as _req18} from './formats/dnssec';\nimport { __cjsMetaURL as _req19} from './formats/putty';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // Copyright 2017 Joyent, Inc.\n\n module.exports = PrivateKey;\n\n var assert = require('assert-plus');\n var Buffer = require('safer-buffer').Buffer;\n var algs = require('./algs');\n var crypto = require('crypto');\n var Fingerprint = require('./fingerprint');\n var Signature = require('./signature');\n var errs = require('./errors');\n var util = require('util');\n var utils = require('./utils');\n var dhe = require('./dhe');\n var generateECDSA = dhe.generateECDSA;\n var generateED25519 = dhe.generateED25519;\n var edCompat = require('./ed-compat');\n var nacl = require('tweetnacl');\n\n var Key = require('./key');\n\n var InvalidAlgorithmError = errs.InvalidAlgorithmError;\n var KeyParseError = errs.KeyParseError;\n var KeyEncryptedError = errs.KeyEncryptedError;\n\n var formats = {};\n formats['auto'] = require('./formats/auto');\n formats['pem'] = require('./formats/pem');\n formats['pkcs1'] = require('./formats/pkcs1');\n formats['pkcs8'] = require('./formats/pkcs8');\n formats['rfc4253'] = require('./formats/rfc4253');\n formats['ssh-private'] = require('./formats/ssh-private');\n formats['openssh'] = formats['ssh-private'];\n formats['ssh'] = formats['ssh-private'];\n formats['dnssec'] = require('./formats/dnssec');\n formats['putty'] = require('./formats/putty');\n\n function PrivateKey(opts) {\n \tassert.object(opts, 'options');\n \tKey.call(this, opts);\n\n \tthis._pubCache = undefined;\n }\n util.inherits(PrivateKey, Key);\n\n PrivateKey.formats = formats;\n\n PrivateKey.prototype.toBuffer = function (format, options) {\n \tif (format === undefined)\n \t\tformat = 'pkcs1';\n \tassert.string(format, 'format');\n \tassert.object(formats[format], 'formats[format]');\n \tassert.optionalObject(options, 'options');\n\n \treturn (formats[format].write(this, options));\n };\n\n PrivateKey.prototype.hash = function (algo, type) {\n \treturn (this.toPublic().hash(algo, type));\n };\n\n PrivateKey.prototype.fingerprint = function (algo, type) {\n \treturn (this.toPublic().fingerprint(algo, type));\n };\n\n PrivateKey.prototype.toPublic = function () {\n \tif (this._pubCache)\n \t\treturn (this._pubCache);\n\n \tvar algInfo = algs.info[this.type];\n \tvar pubParts = [];\n \tfor (var i = 0; i < algInfo.parts.length; ++i) {\n \t\tvar p = algInfo.parts[i];\n \t\tpubParts.push(this.part[p]);\n \t}\n\n \tthis._pubCache = new Key({\n \t\ttype: this.type,\n \t\tsource: this,\n \t\tparts: pubParts\n \t});\n \tif (this.comment)\n \t\tthis._pubCache.comment = this.comment;\n \treturn (this._pubCache);\n };\n\n PrivateKey.prototype.derive = function (newType) {\n \tassert.string(newType, 'type');\n \tvar priv, pub, pair;\n\n \tif (this.type === 'ed25519' && newType === 'curve25519') {\n \t\tpriv = this.part.k.data;\n \t\tif (priv[0] === 0x00)\n \t\t\tpriv = priv.slice(1);\n\n \t\tpair = nacl.box.keyPair.fromSecretKey(new Uint8Array(priv));\n \t\tpub = Buffer.from(pair.publicKey);\n\n \t\treturn (new PrivateKey({\n \t\t\ttype: 'curve25519',\n \t\t\tparts: [\n \t\t\t\t{ name: 'A', data: utils.mpNormalize(pub) },\n \t\t\t\t{ name: 'k', data: utils.mpNormalize(priv) }\n \t\t\t]\n \t\t}));\n \t} else if (this.type === 'curve25519' && newType === 'ed25519') {\n \t\tpriv = this.part.k.data;\n \t\tif (priv[0] === 0x00)\n \t\t\tpriv = priv.slice(1);\n\n \t\tpair = nacl.sign.keyPair.fromSeed(new Uint8Array(priv));\n \t\tpub = Buffer.from(pair.publicKey);\n\n \t\treturn (new PrivateKey({\n \t\t\ttype: 'ed25519',\n \t\t\tparts: [\n \t\t\t\t{ name: 'A', data: utils.mpNormalize(pub) },\n \t\t\t\t{ name: 'k', data: utils.mpNormalize(priv) }\n \t\t\t]\n \t\t}));\n \t}\n \tthrow (new Error('Key derivation not supported from ' + this.type +\n \t    ' to ' + newType));\n };\n\n PrivateKey.prototype.createVerify = function (hashAlgo) {\n \treturn (this.toPublic().createVerify(hashAlgo));\n };\n\n PrivateKey.prototype.createSign = function (hashAlgo) {\n \tif (hashAlgo === undefined)\n \t\thashAlgo = this.defaultHashAlgorithm();\n \tassert.string(hashAlgo, 'hash algorithm');\n\n \t/* ED25519 is not supported by OpenSSL, use a javascript impl. */\n \tif (this.type === 'ed25519' && edCompat !== undefined)\n \t\treturn (new edCompat.Signer(this, hashAlgo));\n \tif (this.type === 'curve25519')\n \t\tthrow (new Error('Curve25519 keys are not suitable for ' +\n \t\t    'signing or verification'));\n\n \tvar v, nm, err;\n \ttry {\n \t\tnm = hashAlgo.toUpperCase();\n \t\tv = crypto.createSign(nm);\n \t} catch (e) {\n \t\terr = e;\n \t}\n \tif (v === undefined || (err instanceof Error &&\n \t    err.message.match(/Unknown message digest/))) {\n \t\tnm = 'RSA-';\n \t\tnm += hashAlgo.toUpperCase();\n \t\tv = crypto.createSign(nm);\n \t}\n \tassert.ok(v, 'failed to create verifier');\n \tvar oldSign = v.sign.bind(v);\n \tvar key = this.toBuffer('pkcs1');\n \tvar type = this.type;\n \tvar curve = this.curve;\n \tv.sign = function () {\n \t\tvar sig = oldSign(key);\n \t\tif (typeof (sig) === 'string')\n \t\t\tsig = Buffer.from(sig, 'binary');\n \t\tsig = Signature.parse(sig, type, 'asn1');\n \t\tsig.hashAlgorithm = hashAlgo;\n \t\tsig.curve = curve;\n \t\treturn (sig);\n \t};\n \treturn (v);\n };\n\n PrivateKey.parse = function (data, format, options) {\n \tif (typeof (data) !== 'string')\n \t\tassert.buffer(data, 'data');\n \tif (format === undefined)\n \t\tformat = 'auto';\n \tassert.string(format, 'format');\n \tif (typeof (options) === 'string')\n \t\toptions = { filename: options };\n \tassert.optionalObject(options, 'options');\n \tif (options === undefined)\n \t\toptions = {};\n \tassert.optionalString(options.filename, 'options.filename');\n \tif (options.filename === undefined)\n \t\toptions.filename = '(unnamed)';\n\n \tassert.object(formats[format], 'formats[format]');\n\n \ttry {\n \t\tvar k = formats[format].read(data, options);\n \t\tassert.ok(k instanceof PrivateKey, 'key is not a private key');\n \t\tif (!k.comment)\n \t\t\tk.comment = options.filename;\n \t\treturn (k);\n \t} catch (e) {\n \t\tif (e.name === 'KeyEncryptedError')\n \t\t\tthrow (e);\n \t\tthrow (new KeyParseError(options.filename, format, e));\n \t}\n };\n\n PrivateKey.isPrivateKey = function (obj, ver) {\n \treturn (utils.isCompatible(obj, PrivateKey, ver));\n };\n\n PrivateKey.generate = function (type, options) {\n \tif (options === undefined)\n \t\toptions = {};\n \tassert.object(options, 'options');\n\n \tswitch (type) {\n \tcase 'ecdsa':\n \t\tif (options.curve === undefined)\n \t\t\toptions.curve = 'nistp256';\n \t\tassert.string(options.curve, 'options.curve');\n \t\treturn (generateECDSA(options.curve));\n \tcase 'ed25519':\n \t\treturn (generateED25519());\n \tdefault:\n \t\tthrow (new Error('Key generation not supported with key ' +\n \t\t    'type \"' + type + '\"'));\n \t}\n };\n\n /*\n  * API versions for PrivateKey:\n  * [1,0] -- initial ver\n  * [1,1] -- added auto, pkcs[18], openssh/ssh-private formats\n  * [1,2] -- added defaultHashAlgorithm\n  * [1,3] -- added derive, ed, createDH\n  * [1,4] -- first tagged version\n  * [1,5] -- changed ed25519 part names and format\n  * [1,6] -- type arguments for hash() and fingerprint()\n  */\n PrivateKey.prototype._sshpkApiVersion = [1, 6];\n\n PrivateKey._oldVersionDetect = function (obj) {\n \tassert.func(obj.toPublic);\n \tassert.func(obj.createSign);\n \tif (obj.derive)\n \t\treturn ([1, 3]);\n \tif (obj.defaultHashAlgorithm)\n \t\treturn ([1, 2]);\n \tif (obj.formats['auto'])\n \t\treturn ([1, 1]);\n \treturn ([1, 0]);\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'assert-plus': _req,\n  'safer-buffer': _req0,\n  './algs': _req1,\n  'crypto': _req2,\n  './fingerprint': _req3,\n  './signature': _req4,\n  './errors': _req5,\n  'util': _req6,\n  './utils': _req7,\n  './dhe': _req8,\n  './ed-compat': _req9,\n  'tweetnacl': _req10,\n  './key': _req11,\n  './formats/auto': _req12,\n  './formats/pem': _req13,\n  './formats/pkcs1': _req14,\n  './formats/pkcs8': _req15,\n  './formats/rfc4253': _req16,\n  './formats/ssh-private': _req17,\n  './formats/dnssec': _req18,\n  './formats/putty': _req19,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}