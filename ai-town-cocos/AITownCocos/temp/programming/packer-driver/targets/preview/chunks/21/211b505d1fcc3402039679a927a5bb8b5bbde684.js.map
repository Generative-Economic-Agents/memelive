{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/dynamodb/numberValue.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","util","DynamoDBNumberValue","inherit","constructor","NumberValue","value","wrapperName","toString","toJSON","toNumber","Number","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;;8BAEHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,IAAI,GAAGJ,OAAO,CAAC,SAAD,CAAP,CAAmBI,IAA9B;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,YAAIC,mBAAmB,GAAGD,IAAI,CAACE,OAAL,CAAa;AACrCC,UAAAA,WAAW,EAAE,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC,iBAAKC,WAAL,GAAmB,aAAnB;AACA,iBAAKD,KAAL,GAAaA,KAAK,CAACE,QAAN,EAAb;AACD,WAJoC;;AAMrC;AACH;AACA;AACGC,UAAAA,MAAM,EAAE,kBAAY;AAClB,mBAAO,KAAKC,QAAL,EAAP;AACD,WAXoC;;AAarC;AACH;AACA;AACGA,UAAAA,QAAQ,EAAE,oBAAY;AACpB,mBAAOC,MAAM,CAAC,KAAKL,KAAN,CAAb;AACD,WAlBoC;;AAoBrC;AACH;AACA;AACA;AACGE,UAAAA,QAAQ,EAAE,oBAAY;AACpB,mBAAO,KAAKF,KAAZ;AACD;AA1BoC,SAAb,CAA1B;AA6BA;AACD;AACA;;AACCR,QAAAA,MAAM,CAACF,OAAP,GAAiBM,mBAAjB,CA9C0F,CAiD3F;;AAEA,2BAAAU,WAAW,GAAGd,MAAM,CAACF,OAArB;AAGC,OAtDD,EAsDG,OAAO;AACR,mBAAWJ;AADH,OAAP,CAtDH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var util = require('../core').util;\n\n /**\n  * An object recognizable as a numeric value that stores the underlying number\n  * as a string.\n  *\n  * Intended to be a deserialization target for the DynamoDB Document Client when\n  * the `wrapNumbers` flag is set. This allows for numeric values that lose\n  * precision when converted to JavaScript's `number` type.\n  */\n var DynamoDBNumberValue = util.inherit({\n   constructor: function NumberValue(value) {\n     this.wrapperName = 'NumberValue';\n     this.value = value.toString();\n   },\n\n   /**\n    * Render the underlying value as a number when converting to JSON.\n    */\n   toJSON: function () {\n     return this.toNumber();\n   },\n\n   /**\n    * Convert the underlying value to a JavaScript number.\n    */\n   toNumber: function () {\n     return Number(this.value);\n   },\n\n   /**\n    * Return a string representing the unaltered value provided to the\n    * constructor.\n    */\n   toString: function () {\n     return this.value;\n   }\n });\n\n /**\n  * @api private\n  */\n module.exports = DynamoDBNumberValue;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../core': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}