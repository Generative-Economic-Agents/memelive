{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/lodash-es/isPlainObject.js"],"names":["isPlainObject","value","isObjectLike","baseGetTag","objectTag","proto","getPrototype","Ctor","hasOwnProperty","call","constructor","funcToString","objectCtorString","funcProto","Function","prototype","objectProto","Object","toString"],"mappings":";;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAI,CAACC,YAAY,CAACD,KAAD,CAAb,IAAwBE,UAAU,CAACF,KAAD,CAAV,IAAqBG,SAAjD,EAA4D;AAC1D,aAAO,KAAP;AACD;;AACD,QAAIC,KAAK,GAAGC,YAAY,CAACL,KAAD,CAAxB;;AACA,QAAII,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAO,IAAP;AACD;;AACD,QAAIE,IAAI,GAAGC,cAAc,CAACC,IAAf,CAAoBJ,KAApB,EAA2B,aAA3B,KAA6CA,KAAK,CAACK,WAA9D;AACA,WAAO,OAAOH,IAAP,IAAe,UAAf,IAA6BA,IAAI,YAAYA,IAA7C,IACLI,YAAY,CAACF,IAAb,CAAkBF,IAAlB,KAA2BK,gBAD7B;AAED;;;;AA3DMT,MAAAA,U;;AACAG,MAAAA,Y;;AACAJ,MAAAA,Y;;;AAEP;AACIE,MAAAA,S,GAAY,iB;AAEhB;;AACIS,MAAAA,S,GAAYC,QAAQ,CAACC,S;AACrBC,MAAAA,W,GAAcC,MAAM,CAACF,S;AAEzB;;AACIJ,MAAAA,Y,GAAeE,SAAS,CAACK,Q;AAE7B;;AACIV,MAAAA,c,GAAiBQ,WAAW,CAACR,c;AAEjC;;AACII,MAAAA,gB,GAAmBD,YAAY,CAACF,IAAb,CAAkBQ,MAAlB,C;;yBA2CRjB,a","sourcesContent":["import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n"]}