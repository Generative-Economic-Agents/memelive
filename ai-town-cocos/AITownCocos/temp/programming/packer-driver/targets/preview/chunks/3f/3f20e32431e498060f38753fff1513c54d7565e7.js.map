{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_initCloneByTag.js"],"names":["initCloneByTag","object","tag","isDeep","Ctor","constructor","arrayBufferTag","cloneArrayBuffer","boolTag","dateTag","dataViewTag","cloneDataView","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","cloneTypedArray","mapTag","numberTag","stringTag","regexpTag","cloneRegExp","setTag","symbolTag","cloneSymbol"],"mappings":";;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,cAAT,CAAwBC,MAAxB,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6C;AAC3C,QAAIC,IAAI,GAAGH,MAAM,CAACI,WAAlB;;AACA,YAAQH,GAAR;AACE,WAAKI,cAAL;AACE,eAAOC,gBAAgB,CAACN,MAAD,CAAvB;;AAEF,WAAKO,OAAL;AACA,WAAKC,OAAL;AACE,eAAO,IAAIL,IAAJ,CAAS,CAACH,MAAV,CAAP;;AAEF,WAAKS,WAAL;AACE,eAAOC,aAAa,CAACV,MAAD,EAASE,MAAT,CAApB;;AAEF,WAAKS,UAAL;AAAiB,WAAKC,UAAL;AACjB,WAAKC,OAAL;AAAc,WAAKC,QAAL;AAAe,WAAKC,QAAL;AAC7B,WAAKC,QAAL;AAAe,WAAKC,eAAL;AAAsB,WAAKC,SAAL;AAAgB,WAAKC,SAAL;AACnD,eAAOC,eAAe,CAACpB,MAAD,EAASE,MAAT,CAAtB;;AAEF,WAAKmB,MAAL;AACE,eAAO,IAAIlB,IAAJ,EAAP;;AAEF,WAAKmB,SAAL;AACA,WAAKC,SAAL;AACE,eAAO,IAAIpB,IAAJ,CAASH,MAAT,CAAP;;AAEF,WAAKwB,SAAL;AACE,eAAOC,WAAW,CAACzB,MAAD,CAAlB;;AAEF,WAAK0B,MAAL;AACE,eAAO,IAAIvB,IAAJ,EAAP;;AAEF,WAAKwB,SAAL;AACE,eAAOC,WAAW,CAAC5B,MAAD,CAAlB;AA9BJ;AAgCD;;;;AA1EMM,MAAAA,gB;;AACAI,MAAAA,a;;AACAe,MAAAA,W;;AACAG,MAAAA,W;;AACAR,MAAAA,e;;;AAEP;AACIb,MAAAA,O,GAAU,kB;AACVC,MAAAA,O,GAAU,e;AACVa,MAAAA,M,GAAS,c;AACTC,MAAAA,S,GAAY,iB;AACZE,MAAAA,S,GAAY,iB;AACZE,MAAAA,M,GAAS,c;AACTH,MAAAA,S,GAAY,iB;AACZI,MAAAA,S,GAAY,iB;AAEZtB,MAAAA,c,GAAiB,sB;AACjBI,MAAAA,W,GAAc,mB;AACdE,MAAAA,U,GAAa,uB;AACbC,MAAAA,U,GAAa,uB;AACbC,MAAAA,O,GAAU,oB;AACVC,MAAAA,Q,GAAW,qB;AACXC,MAAAA,Q,GAAW,qB;AACXC,MAAAA,Q,GAAW,qB;AACXC,MAAAA,e,GAAkB,4B;AAClBC,MAAAA,S,GAAY,sB;AACZC,MAAAA,S,GAAY,sB;;yBAkDDpB,c","sourcesContent":["import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n"]}