{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/uri-js/dist/es5/uri.all.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","global","factory","amd","URI","merge","_len","arguments","length","sets","Array","_key","slice","xl","x","join","subexp","str","typeOf","o","undefined","Object","prototype","toString","call","split","pop","shift","toLowerCase","toUpperCase","toArray","obj","setInterval","assign","target","source","key","buildExps","isIRI","ALPHA$$","CR$","DIGIT$$","DQUOTE$$","HEXDIG$$","LF$$","SP$$","PCT_ENCODED$","GEN_DELIMS$$","SUB_DELIMS$$","RESERVED$$","UCSCHAR$$","IPRIVATE$$","UNRESERVED$$","SCHEME$","USERINFO$","DEC_OCTET$","DEC_OCTET_RELAXED$","IPV4ADDRESS$","H16$","LS32$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","IPV6ADDRESS$","ZONEID$","IPV6ADDRZ$","IPV6ADDRZ_RELAXED$","IPVFUTURE$","IP_LITERAL$","REG_NAME$","HOST$","PORT$","AUTHORITY$","PCHAR$","SEGMENT$","SEGMENT_NZ$","SEGMENT_NZ_NC$","PATH_ABEMPTY$","PATH_ABSOLUTE$","PATH_NOSCHEME$","PATH_ROOTLESS$","PATH_EMPTY$","PATH$","QUERY$","FRAGMENT$","HIER_PART$","URI$","RELATIVE_PART$","RELATIVE$","URI_REFERENCE$","ABSOLUTE_URI$","GENERIC_REF$","RELATIVE_REF$","ABSOLUTE_REF$","SAMEDOC_REF$","AUTHORITY_REF$","NOT_SCHEME","RegExp","NOT_USERINFO","NOT_HOST","NOT_PATH","NOT_PATH_NOSCHEME","NOT_QUERY","NOT_FRAGMENT","ESCAPE","UNRESERVED","OTHER_CHARS","PCT_ENCODED","IPV4ADDRESS","IPV6ADDRESS","URI_PROTOCOL","IRI_PROTOCOL","slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","_i","Symbol","iterator","_s","next","done","push","value","err","isArray","TypeError","toConsumableArray","arr2","from","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","error$1","type","RangeError","map","array","fn","result","mapDomain","string","parts","replace","labels","encoded","ucs2decode","output","counter","charCodeAt","extra","ucs2encode","fromCodePoint","apply","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","input","inputLength","n","bias","basic","lastIndexOf","j","index","oldi","w","t","baseMinusT","out","splice","encode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_currentValue2","return","basicLength","handledCPCount","m","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","currentValue","handledCPCountPlusOne","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_currentValue","q","qMinusT","toUnicode","test","toASCII","punycode","SCHEMES","pctEncChar","chr","c","e","pctDecChars","newStr","il","parseInt","substr","c2","_c","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","match","scheme","userinfo","host","path","query","fragment","_stripLeadingZeros","_normalizeIPv4","matches","_matches","address","_normalizeIPv6","_matches2","zone","_address$toLowerCase$","reverse","_address$toLowerCase$2","last","first","firstFields","lastFields","isLastFieldIPv4Address","fieldCount","lastFieldsStart","fields","allZeroFields","reduce","acc","field","lastLongest","longestZeroFields","sort","a","b","newHost","newFirst","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","parse","uriString","options","iri","reference","port","isNaN","indexOf","error","schemeHandler","unicodeSupport","domainHost","_recomposeAuthority","uriTokens","_","$1","$2","RDS1","RDS2","RDS3","RDS5","removeDotSegments","im","s","Error","serialize","authority","charAt","absolutePath","resolveComponents","relative","skipNormalization","tolerant","resolve","baseURI","relativeURI","schemelessOptions","normalize","uri","equal","uriA","uriB","escapeComponent","unescapeComponent","handler","secure","handler$1","isSecure","wsComponents","handler$2","resourceName","_wsComponents$resourc","_wsComponents$resourc2","handler$3","O","ATEXT$$","QTEXT$$","VCHAR$$","SOME_DELIMS$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","handler$4","parse$$1","mailtoComponents","to","unknownHeaders","headers","hfields","hfield","toAddrs","_x","_xl","subject","body","_x2","_xl2","addr","serialize$$1","toAddr","atIdx","localPart","domain","name","URN_PARSE","handler$5","urnComponents","nid","nss","urnScheme","uriComponents","UUID","handler$6","uuidComponents","uuid","defineProperty","_cjsExports","_SCHEMES","_pctEncChar","_pctDecChars","_parse","_removeDotSegments","_serialize","_resolveComponents","_resolve","_normalize","_equal","_escapeComponent","_unescapeComponent","___esModule","__esModule"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nlet _SCHEMES;\nlet _pctEncChar;\nlet _pctDecChars;\nlet _parse;\nlet _removeDotSegments;\nlet _serialize;\nlet _resolveComponents;\nlet _resolve;\nlet _normalize;\nlet _equal;\nlet _escapeComponent;\nlet _unescapeComponent;\nlet ___esModule;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n /** @license URI.js v4.4.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */\n (function (global, factory) {\n \ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n \ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n \t(factory((global.URI = global.URI || {})));\n }(this, (function (exports) { 'use strict';\n\n function merge() {\n     for (var _len = arguments.length, sets = Array(_len), _key = 0; _key < _len; _key++) {\n         sets[_key] = arguments[_key];\n     }\n\n     if (sets.length > 1) {\n         sets[0] = sets[0].slice(0, -1);\n         var xl = sets.length - 1;\n         for (var x = 1; x < xl; ++x) {\n             sets[x] = sets[x].slice(1, -1);\n         }\n         sets[xl] = sets[xl].slice(1);\n         return sets.join('');\n     } else {\n         return sets[0];\n     }\n }\n function subexp(str) {\n     return \"(?:\" + str + \")\";\n }\n function typeOf(o) {\n     return o === undefined ? \"undefined\" : o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase();\n }\n function toUpperCase(str) {\n     return str.toUpperCase();\n }\n function toArray(obj) {\n     return obj !== undefined && obj !== null ? obj instanceof Array ? obj : typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj) : [];\n }\n function assign(target, source) {\n     var obj = target;\n     if (source) {\n         for (var key in source) {\n             obj[key] = source[key];\n         }\n     }\n     return obj;\n }\n\n function buildExps(isIRI) {\n     var ALPHA$$ = \"[A-Za-z]\",\n         CR$ = \"[\\\\x0D]\",\n         DIGIT$$ = \"[0-9]\",\n         DQUOTE$$ = \"[\\\\x22]\",\n         HEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),\n         //case-insensitive\n     LF$$ = \"[\\\\x0A]\",\n         SP$$ = \"[\\\\x20]\",\n         PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),\n         //expanded\n     GEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n         SUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n         RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n         UCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",\n         //subset, excludes bidi control characters\n     IPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",\n         //subset\n     UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n         SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n         USERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n         DEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n         DEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),\n         //relaxed parsing rules\n     IPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n         H16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n         LS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n         IPV6ADDRESS1$ = subexp(subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$),\n         //                           6( h16 \":\" ) ls32\n     IPV6ADDRESS2$ = subexp(\"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$),\n         //                      \"::\" 5( h16 \":\" ) ls32\n     IPV6ADDRESS3$ = subexp(subexp(H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$),\n         //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n     IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$),\n         //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n     IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$),\n         //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n     IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" + H16$ + \"\\\\:\" + LS32$),\n         //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n     IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\" + LS32$),\n         //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n     IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\" + H16$),\n         //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n     IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"),\n         //[ *6( h16 \":\" ) h16 ] \"::\"\n     IPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n         ZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),\n         //RFC 6874\n     IPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),\n         //RFC 6874\n     IPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),\n         //RFC 6874, with relaxed parsing rules\n     IPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n         IP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),\n         //RFC 6874\n     REG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n         HOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n         PORT$ = subexp(DIGIT$$ + \"*\"),\n         AUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n         PCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n         SEGMENT$ = subexp(PCHAR$ + \"*\"),\n         SEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n         SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n         PATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n         PATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),\n         //simplified\n     PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),\n         //simplified\n     PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),\n         //simplified\n     PATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n         PATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n         QUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n         FRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n         HIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n         URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n         RELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n         RELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n         URI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n         ABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n         GENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n         RELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n         ABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n         SAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n         AUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\";\n     return {\n         NOT_SCHEME: new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n         NOT_USERINFO: new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n         NOT_HOST: new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n         NOT_PATH: new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n         NOT_PATH_NOSCHEME: new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n         NOT_QUERY: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n         NOT_FRAGMENT: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n         ESCAPE: new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n         UNRESERVED: new RegExp(UNRESERVED$$, \"g\"),\n         OTHER_CHARS: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n         PCT_ENCODED: new RegExp(PCT_ENCODED$, \"g\"),\n         IPV4ADDRESS: new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n         IPV6ADDRESS: new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\") //RFC 6874, with relaxed parsing rules\n     };\n }\n var URI_PROTOCOL = buildExps(false);\n\n var IRI_PROTOCOL = buildExps(true);\n\n var slicedToArray = function () {\n   function sliceIterator(arr, i) {\n     var _arr = [];\n     var _n = true;\n     var _d = false;\n     var _e = undefined;\n\n     try {\n       for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n         _arr.push(_s.value);\n\n         if (i && _arr.length === i) break;\n       }\n     } catch (err) {\n       _d = true;\n       _e = err;\n     } finally {\n       try {\n         if (!_n && _i[\"return\"]) _i[\"return\"]();\n       } finally {\n         if (_d) throw _e;\n       }\n     }\n\n     return _arr;\n   }\n\n   return function (arr, i) {\n     if (Array.isArray(arr)) {\n       return arr;\n     } else if (Symbol.iterator in Object(arr)) {\n       return sliceIterator(arr, i);\n     } else {\n       throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n     }\n   };\n }();\n\n\n\n\n\n\n\n\n\n\n\n\n\n var toConsumableArray = function (arr) {\n   if (Array.isArray(arr)) {\n     for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n     return arr2;\n   } else {\n     return Array.from(arr);\n   }\n };\n\n /** Highest positive signed 32-bit float value */\n\n var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n /** Bootstring parameters */\n var base = 36;\n var tMin = 1;\n var tMax = 26;\n var skew = 38;\n var damp = 700;\n var initialBias = 72;\n var initialN = 128; // 0x80\n var delimiter = '-'; // '\\x2D'\n\n /** Regular expressions */\n var regexPunycode = /^xn--/;\n var regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\n var regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n /** Error messages */\n var errors = {\n \t'overflow': 'Overflow: input needs wider integers to process',\n \t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n \t'invalid-input': 'Invalid input'\n };\n\n /** Convenience shortcuts */\n var baseMinusTMin = base - tMin;\n var floor = Math.floor;\n var stringFromCharCode = String.fromCharCode;\n\n /*--------------------------------------------------------------------------*/\n\n /**\n  * A generic error utility function.\n  * @private\n  * @param {String} type The error type.\n  * @returns {Error} Throws a `RangeError` with the applicable error message.\n  */\n function error$1(type) {\n \tthrow new RangeError(errors[type]);\n }\n\n /**\n  * A generic `Array#map` utility function.\n  * @private\n  * @param {Array} array The array to iterate over.\n  * @param {Function} callback The function that gets called for every array\n  * item.\n  * @returns {Array} A new array of values returned by the callback function.\n  */\n function map(array, fn) {\n \tvar result = [];\n \tvar length = array.length;\n \twhile (length--) {\n \t\tresult[length] = fn(array[length]);\n \t}\n \treturn result;\n }\n\n /**\n  * A simple `Array#map`-like wrapper to work with domain name strings or email\n  * addresses.\n  * @private\n  * @param {String} domain The domain name or email address.\n  * @param {Function} callback The function that gets called for every\n  * character.\n  * @returns {Array} A new string of characters returned by the callback\n  * function.\n  */\n function mapDomain(string, fn) {\n \tvar parts = string.split('@');\n \tvar result = '';\n \tif (parts.length > 1) {\n \t\t// In email addresses, only the domain name should be punycoded. Leave\n \t\t// the local part (i.e. everything up to `@`) intact.\n \t\tresult = parts[0] + '@';\n \t\tstring = parts[1];\n \t}\n \t// Avoid `split(regex)` for IE8 compatibility. See #17.\n \tstring = string.replace(regexSeparators, '\\x2E');\n \tvar labels = string.split('.');\n \tvar encoded = map(labels, fn).join('.');\n \treturn result + encoded;\n }\n\n /**\n  * Creates an array containing the numeric code points of each Unicode\n  * character in the string. While JavaScript uses UCS-2 internally,\n  * this function will convert a pair of surrogate halves (each of which\n  * UCS-2 exposes as separate characters) into a single code point,\n  * matching UTF-16.\n  * @see `punycode.ucs2.encode`\n  * @see <https://mathiasbynens.be/notes/javascript-encoding>\n  * @memberOf punycode.ucs2\n  * @name decode\n  * @param {String} string The Unicode input string (UCS-2).\n  * @returns {Array} The new array of code points.\n  */\n function ucs2decode(string) {\n \tvar output = [];\n \tvar counter = 0;\n \tvar length = string.length;\n \twhile (counter < length) {\n \t\tvar value = string.charCodeAt(counter++);\n \t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n \t\t\t// It's a high surrogate, and there is a next character.\n \t\t\tvar extra = string.charCodeAt(counter++);\n \t\t\tif ((extra & 0xFC00) == 0xDC00) {\n \t\t\t\t// Low surrogate.\n \t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n \t\t\t} else {\n \t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n \t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n \t\t\t\toutput.push(value);\n \t\t\t\tcounter--;\n \t\t\t}\n \t\t} else {\n \t\t\toutput.push(value);\n \t\t}\n \t}\n \treturn output;\n }\n\n /**\n  * Creates a string based on an array of numeric code points.\n  * @see `punycode.ucs2.decode`\n  * @memberOf punycode.ucs2\n  * @name encode\n  * @param {Array} codePoints The array of numeric code points.\n  * @returns {String} The new Unicode string (UCS-2).\n  */\n var ucs2encode = function ucs2encode(array) {\n \treturn String.fromCodePoint.apply(String, toConsumableArray(array));\n };\n\n /**\n  * Converts a basic code point into a digit/integer.\n  * @see `digitToBasic()`\n  * @private\n  * @param {Number} codePoint The basic numeric code point value.\n  * @returns {Number} The numeric value of a basic code point (for use in\n  * representing integers) in the range `0` to `base - 1`, or `base` if\n  * the code point does not represent a value.\n  */\n var basicToDigit = function basicToDigit(codePoint) {\n \tif (codePoint - 0x30 < 0x0A) {\n \t\treturn codePoint - 0x16;\n \t}\n \tif (codePoint - 0x41 < 0x1A) {\n \t\treturn codePoint - 0x41;\n \t}\n \tif (codePoint - 0x61 < 0x1A) {\n \t\treturn codePoint - 0x61;\n \t}\n \treturn base;\n };\n\n /**\n  * Converts a digit/integer into a basic code point.\n  * @see `basicToDigit()`\n  * @private\n  * @param {Number} digit The numeric value of a basic code point.\n  * @returns {Number} The basic code point whose value (when used for\n  * representing integers) is `digit`, which needs to be in the range\n  * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n  * used; else, the lowercase form is used. The behavior is undefined\n  * if `flag` is non-zero and `digit` has no uppercase form.\n  */\n var digitToBasic = function digitToBasic(digit, flag) {\n \t//  0..25 map to ASCII a..z or A..Z\n \t// 26..35 map to ASCII 0..9\n \treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n };\n\n /**\n  * Bias adaptation function as per section 3.4 of RFC 3492.\n  * https://tools.ietf.org/html/rfc3492#section-3.4\n  * @private\n  */\n var adapt = function adapt(delta, numPoints, firstTime) {\n \tvar k = 0;\n \tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n \tdelta += floor(delta / numPoints);\n \tfor (; /* no initialization */delta > baseMinusTMin * tMax >> 1; k += base) {\n \t\tdelta = floor(delta / baseMinusTMin);\n \t}\n \treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n };\n\n /**\n  * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n  * symbols.\n  * @memberOf punycode\n  * @param {String} input The Punycode string of ASCII-only symbols.\n  * @returns {String} The resulting string of Unicode symbols.\n  */\n var decode = function decode(input) {\n \t// Don't use UCS-2.\n \tvar output = [];\n \tvar inputLength = input.length;\n \tvar i = 0;\n \tvar n = initialN;\n \tvar bias = initialBias;\n\n \t// Handle the basic code points: let `basic` be the number of input code\n \t// points before the last delimiter, or `0` if there is none, then copy\n \t// the first basic code points to the output.\n\n \tvar basic = input.lastIndexOf(delimiter);\n \tif (basic < 0) {\n \t\tbasic = 0;\n \t}\n\n \tfor (var j = 0; j < basic; ++j) {\n \t\t// if it's not a basic code point\n \t\tif (input.charCodeAt(j) >= 0x80) {\n \t\t\terror$1('not-basic');\n \t\t}\n \t\toutput.push(input.charCodeAt(j));\n \t}\n\n \t// Main decoding loop: start just after the last delimiter if any basic code\n \t// points were copied; start at the beginning otherwise.\n\n \tfor (var index = basic > 0 ? basic + 1 : 0; index < inputLength;) /* no final expression */{\n\n \t\t// `index` is the index of the next character to be consumed.\n \t\t// Decode a generalized variable-length integer into `delta`,\n \t\t// which gets added to `i`. The overflow checking is easier\n \t\t// if we increase `i` as we go, then subtract off its starting\n \t\t// value at the end to obtain `delta`.\n \t\tvar oldi = i;\n \t\tfor (var w = 1, k = base;; /* no condition */k += base) {\n\n \t\t\tif (index >= inputLength) {\n \t\t\t\terror$1('invalid-input');\n \t\t\t}\n\n \t\t\tvar digit = basicToDigit(input.charCodeAt(index++));\n\n \t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n \t\t\t\terror$1('overflow');\n \t\t\t}\n\n \t\t\ti += digit * w;\n \t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n \t\t\tif (digit < t) {\n \t\t\t\tbreak;\n \t\t\t}\n\n \t\t\tvar baseMinusT = base - t;\n \t\t\tif (w > floor(maxInt / baseMinusT)) {\n \t\t\t\terror$1('overflow');\n \t\t\t}\n\n \t\t\tw *= baseMinusT;\n \t\t}\n\n \t\tvar out = output.length + 1;\n \t\tbias = adapt(i - oldi, out, oldi == 0);\n\n \t\t// `i` was supposed to wrap around from `out` to `0`,\n \t\t// incrementing `n` each time, so we'll fix that now:\n \t\tif (floor(i / out) > maxInt - n) {\n \t\t\terror$1('overflow');\n \t\t}\n\n \t\tn += floor(i / out);\n \t\ti %= out;\n\n \t\t// Insert `n` at position `i` of the output.\n \t\toutput.splice(i++, 0, n);\n \t}\n\n \treturn String.fromCodePoint.apply(String, output);\n };\n\n /**\n  * Converts a string of Unicode symbols (e.g. a domain name label) to a\n  * Punycode string of ASCII-only symbols.\n  * @memberOf punycode\n  * @param {String} input The string of Unicode symbols.\n  * @returns {String} The resulting Punycode string of ASCII-only symbols.\n  */\n var encode = function encode(input) {\n \tvar output = [];\n\n \t// Convert the input in UCS-2 to an array of Unicode code points.\n \tinput = ucs2decode(input);\n\n \t// Cache the length.\n \tvar inputLength = input.length;\n\n \t// Initialize the state.\n \tvar n = initialN;\n \tvar delta = 0;\n \tvar bias = initialBias;\n\n \t// Handle the basic code points.\n \tvar _iteratorNormalCompletion = true;\n \tvar _didIteratorError = false;\n \tvar _iteratorError = undefined;\n\n \ttry {\n \t\tfor (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n \t\t\tvar _currentValue2 = _step.value;\n\n \t\t\tif (_currentValue2 < 0x80) {\n \t\t\t\toutput.push(stringFromCharCode(_currentValue2));\n \t\t\t}\n \t\t}\n \t} catch (err) {\n \t\t_didIteratorError = true;\n \t\t_iteratorError = err;\n \t} finally {\n \t\ttry {\n \t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n \t\t\t\t_iterator.return();\n \t\t\t}\n \t\t} finally {\n \t\t\tif (_didIteratorError) {\n \t\t\t\tthrow _iteratorError;\n \t\t\t}\n \t\t}\n \t}\n\n \tvar basicLength = output.length;\n \tvar handledCPCount = basicLength;\n\n \t// `handledCPCount` is the number of code points that have been handled;\n \t// `basicLength` is the number of basic code points.\n\n \t// Finish the basic string with a delimiter unless it's empty.\n \tif (basicLength) {\n \t\toutput.push(delimiter);\n \t}\n\n \t// Main encoding loop:\n \twhile (handledCPCount < inputLength) {\n\n \t\t// All non-basic code points < n have been handled already. Find the next\n \t\t// larger one:\n \t\tvar m = maxInt;\n \t\tvar _iteratorNormalCompletion2 = true;\n \t\tvar _didIteratorError2 = false;\n \t\tvar _iteratorError2 = undefined;\n\n \t\ttry {\n \t\t\tfor (var _iterator2 = input[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n \t\t\t\tvar currentValue = _step2.value;\n\n \t\t\t\tif (currentValue >= n && currentValue < m) {\n \t\t\t\t\tm = currentValue;\n \t\t\t\t}\n \t\t\t}\n\n \t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n \t\t\t// but guard against overflow.\n \t\t} catch (err) {\n \t\t\t_didIteratorError2 = true;\n \t\t\t_iteratorError2 = err;\n \t\t} finally {\n \t\t\ttry {\n \t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n \t\t\t\t\t_iterator2.return();\n \t\t\t\t}\n \t\t\t} finally {\n \t\t\t\tif (_didIteratorError2) {\n \t\t\t\t\tthrow _iteratorError2;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\tvar handledCPCountPlusOne = handledCPCount + 1;\n \t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n \t\t\terror$1('overflow');\n \t\t}\n\n \t\tdelta += (m - n) * handledCPCountPlusOne;\n \t\tn = m;\n\n \t\tvar _iteratorNormalCompletion3 = true;\n \t\tvar _didIteratorError3 = false;\n \t\tvar _iteratorError3 = undefined;\n\n \t\ttry {\n \t\t\tfor (var _iterator3 = input[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n \t\t\t\tvar _currentValue = _step3.value;\n\n \t\t\t\tif (_currentValue < n && ++delta > maxInt) {\n \t\t\t\t\terror$1('overflow');\n \t\t\t\t}\n \t\t\t\tif (_currentValue == n) {\n \t\t\t\t\t// Represent delta as a generalized variable-length integer.\n \t\t\t\t\tvar q = delta;\n \t\t\t\t\tfor (var k = base;; /* no condition */k += base) {\n \t\t\t\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n \t\t\t\t\t\tif (q < t) {\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tvar qMinusT = q - t;\n \t\t\t\t\t\tvar baseMinusT = base - t;\n \t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n \t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n \t\t\t\t\t}\n\n \t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n \t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n \t\t\t\t\tdelta = 0;\n \t\t\t\t\t++handledCPCount;\n \t\t\t\t}\n \t\t\t}\n \t\t} catch (err) {\n \t\t\t_didIteratorError3 = true;\n \t\t\t_iteratorError3 = err;\n \t\t} finally {\n \t\t\ttry {\n \t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n \t\t\t\t\t_iterator3.return();\n \t\t\t\t}\n \t\t\t} finally {\n \t\t\t\tif (_didIteratorError3) {\n \t\t\t\t\tthrow _iteratorError3;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t++delta;\n \t\t++n;\n \t}\n \treturn output.join('');\n };\n\n /**\n  * Converts a Punycode string representing a domain name or an email address\n  * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n  * it doesn't matter if you call it on a string that has already been\n  * converted to Unicode.\n  * @memberOf punycode\n  * @param {String} input The Punycoded domain name or email address to\n  * convert to Unicode.\n  * @returns {String} The Unicode representation of the given Punycode\n  * string.\n  */\n var toUnicode = function toUnicode(input) {\n \treturn mapDomain(input, function (string) {\n \t\treturn regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n \t});\n };\n\n /**\n  * Converts a Unicode string representing a domain name or an email address to\n  * Punycode. Only the non-ASCII parts of the domain name will be converted,\n  * i.e. it doesn't matter if you call it with a domain that's already in\n  * ASCII.\n  * @memberOf punycode\n  * @param {String} input The domain name or email address to convert, as a\n  * Unicode string.\n  * @returns {String} The Punycode representation of the given domain name or\n  * email address.\n  */\n var toASCII = function toASCII(input) {\n \treturn mapDomain(input, function (string) {\n \t\treturn regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n \t});\n };\n\n /*--------------------------------------------------------------------------*/\n\n /** Define the public API */\n var punycode = {\n \t/**\n   * A string representing the current Punycode.js version number.\n   * @memberOf punycode\n   * @type String\n   */\n \t'version': '2.1.0',\n \t/**\n   * An object of methods to convert from JavaScript's internal character\n   * representation (UCS-2) to Unicode code points, and back.\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\n   * @memberOf punycode\n   * @type Object\n   */\n \t'ucs2': {\n \t\t'decode': ucs2decode,\n \t\t'encode': ucs2encode\n \t},\n \t'decode': decode,\n \t'encode': encode,\n \t'toASCII': toASCII,\n \t'toUnicode': toUnicode\n };\n\n /**\n  * URI.js\n  *\n  * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n  * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n  * @see http://github.com/garycourt/uri-js\n  */\n /**\n  * Copyright 2011 Gary Court. All rights reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without modification, are\n  * permitted provided that the following conditions are met:\n  *\n  *    1. Redistributions of source code must retain the above copyright notice, this list of\n  *       conditions and the following disclaimer.\n  *\n  *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n  *       of conditions and the following disclaimer in the documentation and/or other materials\n  *       provided with the distribution.\n  *\n  * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n  * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n  * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n  * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  *\n  * The views and conclusions contained in the software and documentation are those of the\n  * authors and should not be interpreted as representing official policies, either expressed\n  * or implied, of Gary Court.\n  */\n var SCHEMES = {};\n function pctEncChar(chr) {\n     var c = chr.charCodeAt(0);\n     var e = void 0;\n     if (c < 16) e = \"%0\" + c.toString(16).toUpperCase();else if (c < 128) e = \"%\" + c.toString(16).toUpperCase();else if (c < 2048) e = \"%\" + (c >> 6 | 192).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();else e = \"%\" + (c >> 12 | 224).toString(16).toUpperCase() + \"%\" + (c >> 6 & 63 | 128).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();\n     return e;\n }\n function pctDecChars(str) {\n     var newStr = \"\";\n     var i = 0;\n     var il = str.length;\n     while (i < il) {\n         var c = parseInt(str.substr(i + 1, 2), 16);\n         if (c < 128) {\n             newStr += String.fromCharCode(c);\n             i += 3;\n         } else if (c >= 194 && c < 224) {\n             if (il - i >= 6) {\n                 var c2 = parseInt(str.substr(i + 4, 2), 16);\n                 newStr += String.fromCharCode((c & 31) << 6 | c2 & 63);\n             } else {\n                 newStr += str.substr(i, 6);\n             }\n             i += 6;\n         } else if (c >= 224) {\n             if (il - i >= 9) {\n                 var _c = parseInt(str.substr(i + 4, 2), 16);\n                 var c3 = parseInt(str.substr(i + 7, 2), 16);\n                 newStr += String.fromCharCode((c & 15) << 12 | (_c & 63) << 6 | c3 & 63);\n             } else {\n                 newStr += str.substr(i, 9);\n             }\n             i += 9;\n         } else {\n             newStr += str.substr(i, 3);\n             i += 3;\n         }\n     }\n     return newStr;\n }\n function _normalizeComponentEncoding(components, protocol) {\n     function decodeUnreserved(str) {\n         var decStr = pctDecChars(str);\n         return !decStr.match(protocol.UNRESERVED) ? str : decStr;\n     }\n     if (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n     if (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n     if (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n     if (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n     if (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n     if (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n     return components;\n }\n\n function _stripLeadingZeros(str) {\n     return str.replace(/^0*(.*)/, \"$1\") || \"0\";\n }\n function _normalizeIPv4(host, protocol) {\n     var matches = host.match(protocol.IPV4ADDRESS) || [];\n\n     var _matches = slicedToArray(matches, 2),\n         address = _matches[1];\n\n     if (address) {\n         return address.split(\".\").map(_stripLeadingZeros).join(\".\");\n     } else {\n         return host;\n     }\n }\n function _normalizeIPv6(host, protocol) {\n     var matches = host.match(protocol.IPV6ADDRESS) || [];\n\n     var _matches2 = slicedToArray(matches, 3),\n         address = _matches2[1],\n         zone = _matches2[2];\n\n     if (address) {\n         var _address$toLowerCase$ = address.toLowerCase().split('::').reverse(),\n             _address$toLowerCase$2 = slicedToArray(_address$toLowerCase$, 2),\n             last = _address$toLowerCase$2[0],\n             first = _address$toLowerCase$2[1];\n\n         var firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n         var lastFields = last.split(\":\").map(_stripLeadingZeros);\n         var isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n         var fieldCount = isLastFieldIPv4Address ? 7 : 8;\n         var lastFieldsStart = lastFields.length - fieldCount;\n         var fields = Array(fieldCount);\n         for (var x = 0; x < fieldCount; ++x) {\n             fields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n         }\n         if (isLastFieldIPv4Address) {\n             fields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n         }\n         var allZeroFields = fields.reduce(function (acc, field, index) {\n             if (!field || field === \"0\") {\n                 var lastLongest = acc[acc.length - 1];\n                 if (lastLongest && lastLongest.index + lastLongest.length === index) {\n                     lastLongest.length++;\n                 } else {\n                     acc.push({ index: index, length: 1 });\n                 }\n             }\n             return acc;\n         }, []);\n         var longestZeroFields = allZeroFields.sort(function (a, b) {\n             return b.length - a.length;\n         })[0];\n         var newHost = void 0;\n         if (longestZeroFields && longestZeroFields.length > 1) {\n             var newFirst = fields.slice(0, longestZeroFields.index);\n             var newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n             newHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n         } else {\n             newHost = fields.join(\":\");\n         }\n         if (zone) {\n             newHost += \"%\" + zone;\n         }\n         return newHost;\n     } else {\n         return host;\n     }\n }\n var URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\n var NO_MATCH_IS_UNDEFINED = \"\".match(/(){0}/)[1] === undefined;\n function parse(uriString) {\n     var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n     var components = {};\n     var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n     if (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n     var matches = uriString.match(URI_PARSE);\n     if (matches) {\n         if (NO_MATCH_IS_UNDEFINED) {\n             //store each component\n             components.scheme = matches[1];\n             components.userinfo = matches[3];\n             components.host = matches[4];\n             components.port = parseInt(matches[5], 10);\n             components.path = matches[6] || \"\";\n             components.query = matches[7];\n             components.fragment = matches[8];\n             //fix port number\n             if (isNaN(components.port)) {\n                 components.port = matches[5];\n             }\n         } else {\n             //IE FIX for improper RegExp matching\n             //store each component\n             components.scheme = matches[1] || undefined;\n             components.userinfo = uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined;\n             components.host = uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined;\n             components.port = parseInt(matches[5], 10);\n             components.path = matches[6] || \"\";\n             components.query = uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined;\n             components.fragment = uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined;\n             //fix port number\n             if (isNaN(components.port)) {\n                 components.port = uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined;\n             }\n         }\n         if (components.host) {\n             //normalize IP hosts\n             components.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n         }\n         //determine reference type\n         if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n             components.reference = \"same-document\";\n         } else if (components.scheme === undefined) {\n             components.reference = \"relative\";\n         } else if (components.fragment === undefined) {\n             components.reference = \"absolute\";\n         } else {\n             components.reference = \"uri\";\n         }\n         //check for reference errors\n         if (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n             components.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n         }\n         //find scheme handler\n         var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n         //check if scheme can't handle IRIs\n         if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n             //if host component is a domain name\n             if (components.host && (options.domainHost || schemeHandler && schemeHandler.domainHost)) {\n                 //convert Unicode IDN -> ASCII IDN\n                 try {\n                     components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n                 } catch (e) {\n                     components.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n                 }\n             }\n             //convert IRI -> URI\n             _normalizeComponentEncoding(components, URI_PROTOCOL);\n         } else {\n             //normalize encodings\n             _normalizeComponentEncoding(components, protocol);\n         }\n         //perform scheme specific parsing\n         if (schemeHandler && schemeHandler.parse) {\n             schemeHandler.parse(components, options);\n         }\n     } else {\n         components.error = components.error || \"URI can not be parsed.\";\n     }\n     return components;\n }\n\n function _recomposeAuthority(components, options) {\n     var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n     var uriTokens = [];\n     if (components.userinfo !== undefined) {\n         uriTokens.push(components.userinfo);\n         uriTokens.push(\"@\");\n     }\n     if (components.host !== undefined) {\n         //normalize IP hosts, add brackets and escape zone separator for IPv6\n         uriTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, function (_, $1, $2) {\n             return \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\";\n         }));\n     }\n     if (typeof components.port === \"number\" || typeof components.port === \"string\") {\n         uriTokens.push(\":\");\n         uriTokens.push(String(components.port));\n     }\n     return uriTokens.length ? uriTokens.join(\"\") : undefined;\n }\n\n var RDS1 = /^\\.\\.?\\//;\n var RDS2 = /^\\/\\.(\\/|$)/;\n var RDS3 = /^\\/\\.\\.(\\/|$)/;\n var RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n function removeDotSegments(input) {\n     var output = [];\n     while (input.length) {\n         if (input.match(RDS1)) {\n             input = input.replace(RDS1, \"\");\n         } else if (input.match(RDS2)) {\n             input = input.replace(RDS2, \"/\");\n         } else if (input.match(RDS3)) {\n             input = input.replace(RDS3, \"/\");\n             output.pop();\n         } else if (input === \".\" || input === \"..\") {\n             input = \"\";\n         } else {\n             var im = input.match(RDS5);\n             if (im) {\n                 var s = im[0];\n                 input = input.slice(s.length);\n                 output.push(s);\n             } else {\n                 throw new Error(\"Unexpected dot segment condition\");\n             }\n         }\n     }\n     return output.join(\"\");\n }\n\n function serialize(components) {\n     var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n     var protocol = options.iri ? IRI_PROTOCOL : URI_PROTOCOL;\n     var uriTokens = [];\n     //find scheme handler\n     var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n     //perform scheme specific serialization\n     if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n     if (components.host) {\n         //if host component is an IPv6 address\n         if (protocol.IPV6ADDRESS.test(components.host)) {}\n         //TODO: normalize IPv6 address as per RFC 5952\n\n         //if host component is a domain name\n         else if (options.domainHost || schemeHandler && schemeHandler.domainHost) {\n                 //convert IDN via punycode\n                 try {\n                     components.host = !options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host);\n                 } catch (e) {\n                     components.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                 }\n             }\n     }\n     //normalize encoding\n     _normalizeComponentEncoding(components, protocol);\n     if (options.reference !== \"suffix\" && components.scheme) {\n         uriTokens.push(components.scheme);\n         uriTokens.push(\":\");\n     }\n     var authority = _recomposeAuthority(components, options);\n     if (authority !== undefined) {\n         if (options.reference !== \"suffix\") {\n             uriTokens.push(\"//\");\n         }\n         uriTokens.push(authority);\n         if (components.path && components.path.charAt(0) !== \"/\") {\n             uriTokens.push(\"/\");\n         }\n     }\n     if (components.path !== undefined) {\n         var s = components.path;\n         if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n             s = removeDotSegments(s);\n         }\n         if (authority === undefined) {\n             s = s.replace(/^\\/\\//, \"/%2F\"); //don't allow the path to start with \"//\"\n         }\n         uriTokens.push(s);\n     }\n     if (components.query !== undefined) {\n         uriTokens.push(\"?\");\n         uriTokens.push(components.query);\n     }\n     if (components.fragment !== undefined) {\n         uriTokens.push(\"#\");\n         uriTokens.push(components.fragment);\n     }\n     return uriTokens.join(\"\"); //merge tokens into a string\n }\n\n function resolveComponents(base, relative) {\n     var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n     var skipNormalization = arguments[3];\n\n     var target = {};\n     if (!skipNormalization) {\n         base = parse(serialize(base, options), options); //normalize base components\n         relative = parse(serialize(relative, options), options); //normalize relative components\n     }\n     options = options || {};\n     if (!options.tolerant && relative.scheme) {\n         target.scheme = relative.scheme;\n         //target.authority = relative.authority;\n         target.userinfo = relative.userinfo;\n         target.host = relative.host;\n         target.port = relative.port;\n         target.path = removeDotSegments(relative.path || \"\");\n         target.query = relative.query;\n     } else {\n         if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n             //target.authority = relative.authority;\n             target.userinfo = relative.userinfo;\n             target.host = relative.host;\n             target.port = relative.port;\n             target.path = removeDotSegments(relative.path || \"\");\n             target.query = relative.query;\n         } else {\n             if (!relative.path) {\n                 target.path = base.path;\n                 if (relative.query !== undefined) {\n                     target.query = relative.query;\n                 } else {\n                     target.query = base.query;\n                 }\n             } else {\n                 if (relative.path.charAt(0) === \"/\") {\n                     target.path = removeDotSegments(relative.path);\n                 } else {\n                     if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n                         target.path = \"/\" + relative.path;\n                     } else if (!base.path) {\n                         target.path = relative.path;\n                     } else {\n                         target.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n                     }\n                     target.path = removeDotSegments(target.path);\n                 }\n                 target.query = relative.query;\n             }\n             //target.authority = base.authority;\n             target.userinfo = base.userinfo;\n             target.host = base.host;\n             target.port = base.port;\n         }\n         target.scheme = base.scheme;\n     }\n     target.fragment = relative.fragment;\n     return target;\n }\n\n function resolve(baseURI, relativeURI, options) {\n     var schemelessOptions = assign({ scheme: 'null' }, options);\n     return serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n }\n\n function normalize(uri, options) {\n     if (typeof uri === \"string\") {\n         uri = serialize(parse(uri, options), options);\n     } else if (typeOf(uri) === \"object\") {\n         uri = parse(serialize(uri, options), options);\n     }\n     return uri;\n }\n\n function equal(uriA, uriB, options) {\n     if (typeof uriA === \"string\") {\n         uriA = serialize(parse(uriA, options), options);\n     } else if (typeOf(uriA) === \"object\") {\n         uriA = serialize(uriA, options);\n     }\n     if (typeof uriB === \"string\") {\n         uriB = serialize(parse(uriB, options), options);\n     } else if (typeOf(uriB) === \"object\") {\n         uriB = serialize(uriB, options);\n     }\n     return uriA === uriB;\n }\n\n function escapeComponent(str, options) {\n     return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE, pctEncChar);\n }\n\n function unescapeComponent(str, options) {\n     return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED, pctDecChars);\n }\n\n var handler = {\n     scheme: \"http\",\n     domainHost: true,\n     parse: function parse(components, options) {\n         //report missing host\n         if (!components.host) {\n             components.error = components.error || \"HTTP URIs must have a host.\";\n         }\n         return components;\n     },\n     serialize: function serialize(components, options) {\n         var secure = String(components.scheme).toLowerCase() === \"https\";\n         //normalize the default port\n         if (components.port === (secure ? 443 : 80) || components.port === \"\") {\n             components.port = undefined;\n         }\n         //normalize the empty path\n         if (!components.path) {\n             components.path = \"/\";\n         }\n         //NOTE: We do not parse query strings for HTTP URIs\n         //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n         //and not the HTTP spec.\n         return components;\n     }\n };\n\n var handler$1 = {\n     scheme: \"https\",\n     domainHost: handler.domainHost,\n     parse: handler.parse,\n     serialize: handler.serialize\n };\n\n function isSecure(wsComponents) {\n     return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n }\n //RFC 6455\n var handler$2 = {\n     scheme: \"ws\",\n     domainHost: true,\n     parse: function parse(components, options) {\n         var wsComponents = components;\n         //indicate if the secure flag is set\n         wsComponents.secure = isSecure(wsComponents);\n         //construct resouce name\n         wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n         wsComponents.path = undefined;\n         wsComponents.query = undefined;\n         return wsComponents;\n     },\n     serialize: function serialize(wsComponents, options) {\n         //normalize the default port\n         if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n             wsComponents.port = undefined;\n         }\n         //ensure scheme matches secure flag\n         if (typeof wsComponents.secure === 'boolean') {\n             wsComponents.scheme = wsComponents.secure ? 'wss' : 'ws';\n             wsComponents.secure = undefined;\n         }\n         //reconstruct path from resource name\n         if (wsComponents.resourceName) {\n             var _wsComponents$resourc = wsComponents.resourceName.split('?'),\n                 _wsComponents$resourc2 = slicedToArray(_wsComponents$resourc, 2),\n                 path = _wsComponents$resourc2[0],\n                 query = _wsComponents$resourc2[1];\n\n             wsComponents.path = path && path !== '/' ? path : undefined;\n             wsComponents.query = query;\n             wsComponents.resourceName = undefined;\n         }\n         //forbid fragment component\n         wsComponents.fragment = undefined;\n         return wsComponents;\n     }\n };\n\n var handler$3 = {\n     scheme: \"wss\",\n     domainHost: handler$2.domainHost,\n     parse: handler$2.parse,\n     serialize: handler$2.serialize\n };\n\n var O = {};\n var isIRI = true;\n //RFC 3986\n var UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\n var HEXDIG$$ = \"[0-9A-Fa-f]\"; //case-insensitive\n var PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)); //expanded\n //RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n //const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n //const WSP$$ = \"[\\\\x20\\\\x09]\";\n //const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n //const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n //const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n //const WSP$$ = \"[\\\\x20\\\\x09]\";\n //const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n //const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n //const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n //const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\n var ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n var QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\n var VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\n var SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\n var UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\n var PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\n var NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\n var NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\n var NOT_HFVALUE = NOT_HFNAME;\n function decodeUnreserved(str) {\n     var decStr = pctDecChars(str);\n     return !decStr.match(UNRESERVED) ? str : decStr;\n }\n var handler$4 = {\n     scheme: \"mailto\",\n     parse: function parse$$1(components, options) {\n         var mailtoComponents = components;\n         var to = mailtoComponents.to = mailtoComponents.path ? mailtoComponents.path.split(\",\") : [];\n         mailtoComponents.path = undefined;\n         if (mailtoComponents.query) {\n             var unknownHeaders = false;\n             var headers = {};\n             var hfields = mailtoComponents.query.split(\"&\");\n             for (var x = 0, xl = hfields.length; x < xl; ++x) {\n                 var hfield = hfields[x].split(\"=\");\n                 switch (hfield[0]) {\n                     case \"to\":\n                         var toAddrs = hfield[1].split(\",\");\n                         for (var _x = 0, _xl = toAddrs.length; _x < _xl; ++_x) {\n                             to.push(toAddrs[_x]);\n                         }\n                         break;\n                     case \"subject\":\n                         mailtoComponents.subject = unescapeComponent(hfield[1], options);\n                         break;\n                     case \"body\":\n                         mailtoComponents.body = unescapeComponent(hfield[1], options);\n                         break;\n                     default:\n                         unknownHeaders = true;\n                         headers[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n                         break;\n                 }\n             }\n             if (unknownHeaders) mailtoComponents.headers = headers;\n         }\n         mailtoComponents.query = undefined;\n         for (var _x2 = 0, _xl2 = to.length; _x2 < _xl2; ++_x2) {\n             var addr = to[_x2].split(\"@\");\n             addr[0] = unescapeComponent(addr[0]);\n             if (!options.unicodeSupport) {\n                 //convert Unicode IDN -> ASCII IDN\n                 try {\n                     addr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n                 } catch (e) {\n                     mailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n                 }\n             } else {\n                 addr[1] = unescapeComponent(addr[1], options).toLowerCase();\n             }\n             to[_x2] = addr.join(\"@\");\n         }\n         return mailtoComponents;\n     },\n     serialize: function serialize$$1(mailtoComponents, options) {\n         var components = mailtoComponents;\n         var to = toArray(mailtoComponents.to);\n         if (to) {\n             for (var x = 0, xl = to.length; x < xl; ++x) {\n                 var toAddr = String(to[x]);\n                 var atIdx = toAddr.lastIndexOf(\"@\");\n                 var localPart = toAddr.slice(0, atIdx).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n                 var domain = toAddr.slice(atIdx + 1);\n                 //convert IDN via punycode\n                 try {\n                     domain = !options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain);\n                 } catch (e) {\n                     components.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                 }\n                 to[x] = localPart + \"@\" + domain;\n             }\n             components.path = to.join(\",\");\n         }\n         var headers = mailtoComponents.headers = mailtoComponents.headers || {};\n         if (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n         if (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n         var fields = [];\n         for (var name in headers) {\n             if (headers[name] !== O[name]) {\n                 fields.push(name.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) + \"=\" + headers[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar));\n             }\n         }\n         if (fields.length) {\n             components.query = fields.join(\"&\");\n         }\n         return components;\n     }\n };\n\n var URN_PARSE = /^([^\\:]+)\\:(.*)/;\n //RFC 2141\n var handler$5 = {\n     scheme: \"urn\",\n     parse: function parse$$1(components, options) {\n         var matches = components.path && components.path.match(URN_PARSE);\n         var urnComponents = components;\n         if (matches) {\n             var scheme = options.scheme || urnComponents.scheme || \"urn\";\n             var nid = matches[1].toLowerCase();\n             var nss = matches[2];\n             var urnScheme = scheme + \":\" + (options.nid || nid);\n             var schemeHandler = SCHEMES[urnScheme];\n             urnComponents.nid = nid;\n             urnComponents.nss = nss;\n             urnComponents.path = undefined;\n             if (schemeHandler) {\n                 urnComponents = schemeHandler.parse(urnComponents, options);\n             }\n         } else {\n             urnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n         }\n         return urnComponents;\n     },\n     serialize: function serialize$$1(urnComponents, options) {\n         var scheme = options.scheme || urnComponents.scheme || \"urn\";\n         var nid = urnComponents.nid;\n         var urnScheme = scheme + \":\" + (options.nid || nid);\n         var schemeHandler = SCHEMES[urnScheme];\n         if (schemeHandler) {\n             urnComponents = schemeHandler.serialize(urnComponents, options);\n         }\n         var uriComponents = urnComponents;\n         var nss = urnComponents.nss;\n         uriComponents.path = (nid || options.nid) + \":\" + nss;\n         return uriComponents;\n     }\n };\n\n var UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\n //RFC 4122\n var handler$6 = {\n     scheme: \"urn:uuid\",\n     parse: function parse(urnComponents, options) {\n         var uuidComponents = urnComponents;\n         uuidComponents.uuid = uuidComponents.nss;\n         uuidComponents.nss = undefined;\n         if (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n             uuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n         }\n         return uuidComponents;\n     },\n     serialize: function serialize(uuidComponents, options) {\n         var urnComponents = uuidComponents;\n         //normalize UUID\n         urnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n         return urnComponents;\n     }\n };\n\n SCHEMES[handler.scheme] = handler;\n SCHEMES[handler$1.scheme] = handler$1;\n SCHEMES[handler$2.scheme] = handler$2;\n SCHEMES[handler$3.scheme] = handler$3;\n SCHEMES[handler$4.scheme] = handler$4;\n SCHEMES[handler$5.scheme] = handler$5;\n SCHEMES[handler$6.scheme] = handler$6;\n\n exports.SCHEMES = SCHEMES;\n exports.pctEncChar = pctEncChar;\n exports.pctDecChars = pctDecChars;\n exports.parse = parse;\n exports.removeDotSegments = removeDotSegments;\n exports.serialize = serialize;\n exports.resolveComponents = resolveComponents;\n exports.resolve = resolve;\n exports.normalize = normalize;\n exports.equal = equal;\n exports.escapeComponent = escapeComponent;\n exports.unescapeComponent = unescapeComponent;\n\n Object.defineProperty(exports, '__esModule', { value: true });\n\n })));\n //# sourceMappingURL=uri.all.js.map\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_SCHEMES = module.exports.SCHEMES;\n_pctEncChar = module.exports.pctEncChar;\n_pctDecChars = module.exports.pctDecChars;\n_parse = module.exports.parse;\n_removeDotSegments = module.exports.removeDotSegments;\n_serialize = module.exports.serialize;\n_resolveComponents = module.exports.resolveComponents;\n_resolve = module.exports.resolve;\n_normalize = module.exports.normalize;\n_equal = module.exports.equal;\n_escapeComponent = module.exports.escapeComponent;\n_unescapeComponent = module.exports.unescapeComponent;\n___esModule = module.exports.__esModule;\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}