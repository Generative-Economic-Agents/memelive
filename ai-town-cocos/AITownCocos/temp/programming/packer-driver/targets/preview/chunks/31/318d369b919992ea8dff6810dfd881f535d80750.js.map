{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_createCurry.js"],"names":["createCurry","func","bitmask","arity","Ctor","createCtor","wrapper","length","arguments","args","Array","index","placeholder","getHolder","holders","replaceHolders","createRecurry","createHybrid","undefined","fn","root","apply"],"mappings":";;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASA,WAAT,CAAqBC,IAArB,EAA2BC,OAA3B,EAAoCC,KAApC,EAA2C;AACzC,QAAIC,IAAI,GAAGC,UAAU,CAACJ,IAAD,CAArB;;AAEA,aAASK,OAAT,GAAmB;AACjB,UAAIC,MAAM,GAAGC,SAAS,CAACD,MAAvB;AAAA,UACIE,IAAI,GAAGC,KAAK,CAACH,MAAD,CADhB;AAAA,UAEII,KAAK,GAAGJ,MAFZ;AAAA,UAGIK,WAAW,GAAGC,SAAS,CAACP,OAAD,CAH3B;;AAKA,aAAOK,KAAK,EAAZ,EAAgB;AACdF,QAAAA,IAAI,CAACE,KAAD,CAAJ,GAAcH,SAAS,CAACG,KAAD,CAAvB;AACD;;AACD,UAAIG,OAAO,GAAIP,MAAM,GAAG,CAAT,IAAcE,IAAI,CAAC,CAAD,CAAJ,KAAYG,WAA1B,IAAyCH,IAAI,CAACF,MAAM,GAAG,CAAV,CAAJ,KAAqBK,WAA/D,GACV,EADU,GAEVG,cAAc,CAACN,IAAD,EAAOG,WAAP,CAFlB;AAIAL,MAAAA,MAAM,IAAIO,OAAO,CAACP,MAAlB;;AACA,UAAIA,MAAM,GAAGJ,KAAb,EAAoB;AAClB,eAAOa,aAAa,CAClBf,IADkB,EACZC,OADY,EACHe,YADG,EACWX,OAAO,CAACM,WADnB,EACgCM,SADhC,EAElBT,IAFkB,EAEZK,OAFY,EAEHI,SAFG,EAEQA,SAFR,EAEmBf,KAAK,GAAGI,MAF3B,CAApB;AAGD;;AACD,UAAIY,EAAE,GAAI,QAAQ,SAASC,IAAjB,IAAyB,gBAAgBd,OAA1C,GAAqDF,IAArD,GAA4DH,IAArE;AACA,aAAOoB,KAAK,CAACF,EAAD,EAAK,IAAL,EAAWV,IAAX,CAAZ;AACD;;AACD,WAAOH,OAAP;AACD;;;;AA3CMe,MAAAA,K;;AACAhB,MAAAA,U;;AACAY,MAAAA,Y;;AACAD,MAAAA,a;;AACAH,MAAAA,S;;AACAE,MAAAA,c;;AACAK,MAAAA,I;;;yBAuCQpB,W","sourcesContent":["import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport createHybrid from './_createHybrid.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nexport default createCurry;\n"]}