{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/emr-serverless-2021-07-13.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CancelJobRun","http","method","requestUri","responseCode","input","type","required","members","applicationId","location","locationName","jobRunId","output","idempotent","CreateApplication","name","releaseLabel","clientToken","idempotencyToken","initialCapacity","shape","maximumCapacity","tags","autoStartConfiguration","autoStopConfiguration","networkConfiguration","architecture","imageConfiguration","workerTypeSpecifications","runtimeConfiguration","monitoringConfiguration","interactiveConfiguration","arn","DeleteApplication","GetApplication","application","GetDashboardForJobRun","attempt","url","GetJobRun","jobRun","createdBy","createdAt","updatedAt","executionRole","state","stateDetails","configurationOverrides","jobDriver","totalResourceUtilization","vCPUHour","memoryGBHour","storageGBHour","totalExecutionDurationSeconds","executionTimeoutMinutes","billedResourceUtilization","mode","retryPolicy","attemptCreatedAt","attemptUpdatedAt","ListApplications","nextToken","maxResults","states","member","applications","id","ListJobRunAttempts","jobRunAttempts","jobCreatedAt","ListJobRuns","createdAtAfter","createdAtBefore","jobRuns","ListTagsForResource","resourceArn","StartApplication","StartJobRun","executionRoleArn","StopApplication","TagResource","UntagResource","tagKeys","UpdateApplication","shapes","Sa","key","value","workerCount","workerConfiguration","cpu","memory","disk","diskType","Sj","Sk","Sn","enabled","Sp","idleTimeoutMinutes","Sr","subnetIds","securityGroupIds","Sx","imageUri","Sz","S11","classification","properties","sensitive","configurations","S17","s3MonitoringConfiguration","logUri","encryptionKeyArn","managedPersistenceMonitoringConfiguration","cloudWatchLoggingConfiguration","logGroupName","logStreamNamePrefix","logTypes","prometheusMonitoringConfiguration","remoteWriteUrl","S1k","studioEnabled","livyEndpointEnabled","S1r","S1v","resolvedImageDigest","S2a","applicationConfiguration","S2b","sparkSubmit","entryPoint","entryPointArguments","sparkSubmitParameters","hive","query","initQueryFile","parameters","union","S2r","maxAttempts","maxFailedAttemptsPerHour"],"mappings":";;;;;;yBAAe;AACbA,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,EAAE,YADJ;AAERC,UAAAA,cAAc,EAAE,gBAFR;AAGRC,UAAAA,WAAW,EAAE,KAHL;AAIRC,UAAAA,QAAQ,EAAE,WAJF;AAKRC,UAAAA,eAAe,EAAE,gBALT;AAMRC,UAAAA,SAAS,EAAE,gBANH;AAORC,UAAAA,gBAAgB,EAAE,IAPV;AAQRC,UAAAA,WAAW,EAAE,gBARL;AASRC,UAAAA,GAAG,EAAE;AATG,SAFG;AAabC,QAAAA,UAAU,EAAE;AACVC,UAAAA,YAAY,EAAE;AACZC,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,QADJ;AAEJC,cAAAA,UAAU,EAAE,kDAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADM;AAMZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD,iBADR;AAKPC,gBAAAA,QAAQ,EAAE;AACRF,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN;AALH;AANJ,aANK;AAuBZE,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,UAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE,EADR;AAEPG,gBAAAA,QAAQ,EAAE;AAFH;AANH,aAvBI;AAkCZE,YAAAA,UAAU,EAAE;AAlCA,WADJ;AAqCVC,UAAAA,iBAAiB,EAAE;AACjBd,YAAAA,IAAI,EAAE;AACJE,cAAAA,UAAU,EAAE,eADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADW;AAKjBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,cADQ,EAER,MAFQ,EAGR,aAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPQ,gBAAAA,IAAI,EAAE,EADC;AAEPC,gBAAAA,YAAY,EAAE,EAFP;AAGPX,gBAAAA,IAAI,EAAE,EAHC;AAIPY,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBAJN;AAOPC,gBAAAA,eAAe,EAAE;AACfC,kBAAAA,KAAK,EAAE;AADQ,iBAPV;AAUPC,gBAAAA,eAAe,EAAE;AACfD,kBAAAA,KAAK,EAAE;AADQ,iBAVV;AAaPE,gBAAAA,IAAI,EAAE;AACJF,kBAAAA,KAAK,EAAE;AADH,iBAbC;AAgBPG,gBAAAA,sBAAsB,EAAE;AACtBH,kBAAAA,KAAK,EAAE;AADe,iBAhBjB;AAmBPI,gBAAAA,qBAAqB,EAAE;AACrBJ,kBAAAA,KAAK,EAAE;AADc,iBAnBhB;AAsBPK,gBAAAA,oBAAoB,EAAE;AACpBL,kBAAAA,KAAK,EAAE;AADa,iBAtBf;AAyBPM,gBAAAA,YAAY,EAAE,EAzBP;AA0BPC,gBAAAA,kBAAkB,EAAE;AAClBP,kBAAAA,KAAK,EAAE;AADW,iBA1Bb;AA6BPQ,gBAAAA,wBAAwB,EAAE;AACxBR,kBAAAA,KAAK,EAAE;AADiB,iBA7BnB;AAgCPS,gBAAAA,oBAAoB,EAAE;AACpBT,kBAAAA,KAAK,EAAE;AADa,iBAhCf;AAmCPU,gBAAAA,uBAAuB,EAAE;AACvBV,kBAAAA,KAAK,EAAE;AADgB,iBAnClB;AAsCPW,gBAAAA,wBAAwB,EAAE;AACxBX,kBAAAA,KAAK,EAAE;AADiB;AAtCnB;AAPJ,aALU;AAuDjBR,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,KAFQ,CAFJ;AAMNC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE,EADR;AAEPO,gBAAAA,IAAI,EAAE,EAFC;AAGPiB,gBAAAA,GAAG,EAAE;AAHE;AANH,aAvDS;AAmEjBnB,YAAAA,UAAU,EAAE;AAnEK,WArCT;AA0GVoB,UAAAA,iBAAiB,EAAE;AACjBjC,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,QADJ;AAEJC,cAAAA,UAAU,EAAE,+BAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADW;AAMjBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD;AADR;AALJ,aANU;AAkBjBE,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAlBS;AAsBjBM,YAAAA,UAAU,EAAE;AAtBK,WA1GT;AAkIVqB,UAAAA,cAAc,EAAE;AACdlC,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,KADJ;AAEJC,cAAAA,UAAU,EAAE,+BAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADQ;AAMdC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD;AADR;AALJ,aANO;AAkBdE,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP4B,gBAAAA,WAAW,EAAE;AACXf,kBAAAA,KAAK,EAAE;AADI;AADN;AALH;AAlBM,WAlIN;AAgKVgB,UAAAA,qBAAqB,EAAE;AACrBpC,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,KADJ;AAEJC,cAAAA,UAAU,EAAE,4DAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADe;AAMrBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD,iBADR;AAKPC,gBAAAA,QAAQ,EAAE;AACRF,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASP2B,gBAAAA,OAAO,EAAE;AACP5B,kBAAAA,QAAQ,EAAE,aADH;AAEPC,kBAAAA,YAAY,EAAE,SAFP;AAGPL,kBAAAA,IAAI,EAAE;AAHC;AATF;AANJ,aANc;AA4BrBO,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACP+B,gBAAAA,GAAG,EAAE;AADE;AAFH;AA5Ba,WAhKb;AAmMVC,UAAAA,SAAS,EAAE;AACTvC,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,KADJ;AAEJC,cAAAA,UAAU,EAAE,kDAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADG;AAMTC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD,iBADR;AAKPC,gBAAAA,QAAQ,EAAE;AACRF,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASP2B,gBAAAA,OAAO,EAAE;AACP5B,kBAAAA,QAAQ,EAAE,aADH;AAEPC,kBAAAA,YAAY,EAAE,SAFP;AAGPL,kBAAAA,IAAI,EAAE;AAHC;AATF;AANJ,aANE;AA4BTO,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,QADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPiC,gBAAAA,MAAM,EAAE;AACNnC,kBAAAA,IAAI,EAAE,WADA;AAENC,kBAAAA,QAAQ,EAAE,CACR,eADQ,EAER,UAFQ,EAGR,KAHQ,EAIR,WAJQ,EAKR,WALQ,EAMR,WANQ,EAOR,eAPQ,EAQR,OARQ,EASR,cATQ,EAUR,cAVQ,EAWR,WAXQ,CAFJ;AAeNC,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,aAAa,EAAE,EADR;AAEPG,oBAAAA,QAAQ,EAAE,EAFH;AAGPI,oBAAAA,IAAI,EAAE,EAHC;AAIPiB,oBAAAA,GAAG,EAAE,EAJE;AAKPS,oBAAAA,SAAS,EAAE,EALJ;AAMPC,oBAAAA,SAAS,EAAE;AACTrC,sBAAAA,IAAI,EAAE;AADG,qBANJ;AASPsC,oBAAAA,SAAS,EAAE;AACTtC,sBAAAA,IAAI,EAAE;AADG,qBATJ;AAYPuC,oBAAAA,aAAa,EAAE,EAZR;AAaPC,oBAAAA,KAAK,EAAE,EAbA;AAcPC,oBAAAA,YAAY,EAAE,EAdP;AAeP9B,oBAAAA,YAAY,EAAE,EAfP;AAgBP+B,oBAAAA,sBAAsB,EAAE;AACtB3B,sBAAAA,KAAK,EAAE;AADe,qBAhBjB;AAmBP4B,oBAAAA,SAAS,EAAE;AACT5B,sBAAAA,KAAK,EAAE;AADE,qBAnBJ;AAsBPE,oBAAAA,IAAI,EAAE;AACJF,sBAAAA,KAAK,EAAE;AADH,qBAtBC;AAyBP6B,oBAAAA,wBAAwB,EAAE;AACxB5C,sBAAAA,IAAI,EAAE,WADkB;AAExBE,sBAAAA,OAAO,EAAE;AACP2C,wBAAAA,QAAQ,EAAE;AACR7C,0BAAAA,IAAI,EAAE;AADE,yBADH;AAIP8C,wBAAAA,YAAY,EAAE;AACZ9C,0BAAAA,IAAI,EAAE;AADM,yBAJP;AAOP+C,wBAAAA,aAAa,EAAE;AACb/C,0BAAAA,IAAI,EAAE;AADO;AAPR;AAFe,qBAzBnB;AAuCPoB,oBAAAA,oBAAoB,EAAE;AACpBL,sBAAAA,KAAK,EAAE;AADa,qBAvCf;AA0CPiC,oBAAAA,6BAA6B,EAAE;AAC7BhD,sBAAAA,IAAI,EAAE;AADuB,qBA1CxB;AA6CPiD,oBAAAA,uBAAuB,EAAE;AACvBjD,sBAAAA,IAAI,EAAE;AADiB,qBA7ClB;AAgDPkD,oBAAAA,yBAAyB,EAAE;AACzBlD,sBAAAA,IAAI,EAAE,WADmB;AAEzBE,sBAAAA,OAAO,EAAE;AACP2C,wBAAAA,QAAQ,EAAE;AACR7C,0BAAAA,IAAI,EAAE;AADE,yBADH;AAIP8C,wBAAAA,YAAY,EAAE;AACZ9C,0BAAAA,IAAI,EAAE;AADM,yBAJP;AAOP+C,wBAAAA,aAAa,EAAE;AACb/C,0BAAAA,IAAI,EAAE;AADO;AAPR;AAFgB,qBAhDpB;AA8DPmD,oBAAAA,IAAI,EAAE,EA9DC;AA+DPC,oBAAAA,WAAW,EAAE;AACXrC,sBAAAA,KAAK,EAAE;AADI,qBA/DN;AAkEPiB,oBAAAA,OAAO,EAAE;AACPhC,sBAAAA,IAAI,EAAE;AADC,qBAlEF;AAqEPqD,oBAAAA,gBAAgB,EAAE;AAChBrD,sBAAAA,IAAI,EAAE;AADU,qBArEX;AAwEPsD,oBAAAA,gBAAgB,EAAE;AAChBtD,sBAAAA,IAAI,EAAE;AADU;AAxEX;AAfH;AADD;AALH;AA5BC,WAnMD;AAoUVuD,UAAAA,gBAAgB,EAAE;AAChB5D,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,KADJ;AAEJC,cAAAA,UAAU,EAAE,eAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADU;AAMhBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPsD,gBAAAA,SAAS,EAAE;AACTpD,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBADJ;AAKPoD,gBAAAA,UAAU,EAAE;AACVrD,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBALL;AAUP0D,gBAAAA,MAAM,EAAE;AACNtD,kBAAAA,QAAQ,EAAE,aADJ;AAENC,kBAAAA,YAAY,EAAE,QAFR;AAGNL,kBAAAA,IAAI,EAAE,MAHA;AAIN2D,kBAAAA,MAAM,EAAE;AAJF;AAVD;AAFJ,aANS;AA0BhBpD,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,cADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP0D,gBAAAA,YAAY,EAAE;AACZ5D,kBAAAA,IAAI,EAAE,MADM;AAEZ2D,kBAAAA,MAAM,EAAE;AACN3D,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,IADQ,EAER,KAFQ,EAGR,cAHQ,EAIR,MAJQ,EAKR,OALQ,EAMR,WANQ,EAOR,WAPQ,CAFJ;AAWNC,oBAAAA,OAAO,EAAE;AACP2D,sBAAAA,EAAE,EAAE,EADG;AAEPnD,sBAAAA,IAAI,EAAE,EAFC;AAGPiB,sBAAAA,GAAG,EAAE,EAHE;AAIPhB,sBAAAA,YAAY,EAAE,EAJP;AAKPX,sBAAAA,IAAI,EAAE,EALC;AAMPwC,sBAAAA,KAAK,EAAE,EANA;AAOPC,sBAAAA,YAAY,EAAE,EAPP;AAQPJ,sBAAAA,SAAS,EAAE;AACTrC,wBAAAA,IAAI,EAAE;AADG,uBARJ;AAWPsC,sBAAAA,SAAS,EAAE;AACTtC,wBAAAA,IAAI,EAAE;AADG,uBAXJ;AAcPqB,sBAAAA,YAAY,EAAE;AAdP;AAXH;AAFI,iBADP;AAgCPmC,gBAAAA,SAAS,EAAE;AAhCJ;AALH;AA1BQ,WApUR;AAuYVM,UAAAA,kBAAkB,EAAE;AAClBnE,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,KADJ;AAEJC,cAAAA,UAAU,EAAE,2DAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADY;AAMlBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,UAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD,iBADR;AAKPC,gBAAAA,QAAQ,EAAE;AACRF,kBAAAA,QAAQ,EAAE,KADF;AAERC,kBAAAA,YAAY,EAAE;AAFN,iBALH;AASPmD,gBAAAA,SAAS,EAAE;AACTpD,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBATJ;AAaPoD,gBAAAA,UAAU,EAAE;AACVrD,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI;AAbL;AANJ,aANW;AAgClBO,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,gBADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP6D,gBAAAA,cAAc,EAAE;AACd/D,kBAAAA,IAAI,EAAE,MADQ;AAEd2D,kBAAAA,MAAM,EAAE;AACN3D,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,eADQ,EAER,IAFQ,EAGR,KAHQ,EAIR,WAJQ,EAKR,cALQ,EAMR,WANQ,EAOR,WAPQ,EAQR,eARQ,EASR,OATQ,EAUR,cAVQ,EAWR,cAXQ,CAFJ;AAeNC,oBAAAA,OAAO,EAAE;AACPC,sBAAAA,aAAa,EAAE,EADR;AAEP0D,sBAAAA,EAAE,EAAE,EAFG;AAGPnD,sBAAAA,IAAI,EAAE,EAHC;AAIPyC,sBAAAA,IAAI,EAAE,EAJC;AAKPxB,sBAAAA,GAAG,EAAE,EALE;AAMPS,sBAAAA,SAAS,EAAE,EANJ;AAOP4B,sBAAAA,YAAY,EAAE;AACZhE,wBAAAA,IAAI,EAAE;AADM,uBAPP;AAUPqC,sBAAAA,SAAS,EAAE;AACTrC,wBAAAA,IAAI,EAAE;AADG,uBAVJ;AAaPsC,sBAAAA,SAAS,EAAE;AACTtC,wBAAAA,IAAI,EAAE;AADG,uBAbJ;AAgBPuC,sBAAAA,aAAa,EAAE,EAhBR;AAiBPC,sBAAAA,KAAK,EAAE,EAjBA;AAkBPC,sBAAAA,YAAY,EAAE,EAlBP;AAmBP9B,sBAAAA,YAAY,EAAE,EAnBP;AAoBPX,sBAAAA,IAAI,EAAE,EApBC;AAqBPgC,sBAAAA,OAAO,EAAE;AACPhC,wBAAAA,IAAI,EAAE;AADC;AArBF;AAfH;AAFM,iBADT;AA6CPwD,gBAAAA,SAAS,EAAE;AA7CJ;AALH;AAhCU,WAvYV;AA6dVS,UAAAA,WAAW,EAAE;AACXtE,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,KADJ;AAEJC,cAAAA,UAAU,EAAE,uCAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADK;AAMXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD,iBADR;AAKPmD,gBAAAA,SAAS,EAAE;AACTpD,kBAAAA,QAAQ,EAAE,aADD;AAETC,kBAAAA,YAAY,EAAE;AAFL,iBALJ;AASPoD,gBAAAA,UAAU,EAAE;AACVrD,kBAAAA,QAAQ,EAAE,aADA;AAEVC,kBAAAA,YAAY,EAAE,YAFJ;AAGVL,kBAAAA,IAAI,EAAE;AAHI,iBATL;AAcPkE,gBAAAA,cAAc,EAAE;AACd9D,kBAAAA,QAAQ,EAAE,aADI;AAEdC,kBAAAA,YAAY,EAAE,gBAFA;AAGdL,kBAAAA,IAAI,EAAE;AAHQ,iBAdT;AAmBPmE,gBAAAA,eAAe,EAAE;AACf/D,kBAAAA,QAAQ,EAAE,aADK;AAEfC,kBAAAA,YAAY,EAAE,iBAFC;AAGfL,kBAAAA,IAAI,EAAE;AAHS,iBAnBV;AAwBP0D,gBAAAA,MAAM,EAAE;AACNtD,kBAAAA,QAAQ,EAAE,aADJ;AAENC,kBAAAA,YAAY,EAAE,QAFR;AAGNL,kBAAAA,IAAI,EAAE,MAHA;AAIN2D,kBAAAA,MAAM,EAAE;AAJF,iBAxBD;AA8BPR,gBAAAA,IAAI,EAAE;AACJ/C,kBAAAA,QAAQ,EAAE,aADN;AAEJC,kBAAAA,YAAY,EAAE;AAFV;AA9BC;AALJ,aANI;AA+CXE,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,SADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPkE,gBAAAA,OAAO,EAAE;AACPpE,kBAAAA,IAAI,EAAE,MADC;AAEP2D,kBAAAA,MAAM,EAAE;AACN3D,oBAAAA,IAAI,EAAE,WADA;AAENC,oBAAAA,QAAQ,EAAE,CACR,eADQ,EAER,IAFQ,EAGR,KAHQ,EAIR,WAJQ,EAKR,WALQ,EAMR,WANQ,EAOR,eAPQ,EAQR,OARQ,EASR,cATQ,EAUR,cAVQ,CAFJ;AAcNC,oBAAAA,OAAO,EAAE;AACPC,sBAAAA,aAAa,EAAE,EADR;AAEP0D,sBAAAA,EAAE,EAAE,EAFG;AAGPnD,sBAAAA,IAAI,EAAE,EAHC;AAIPyC,sBAAAA,IAAI,EAAE,EAJC;AAKPxB,sBAAAA,GAAG,EAAE,EALE;AAMPS,sBAAAA,SAAS,EAAE,EANJ;AAOPC,sBAAAA,SAAS,EAAE;AACTrC,wBAAAA,IAAI,EAAE;AADG,uBAPJ;AAUPsC,sBAAAA,SAAS,EAAE;AACTtC,wBAAAA,IAAI,EAAE;AADG,uBAVJ;AAaPuC,sBAAAA,aAAa,EAAE,EAbR;AAcPC,sBAAAA,KAAK,EAAE,EAdA;AAePC,sBAAAA,YAAY,EAAE,EAfP;AAgBP9B,sBAAAA,YAAY,EAAE,EAhBP;AAiBPX,sBAAAA,IAAI,EAAE,EAjBC;AAkBPgC,sBAAAA,OAAO,EAAE;AACPhC,wBAAAA,IAAI,EAAE;AADC,uBAlBF;AAqBPqD,sBAAAA,gBAAgB,EAAE;AAChBrD,wBAAAA,IAAI,EAAE;AADU,uBArBX;AAwBPsD,sBAAAA,gBAAgB,EAAE;AAChBtD,wBAAAA,IAAI,EAAE;AADU;AAxBX;AAdH;AAFD,iBADF;AA+CPwD,gBAAAA,SAAS,EAAE;AA/CJ;AALH;AA/CG,WA7dH;AAokBVa,UAAAA,mBAAmB,EAAE;AACnB1E,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,KADJ;AAEJC,cAAAA,UAAU,EAAE,qBAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADa;AAMnBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPoE,gBAAAA,WAAW,EAAE;AACXlE,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH;AADN;AALJ,aANY;AAkBnBE,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AACPe,gBAAAA,IAAI,EAAE;AACJF,kBAAAA,KAAK,EAAE;AADH;AADC;AAFH;AAlBW,WApkBX;AA+lBVwD,UAAAA,gBAAgB,EAAE;AAChB5E,YAAAA,IAAI,EAAE;AACJE,cAAAA,UAAU,EAAE,qCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADU;AAKhBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD;AADR;AALJ,aALS;AAiBhBE,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAjBQ;AAqBhBM,YAAAA,UAAU,EAAE;AArBI,WA/lBR;AAsnBVgE,UAAAA,WAAW,EAAE;AACX7E,YAAAA,IAAI,EAAE;AACJE,cAAAA,UAAU,EAAE,uCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,aAFQ,EAGR,kBAHQ,CAFL;AAOLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD,iBADR;AAKPO,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBALN;AAQP4D,gBAAAA,gBAAgB,EAAE,EARX;AASP9B,gBAAAA,SAAS,EAAE;AACT5B,kBAAAA,KAAK,EAAE;AADE,iBATJ;AAYP2B,gBAAAA,sBAAsB,EAAE;AACtB3B,kBAAAA,KAAK,EAAE;AADe,iBAZjB;AAePE,gBAAAA,IAAI,EAAE;AACJF,kBAAAA,KAAK,EAAE;AADH,iBAfC;AAkBPkC,gBAAAA,uBAAuB,EAAE;AACvBjD,kBAAAA,IAAI,EAAE;AADiB,iBAlBlB;AAqBPU,gBAAAA,IAAI,EAAE,EArBC;AAsBPyC,gBAAAA,IAAI,EAAE,EAtBC;AAuBPC,gBAAAA,WAAW,EAAE;AACXrC,kBAAAA,KAAK,EAAE;AADI;AAvBN;AAPJ,aALI;AAwCXR,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,UAFQ,EAGR,KAHQ,CAFJ;AAONC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE,EADR;AAEPG,gBAAAA,QAAQ,EAAE,EAFH;AAGPqB,gBAAAA,GAAG,EAAE;AAHE;AAPH,aAxCG;AAqDXnB,YAAAA,UAAU,EAAE;AArDD,WAtnBH;AA6qBVkE,UAAAA,eAAe,EAAE;AACf/E,YAAAA,IAAI,EAAE;AACJE,cAAAA,UAAU,EAAE,oCADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADS;AAKfC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD;AADR;AALJ,aALQ;AAiBfE,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAjBO;AAqBfM,YAAAA,UAAU,EAAE;AArBG,WA7qBP;AAosBVmE,UAAAA,WAAW,EAAE;AACXhF,YAAAA,IAAI,EAAE;AACJE,cAAAA,UAAU,EAAE,qBADR;AAEJC,cAAAA,YAAY,EAAE;AAFV,aADK;AAKXC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,MAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPoE,gBAAAA,WAAW,EAAE;AACXlE,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPY,gBAAAA,IAAI,EAAE;AACJF,kBAAAA,KAAK,EAAE;AADH;AALC;AANJ,aALI;AAqBXR,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH;AArBG,WApsBH;AA8tBV0E,UAAAA,aAAa,EAAE;AACbjF,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,QADJ;AAEJC,cAAAA,UAAU,EAAE,qBAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADO;AAMbC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,EAER,SAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPoE,gBAAAA,WAAW,EAAE;AACXlE,kBAAAA,QAAQ,EAAE,KADC;AAEXC,kBAAAA,YAAY,EAAE;AAFH,iBADN;AAKPwE,gBAAAA,OAAO,EAAE;AACPzE,kBAAAA,QAAQ,EAAE,aADH;AAEPC,kBAAAA,YAAY,EAAE,SAFP;AAGPL,kBAAAA,IAAI,EAAE,MAHC;AAIP2D,kBAAAA,MAAM,EAAE;AAJD;AALF;AANJ,aANM;AAyBbpD,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENE,cAAAA,OAAO,EAAE;AAFH,aAzBK;AA6BbM,YAAAA,UAAU,EAAE;AA7BC,WA9tBL;AA6vBVsE,UAAAA,iBAAiB,EAAE;AACjBnF,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,OADJ;AAEJC,cAAAA,UAAU,EAAE,+BAFR;AAGJC,cAAAA,YAAY,EAAE;AAHV,aADW;AAMjBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,eADQ,EAER,aAFQ,CAFL;AAMLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE;AACbC,kBAAAA,QAAQ,EAAE,KADG;AAEbC,kBAAAA,YAAY,EAAE;AAFD,iBADR;AAKPO,gBAAAA,WAAW,EAAE;AACXC,kBAAAA,gBAAgB,EAAE;AADP,iBALN;AAQPC,gBAAAA,eAAe,EAAE;AACfC,kBAAAA,KAAK,EAAE;AADQ,iBARV;AAWPC,gBAAAA,eAAe,EAAE;AACfD,kBAAAA,KAAK,EAAE;AADQ,iBAXV;AAcPG,gBAAAA,sBAAsB,EAAE;AACtBH,kBAAAA,KAAK,EAAE;AADe,iBAdjB;AAiBPI,gBAAAA,qBAAqB,EAAE;AACrBJ,kBAAAA,KAAK,EAAE;AADc,iBAjBhB;AAoBPK,gBAAAA,oBAAoB,EAAE;AACpBL,kBAAAA,KAAK,EAAE;AADa,iBApBf;AAuBPM,gBAAAA,YAAY,EAAE,EAvBP;AAwBPC,gBAAAA,kBAAkB,EAAE;AAClBP,kBAAAA,KAAK,EAAE;AADW,iBAxBb;AA2BPQ,gBAAAA,wBAAwB,EAAE;AACxBR,kBAAAA,KAAK,EAAE;AADiB,iBA3BnB;AA8BPW,gBAAAA,wBAAwB,EAAE;AACxBX,kBAAAA,KAAK,EAAE;AADiB,iBA9BnB;AAiCPJ,gBAAAA,YAAY,EAAE,EAjCP;AAkCPa,gBAAAA,oBAAoB,EAAE;AACpBT,kBAAAA,KAAK,EAAE;AADa,iBAlCf;AAqCPU,gBAAAA,uBAAuB,EAAE;AACvBV,kBAAAA,KAAK,EAAE;AADgB;AArClB;AANJ,aANU;AAsDjBR,YAAAA,MAAM,EAAE;AACNP,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACP4B,gBAAAA,WAAW,EAAE;AACXf,kBAAAA,KAAK,EAAE;AADI;AADN;AALH;AAtDS;AA7vBT,SAbC;AA60BbgE,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAE;AACFhF,YAAAA,IAAI,EAAE,KADJ;AAEFiF,YAAAA,GAAG,EAAE,EAFH;AAGFC,YAAAA,KAAK,EAAE;AACLlF,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,QAAQ,EAAE,CACR,aADQ,CAFL;AAKLC,cAAAA,OAAO,EAAE;AACPiF,gBAAAA,WAAW,EAAE;AACXnF,kBAAAA,IAAI,EAAE;AADK,iBADN;AAIPoF,gBAAAA,mBAAmB,EAAE;AACnBpF,kBAAAA,IAAI,EAAE,WADa;AAEnBC,kBAAAA,QAAQ,EAAE,CACR,KADQ,EAER,QAFQ,CAFS;AAMnBC,kBAAAA,OAAO,EAAE;AACPmF,oBAAAA,GAAG,EAAE,EADE;AAEPC,oBAAAA,MAAM,EAAE,EAFD;AAGPC,oBAAAA,IAAI,EAAE,EAHC;AAIPC,oBAAAA,QAAQ,EAAE;AAJH;AANU;AAJd;AALJ;AAHL,WADE;AA6BNC,UAAAA,EAAE,EAAE;AACFzF,YAAAA,IAAI,EAAE,WADJ;AAEFC,YAAAA,QAAQ,EAAE,CACR,KADQ,EAER,QAFQ,CAFR;AAMFC,YAAAA,OAAO,EAAE;AACPmF,cAAAA,GAAG,EAAE,EADE;AAEPC,cAAAA,MAAM,EAAE,EAFD;AAGPC,cAAAA,IAAI,EAAE;AAHC;AANP,WA7BE;AAyCNG,UAAAA,EAAE,EAAE;AACF1F,YAAAA,IAAI,EAAE,KADJ;AAEFiF,YAAAA,GAAG,EAAE,EAFH;AAGFC,YAAAA,KAAK,EAAE;AAHL,WAzCE;AA8CNS,UAAAA,EAAE,EAAE;AACF3F,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACP0F,cAAAA,OAAO,EAAE;AACP5F,gBAAAA,IAAI,EAAE;AADC;AADF;AAFP,WA9CE;AAsDN6F,UAAAA,EAAE,EAAE;AACF7F,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACP0F,cAAAA,OAAO,EAAE;AACP5F,gBAAAA,IAAI,EAAE;AADC,eADF;AAIP8F,cAAAA,kBAAkB,EAAE;AAClB9F,gBAAAA,IAAI,EAAE;AADY;AAJb;AAFP,WAtDE;AAiEN+F,UAAAA,EAAE,EAAE;AACF/F,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACP8F,cAAAA,SAAS,EAAE;AACThG,gBAAAA,IAAI,EAAE,MADG;AAET2D,gBAAAA,MAAM,EAAE;AAFC,eADJ;AAKPsC,cAAAA,gBAAgB,EAAE;AAChBjG,gBAAAA,IAAI,EAAE,MADU;AAEhB2D,gBAAAA,MAAM,EAAE;AAFQ;AALX;AAFP,WAjEE;AA8ENuC,UAAAA,EAAE,EAAE;AACFlG,YAAAA,IAAI,EAAE,WADJ;AAEFE,YAAAA,OAAO,EAAE;AACPiG,cAAAA,QAAQ,EAAE;AADH;AAFP,WA9EE;AAoFNC,UAAAA,EAAE,EAAE;AACFpG,YAAAA,IAAI,EAAE,KADJ;AAEFiF,YAAAA,GAAG,EAAE,EAFH;AAGFC,YAAAA,KAAK,EAAE;AACLlF,cAAAA,IAAI,EAAE,WADD;AAELE,cAAAA,OAAO,EAAE;AACPoB,gBAAAA,kBAAkB,EAAE;AAClBP,kBAAAA,KAAK,EAAE;AADW;AADb;AAFJ;AAHL,WApFE;AAgGNsF,UAAAA,GAAG,EAAE;AACHrG,YAAAA,IAAI,EAAE,MADH;AAEH2D,YAAAA,MAAM,EAAE;AACN3D,cAAAA,IAAI,EAAE,WADA;AAENC,cAAAA,QAAQ,EAAE,CACR,gBADQ,CAFJ;AAKNC,cAAAA,OAAO,EAAE;AACPoG,gBAAAA,cAAc,EAAE,EADT;AAEPC,gBAAAA,UAAU,EAAE;AACVvG,kBAAAA,IAAI,EAAE,KADI;AAEViF,kBAAAA,GAAG,EAAE,EAFK;AAGVC,kBAAAA,KAAK,EAAE,EAHG;AAIVsB,kBAAAA,SAAS,EAAE;AAJD,iBAFL;AAQPC,gBAAAA,cAAc,EAAE;AACd1F,kBAAAA,KAAK,EAAE;AADO;AART;AALH;AAFL,WAhGC;AAqHN2F,UAAAA,GAAG,EAAE;AACH1G,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPyG,cAAAA,yBAAyB,EAAE;AACzB3G,gBAAAA,IAAI,EAAE,WADmB;AAEzBE,gBAAAA,OAAO,EAAE;AACP0G,kBAAAA,MAAM,EAAE,EADD;AAEPC,kBAAAA,gBAAgB,EAAE;AAFX;AAFgB,eADpB;AAQPC,cAAAA,yCAAyC,EAAE;AACzC9G,gBAAAA,IAAI,EAAE,WADmC;AAEzCE,gBAAAA,OAAO,EAAE;AACP0F,kBAAAA,OAAO,EAAE;AACP5F,oBAAAA,IAAI,EAAE;AADC,mBADF;AAIP6G,kBAAAA,gBAAgB,EAAE;AAJX;AAFgC,eARpC;AAiBPE,cAAAA,8BAA8B,EAAE;AAC9B/G,gBAAAA,IAAI,EAAE,WADwB;AAE9BC,gBAAAA,QAAQ,EAAE,CACR,SADQ,CAFoB;AAK9BC,gBAAAA,OAAO,EAAE;AACP0F,kBAAAA,OAAO,EAAE;AACP5F,oBAAAA,IAAI,EAAE;AADC,mBADF;AAIPgH,kBAAAA,YAAY,EAAE,EAJP;AAKPC,kBAAAA,mBAAmB,EAAE,EALd;AAMPJ,kBAAAA,gBAAgB,EAAE,EANX;AAOPK,kBAAAA,QAAQ,EAAE;AACRlH,oBAAAA,IAAI,EAAE,KADE;AAERiF,oBAAAA,GAAG,EAAE,EAFG;AAGRC,oBAAAA,KAAK,EAAE;AACLlF,sBAAAA,IAAI,EAAE,MADD;AAEL2D,sBAAAA,MAAM,EAAE;AAFH;AAHC;AAPH;AALqB,eAjBzB;AAuCPwD,cAAAA,iCAAiC,EAAE;AACjCnH,gBAAAA,IAAI,EAAE,WAD2B;AAEjCE,gBAAAA,OAAO,EAAE;AACPkH,kBAAAA,cAAc,EAAE;AADT;AAFwB;AAvC5B;AAFN,WArHC;AAsKNC,UAAAA,GAAG,EAAE;AACHrH,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPoH,cAAAA,aAAa,EAAE;AACbtH,gBAAAA,IAAI,EAAE;AADO,eADR;AAIPuH,cAAAA,mBAAmB,EAAE;AACnBvH,gBAAAA,IAAI,EAAE;AADa;AAJd;AAFN,WAtKC;AAiLNwH,UAAAA,GAAG,EAAE;AACHxH,YAAAA,IAAI,EAAE,WADH;AAEHC,YAAAA,QAAQ,EAAE,CACR,eADQ,EAER,KAFQ,EAGR,cAHQ,EAIR,MAJQ,EAKR,OALQ,EAMR,WANQ,EAOR,WAPQ,CAFP;AAWHC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAE,EADR;AAEPO,cAAAA,IAAI,EAAE,EAFC;AAGPiB,cAAAA,GAAG,EAAE,EAHE;AAIPhB,cAAAA,YAAY,EAAE,EAJP;AAKPX,cAAAA,IAAI,EAAE,EALC;AAMPwC,cAAAA,KAAK,EAAE,EANA;AAOPC,cAAAA,YAAY,EAAE,EAPP;AAQP3B,cAAAA,eAAe,EAAE;AACfC,gBAAAA,KAAK,EAAE;AADQ,eARV;AAWPC,cAAAA,eAAe,EAAE;AACfD,gBAAAA,KAAK,EAAE;AADQ,eAXV;AAcPsB,cAAAA,SAAS,EAAE;AACTrC,gBAAAA,IAAI,EAAE;AADG,eAdJ;AAiBPsC,cAAAA,SAAS,EAAE;AACTtC,gBAAAA,IAAI,EAAE;AADG,eAjBJ;AAoBPiB,cAAAA,IAAI,EAAE;AACJF,gBAAAA,KAAK,EAAE;AADH,eApBC;AAuBPG,cAAAA,sBAAsB,EAAE;AACtBH,gBAAAA,KAAK,EAAE;AADe,eAvBjB;AA0BPI,cAAAA,qBAAqB,EAAE;AACrBJ,gBAAAA,KAAK,EAAE;AADc,eA1BhB;AA6BPK,cAAAA,oBAAoB,EAAE;AACpBL,gBAAAA,KAAK,EAAE;AADa,eA7Bf;AAgCPM,cAAAA,YAAY,EAAE,EAhCP;AAiCPC,cAAAA,kBAAkB,EAAE;AAClBP,gBAAAA,KAAK,EAAE;AADW,eAjCb;AAoCPQ,cAAAA,wBAAwB,EAAE;AACxBvB,gBAAAA,IAAI,EAAE,KADkB;AAExBiF,gBAAAA,GAAG,EAAE,EAFmB;AAGxBC,gBAAAA,KAAK,EAAE;AACLlF,kBAAAA,IAAI,EAAE,WADD;AAELE,kBAAAA,OAAO,EAAE;AACPoB,oBAAAA,kBAAkB,EAAE;AAClBP,sBAAAA,KAAK,EAAE;AADW;AADb;AAFJ;AAHiB,eApCnB;AAgDPS,cAAAA,oBAAoB,EAAE;AACpBT,gBAAAA,KAAK,EAAE;AADa,eAhDf;AAmDPU,cAAAA,uBAAuB,EAAE;AACvBV,gBAAAA,KAAK,EAAE;AADgB,eAnDlB;AAsDPW,cAAAA,wBAAwB,EAAE;AACxBX,gBAAAA,KAAK,EAAE;AADiB;AAtDnB;AAXN,WAjLC;AAuPN0G,UAAAA,GAAG,EAAE;AACHzH,YAAAA,IAAI,EAAE,WADH;AAEHC,YAAAA,QAAQ,EAAE,CACR,UADQ,CAFP;AAKHC,YAAAA,OAAO,EAAE;AACPiG,cAAAA,QAAQ,EAAE,EADH;AAEPuB,cAAAA,mBAAmB,EAAE;AAFd;AALN,WAvPC;AAiQNC,UAAAA,GAAG,EAAE;AACH3H,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP0H,cAAAA,wBAAwB,EAAE;AACxB7G,gBAAAA,KAAK,EAAE;AADiB,eADnB;AAIPU,cAAAA,uBAAuB,EAAE;AACvBV,gBAAAA,KAAK,EAAE;AADgB;AAJlB;AAFN,WAjQC;AA4QN8G,UAAAA,GAAG,EAAE;AACH7H,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACP4H,cAAAA,WAAW,EAAE;AACX9H,gBAAAA,IAAI,EAAE,WADK;AAEXC,gBAAAA,QAAQ,EAAE,CACR,YADQ,CAFC;AAKXC,gBAAAA,OAAO,EAAE;AACP6H,kBAAAA,UAAU,EAAE;AACV/H,oBAAAA,IAAI,EAAE,QADI;AAEVwG,oBAAAA,SAAS,EAAE;AAFD,mBADL;AAKPwB,kBAAAA,mBAAmB,EAAE;AACnBhI,oBAAAA,IAAI,EAAE,MADa;AAEnB2D,oBAAAA,MAAM,EAAE;AACN3D,sBAAAA,IAAI,EAAE,QADA;AAENwG,sBAAAA,SAAS,EAAE;AAFL;AAFW,mBALd;AAYPyB,kBAAAA,qBAAqB,EAAE;AACrBjI,oBAAAA,IAAI,EAAE,QADe;AAErBwG,oBAAAA,SAAS,EAAE;AAFU;AAZhB;AALE,eADN;AAwBP0B,cAAAA,IAAI,EAAE;AACJlI,gBAAAA,IAAI,EAAE,WADF;AAEJC,gBAAAA,QAAQ,EAAE,CACR,OADQ,CAFN;AAKJC,gBAAAA,OAAO,EAAE;AACPiI,kBAAAA,KAAK,EAAE;AACLnI,oBAAAA,IAAI,EAAE,QADD;AAELwG,oBAAAA,SAAS,EAAE;AAFN,mBADA;AAKP4B,kBAAAA,aAAa,EAAE;AACbpI,oBAAAA,IAAI,EAAE,QADO;AAEbwG,oBAAAA,SAAS,EAAE;AAFE,mBALR;AASP6B,kBAAAA,UAAU,EAAE;AACVrI,oBAAAA,IAAI,EAAE,QADI;AAEVwG,oBAAAA,SAAS,EAAE;AAFD;AATL;AALL;AAxBC,aAFN;AA+CH8B,YAAAA,KAAK,EAAE;AA/CJ,WA5QC;AA6TNC,UAAAA,GAAG,EAAE;AACHvI,YAAAA,IAAI,EAAE,WADH;AAEHE,YAAAA,OAAO,EAAE;AACPsI,cAAAA,WAAW,EAAE;AACXxI,gBAAAA,IAAI,EAAE;AADK,eADN;AAIPyI,cAAAA,wBAAwB,EAAE;AACxBzI,gBAAAA,IAAI,EAAE;AADkB;AAJnB;AAFN;AA7TC;AA70BK,O","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-07-13',\n    endpointPrefix: 'emr-serverless',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'EMR Serverless',\n    serviceId: 'EMR Serverless',\n    signatureVersion: 'v4',\n    signingName: 'emr-serverless',\n    uid: 'emr-serverless-2021-07-13'\n  },\n  operations: {\n    CancelJobRun: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/applications/{applicationId}/jobruns/{jobRunId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'jobRunId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          jobRunId: {\n            location: 'uri',\n            locationName: 'jobRunId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'jobRunId'\n        ],\n        members: {\n          applicationId: {},\n          jobRunId: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateApplication: {\n      http: {\n        requestUri: '/applications',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'releaseLabel',\n          'type',\n          'clientToken'\n        ],\n        members: {\n          name: {},\n          releaseLabel: {},\n          type: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          initialCapacity: {\n            shape: 'Sa'\n          },\n          maximumCapacity: {\n            shape: 'Sj'\n          },\n          tags: {\n            shape: 'Sk'\n          },\n          autoStartConfiguration: {\n            shape: 'Sn'\n          },\n          autoStopConfiguration: {\n            shape: 'Sp'\n          },\n          networkConfiguration: {\n            shape: 'Sr'\n          },\n          architecture: {},\n          imageConfiguration: {\n            shape: 'Sx'\n          },\n          workerTypeSpecifications: {\n            shape: 'Sz'\n          },\n          runtimeConfiguration: {\n            shape: 'S11'\n          },\n          monitoringConfiguration: {\n            shape: 'S17'\n          },\n          interactiveConfiguration: {\n            shape: 'S1k'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'arn'\n        ],\n        members: {\n          applicationId: {},\n          name: {},\n          arn: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteApplication: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/applications/{applicationId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetApplication: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'application'\n        ],\n        members: {\n          application: {\n            shape: 'S1r'\n          }\n        }\n      }\n    },\n    GetDashboardForJobRun: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/jobruns/{jobRunId}/dashboard',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'jobRunId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          jobRunId: {\n            location: 'uri',\n            locationName: 'jobRunId'\n          },\n          attempt: {\n            location: 'querystring',\n            locationName: 'attempt',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          url: {}\n        }\n      }\n    },\n    GetJobRun: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/jobruns/{jobRunId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'jobRunId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          jobRunId: {\n            location: 'uri',\n            locationName: 'jobRunId'\n          },\n          attempt: {\n            location: 'querystring',\n            locationName: 'attempt',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobRun'\n        ],\n        members: {\n          jobRun: {\n            type: 'structure',\n            required: [\n              'applicationId',\n              'jobRunId',\n              'arn',\n              'createdBy',\n              'createdAt',\n              'updatedAt',\n              'executionRole',\n              'state',\n              'stateDetails',\n              'releaseLabel',\n              'jobDriver'\n            ],\n            members: {\n              applicationId: {},\n              jobRunId: {},\n              name: {},\n              arn: {},\n              createdBy: {},\n              createdAt: {\n                type: 'timestamp'\n              },\n              updatedAt: {\n                type: 'timestamp'\n              },\n              executionRole: {},\n              state: {},\n              stateDetails: {},\n              releaseLabel: {},\n              configurationOverrides: {\n                shape: 'S2a'\n              },\n              jobDriver: {\n                shape: 'S2b'\n              },\n              tags: {\n                shape: 'Sk'\n              },\n              totalResourceUtilization: {\n                type: 'structure',\n                members: {\n                  vCPUHour: {\n                    type: 'double'\n                  },\n                  memoryGBHour: {\n                    type: 'double'\n                  },\n                  storageGBHour: {\n                    type: 'double'\n                  }\n                }\n              },\n              networkConfiguration: {\n                shape: 'Sr'\n              },\n              totalExecutionDurationSeconds: {\n                type: 'integer'\n              },\n              executionTimeoutMinutes: {\n                type: 'long'\n              },\n              billedResourceUtilization: {\n                type: 'structure',\n                members: {\n                  vCPUHour: {\n                    type: 'double'\n                  },\n                  memoryGBHour: {\n                    type: 'double'\n                  },\n                  storageGBHour: {\n                    type: 'double'\n                  }\n                }\n              },\n              mode: {},\n              retryPolicy: {\n                shape: 'S2r'\n              },\n              attempt: {\n                type: 'integer'\n              },\n              attemptCreatedAt: {\n                type: 'timestamp'\n              },\n              attemptUpdatedAt: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    ListApplications: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          states: {\n            location: 'querystring',\n            locationName: 'states',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applications'\n        ],\n        members: {\n          applications: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'id',\n                'arn',\n                'releaseLabel',\n                'type',\n                'state',\n                'createdAt',\n                'updatedAt'\n              ],\n              members: {\n                id: {},\n                name: {},\n                arn: {},\n                releaseLabel: {},\n                type: {},\n                state: {},\n                stateDetails: {},\n                createdAt: {\n                  type: 'timestamp'\n                },\n                updatedAt: {\n                  type: 'timestamp'\n                },\n                architecture: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListJobRunAttempts: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/jobruns/{jobRunId}/attempts',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'jobRunId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          jobRunId: {\n            location: 'uri',\n            locationName: 'jobRunId'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobRunAttempts'\n        ],\n        members: {\n          jobRunAttempts: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'applicationId',\n                'id',\n                'arn',\n                'createdBy',\n                'jobCreatedAt',\n                'createdAt',\n                'updatedAt',\n                'executionRole',\n                'state',\n                'stateDetails',\n                'releaseLabel'\n              ],\n              members: {\n                applicationId: {},\n                id: {},\n                name: {},\n                mode: {},\n                arn: {},\n                createdBy: {},\n                jobCreatedAt: {\n                  type: 'timestamp'\n                },\n                createdAt: {\n                  type: 'timestamp'\n                },\n                updatedAt: {\n                  type: 'timestamp'\n                },\n                executionRole: {},\n                state: {},\n                stateDetails: {},\n                releaseLabel: {},\n                type: {},\n                attempt: {\n                  type: 'integer'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListJobRuns: {\n      http: {\n        method: 'GET',\n        requestUri: '/applications/{applicationId}/jobruns',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          createdAtAfter: {\n            location: 'querystring',\n            locationName: 'createdAtAfter',\n            type: 'timestamp'\n          },\n          createdAtBefore: {\n            location: 'querystring',\n            locationName: 'createdAtBefore',\n            type: 'timestamp'\n          },\n          states: {\n            location: 'querystring',\n            locationName: 'states',\n            type: 'list',\n            member: {}\n          },\n          mode: {\n            location: 'querystring',\n            locationName: 'mode'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'jobRuns'\n        ],\n        members: {\n          jobRuns: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'applicationId',\n                'id',\n                'arn',\n                'createdBy',\n                'createdAt',\n                'updatedAt',\n                'executionRole',\n                'state',\n                'stateDetails',\n                'releaseLabel'\n              ],\n              members: {\n                applicationId: {},\n                id: {},\n                name: {},\n                mode: {},\n                arn: {},\n                createdBy: {},\n                createdAt: {\n                  type: 'timestamp'\n                },\n                updatedAt: {\n                  type: 'timestamp'\n                },\n                executionRole: {},\n                state: {},\n                stateDetails: {},\n                releaseLabel: {},\n                type: {},\n                attempt: {\n                  type: 'integer'\n                },\n                attemptCreatedAt: {\n                  type: 'timestamp'\n                },\n                attemptUpdatedAt: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      }\n    },\n    StartApplication: {\n      http: {\n        requestUri: '/applications/{applicationId}/start',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    StartJobRun: {\n      http: {\n        requestUri: '/applications/{applicationId}/jobruns',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'clientToken',\n          'executionRoleArn'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          executionRoleArn: {},\n          jobDriver: {\n            shape: 'S2b'\n          },\n          configurationOverrides: {\n            shape: 'S2a'\n          },\n          tags: {\n            shape: 'Sk'\n          },\n          executionTimeoutMinutes: {\n            type: 'long'\n          },\n          name: {},\n          mode: {},\n          retryPolicy: {\n            shape: 'S2r'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'jobRunId',\n          'arn'\n        ],\n        members: {\n          applicationId: {},\n          jobRunId: {},\n          arn: {}\n        }\n      },\n      idempotent: true\n    },\n    StopApplication: {\n      http: {\n        requestUri: '/applications/{applicationId}/stop',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sk'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateApplication: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/applications/{applicationId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'applicationId',\n          'clientToken'\n        ],\n        members: {\n          applicationId: {\n            location: 'uri',\n            locationName: 'applicationId'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          initialCapacity: {\n            shape: 'Sa'\n          },\n          maximumCapacity: {\n            shape: 'Sj'\n          },\n          autoStartConfiguration: {\n            shape: 'Sn'\n          },\n          autoStopConfiguration: {\n            shape: 'Sp'\n          },\n          networkConfiguration: {\n            shape: 'Sr'\n          },\n          architecture: {},\n          imageConfiguration: {\n            shape: 'Sx'\n          },\n          workerTypeSpecifications: {\n            shape: 'Sz'\n          },\n          interactiveConfiguration: {\n            shape: 'S1k'\n          },\n          releaseLabel: {},\n          runtimeConfiguration: {\n            shape: 'S11'\n          },\n          monitoringConfiguration: {\n            shape: 'S17'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'application'\n        ],\n        members: {\n          application: {\n            shape: 'S1r'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    Sa: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        required: [\n          'workerCount'\n        ],\n        members: {\n          workerCount: {\n            type: 'long'\n          },\n          workerConfiguration: {\n            type: 'structure',\n            required: [\n              'cpu',\n              'memory'\n            ],\n            members: {\n              cpu: {},\n              memory: {},\n              disk: {},\n              diskType: {}\n            }\n          }\n        }\n      }\n    },\n    Sj: {\n      type: 'structure',\n      required: [\n        'cpu',\n        'memory'\n      ],\n      members: {\n        cpu: {},\n        memory: {},\n        disk: {}\n      }\n    },\n    Sk: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sn: {\n      type: 'structure',\n      members: {\n        enabled: {\n          type: 'boolean'\n        }\n      }\n    },\n    Sp: {\n      type: 'structure',\n      members: {\n        enabled: {\n          type: 'boolean'\n        },\n        idleTimeoutMinutes: {\n          type: 'integer'\n        }\n      }\n    },\n    Sr: {\n      type: 'structure',\n      members: {\n        subnetIds: {\n          type: 'list',\n          member: {}\n        },\n        securityGroupIds: {\n          type: 'list',\n          member: {}\n        }\n      }\n    },\n    Sx: {\n      type: 'structure',\n      members: {\n        imageUri: {}\n      }\n    },\n    Sz: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        members: {\n          imageConfiguration: {\n            shape: 'Sx'\n          }\n        }\n      }\n    },\n    S11: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'classification'\n        ],\n        members: {\n          classification: {},\n          properties: {\n            type: 'map',\n            key: {},\n            value: {},\n            sensitive: true\n          },\n          configurations: {\n            shape: 'S11'\n          }\n        }\n      }\n    },\n    S17: {\n      type: 'structure',\n      members: {\n        s3MonitoringConfiguration: {\n          type: 'structure',\n          members: {\n            logUri: {},\n            encryptionKeyArn: {}\n          }\n        },\n        managedPersistenceMonitoringConfiguration: {\n          type: 'structure',\n          members: {\n            enabled: {\n              type: 'boolean'\n            },\n            encryptionKeyArn: {}\n          }\n        },\n        cloudWatchLoggingConfiguration: {\n          type: 'structure',\n          required: [\n            'enabled'\n          ],\n          members: {\n            enabled: {\n              type: 'boolean'\n            },\n            logGroupName: {},\n            logStreamNamePrefix: {},\n            encryptionKeyArn: {},\n            logTypes: {\n              type: 'map',\n              key: {},\n              value: {\n                type: 'list',\n                member: {}\n              }\n            }\n          }\n        },\n        prometheusMonitoringConfiguration: {\n          type: 'structure',\n          members: {\n            remoteWriteUrl: {}\n          }\n        }\n      }\n    },\n    S1k: {\n      type: 'structure',\n      members: {\n        studioEnabled: {\n          type: 'boolean'\n        },\n        livyEndpointEnabled: {\n          type: 'boolean'\n        }\n      }\n    },\n    S1r: {\n      type: 'structure',\n      required: [\n        'applicationId',\n        'arn',\n        'releaseLabel',\n        'type',\n        'state',\n        'createdAt',\n        'updatedAt'\n      ],\n      members: {\n        applicationId: {},\n        name: {},\n        arn: {},\n        releaseLabel: {},\n        type: {},\n        state: {},\n        stateDetails: {},\n        initialCapacity: {\n          shape: 'Sa'\n        },\n        maximumCapacity: {\n          shape: 'Sj'\n        },\n        createdAt: {\n          type: 'timestamp'\n        },\n        updatedAt: {\n          type: 'timestamp'\n        },\n        tags: {\n          shape: 'Sk'\n        },\n        autoStartConfiguration: {\n          shape: 'Sn'\n        },\n        autoStopConfiguration: {\n          shape: 'Sp'\n        },\n        networkConfiguration: {\n          shape: 'Sr'\n        },\n        architecture: {},\n        imageConfiguration: {\n          shape: 'S1v'\n        },\n        workerTypeSpecifications: {\n          type: 'map',\n          key: {},\n          value: {\n            type: 'structure',\n            members: {\n              imageConfiguration: {\n                shape: 'S1v'\n              }\n            }\n          }\n        },\n        runtimeConfiguration: {\n          shape: 'S11'\n        },\n        monitoringConfiguration: {\n          shape: 'S17'\n        },\n        interactiveConfiguration: {\n          shape: 'S1k'\n        }\n      }\n    },\n    S1v: {\n      type: 'structure',\n      required: [\n        'imageUri'\n      ],\n      members: {\n        imageUri: {},\n        resolvedImageDigest: {}\n      }\n    },\n    S2a: {\n      type: 'structure',\n      members: {\n        applicationConfiguration: {\n          shape: 'S11'\n        },\n        monitoringConfiguration: {\n          shape: 'S17'\n        }\n      }\n    },\n    S2b: {\n      type: 'structure',\n      members: {\n        sparkSubmit: {\n          type: 'structure',\n          required: [\n            'entryPoint'\n          ],\n          members: {\n            entryPoint: {\n              type: 'string',\n              sensitive: true\n            },\n            entryPointArguments: {\n              type: 'list',\n              member: {\n                type: 'string',\n                sensitive: true\n              }\n            },\n            sparkSubmitParameters: {\n              type: 'string',\n              sensitive: true\n            }\n          }\n        },\n        hive: {\n          type: 'structure',\n          required: [\n            'query'\n          ],\n          members: {\n            query: {\n              type: 'string',\n              sensitive: true\n            },\n            initQueryFile: {\n              type: 'string',\n              sensitive: true\n            },\n            parameters: {\n              type: 'string',\n              sensitive: true\n            }\n          }\n        }\n      },\n      union: true\n    },\n    S2r: {\n      type: 'structure',\n      members: {\n        maxAttempts: {\n          type: 'integer'\n        },\n        maxFailedAttemptsPerHour: {\n          type: 'integer'\n        }\n      }\n    }\n  }\n}"]}