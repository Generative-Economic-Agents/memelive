{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/codecatalyst-2022-09-28.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateAccessToken","http","method","requestUri","responseCode","input","type","required","members","name","expiresTime","shape","output","secret","sensitive","accessTokenId","CreateDevEnvironment","spaceName","location","locationName","projectName","repositories","member","repositoryName","branchName","clientToken","alias","ides","instanceType","inactivityTimeoutMinutes","persistentStorage","sizeInGiB","vpcConnectionName","id","idempotent","CreateProject","displayName","description","CreateSourceRepository","CreateSourceRepositoryBranch","sourceRepositoryName","headCommitId","ref","lastUpdatedTime","DeleteAccessToken","DeleteDevEnvironment","DeleteProject","DeleteSourceRepository","DeleteSpace","GetDevEnvironment","creatorId","status","statusReason","GetProject","GetSourceRepository","createdTime","GetSourceRepositoryCloneUrls","https","GetSpace","regionName","GetSubscription","subscriptionType","awsAccountName","pendingSubscriptionType","pendingSubscriptionStartTime","GetUserDetails","userName","userId","primaryEmail","email","verified","GetWorkflow","sourceBranchName","definition","path","runMode","GetWorkflowRun","workflowId","statusReasons","startTime","endTime","ListAccessTokens","maxResults","nextToken","items","ListDevEnvironmentSessions","devEnvironmentId","startedTime","ListDevEnvironments","filters","key","values","comparisonOperator","ListEventLogs","eventName","eventType","eventCategory","eventSource","eventTime","operationType","userIdentity","userType","principalId","awsAccountId","projectInformation","projectId","requestId","requestPayload","responsePayload","errorCode","sourceIpAddress","userAgent","ListProjects","ListSourceRepositories","ListSourceRepositoryBranches","ListSpaces","ListWorkflowRuns","sortBy","workflowName","ListWorkflows","StartDevEnvironment","StartDevEnvironmentSession","sessionConfiguration","sessionType","executeCommandSessionConfiguration","command","arguments","accessDetails","streamUrl","tokenValue","sessionId","StartWorkflowRun","idempotencyToken","StopDevEnvironment","StopDevEnvironmentSession","UpdateDevEnvironment","UpdateProject","UpdateSpace","VerifySession","identity","shapes","S3","timestampFormat","Sf","runtime","S1f","S1i","S1m","S1s","S2g","S2y","S3g","contentType","data","S53"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2022-09-28',\n    endpointPrefix: 'codecatalyst',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon CodeCatalyst',\n    serviceId: 'CodeCatalyst',\n    signatureVersion: 'bearer',\n    signingName: 'codecatalyst',\n    uid: 'codecatalyst-2022-09-28'\n  },\n  operations: {\n    CreateAccessToken: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/accessTokens',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {},\n          expiresTime: {\n            shape: 'S3'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'secret',\n          'name',\n          'expiresTime',\n          'accessTokenId'\n        ],\n        members: {\n          secret: {\n            type: 'string',\n            sensitive: true\n          },\n          name: {},\n          expiresTime: {\n            shape: 'S3'\n          },\n          accessTokenId: {}\n        }\n      }\n    },\n    CreateDevEnvironment: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/devEnvironments',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'instanceType',\n          'persistentStorage'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          repositories: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'repositoryName'\n              ],\n              members: {\n                repositoryName: {},\n                branchName: {}\n              }\n            }\n          },\n          clientToken: {},\n          alias: {},\n          ides: {\n            shape: 'Sf'\n          },\n          instanceType: {},\n          inactivityTimeoutMinutes: {\n            type: 'integer'\n          },\n          persistentStorage: {\n            type: 'structure',\n            required: [\n              'sizeInGiB'\n            ],\n            members: {\n              sizeInGiB: {\n                type: 'integer'\n              }\n            }\n          },\n          vpcConnectionName: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          id: {},\n          vpcConnectionName: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateProject: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/spaces/{spaceName}/projects',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'displayName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          displayName: {},\n          description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          spaceName: {},\n          name: {},\n          displayName: {},\n          description: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateSourceRepository: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories/{name}',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'name'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'name'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          name: {},\n          description: {}\n        }\n      },\n      idempotent: true\n    },\n    CreateSourceRepositoryBranch: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/branches/{name}',\n        responseCode: 201\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'sourceRepositoryName',\n          'name'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          sourceRepositoryName: {\n            location: 'uri',\n            locationName: 'sourceRepositoryName'\n          },\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          headCommitId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          ref: {},\n          name: {},\n          lastUpdatedTime: {\n            shape: 'S3'\n          },\n          headCommitId: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteAccessToken: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/accessTokens/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'id'\n        ],\n        members: {\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteDevEnvironment: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          id: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteProject: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/spaces/{spaceName}/projects/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'name'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'name'\n        ],\n        members: {\n          spaceName: {},\n          name: {},\n          displayName: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteSourceRepository: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'name'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'name'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          name: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteSpace: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/spaces/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {},\n          displayName: {}\n        }\n      },\n      idempotent: true\n    },\n    GetDevEnvironment: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id',\n          'lastUpdatedTime',\n          'creatorId',\n          'status',\n          'repositories',\n          'instanceType',\n          'inactivityTimeoutMinutes',\n          'persistentStorage'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          id: {},\n          lastUpdatedTime: {\n            shape: 'S3'\n          },\n          creatorId: {},\n          status: {},\n          statusReason: {},\n          repositories: {\n            shape: 'S1f'\n          },\n          alias: {},\n          ides: {\n            shape: 'S1i'\n          },\n          instanceType: {},\n          inactivityTimeoutMinutes: {\n            type: 'integer'\n          },\n          persistentStorage: {\n            shape: 'S1m'\n          },\n          vpcConnectionName: {}\n        }\n      }\n    },\n    GetProject: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/spaces/{spaceName}/projects/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'name'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          spaceName: {},\n          name: {},\n          displayName: {},\n          description: {}\n        }\n      }\n    },\n    GetSourceRepository: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'name'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'name',\n          'lastUpdatedTime',\n          'createdTime'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          name: {},\n          description: {},\n          lastUpdatedTime: {\n            shape: 'S1s'\n          },\n          createdTime: {\n            shape: 'S1s'\n          }\n        }\n      }\n    },\n    GetSourceRepositoryCloneUrls: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/cloneUrls',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'sourceRepositoryName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          sourceRepositoryName: {\n            location: 'uri',\n            locationName: 'sourceRepositoryName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'https'\n        ],\n        members: {\n          https: {}\n        }\n      }\n    },\n    GetSpace: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/spaces/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'name',\n          'regionName'\n        ],\n        members: {\n          name: {},\n          regionName: {},\n          displayName: {},\n          description: {}\n        }\n      }\n    },\n    GetSubscription: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/spaces/{spaceName}/subscription',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          subscriptionType: {},\n          awsAccountName: {},\n          pendingSubscriptionType: {},\n          pendingSubscriptionStartTime: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    GetUserDetails: {\n      http: {\n        method: 'GET',\n        requestUri: '/userDetails',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          id: {\n            location: 'querystring',\n            locationName: 'id'\n          },\n          userName: {\n            location: 'querystring',\n            locationName: 'userName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          userId: {},\n          userName: {},\n          displayName: {},\n          primaryEmail: {\n            type: 'structure',\n            members: {\n              email: {},\n              verified: {\n                type: 'boolean'\n              }\n            }\n          },\n          version: {}\n        }\n      }\n    },\n    GetWorkflow: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/workflows/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'id',\n          'projectName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id',\n          'name',\n          'definition',\n          'createdTime',\n          'lastUpdatedTime',\n          'runMode',\n          'status'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          id: {},\n          name: {},\n          sourceRepositoryName: {},\n          sourceBranchName: {},\n          definition: {\n            type: 'structure',\n            required: [\n              'path'\n            ],\n            members: {\n              path: {}\n            }\n          },\n          createdTime: {\n            shape: 'S3'\n          },\n          lastUpdatedTime: {\n            shape: 'S3'\n          },\n          runMode: {},\n          status: {}\n        }\n      }\n    },\n    GetWorkflowRun: {\n      http: {\n        method: 'GET',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/workflowRuns/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'id',\n          'projectName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id',\n          'workflowId',\n          'status',\n          'startTime',\n          'lastUpdatedTime'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          id: {},\n          workflowId: {},\n          status: {},\n          statusReasons: {\n            shape: 'S2g'\n          },\n          startTime: {\n            shape: 'S3'\n          },\n          endTime: {\n            shape: 'S3'\n          },\n          lastUpdatedTime: {\n            shape: 'S3'\n          }\n        }\n      }\n    },\n    ListAccessTokens: {\n      http: {\n        requestUri: '/v1/accessTokens',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'id',\n                'name'\n              ],\n              members: {\n                id: {},\n                name: {},\n                expiresTime: {\n                  shape: 'S3'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDevEnvironmentSessions: {\n      http: {\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{devEnvironmentId}/sessions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'devEnvironmentId'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          devEnvironmentId: {\n            location: 'uri',\n            locationName: 'devEnvironmentId'\n          },\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'spaceName',\n                'projectName',\n                'devEnvironmentId',\n                'startedTime',\n                'id'\n              ],\n              members: {\n                spaceName: {},\n                projectName: {},\n                devEnvironmentId: {},\n                startedTime: {\n                  shape: 'S3'\n                },\n                id: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListDevEnvironments: {\n      http: {\n        requestUri: '/v1/spaces/{spaceName}/devEnvironments',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {},\n          filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'key',\n                'values'\n              ],\n              members: {\n                key: {},\n                values: {\n                  shape: 'S2y'\n                },\n                comparisonOperator: {}\n              }\n            }\n          },\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'id',\n                'lastUpdatedTime',\n                'creatorId',\n                'status',\n                'repositories',\n                'instanceType',\n                'inactivityTimeoutMinutes',\n                'persistentStorage'\n              ],\n              members: {\n                spaceName: {},\n                projectName: {},\n                id: {},\n                lastUpdatedTime: {\n                  shape: 'S3'\n                },\n                creatorId: {},\n                status: {},\n                statusReason: {},\n                repositories: {\n                  shape: 'S1f'\n                },\n                alias: {},\n                ides: {\n                  shape: 'S1i'\n                },\n                instanceType: {},\n                inactivityTimeoutMinutes: {\n                  type: 'integer'\n                },\n                persistentStorage: {\n                  shape: 'S1m'\n                },\n                vpcConnectionName: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListEventLogs: {\n      http: {\n        requestUri: '/v1/spaces/{spaceName}/eventLogs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'startTime',\n          'endTime'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          startTime: {\n            shape: 'S3'\n          },\n          endTime: {\n            shape: 'S3'\n          },\n          eventName: {},\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          nextToken: {},\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'id',\n                'eventName',\n                'eventType',\n                'eventCategory',\n                'eventSource',\n                'eventTime',\n                'operationType',\n                'userIdentity'\n              ],\n              members: {\n                id: {},\n                eventName: {},\n                eventType: {},\n                eventCategory: {},\n                eventSource: {},\n                eventTime: {\n                  shape: 'S3'\n                },\n                operationType: {},\n                userIdentity: {\n                  type: 'structure',\n                  required: [\n                    'userType',\n                    'principalId'\n                  ],\n                  members: {\n                    userType: {},\n                    principalId: {},\n                    userName: {},\n                    awsAccountId: {}\n                  }\n                },\n                projectInformation: {\n                  type: 'structure',\n                  members: {\n                    name: {},\n                    projectId: {}\n                  }\n                },\n                requestId: {},\n                requestPayload: {\n                  shape: 'S3g'\n                },\n                responsePayload: {\n                  shape: 'S3g'\n                },\n                errorCode: {},\n                sourceIpAddress: {},\n                userAgent: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListProjects: {\n      http: {\n        requestUri: '/v1/spaces/{spaceName}/projects',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          },\n          filters: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'key',\n                'values'\n              ],\n              members: {\n                key: {},\n                values: {\n                  shape: 'S2y'\n                },\n                comparisonOperator: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'name'\n              ],\n              members: {\n                name: {},\n                displayName: {},\n                description: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListSourceRepositories: {\n      http: {\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'id',\n                'name',\n                'lastUpdatedTime',\n                'createdTime'\n              ],\n              members: {\n                id: {},\n                name: {},\n                description: {},\n                lastUpdatedTime: {\n                  shape: 'S1s'\n                },\n                createdTime: {\n                  shape: 'S1s'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListSourceRepositoryBranches: {\n      http: {\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/branches',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'sourceRepositoryName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          sourceRepositoryName: {\n            location: 'uri',\n            locationName: 'sourceRepositoryName'\n          },\n          nextToken: {},\n          maxResults: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'items'\n        ],\n        members: {\n          nextToken: {},\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                ref: {},\n                name: {},\n                lastUpdatedTime: {\n                  shape: 'S3'\n                },\n                headCommitId: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListSpaces: {\n      http: {\n        requestUri: '/v1/spaces',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'name',\n                'regionName'\n              ],\n              members: {\n                name: {},\n                regionName: {},\n                displayName: {},\n                description: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListWorkflowRuns: {\n      http: {\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/workflowRuns',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          workflowId: {\n            location: 'querystring',\n            locationName: 'workflowId'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          sortBy: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'id',\n                'workflowId',\n                'workflowName',\n                'status',\n                'startTime',\n                'lastUpdatedTime'\n              ],\n              members: {\n                id: {},\n                workflowId: {},\n                workflowName: {},\n                status: {},\n                statusReasons: {\n                  shape: 'S2g'\n                },\n                startTime: {\n                  shape: 'S3'\n                },\n                endTime: {\n                  shape: 'S3'\n                },\n                lastUpdatedTime: {\n                  shape: 'S3'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListWorkflows: {\n      http: {\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/workflows',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          sortBy: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'id',\n                'name',\n                'sourceRepositoryName',\n                'sourceBranchName',\n                'definition',\n                'createdTime',\n                'lastUpdatedTime',\n                'runMode',\n                'status'\n              ],\n              members: {\n                id: {},\n                name: {},\n                sourceRepositoryName: {},\n                sourceBranchName: {},\n                definition: {\n                  type: 'structure',\n                  required: [\n                    'path'\n                  ],\n                  members: {\n                    path: {}\n                  }\n                },\n                createdTime: {\n                  shape: 'S3'\n                },\n                lastUpdatedTime: {\n                  shape: 'S3'\n                },\n                runMode: {},\n                status: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    StartDevEnvironment: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}/start',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          ides: {\n            shape: 'Sf'\n          },\n          instanceType: {},\n          inactivityTimeoutMinutes: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id',\n          'status'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          id: {},\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    StartDevEnvironmentSession: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}/session',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id',\n          'sessionConfiguration'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          sessionConfiguration: {\n            type: 'structure',\n            required: [\n              'sessionType'\n            ],\n            members: {\n              sessionType: {},\n              executeCommandSessionConfiguration: {\n                type: 'structure',\n                required: [\n                  'command'\n                ],\n                members: {\n                  command: {},\n                  arguments: {\n                    type: 'list',\n                    member: {}\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'accessDetails',\n          'spaceName',\n          'projectName',\n          'id'\n        ],\n        members: {\n          accessDetails: {\n            type: 'structure',\n            required: [\n              'streamUrl',\n              'tokenValue'\n            ],\n            members: {\n              streamUrl: {\n                shape: 'S53'\n              },\n              tokenValue: {\n                shape: 'S53'\n              }\n            },\n            sensitive: true\n          },\n          sessionId: {},\n          spaceName: {},\n          projectName: {},\n          id: {}\n        }\n      }\n    },\n    StartWorkflowRun: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/workflowRuns',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'workflowId'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          workflowId: {\n            location: 'querystring',\n            locationName: 'workflowId'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id',\n          'workflowId'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          id: {},\n          workflowId: {}\n        }\n      },\n      idempotent: true\n    },\n    StopDevEnvironment: {\n      http: {\n        method: 'PUT',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}/stop',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id',\n          'status'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          id: {},\n          status: {}\n        }\n      },\n      idempotent: true\n    },\n    StopDevEnvironmentSession: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}/session/{sessionId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id',\n          'sessionId'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id',\n          'sessionId'\n        ],\n        members: {\n          spaceName: {},\n          projectName: {},\n          id: {},\n          sessionId: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateDevEnvironment: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'projectName',\n          'id'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          projectName: {\n            location: 'uri',\n            locationName: 'projectName'\n          },\n          id: {\n            location: 'uri',\n            locationName: 'id'\n          },\n          alias: {},\n          ides: {\n            shape: 'Sf'\n          },\n          instanceType: {},\n          inactivityTimeoutMinutes: {\n            type: 'integer'\n          },\n          clientToken: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'id',\n          'spaceName',\n          'projectName'\n        ],\n        members: {\n          id: {},\n          spaceName: {},\n          projectName: {},\n          alias: {},\n          ides: {\n            shape: 'Sf'\n          },\n          instanceType: {},\n          inactivityTimeoutMinutes: {\n            type: 'integer'\n          },\n          clientToken: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateProject: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/v1/spaces/{spaceName}/projects/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'spaceName',\n          'name'\n        ],\n        members: {\n          spaceName: {\n            location: 'uri',\n            locationName: 'spaceName'\n          },\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          spaceName: {},\n          name: {},\n          displayName: {},\n          description: {}\n        }\n      },\n      idempotent: true\n    },\n    UpdateSpace: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/v1/spaces/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          displayName: {},\n          description: {}\n        }\n      },\n      idempotent: true\n    },\n    VerifySession: {\n      http: {\n        method: 'GET',\n        requestUri: '/session',\n        responseCode: 200\n      },\n      output: {\n        type: 'structure',\n        members: {\n          identity: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    S3: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    Sf: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          runtime: {},\n          name: {}\n        }\n      }\n    },\n    S1f: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'repositoryName'\n        ],\n        members: {\n          repositoryName: {},\n          branchName: {}\n        }\n      }\n    },\n    S1i: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          runtime: {},\n          name: {}\n        }\n      }\n    },\n    S1m: {\n      type: 'structure',\n      required: [\n        'sizeInGiB'\n      ],\n      members: {\n        sizeInGiB: {\n          type: 'integer'\n        }\n      }\n    },\n    S1s: {\n      type: 'timestamp',\n      timestampFormat: 'iso8601'\n    },\n    S2g: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    S2y: {\n      type: 'list',\n      member: {}\n    },\n    S3g: {\n      type: 'structure',\n      members: {\n        contentType: {},\n        data: {}\n      }\n    },\n    S53: {\n      type: 'string',\n      sensitive: true\n    }\n  }\n}"]}