{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/mediapackagev2-2022-12-25.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateChannel","http","requestUri","responseCode","input","type","required","members","ChannelGroupName","location","locationName","ChannelName","ClientToken","idempotencyToken","Description","Tags","shape","output","Arn","CreatedAt","ModifiedAt","IngestEndpoints","ETag","idempotent","CreateChannelGroup","EgressDomain","CreateOriginEndpoint","OriginEndpointName","ContainerType","Segment","StartoverWindowSeconds","HlsManifests","LowLatencyHlsManifests","DashManifests","DeleteChannel","method","DeleteChannelGroup","DeleteChannelPolicy","DeleteOriginEndpoint","DeleteOriginEndpointPolicy","GetChannel","GetChannelGroup","GetChannelPolicy","Policy","GetOriginEndpoint","GetOriginEndpointPolicy","ListChannelGroups","MaxResults","NextToken","Items","member","ListChannels","ListOriginEndpoints","ManifestName","ChildManifestName","Url","ListTagsForResource","ResourceArn","PutChannelPolicy","PutOriginEndpointPolicy","TagResource","UntagResource","TagKeys","UpdateChannel","UpdateChannelGroup","UpdateOriginEndpoint","shapes","S5","key","value","Sb","Id","Si","SegmentDurationSeconds","SegmentName","TsUseAudioRenditionGroup","IncludeIframeOnlyStreams","TsIncludeDvbSubtitles","Scte","ScteFilter","Encryption","ConstantInitializationVector","EncryptionMethod","TsEncryptionMethod","CmafEncryptionMethod","KeyRotationIntervalSeconds","SpekeKeyProvider","EncryptionContractConfiguration","PresetSpeke20Audio","PresetSpeke20Video","ResourceId","DrmSystems","RoleArn","S15","ScteHls","ManifestWindowSeconds","ProgramDateTimeIntervalSeconds","FilterConfiguration","S18","AdMarkerHls","S1c","ManifestFilter","Start","End","TimeDelaySeconds","S1f","S1j","MinUpdatePeriodSeconds","MinBufferTimeSeconds","SuggestedPresentationDelaySeconds","SegmentTemplateFormat","PeriodTriggers","ScteDash","DrmSignaling","UtcTiming","S1q","S1s","AdMarkerDash","S1v","TimingMode","TimingSource","S20","S22","S24"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2022-12-25',\n    endpointPrefix: 'mediapackagev2',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'mediapackagev2',\n    serviceFullName: 'AWS Elemental MediaPackage v2',\n    serviceId: 'MediaPackageV2',\n    signatureVersion: 'v4',\n    signingName: 'mediapackagev2',\n    uid: 'mediapackagev2-2022-12-25'\n  },\n  operations: {\n    CreateChannel: {\n      http: {\n        requestUri: '/channelGroup/{ChannelGroupName}/channel',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {},\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'x-amzn-client-token'\n          },\n          Description: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Arn',\n          'ChannelName',\n          'ChannelGroupName',\n          'CreatedAt',\n          'ModifiedAt'\n        ],\n        members: {\n          Arn: {},\n          ChannelName: {},\n          ChannelGroupName: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          ModifiedAt: {\n            type: 'timestamp'\n          },\n          Description: {},\n          IngestEndpoints: {\n            shape: 'Sb'\n          },\n          ETag: {},\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateChannelGroup: {\n      http: {\n        requestUri: '/channelGroup',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName'\n        ],\n        members: {\n          ChannelGroupName: {},\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'x-amzn-client-token'\n          },\n          Description: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'Arn',\n          'EgressDomain',\n          'CreatedAt',\n          'ModifiedAt'\n        ],\n        members: {\n          ChannelGroupName: {},\n          Arn: {},\n          EgressDomain: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          ModifiedAt: {\n            type: 'timestamp'\n          },\n          ETag: {},\n          Description: {},\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateOriginEndpoint: {\n      http: {\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName',\n          'ContainerType'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          },\n          OriginEndpointName: {},\n          ContainerType: {},\n          Segment: {\n            shape: 'Si'\n          },\n          ClientToken: {\n            idempotencyToken: true,\n            location: 'header',\n            locationName: 'x-amzn-client-token'\n          },\n          Description: {},\n          StartoverWindowSeconds: {\n            type: 'integer'\n          },\n          HlsManifests: {\n            shape: 'S15'\n          },\n          LowLatencyHlsManifests: {\n            shape: 'S1f'\n          },\n          DashManifests: {\n            shape: 'S1j'\n          },\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Arn',\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName',\n          'ContainerType',\n          'Segment',\n          'CreatedAt',\n          'ModifiedAt'\n        ],\n        members: {\n          Arn: {},\n          ChannelGroupName: {},\n          ChannelName: {},\n          OriginEndpointName: {},\n          ContainerType: {},\n          Segment: {\n            shape: 'Si'\n          },\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          ModifiedAt: {\n            type: 'timestamp'\n          },\n          Description: {},\n          StartoverWindowSeconds: {\n            type: 'integer'\n          },\n          HlsManifests: {\n            shape: 'S20'\n          },\n          LowLatencyHlsManifests: {\n            shape: 'S22'\n          },\n          DashManifests: {\n            shape: 'S24'\n          },\n          ETag: {},\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteChannel: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteChannelGroup: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/channelGroup/{ChannelGroupName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteChannelPolicy: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/policy',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteOriginEndpoint: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          },\n          OriginEndpointName: {\n            location: 'uri',\n            locationName: 'OriginEndpointName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteOriginEndpointPolicy: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}/policy',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          },\n          OriginEndpointName: {\n            location: 'uri',\n            locationName: 'OriginEndpointName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetChannel: {\n      http: {\n        method: 'GET',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Arn',\n          'ChannelName',\n          'ChannelGroupName',\n          'CreatedAt',\n          'ModifiedAt'\n        ],\n        members: {\n          Arn: {},\n          ChannelName: {},\n          ChannelGroupName: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          ModifiedAt: {\n            type: 'timestamp'\n          },\n          Description: {},\n          IngestEndpoints: {\n            shape: 'Sb'\n          },\n          ETag: {},\n          Tags: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    GetChannelGroup: {\n      http: {\n        method: 'GET',\n        requestUri: '/channelGroup/{ChannelGroupName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'Arn',\n          'EgressDomain',\n          'CreatedAt',\n          'ModifiedAt'\n        ],\n        members: {\n          ChannelGroupName: {},\n          Arn: {},\n          EgressDomain: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          ModifiedAt: {\n            type: 'timestamp'\n          },\n          Description: {},\n          ETag: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    GetChannelPolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/policy',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName',\n          'Policy'\n        ],\n        members: {\n          ChannelGroupName: {},\n          ChannelName: {},\n          Policy: {}\n        }\n      }\n    },\n    GetOriginEndpoint: {\n      http: {\n        method: 'GET',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          },\n          OriginEndpointName: {\n            location: 'uri',\n            locationName: 'OriginEndpointName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Arn',\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName',\n          'ContainerType',\n          'Segment',\n          'CreatedAt',\n          'ModifiedAt'\n        ],\n        members: {\n          Arn: {},\n          ChannelGroupName: {},\n          ChannelName: {},\n          OriginEndpointName: {},\n          ContainerType: {},\n          Segment: {\n            shape: 'Si'\n          },\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          ModifiedAt: {\n            type: 'timestamp'\n          },\n          Description: {},\n          StartoverWindowSeconds: {\n            type: 'integer'\n          },\n          HlsManifests: {\n            shape: 'S20'\n          },\n          LowLatencyHlsManifests: {\n            shape: 'S22'\n          },\n          ETag: {},\n          Tags: {\n            shape: 'S5'\n          },\n          DashManifests: {\n            shape: 'S24'\n          }\n        }\n      }\n    },\n    GetOriginEndpointPolicy: {\n      http: {\n        method: 'GET',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}/policy',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          },\n          OriginEndpointName: {\n            location: 'uri',\n            locationName: 'OriginEndpointName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName',\n          'Policy'\n        ],\n        members: {\n          ChannelGroupName: {},\n          ChannelName: {},\n          OriginEndpointName: {},\n          Policy: {}\n        }\n      }\n    },\n    ListChannelGroups: {\n      http: {\n        method: 'GET',\n        requestUri: '/channelGroup',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'ChannelGroupName',\n                'Arn',\n                'CreatedAt',\n                'ModifiedAt'\n              ],\n              members: {\n                ChannelGroupName: {},\n                Arn: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                ModifiedAt: {\n                  type: 'timestamp'\n                },\n                Description: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListChannels: {\n      http: {\n        method: 'GET',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Arn',\n                'ChannelName',\n                'ChannelGroupName',\n                'CreatedAt',\n                'ModifiedAt'\n              ],\n              members: {\n                Arn: {},\n                ChannelName: {},\n                ChannelGroupName: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                ModifiedAt: {\n                  type: 'timestamp'\n                },\n                Description: {}\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListOriginEndpoints: {\n      http: {\n        method: 'GET',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          },\n          MaxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          NextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Items: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'Arn',\n                'ChannelGroupName',\n                'ChannelName',\n                'OriginEndpointName',\n                'ContainerType'\n              ],\n              members: {\n                Arn: {},\n                ChannelGroupName: {},\n                ChannelName: {},\n                OriginEndpointName: {},\n                ContainerType: {},\n                Description: {},\n                CreatedAt: {\n                  type: 'timestamp'\n                },\n                ModifiedAt: {\n                  type: 'timestamp'\n                },\n                HlsManifests: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    required: [\n                      'ManifestName'\n                    ],\n                    members: {\n                      ManifestName: {},\n                      ChildManifestName: {},\n                      Url: {}\n                    }\n                  }\n                },\n                LowLatencyHlsManifests: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    required: [\n                      'ManifestName'\n                    ],\n                    members: {\n                      ManifestName: {},\n                      ChildManifestName: {},\n                      Url: {}\n                    }\n                  }\n                },\n                DashManifests: {\n                  type: 'list',\n                  member: {\n                    type: 'structure',\n                    required: [\n                      'ManifestName'\n                    ],\n                    members: {\n                      ManifestName: {},\n                      Url: {}\n                    }\n                  }\n                }\n              }\n            }\n          },\n          NextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    PutChannelPolicy: {\n      http: {\n        method: 'PUT',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/policy',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName',\n          'Policy'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          },\n          Policy: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    PutOriginEndpointPolicy: {\n      http: {\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}/policy',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName',\n          'Policy'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          },\n          OriginEndpointName: {\n            location: 'uri',\n            locationName: 'OriginEndpointName'\n          },\n          Policy: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'Tags'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{ResourceArn}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ResourceArn',\n          'TagKeys'\n        ],\n        members: {\n          ResourceArn: {\n            location: 'uri',\n            locationName: 'ResourceArn'\n          },\n          TagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateChannel: {\n      http: {\n        method: 'PUT',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          },\n          ETag: {\n            location: 'header',\n            locationName: 'x-amzn-update-if-match'\n          },\n          Description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Arn',\n          'ChannelName',\n          'ChannelGroupName',\n          'CreatedAt',\n          'ModifiedAt'\n        ],\n        members: {\n          Arn: {},\n          ChannelName: {},\n          ChannelGroupName: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          ModifiedAt: {\n            type: 'timestamp'\n          },\n          Description: {},\n          IngestEndpoints: {\n            shape: 'Sb'\n          },\n          ETag: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateChannelGroup: {\n      http: {\n        method: 'PUT',\n        requestUri: '/channelGroup/{ChannelGroupName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ETag: {\n            location: 'header',\n            locationName: 'x-amzn-update-if-match'\n          },\n          Description: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'Arn',\n          'EgressDomain',\n          'CreatedAt',\n          'ModifiedAt'\n        ],\n        members: {\n          ChannelGroupName: {},\n          Arn: {},\n          EgressDomain: {},\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          ModifiedAt: {\n            type: 'timestamp'\n          },\n          Description: {},\n          ETag: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateOriginEndpoint: {\n      http: {\n        method: 'PUT',\n        requestUri: '/channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName',\n          'ContainerType'\n        ],\n        members: {\n          ChannelGroupName: {\n            location: 'uri',\n            locationName: 'ChannelGroupName'\n          },\n          ChannelName: {\n            location: 'uri',\n            locationName: 'ChannelName'\n          },\n          OriginEndpointName: {\n            location: 'uri',\n            locationName: 'OriginEndpointName'\n          },\n          ContainerType: {},\n          Segment: {\n            shape: 'Si'\n          },\n          Description: {},\n          StartoverWindowSeconds: {\n            type: 'integer'\n          },\n          HlsManifests: {\n            shape: 'S15'\n          },\n          LowLatencyHlsManifests: {\n            shape: 'S1f'\n          },\n          DashManifests: {\n            shape: 'S1j'\n          },\n          ETag: {\n            location: 'header',\n            locationName: 'x-amzn-update-if-match'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'Arn',\n          'ChannelGroupName',\n          'ChannelName',\n          'OriginEndpointName',\n          'ContainerType',\n          'Segment',\n          'CreatedAt',\n          'ModifiedAt'\n        ],\n        members: {\n          Arn: {},\n          ChannelGroupName: {},\n          ChannelName: {},\n          OriginEndpointName: {},\n          ContainerType: {},\n          Segment: {\n            shape: 'Si'\n          },\n          CreatedAt: {\n            type: 'timestamp'\n          },\n          ModifiedAt: {\n            type: 'timestamp'\n          },\n          Description: {},\n          StartoverWindowSeconds: {\n            type: 'integer'\n          },\n          HlsManifests: {\n            shape: 'S20'\n          },\n          LowLatencyHlsManifests: {\n            shape: 'S22'\n          },\n          ETag: {},\n          Tags: {\n            shape: 'S5',\n            locationName: 'tags'\n          },\n          DashManifests: {\n            shape: 'S24'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sb: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          Id: {},\n          Url: {}\n        }\n      }\n    },\n    Si: {\n      type: 'structure',\n      members: {\n        SegmentDurationSeconds: {\n          type: 'integer'\n        },\n        SegmentName: {},\n        TsUseAudioRenditionGroup: {\n          type: 'boolean'\n        },\n        IncludeIframeOnlyStreams: {\n          type: 'boolean'\n        },\n        TsIncludeDvbSubtitles: {\n          type: 'boolean'\n        },\n        Scte: {\n          type: 'structure',\n          members: {\n            ScteFilter: {\n              type: 'list',\n              member: {}\n            }\n          }\n        },\n        Encryption: {\n          type: 'structure',\n          required: [\n            'EncryptionMethod',\n            'SpekeKeyProvider'\n          ],\n          members: {\n            ConstantInitializationVector: {},\n            EncryptionMethod: {\n              type: 'structure',\n              members: {\n                TsEncryptionMethod: {},\n                CmafEncryptionMethod: {}\n              }\n            },\n            KeyRotationIntervalSeconds: {\n              type: 'integer'\n            },\n            SpekeKeyProvider: {\n              type: 'structure',\n              required: [\n                'EncryptionContractConfiguration',\n                'ResourceId',\n                'DrmSystems',\n                'RoleArn',\n                'Url'\n              ],\n              members: {\n                EncryptionContractConfiguration: {\n                  type: 'structure',\n                  required: [\n                    'PresetSpeke20Audio',\n                    'PresetSpeke20Video'\n                  ],\n                  members: {\n                    PresetSpeke20Audio: {},\n                    PresetSpeke20Video: {}\n                  }\n                },\n                ResourceId: {},\n                DrmSystems: {\n                  type: 'list',\n                  member: {}\n                },\n                RoleArn: {},\n                Url: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    S15: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ManifestName'\n        ],\n        members: {\n          ManifestName: {},\n          ChildManifestName: {},\n          ScteHls: {\n            shape: 'S18'\n          },\n          ManifestWindowSeconds: {\n            type: 'integer'\n          },\n          ProgramDateTimeIntervalSeconds: {\n            type: 'integer'\n          },\n          FilterConfiguration: {\n            shape: 'S1c'\n          }\n        }\n      }\n    },\n    S18: {\n      type: 'structure',\n      members: {\n        AdMarkerHls: {}\n      }\n    },\n    S1c: {\n      type: 'structure',\n      members: {\n        ManifestFilter: {},\n        Start: {\n          type: 'timestamp'\n        },\n        End: {\n          type: 'timestamp'\n        },\n        TimeDelaySeconds: {\n          type: 'integer'\n        }\n      }\n    },\n    S1f: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ManifestName'\n        ],\n        members: {\n          ManifestName: {},\n          ChildManifestName: {},\n          ScteHls: {\n            shape: 'S18'\n          },\n          ManifestWindowSeconds: {\n            type: 'integer'\n          },\n          ProgramDateTimeIntervalSeconds: {\n            type: 'integer'\n          },\n          FilterConfiguration: {\n            shape: 'S1c'\n          }\n        }\n      }\n    },\n    S1j: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ManifestName'\n        ],\n        members: {\n          ManifestName: {},\n          ManifestWindowSeconds: {\n            type: 'integer'\n          },\n          FilterConfiguration: {\n            shape: 'S1c'\n          },\n          MinUpdatePeriodSeconds: {\n            type: 'integer'\n          },\n          MinBufferTimeSeconds: {\n            type: 'integer'\n          },\n          SuggestedPresentationDelaySeconds: {\n            type: 'integer'\n          },\n          SegmentTemplateFormat: {},\n          PeriodTriggers: {\n            shape: 'S1q'\n          },\n          ScteDash: {\n            shape: 'S1s'\n          },\n          DrmSignaling: {},\n          UtcTiming: {\n            shape: 'S1v'\n          }\n        }\n      }\n    },\n    S1q: {\n      type: 'list',\n      member: {}\n    },\n    S1s: {\n      type: 'structure',\n      members: {\n        AdMarkerDash: {}\n      }\n    },\n    S1v: {\n      type: 'structure',\n      members: {\n        TimingMode: {},\n        TimingSource: {}\n      }\n    },\n    S20: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ManifestName',\n          'Url'\n        ],\n        members: {\n          ManifestName: {},\n          Url: {},\n          ChildManifestName: {},\n          ManifestWindowSeconds: {\n            type: 'integer'\n          },\n          ProgramDateTimeIntervalSeconds: {\n            type: 'integer'\n          },\n          ScteHls: {\n            shape: 'S18'\n          },\n          FilterConfiguration: {\n            shape: 'S1c'\n          }\n        }\n      }\n    },\n    S22: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ManifestName',\n          'Url'\n        ],\n        members: {\n          ManifestName: {},\n          Url: {},\n          ChildManifestName: {},\n          ManifestWindowSeconds: {\n            type: 'integer'\n          },\n          ProgramDateTimeIntervalSeconds: {\n            type: 'integer'\n          },\n          ScteHls: {\n            shape: 'S18'\n          },\n          FilterConfiguration: {\n            shape: 'S1c'\n          }\n        }\n      }\n    },\n    S24: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'ManifestName',\n          'Url'\n        ],\n        members: {\n          ManifestName: {},\n          Url: {},\n          ManifestWindowSeconds: {\n            type: 'integer'\n          },\n          FilterConfiguration: {\n            shape: 'S1c'\n          },\n          MinUpdatePeriodSeconds: {\n            type: 'integer'\n          },\n          MinBufferTimeSeconds: {\n            type: 'integer'\n          },\n          SuggestedPresentationDelaySeconds: {\n            type: 'integer'\n          },\n          SegmentTemplateFormat: {},\n          PeriodTriggers: {\n            shape: 'S1q'\n          },\n          ScteDash: {\n            shape: 'S1s'\n          },\n          DrmSignaling: {},\n          UtcTiming: {\n            shape: 'S1v'\n          }\n        }\n      }\n    }\n  }\n}"]}