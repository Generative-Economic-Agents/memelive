System.register(["__unresolved_0", "__unresolved_1"], function (_export, _context) {
  "use strict";

  var _cjsLoader, _req, _cjsExports, __cjsMetaURL;

  _export("default", void 0);

  return {
    setters: [function (_unresolved_) {
      _cjsLoader = _unresolved_.default;
    }, function (_unresolved_2) {
      _req = _unresolved_2.__cjsMetaURL;
    }],
    execute: function () {
      _export("__cjsMetaURL", __cjsMetaURL = _context.meta.url);

      _cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // #region ORIGINAL CODE
        // Generated by CoffeeScript 1.12.7
        (function () {
          var XMLCharacterData,
              XMLNode,
              extend = function extend(child, parent) {
            for (var key in parent) {
              if (hasProp.call(parent, key)) child[key] = parent[key];
            }

            function ctor() {
              this.constructor = child;
            }

            ctor.prototype = parent.prototype;
            child.prototype = new ctor();
            child.__super__ = parent.prototype;
            return child;
          },
              hasProp = {}.hasOwnProperty;

          XMLNode = require('./XMLNode');

          module.exports = XMLCharacterData = function (superClass) {
            extend(XMLCharacterData, superClass);

            function XMLCharacterData(parent) {
              XMLCharacterData.__super__.constructor.call(this, parent);

              this.value = '';
            }

            Object.defineProperty(XMLCharacterData.prototype, 'data', {
              get: function get() {
                return this.value;
              },
              set: function set(value) {
                return this.value = value || '';
              }
            });
            Object.defineProperty(XMLCharacterData.prototype, 'length', {
              get: function get() {
                return this.value.length;
              }
            });
            Object.defineProperty(XMLCharacterData.prototype, 'textContent', {
              get: function get() {
                return this.value;
              },
              set: function set(value) {
                return this.value = value || '';
              }
            });

            XMLCharacterData.prototype.clone = function () {
              return Object.create(this);
            };

            XMLCharacterData.prototype.substringData = function (offset, count) {
              throw new Error("This DOM method is not implemented." + this.debugInfo());
            };

            XMLCharacterData.prototype.appendData = function (arg) {
              throw new Error("This DOM method is not implemented." + this.debugInfo());
            };

            XMLCharacterData.prototype.insertData = function (offset, arg) {
              throw new Error("This DOM method is not implemented." + this.debugInfo());
            };

            XMLCharacterData.prototype.deleteData = function (offset, count) {
              throw new Error("This DOM method is not implemented." + this.debugInfo());
            };

            XMLCharacterData.prototype.replaceData = function (offset, count, arg) {
              throw new Error("This DOM method is not implemented." + this.debugInfo());
            };

            XMLCharacterData.prototype.isEqualNode = function (node) {
              if (!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {
                return false;
              }

              if (node.data !== this.data) {
                return false;
              }

              return true;
            };

            return XMLCharacterData;
          }(XMLNode);
        }).call(this); // #endregion ORIGINAL CODE

        _export("default", _cjsExports = module.exports);
      }, () => ({
        './XMLNode': _req
      }));
    }
  };
});
//# sourceMappingURL=2caca75aef766b0912d9b0c68caf780723c716b1.js.map