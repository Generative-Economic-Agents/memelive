{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/finspace-2021-03-12.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceAbbreviation","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateEnvironment","http","requestUri","input","type","required","members","name","description","kmsKeyId","tags","shape","federationMode","federationParameters","superuserParameters","emailAddress","sensitive","firstName","lastName","dataBundles","member","output","environmentId","environmentArn","environmentUrl","deprecated","deprecatedMessage","CreateKxChangeset","location","locationName","databaseName","changeRequests","clientToken","idempotencyToken","changesetId","createdTimestamp","lastModifiedTimestamp","status","errorInfo","CreateKxCluster","clusterName","clusterType","tickerplantLogConfiguration","databases","cacheStorageConfigurations","autoScalingConfiguration","clusterDescription","capacityConfiguration","releaseLabel","vpcConfiguration","initializationScript","commandLineArguments","code","executionRole","savedownStorageConfiguration","azMode","availabilityZoneId","scalingGroupConfiguration","statusReason","volumes","CreateKxDatabase","databaseArn","CreateKxDataview","dataviewName","segmentConfigurations","autoUpdate","readWrite","CreateKxEnvironment","creationTimestamp","CreateKxScalingGroup","scalingGroupName","hostType","CreateKxUser","userName","iamRole","userArn","CreateKxVolume","volumeType","volumeName","nas1Configuration","availabilityZoneIds","volumeArn","DeleteEnvironment","method","DeleteKxCluster","DeleteKxClusterNode","nodeId","DeleteKxDatabase","DeleteKxDataview","DeleteKxEnvironment","DeleteKxScalingGroup","DeleteKxUser","DeleteKxVolume","GetEnvironment","environment","GetKxChangeset","activeFromTimestamp","GetKxCluster","GetKxConnectionString","signedConnectionString","GetKxDatabase","lastCompletedChangesetId","numBytes","numChangesets","numFiles","GetKxDataview","activeVersions","GetKxEnvironment","awsAccountId","tgwStatus","dnsStatus","errorMessage","dedicatedServiceAccountId","transitGatewayConfiguration","customDNSConfiguration","updateTimestamp","certificateAuthorityArn","GetKxScalingGroup","scalingGroupArn","clusters","GetKxUser","GetKxVolume","attachedClusters","ListEnvironments","nextToken","maxResults","environments","ListKxChangesets","kxChangesets","ListKxClusterNodes","nodes","launchTime","ListKxClusters","kxClusterSummaries","ListKxDatabases","kxDatabases","ListKxDataviews","kxDataviews","ListKxEnvironments","ListKxScalingGroups","scalingGroups","ListKxUsers","users","createTimestamp","ListKxVolumes","kxVolumeSummaries","ListTagsForResource","resourceArn","TagResource","UntagResource","tagKeys","UpdateEnvironment","UpdateKxClusterCodeConfiguration","deploymentConfiguration","deploymentStrategy","UpdateKxClusterDatabases","UpdateKxDatabase","UpdateKxDataview","UpdateKxEnvironment","UpdateKxEnvironmentNetwork","UpdateKxUser","UpdateKxVolume","shapes","S5","key","value","S9","samlMetadataDocument","samlMetadataURL","applicationCallBackURL","federationURN","federationProviderName","attributeMap","Ss","changeType","s3Path","dbPath","S12","errorType","S1a","tickerplantLogVolumes","S1d","cacheConfigurations","cacheType","dbPaths","dataviewConfiguration","dataviewVersionId","S1m","onDemand","S1r","size","S1u","minNodeCount","maxNodeCount","autoScalingMetric","metricTarget","scaleInCooldownSeconds","scaleOutCooldownSeconds","S20","nodeType","nodeCount","S23","vpcId","securityGroupIds","subnetIds","ipAddressType","S2b","S2f","s3Bucket","s3Key","s3ObjectVersion","S2k","S2p","memoryLimit","memoryReservation","cpu","S2x","S3m","S3p","S4f","sageMakerStudioDomainUrl","S4v","versionId","S54","transitGatewayID","routableCIDRSpace","attachmentNetworkAclConfiguration","ruleNumber","ruleAction","portRange","from","to","icmpTypeCode","cidrBlock","S5h","customDNSServerName","customDNSServerIP","S5p","S5u","clusterStatus"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-03-12',\n    endpointPrefix: 'finspace',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceAbbreviation: 'finspace',\n    serviceFullName: 'FinSpace User Environment Management service',\n    serviceId: 'finspace',\n    signatureVersion: 'v4',\n    signingName: 'finspace',\n    uid: 'finspace-2021-03-12'\n  },\n  operations: {\n    CreateEnvironment: {\n      http: {\n        requestUri: '/environment'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          name: {},\n          description: {},\n          kmsKeyId: {},\n          tags: {\n            shape: 'S5'\n          },\n          federationMode: {},\n          federationParameters: {\n            shape: 'S9'\n          },\n          superuserParameters: {\n            type: 'structure',\n            required: [\n              'emailAddress',\n              'firstName',\n              'lastName'\n            ],\n            members: {\n              emailAddress: {\n                type: 'string',\n                sensitive: true\n              },\n              firstName: {},\n              lastName: {}\n            }\n          },\n          dataBundles: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environmentId: {},\n          environmentArn: {},\n          environmentUrl: {}\n        }\n      },\n      deprecated: true,\n      deprecatedMessage: 'This method will be discontinued.'\n    },\n    CreateKxChangeset: {\n      http: {\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}/changesets'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName',\n          'changeRequests',\n          'clientToken'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          },\n          changeRequests: {\n            shape: 'Ss'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          changesetId: {},\n          databaseName: {},\n          environmentId: {},\n          changeRequests: {\n            shape: 'Ss'\n          },\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          status: {},\n          errorInfo: {\n            shape: 'S12'\n          }\n        }\n      }\n    },\n    CreateKxCluster: {\n      http: {\n        requestUri: '/kx/environments/{environmentId}/clusters'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'clusterName',\n          'clusterType',\n          'releaseLabel',\n          'vpcConfiguration',\n          'azMode'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clusterName: {},\n          clusterType: {},\n          tickerplantLogConfiguration: {\n            shape: 'S1a'\n          },\n          databases: {\n            shape: 'S1d'\n          },\n          cacheStorageConfigurations: {\n            shape: 'S1r'\n          },\n          autoScalingConfiguration: {\n            shape: 'S1u'\n          },\n          clusterDescription: {},\n          capacityConfiguration: {\n            shape: 'S20'\n          },\n          releaseLabel: {},\n          vpcConfiguration: {\n            shape: 'S23'\n          },\n          initializationScript: {},\n          commandLineArguments: {\n            shape: 'S2b'\n          },\n          code: {\n            shape: 'S2f'\n          },\n          executionRole: {},\n          savedownStorageConfiguration: {\n            shape: 'S2k'\n          },\n          azMode: {},\n          availabilityZoneId: {},\n          tags: {\n            shape: 'S5'\n          },\n          scalingGroupConfiguration: {\n            shape: 'S2p'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environmentId: {},\n          status: {},\n          statusReason: {},\n          clusterName: {},\n          clusterType: {},\n          tickerplantLogConfiguration: {\n            shape: 'S1a'\n          },\n          volumes: {\n            shape: 'S2x'\n          },\n          databases: {\n            shape: 'S1d'\n          },\n          cacheStorageConfigurations: {\n            shape: 'S1r'\n          },\n          autoScalingConfiguration: {\n            shape: 'S1u'\n          },\n          clusterDescription: {},\n          capacityConfiguration: {\n            shape: 'S20'\n          },\n          releaseLabel: {},\n          vpcConfiguration: {\n            shape: 'S23'\n          },\n          initializationScript: {},\n          commandLineArguments: {\n            shape: 'S2b'\n          },\n          code: {\n            shape: 'S2f'\n          },\n          executionRole: {},\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          savedownStorageConfiguration: {\n            shape: 'S2k'\n          },\n          azMode: {},\n          availabilityZoneId: {},\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          scalingGroupConfiguration: {\n            shape: 'S2p'\n          }\n        }\n      }\n    },\n    CreateKxDatabase: {\n      http: {\n        requestUri: '/kx/environments/{environmentId}/databases'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName',\n          'clientToken'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {},\n          description: {},\n          tags: {\n            shape: 'S5'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          databaseName: {},\n          databaseArn: {},\n          environmentId: {},\n          description: {},\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    CreateKxDataview: {\n      http: {\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}/dataviews'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName',\n          'dataviewName',\n          'azMode',\n          'clientToken'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          },\n          dataviewName: {},\n          azMode: {},\n          availabilityZoneId: {},\n          changesetId: {},\n          segmentConfigurations: {\n            shape: 'S1m'\n          },\n          autoUpdate: {\n            type: 'boolean'\n          },\n          readWrite: {\n            type: 'boolean'\n          },\n          description: {},\n          tags: {\n            shape: 'S5'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          dataviewName: {},\n          databaseName: {},\n          environmentId: {},\n          azMode: {},\n          availabilityZoneId: {},\n          changesetId: {},\n          segmentConfigurations: {\n            shape: 'S1m'\n          },\n          description: {},\n          autoUpdate: {\n            type: 'boolean'\n          },\n          readWrite: {\n            type: 'boolean'\n          },\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          status: {}\n        }\n      }\n    },\n    CreateKxEnvironment: {\n      http: {\n        requestUri: '/kx/environments'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'kmsKeyId'\n        ],\n        members: {\n          name: {},\n          description: {},\n          kmsKeyId: {},\n          tags: {\n            shape: 'S5'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          status: {},\n          environmentId: {},\n          description: {},\n          environmentArn: {},\n          kmsKeyId: {},\n          creationTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    CreateKxScalingGroup: {\n      http: {\n        requestUri: '/kx/environments/{environmentId}/scalingGroups'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clientToken',\n          'environmentId',\n          'scalingGroupName',\n          'hostType',\n          'availabilityZoneId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          scalingGroupName: {},\n          hostType: {},\n          availabilityZoneId: {},\n          tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environmentId: {},\n          scalingGroupName: {},\n          hostType: {},\n          availabilityZoneId: {},\n          status: {},\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          createdTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    CreateKxUser: {\n      http: {\n        requestUri: '/kx/environments/{environmentId}/users'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'userName',\n          'iamRole'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          userName: {},\n          iamRole: {},\n          tags: {\n            shape: 'S5'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          userName: {},\n          userArn: {},\n          environmentId: {},\n          iamRole: {}\n        }\n      }\n    },\n    CreateKxVolume: {\n      http: {\n        requestUri: '/kx/environments/{environmentId}/kxvolumes'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'volumeType',\n          'volumeName',\n          'azMode',\n          'availabilityZoneIds'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          volumeType: {},\n          volumeName: {},\n          description: {},\n          nas1Configuration: {\n            shape: 'S3m'\n          },\n          azMode: {},\n          availabilityZoneIds: {\n            shape: 'S3p'\n          },\n          tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environmentId: {},\n          volumeName: {},\n          volumeType: {},\n          volumeArn: {},\n          nas1Configuration: {\n            shape: 'S3m'\n          },\n          status: {},\n          statusReason: {},\n          azMode: {},\n          description: {},\n          availabilityZoneIds: {\n            shape: 'S3p'\n          },\n          createdTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    DeleteEnvironment: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/environment/{environmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      deprecated: true,\n      deprecatedMessage: 'This method will be discontinued.'\n    },\n    DeleteKxCluster: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/kx/environments/{environmentId}/clusters/{clusterName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'clusterName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clusterName: {\n            location: 'uri',\n            locationName: 'clusterName'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteKxClusterNode: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/kx/environments/{environmentId}/clusters/{clusterName}/nodes/{nodeId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clusterName',\n          'nodeId',\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clusterName: {\n            location: 'uri',\n            locationName: 'clusterName'\n          },\n          nodeId: {\n            location: 'uri',\n            locationName: 'nodeId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteKxDatabase: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName',\n          'clientToken'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteKxDataview: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}/dataviews/{dataviewName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName',\n          'dataviewName',\n          'clientToken'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          },\n          dataviewName: {\n            location: 'uri',\n            locationName: 'dataviewName'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteKxEnvironment: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/kx/environments/{environmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteKxScalingGroup: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/kx/environments/{environmentId}/scalingGroups/{scalingGroupName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'scalingGroupName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          scalingGroupName: {\n            location: 'uri',\n            locationName: 'scalingGroupName'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteKxUser: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/kx/environments/{environmentId}/users/{userName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'userName',\n          'environmentId'\n        ],\n        members: {\n          userName: {\n            location: 'uri',\n            locationName: 'userName'\n          },\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    DeleteKxVolume: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/kx/environments/{environmentId}/kxvolumes/{volumeName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'volumeName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          volumeName: {\n            location: 'uri',\n            locationName: 'volumeName'\n          },\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    GetEnvironment: {\n      http: {\n        method: 'GET',\n        requestUri: '/environment/{environmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environment: {\n            shape: 'S4f'\n          }\n        }\n      },\n      deprecated: true,\n      deprecatedMessage: 'This method will be discontinued.'\n    },\n    GetKxChangeset: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}/changesets/{changesetId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName',\n          'changesetId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          },\n          changesetId: {\n            location: 'uri',\n            locationName: 'changesetId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          changesetId: {},\n          databaseName: {},\n          environmentId: {},\n          changeRequests: {\n            shape: 'Ss'\n          },\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          activeFromTimestamp: {\n            type: 'timestamp'\n          },\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          status: {},\n          errorInfo: {\n            shape: 'S12'\n          }\n        }\n      }\n    },\n    GetKxCluster: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/clusters/{clusterName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'clusterName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clusterName: {\n            location: 'uri',\n            locationName: 'clusterName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          status: {},\n          statusReason: {},\n          clusterName: {},\n          clusterType: {},\n          tickerplantLogConfiguration: {\n            shape: 'S1a'\n          },\n          volumes: {\n            shape: 'S2x'\n          },\n          databases: {\n            shape: 'S1d'\n          },\n          cacheStorageConfigurations: {\n            shape: 'S1r'\n          },\n          autoScalingConfiguration: {\n            shape: 'S1u'\n          },\n          clusterDescription: {},\n          capacityConfiguration: {\n            shape: 'S20'\n          },\n          releaseLabel: {},\n          vpcConfiguration: {\n            shape: 'S23'\n          },\n          initializationScript: {},\n          commandLineArguments: {\n            shape: 'S2b'\n          },\n          code: {\n            shape: 'S2f'\n          },\n          executionRole: {},\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          savedownStorageConfiguration: {\n            shape: 'S2k'\n          },\n          azMode: {},\n          availabilityZoneId: {},\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          scalingGroupConfiguration: {\n            shape: 'S2p'\n          }\n        }\n      }\n    },\n    GetKxConnectionString: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/connectionString'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'userArn',\n          'environmentId',\n          'clusterName'\n        ],\n        members: {\n          userArn: {\n            location: 'querystring',\n            locationName: 'userArn'\n          },\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clusterName: {\n            location: 'querystring',\n            locationName: 'clusterName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          signedConnectionString: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      }\n    },\n    GetKxDatabase: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          databaseName: {},\n          databaseArn: {},\n          environmentId: {},\n          description: {},\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          lastCompletedChangesetId: {},\n          numBytes: {\n            type: 'long'\n          },\n          numChangesets: {\n            type: 'integer'\n          },\n          numFiles: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    GetKxDataview: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}/dataviews/{dataviewName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName',\n          'dataviewName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          },\n          dataviewName: {\n            location: 'uri',\n            locationName: 'dataviewName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          databaseName: {},\n          dataviewName: {},\n          azMode: {},\n          availabilityZoneId: {},\n          changesetId: {},\n          segmentConfigurations: {\n            shape: 'S1m'\n          },\n          activeVersions: {\n            shape: 'S4v'\n          },\n          description: {},\n          autoUpdate: {\n            type: 'boolean'\n          },\n          readWrite: {\n            type: 'boolean'\n          },\n          environmentId: {},\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          status: {},\n          statusReason: {}\n        }\n      }\n    },\n    GetKxEnvironment: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          environmentId: {},\n          awsAccountId: {},\n          status: {},\n          tgwStatus: {},\n          dnsStatus: {},\n          errorMessage: {},\n          description: {},\n          environmentArn: {},\n          kmsKeyId: {},\n          dedicatedServiceAccountId: {},\n          transitGatewayConfiguration: {\n            shape: 'S54'\n          },\n          customDNSConfiguration: {\n            shape: 'S5h'\n          },\n          creationTimestamp: {\n            type: 'timestamp'\n          },\n          updateTimestamp: {\n            type: 'timestamp'\n          },\n          availabilityZoneIds: {\n            shape: 'S3p'\n          },\n          certificateAuthorityArn: {}\n        }\n      }\n    },\n    GetKxScalingGroup: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/scalingGroups/{scalingGroupName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'scalingGroupName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          scalingGroupName: {\n            location: 'uri',\n            locationName: 'scalingGroupName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          scalingGroupName: {},\n          scalingGroupArn: {},\n          hostType: {},\n          clusters: {\n            shape: 'S5p'\n          },\n          availabilityZoneId: {},\n          status: {},\n          statusReason: {},\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          createdTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    GetKxUser: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/users/{userName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'userName',\n          'environmentId'\n        ],\n        members: {\n          userName: {\n            location: 'uri',\n            locationName: 'userName'\n          },\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          userName: {},\n          userArn: {},\n          environmentId: {},\n          iamRole: {}\n        }\n      }\n    },\n    GetKxVolume: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/kxvolumes/{volumeName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'volumeName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          volumeName: {\n            location: 'uri',\n            locationName: 'volumeName'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environmentId: {},\n          volumeName: {},\n          volumeType: {},\n          volumeArn: {},\n          nas1Configuration: {\n            shape: 'S3m'\n          },\n          status: {},\n          statusReason: {},\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          description: {},\n          azMode: {},\n          availabilityZoneIds: {\n            shape: 'S3p'\n          },\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          attachedClusters: {\n            shape: 'S5u'\n          }\n        }\n      }\n    },\n    ListEnvironments: {\n      http: {\n        method: 'GET',\n        requestUri: '/environment'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environments: {\n            type: 'list',\n            member: {\n              shape: 'S4f'\n            }\n          },\n          nextToken: {}\n        }\n      },\n      deprecated: true,\n      deprecatedMessage: 'This method will be discontinued.'\n    },\n    ListKxChangesets: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}/changesets'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          kxChangesets: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                changesetId: {},\n                createdTimestamp: {\n                  type: 'timestamp'\n                },\n                activeFromTimestamp: {\n                  type: 'timestamp'\n                },\n                lastModifiedTimestamp: {\n                  type: 'timestamp'\n                },\n                status: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListKxClusterNodes: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/clusters/{clusterName}/nodes'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'clusterName',\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clusterName: {\n            location: 'uri',\n            locationName: 'clusterName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nodes: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                nodeId: {},\n                availabilityZoneId: {},\n                launchTime: {\n                  type: 'timestamp'\n                },\n                status: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListKxClusters: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/clusters'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clusterType: {\n            location: 'querystring',\n            locationName: 'clusterType'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          kxClusterSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                status: {},\n                statusReason: {},\n                clusterName: {},\n                clusterType: {},\n                clusterDescription: {},\n                releaseLabel: {},\n                volumes: {\n                  shape: 'S2x'\n                },\n                initializationScript: {},\n                executionRole: {},\n                azMode: {},\n                availabilityZoneId: {},\n                lastModifiedTimestamp: {\n                  type: 'timestamp'\n                },\n                createdTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListKxDatabases: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/databases'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          kxDatabases: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                databaseName: {},\n                createdTimestamp: {\n                  type: 'timestamp'\n                },\n                lastModifiedTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListKxDataviews: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}/dataviews'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          kxDataviews: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                environmentId: {},\n                databaseName: {},\n                dataviewName: {},\n                azMode: {},\n                availabilityZoneId: {},\n                changesetId: {},\n                segmentConfigurations: {\n                  shape: 'S1m'\n                },\n                activeVersions: {\n                  shape: 'S4v'\n                },\n                status: {},\n                description: {},\n                autoUpdate: {\n                  type: 'boolean'\n                },\n                readWrite: {\n                  type: 'boolean'\n                },\n                createdTimestamp: {\n                  type: 'timestamp'\n                },\n                lastModifiedTimestamp: {\n                  type: 'timestamp'\n                },\n                statusReason: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListKxEnvironments: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments'\n      },\n      input: {\n        type: 'structure',\n        members: {\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environments: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                name: {},\n                environmentId: {},\n                awsAccountId: {},\n                status: {},\n                tgwStatus: {},\n                dnsStatus: {},\n                errorMessage: {},\n                description: {},\n                environmentArn: {},\n                kmsKeyId: {},\n                dedicatedServiceAccountId: {},\n                transitGatewayConfiguration: {\n                  shape: 'S54'\n                },\n                customDNSConfiguration: {\n                  shape: 'S5h'\n                },\n                creationTimestamp: {\n                  type: 'timestamp'\n                },\n                updateTimestamp: {\n                  type: 'timestamp'\n                },\n                availabilityZoneIds: {\n                  shape: 'S3p'\n                },\n                certificateAuthorityArn: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListKxScalingGroups: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/scalingGroups'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          scalingGroups: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                scalingGroupName: {},\n                hostType: {},\n                clusters: {\n                  shape: 'S5p'\n                },\n                availabilityZoneId: {},\n                status: {},\n                statusReason: {},\n                lastModifiedTimestamp: {\n                  type: 'timestamp'\n                },\n                createdTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListKxUsers: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/users'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          users: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                userArn: {},\n                userName: {},\n                iamRole: {},\n                createTimestamp: {\n                  type: 'timestamp'\n                },\n                updateTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListKxVolumes: {\n      http: {\n        method: 'GET',\n        requestUri: '/kx/environments/{environmentId}/kxvolumes'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          volumeType: {\n            location: 'querystring',\n            locationName: 'volumeType'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          kxVolumeSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                volumeName: {},\n                volumeType: {},\n                status: {},\n                description: {},\n                statusReason: {},\n                azMode: {},\n                availabilityZoneIds: {\n                  shape: 'S3p'\n                },\n                createdTimestamp: {\n                  type: 'timestamp'\n                },\n                lastModifiedTimestamp: {\n                  type: 'timestamp'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S5'\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S5'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateEnvironment: {\n      http: {\n        method: 'PUT',\n        requestUri: '/environment/{environmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          name: {},\n          description: {},\n          federationMode: {},\n          federationParameters: {\n            shape: 'S9'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environment: {\n            shape: 'S4f'\n          }\n        }\n      },\n      deprecated: true,\n      deprecatedMessage: 'This method will be discontinued.'\n    },\n    UpdateKxClusterCodeConfiguration: {\n      http: {\n        method: 'PUT',\n        requestUri: '/kx/environments/{environmentId}/clusters/{clusterName}/configuration/code'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'clusterName',\n          'code'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clusterName: {\n            location: 'uri',\n            locationName: 'clusterName'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          code: {\n            shape: 'S2f'\n          },\n          initializationScript: {},\n          commandLineArguments: {\n            shape: 'S2b'\n          },\n          deploymentConfiguration: {\n            type: 'structure',\n            required: [\n              'deploymentStrategy'\n            ],\n            members: {\n              deploymentStrategy: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateKxClusterDatabases: {\n      http: {\n        method: 'PUT',\n        requestUri: '/kx/environments/{environmentId}/clusters/{clusterName}/configuration/databases'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'clusterName',\n          'databases'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          clusterName: {\n            location: 'uri',\n            locationName: 'clusterName'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          databases: {\n            shape: 'S1d'\n          },\n          deploymentConfiguration: {\n            type: 'structure',\n            required: [\n              'deploymentStrategy'\n            ],\n            members: {\n              deploymentStrategy: {}\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UpdateKxDatabase: {\n      http: {\n        method: 'PUT',\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName',\n          'clientToken'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          },\n          description: {},\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          databaseName: {},\n          environmentId: {},\n          description: {},\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    UpdateKxDataview: {\n      http: {\n        method: 'PUT',\n        requestUri: '/kx/environments/{environmentId}/databases/{databaseName}/dataviews/{dataviewName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'databaseName',\n          'dataviewName',\n          'clientToken'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          databaseName: {\n            location: 'uri',\n            locationName: 'databaseName'\n          },\n          dataviewName: {\n            location: 'uri',\n            locationName: 'dataviewName'\n          },\n          description: {},\n          changesetId: {},\n          segmentConfigurations: {\n            shape: 'S1m'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environmentId: {},\n          databaseName: {},\n          dataviewName: {},\n          azMode: {},\n          availabilityZoneId: {},\n          changesetId: {},\n          segmentConfigurations: {\n            shape: 'S1m'\n          },\n          activeVersions: {\n            shape: 'S4v'\n          },\n          status: {},\n          autoUpdate: {\n            type: 'boolean'\n          },\n          readWrite: {\n            type: 'boolean'\n          },\n          description: {},\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    UpdateKxEnvironment: {\n      http: {\n        method: 'PUT',\n        requestUri: '/kx/environments/{environmentId}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          name: {},\n          description: {},\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          environmentId: {},\n          awsAccountId: {},\n          status: {},\n          tgwStatus: {},\n          dnsStatus: {},\n          errorMessage: {},\n          description: {},\n          environmentArn: {},\n          kmsKeyId: {},\n          dedicatedServiceAccountId: {},\n          transitGatewayConfiguration: {\n            shape: 'S54'\n          },\n          customDNSConfiguration: {\n            shape: 'S5h'\n          },\n          creationTimestamp: {\n            type: 'timestamp'\n          },\n          updateTimestamp: {\n            type: 'timestamp'\n          },\n          availabilityZoneIds: {\n            shape: 'S3p'\n          }\n        }\n      }\n    },\n    UpdateKxEnvironmentNetwork: {\n      http: {\n        method: 'PUT',\n        requestUri: '/kx/environments/{environmentId}/network'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          transitGatewayConfiguration: {\n            shape: 'S54'\n          },\n          customDNSConfiguration: {\n            shape: 'S5h'\n          },\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          name: {},\n          environmentId: {},\n          awsAccountId: {},\n          status: {},\n          tgwStatus: {},\n          dnsStatus: {},\n          errorMessage: {},\n          description: {},\n          environmentArn: {},\n          kmsKeyId: {},\n          dedicatedServiceAccountId: {},\n          transitGatewayConfiguration: {\n            shape: 'S54'\n          },\n          customDNSConfiguration: {\n            shape: 'S5h'\n          },\n          creationTimestamp: {\n            type: 'timestamp'\n          },\n          updateTimestamp: {\n            type: 'timestamp'\n          },\n          availabilityZoneIds: {\n            shape: 'S3p'\n          }\n        }\n      }\n    },\n    UpdateKxUser: {\n      http: {\n        method: 'PUT',\n        requestUri: '/kx/environments/{environmentId}/users/{userName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'userName',\n          'iamRole'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          userName: {\n            location: 'uri',\n            locationName: 'userName'\n          },\n          iamRole: {},\n          clientToken: {\n            idempotencyToken: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          userName: {},\n          userArn: {},\n          environmentId: {},\n          iamRole: {}\n        }\n      }\n    },\n    UpdateKxVolume: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/kx/environments/{environmentId}/kxvolumes/{volumeName}'\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'environmentId',\n          'volumeName'\n        ],\n        members: {\n          environmentId: {\n            location: 'uri',\n            locationName: 'environmentId'\n          },\n          volumeName: {\n            location: 'uri',\n            locationName: 'volumeName'\n          },\n          description: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          nas1Configuration: {\n            shape: 'S3m'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          environmentId: {},\n          volumeName: {},\n          volumeType: {},\n          volumeArn: {},\n          nas1Configuration: {\n            shape: 'S3m'\n          },\n          status: {},\n          description: {},\n          statusReason: {},\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          azMode: {},\n          availabilityZoneIds: {\n            shape: 'S3p'\n          },\n          lastModifiedTimestamp: {\n            type: 'timestamp'\n          },\n          attachedClusters: {\n            shape: 'S5u'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S9: {\n      type: 'structure',\n      members: {\n        samlMetadataDocument: {},\n        samlMetadataURL: {},\n        applicationCallBackURL: {},\n        federationURN: {},\n        federationProviderName: {},\n        attributeMap: {\n          type: 'map',\n          key: {},\n          value: {}\n        }\n      }\n    },\n    Ss: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'changeType',\n          'dbPath'\n        ],\n        members: {\n          changeType: {},\n          s3Path: {},\n          dbPath: {}\n        }\n      }\n    },\n    S12: {\n      type: 'structure',\n      members: {\n        errorMessage: {},\n        errorType: {}\n      }\n    },\n    S1a: {\n      type: 'structure',\n      members: {\n        tickerplantLogVolumes: {\n          type: 'list',\n          member: {}\n        }\n      }\n    },\n    S1d: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'databaseName'\n        ],\n        members: {\n          databaseName: {},\n          cacheConfigurations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'cacheType',\n                'dbPaths'\n              ],\n              members: {\n                cacheType: {},\n                dbPaths: {\n                  type: 'list',\n                  member: {}\n                },\n                dataviewName: {}\n              }\n            }\n          },\n          changesetId: {},\n          dataviewName: {},\n          dataviewConfiguration: {\n            type: 'structure',\n            members: {\n              dataviewName: {},\n              dataviewVersionId: {},\n              changesetId: {},\n              segmentConfigurations: {\n                shape: 'S1m'\n              }\n            }\n          }\n        }\n      }\n    },\n    S1m: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'dbPaths',\n          'volumeName'\n        ],\n        members: {\n          dbPaths: {\n            type: 'list',\n            member: {}\n          },\n          volumeName: {},\n          onDemand: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    S1r: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'type',\n          'size'\n        ],\n        members: {\n          type: {},\n          size: {\n            type: 'integer'\n          }\n        }\n      }\n    },\n    S1u: {\n      type: 'structure',\n      members: {\n        minNodeCount: {\n          type: 'integer'\n        },\n        maxNodeCount: {\n          type: 'integer'\n        },\n        autoScalingMetric: {},\n        metricTarget: {\n          type: 'double'\n        },\n        scaleInCooldownSeconds: {\n          type: 'double'\n        },\n        scaleOutCooldownSeconds: {\n          type: 'double'\n        }\n      }\n    },\n    S20: {\n      type: 'structure',\n      members: {\n        nodeType: {},\n        nodeCount: {\n          type: 'integer'\n        }\n      }\n    },\n    S23: {\n      type: 'structure',\n      members: {\n        vpcId: {},\n        securityGroupIds: {\n          type: 'list',\n          member: {}\n        },\n        subnetIds: {\n          type: 'list',\n          member: {}\n        },\n        ipAddressType: {}\n      }\n    },\n    S2b: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          key: {},\n          value: {}\n        }\n      }\n    },\n    S2f: {\n      type: 'structure',\n      members: {\n        s3Bucket: {},\n        s3Key: {},\n        s3ObjectVersion: {}\n      }\n    },\n    S2k: {\n      type: 'structure',\n      members: {\n        type: {},\n        size: {\n          type: 'integer'\n        },\n        volumeName: {}\n      }\n    },\n    S2p: {\n      type: 'structure',\n      required: [\n        'scalingGroupName',\n        'memoryReservation',\n        'nodeCount'\n      ],\n      members: {\n        scalingGroupName: {},\n        memoryLimit: {\n          type: 'integer'\n        },\n        memoryReservation: {\n          type: 'integer'\n        },\n        nodeCount: {\n          type: 'integer'\n        },\n        cpu: {\n          type: 'double'\n        }\n      }\n    },\n    S2x: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          volumeName: {},\n          volumeType: {}\n        }\n      }\n    },\n    S3m: {\n      type: 'structure',\n      members: {\n        type: {},\n        size: {\n          type: 'integer'\n        }\n      }\n    },\n    S3p: {\n      type: 'list',\n      member: {}\n    },\n    S4f: {\n      type: 'structure',\n      members: {\n        name: {},\n        environmentId: {},\n        awsAccountId: {},\n        status: {},\n        environmentUrl: {},\n        description: {},\n        environmentArn: {},\n        sageMakerStudioDomainUrl: {},\n        kmsKeyId: {},\n        dedicatedServiceAccountId: {},\n        federationMode: {},\n        federationParameters: {\n          shape: 'S9'\n        }\n      }\n    },\n    S4v: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          changesetId: {},\n          segmentConfigurations: {\n            shape: 'S1m'\n          },\n          attachedClusters: {\n            type: 'list',\n            member: {}\n          },\n          createdTimestamp: {\n            type: 'timestamp'\n          },\n          versionId: {}\n        }\n      }\n    },\n    S54: {\n      type: 'structure',\n      required: [\n        'transitGatewayID',\n        'routableCIDRSpace'\n      ],\n      members: {\n        transitGatewayID: {},\n        routableCIDRSpace: {},\n        attachmentNetworkAclConfiguration: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'ruleNumber',\n              'protocol',\n              'ruleAction',\n              'cidrBlock'\n            ],\n            members: {\n              ruleNumber: {\n                type: 'integer'\n              },\n              protocol: {},\n              ruleAction: {},\n              portRange: {\n                type: 'structure',\n                required: [\n                  'from',\n                  'to'\n                ],\n                members: {\n                  from: {\n                    type: 'integer'\n                  },\n                  to: {\n                    type: 'integer'\n                  }\n                }\n              },\n              icmpTypeCode: {\n                type: 'structure',\n                required: [\n                  'type',\n                  'code'\n                ],\n                members: {\n                  type: {\n                    type: 'integer'\n                  },\n                  code: {\n                    type: 'integer'\n                  }\n                }\n              },\n              cidrBlock: {}\n            }\n          }\n        }\n      }\n    },\n    S5h: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'customDNSServerName',\n          'customDNSServerIP'\n        ],\n        members: {\n          customDNSServerName: {},\n          customDNSServerIP: {}\n        }\n      }\n    },\n    S5p: {\n      type: 'list',\n      member: {}\n    },\n    S5u: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          clusterName: {},\n          clusterType: {},\n          clusterStatus: {}\n        }\n      }\n    }\n  }\n}"]}