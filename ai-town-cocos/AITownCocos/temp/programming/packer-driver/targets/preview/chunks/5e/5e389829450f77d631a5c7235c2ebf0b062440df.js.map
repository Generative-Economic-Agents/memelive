{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/bedrock-agent-runtime-2023-07-26.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","InvokeAgent","http","requestUri","responseCode","input","type","required","members","agentAliasId","location","locationName","agentId","enableTrace","endSession","inputText","sensitive","sessionId","sessionState","invocationId","promptSessionAttributes","key","value","returnControlInvocationResults","member","apiResult","actionGroup","apiPath","shape","httpMethod","httpStatusCode","responseBody","responseState","functionResult","union","sessionAttributes","output","completion","accessDeniedException","message","error","senderFault","exception","badGatewayException","resourceName","fault","chunk","attribution","citations","bytes","event","conflictException","dependencyFailedException","internalServerException","resourceNotFoundException","returnControl","invocationInputs","apiInvocationInput","parameters","name","requestBody","content","properties","functionInvocationInput","serviceQuotaExceededException","throttlingException","trace","agentVersion","failureTrace","failureReason","traceId","guardrailTrace","action","inputAssessments","outputAssessments","orchestrationTrace","invocationInput","actionGroupInvocationInput","actionGroupName","verb","invocationType","knowledgeBaseLookupInput","knowledgeBaseId","text","modelInvocationInput","observation","actionGroupInvocationOutput","finalResponse","knowledgeBaseLookupOutput","retrievedReferences","repromptResponse","source","rationale","postProcessingTrace","modelInvocationOutput","parsedResponse","preProcessingTrace","isValid","validationException","eventstream","contentType","payload","Retrieve","nextToken","retrievalConfiguration","retrievalQuery","retrievalResults","score","RetrieveAndGenerate","retrieveAndGenerateConfiguration","externalSourcesConfiguration","generationConfiguration","additionalModelRequestFields","guardrailConfiguration","inferenceConfig","promptTemplate","modelArn","sources","byteContent","data","identifier","s3Location","uri","sourceType","knowledgeBaseConfiguration","sessionConfiguration","kmsKeyArn","guardrailAction","shapes","Sd","Sf","body","Sr","generatedResponsePart","textResponsePart","span","end","start","Sy","S10","S11","S14","document","S1m","S20","contentPolicy","filters","confidence","sensitiveInformationPolicy","piiEntities","match","regexes","regex","topicPolicy","topics","wordPolicy","customWords","managedWordLists","S2w","S34","inferenceConfiguration","maximumLength","stopSequences","temperature","topK","topP","overrideLambda","parserMode","promptCreationMode","S3p","S42","vectorSearchConfiguration","filter","numberOfResults","overrideSearchType","S44","andAll","equals","greaterThan","greaterThanOrEquals","lessThan","lessThanOrEquals","listContains","notEquals","notIn","orAll","startsWith","stringContains","S45","S46","S4n","S4q","guardrailId","guardrailVersion","S4t","textInferenceConfig","maxTokens","S4y","textPromptTemplate"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2023-07-26',\n    endpointPrefix: 'bedrock-agent-runtime',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Agents for Amazon Bedrock Runtime',\n    serviceId: 'Bedrock Agent Runtime',\n    signatureVersion: 'v4',\n    signingName: 'bedrock',\n    uid: 'bedrock-agent-runtime-2023-07-26'\n  },\n  operations: {\n    InvokeAgent: {\n      http: {\n        requestUri: '/agents/{agentId}/agentAliases/{agentAliasId}/sessions/{sessionId}/text',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'agentAliasId',\n          'agentId',\n          'sessionId'\n        ],\n        members: {\n          agentAliasId: {\n            location: 'uri',\n            locationName: 'agentAliasId'\n          },\n          agentId: {\n            location: 'uri',\n            locationName: 'agentId'\n          },\n          enableTrace: {\n            type: 'boolean'\n          },\n          endSession: {\n            type: 'boolean'\n          },\n          inputText: {\n            type: 'string',\n            sensitive: true\n          },\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          },\n          sessionState: {\n            type: 'structure',\n            members: {\n              invocationId: {},\n              promptSessionAttributes: {\n                type: 'map',\n                key: {},\n                value: {}\n              },\n              returnControlInvocationResults: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    apiResult: {\n                      type: 'structure',\n                      required: [\n                        'actionGroup'\n                      ],\n                      members: {\n                        actionGroup: {},\n                        apiPath: {\n                          shape: 'Sd'\n                        },\n                        httpMethod: {},\n                        httpStatusCode: {\n                          type: 'integer'\n                        },\n                        responseBody: {\n                          shape: 'Sf'\n                        },\n                        responseState: {}\n                      }\n                    },\n                    functionResult: {\n                      type: 'structure',\n                      required: [\n                        'actionGroup'\n                      ],\n                      members: {\n                        actionGroup: {},\n                        'function': {},\n                        responseBody: {\n                          shape: 'Sf'\n                        },\n                        responseState: {}\n                      }\n                    }\n                  },\n                  union: true\n                }\n              },\n              sessionAttributes: {\n                type: 'map',\n                key: {},\n                value: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'completion',\n          'contentType',\n          'sessionId'\n        ],\n        members: {\n          completion: {\n            type: 'structure',\n            members: {\n              accessDeniedException: {\n                type: 'structure',\n                members: {\n                  message: {}\n                },\n                error: {\n                  httpStatusCode: 403,\n                  senderFault: true\n                },\n                exception: true\n              },\n              badGatewayException: {\n                type: 'structure',\n                members: {\n                  message: {},\n                  resourceName: {}\n                },\n                error: {\n                  httpStatusCode: 502\n                },\n                exception: true,\n                fault: true\n              },\n              chunk: {\n                type: 'structure',\n                members: {\n                  attribution: {\n                    type: 'structure',\n                    members: {\n                      citations: {\n                        shape: 'Sr'\n                      }\n                    }\n                  },\n                  bytes: {\n                    type: 'blob',\n                    sensitive: true\n                  }\n                },\n                event: true,\n                sensitive: true\n              },\n              conflictException: {\n                type: 'structure',\n                members: {\n                  message: {}\n                },\n                error: {\n                  httpStatusCode: 409,\n                  senderFault: true\n                },\n                exception: true\n              },\n              dependencyFailedException: {\n                type: 'structure',\n                members: {\n                  message: {},\n                  resourceName: {}\n                },\n                error: {\n                  httpStatusCode: 424,\n                  senderFault: true\n                },\n                exception: true\n              },\n              internalServerException: {\n                type: 'structure',\n                members: {\n                  message: {}\n                },\n                error: {\n                  httpStatusCode: 500\n                },\n                exception: true,\n                fault: true\n              },\n              resourceNotFoundException: {\n                type: 'structure',\n                members: {\n                  message: {}\n                },\n                error: {\n                  httpStatusCode: 404,\n                  senderFault: true\n                },\n                exception: true\n              },\n              returnControl: {\n                type: 'structure',\n                members: {\n                  invocationId: {},\n                  invocationInputs: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      members: {\n                        apiInvocationInput: {\n                          type: 'structure',\n                          required: [\n                            'actionGroup'\n                          ],\n                          members: {\n                            actionGroup: {},\n                            apiPath: {\n                              shape: 'Sd'\n                            },\n                            httpMethod: {},\n                            parameters: {\n                              type: 'list',\n                              member: {\n                                type: 'structure',\n                                members: {\n                                  name: {},\n                                  type: {},\n                                  value: {}\n                                }\n                              }\n                            },\n                            requestBody: {\n                              type: 'structure',\n                              members: {\n                                content: {\n                                  type: 'map',\n                                  key: {},\n                                  value: {\n                                    type: 'structure',\n                                    members: {\n                                      properties: {\n                                        type: 'list',\n                                        member: {\n                                          shape: 'S1m'\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n                        functionInvocationInput: {\n                          type: 'structure',\n                          required: [\n                            'actionGroup'\n                          ],\n                          members: {\n                            actionGroup: {},\n                            'function': {},\n                            parameters: {\n                              type: 'list',\n                              member: {\n                                type: 'structure',\n                                members: {\n                                  name: {},\n                                  type: {},\n                                  value: {}\n                                }\n                              }\n                            }\n                          }\n                        }\n                      },\n                      union: true\n                    }\n                  }\n                },\n                event: true,\n                sensitive: true\n              },\n              serviceQuotaExceededException: {\n                type: 'structure',\n                members: {\n                  message: {}\n                },\n                error: {\n                  httpStatusCode: 400,\n                  senderFault: true\n                },\n                exception: true\n              },\n              throttlingException: {\n                type: 'structure',\n                members: {\n                  message: {}\n                },\n                error: {\n                  httpStatusCode: 429,\n                  senderFault: true\n                },\n                exception: true\n              },\n              trace: {\n                type: 'structure',\n                members: {\n                  agentAliasId: {},\n                  agentId: {},\n                  agentVersion: {},\n                  sessionId: {},\n                  trace: {\n                    type: 'structure',\n                    members: {\n                      failureTrace: {\n                        type: 'structure',\n                        members: {\n                          failureReason: {\n                            type: 'string',\n                            sensitive: true\n                          },\n                          traceId: {}\n                        },\n                        sensitive: true\n                      },\n                      guardrailTrace: {\n                        type: 'structure',\n                        members: {\n                          action: {},\n                          inputAssessments: {\n                            shape: 'S20'\n                          },\n                          outputAssessments: {\n                            shape: 'S20'\n                          },\n                          traceId: {}\n                        },\n                        sensitive: true\n                      },\n                      orchestrationTrace: {\n                        type: 'structure',\n                        members: {\n                          invocationInput: {\n                            type: 'structure',\n                            members: {\n                              actionGroupInvocationInput: {\n                                type: 'structure',\n                                members: {\n                                  actionGroupName: {\n                                    type: 'string',\n                                    sensitive: true\n                                  },\n                                  apiPath: {\n                                    shape: 'Sd'\n                                  },\n                                  'function': {\n                                    type: 'string',\n                                    sensitive: true\n                                  },\n                                  parameters: {\n                                    shape: 'S2w'\n                                  },\n                                  requestBody: {\n                                    type: 'structure',\n                                    members: {\n                                      content: {\n                                        type: 'map',\n                                        key: {},\n                                        value: {\n                                          shape: 'S2w'\n                                        }\n                                      }\n                                    }\n                                  },\n                                  verb: {\n                                    type: 'string',\n                                    sensitive: true\n                                  }\n                                }\n                              },\n                              invocationType: {},\n                              knowledgeBaseLookupInput: {\n                                type: 'structure',\n                                members: {\n                                  knowledgeBaseId: {\n                                    type: 'string',\n                                    sensitive: true\n                                  },\n                                  text: {\n                                    type: 'string',\n                                    sensitive: true\n                                  }\n                                }\n                              },\n                              traceId: {}\n                            },\n                            sensitive: true\n                          },\n                          modelInvocationInput: {\n                            shape: 'S34'\n                          },\n                          observation: {\n                            type: 'structure',\n                            members: {\n                              actionGroupInvocationOutput: {\n                                type: 'structure',\n                                members: {\n                                  text: {\n                                    type: 'string',\n                                    sensitive: true\n                                  }\n                                }\n                              },\n                              finalResponse: {\n                                type: 'structure',\n                                members: {\n                                  text: {\n                                    type: 'string',\n                                    sensitive: true\n                                  }\n                                }\n                              },\n                              knowledgeBaseLookupOutput: {\n                                type: 'structure',\n                                members: {\n                                  retrievedReferences: {\n                                    shape: 'Sy'\n                                  }\n                                }\n                              },\n                              repromptResponse: {\n                                type: 'structure',\n                                members: {\n                                  source: {\n                                    type: 'string',\n                                    sensitive: true\n                                  },\n                                  text: {}\n                                },\n                                sensitive: true\n                              },\n                              traceId: {},\n                              type: {}\n                            },\n                            sensitive: true\n                          },\n                          rationale: {\n                            type: 'structure',\n                            members: {\n                              text: {\n                                shape: 'S3p'\n                              },\n                              traceId: {}\n                            },\n                            sensitive: true\n                          }\n                        },\n                        sensitive: true,\n                        union: true\n                      },\n                      postProcessingTrace: {\n                        type: 'structure',\n                        members: {\n                          modelInvocationInput: {\n                            shape: 'S34'\n                          },\n                          modelInvocationOutput: {\n                            type: 'structure',\n                            members: {\n                              parsedResponse: {\n                                type: 'structure',\n                                members: {\n                                  text: {\n                                    type: 'string',\n                                    sensitive: true\n                                  }\n                                },\n                                sensitive: true\n                              },\n                              traceId: {}\n                            },\n                            sensitive: true\n                          }\n                        },\n                        sensitive: true,\n                        union: true\n                      },\n                      preProcessingTrace: {\n                        type: 'structure',\n                        members: {\n                          modelInvocationInput: {\n                            shape: 'S34'\n                          },\n                          modelInvocationOutput: {\n                            type: 'structure',\n                            members: {\n                              parsedResponse: {\n                                type: 'structure',\n                                members: {\n                                  isValid: {\n                                    type: 'boolean'\n                                  },\n                                  rationale: {\n                                    shape: 'S3p'\n                                  }\n                                },\n                                sensitive: true\n                              },\n                              traceId: {}\n                            },\n                            sensitive: true\n                          }\n                        },\n                        sensitive: true,\n                        union: true\n                      }\n                    },\n                    sensitive: true,\n                    union: true\n                  }\n                },\n                event: true,\n                sensitive: true\n              },\n              validationException: {\n                type: 'structure',\n                members: {\n                  message: {}\n                },\n                error: {\n                  httpStatusCode: 400,\n                  senderFault: true\n                },\n                exception: true\n              }\n            },\n            eventstream: true\n          },\n          contentType: {\n            location: 'header',\n            locationName: 'x-amzn-bedrock-agent-content-type'\n          },\n          sessionId: {\n            location: 'header',\n            locationName: 'x-amz-bedrock-agent-session-id'\n          }\n        },\n        payload: 'completion'\n      }\n    },\n    Retrieve: {\n      http: {\n        requestUri: '/knowledgebases/{knowledgeBaseId}/retrieve',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId',\n          'retrievalQuery'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          nextToken: {},\n          retrievalConfiguration: {\n            shape: 'S42'\n          },\n          retrievalQuery: {\n            type: 'structure',\n            required: [\n              'text'\n            ],\n            members: {\n              text: {}\n            },\n            sensitive: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'retrievalResults'\n        ],\n        members: {\n          nextToken: {},\n          retrievalResults: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'content'\n              ],\n              members: {\n                content: {\n                  shape: 'S10'\n                },\n                location: {\n                  shape: 'S11'\n                },\n                metadata: {\n                  shape: 'S14'\n                },\n                score: {\n                  type: 'double'\n                }\n              }\n            },\n            sensitive: true\n          }\n        }\n      }\n    },\n    RetrieveAndGenerate: {\n      http: {\n        requestUri: '/retrieveAndGenerate',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'input'\n        ],\n        members: {\n          input: {\n            type: 'structure',\n            required: [\n              'text'\n            ],\n            members: {\n              text: {}\n            },\n            sensitive: true\n          },\n          retrieveAndGenerateConfiguration: {\n            type: 'structure',\n            required: [\n              'type'\n            ],\n            members: {\n              externalSourcesConfiguration: {\n                type: 'structure',\n                required: [\n                  'modelArn',\n                  'sources'\n                ],\n                members: {\n                  generationConfiguration: {\n                    type: 'structure',\n                    members: {\n                      additionalModelRequestFields: {\n                        shape: 'S4n'\n                      },\n                      guardrailConfiguration: {\n                        shape: 'S4q'\n                      },\n                      inferenceConfig: {\n                        shape: 'S4t'\n                      },\n                      promptTemplate: {\n                        shape: 'S4y'\n                      }\n                    }\n                  },\n                  modelArn: {},\n                  sources: {\n                    type: 'list',\n                    member: {\n                      type: 'structure',\n                      required: [\n                        'sourceType'\n                      ],\n                      members: {\n                        byteContent: {\n                          type: 'structure',\n                          required: [\n                            'contentType',\n                            'data',\n                            'identifier'\n                          ],\n                          members: {\n                            contentType: {},\n                            data: {\n                              type: 'blob',\n                              sensitive: true\n                            },\n                            identifier: {\n                              type: 'string',\n                              sensitive: true\n                            }\n                          }\n                        },\n                        s3Location: {\n                          type: 'structure',\n                          required: [\n                            'uri'\n                          ],\n                          members: {\n                            uri: {}\n                          }\n                        },\n                        sourceType: {}\n                      }\n                    }\n                  }\n                }\n              },\n              knowledgeBaseConfiguration: {\n                type: 'structure',\n                required: [\n                  'knowledgeBaseId',\n                  'modelArn'\n                ],\n                members: {\n                  generationConfiguration: {\n                    type: 'structure',\n                    members: {\n                      additionalModelRequestFields: {\n                        shape: 'S4n'\n                      },\n                      guardrailConfiguration: {\n                        shape: 'S4q'\n                      },\n                      inferenceConfig: {\n                        shape: 'S4t'\n                      },\n                      promptTemplate: {\n                        shape: 'S4y'\n                      }\n                    }\n                  },\n                  knowledgeBaseId: {},\n                  modelArn: {},\n                  retrievalConfiguration: {\n                    shape: 'S42'\n                  }\n                }\n              },\n              type: {}\n            }\n          },\n          sessionConfiguration: {\n            type: 'structure',\n            required: [\n              'kmsKeyArn'\n            ],\n            members: {\n              kmsKeyArn: {}\n            }\n          },\n          sessionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'output',\n          'sessionId'\n        ],\n        members: {\n          citations: {\n            shape: 'Sr'\n          },\n          guardrailAction: {},\n          output: {\n            type: 'structure',\n            required: [\n              'text'\n            ],\n            members: {\n              text: {}\n            },\n            sensitive: true\n          },\n          sessionId: {}\n        }\n      }\n    }\n  },\n  shapes: {\n    Sd: {\n      type: 'string',\n      sensitive: true\n    },\n    Sf: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        members: {\n          body: {}\n        }\n      }\n    },\n    Sr: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          generatedResponsePart: {\n            type: 'structure',\n            members: {\n              textResponsePart: {\n                type: 'structure',\n                members: {\n                  span: {\n                    type: 'structure',\n                    members: {\n                      end: {\n                        type: 'integer'\n                      },\n                      start: {\n                        type: 'integer'\n                      }\n                    }\n                  },\n                  text: {}\n                },\n                sensitive: true\n              }\n            }\n          },\n          retrievedReferences: {\n            shape: 'Sy'\n          }\n        }\n      }\n    },\n    Sy: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          content: {\n            shape: 'S10'\n          },\n          location: {\n            shape: 'S11'\n          },\n          metadata: {\n            shape: 'S14'\n          }\n        }\n      }\n    },\n    S10: {\n      type: 'structure',\n      required: [\n        'text'\n      ],\n      members: {\n        text: {}\n      },\n      sensitive: true\n    },\n    S11: {\n      type: 'structure',\n      required: [\n        'type'\n      ],\n      members: {\n        s3Location: {\n          type: 'structure',\n          members: {\n            uri: {}\n          }\n        },\n        type: {}\n      },\n      sensitive: true\n    },\n    S14: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        members: {},\n        document: true\n      },\n      sensitive: true\n    },\n    S1m: {\n      type: 'structure',\n      members: {\n        name: {},\n        type: {},\n        value: {}\n      }\n    },\n    S20: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        members: {\n          contentPolicy: {\n            type: 'structure',\n            members: {\n              filters: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    action: {},\n                    confidence: {},\n                    type: {}\n                  },\n                  sensitive: true\n                },\n                sensitive: true\n              }\n            },\n            sensitive: true\n          },\n          sensitiveInformationPolicy: {\n            type: 'structure',\n            members: {\n              piiEntities: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    action: {},\n                    match: {},\n                    type: {}\n                  },\n                  sensitive: true\n                },\n                sensitive: true\n              },\n              regexes: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    action: {},\n                    match: {},\n                    name: {},\n                    regex: {}\n                  },\n                  sensitive: true\n                },\n                sensitive: true\n              }\n            },\n            sensitive: true\n          },\n          topicPolicy: {\n            type: 'structure',\n            members: {\n              topics: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    action: {},\n                    name: {},\n                    type: {}\n                  },\n                  sensitive: true\n                },\n                sensitive: true\n              }\n            },\n            sensitive: true\n          },\n          wordPolicy: {\n            type: 'structure',\n            members: {\n              customWords: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    action: {},\n                    match: {}\n                  },\n                  sensitive: true\n                },\n                sensitive: true\n              },\n              managedWordLists: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  members: {\n                    action: {},\n                    match: {},\n                    type: {}\n                  },\n                  sensitive: true\n                },\n                sensitive: true\n              }\n            },\n            sensitive: true\n          }\n        },\n        sensitive: true\n      }\n    },\n    S2w: {\n      type: 'list',\n      member: {\n        shape: 'S1m'\n      }\n    },\n    S34: {\n      type: 'structure',\n      members: {\n        inferenceConfiguration: {\n          type: 'structure',\n          members: {\n            maximumLength: {\n              type: 'integer'\n            },\n            stopSequences: {\n              type: 'list',\n              member: {}\n            },\n            temperature: {\n              type: 'float'\n            },\n            topK: {\n              type: 'integer'\n            },\n            topP: {\n              type: 'float'\n            }\n          }\n        },\n        overrideLambda: {},\n        parserMode: {},\n        promptCreationMode: {},\n        text: {\n          type: 'string',\n          sensitive: true\n        },\n        traceId: {},\n        type: {}\n      },\n      sensitive: true\n    },\n    S3p: {\n      type: 'string',\n      sensitive: true\n    },\n    S42: {\n      type: 'structure',\n      required: [\n        'vectorSearchConfiguration'\n      ],\n      members: {\n        vectorSearchConfiguration: {\n          type: 'structure',\n          members: {\n            filter: {\n              shape: 'S44'\n            },\n            numberOfResults: {\n              type: 'integer'\n            },\n            overrideSearchType: {}\n          }\n        }\n      }\n    },\n    S44: {\n      type: 'structure',\n      members: {\n        andAll: {\n          shape: 'S45'\n        },\n        equals: {\n          shape: 'S46'\n        },\n        greaterThan: {\n          shape: 'S46'\n        },\n        greaterThanOrEquals: {\n          shape: 'S46'\n        },\n        'in': {\n          shape: 'S46'\n        },\n        lessThan: {\n          shape: 'S46'\n        },\n        lessThanOrEquals: {\n          shape: 'S46'\n        },\n        listContains: {\n          shape: 'S46'\n        },\n        notEquals: {\n          shape: 'S46'\n        },\n        notIn: {\n          shape: 'S46'\n        },\n        orAll: {\n          shape: 'S45'\n        },\n        startsWith: {\n          shape: 'S46'\n        },\n        stringContains: {\n          shape: 'S46'\n        }\n      },\n      sensitive: true,\n      union: true\n    },\n    S45: {\n      type: 'list',\n      member: {\n        shape: 'S44'\n      }\n    },\n    S46: {\n      type: 'structure',\n      required: [\n        'key',\n        'value'\n      ],\n      members: {\n        key: {},\n        value: {\n          type: 'structure',\n          members: {},\n          document: true\n        }\n      }\n    },\n    S4n: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'structure',\n        members: {},\n        document: true\n      }\n    },\n    S4q: {\n      type: 'structure',\n      required: [\n        'guardrailId',\n        'guardrailVersion'\n      ],\n      members: {\n        guardrailId: {},\n        guardrailVersion: {}\n      }\n    },\n    S4t: {\n      type: 'structure',\n      members: {\n        textInferenceConfig: {\n          type: 'structure',\n          members: {\n            maxTokens: {\n              type: 'integer'\n            },\n            stopSequences: {\n              type: 'list',\n              member: {}\n            },\n            temperature: {\n              type: 'float'\n            },\n            topP: {\n              type: 'float'\n            }\n          }\n        }\n      }\n    },\n    S4y: {\n      type: 'structure',\n      members: {\n        textPromptTemplate: {\n          type: 'string',\n          sensitive: true\n        }\n      }\n    }\n  }\n}"]}