{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/assets/src/module/jishi/JishiModule.ts"],"names":["JishiModule","ModuleBase","JishiViewMediator","constructor","moduleId","mediator","s","addEventListeners","ins","init","self","onOpen","openData","weeked","open","close"],"mappings":";;;8GAKqBA,W;;;;;;;;;;;;;;;;;;;;AAJdC,MAAAA,U;;AAEEC,MAAAA,iB,iBAAAA,iB;;;;;;;;;yBAEYF,W,GAAN,MAAMA,WAAN;AAAA;AAAA,oCAAqC;AAIlDG,QAAAA,WAAW,CAACC,QAAD,EAAkB;AAC3B,gBAAMA,QAAN;AAD2B,eAHrBC,QAGqB;AAEnB,cAAIC,CAAC,GAAG,IAAR;AACAA,UAAAA,CAAC,CAACC,iBAAF;AACAP,UAAAA,WAAW,CAACQ,GAAZ,GAAkBF,CAAlB;AACT;;AACSC,QAAAA,iBAAiB,GAAS;AAClC,cAAID,CAAC,GAAG,IAAR;AACH;;AACQG,QAAAA,IAAI,GAAS;AAClB,cAAIC,IAAI,GAAG,IAAX;AACAA,UAAAA,IAAI,CAACL,QAAL,GAAgB;AAAA;AAAA,sDAAsBK,IAAtB,CAAhB;AACH;AAEE;;;AACOC,QAAAA,MAAM,CAACC,QAAD,EAAgC;AAAA,cAA/BA,QAA+B;AAA/BA,YAAAA,QAA+B,GAAf,IAAe;AAAA;;AAC5C,cAAIF,IAAI,GAAG,IAAX;;AACA,cAAIA,IAAI,CAACL,QAAL,CAAcQ,MAAlB,EAA0B;AACtB;AACH,WAFD,MAEO;AACHH,YAAAA,IAAI,CAACL,QAAL,CAAcS,IAAd,CAAmBF,QAAnB;AACA,mBAAO,IAAP;AACH;AACJ;AACA;;;AACOG,QAAAA,KAAK,GAAS;AAClB,cAAIL,IAAI,GAAG,IAAX;;AACA,cAAIA,IAAI,CAACL,QAAT,EAAmB;AACfK,YAAAA,IAAI,CAACL,QAAL,CAAcU,KAAd;AACAL,YAAAA,IAAI,CAACL,QAAL,CAAcQ,MAAd,GAAuB,KAAvB;AACH;AACF;;AAnCiD,O;;AAA/Bb,MAAAA,W,CAEZQ,G","sourcesContent":["import { director } from \"cc\";\nimport ModuleBase from \"../../core/base/ModuleBase\";\nimport { EventType } from \"../../EventType\";\nimport { JishiViewMediator } from \"./JishiViewMediator\";\n\nexport default class JishiModule extends ModuleBase {\n  private mediator:JishiViewMediator;\n  static ins: JishiModule;\n\n  constructor(moduleId:string) {\n    super(moduleId);\n            let s = this;\n            s.addEventListeners();\n            JishiModule.ins = s;\n  }\n  protected addEventListeners(): void {\n    let s = this;\n}\n  public init(): void {\n    let self = this;\n    self.mediator = new JishiViewMediator(self);\n}\n\n   /**打开创角面板 */\n   public onOpen(openData: any = null): boolean {\n    let self = this;\n    if (self.mediator.weeked) {\n        return;\n    } else {\n        self.mediator.open(openData);\n        return true;\n    }\n}\n /**关闭创角面板 */\n public close(): void {\n    let self = this;\n    if (self.mediator) {\n        self.mediator.close();\n        self.mediator.weeked = false;\n    }\n  }\n  \n}"]}