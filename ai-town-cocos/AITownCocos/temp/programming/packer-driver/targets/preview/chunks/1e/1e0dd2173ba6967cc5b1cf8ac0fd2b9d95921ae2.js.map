{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/evidently-2021-02-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","BatchEvaluateFeature","http","requestUri","responseCode","input","type","required","members","project","location","locationName","requests","member","entityId","evaluationContext","jsonvalue","feature","output","results","details","reason","value","shape","variation","endpoint","hostPrefix","CreateExperiment","description","metricGoals","name","onlineAbConfig","randomizationSalt","samplingRate","segment","tags","treatments","experiment","idempotent","CreateFeature","defaultVariation","entityOverrides","evaluationStrategy","variations","CreateLaunch","groups","metricMonitors","scheduledSplitsConfig","launch","CreateProject","appConfigResource","dataDelivery","cloudWatchLogs","s3Destination","CreateSegment","pattern","DeleteExperiment","method","DeleteFeature","DeleteLaunch","DeleteProject","DeleteSegment","EvaluateFeature","GetExperiment","GetExperimentResults","baseStat","endTime","metricNames","period","reportNames","resultStats","startTime","treatmentNames","reports","content","metricName","reportName","treatmentName","resultsData","resultStat","values","timestamps","GetFeature","GetLaunch","GetProject","GetSegment","ListExperiments","maxResults","nextToken","status","experiments","ListFeatures","features","arn","createdTime","evaluationRules","lastUpdatedTime","ListLaunches","launches","ListProjects","projects","activeExperimentCount","activeLaunchCount","experimentCount","featureCount","launchCount","ListSegmentReferences","referencedBy","lastUpdatedOn","ListSegments","segments","ListTagsForResource","resourceArn","PutProjectEvents","events","data","timestamp","eventResults","errorCode","errorMessage","eventId","failedEventCount","StartExperiment","analysisCompleteTime","startedTime","StartLaunch","StopExperiment","desiredState","endedTime","StopLaunch","TagResource","TestSegmentPattern","payload","match","UntagResource","tagKeys","UpdateExperiment","removeSegment","UpdateFeature","addOrUpdateVariations","removeVariations","UpdateLaunch","UpdateProject","UpdateProjectDataDelivery","shapes","Sd","boolValue","doubleValue","longValue","stringValue","union","Sk","desiredChange","metricDefinition","Sn","entityIdKey","eventPattern","unitLabel","valueKey","St","controlTreatmentName","treatmentWeights","Sv","key","Sz","S12","S16","execution","onlineAbDefinition","schedule","statusReason","featureVariations","S1c","S1k","S1n","S1p","S1s","valueType","S1u","S23","S26","S29","steps","groupWeights","segmentOverrides","S2c","S2d","evaluationOrder","weights","S2h","scheduledSplitsDefinition","S2u","applicationId","environmentId","S2x","logGroup","S2z","bucket","prefix","S34","configurationProfileId","S3e"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2021-02-01',\n    endpointPrefix: 'evidently',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon CloudWatch Evidently',\n    serviceId: 'Evidently',\n    signatureVersion: 'v4',\n    signingName: 'evidently',\n    uid: 'evidently-2021-02-01'\n  },\n  operations: {\n    BatchEvaluateFeature: {\n      http: {\n        requestUri: '/projects/{project}/evaluations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'project',\n          'requests'\n        ],\n        members: {\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          requests: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'entityId',\n                'feature'\n              ],\n              members: {\n                entityId: {},\n                evaluationContext: {\n                  jsonvalue: true\n                },\n                feature: {}\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'entityId',\n                'feature'\n              ],\n              members: {\n                details: {\n                  jsonvalue: true\n                },\n                entityId: {},\n                feature: {},\n                project: {},\n                reason: {},\n                value: {\n                  shape: 'Sd'\n                },\n                variation: {}\n              }\n            }\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'dataplane.'\n      }\n    },\n    CreateExperiment: {\n      http: {\n        requestUri: '/projects/{project}/experiments',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'metricGoals',\n          'name',\n          'project',\n          'treatments'\n        ],\n        members: {\n          description: {},\n          metricGoals: {\n            shape: 'Sk'\n          },\n          name: {},\n          onlineAbConfig: {\n            shape: 'St'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          randomizationSalt: {},\n          samplingRate: {\n            type: 'long'\n          },\n          segment: {},\n          tags: {\n            shape: 'Sz'\n          },\n          treatments: {\n            shape: 'S12'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'experiment'\n        ],\n        members: {\n          experiment: {\n            shape: 'S16'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateFeature: {\n      http: {\n        requestUri: '/projects/{project}/features',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'project',\n          'variations'\n        ],\n        members: {\n          defaultVariation: {},\n          description: {},\n          entityOverrides: {\n            shape: 'S1n'\n          },\n          evaluationStrategy: {},\n          name: {},\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          tags: {\n            shape: 'Sz'\n          },\n          variations: {\n            shape: 'S1p'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          feature: {\n            shape: 'S1s'\n          }\n        }\n      }\n    },\n    CreateLaunch: {\n      http: {\n        requestUri: '/projects/{project}/launches',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'groups',\n          'name',\n          'project'\n        ],\n        members: {\n          description: {},\n          groups: {\n            shape: 'S23'\n          },\n          metricMonitors: {\n            shape: 'S26'\n          },\n          name: {},\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          randomizationSalt: {},\n          scheduledSplitsConfig: {\n            shape: 'S29'\n          },\n          tags: {\n            shape: 'Sz'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'launch'\n        ],\n        members: {\n          launch: {\n            shape: 'S2h'\n          }\n        }\n      }\n    },\n    CreateProject: {\n      http: {\n        requestUri: '/projects',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name'\n        ],\n        members: {\n          appConfigResource: {\n            shape: 'S2u'\n          },\n          dataDelivery: {\n            type: 'structure',\n            members: {\n              cloudWatchLogs: {\n                shape: 'S2x'\n              },\n              s3Destination: {\n                shape: 'S2z'\n              }\n            }\n          },\n          description: {},\n          name: {},\n          tags: {\n            shape: 'Sz'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          project: {\n            shape: 'S34'\n          }\n        }\n      }\n    },\n    CreateSegment: {\n      http: {\n        requestUri: '/segments',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'pattern'\n        ],\n        members: {\n          description: {},\n          name: {},\n          pattern: {\n            jsonvalue: true\n          },\n          tags: {\n            shape: 'Sz'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'segment'\n        ],\n        members: {\n          segment: {\n            shape: 'S3e'\n          }\n        }\n      }\n    },\n    DeleteExperiment: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/projects/{project}/experiments/{experiment}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'experiment',\n          'project'\n        ],\n        members: {\n          experiment: {\n            location: 'uri',\n            locationName: 'experiment'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteFeature: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/projects/{project}/features/{feature}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'feature',\n          'project'\n        ],\n        members: {\n          feature: {\n            location: 'uri',\n            locationName: 'feature'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteLaunch: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/projects/{project}/launches/{launch}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'launch',\n          'project'\n        ],\n        members: {\n          launch: {\n            location: 'uri',\n            locationName: 'launch'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteProject: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/projects/{project}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteSegment: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/segments/{segment}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'segment'\n        ],\n        members: {\n          segment: {\n            location: 'uri',\n            locationName: 'segment'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    EvaluateFeature: {\n      http: {\n        requestUri: '/projects/{project}/evaluations/{feature}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'entityId',\n          'feature',\n          'project'\n        ],\n        members: {\n          entityId: {},\n          evaluationContext: {\n            jsonvalue: true\n          },\n          feature: {\n            location: 'uri',\n            locationName: 'feature'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          details: {\n            jsonvalue: true\n          },\n          reason: {},\n          value: {\n            shape: 'Sd'\n          },\n          variation: {}\n        }\n      },\n      endpoint: {\n        hostPrefix: 'dataplane.'\n      }\n    },\n    GetExperiment: {\n      http: {\n        method: 'GET',\n        requestUri: '/projects/{project}/experiments/{experiment}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'experiment',\n          'project'\n        ],\n        members: {\n          experiment: {\n            location: 'uri',\n            locationName: 'experiment'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          experiment: {\n            shape: 'S16'\n          }\n        }\n      }\n    },\n    GetExperimentResults: {\n      http: {\n        requestUri: '/projects/{project}/experiments/{experiment}/results',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'experiment',\n          'metricNames',\n          'project',\n          'treatmentNames'\n        ],\n        members: {\n          baseStat: {},\n          endTime: {\n            type: 'timestamp'\n          },\n          experiment: {\n            location: 'uri',\n            locationName: 'experiment'\n          },\n          metricNames: {\n            type: 'list',\n            member: {}\n          },\n          period: {\n            type: 'long'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          reportNames: {\n            type: 'list',\n            member: {}\n          },\n          resultStats: {\n            type: 'list',\n            member: {}\n          },\n          startTime: {\n            type: 'timestamp'\n          },\n          treatmentNames: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          details: {},\n          reports: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                content: {\n                  jsonvalue: true\n                },\n                metricName: {},\n                reportName: {},\n                treatmentName: {}\n              }\n            }\n          },\n          resultsData: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                metricName: {},\n                resultStat: {},\n                treatmentName: {},\n                values: {\n                  type: 'list',\n                  member: {\n                    type: 'double'\n                  }\n                }\n              }\n            }\n          },\n          timestamps: {\n            type: 'list',\n            member: {\n              type: 'timestamp'\n            }\n          }\n        }\n      }\n    },\n    GetFeature: {\n      http: {\n        method: 'GET',\n        requestUri: '/projects/{project}/features/{feature}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'feature',\n          'project'\n        ],\n        members: {\n          feature: {\n            location: 'uri',\n            locationName: 'feature'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'feature'\n        ],\n        members: {\n          feature: {\n            shape: 'S1s'\n          }\n        }\n      }\n    },\n    GetLaunch: {\n      http: {\n        method: 'GET',\n        requestUri: '/projects/{project}/launches/{launch}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'launch',\n          'project'\n        ],\n        members: {\n          launch: {\n            location: 'uri',\n            locationName: 'launch'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          launch: {\n            shape: 'S2h'\n          }\n        }\n      }\n    },\n    GetProject: {\n      http: {\n        method: 'GET',\n        requestUri: '/projects/{project}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          project: {\n            shape: 'S34'\n          }\n        }\n      }\n    },\n    GetSegment: {\n      http: {\n        method: 'GET',\n        requestUri: '/segments/{segment}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'segment'\n        ],\n        members: {\n          segment: {\n            location: 'uri',\n            locationName: 'segment'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'segment'\n        ],\n        members: {\n          segment: {\n            shape: 'S3e'\n          }\n        }\n      }\n    },\n    ListExperiments: {\n      http: {\n        method: 'GET',\n        requestUri: '/projects/{project}/experiments',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          status: {\n            location: 'querystring',\n            locationName: 'status'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          experiments: {\n            type: 'list',\n            member: {\n              shape: 'S16'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListFeatures: {\n      http: {\n        method: 'GET',\n        requestUri: '/projects/{project}/features',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          features: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'createdTime',\n                'evaluationStrategy',\n                'lastUpdatedTime',\n                'name',\n                'status'\n              ],\n              members: {\n                arn: {},\n                createdTime: {\n                  type: 'timestamp'\n                },\n                defaultVariation: {},\n                evaluationRules: {\n                  shape: 'S1u'\n                },\n                evaluationStrategy: {},\n                lastUpdatedTime: {\n                  type: 'timestamp'\n                },\n                name: {},\n                project: {},\n                status: {},\n                tags: {\n                  shape: 'Sz'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListLaunches: {\n      http: {\n        method: 'GET',\n        requestUri: '/projects/{project}/launches',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          status: {\n            location: 'querystring',\n            locationName: 'status'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          launches: {\n            type: 'list',\n            member: {\n              shape: 'S2h'\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListProjects: {\n      http: {\n        method: 'GET',\n        requestUri: '/projects',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          projects: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'createdTime',\n                'lastUpdatedTime',\n                'name',\n                'status'\n              ],\n              members: {\n                activeExperimentCount: {\n                  type: 'long'\n                },\n                activeLaunchCount: {\n                  type: 'long'\n                },\n                arn: {},\n                createdTime: {\n                  type: 'timestamp'\n                },\n                description: {},\n                experimentCount: {\n                  type: 'long'\n                },\n                featureCount: {\n                  type: 'long'\n                },\n                lastUpdatedTime: {\n                  type: 'timestamp'\n                },\n                launchCount: {\n                  type: 'long'\n                },\n                name: {},\n                status: {},\n                tags: {\n                  shape: 'Sz'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListSegmentReferences: {\n      http: {\n        method: 'GET',\n        requestUri: '/segments/{segment}/references',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'segment',\n          'type'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          segment: {\n            location: 'uri',\n            locationName: 'segment'\n          },\n          type: {\n            location: 'querystring',\n            locationName: 'type'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          referencedBy: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'name',\n                'type'\n              ],\n              members: {\n                arn: {},\n                endTime: {},\n                lastUpdatedOn: {},\n                name: {},\n                startTime: {},\n                status: {},\n                type: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    ListSegments: {\n      http: {\n        method: 'GET',\n        requestUri: '/segments',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          nextToken: {},\n          segments: {\n            type: 'list',\n            member: {\n              shape: 'S3e'\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sz'\n          }\n        }\n      }\n    },\n    PutProjectEvents: {\n      http: {\n        requestUri: '/events/projects/{project}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'events',\n          'project'\n        ],\n        members: {\n          events: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'data',\n                'timestamp',\n                'type'\n              ],\n              members: {\n                data: {\n                  jsonvalue: true\n                },\n                timestamp: {\n                  type: 'timestamp'\n                },\n                type: {}\n              }\n            }\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          eventResults: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                errorCode: {},\n                errorMessage: {},\n                eventId: {}\n              }\n            }\n          },\n          failedEventCount: {\n            type: 'integer'\n          }\n        }\n      },\n      endpoint: {\n        hostPrefix: 'dataplane.'\n      }\n    },\n    StartExperiment: {\n      http: {\n        requestUri: '/projects/{project}/experiments/{experiment}/start',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'analysisCompleteTime',\n          'experiment',\n          'project'\n        ],\n        members: {\n          analysisCompleteTime: {\n            type: 'timestamp'\n          },\n          experiment: {\n            location: 'uri',\n            locationName: 'experiment'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          startedTime: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    StartLaunch: {\n      http: {\n        requestUri: '/projects/{project}/launches/{launch}/start',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'launch',\n          'project'\n        ],\n        members: {\n          launch: {\n            location: 'uri',\n            locationName: 'launch'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'launch'\n        ],\n        members: {\n          launch: {\n            shape: 'S2h'\n          }\n        }\n      }\n    },\n    StopExperiment: {\n      http: {\n        requestUri: '/projects/{project}/experiments/{experiment}/cancel',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'experiment',\n          'project'\n        ],\n        members: {\n          desiredState: {},\n          experiment: {\n            location: 'uri',\n            locationName: 'experiment'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          reason: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          endedTime: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    StopLaunch: {\n      http: {\n        requestUri: '/projects/{project}/launches/{launch}/cancel',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'launch',\n          'project'\n        ],\n        members: {\n          desiredState: {},\n          launch: {\n            location: 'uri',\n            locationName: 'launch'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          reason: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          endedTime: {\n            type: 'timestamp'\n          }\n        }\n      }\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sz'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    TestSegmentPattern: {\n      http: {\n        requestUri: '/test-segment-pattern',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'pattern',\n          'payload'\n        ],\n        members: {\n          pattern: {\n            jsonvalue: true\n          },\n          payload: {\n            jsonvalue: true\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'match'\n        ],\n        members: {\n          match: {\n            type: 'boolean'\n          }\n        }\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateExperiment: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/projects/{project}/experiments/{experiment}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'experiment',\n          'project'\n        ],\n        members: {\n          description: {},\n          experiment: {\n            location: 'uri',\n            locationName: 'experiment'\n          },\n          metricGoals: {\n            shape: 'Sk'\n          },\n          onlineAbConfig: {\n            shape: 'St'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          randomizationSalt: {},\n          removeSegment: {\n            type: 'boolean'\n          },\n          samplingRate: {\n            type: 'long'\n          },\n          segment: {},\n          treatments: {\n            shape: 'S12'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'experiment'\n        ],\n        members: {\n          experiment: {\n            shape: 'S16'\n          }\n        }\n      }\n    },\n    UpdateFeature: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/projects/{project}/features/{feature}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'feature',\n          'project'\n        ],\n        members: {\n          addOrUpdateVariations: {\n            shape: 'S1p'\n          },\n          defaultVariation: {},\n          description: {},\n          entityOverrides: {\n            shape: 'S1n'\n          },\n          evaluationStrategy: {},\n          feature: {\n            location: 'uri',\n            locationName: 'feature'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          removeVariations: {\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'feature'\n        ],\n        members: {\n          feature: {\n            shape: 'S1s'\n          }\n        }\n      }\n    },\n    UpdateLaunch: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/projects/{project}/launches/{launch}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'launch',\n          'project'\n        ],\n        members: {\n          description: {},\n          groups: {\n            shape: 'S23'\n          },\n          launch: {\n            location: 'uri',\n            locationName: 'launch'\n          },\n          metricMonitors: {\n            shape: 'S26'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          randomizationSalt: {},\n          scheduledSplitsConfig: {\n            shape: 'S29'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'launch'\n        ],\n        members: {\n          launch: {\n            shape: 'S2h'\n          }\n        }\n      }\n    },\n    UpdateProject: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/projects/{project}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          appConfigResource: {\n            shape: 'S2u'\n          },\n          description: {},\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          project: {\n            shape: 'S34'\n          }\n        }\n      }\n    },\n    UpdateProjectDataDelivery: {\n      http: {\n        method: 'PATCH',\n        requestUri: '/projects/{project}/data-delivery',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          cloudWatchLogs: {\n            shape: 'S2x'\n          },\n          project: {\n            location: 'uri',\n            locationName: 'project'\n          },\n          s3Destination: {\n            shape: 'S2z'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'project'\n        ],\n        members: {\n          project: {\n            shape: 'S34'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    Sd: {\n      type: 'structure',\n      members: {\n        boolValue: {\n          type: 'boolean'\n        },\n        doubleValue: {\n          type: 'double'\n        },\n        longValue: {\n          type: 'long'\n        },\n        stringValue: {}\n      },\n      union: true\n    },\n    Sk: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'metricDefinition'\n        ],\n        members: {\n          desiredChange: {},\n          metricDefinition: {\n            shape: 'Sn'\n          }\n        }\n      }\n    },\n    Sn: {\n      type: 'structure',\n      required: [\n        'entityIdKey',\n        'name',\n        'valueKey'\n      ],\n      members: {\n        entityIdKey: {},\n        eventPattern: {\n          jsonvalue: true\n        },\n        name: {},\n        unitLabel: {},\n        valueKey: {}\n      }\n    },\n    St: {\n      type: 'structure',\n      members: {\n        controlTreatmentName: {},\n        treatmentWeights: {\n          shape: 'Sv'\n        }\n      }\n    },\n    Sv: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'long'\n      }\n    },\n    Sz: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S12: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'feature',\n          'name',\n          'variation'\n        ],\n        members: {\n          description: {},\n          feature: {},\n          name: {},\n          variation: {}\n        }\n      }\n    },\n    S16: {\n      type: 'structure',\n      required: [\n        'arn',\n        'createdTime',\n        'lastUpdatedTime',\n        'name',\n        'status',\n        'type'\n      ],\n      members: {\n        arn: {},\n        createdTime: {\n          type: 'timestamp'\n        },\n        description: {},\n        execution: {\n          type: 'structure',\n          members: {\n            endedTime: {\n              type: 'timestamp'\n            },\n            startedTime: {\n              type: 'timestamp'\n            }\n          }\n        },\n        lastUpdatedTime: {\n          type: 'timestamp'\n        },\n        metricGoals: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'metricDefinition'\n            ],\n            members: {\n              desiredChange: {},\n              metricDefinition: {\n                shape: 'S1c'\n              }\n            }\n          }\n        },\n        name: {},\n        onlineAbDefinition: {\n          type: 'structure',\n          members: {\n            controlTreatmentName: {},\n            treatmentWeights: {\n              shape: 'Sv'\n            }\n          }\n        },\n        project: {},\n        randomizationSalt: {},\n        samplingRate: {\n          type: 'long'\n        },\n        schedule: {\n          type: 'structure',\n          members: {\n            analysisCompleteTime: {\n              type: 'timestamp'\n            }\n          }\n        },\n        segment: {},\n        status: {},\n        statusReason: {},\n        tags: {\n          shape: 'Sz'\n        },\n        treatments: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'name'\n            ],\n            members: {\n              description: {},\n              featureVariations: {\n                shape: 'S1k'\n              },\n              name: {}\n            }\n          }\n        },\n        type: {}\n      }\n    },\n    S1c: {\n      type: 'structure',\n      members: {\n        entityIdKey: {},\n        eventPattern: {\n          jsonvalue: true\n        },\n        name: {},\n        unitLabel: {},\n        valueKey: {}\n      }\n    },\n    S1k: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1n: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    S1p: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'name',\n          'value'\n        ],\n        members: {\n          name: {},\n          value: {\n            shape: 'Sd'\n          }\n        }\n      }\n    },\n    S1s: {\n      type: 'structure',\n      required: [\n        'arn',\n        'createdTime',\n        'evaluationStrategy',\n        'lastUpdatedTime',\n        'name',\n        'status',\n        'valueType',\n        'variations'\n      ],\n      members: {\n        arn: {},\n        createdTime: {\n          type: 'timestamp'\n        },\n        defaultVariation: {},\n        description: {},\n        entityOverrides: {\n          shape: 'S1n'\n        },\n        evaluationRules: {\n          shape: 'S1u'\n        },\n        evaluationStrategy: {},\n        lastUpdatedTime: {\n          type: 'timestamp'\n        },\n        name: {},\n        project: {},\n        status: {},\n        tags: {\n          shape: 'Sz'\n        },\n        valueType: {},\n        variations: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              name: {},\n              value: {\n                shape: 'Sd'\n              }\n            }\n          }\n        }\n      }\n    },\n    S1u: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'type'\n        ],\n        members: {\n          name: {},\n          type: {}\n        }\n      }\n    },\n    S23: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'feature',\n          'name',\n          'variation'\n        ],\n        members: {\n          description: {},\n          feature: {},\n          name: {},\n          variation: {}\n        }\n      }\n    },\n    S26: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'metricDefinition'\n        ],\n        members: {\n          metricDefinition: {\n            shape: 'Sn'\n          }\n        }\n      }\n    },\n    S29: {\n      type: 'structure',\n      required: [\n        'steps'\n      ],\n      members: {\n        steps: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'groupWeights',\n              'startTime'\n            ],\n            members: {\n              groupWeights: {\n                shape: 'S2c'\n              },\n              segmentOverrides: {\n                shape: 'S2d'\n              },\n              startTime: {\n                type: 'timestamp'\n              }\n            }\n          }\n        }\n      }\n    },\n    S2c: {\n      type: 'map',\n      key: {},\n      value: {\n        type: 'long'\n      }\n    },\n    S2d: {\n      type: 'list',\n      member: {\n        type: 'structure',\n        required: [\n          'evaluationOrder',\n          'segment',\n          'weights'\n        ],\n        members: {\n          evaluationOrder: {\n            type: 'long'\n          },\n          segment: {},\n          weights: {\n            shape: 'S2c'\n          }\n        }\n      }\n    },\n    S2h: {\n      type: 'structure',\n      required: [\n        'arn',\n        'createdTime',\n        'lastUpdatedTime',\n        'name',\n        'status',\n        'type'\n      ],\n      members: {\n        arn: {},\n        createdTime: {\n          type: 'timestamp'\n        },\n        description: {},\n        execution: {\n          type: 'structure',\n          members: {\n            endedTime: {\n              type: 'timestamp'\n            },\n            startedTime: {\n              type: 'timestamp'\n            }\n          }\n        },\n        groups: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'featureVariations',\n              'name'\n            ],\n            members: {\n              description: {},\n              featureVariations: {\n                shape: 'S1k'\n              },\n              name: {}\n            }\n          }\n        },\n        lastUpdatedTime: {\n          type: 'timestamp'\n        },\n        metricMonitors: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'metricDefinition'\n            ],\n            members: {\n              metricDefinition: {\n                shape: 'S1c'\n              }\n            }\n          }\n        },\n        name: {},\n        project: {},\n        randomizationSalt: {},\n        scheduledSplitsDefinition: {\n          type: 'structure',\n          members: {\n            steps: {\n              type: 'list',\n              member: {\n                type: 'structure',\n                required: [\n                  'startTime'\n                ],\n                members: {\n                  groupWeights: {\n                    shape: 'S2c'\n                  },\n                  segmentOverrides: {\n                    shape: 'S2d'\n                  },\n                  startTime: {\n                    type: 'timestamp'\n                  }\n                }\n              }\n            }\n          }\n        },\n        status: {},\n        statusReason: {},\n        tags: {\n          shape: 'Sz'\n        },\n        type: {}\n      }\n    },\n    S2u: {\n      type: 'structure',\n      members: {\n        applicationId: {},\n        environmentId: {}\n      }\n    },\n    S2x: {\n      type: 'structure',\n      members: {\n        logGroup: {}\n      }\n    },\n    S2z: {\n      type: 'structure',\n      members: {\n        bucket: {},\n        prefix: {}\n      }\n    },\n    S34: {\n      type: 'structure',\n      required: [\n        'arn',\n        'createdTime',\n        'lastUpdatedTime',\n        'name',\n        'status'\n      ],\n      members: {\n        activeExperimentCount: {\n          type: 'long'\n        },\n        activeLaunchCount: {\n          type: 'long'\n        },\n        appConfigResource: {\n          type: 'structure',\n          required: [\n            'applicationId',\n            'configurationProfileId',\n            'environmentId'\n          ],\n          members: {\n            applicationId: {},\n            configurationProfileId: {},\n            environmentId: {}\n          }\n        },\n        arn: {},\n        createdTime: {\n          type: 'timestamp'\n        },\n        dataDelivery: {\n          type: 'structure',\n          members: {\n            cloudWatchLogs: {\n              type: 'structure',\n              members: {\n                logGroup: {}\n              }\n            },\n            s3Destination: {\n              type: 'structure',\n              members: {\n                bucket: {},\n                prefix: {}\n              }\n            }\n          }\n        },\n        description: {},\n        experimentCount: {\n          type: 'long'\n        },\n        featureCount: {\n          type: 'long'\n        },\n        lastUpdatedTime: {\n          type: 'timestamp'\n        },\n        launchCount: {\n          type: 'long'\n        },\n        name: {},\n        status: {},\n        tags: {\n          shape: 'Sz'\n        }\n      }\n    },\n    S3e: {\n      type: 'structure',\n      required: [\n        'arn',\n        'createdTime',\n        'lastUpdatedTime',\n        'name',\n        'pattern'\n      ],\n      members: {\n        arn: {},\n        createdTime: {\n          type: 'timestamp'\n        },\n        description: {},\n        experimentCount: {\n          type: 'long'\n        },\n        lastUpdatedTime: {\n          type: 'timestamp'\n        },\n        launchCount: {\n          type: 'long'\n        },\n        name: {},\n        pattern: {\n          jsonvalue: true\n        },\n        tags: {\n          shape: 'Sz'\n        }\n      }\n    }\n  }\n}"]}