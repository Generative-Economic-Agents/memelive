{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/amp-2020-08-01.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateAlertManagerDefinition","http","requestUri","responseCode","input","type","required","members","clientToken","idempotencyToken","data","workspaceId","location","locationName","output","status","shape","idempotent","CreateLoggingConfiguration","logGroupArn","CreateRuleGroupsNamespace","name","tags","arn","CreateScraper","alias","destination","scrapeConfiguration","source","scraperId","CreateWorkspace","kmsKeyArn","DeleteAlertManagerDefinition","method","DeleteLoggingConfiguration","DeleteRuleGroupsNamespace","DeleteScraper","DeleteWorkspace","DescribeAlertManagerDefinition","alertManagerDefinition","createdAt","modifiedAt","DescribeLoggingConfiguration","loggingConfiguration","workspace","DescribeRuleGroupsNamespace","ruleGroupsNamespace","DescribeScraper","scraper","lastModifiedAt","roleArn","statusReason","DescribeWorkspace","prometheusEndpoint","GetDefaultScraperConfiguration","configuration","ListRuleGroupsNamespaces","maxResults","nextToken","ruleGroupsNamespaces","member","ListScrapers","filters","key","value","scrapers","ListTagsForResource","resourceArn","ListWorkspaces","workspaces","PutAlertManagerDefinition","PutRuleGroupsNamespace","TagResource","UntagResource","tagKeys","UpdateLoggingConfiguration","UpdateWorkspaceAlias","shapes","S6","statusCode","Sc","Sh","Sm","Sq","ampConfiguration","workspaceArn","union","St","configurationBlob","Sv","eksConfiguration","clusterArn","securityGroupIds","subnetIds","S15","S1b"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-08-01',\n    endpointPrefix: 'aps',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon Prometheus Service',\n    serviceId: 'amp',\n    signatureVersion: 'v4',\n    signingName: 'aps',\n    uid: 'amp-2020-08-01'\n  },\n  operations: {\n    CreateAlertManagerDefinition: {\n      http: {\n        requestUri: '/workspaces/{workspaceId}/alertmanager/definition',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'data',\n          'workspaceId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          data: {\n            type: 'blob'\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status'\n        ],\n        members: {\n          status: {\n            shape: 'S6'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateLoggingConfiguration: {\n      http: {\n        requestUri: '/workspaces/{workspaceId}/logging',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'logGroupArn',\n          'workspaceId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          logGroupArn: {},\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status'\n        ],\n        members: {\n          status: {\n            shape: 'Sc'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateRuleGroupsNamespace: {\n      http: {\n        requestUri: '/workspaces/{workspaceId}/rulegroupsnamespaces',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'data',\n          'name',\n          'workspaceId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          data: {\n            type: 'blob'\n          },\n          name: {},\n          tags: {\n            shape: 'Sh'\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'name',\n          'status'\n        ],\n        members: {\n          arn: {},\n          name: {},\n          status: {\n            shape: 'Sm'\n          },\n          tags: {\n            shape: 'Sh'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateScraper: {\n      http: {\n        requestUri: '/scrapers',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'destination',\n          'scrapeConfiguration',\n          'source'\n        ],\n        members: {\n          alias: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          destination: {\n            shape: 'Sq'\n          },\n          scrapeConfiguration: {\n            shape: 'St'\n          },\n          source: {\n            shape: 'Sv'\n          },\n          tags: {\n            shape: 'Sh'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'scraperId',\n          'status'\n        ],\n        members: {\n          arn: {},\n          scraperId: {},\n          status: {\n            shape: 'S15'\n          },\n          tags: {\n            shape: 'Sh'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateWorkspace: {\n      http: {\n        requestUri: '/workspaces',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        members: {\n          alias: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          kmsKeyArn: {},\n          tags: {\n            shape: 'Sh'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'status',\n          'workspaceId'\n        ],\n        members: {\n          arn: {},\n          kmsKeyArn: {},\n          status: {\n            shape: 'S1b'\n          },\n          tags: {\n            shape: 'Sh'\n          },\n          workspaceId: {}\n        }\n      },\n      idempotent: true\n    },\n    DeleteAlertManagerDefinition: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/workspaces/{workspaceId}/alertmanager/definition',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workspaceId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteLoggingConfiguration: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/workspaces/{workspaceId}/logging',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workspaceId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteRuleGroupsNamespace: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/workspaces/{workspaceId}/rulegroupsnamespaces/{name}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'workspaceId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteScraper: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/scrapers/{scraperId}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'scraperId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          scraperId: {\n            location: 'uri',\n            locationName: 'scraperId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'scraperId',\n          'status'\n        ],\n        members: {\n          scraperId: {},\n          status: {\n            shape: 'S15'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteWorkspace: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/workspaces/{workspaceId}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workspaceId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true,\n            location: 'querystring',\n            locationName: 'clientToken'\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DescribeAlertManagerDefinition: {\n      http: {\n        method: 'GET',\n        requestUri: '/workspaces/{workspaceId}/alertmanager/definition',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workspaceId'\n        ],\n        members: {\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'alertManagerDefinition'\n        ],\n        members: {\n          alertManagerDefinition: {\n            type: 'structure',\n            required: [\n              'createdAt',\n              'data',\n              'modifiedAt',\n              'status'\n            ],\n            members: {\n              createdAt: {\n                type: 'timestamp'\n              },\n              data: {\n                type: 'blob'\n              },\n              modifiedAt: {\n                type: 'timestamp'\n              },\n              status: {\n                shape: 'S6'\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeLoggingConfiguration: {\n      http: {\n        method: 'GET',\n        requestUri: '/workspaces/{workspaceId}/logging',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workspaceId'\n        ],\n        members: {\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'loggingConfiguration'\n        ],\n        members: {\n          loggingConfiguration: {\n            type: 'structure',\n            required: [\n              'createdAt',\n              'logGroupArn',\n              'modifiedAt',\n              'status',\n              'workspace'\n            ],\n            members: {\n              createdAt: {\n                type: 'timestamp'\n              },\n              logGroupArn: {},\n              modifiedAt: {\n                type: 'timestamp'\n              },\n              status: {\n                shape: 'Sc'\n              },\n              workspace: {}\n            }\n          }\n        }\n      }\n    },\n    DescribeRuleGroupsNamespace: {\n      http: {\n        method: 'GET',\n        requestUri: '/workspaces/{workspaceId}/rulegroupsnamespaces/{name}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'workspaceId'\n        ],\n        members: {\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ruleGroupsNamespace'\n        ],\n        members: {\n          ruleGroupsNamespace: {\n            type: 'structure',\n            required: [\n              'arn',\n              'createdAt',\n              'data',\n              'modifiedAt',\n              'name',\n              'status'\n            ],\n            members: {\n              arn: {},\n              createdAt: {\n                type: 'timestamp'\n              },\n              data: {\n                type: 'blob'\n              },\n              modifiedAt: {\n                type: 'timestamp'\n              },\n              name: {},\n              status: {\n                shape: 'Sm'\n              },\n              tags: {\n                shape: 'Sh'\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeScraper: {\n      http: {\n        method: 'GET',\n        requestUri: '/scrapers/{scraperId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'scraperId'\n        ],\n        members: {\n          scraperId: {\n            location: 'uri',\n            locationName: 'scraperId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'scraper'\n        ],\n        members: {\n          scraper: {\n            type: 'structure',\n            required: [\n              'arn',\n              'createdAt',\n              'destination',\n              'lastModifiedAt',\n              'roleArn',\n              'scrapeConfiguration',\n              'scraperId',\n              'source',\n              'status'\n            ],\n            members: {\n              alias: {},\n              arn: {},\n              createdAt: {\n                type: 'timestamp'\n              },\n              destination: {\n                shape: 'Sq'\n              },\n              lastModifiedAt: {\n                type: 'timestamp'\n              },\n              roleArn: {},\n              scrapeConfiguration: {\n                shape: 'St'\n              },\n              scraperId: {},\n              source: {\n                shape: 'Sv'\n              },\n              status: {\n                shape: 'S15'\n              },\n              statusReason: {},\n              tags: {\n                shape: 'Sh'\n              }\n            }\n          }\n        }\n      }\n    },\n    DescribeWorkspace: {\n      http: {\n        method: 'GET',\n        requestUri: '/workspaces/{workspaceId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workspaceId'\n        ],\n        members: {\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'workspace'\n        ],\n        members: {\n          workspace: {\n            type: 'structure',\n            required: [\n              'arn',\n              'createdAt',\n              'status',\n              'workspaceId'\n            ],\n            members: {\n              alias: {},\n              arn: {},\n              createdAt: {\n                type: 'timestamp'\n              },\n              kmsKeyArn: {},\n              prometheusEndpoint: {},\n              status: {\n                shape: 'S1b'\n              },\n              tags: {\n                shape: 'Sh'\n              },\n              workspaceId: {}\n            }\n          }\n        }\n      }\n    },\n    GetDefaultScraperConfiguration: {\n      http: {\n        method: 'GET',\n        requestUri: '/scraperconfiguration',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {}\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'configuration'\n        ],\n        members: {\n          configuration: {\n            type: 'blob'\n          }\n        }\n      }\n    },\n    ListRuleGroupsNamespaces: {\n      http: {\n        method: 'GET',\n        requestUri: '/workspaces/{workspaceId}/rulegroupsnamespaces',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workspaceId'\n        ],\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          name: {\n            location: 'querystring',\n            locationName: 'name'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'ruleGroupsNamespaces'\n        ],\n        members: {\n          nextToken: {},\n          ruleGroupsNamespaces: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'createdAt',\n                'modifiedAt',\n                'name',\n                'status'\n              ],\n              members: {\n                arn: {},\n                createdAt: {\n                  type: 'timestamp'\n                },\n                modifiedAt: {\n                  type: 'timestamp'\n                },\n                name: {},\n                status: {\n                  shape: 'Sm'\n                },\n                tags: {\n                  shape: 'Sh'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListScrapers: {\n      http: {\n        method: 'GET',\n        requestUri: '/scrapers',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          filters: {\n            location: 'querystring',\n            type: 'map',\n            key: {},\n            value: {\n              type: 'list',\n              member: {}\n            }\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'scrapers'\n        ],\n        members: {\n          nextToken: {},\n          scrapers: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'createdAt',\n                'destination',\n                'lastModifiedAt',\n                'roleArn',\n                'scraperId',\n                'source',\n                'status'\n              ],\n              members: {\n                alias: {},\n                arn: {},\n                createdAt: {\n                  type: 'timestamp'\n                },\n                destination: {\n                  shape: 'Sq'\n                },\n                lastModifiedAt: {\n                  type: 'timestamp'\n                },\n                roleArn: {},\n                scraperId: {},\n                source: {\n                  shape: 'Sv'\n                },\n                status: {\n                  shape: 'S15'\n                },\n                statusReason: {},\n                tags: {\n                  shape: 'Sh'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'Sh'\n          }\n        }\n      }\n    },\n    ListWorkspaces: {\n      http: {\n        method: 'GET',\n        requestUri: '/workspaces',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          alias: {\n            location: 'querystring',\n            locationName: 'alias'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'workspaces'\n        ],\n        members: {\n          nextToken: {},\n          workspaces: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'arn',\n                'createdAt',\n                'status',\n                'workspaceId'\n              ],\n              members: {\n                alias: {},\n                arn: {},\n                createdAt: {\n                  type: 'timestamp'\n                },\n                kmsKeyArn: {},\n                status: {\n                  shape: 'S1b'\n                },\n                tags: {\n                  shape: 'Sh'\n                },\n                workspaceId: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    PutAlertManagerDefinition: {\n      http: {\n        method: 'PUT',\n        requestUri: '/workspaces/{workspaceId}/alertmanager/definition',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'data',\n          'workspaceId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          data: {\n            type: 'blob'\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status'\n        ],\n        members: {\n          status: {\n            shape: 'S6'\n          }\n        }\n      },\n      idempotent: true\n    },\n    PutRuleGroupsNamespace: {\n      http: {\n        method: 'PUT',\n        requestUri: '/workspaces/{workspaceId}/rulegroupsnamespaces/{name}',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'data',\n          'name',\n          'workspaceId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          data: {\n            type: 'blob'\n          },\n          name: {\n            location: 'uri',\n            locationName: 'name'\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'arn',\n          'name',\n          'status'\n        ],\n        members: {\n          arn: {},\n          name: {},\n          status: {\n            shape: 'Sm'\n          },\n          tags: {\n            shape: 'Sh'\n          }\n        }\n      },\n      idempotent: true\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'Sh'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateLoggingConfiguration: {\n      http: {\n        method: 'PUT',\n        requestUri: '/workspaces/{workspaceId}/logging',\n        responseCode: 202\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'logGroupArn',\n          'workspaceId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          logGroupArn: {},\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'status'\n        ],\n        members: {\n          status: {\n            shape: 'Sc'\n          }\n        }\n      },\n      idempotent: true\n    },\n    UpdateWorkspaceAlias: {\n      http: {\n        requestUri: '/workspaces/{workspaceId}/alias',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'workspaceId'\n        ],\n        members: {\n          alias: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          workspaceId: {\n            location: 'uri',\n            locationName: 'workspaceId'\n          }\n        }\n      },\n      idempotent: true\n    }\n  },\n  shapes: {\n    S6: {\n      type: 'structure',\n      required: [\n        'statusCode'\n      ],\n      members: {\n        statusCode: {},\n        statusReason: {}\n      }\n    },\n    Sc: {\n      type: 'structure',\n      required: [\n        'statusCode'\n      ],\n      members: {\n        statusCode: {},\n        statusReason: {}\n      }\n    },\n    Sh: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sm: {\n      type: 'structure',\n      required: [\n        'statusCode'\n      ],\n      members: {\n        statusCode: {},\n        statusReason: {}\n      }\n    },\n    Sq: {\n      type: 'structure',\n      members: {\n        ampConfiguration: {\n          type: 'structure',\n          required: [\n            'workspaceArn'\n          ],\n          members: {\n            workspaceArn: {}\n          }\n        }\n      },\n      union: true\n    },\n    St: {\n      type: 'structure',\n      members: {\n        configurationBlob: {\n          type: 'blob'\n        }\n      },\n      union: true\n    },\n    Sv: {\n      type: 'structure',\n      members: {\n        eksConfiguration: {\n          type: 'structure',\n          required: [\n            'clusterArn',\n            'subnetIds'\n          ],\n          members: {\n            clusterArn: {},\n            securityGroupIds: {\n              type: 'list',\n              member: {}\n            },\n            subnetIds: {\n              type: 'list',\n              member: {}\n            }\n          }\n        }\n      },\n      union: true\n    },\n    S15: {\n      type: 'structure',\n      required: [\n        'statusCode'\n      ],\n      members: {\n        statusCode: {}\n      }\n    },\n    S1b: {\n      type: 'structure',\n      required: [\n        'statusCode'\n      ],\n      members: {\n        statusCode: {}\n      }\n    }\n  }\n}"]}