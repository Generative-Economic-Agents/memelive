{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/dynamodb/types.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","util","typeOf","data","undefined","isBinary","constructor","wrapperName","typeName","types","isNode","Stream","stream","Buffer","isBuffer","i","length","isType","_cjsExports","_typeOf","_isBinary"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;;8BAIHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,IAAI,GAAGJ,OAAO,CAAC,SAAD,CAAP,CAAmBI,IAA9B;;AAEA,iBAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,cAAIA,IAAI,KAAK,IAAT,IAAiB,OAAOA,IAAP,KAAgB,QAArC,EAA+C;AAC7C,mBAAO,MAAP;AACD,WAFD,MAEO,IAAIA,IAAI,KAAKC,SAAT,IAAsBC,QAAQ,CAACF,IAAD,CAAlC,EAA0C;AAC/C,mBAAO,QAAP;AACD,WAFM,MAEA,IAAIA,IAAI,KAAKC,SAAT,IAAsBD,IAAI,CAACG,WAA/B,EAA4C;AACjD,mBAAOH,IAAI,CAACI,WAAL,IAAoBN,IAAI,CAACO,QAAL,CAAcL,IAAI,CAACG,WAAnB,CAA3B;AACD,WAFM,MAEA,IAAIH,IAAI,KAAKC,SAAT,IAAsB,OAAOD,IAAP,KAAgB,QAA1C,EAAoD;AACzD;AACA;AACA,mBAAO,QAAP;AACD,WAJM,MAIA;AACL,mBAAO,WAAP;AACD;AACF;;AAED,iBAASE,QAAT,CAAkBF,IAAlB,EAAwB;AACtB,cAAIM,KAAK,GAAG,CACV,QADU,EACA,MADA,EACQ,MADR,EACgB,aADhB,EAC+B,UAD/B,EAEV,WAFU,EAEG,YAFH,EAEiB,mBAFjB,EAGV,YAHU,EAGI,aAHJ,EAGmB,YAHnB,EAGiC,aAHjC,EAIV,cAJU,EAIM,cAJN,CAAZ;;AAMA,cAAIR,IAAI,CAACS,MAAL,EAAJ,EAAmB;AACjB,gBAAIC,MAAM,GAAGV,IAAI,CAACW,MAAL,CAAYD,MAAzB;;AACA,gBAAIV,IAAI,CAACY,MAAL,CAAYC,QAAZ,CAAqBX,IAArB,KAA8BA,IAAI,YAAYQ,MAAlD,EAA0D;AACxD,qBAAO,IAAP;AACD;AACF;;AAED,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,gBAAIZ,IAAI,KAAKC,SAAT,IAAsBD,IAAI,CAACG,WAA/B,EAA4C;AAC1C,kBAAIL,IAAI,CAACgB,MAAL,CAAYd,IAAZ,EAAkBM,KAAK,CAACM,CAAD,CAAvB,CAAJ,EAAiC,OAAO,IAAP;AACjC,kBAAId,IAAI,CAACO,QAAL,CAAcL,IAAI,CAACG,WAAnB,MAAoCG,KAAK,CAACM,CAAD,CAA7C,EAAkD,OAAO,IAAP;AACnD;AACF;;AAED,iBAAO,KAAP;AACD;AAED;AACD;AACA;;;AACCjB,QAAAA,MAAM,CAACF,OAAP,GAAiB;AACfM,UAAAA,MAAM,EAAEA,MADO;AAEfG,UAAAA,QAAQ,EAAEA;AAFK,SAAjB,CAjD0F,CAuD3F;;AAEA,2BAAAa,WAAW,GAAGpB,MAAM,CAACF,OAArB;;AACAuB,QAAAA,OAAO,GAAGrB,MAAM,CAACF,OAAP,CAAeM,MAAzB;AACAkB,QAAAA,SAAS,GAAGtB,MAAM,CAACF,OAAP,CAAeS,QAA3B;AAEC,OA7DD,EA6DG,OAAO;AACR,mBAAWb;AADH,OAAP,CA7DH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../core';\nlet _cjsExports;\nlet _typeOf;\nlet _isBinary;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var util = require('../core').util;\n\n function typeOf(data) {\n   if (data === null && typeof data === 'object') {\n     return 'null';\n   } else if (data !== undefined && isBinary(data)) {\n     return 'Binary';\n   } else if (data !== undefined && data.constructor) {\n     return data.wrapperName || util.typeName(data.constructor);\n   } else if (data !== undefined && typeof data === 'object') {\n     // this object is the result of Object.create(null), hence the absence of a\n     // defined constructor\n     return 'Object';\n   } else {\n     return 'undefined';\n   }\n }\n\n function isBinary(data) {\n   var types = [\n     'Buffer', 'File', 'Blob', 'ArrayBuffer', 'DataView',\n     'Int8Array', 'Uint8Array', 'Uint8ClampedArray',\n     'Int16Array', 'Uint16Array', 'Int32Array', 'Uint32Array',\n     'Float32Array', 'Float64Array'\n   ];\n   if (util.isNode()) {\n     var Stream = util.stream.Stream;\n     if (util.Buffer.isBuffer(data) || data instanceof Stream) {\n       return true;\n     }\n   }\n\n   for (var i = 0; i < types.length; i++) {\n     if (data !== undefined && data.constructor) {\n       if (util.isType(data, types[i])) return true;\n       if (util.typeName(data.constructor) === types[i]) return true;\n     }\n   }\n\n   return false;\n }\n\n /**\n  * @api private\n  */\n module.exports = {\n   typeOf: typeOf,\n   isBinary: isBinary\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_typeOf = module.exports.typeOf;\n_isBinary = module.exports.isBinary;\n\n}, () => ({\n  '../core': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}