{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/sshpk/lib/certificate.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","_req5","_req6","_req7","_req8","_req9","_req10","_req11","_req12","_req13","url","define","exports","require","module","__filename","__dirname","Certificate","assert","Buffer","algs","crypto","Fingerprint","Signature","errs","util","utils","Key","PrivateKey","Identity","formats","CertificateParseError","InvalidAlgorithmError","opts","object","arrayOfObject","subjects","assertCompatible","subjectKey","issuer","issuerKey","undefined","signatures","buffer","serial","date","validFrom","validUntil","optionalArrayOfString","purposes","_hashCache","prototype","toBuffer","format","options","string","optionalObject","write","toString","fingerprint","algo","type","hash","algorithm","toLowerCase","hashAlgs","createHash","update","digest","isExpired","when","Date","getTime","isSignedBy","issuerCert","equals","length","indexOf","isSignedByKey","getExtension","keyOrOid","ext","getExtensions","filter","maybeExt","oid","name","exts","x509","extras","forEach","push","openssh","matches","fmt","Object","keys","valid","verify","signWith","key","fmts","didOne","i","ret","sign","Error","createSelfSigned","subjectOrSubjects","Array","isArray","subject","optionalNumber","lifetime","setTime","optionalBuffer","from","hostSubjects","userSubjects","cert","toPublic","create","isPrivateKey","ca","parse","data","filename","optionalString","k","read","e","isCertificate","obj","ver","isCompatible","_sshpkApiVersion","_oldVersionDetect","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'assert-plus';\nimport { __cjsMetaURL as _req0} from 'safer-buffer';\nimport { __cjsMetaURL as _req1} from './algs';\nimport { __cjsMetaURL as _req2} from 'crypto';\nimport { __cjsMetaURL as _req3} from './fingerprint';\nimport { __cjsMetaURL as _req4} from './signature';\nimport { __cjsMetaURL as _req5} from './errors';\nimport { __cjsMetaURL as _req6} from 'util';\nimport { __cjsMetaURL as _req7} from './utils';\nimport { __cjsMetaURL as _req8} from './key';\nimport { __cjsMetaURL as _req9} from './private-key';\nimport { __cjsMetaURL as _req10} from './identity';\nimport { __cjsMetaURL as _req11} from './formats/openssh-cert';\nimport { __cjsMetaURL as _req12} from './formats/x509';\nimport { __cjsMetaURL as _req13} from './formats/x509-pem';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // Copyright 2016 Joyent, Inc.\n\n module.exports = Certificate;\n\n var assert = require('assert-plus');\n var Buffer = require('safer-buffer').Buffer;\n var algs = require('./algs');\n var crypto = require('crypto');\n var Fingerprint = require('./fingerprint');\n var Signature = require('./signature');\n var errs = require('./errors');\n var util = require('util');\n var utils = require('./utils');\n var Key = require('./key');\n var PrivateKey = require('./private-key');\n var Identity = require('./identity');\n\n var formats = {};\n formats['openssh'] = require('./formats/openssh-cert');\n formats['x509'] = require('./formats/x509');\n formats['pem'] = require('./formats/x509-pem');\n\n var CertificateParseError = errs.CertificateParseError;\n var InvalidAlgorithmError = errs.InvalidAlgorithmError;\n\n function Certificate(opts) {\n \tassert.object(opts, 'options');\n \tassert.arrayOfObject(opts.subjects, 'options.subjects');\n \tutils.assertCompatible(opts.subjects[0], Identity, [1, 0],\n \t    'options.subjects');\n \tutils.assertCompatible(opts.subjectKey, Key, [1, 0],\n \t    'options.subjectKey');\n \tutils.assertCompatible(opts.issuer, Identity, [1, 0], 'options.issuer');\n \tif (opts.issuerKey !== undefined) {\n \t\tutils.assertCompatible(opts.issuerKey, Key, [1, 0],\n \t\t    'options.issuerKey');\n \t}\n \tassert.object(opts.signatures, 'options.signatures');\n \tassert.buffer(opts.serial, 'options.serial');\n \tassert.date(opts.validFrom, 'options.validFrom');\n \tassert.date(opts.validUntil, 'optons.validUntil');\n\n \tassert.optionalArrayOfString(opts.purposes, 'options.purposes');\n\n \tthis._hashCache = {};\n\n \tthis.subjects = opts.subjects;\n \tthis.issuer = opts.issuer;\n \tthis.subjectKey = opts.subjectKey;\n \tthis.issuerKey = opts.issuerKey;\n \tthis.signatures = opts.signatures;\n \tthis.serial = opts.serial;\n \tthis.validFrom = opts.validFrom;\n \tthis.validUntil = opts.validUntil;\n \tthis.purposes = opts.purposes;\n }\n\n Certificate.formats = formats;\n\n Certificate.prototype.toBuffer = function (format, options) {\n \tif (format === undefined)\n \t\tformat = 'x509';\n \tassert.string(format, 'format');\n \tassert.object(formats[format], 'formats[format]');\n \tassert.optionalObject(options, 'options');\n\n \treturn (formats[format].write(this, options));\n };\n\n Certificate.prototype.toString = function (format, options) {\n \tif (format === undefined)\n \t\tformat = 'pem';\n \treturn (this.toBuffer(format, options).toString());\n };\n\n Certificate.prototype.fingerprint = function (algo) {\n \tif (algo === undefined)\n \t\talgo = 'sha256';\n \tassert.string(algo, 'algorithm');\n \tvar opts = {\n \t\ttype: 'certificate',\n \t\thash: this.hash(algo),\n \t\talgorithm: algo\n \t};\n \treturn (new Fingerprint(opts));\n };\n\n Certificate.prototype.hash = function (algo) {\n \tassert.string(algo, 'algorithm');\n \talgo = algo.toLowerCase();\n \tif (algs.hashAlgs[algo] === undefined)\n \t\tthrow (new InvalidAlgorithmError(algo));\n\n \tif (this._hashCache[algo])\n \t\treturn (this._hashCache[algo]);\n\n \tvar hash = crypto.createHash(algo).\n \t    update(this.toBuffer('x509')).digest();\n \tthis._hashCache[algo] = hash;\n \treturn (hash);\n };\n\n Certificate.prototype.isExpired = function (when) {\n \tif (when === undefined)\n \t\twhen = new Date();\n \treturn (!((when.getTime() >= this.validFrom.getTime()) &&\n \t\t(when.getTime() < this.validUntil.getTime())));\n };\n\n Certificate.prototype.isSignedBy = function (issuerCert) {\n \tutils.assertCompatible(issuerCert, Certificate, [1, 0], 'issuer');\n\n \tif (!this.issuer.equals(issuerCert.subjects[0]))\n \t\treturn (false);\n \tif (this.issuer.purposes && this.issuer.purposes.length > 0 &&\n \t    this.issuer.purposes.indexOf('ca') === -1) {\n \t\treturn (false);\n \t}\n\n \treturn (this.isSignedByKey(issuerCert.subjectKey));\n };\n\n Certificate.prototype.getExtension = function (keyOrOid) {\n \tassert.string(keyOrOid, 'keyOrOid');\n \tvar ext = this.getExtensions().filter(function (maybeExt) {\n \t\tif (maybeExt.format === 'x509')\n \t\t\treturn (maybeExt.oid === keyOrOid);\n \t\tif (maybeExt.format === 'openssh')\n \t\t\treturn (maybeExt.name === keyOrOid);\n \t\treturn (false);\n \t})[0];\n \treturn (ext);\n };\n\n Certificate.prototype.getExtensions = function () {\n \tvar exts = [];\n \tvar x509 = this.signatures.x509;\n \tif (x509 && x509.extras && x509.extras.exts) {\n \t\tx509.extras.exts.forEach(function (ext) {\n \t\t\text.format = 'x509';\n \t\t\texts.push(ext);\n \t\t});\n \t}\n \tvar openssh = this.signatures.openssh;\n \tif (openssh && openssh.exts) {\n \t\topenssh.exts.forEach(function (ext) {\n \t\t\text.format = 'openssh';\n \t\t\texts.push(ext);\n \t\t});\n \t}\n \treturn (exts);\n };\n\n Certificate.prototype.isSignedByKey = function (issuerKey) {\n \tutils.assertCompatible(issuerKey, Key, [1, 2], 'issuerKey');\n\n \tif (this.issuerKey !== undefined) {\n \t\treturn (this.issuerKey.\n \t\t    fingerprint('sha512').matches(issuerKey));\n \t}\n\n \tvar fmt = Object.keys(this.signatures)[0];\n \tvar valid = formats[fmt].verify(this, issuerKey);\n \tif (valid)\n \t\tthis.issuerKey = issuerKey;\n \treturn (valid);\n };\n\n Certificate.prototype.signWith = function (key) {\n \tutils.assertCompatible(key, PrivateKey, [1, 2], 'key');\n \tvar fmts = Object.keys(formats);\n \tvar didOne = false;\n \tfor (var i = 0; i < fmts.length; ++i) {\n \t\tif (fmts[i] !== 'pem') {\n \t\t\tvar ret = formats[fmts[i]].sign(this, key);\n \t\t\tif (ret === true)\n \t\t\t\tdidOne = true;\n \t\t}\n \t}\n \tif (!didOne) {\n \t\tthrow (new Error('Failed to sign the certificate for any ' +\n \t\t    'available certificate formats'));\n \t}\n };\n\n Certificate.createSelfSigned = function (subjectOrSubjects, key, options) {\n \tvar subjects;\n \tif (Array.isArray(subjectOrSubjects))\n \t\tsubjects = subjectOrSubjects;\n \telse\n \t\tsubjects = [subjectOrSubjects];\n\n \tassert.arrayOfObject(subjects);\n \tsubjects.forEach(function (subject) {\n \t\tutils.assertCompatible(subject, Identity, [1, 0], 'subject');\n \t});\n\n \tutils.assertCompatible(key, PrivateKey, [1, 2], 'private key');\n\n \tassert.optionalObject(options, 'options');\n \tif (options === undefined)\n \t\toptions = {};\n \tassert.optionalObject(options.validFrom, 'options.validFrom');\n \tassert.optionalObject(options.validUntil, 'options.validUntil');\n \tvar validFrom = options.validFrom;\n \tvar validUntil = options.validUntil;\n \tif (validFrom === undefined)\n \t\tvalidFrom = new Date();\n \tif (validUntil === undefined) {\n \t\tassert.optionalNumber(options.lifetime, 'options.lifetime');\n \t\tvar lifetime = options.lifetime;\n \t\tif (lifetime === undefined)\n \t\t\tlifetime = 10*365*24*3600;\n \t\tvalidUntil = new Date();\n \t\tvalidUntil.setTime(validUntil.getTime() + lifetime*1000);\n \t}\n \tassert.optionalBuffer(options.serial, 'options.serial');\n \tvar serial = options.serial;\n \tif (serial === undefined)\n \t\tserial = Buffer.from('0000000000000001', 'hex');\n\n \tvar purposes = options.purposes;\n \tif (purposes === undefined)\n \t\tpurposes = [];\n\n \tif (purposes.indexOf('signature') === -1)\n \t\tpurposes.push('signature');\n\n \t/* Self-signed certs are always CAs. */\n \tif (purposes.indexOf('ca') === -1)\n \t\tpurposes.push('ca');\n \tif (purposes.indexOf('crl') === -1)\n \t\tpurposes.push('crl');\n\n \t/*\n \t * If we weren't explicitly given any other purposes, do the sensible\n \t * thing and add some basic ones depending on the subject type.\n \t */\n \tif (purposes.length <= 3) {\n \t\tvar hostSubjects = subjects.filter(function (subject) {\n \t\t\treturn (subject.type === 'host');\n \t\t});\n \t\tvar userSubjects = subjects.filter(function (subject) {\n \t\t\treturn (subject.type === 'user');\n \t\t});\n \t\tif (hostSubjects.length > 0) {\n \t\t\tif (purposes.indexOf('serverAuth') === -1)\n \t\t\t\tpurposes.push('serverAuth');\n \t\t}\n \t\tif (userSubjects.length > 0) {\n \t\t\tif (purposes.indexOf('clientAuth') === -1)\n \t\t\t\tpurposes.push('clientAuth');\n \t\t}\n \t\tif (userSubjects.length > 0 || hostSubjects.length > 0) {\n \t\t\tif (purposes.indexOf('keyAgreement') === -1)\n \t\t\t\tpurposes.push('keyAgreement');\n \t\t\tif (key.type === 'rsa' &&\n \t\t\t    purposes.indexOf('encryption') === -1)\n \t\t\t\tpurposes.push('encryption');\n \t\t}\n \t}\n\n \tvar cert = new Certificate({\n \t\tsubjects: subjects,\n \t\tissuer: subjects[0],\n \t\tsubjectKey: key.toPublic(),\n \t\tissuerKey: key.toPublic(),\n \t\tsignatures: {},\n \t\tserial: serial,\n \t\tvalidFrom: validFrom,\n \t\tvalidUntil: validUntil,\n \t\tpurposes: purposes\n \t});\n \tcert.signWith(key);\n\n \treturn (cert);\n };\n\n Certificate.create =\n     function (subjectOrSubjects, key, issuer, issuerKey, options) {\n \tvar subjects;\n \tif (Array.isArray(subjectOrSubjects))\n \t\tsubjects = subjectOrSubjects;\n \telse\n \t\tsubjects = [subjectOrSubjects];\n\n \tassert.arrayOfObject(subjects);\n \tsubjects.forEach(function (subject) {\n \t\tutils.assertCompatible(subject, Identity, [1, 0], 'subject');\n \t});\n\n \tutils.assertCompatible(key, Key, [1, 0], 'key');\n \tif (PrivateKey.isPrivateKey(key))\n \t\tkey = key.toPublic();\n \tutils.assertCompatible(issuer, Identity, [1, 0], 'issuer');\n \tutils.assertCompatible(issuerKey, PrivateKey, [1, 2], 'issuer key');\n\n \tassert.optionalObject(options, 'options');\n \tif (options === undefined)\n \t\toptions = {};\n \tassert.optionalObject(options.validFrom, 'options.validFrom');\n \tassert.optionalObject(options.validUntil, 'options.validUntil');\n \tvar validFrom = options.validFrom;\n \tvar validUntil = options.validUntil;\n \tif (validFrom === undefined)\n \t\tvalidFrom = new Date();\n \tif (validUntil === undefined) {\n \t\tassert.optionalNumber(options.lifetime, 'options.lifetime');\n \t\tvar lifetime = options.lifetime;\n \t\tif (lifetime === undefined)\n \t\t\tlifetime = 10*365*24*3600;\n \t\tvalidUntil = new Date();\n \t\tvalidUntil.setTime(validUntil.getTime() + lifetime*1000);\n \t}\n \tassert.optionalBuffer(options.serial, 'options.serial');\n \tvar serial = options.serial;\n \tif (serial === undefined)\n \t\tserial = Buffer.from('0000000000000001', 'hex');\n\n \tvar purposes = options.purposes;\n \tif (purposes === undefined)\n \t\tpurposes = [];\n\n \tif (purposes.indexOf('signature') === -1)\n \t\tpurposes.push('signature');\n\n \tif (options.ca === true) {\n \t\tif (purposes.indexOf('ca') === -1)\n \t\t\tpurposes.push('ca');\n \t\tif (purposes.indexOf('crl') === -1)\n \t\t\tpurposes.push('crl');\n \t}\n\n \tvar hostSubjects = subjects.filter(function (subject) {\n \t\treturn (subject.type === 'host');\n \t});\n \tvar userSubjects = subjects.filter(function (subject) {\n \t\treturn (subject.type === 'user');\n \t});\n \tif (hostSubjects.length > 0) {\n \t\tif (purposes.indexOf('serverAuth') === -1)\n \t\t\tpurposes.push('serverAuth');\n \t}\n \tif (userSubjects.length > 0) {\n \t\tif (purposes.indexOf('clientAuth') === -1)\n \t\t\tpurposes.push('clientAuth');\n \t}\n \tif (userSubjects.length > 0 || hostSubjects.length > 0) {\n \t\tif (purposes.indexOf('keyAgreement') === -1)\n \t\t\tpurposes.push('keyAgreement');\n \t\tif (key.type === 'rsa' &&\n \t\t    purposes.indexOf('encryption') === -1)\n \t\t\tpurposes.push('encryption');\n \t}\n\n \tvar cert = new Certificate({\n \t\tsubjects: subjects,\n \t\tissuer: issuer,\n \t\tsubjectKey: key,\n \t\tissuerKey: issuerKey.toPublic(),\n \t\tsignatures: {},\n \t\tserial: serial,\n \t\tvalidFrom: validFrom,\n \t\tvalidUntil: validUntil,\n \t\tpurposes: purposes\n \t});\n \tcert.signWith(issuerKey);\n\n \treturn (cert);\n };\n\n Certificate.parse = function (data, format, options) {\n \tif (typeof (data) !== 'string')\n \t\tassert.buffer(data, 'data');\n \tif (format === undefined)\n \t\tformat = 'auto';\n \tassert.string(format, 'format');\n \tif (typeof (options) === 'string')\n \t\toptions = { filename: options };\n \tassert.optionalObject(options, 'options');\n \tif (options === undefined)\n \t\toptions = {};\n \tassert.optionalString(options.filename, 'options.filename');\n \tif (options.filename === undefined)\n \t\toptions.filename = '(unnamed)';\n\n \tassert.object(formats[format], 'formats[format]');\n\n \ttry {\n \t\tvar k = formats[format].read(data, options);\n \t\treturn (k);\n \t} catch (e) {\n \t\tthrow (new CertificateParseError(options.filename, format, e));\n \t}\n };\n\n Certificate.isCertificate = function (obj, ver) {\n \treturn (utils.isCompatible(obj, Certificate, ver));\n };\n\n /*\n  * API versions for Certificate:\n  * [1,0] -- initial ver\n  * [1,1] -- openssh format now unpacks extensions\n  */\n Certificate.prototype._sshpkApiVersion = [1, 1];\n\n Certificate._oldVersionDetect = function (obj) {\n \treturn ([1, 0]);\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'assert-plus': _req,\n  'safer-buffer': _req0,\n  './algs': _req1,\n  'crypto': _req2,\n  './fingerprint': _req3,\n  './signature': _req4,\n  './errors': _req5,\n  'util': _req6,\n  './utils': _req7,\n  './key': _req8,\n  './private-key': _req9,\n  './identity': _req10,\n  './formats/openssh-cert': _req11,\n  './formats/x509': _req12,\n  './formats/x509-pem': _req13,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}