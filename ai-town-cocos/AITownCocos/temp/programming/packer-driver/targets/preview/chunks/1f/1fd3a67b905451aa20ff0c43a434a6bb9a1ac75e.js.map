{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/lib/sequential_executor.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","AWS","SequentialExecutor","util","inherit","constructor","_events","listeners","eventName","slice","on","listener","toHead","unshift","push","onAsync","_isAsync","removeListener","length","position","i","splice","removeAllListeners","emit","eventArgs","doneCallback","count","callListeners","args","prevError","self","error","callNextListener","err","Error","_haltHandlersOnError","call","shift","apply","concat","addListeners","each","event","callbacks","arrayEach","callback","addNamedListener","name","addListener","addNamedAsyncListener","addNamedListeners","arguments","prototype","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './core';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var AWS = require('./core');\n\n /**\n  * @api private\n  * @!method on(eventName, callback)\n  *   Registers an event listener callback for the event given by `eventName`.\n  *   Parameters passed to the callback function depend on the individual event\n  *   being triggered. See the event documentation for those parameters.\n  *\n  *   @param eventName [String] the event name to register the listener for\n  *   @param callback [Function] the listener callback function\n  *   @param toHead [Boolean] attach the listener callback to the head of callback array if set to true.\n  *     Default to be false.\n  *   @return [AWS.SequentialExecutor] the same object for chaining\n  */\n AWS.SequentialExecutor = AWS.util.inherit({\n\n   constructor: function SequentialExecutor() {\n     this._events = {};\n   },\n\n   /**\n    * @api private\n    */\n   listeners: function listeners(eventName) {\n     return this._events[eventName] ? this._events[eventName].slice(0) : [];\n   },\n\n   on: function on(eventName, listener, toHead) {\n     if (this._events[eventName]) {\n       toHead ?\n         this._events[eventName].unshift(listener) :\n         this._events[eventName].push(listener);\n     } else {\n       this._events[eventName] = [listener];\n     }\n     return this;\n   },\n\n   onAsync: function onAsync(eventName, listener, toHead) {\n     listener._isAsync = true;\n     return this.on(eventName, listener, toHead);\n   },\n\n   removeListener: function removeListener(eventName, listener) {\n     var listeners = this._events[eventName];\n     if (listeners) {\n       var length = listeners.length;\n       var position = -1;\n       for (var i = 0; i < length; ++i) {\n         if (listeners[i] === listener) {\n           position = i;\n         }\n       }\n       if (position > -1) {\n         listeners.splice(position, 1);\n       }\n     }\n     return this;\n   },\n\n   removeAllListeners: function removeAllListeners(eventName) {\n     if (eventName) {\n       delete this._events[eventName];\n     } else {\n       this._events = {};\n     }\n     return this;\n   },\n\n   /**\n    * @api private\n    */\n   emit: function emit(eventName, eventArgs, doneCallback) {\n     if (!doneCallback) doneCallback = function() { };\n     var listeners = this.listeners(eventName);\n     var count = listeners.length;\n     this.callListeners(listeners, eventArgs, doneCallback);\n     return count > 0;\n   },\n\n   /**\n    * @api private\n    */\n   callListeners: function callListeners(listeners, args, doneCallback, prevError) {\n     var self = this;\n     var error = prevError || null;\n\n     function callNextListener(err) {\n       if (err) {\n         error = AWS.util.error(error || new Error(), err);\n         if (self._haltHandlersOnError) {\n           return doneCallback.call(self, error);\n         }\n       }\n       self.callListeners(listeners, args, doneCallback, error);\n     }\n\n     while (listeners.length > 0) {\n       var listener = listeners.shift();\n       if (listener._isAsync) { // asynchronous listener\n         listener.apply(self, args.concat([callNextListener]));\n         return; // stop here, callNextListener will continue\n       } else { // synchronous listener\n         try {\n           listener.apply(self, args);\n         } catch (err) {\n           error = AWS.util.error(error || new Error(), err);\n         }\n         if (error && self._haltHandlersOnError) {\n           doneCallback.call(self, error);\n           return;\n         }\n       }\n     }\n     doneCallback.call(self, error);\n   },\n\n   /**\n    * Adds or copies a set of listeners from another list of\n    * listeners or SequentialExecutor object.\n    *\n    * @param listeners [map<String,Array<Function>>, AWS.SequentialExecutor]\n    *   a list of events and callbacks, or an event emitter object\n    *   containing listeners to add to this emitter object.\n    * @return [AWS.SequentialExecutor] the emitter object, for chaining.\n    * @example Adding listeners from a map of listeners\n    *   emitter.addListeners({\n    *     event1: [function() { ... }, function() { ... }],\n    *     event2: [function() { ... }]\n    *   });\n    *   emitter.emit('event1'); // emitter has event1\n    *   emitter.emit('event2'); // emitter has event2\n    * @example Adding listeners from another emitter object\n    *   var emitter1 = new AWS.SequentialExecutor();\n    *   emitter1.on('event1', function() { ... });\n    *   emitter1.on('event2', function() { ... });\n    *   var emitter2 = new AWS.SequentialExecutor();\n    *   emitter2.addListeners(emitter1);\n    *   emitter2.emit('event1'); // emitter2 has event1\n    *   emitter2.emit('event2'); // emitter2 has event2\n    */\n   addListeners: function addListeners(listeners) {\n     var self = this;\n\n     // extract listeners if parameter is an SequentialExecutor object\n     if (listeners._events) listeners = listeners._events;\n\n     AWS.util.each(listeners, function(event, callbacks) {\n       if (typeof callbacks === 'function') callbacks = [callbacks];\n       AWS.util.arrayEach(callbacks, function(callback) {\n         self.on(event, callback);\n       });\n     });\n\n     return self;\n   },\n\n   /**\n    * Registers an event with {on} and saves the callback handle function\n    * as a property on the emitter object using a given `name`.\n    *\n    * @param name [String] the property name to set on this object containing\n    *   the callback function handle so that the listener can be removed in\n    *   the future.\n    * @param (see on)\n    * @return (see on)\n    * @example Adding a named listener DATA_CALLBACK\n    *   var listener = function() { doSomething(); };\n    *   emitter.addNamedListener('DATA_CALLBACK', 'data', listener);\n    *\n    *   // the following prints: true\n    *   console.log(emitter.DATA_CALLBACK == listener);\n    */\n   addNamedListener: function addNamedListener(name, eventName, callback, toHead) {\n     this[name] = callback;\n     this.addListener(eventName, callback, toHead);\n     return this;\n   },\n\n   /**\n    * @api private\n    */\n   addNamedAsyncListener: function addNamedAsyncListener(name, eventName, callback, toHead) {\n     callback._isAsync = true;\n     return this.addNamedListener(name, eventName, callback, toHead);\n   },\n\n   /**\n    * Helper method to add a set of named listeners using\n    * {addNamedListener}. The callback contains a parameter\n    * with a handle to the `addNamedListener` method.\n    *\n    * @callback callback function(add)\n    *   The callback function is called immediately in order to provide\n    *   the `add` function to the block. This simplifies the addition of\n    *   a large group of named listeners.\n    *   @param add [Function] the {addNamedListener} function to call\n    *     when registering listeners.\n    * @example Adding a set of named listeners\n    *   emitter.addNamedListeners(function(add) {\n    *     add('DATA_CALLBACK', 'data', function() { ... });\n    *     add('OTHER', 'otherEvent', function() { ... });\n    *     add('LAST', 'lastEvent', function() { ... });\n    *   });\n    *\n    *   // these properties are now set:\n    *   emitter.DATA_CALLBACK;\n    *   emitter.OTHER;\n    *   emitter.LAST;\n    */\n   addNamedListeners: function addNamedListeners(callback) {\n     var self = this;\n     callback(\n       function() {\n         self.addNamedListener.apply(self, arguments);\n       },\n       function() {\n         self.addNamedAsyncListener.apply(self, arguments);\n       }\n     );\n     return this;\n   }\n });\n\n /**\n  * {on} is the prefered method.\n  * @api private\n  */\n AWS.SequentialExecutor.prototype.addListener = AWS.SequentialExecutor.prototype.on;\n\n /**\n  * @api private\n  */\n module.exports = AWS.SequentialExecutor;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './core': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}