{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/assets/src/manager/AxiosManager.ts"],"names":["AxiosManager","test_userdata","init","axios","window","currentURL","location","href","indexOf","BaseUrl","instance","create","json","baseURL","timeout","interceptors","response","use","res","data","console","warn","error","Promise","reject","post","url","type","sucessfunc","failfunc","CONENTTYPE","FORMDATA","formdata","FormData","key","append","headers","Authorization","userData","then","promise","bind","catch","err","head","access_token","get","params"],"mappings":"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","sourcesContent":["import { test_userdata } from \"../game/config/AxiosRequestConfig\";\n\nexport default class AxiosManager {\n    public static axios;\n    public static instance;\n    public static BaseUrl;\n    /**\n     * content-type 类型\n     */\n    public static CONENTTYPE = {\n        FORMDATA: \"multipart/form-data\",\n    }\n    static userData: any;\n    /**\n     * 创建实例\n     */\n    public static init() {\n        this.axios = window[\"Axios\"]||window[\"axios\"];\n        const currentURL = window.location.href;\n        if (currentURL.indexOf(\"localhost\") != -1||currentURL.indexOf(\"192.168\") != -1) {\n            // this.BaseUrl = \"http://13.214.33.171:8080\";\n            this.BaseUrl = \"http://192.168.254.88:8080\";\n        } else {\n            this.BaseUrl = \"http://13.214.33.171:8080\"; \n        }\n        this.instance = null;\n        if (this.axios) {\n            this.instance = this.axios.create({\n                'Content-Type': 'application/json;charset=UTF-8',\n                json: true,\n                baseURL: this.BaseUrl,\n                timeout: 30000,\n            });\n            // 添加响应拦截器\n            this.instance.interceptors.response.use(\n                function (response) {//如果这里注册，那么这里先处理，然后再处理.then()\n                    // 2xx 范围内的状态码都会触发该函数。\n                    // console.log('aa', response);\n                    const res = response.data;\n                    // 对响应数据做点什么\n                    console.warn(\"axios response use\", res);\n                    return res;\n                },\n                function (error) {\n                    // 超出 2xx 范围的状态码都会触发该函数。\n                    // 对响应错误做点什么\n                    console.warn(\"axios response use error\", error);\n                    return Promise.reject(error);\n                }\n            );\n        }\n    }/**\n     * post 请求\n     */\n    public static post(url, data: any, type = \"\", sucessfunc: Function = null, failfunc: Function = null) {\n\n        if (!this.instance) {\n            console.warn(\"没有创建axios 实例\");\n            return;\n        }\n        if (type == this.CONENTTYPE.FORMDATA) {\n            let formdata;\n            if (data instanceof FormData) {\n                formdata = data;\n            } else {\n                //暂不可用\n                let formdata = new FormData();\n                for (const key in data) {\n                    formdata.append(key, data[key]);\n                }\n            }\n            let headers = {\n                'Content-Type': 'multipart/form-data', json: true,\n                baseURL: this.BaseUrl,\n                timeout: 30000,\n                Authorization:this.userData\n            };\n            this.instance.post(`${this.BaseUrl}${url}`, formdata, { headers: headers }).then(function (promise) {\n                this.userData = promise;\n                if (sucessfunc) {\n                    sucessfunc(promise);\n                }\n                console.warn(promise);\n            }.bind(this)).catch(function (err) {\n                if (failfunc) failfunc(err);\n                console.warn(err);\n            })\n        } else {\n            let head = {\n                'Content-Type': 'application/json;charset=UTF-8',\n                json: true,\n                baseURL: this.BaseUrl,\n                timeout: 30000,\n                Authorization:AxiosManager.userData?\"Bearer \" +AxiosManager.userData.access_token:\"Bearer \" +test_userdata.access_token\n            }\n            // let datas = window[\"Qs\"].stringify(data);//\n            this.instance.post(`${url}`, data,{headers:head}).then(function (promise) {\n                this.userData = promise;\n                if (sucessfunc) {\n                    sucessfunc(promise);\n                }\n                console.warn(promise);\n            }.bind(this)).catch(function (err) {\n                if (failfunc) failfunc(err);\n                console.warn(err);\n            });\n        }\n    }\n    /**\n     * \n     * @param params \n     * @returns \n     */\n    public static async get(url,params: object) {\n        return await this.instance.get(`${this.BaseUrl}${url}`, {\n            params: params\n        });\n    }\n}"]}