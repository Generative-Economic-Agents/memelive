{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/ajv/lib/refs/json-schema-draft-06.json"],"names":["$schema","$id","title","definitions","schemaArray","type","minItems","items","$ref","nonNegativeInteger","minimum","nonNegativeIntegerDefault0","allOf","simpleTypes","stringArray","uniqueItems","properties","format","description","examples","multipleOf","exclusiveMinimum","maximum","exclusiveMaximum","maxLength","minLength","pattern","additionalItems","anyOf","maxItems","contains","maxProperties","minProperties","required","additionalProperties","patternProperties","dependencies","propertyNames","oneOf","not"],"mappings":"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","sourcesContent":["export default {\n  $schema: 'http://json-schema.org/draft-06/schema#',\n  $id: 'http://json-schema.org/draft-06/schema#',\n  title: 'Core schema meta-schema',\n  definitions: {\n    schemaArray: {\n      type: 'array',\n      minItems: 1,\n      items: {\n        $ref: '#'\n      }\n    },\n    nonNegativeInteger: {\n      type: 'integer',\n      minimum: 0\n    },\n    nonNegativeIntegerDefault0: {\n      allOf: [\n        {\n          $ref: '#/definitions/nonNegativeInteger'\n        },\n        {\n          'default': 0\n        }\n      ]\n    },\n    simpleTypes: {\n      'enum': [\n        'array',\n        'boolean',\n        'integer',\n        'null',\n        'number',\n        'object',\n        'string'\n      ]\n    },\n    stringArray: {\n      type: 'array',\n      items: {\n        type: 'string'\n      },\n      uniqueItems: true,\n      'default': []\n    }\n  },\n  type: [\n    'object',\n    'boolean'\n  ],\n  properties: {\n    $id: {\n      type: 'string',\n      format: 'uri-reference'\n    },\n    $schema: {\n      type: 'string',\n      format: 'uri'\n    },\n    $ref: {\n      type: 'string',\n      format: 'uri-reference'\n    },\n    title: {\n      type: 'string'\n    },\n    description: {\n      type: 'string'\n    },\n    'default': {},\n    examples: {\n      type: 'array',\n      items: {}\n    },\n    multipleOf: {\n      type: 'number',\n      exclusiveMinimum: 0\n    },\n    maximum: {\n      type: 'number'\n    },\n    exclusiveMaximum: {\n      type: 'number'\n    },\n    minimum: {\n      type: 'number'\n    },\n    exclusiveMinimum: {\n      type: 'number'\n    },\n    maxLength: {\n      $ref: '#/definitions/nonNegativeInteger'\n    },\n    minLength: {\n      $ref: '#/definitions/nonNegativeIntegerDefault0'\n    },\n    pattern: {\n      type: 'string',\n      format: 'regex'\n    },\n    additionalItems: {\n      $ref: '#'\n    },\n    items: {\n      anyOf: [\n        {\n          $ref: '#'\n        },\n        {\n          $ref: '#/definitions/schemaArray'\n        }\n      ],\n      'default': {}\n    },\n    maxItems: {\n      $ref: '#/definitions/nonNegativeInteger'\n    },\n    minItems: {\n      $ref: '#/definitions/nonNegativeIntegerDefault0'\n    },\n    uniqueItems: {\n      type: 'boolean',\n      'default': false\n    },\n    contains: {\n      $ref: '#'\n    },\n    maxProperties: {\n      $ref: '#/definitions/nonNegativeInteger'\n    },\n    minProperties: {\n      $ref: '#/definitions/nonNegativeIntegerDefault0'\n    },\n    required: {\n      $ref: '#/definitions/stringArray'\n    },\n    additionalProperties: {\n      $ref: '#'\n    },\n    definitions: {\n      type: 'object',\n      additionalProperties: {\n        $ref: '#'\n      },\n      'default': {}\n    },\n    properties: {\n      type: 'object',\n      additionalProperties: {\n        $ref: '#'\n      },\n      'default': {}\n    },\n    patternProperties: {\n      type: 'object',\n      additionalProperties: {\n        $ref: '#'\n      },\n      'default': {}\n    },\n    dependencies: {\n      type: 'object',\n      additionalProperties: {\n        anyOf: [\n          {\n            $ref: '#'\n          },\n          {\n            $ref: '#/definitions/stringArray'\n          }\n        ]\n      }\n    },\n    propertyNames: {\n      $ref: '#'\n    },\n    'const': {},\n    'enum': {\n      type: 'array',\n      minItems: 1,\n      uniqueItems: true\n    },\n    type: {\n      anyOf: [\n        {\n          $ref: '#/definitions/simpleTypes'\n        },\n        {\n          type: 'array',\n          items: {\n            $ref: '#/definitions/simpleTypes'\n          },\n          minItems: 1,\n          uniqueItems: true\n        }\n      ]\n    },\n    format: {\n      type: 'string'\n    },\n    allOf: {\n      $ref: '#/definitions/schemaArray'\n    },\n    anyOf: {\n      $ref: '#/definitions/schemaArray'\n    },\n    oneOf: {\n      $ref: '#/definitions/schemaArray'\n    },\n    not: {\n      $ref: '#'\n    }\n  },\n  'default': {}\n}"]}