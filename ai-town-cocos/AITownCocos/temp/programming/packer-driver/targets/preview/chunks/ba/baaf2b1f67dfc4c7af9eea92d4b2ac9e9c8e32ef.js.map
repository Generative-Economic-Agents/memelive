{"version":3,"sources":["file:///Users/feiwang/cutepet/assets/src/utils/StringUtils.ts"],"names":["StringUtils","Sprite","setTxtBylength","txt","maxlength","appendstr","len","countnums","substr","copyObject","orig","copy","Object","create","getPrototypeOf","copyOwnPropertiesFrom","target","source","getOwnPropertyNames","forEach","propKey","desc","getOwnPropertyDescriptor","defineProperty","tranNumber","num","point","numStr","toString","length","decimal","substring","parseFloat","parseInt","setGray","node","state","s","getComponentsInChildren","i","grayscale","trim","strings","replace","_str","strlength","chinese","match"],"mappings":"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","sourcesContent":["import { Sprite } from \"cc\";\n\nexport default class StringUtils {\n\n  public static setTxtBylength(\n    txt: string = \"\",\n    maxlength: number,\n    appendstr: string = \"...\"\n  ): string {\n    let len = StringUtils.countnums(txt);\n    if (len > maxlength) {\n      txt = txt.substr(0, maxlength / 2) + appendstr;\n    }\n    return txt;\n  }\n  public static countnums = (function () {\n    var trim = function (strings) {\n      return (strings || \"\").replace(/^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g, \"\");//+表示匹配一次或多次，|表示或者，\\s和\\u00A0匹配空白字符，/^以……开头，$以……结尾，/g全局匹配,/i忽略大小写\n    }\n    return function (_str) {\n      _str = trim(_str);  //去除字符串的左右两边空格\n      var strlength = _str.length;\n      if (!strlength) {  //如果字符串长度为零，返回零\n        return 0;\n      }\n      var chinese = _str.match(/[\\u4e00-\\u9fa5]/g); //匹配中文，match返回包含中文的数组\n      return strlength + (chinese ? chinese.length : 0); //计算字符个数\n    }\n  })();\n\n\n  static copyObject(orig) {\n    var copy = Object.create(Object.getPrototypeOf(orig));\n    this.copyOwnPropertiesFrom(copy, orig);\n    return copy;\n  }\n\n  static copyOwnPropertiesFrom(target, source) {\n    Object.getOwnPropertyNames(source).forEach(function (propKey) {\n      var desc = Object.getOwnPropertyDescriptor(source, propKey);\n      Object.defineProperty(target, propKey, desc);\n    });\n    return target;\n  }\n\n  /**\n  * 数字转整数 如 100000 转为10万\n  * @param {需要转化的数} num\n  * @param {需要保留的小数位数} point\n  */\n  static tranNumber(num, point) {\n    let numStr = num.toString()\n    // 十万以内直接返回\n    if (numStr.length < 6) {\n      return numStr;\n    }\n    //大于8位数是亿\n    else if (numStr.length > 8) {\n      let decimal = numStr.substring(numStr.length - 8, numStr.length - 8 + point);\n      return parseFloat(parseInt(num / 100000000 + \"\") + '.' + decimal) + '亿';\n    }\n    //大于6位数是十万 (以10W分割 10W以下全部显示)\n    else if (numStr.length > 5) {\n      let decimal = numStr.substring(numStr.length - 4, numStr.length - 4 + point)\n      return parseFloat(parseInt(num / 10000 + \"\") + '.' + decimal) + '万';\n    }\n  }\n\n  public static setGray(node, state) {\n    var s: Sprite[] = node.getComponentsInChildren(Sprite);\n    for (var i = 0; i < s.length; i++) {\n      s[i].grayscale = state;\n    }\n  }\n}\n"]}