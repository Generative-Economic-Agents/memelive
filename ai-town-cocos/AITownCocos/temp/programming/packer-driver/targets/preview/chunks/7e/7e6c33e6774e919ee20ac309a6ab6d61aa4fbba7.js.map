{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/ajv/lib/dotjs/comment.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","generate_comment","it","$keyword","$ruleType","out","$schema","schema","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$comment","util","toQuotedString","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;;8BAEDC,Y,GAAe,cAAYC,G;;AACjCF,MAAAA,UAAU,CAACG,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;;AACAF,QAAAA,MAAM,CAACF,OAAP,GAAiB,SAASK,gBAAT,CAA0BC,EAA1B,EAA8BC,QAA9B,EAAwCC,SAAxC,EAAmD;AAClE,cAAIC,GAAG,GAAG,GAAV;AACA,cAAIC,OAAO,GAAGJ,EAAE,CAACK,MAAH,CAAUJ,QAAV,CAAd;AACA,cAAIK,cAAc,GAAGN,EAAE,CAACO,aAAH,GAAmB,GAAnB,GAAyBN,QAA9C;AACA,cAAIO,aAAa,GAAG,CAACR,EAAE,CAACS,IAAH,CAAQC,SAA7B;AACA,cAAIC,QAAQ,GAAGX,EAAE,CAACY,IAAH,CAAQC,cAAR,CAAuBT,OAAvB,CAAf;;AACA,cAAIJ,EAAE,CAACS,IAAH,CAAQE,QAAR,KAAqB,IAAzB,EAA+B;AAC7BR,YAAAA,GAAG,IAAI,kBAAmBQ,QAAnB,GAA+B,IAAtC;AACD,WAFD,MAEO,IAAI,OAAOX,EAAE,CAACS,IAAH,CAAQE,QAAf,IAA2B,UAA/B,EAA2C;AAChDR,YAAAA,GAAG,IAAI,0BAA2BQ,QAA3B,GAAuC,IAAvC,GAA+CX,EAAE,CAACY,IAAH,CAAQC,cAAR,CAAuBP,cAAvB,CAA/C,GAAyF,0BAAhG;AACD;;AACD,iBAAOH,GAAP;AACD,SAZD,CAL0F,CAoB3F;;;AAEA,2BAAAW,WAAW,GAAGlB,MAAM,CAACF,OAArB;AAGC,OAzBD,EAyBG,EAzBH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n 'use strict';\n module.exports = function generate_comment(it, $keyword, $ruleType) {\n   var out = ' ';\n   var $schema = it.schema[$keyword];\n   var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n   var $breakOnError = !it.opts.allErrors;\n   var $comment = it.util.toQuotedString($schema);\n   if (it.opts.$comment === true) {\n     out += ' console.log(' + ($comment) + ');';\n   } else if (typeof it.opts.$comment == 'function') {\n     out += ' self._opts.$comment(' + ($comment) + ', ' + (it.util.toQuotedString($errSchemaPath)) + ', validate.root.schema);';\n   }\n   return out;\n }\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}