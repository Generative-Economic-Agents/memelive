{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/sshpk/lib/fingerprint.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","_req5","_req6","_req7","url","define","exports","require","module","__filename","__dirname","Fingerprint","assert","Buffer","algs","crypto","errs","Key","PrivateKey","Certificate","utils","FingerprintFormatError","InvalidAlgorithmError","opts","object","string","type","buffer","hash","algorithm","toLowerCase","hashAlgs","hashType","prototype","toString","format","undefined","addColons","sshBase64Format","matches","other","assertCompatible","isPrivateKey","theirHash","theirHash2","createHash","update","digest","hash2","base64RE","hexRE","parse","fp","options","alg","enAlgs","Array","isArray","optionalObject","algorithms","optionalArrayOfString","parts","split","length","test","from","e","slice","map","p","join","a","indexOf","s","replace","base64Strip","h","toUpperCase","isFingerprint","obj","ver","isCompatible","_sshpkApiVersion","_oldVersionDetect","func","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'assert-plus';\nimport { __cjsMetaURL as _req0} from 'safer-buffer';\nimport { __cjsMetaURL as _req1} from './algs';\nimport { __cjsMetaURL as _req2} from 'crypto';\nimport { __cjsMetaURL as _req3} from './errors';\nimport { __cjsMetaURL as _req4} from './key';\nimport { __cjsMetaURL as _req5} from './private-key';\nimport { __cjsMetaURL as _req6} from './certificate';\nimport { __cjsMetaURL as _req7} from './utils';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n // Copyright 2018 Joyent, Inc.\n\n module.exports = Fingerprint;\n\n var assert = require('assert-plus');\n var Buffer = require('safer-buffer').Buffer;\n var algs = require('./algs');\n var crypto = require('crypto');\n var errs = require('./errors');\n var Key = require('./key');\n var PrivateKey = require('./private-key');\n var Certificate = require('./certificate');\n var utils = require('./utils');\n\n var FingerprintFormatError = errs.FingerprintFormatError;\n var InvalidAlgorithmError = errs.InvalidAlgorithmError;\n\n function Fingerprint(opts) {\n \tassert.object(opts, 'options');\n \tassert.string(opts.type, 'options.type');\n \tassert.buffer(opts.hash, 'options.hash');\n \tassert.string(opts.algorithm, 'options.algorithm');\n\n \tthis.algorithm = opts.algorithm.toLowerCase();\n \tif (algs.hashAlgs[this.algorithm] !== true)\n \t\tthrow (new InvalidAlgorithmError(this.algorithm));\n\n \tthis.hash = opts.hash;\n \tthis.type = opts.type;\n \tthis.hashType = opts.hashType;\n }\n\n Fingerprint.prototype.toString = function (format) {\n \tif (format === undefined) {\n \t\tif (this.algorithm === 'md5' || this.hashType === 'spki')\n \t\t\tformat = 'hex';\n \t\telse\n \t\t\tformat = 'base64';\n \t}\n \tassert.string(format);\n\n \tswitch (format) {\n \tcase 'hex':\n \t\tif (this.hashType === 'spki')\n \t\t\treturn (this.hash.toString('hex'));\n \t\treturn (addColons(this.hash.toString('hex')));\n \tcase 'base64':\n \t\tif (this.hashType === 'spki')\n \t\t\treturn (this.hash.toString('base64'));\n \t\treturn (sshBase64Format(this.algorithm,\n \t\t    this.hash.toString('base64')));\n \tdefault:\n \t\tthrow (new FingerprintFormatError(undefined, format));\n \t}\n };\n\n Fingerprint.prototype.matches = function (other) {\n \tassert.object(other, 'key or certificate');\n \tif (this.type === 'key' && this.hashType !== 'ssh') {\n \t\tutils.assertCompatible(other, Key, [1, 7], 'key with spki');\n \t\tif (PrivateKey.isPrivateKey(other)) {\n \t\t\tutils.assertCompatible(other, PrivateKey, [1, 6],\n \t\t\t    'privatekey with spki support');\n \t\t}\n \t} else if (this.type === 'key') {\n \t\tutils.assertCompatible(other, Key, [1, 0], 'key');\n \t} else {\n \t\tutils.assertCompatible(other, Certificate, [1, 0],\n \t\t    'certificate');\n \t}\n\n \tvar theirHash = other.hash(this.algorithm, this.hashType);\n \tvar theirHash2 = crypto.createHash(this.algorithm).\n \t    update(theirHash).digest('base64');\n\n \tif (this.hash2 === undefined)\n \t\tthis.hash2 = crypto.createHash(this.algorithm).\n \t\t    update(this.hash).digest('base64');\n\n \treturn (this.hash2 === theirHash2);\n };\n\n /*JSSTYLED*/\n var base64RE = /^[A-Za-z0-9+\\/=]+$/;\n /*JSSTYLED*/\n var hexRE = /^[a-fA-F0-9]+$/;\n\n Fingerprint.parse = function (fp, options) {\n \tassert.string(fp, 'fingerprint');\n\n \tvar alg, hash, enAlgs;\n \tif (Array.isArray(options)) {\n \t\tenAlgs = options;\n \t\toptions = {};\n \t}\n \tassert.optionalObject(options, 'options');\n \tif (options === undefined)\n \t\toptions = {};\n \tif (options.enAlgs !== undefined)\n \t\tenAlgs = options.enAlgs;\n \tif (options.algorithms !== undefined)\n \t\tenAlgs = options.algorithms;\n \tassert.optionalArrayOfString(enAlgs, 'algorithms');\n\n \tvar hashType = 'ssh';\n \tif (options.hashType !== undefined)\n \t\thashType = options.hashType;\n \tassert.string(hashType, 'options.hashType');\n\n \tvar parts = fp.split(':');\n \tif (parts.length == 2) {\n \t\talg = parts[0].toLowerCase();\n \t\tif (!base64RE.test(parts[1]))\n \t\t\tthrow (new FingerprintFormatError(fp));\n \t\ttry {\n \t\t\thash = Buffer.from(parts[1], 'base64');\n \t\t} catch (e) {\n \t\t\tthrow (new FingerprintFormatError(fp));\n \t\t}\n \t} else if (parts.length > 2) {\n \t\talg = 'md5';\n \t\tif (parts[0].toLowerCase() === 'md5')\n \t\t\tparts = parts.slice(1);\n \t\tparts = parts.map(function (p) {\n \t\t\twhile (p.length < 2)\n \t\t\t\tp = '0' + p;\n \t\t\tif (p.length > 2)\n \t\t\t\tthrow (new FingerprintFormatError(fp));\n \t\t\treturn (p);\n \t\t});\n \t\tparts = parts.join('');\n \t\tif (!hexRE.test(parts) || parts.length % 2 !== 0)\n \t\t\tthrow (new FingerprintFormatError(fp));\n \t\ttry {\n \t\t\thash = Buffer.from(parts, 'hex');\n \t\t} catch (e) {\n \t\t\tthrow (new FingerprintFormatError(fp));\n \t\t}\n \t} else {\n \t\tif (hexRE.test(fp)) {\n \t\t\thash = Buffer.from(fp, 'hex');\n \t\t} else if (base64RE.test(fp)) {\n \t\t\thash = Buffer.from(fp, 'base64');\n \t\t} else {\n \t\t\tthrow (new FingerprintFormatError(fp));\n \t\t}\n\n \t\tswitch (hash.length) {\n \t\tcase 32:\n \t\t\talg = 'sha256';\n \t\t\tbreak;\n \t\tcase 16:\n \t\t\talg = 'md5';\n \t\t\tbreak;\n \t\tcase 20:\n \t\t\talg = 'sha1';\n \t\t\tbreak;\n \t\tcase 64:\n \t\t\talg = 'sha512';\n \t\t\tbreak;\n \t\tdefault:\n \t\t\tthrow (new FingerprintFormatError(fp));\n \t\t}\n\n \t\t/* Plain hex/base64: guess it's probably SPKI unless told. */\n \t\tif (options.hashType === undefined)\n \t\t\thashType = 'spki';\n \t}\n\n \tif (alg === undefined)\n \t\tthrow (new FingerprintFormatError(fp));\n\n \tif (algs.hashAlgs[alg] === undefined)\n \t\tthrow (new InvalidAlgorithmError(alg));\n\n \tif (enAlgs !== undefined) {\n \t\tenAlgs = enAlgs.map(function (a) { return a.toLowerCase(); });\n \t\tif (enAlgs.indexOf(alg) === -1)\n \t\t\tthrow (new InvalidAlgorithmError(alg));\n \t}\n\n \treturn (new Fingerprint({\n \t\talgorithm: alg,\n \t\thash: hash,\n \t\ttype: options.type || 'key',\n \t\thashType: hashType\n \t}));\n };\n\n function addColons(s) {\n \t/*JSSTYLED*/\n \treturn (s.replace(/(.{2})(?=.)/g, '$1:'));\n }\n\n function base64Strip(s) {\n \t/*JSSTYLED*/\n \treturn (s.replace(/=*$/, ''));\n }\n\n function sshBase64Format(alg, h) {\n \treturn (alg.toUpperCase() + ':' + base64Strip(h));\n }\n\n Fingerprint.isFingerprint = function (obj, ver) {\n \treturn (utils.isCompatible(obj, Fingerprint, ver));\n };\n\n /*\n  * API versions for Fingerprint:\n  * [1,0] -- initial ver\n  * [1,1] -- first tagged ver\n  * [1,2] -- hashType and spki support\n  */\n Fingerprint.prototype._sshpkApiVersion = [1, 2];\n\n Fingerprint._oldVersionDetect = function (obj) {\n \tassert.func(obj.toString);\n \tassert.func(obj.matches);\n \treturn ([1, 0]);\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'assert-plus': _req,\n  'safer-buffer': _req0,\n  './algs': _req1,\n  'crypto': _req2,\n  './errors': _req3,\n  './key': _req4,\n  './private-key': _req5,\n  './certificate': _req6,\n  './utils': _req7,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}