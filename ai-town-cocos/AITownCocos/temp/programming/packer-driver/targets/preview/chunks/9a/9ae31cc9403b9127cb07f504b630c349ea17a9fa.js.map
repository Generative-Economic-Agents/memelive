{"version":3,"sources":["file:///Users/feiwang/AITown/AITownCocos/node_modules/lodash-es/_createSet.js"],"names":["Set","noop","setToArray","INFINITY","createSet","values"],"mappings":";;;;;;AAAOA,MAAAA,G;;AACAC,MAAAA,I;;AACAC,MAAAA,U;;;AAEP;AACIC,MAAAA,Q,GAAW,IAAI,C;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;AACIC,MAAAA,S,GAAY,EAAEJ,GAAG,IAAK,IAAIE,UAAU,CAAC,IAAIF,GAAJ,CAAQ,GAAE,CAAC,CAAH,CAAR,CAAD,CAAV,CAA2B,CAA3B,CAAL,IAAuCG,QAAhD,IAA4DF,IAA5D,GAAmE,UAASI,MAAT,EAAiB;AAClG,eAAO,IAAIL,GAAJ,CAAQK,MAAR,CAAP;AACD,O;;yBAEcD,S","sourcesContent":["import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n"]}