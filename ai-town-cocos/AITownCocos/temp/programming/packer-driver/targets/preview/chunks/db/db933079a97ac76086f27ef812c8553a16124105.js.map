{"version":3,"sources":["file:///Users/feiwang/cutepet/node_modules/aws-sdk/apis/qconnect-2020-10-19.min.json"],"names":["version","metadata","apiVersion","endpointPrefix","jsonVersion","protocol","serviceFullName","serviceId","signatureVersion","signingName","uid","operations","CreateAssistant","http","requestUri","responseCode","input","type","required","members","clientToken","idempotencyToken","description","name","serverSideEncryptionConfiguration","shape","tags","output","assistant","idempotent","CreateAssistantAssociation","assistantId","location","locationName","association","knowledgeBaseId","union","associationType","assistantAssociation","CreateContent","overrideLinkOutUri","title","uploadId","content","CreateKnowledgeBase","knowledgeBaseType","renderingConfiguration","sourceConfiguration","knowledgeBase","CreateQuickResponse","channels","contentType","groupingConfiguration","isActive","language","shortcutKey","quickResponse","CreateSession","tagFilter","session","DeleteAssistant","method","DeleteAssistantAssociation","assistantAssociationId","DeleteContent","contentId","DeleteImportJob","importJobId","DeleteKnowledgeBase","DeleteQuickResponse","quickResponseId","GetAssistant","GetAssistantAssociation","GetContent","GetContentSummary","contentSummary","GetImportJob","importJob","GetKnowledgeBase","GetQuickResponse","GetRecommendations","maxResults","sessionId","waitTimeSeconds","recommendations","member","data","document","recommendationId","relevanceLevel","relevanceScore","triggers","query","text","id","recommendationIds","source","deprecated","deprecatedMessage","GetSession","ListAssistantAssociations","nextToken","assistantAssociationSummaries","assistantArn","assistantAssociationArn","associationData","ListAssistants","assistantSummaries","capabilityConfiguration","integrationConfiguration","status","ListContents","contentSummaries","ListImportJobs","importJobSummaries","createdTime","externalSourceConfiguration","importJobType","knowledgeBaseArn","lastModifiedTime","ListKnowledgeBases","knowledgeBaseSummaries","ListQuickResponses","quickResponseSummaries","lastModifiedBy","quickResponseArn","ListTagsForResource","resourceArn","NotifyRecommendationsReceived","errors","message","PutFeedback","contentFeedback","targetId","targetType","QueryAssistant","queryCondition","single","comparator","field","value","queryText","results","resultId","RemoveKnowledgeBaseTemplateUri","SearchContent","searchExpression","SearchQuickResponses","attributes","key","sensitive","filters","includeNoExistence","operator","values","orderOnField","order","queries","allowFuzziness","priority","attributesInterpolated","attributesNotInterpolated","contents","SearchSessions","sessionSummaries","sessionArn","StartContentUpload","presignedUrlTimeToLive","headersToInclude","url","urlExpiry","StartImportJob","TagResource","UntagResource","tagKeys","UpdateContent","removeOverrideLinkOutUri","revisionId","UpdateKnowledgeBaseTemplateUri","templateUri","UpdateQuickResponse","removeDescription","removeGroupingConfiguration","removeShortcutKey","UpdateSession","shapes","S5","kmsKeyId","S7","Sc","Sf","Sh","topicIntegrationArn","Sp","Sq","knowledgeBaseAssociation","St","Sy","contentArn","linkOutUri","S11","S12","timestampFormat","S15","S16","appIntegrations","appIntegrationArn","objectFields","S1a","lastContentModificationTime","S1d","S1f","S1g","S1j","criteria","S1s","S1t","markdown","plainText","S1u","S1x","andConditions","orConditions","tagCondition","S1y","S1z","S23","S2p","S2s","failedRecordReport","S2t","configuration","connectConfiguration","instanceId","S39","details","contentData","rankingData","textData","generativeData","completion","references","sourceContentData","reference","contentReference","generativeReference","generationId","modelId","S3c","S3f","excerpt","S3g","highlights","beginOffsetInclusive","endOffsetExclusive","S3k","S3q","S3t","S40","S41","S4h","S52","generativeContentFeedbackData","relevance","S5k","S6b"],"mappings":"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","sourcesContent":["export default {\n  version: '2.0',\n  metadata: {\n    apiVersion: '2020-10-19',\n    endpointPrefix: 'wisdom',\n    jsonVersion: '1.1',\n    protocol: 'rest-json',\n    serviceFullName: 'Amazon Q Connect',\n    serviceId: 'QConnect',\n    signatureVersion: 'v4',\n    signingName: 'wisdom',\n    uid: 'qconnect-2020-10-19'\n  },\n  operations: {\n    CreateAssistant: {\n      http: {\n        requestUri: '/assistants',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'name',\n          'type'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          description: {},\n          name: {},\n          serverSideEncryptionConfiguration: {\n            shape: 'S5'\n          },\n          tags: {\n            shape: 'S7'\n          },\n          type: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          assistant: {\n            shape: 'Sc'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateAssistantAssociation: {\n      http: {\n        requestUri: '/assistants/{assistantId}/associations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId',\n          'association',\n          'associationType'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          },\n          association: {\n            type: 'structure',\n            members: {\n              knowledgeBaseId: {}\n            },\n            union: true\n          },\n          associationType: {},\n          clientToken: {\n            idempotencyToken: true\n          },\n          tags: {\n            shape: 'S7'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          assistantAssociation: {\n            shape: 'Sp'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateContent: {\n      http: {\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/contents',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId',\n          'name',\n          'uploadId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          metadata: {\n            shape: 'St'\n          },\n          name: {},\n          overrideLinkOutUri: {},\n          tags: {\n            shape: 'S7'\n          },\n          title: {},\n          uploadId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          content: {\n            shape: 'Sy'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateKnowledgeBase: {\n      http: {\n        requestUri: '/knowledgeBases',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseType',\n          'name'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          description: {},\n          knowledgeBaseType: {},\n          name: {},\n          renderingConfiguration: {\n            shape: 'S15'\n          },\n          serverSideEncryptionConfiguration: {\n            shape: 'S5'\n          },\n          sourceConfiguration: {\n            shape: 'S16'\n          },\n          tags: {\n            shape: 'S7'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          knowledgeBase: {\n            shape: 'S1a'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateQuickResponse: {\n      http: {\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/quickResponses',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'content',\n          'knowledgeBaseId',\n          'name'\n        ],\n        members: {\n          channels: {\n            shape: 'S1d'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          content: {\n            shape: 'S1f'\n          },\n          contentType: {},\n          description: {},\n          groupingConfiguration: {\n            shape: 'S1j'\n          },\n          isActive: {\n            type: 'boolean'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          language: {},\n          name: {},\n          shortcutKey: {},\n          tags: {\n            shape: 'S7'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          quickResponse: {\n            shape: 'S1s'\n          }\n        }\n      },\n      idempotent: true\n    },\n    CreateSession: {\n      http: {\n        requestUri: '/assistants/{assistantId}/sessions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId',\n          'name'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          },\n          clientToken: {\n            idempotencyToken: true\n          },\n          description: {},\n          name: {},\n          tagFilter: {\n            shape: 'S1x'\n          },\n          tags: {\n            shape: 'S7'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          session: {\n            shape: 'S23'\n          }\n        }\n      },\n      idempotent: true\n    },\n    DeleteAssistant: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/assistants/{assistantId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteAssistantAssociation: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/assistants/{assistantId}/associations/{assistantAssociationId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantAssociationId',\n          'assistantId'\n        ],\n        members: {\n          assistantAssociationId: {\n            location: 'uri',\n            locationName: 'assistantAssociationId'\n          },\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteContent: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/contents/{contentId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'contentId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          contentId: {\n            location: 'uri',\n            locationName: 'contentId'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteImportJob: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/importJobs/{importJobId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'importJobId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          importJobId: {\n            location: 'uri',\n            locationName: 'importJobId'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteKnowledgeBase: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    DeleteQuickResponse: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/quickResponses/{quickResponseId}',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId',\n          'quickResponseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          quickResponseId: {\n            location: 'uri',\n            locationName: 'quickResponseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    GetAssistant: {\n      http: {\n        method: 'GET',\n        requestUri: '/assistants/{assistantId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          assistant: {\n            shape: 'Sc'\n          }\n        }\n      }\n    },\n    GetAssistantAssociation: {\n      http: {\n        method: 'GET',\n        requestUri: '/assistants/{assistantId}/associations/{assistantAssociationId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantAssociationId',\n          'assistantId'\n        ],\n        members: {\n          assistantAssociationId: {\n            location: 'uri',\n            locationName: 'assistantAssociationId'\n          },\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          assistantAssociation: {\n            shape: 'Sp'\n          }\n        }\n      }\n    },\n    GetContent: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/contents/{contentId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'contentId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          contentId: {\n            location: 'uri',\n            locationName: 'contentId'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          content: {\n            shape: 'Sy'\n          }\n        }\n      }\n    },\n    GetContentSummary: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/contents/{contentId}/summary',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'contentId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          contentId: {\n            location: 'uri',\n            locationName: 'contentId'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          contentSummary: {\n            shape: 'S2p'\n          }\n        }\n      }\n    },\n    GetImportJob: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/importJobs/{importJobId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'importJobId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          importJobId: {\n            location: 'uri',\n            locationName: 'importJobId'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          importJob: {\n            shape: 'S2s'\n          }\n        }\n      }\n    },\n    GetKnowledgeBase: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          knowledgeBase: {\n            shape: 'S1a'\n          }\n        }\n      }\n    },\n    GetQuickResponse: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/quickResponses/{quickResponseId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId',\n          'quickResponseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          quickResponseId: {\n            location: 'uri',\n            locationName: 'quickResponseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          quickResponse: {\n            shape: 'S1s'\n          }\n        }\n      }\n    },\n    GetRecommendations: {\n      http: {\n        method: 'GET',\n        requestUri: '/assistants/{assistantId}/sessions/{sessionId}/recommendations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId',\n          'sessionId'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          },\n          waitTimeSeconds: {\n            location: 'querystring',\n            locationName: 'waitTimeSeconds',\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'recommendations'\n        ],\n        members: {\n          recommendations: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'recommendationId'\n              ],\n              members: {\n                data: {\n                  shape: 'S39'\n                },\n                document: {\n                  shape: 'S3t'\n                },\n                recommendationId: {},\n                relevanceLevel: {},\n                relevanceScore: {\n                  type: 'double'\n                },\n                type: {}\n              }\n            }\n          },\n          triggers: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'data',\n                'id',\n                'recommendationIds',\n                'source',\n                'type'\n              ],\n              members: {\n                data: {\n                  type: 'structure',\n                  members: {\n                    query: {\n                      type: 'structure',\n                      members: {\n                        text: {\n                          shape: 'S40'\n                        }\n                      }\n                    }\n                  },\n                  union: true\n                },\n                id: {},\n                recommendationIds: {\n                  shape: 'S41'\n                },\n                source: {},\n                type: {}\n              }\n            }\n          }\n        }\n      },\n      deprecated: true,\n      deprecatedMessage: 'GetRecommendations API will be discontinued starting June 1, 2024. To receive generative responses after March 1, 2024 you will need to create a new Assistant in the Connect console and integrate the Amazon Q in Connect JavaScript library (amazon-q-connectjs) into your applications.'\n    },\n    GetSession: {\n      http: {\n        method: 'GET',\n        requestUri: '/assistants/{assistantId}/sessions/{sessionId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId',\n          'sessionId'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          },\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          session: {\n            shape: 'S23'\n          }\n        }\n      }\n    },\n    ListAssistantAssociations: {\n      http: {\n        method: 'GET',\n        requestUri: '/assistants/{assistantId}/associations',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'assistantAssociationSummaries'\n        ],\n        members: {\n          assistantAssociationSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'assistantArn',\n                'assistantAssociationArn',\n                'assistantAssociationId',\n                'assistantId',\n                'associationData',\n                'associationType'\n              ],\n              members: {\n                assistantArn: {},\n                assistantAssociationArn: {},\n                assistantAssociationId: {},\n                assistantId: {},\n                associationData: {\n                  shape: 'Sq'\n                },\n                associationType: {},\n                tags: {\n                  shape: 'S7'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListAssistants: {\n      http: {\n        method: 'GET',\n        requestUri: '/assistants',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'assistantSummaries'\n        ],\n        members: {\n          assistantSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'assistantArn',\n                'assistantId',\n                'name',\n                'status',\n                'type'\n              ],\n              members: {\n                assistantArn: {},\n                assistantId: {},\n                capabilityConfiguration: {\n                  shape: 'Sf'\n                },\n                description: {},\n                integrationConfiguration: {\n                  shape: 'Sh'\n                },\n                name: {},\n                serverSideEncryptionConfiguration: {\n                  shape: 'S5'\n                },\n                status: {},\n                tags: {\n                  shape: 'S7'\n                },\n                type: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListContents: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/contents',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'contentSummaries'\n        ],\n        members: {\n          contentSummaries: {\n            shape: 'S4h'\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListImportJobs: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/importJobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'importJobSummaries'\n        ],\n        members: {\n          importJobSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'createdTime',\n                'importJobId',\n                'importJobType',\n                'knowledgeBaseArn',\n                'knowledgeBaseId',\n                'lastModifiedTime',\n                'status',\n                'uploadId'\n              ],\n              members: {\n                createdTime: {\n                  shape: 'S12'\n                },\n                externalSourceConfiguration: {\n                  shape: 'S2t'\n                },\n                importJobId: {},\n                importJobType: {},\n                knowledgeBaseArn: {},\n                knowledgeBaseId: {},\n                lastModifiedTime: {\n                  shape: 'S12'\n                },\n                metadata: {\n                  shape: 'St'\n                },\n                status: {},\n                uploadId: {}\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListKnowledgeBases: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgeBases',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        members: {\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseSummaries'\n        ],\n        members: {\n          knowledgeBaseSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'knowledgeBaseArn',\n                'knowledgeBaseId',\n                'knowledgeBaseType',\n                'name',\n                'status'\n              ],\n              members: {\n                description: {},\n                knowledgeBaseArn: {},\n                knowledgeBaseId: {},\n                knowledgeBaseType: {},\n                name: {},\n                renderingConfiguration: {\n                  shape: 'S15'\n                },\n                serverSideEncryptionConfiguration: {\n                  shape: 'S5'\n                },\n                sourceConfiguration: {\n                  shape: 'S16'\n                },\n                status: {},\n                tags: {\n                  shape: 'S7'\n                }\n              }\n            }\n          },\n          nextToken: {}\n        }\n      }\n    },\n    ListQuickResponses: {\n      http: {\n        method: 'GET',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/quickResponses',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'quickResponseSummaries'\n        ],\n        members: {\n          nextToken: {},\n          quickResponseSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'contentType',\n                'createdTime',\n                'knowledgeBaseArn',\n                'knowledgeBaseId',\n                'lastModifiedTime',\n                'name',\n                'quickResponseArn',\n                'quickResponseId',\n                'status'\n              ],\n              members: {\n                channels: {\n                  shape: 'S1d'\n                },\n                contentType: {},\n                createdTime: {\n                  shape: 'S12'\n                },\n                description: {},\n                isActive: {\n                  type: 'boolean'\n                },\n                knowledgeBaseArn: {},\n                knowledgeBaseId: {},\n                lastModifiedBy: {},\n                lastModifiedTime: {\n                  shape: 'S12'\n                },\n                name: {},\n                quickResponseArn: {},\n                quickResponseId: {},\n                status: {},\n                tags: {\n                  shape: 'S7'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    ListTagsForResource: {\n      http: {\n        method: 'GET',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          tags: {\n            shape: 'S7'\n          }\n        }\n      }\n    },\n    NotifyRecommendationsReceived: {\n      http: {\n        requestUri: '/assistants/{assistantId}/sessions/{sessionId}/recommendations/notify',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId',\n          'recommendationIds',\n          'sessionId'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          },\n          recommendationIds: {\n            shape: 'S41'\n          },\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          errors: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                message: {},\n                recommendationId: {}\n              }\n            }\n          },\n          recommendationIds: {\n            shape: 'S41'\n          }\n        }\n      },\n      idempotent: true\n    },\n    PutFeedback: {\n      http: {\n        method: 'PUT',\n        requestUri: '/assistants/{assistantId}/feedback',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId',\n          'contentFeedback',\n          'targetId',\n          'targetType'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          },\n          contentFeedback: {\n            shape: 'S52'\n          },\n          targetId: {},\n          targetType: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'assistantArn',\n          'assistantId',\n          'contentFeedback',\n          'targetId',\n          'targetType'\n        ],\n        members: {\n          assistantArn: {},\n          assistantId: {},\n          contentFeedback: {\n            shape: 'S52'\n          },\n          targetId: {},\n          targetType: {}\n        }\n      },\n      idempotent: true\n    },\n    QueryAssistant: {\n      http: {\n        requestUri: '/assistants/{assistantId}/query',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId',\n          'queryText'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          },\n          maxResults: {\n            type: 'integer'\n          },\n          nextToken: {},\n          queryCondition: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              members: {\n                single: {\n                  type: 'structure',\n                  required: [\n                    'comparator',\n                    'field',\n                    'value'\n                  ],\n                  members: {\n                    comparator: {},\n                    field: {},\n                    value: {}\n                  }\n                }\n              },\n              union: true\n            }\n          },\n          queryText: {\n            shape: 'S40'\n          },\n          sessionId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'results'\n        ],\n        members: {\n          nextToken: {},\n          results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'resultId'\n              ],\n              members: {\n                data: {\n                  shape: 'S39'\n                },\n                document: {\n                  shape: 'S3t'\n                },\n                relevanceScore: {\n                  type: 'double'\n                },\n                resultId: {},\n                type: {}\n              }\n            }\n          }\n        }\n      },\n      deprecated: true,\n      deprecatedMessage: 'QueryAssistant API will be discontinued starting June 1, 2024. To receive generative responses after March 1, 2024 you will need to create a new Assistant in the Connect console and integrate the Amazon Q in Connect JavaScript library (amazon-q-connectjs) into your applications.'\n    },\n    RemoveKnowledgeBaseTemplateUri: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/templateUri',\n        responseCode: 204\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      }\n    },\n    SearchContent: {\n      http: {\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/search',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId',\n          'searchExpression'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          searchExpression: {\n            shape: 'S5k'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'contentSummaries'\n        ],\n        members: {\n          contentSummaries: {\n            shape: 'S4h'\n          },\n          nextToken: {}\n        }\n      }\n    },\n    SearchQuickResponses: {\n      http: {\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/search/quickResponses',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId',\n          'searchExpression'\n        ],\n        members: {\n          attributes: {\n            type: 'map',\n            key: {},\n            value: {},\n            sensitive: true\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          searchExpression: {\n            type: 'structure',\n            members: {\n              filters: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'name',\n                    'operator'\n                  ],\n                  members: {\n                    includeNoExistence: {\n                      type: 'boolean'\n                    },\n                    name: {},\n                    operator: {},\n                    values: {\n                      type: 'list',\n                      member: {}\n                    }\n                  }\n                }\n              },\n              orderOnField: {\n                type: 'structure',\n                required: [\n                  'name'\n                ],\n                members: {\n                  name: {},\n                  order: {}\n                }\n              },\n              queries: {\n                type: 'list',\n                member: {\n                  type: 'structure',\n                  required: [\n                    'name',\n                    'operator',\n                    'values'\n                  ],\n                  members: {\n                    allowFuzziness: {\n                      type: 'boolean'\n                    },\n                    name: {},\n                    operator: {},\n                    priority: {},\n                    values: {\n                      type: 'list',\n                      member: {}\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'results'\n        ],\n        members: {\n          nextToken: {},\n          results: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'contentType',\n                'contents',\n                'createdTime',\n                'isActive',\n                'knowledgeBaseArn',\n                'knowledgeBaseId',\n                'lastModifiedTime',\n                'name',\n                'quickResponseArn',\n                'quickResponseId',\n                'status'\n              ],\n              members: {\n                attributesInterpolated: {\n                  shape: 'S6b'\n                },\n                attributesNotInterpolated: {\n                  shape: 'S6b'\n                },\n                channels: {\n                  shape: 'S1d'\n                },\n                contentType: {},\n                contents: {\n                  shape: 'S1t'\n                },\n                createdTime: {\n                  shape: 'S12'\n                },\n                description: {},\n                groupingConfiguration: {\n                  shape: 'S1j'\n                },\n                isActive: {\n                  type: 'boolean'\n                },\n                knowledgeBaseArn: {},\n                knowledgeBaseId: {},\n                language: {},\n                lastModifiedBy: {},\n                lastModifiedTime: {\n                  shape: 'S12'\n                },\n                name: {},\n                quickResponseArn: {},\n                quickResponseId: {},\n                shortcutKey: {},\n                status: {},\n                tags: {\n                  shape: 'S7'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    SearchSessions: {\n      http: {\n        requestUri: '/assistants/{assistantId}/searchSessions',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId',\n          'searchExpression'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          },\n          maxResults: {\n            location: 'querystring',\n            locationName: 'maxResults',\n            type: 'integer'\n          },\n          nextToken: {\n            location: 'querystring',\n            locationName: 'nextToken'\n          },\n          searchExpression: {\n            shape: 'S5k'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'sessionSummaries'\n        ],\n        members: {\n          nextToken: {},\n          sessionSummaries: {\n            type: 'list',\n            member: {\n              type: 'structure',\n              required: [\n                'assistantArn',\n                'assistantId',\n                'sessionArn',\n                'sessionId'\n              ],\n              members: {\n                assistantArn: {},\n                assistantId: {},\n                sessionArn: {},\n                sessionId: {}\n              }\n            }\n          }\n        }\n      }\n    },\n    StartContentUpload: {\n      http: {\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/upload',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'contentType',\n          'knowledgeBaseId'\n        ],\n        members: {\n          contentType: {},\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          presignedUrlTimeToLive: {\n            type: 'integer'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        required: [\n          'headersToInclude',\n          'uploadId',\n          'url',\n          'urlExpiry'\n        ],\n        members: {\n          headersToInclude: {\n            type: 'map',\n            key: {},\n            value: {}\n          },\n          uploadId: {},\n          url: {\n            shape: 'S11'\n          },\n          urlExpiry: {\n            shape: 'S12'\n          }\n        }\n      }\n    },\n    StartImportJob: {\n      http: {\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/importJobs',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'importJobType',\n          'knowledgeBaseId',\n          'uploadId'\n        ],\n        members: {\n          clientToken: {\n            idempotencyToken: true\n          },\n          externalSourceConfiguration: {\n            shape: 'S2t'\n          },\n          importJobType: {},\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          metadata: {\n            shape: 'St'\n          },\n          uploadId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          importJob: {\n            shape: 'S2s'\n          }\n        }\n      },\n      idempotent: true\n    },\n    TagResource: {\n      http: {\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tags'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tags: {\n            shape: 'S7'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UntagResource: {\n      http: {\n        method: 'DELETE',\n        requestUri: '/tags/{resourceArn}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'resourceArn',\n          'tagKeys'\n        ],\n        members: {\n          resourceArn: {\n            location: 'uri',\n            locationName: 'resourceArn'\n          },\n          tagKeys: {\n            location: 'querystring',\n            locationName: 'tagKeys',\n            type: 'list',\n            member: {}\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {}\n      },\n      idempotent: true\n    },\n    UpdateContent: {\n      http: {\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/contents/{contentId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'contentId',\n          'knowledgeBaseId'\n        ],\n        members: {\n          contentId: {\n            location: 'uri',\n            locationName: 'contentId'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          metadata: {\n            shape: 'St'\n          },\n          overrideLinkOutUri: {},\n          removeOverrideLinkOutUri: {\n            type: 'boolean'\n          },\n          revisionId: {},\n          title: {},\n          uploadId: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          content: {\n            shape: 'Sy'\n          }\n        }\n      }\n    },\n    UpdateKnowledgeBaseTemplateUri: {\n      http: {\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/templateUri',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId',\n          'templateUri'\n        ],\n        members: {\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          templateUri: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          knowledgeBase: {\n            shape: 'S1a'\n          }\n        }\n      }\n    },\n    UpdateQuickResponse: {\n      http: {\n        requestUri: '/knowledgeBases/{knowledgeBaseId}/quickResponses/{quickResponseId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'knowledgeBaseId',\n          'quickResponseId'\n        ],\n        members: {\n          channels: {\n            shape: 'S1d'\n          },\n          content: {\n            shape: 'S1f'\n          },\n          contentType: {},\n          description: {},\n          groupingConfiguration: {\n            shape: 'S1j'\n          },\n          isActive: {\n            type: 'boolean'\n          },\n          knowledgeBaseId: {\n            location: 'uri',\n            locationName: 'knowledgeBaseId'\n          },\n          language: {},\n          name: {},\n          quickResponseId: {\n            location: 'uri',\n            locationName: 'quickResponseId'\n          },\n          removeDescription: {\n            type: 'boolean'\n          },\n          removeGroupingConfiguration: {\n            type: 'boolean'\n          },\n          removeShortcutKey: {\n            type: 'boolean'\n          },\n          shortcutKey: {}\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          quickResponse: {\n            shape: 'S1s'\n          }\n        }\n      }\n    },\n    UpdateSession: {\n      http: {\n        requestUri: '/assistants/{assistantId}/sessions/{sessionId}',\n        responseCode: 200\n      },\n      input: {\n        type: 'structure',\n        required: [\n          'assistantId',\n          'sessionId'\n        ],\n        members: {\n          assistantId: {\n            location: 'uri',\n            locationName: 'assistantId'\n          },\n          description: {},\n          sessionId: {\n            location: 'uri',\n            locationName: 'sessionId'\n          },\n          tagFilter: {\n            shape: 'S1x'\n          }\n        }\n      },\n      output: {\n        type: 'structure',\n        members: {\n          session: {\n            shape: 'S23'\n          }\n        }\n      }\n    }\n  },\n  shapes: {\n    S5: {\n      type: 'structure',\n      members: {\n        kmsKeyId: {}\n      }\n    },\n    S7: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sc: {\n      type: 'structure',\n      required: [\n        'assistantArn',\n        'assistantId',\n        'name',\n        'status',\n        'type'\n      ],\n      members: {\n        assistantArn: {},\n        assistantId: {},\n        capabilityConfiguration: {\n          shape: 'Sf'\n        },\n        description: {},\n        integrationConfiguration: {\n          shape: 'Sh'\n        },\n        name: {},\n        serverSideEncryptionConfiguration: {\n          shape: 'S5'\n        },\n        status: {},\n        tags: {\n          shape: 'S7'\n        },\n        type: {}\n      }\n    },\n    Sf: {\n      type: 'structure',\n      members: {\n        type: {}\n      }\n    },\n    Sh: {\n      type: 'structure',\n      members: {\n        topicIntegrationArn: {}\n      }\n    },\n    Sp: {\n      type: 'structure',\n      required: [\n        'assistantArn',\n        'assistantAssociationArn',\n        'assistantAssociationId',\n        'assistantId',\n        'associationData',\n        'associationType'\n      ],\n      members: {\n        assistantArn: {},\n        assistantAssociationArn: {},\n        assistantAssociationId: {},\n        assistantId: {},\n        associationData: {\n          shape: 'Sq'\n        },\n        associationType: {},\n        tags: {\n          shape: 'S7'\n        }\n      }\n    },\n    Sq: {\n      type: 'structure',\n      members: {\n        knowledgeBaseAssociation: {\n          type: 'structure',\n          members: {\n            knowledgeBaseArn: {},\n            knowledgeBaseId: {}\n          }\n        }\n      },\n      union: true\n    },\n    St: {\n      type: 'map',\n      key: {},\n      value: {}\n    },\n    Sy: {\n      type: 'structure',\n      required: [\n        'contentArn',\n        'contentId',\n        'contentType',\n        'knowledgeBaseArn',\n        'knowledgeBaseId',\n        'metadata',\n        'name',\n        'revisionId',\n        'status',\n        'title',\n        'url',\n        'urlExpiry'\n      ],\n      members: {\n        contentArn: {},\n        contentId: {},\n        contentType: {},\n        knowledgeBaseArn: {},\n        knowledgeBaseId: {},\n        linkOutUri: {},\n        metadata: {\n          shape: 'St'\n        },\n        name: {},\n        revisionId: {},\n        status: {},\n        tags: {\n          shape: 'S7'\n        },\n        title: {},\n        url: {\n          shape: 'S11'\n        },\n        urlExpiry: {\n          shape: 'S12'\n        }\n      }\n    },\n    S11: {\n      type: 'string',\n      sensitive: true\n    },\n    S12: {\n      type: 'timestamp',\n      timestampFormat: 'unixTimestamp'\n    },\n    S15: {\n      type: 'structure',\n      members: {\n        templateUri: {}\n      }\n    },\n    S16: {\n      type: 'structure',\n      members: {\n        appIntegrations: {\n          type: 'structure',\n          required: [\n            'appIntegrationArn'\n          ],\n          members: {\n            appIntegrationArn: {},\n            objectFields: {\n              type: 'list',\n              member: {}\n            }\n          }\n        }\n      },\n      union: true\n    },\n    S1a: {\n      type: 'structure',\n      required: [\n        'knowledgeBaseArn',\n        'knowledgeBaseId',\n        'knowledgeBaseType',\n        'name',\n        'status'\n      ],\n      members: {\n        description: {},\n        knowledgeBaseArn: {},\n        knowledgeBaseId: {},\n        knowledgeBaseType: {},\n        lastContentModificationTime: {\n          shape: 'S12'\n        },\n        name: {},\n        renderingConfiguration: {\n          shape: 'S15'\n        },\n        serverSideEncryptionConfiguration: {\n          shape: 'S5'\n        },\n        sourceConfiguration: {\n          shape: 'S16'\n        },\n        status: {},\n        tags: {\n          shape: 'S7'\n        }\n      }\n    },\n    S1d: {\n      type: 'list',\n      member: {\n        type: 'string',\n        sensitive: true\n      }\n    },\n    S1f: {\n      type: 'structure',\n      members: {\n        content: {\n          shape: 'S1g'\n        }\n      },\n      union: true\n    },\n    S1g: {\n      type: 'string',\n      sensitive: true\n    },\n    S1j: {\n      type: 'structure',\n      members: {\n        criteria: {\n          type: 'string',\n          sensitive: true\n        },\n        values: {\n          type: 'list',\n          member: {\n            type: 'string',\n            sensitive: true\n          }\n        }\n      }\n    },\n    S1s: {\n      type: 'structure',\n      required: [\n        'contentType',\n        'createdTime',\n        'knowledgeBaseArn',\n        'knowledgeBaseId',\n        'lastModifiedTime',\n        'name',\n        'quickResponseArn',\n        'quickResponseId',\n        'status'\n      ],\n      members: {\n        channels: {\n          shape: 'S1d'\n        },\n        contentType: {},\n        contents: {\n          shape: 'S1t'\n        },\n        createdTime: {\n          shape: 'S12'\n        },\n        description: {},\n        groupingConfiguration: {\n          shape: 'S1j'\n        },\n        isActive: {\n          type: 'boolean'\n        },\n        knowledgeBaseArn: {},\n        knowledgeBaseId: {},\n        language: {},\n        lastModifiedBy: {},\n        lastModifiedTime: {\n          shape: 'S12'\n        },\n        name: {},\n        quickResponseArn: {},\n        quickResponseId: {},\n        shortcutKey: {},\n        status: {},\n        tags: {\n          shape: 'S7'\n        }\n      }\n    },\n    S1t: {\n      type: 'structure',\n      members: {\n        markdown: {\n          shape: 'S1u'\n        },\n        plainText: {\n          shape: 'S1u'\n        }\n      }\n    },\n    S1u: {\n      type: 'structure',\n      members: {\n        content: {\n          shape: 'S1g'\n        }\n      },\n      union: true\n    },\n    S1x: {\n      type: 'structure',\n      members: {\n        andConditions: {\n          shape: 'S1y'\n        },\n        orConditions: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              andConditions: {\n                shape: 'S1y'\n              },\n              tagCondition: {\n                shape: 'S1z'\n              }\n            },\n            union: true\n          }\n        },\n        tagCondition: {\n          shape: 'S1z'\n        }\n      },\n      union: true\n    },\n    S1y: {\n      type: 'list',\n      member: {\n        shape: 'S1z'\n      }\n    },\n    S1z: {\n      type: 'structure',\n      required: [\n        'key'\n      ],\n      members: {\n        key: {},\n        value: {}\n      }\n    },\n    S23: {\n      type: 'structure',\n      required: [\n        'name',\n        'sessionArn',\n        'sessionId'\n      ],\n      members: {\n        description: {},\n        integrationConfiguration: {\n          type: 'structure',\n          members: {\n            topicIntegrationArn: {}\n          }\n        },\n        name: {},\n        sessionArn: {},\n        sessionId: {},\n        tagFilter: {\n          shape: 'S1x'\n        },\n        tags: {\n          shape: 'S7'\n        }\n      }\n    },\n    S2p: {\n      type: 'structure',\n      required: [\n        'contentArn',\n        'contentId',\n        'contentType',\n        'knowledgeBaseArn',\n        'knowledgeBaseId',\n        'metadata',\n        'name',\n        'revisionId',\n        'status',\n        'title'\n      ],\n      members: {\n        contentArn: {},\n        contentId: {},\n        contentType: {},\n        knowledgeBaseArn: {},\n        knowledgeBaseId: {},\n        metadata: {\n          shape: 'St'\n        },\n        name: {},\n        revisionId: {},\n        status: {},\n        tags: {\n          shape: 'S7'\n        },\n        title: {}\n      }\n    },\n    S2s: {\n      type: 'structure',\n      required: [\n        'createdTime',\n        'importJobId',\n        'importJobType',\n        'knowledgeBaseArn',\n        'knowledgeBaseId',\n        'lastModifiedTime',\n        'status',\n        'uploadId',\n        'url',\n        'urlExpiry'\n      ],\n      members: {\n        createdTime: {\n          shape: 'S12'\n        },\n        externalSourceConfiguration: {\n          shape: 'S2t'\n        },\n        failedRecordReport: {\n          shape: 'S11'\n        },\n        importJobId: {},\n        importJobType: {},\n        knowledgeBaseArn: {},\n        knowledgeBaseId: {},\n        lastModifiedTime: {\n          shape: 'S12'\n        },\n        metadata: {\n          shape: 'St'\n        },\n        status: {},\n        uploadId: {},\n        url: {\n          shape: 'S11'\n        },\n        urlExpiry: {\n          shape: 'S12'\n        }\n      }\n    },\n    S2t: {\n      type: 'structure',\n      required: [\n        'configuration',\n        'source'\n      ],\n      members: {\n        configuration: {\n          type: 'structure',\n          members: {\n            connectConfiguration: {\n              type: 'structure',\n              members: {\n                instanceId: {}\n              }\n            }\n          },\n          union: true\n        },\n        source: {}\n      }\n    },\n    S39: {\n      type: 'structure',\n      required: [\n        'details',\n        'reference'\n      ],\n      members: {\n        details: {\n          type: 'structure',\n          members: {\n            contentData: {\n              type: 'structure',\n              required: [\n                'rankingData',\n                'textData'\n              ],\n              members: {\n                rankingData: {\n                  shape: 'S3c'\n                },\n                textData: {\n                  shape: 'S3f'\n                }\n              }\n            },\n            generativeData: {\n              type: 'structure',\n              required: [\n                'completion',\n                'rankingData',\n                'references'\n              ],\n              members: {\n                completion: {\n                  shape: 'S3k'\n                },\n                rankingData: {\n                  shape: 'S3c'\n                },\n                references: {\n                  type: 'list',\n                  member: {\n                    shape: 'S39'\n                  }\n                }\n              }\n            },\n            sourceContentData: {\n              type: 'structure',\n              required: [\n                'id',\n                'rankingData',\n                'textData',\n                'type'\n              ],\n              members: {\n                id: {},\n                rankingData: {\n                  shape: 'S3c'\n                },\n                textData: {\n                  shape: 'S3f'\n                },\n                type: {}\n              }\n            }\n          },\n          union: true\n        },\n        reference: {\n          type: 'structure',\n          members: {\n            contentReference: {\n              shape: 'S3q'\n            },\n            generativeReference: {\n              type: 'structure',\n              members: {\n                generationId: {},\n                modelId: {}\n              }\n            }\n          },\n          union: true\n        }\n      }\n    },\n    S3c: {\n      type: 'structure',\n      members: {\n        relevanceLevel: {},\n        relevanceScore: {\n          type: 'double'\n        }\n      }\n    },\n    S3f: {\n      type: 'structure',\n      members: {\n        excerpt: {\n          shape: 'S3g'\n        },\n        title: {\n          shape: 'S3g'\n        }\n      }\n    },\n    S3g: {\n      type: 'structure',\n      members: {\n        highlights: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            members: {\n              beginOffsetInclusive: {\n                type: 'integer'\n              },\n              endOffsetExclusive: {\n                type: 'integer'\n              }\n            }\n          }\n        },\n        text: {\n          shape: 'S3k'\n        }\n      }\n    },\n    S3k: {\n      type: 'string',\n      sensitive: true\n    },\n    S3q: {\n      type: 'structure',\n      members: {\n        contentArn: {},\n        contentId: {},\n        knowledgeBaseArn: {},\n        knowledgeBaseId: {}\n      }\n    },\n    S3t: {\n      type: 'structure',\n      required: [\n        'contentReference'\n      ],\n      members: {\n        contentReference: {\n          shape: 'S3q'\n        },\n        excerpt: {\n          shape: 'S3g'\n        },\n        title: {\n          shape: 'S3g'\n        }\n      }\n    },\n    S40: {\n      type: 'string',\n      sensitive: true\n    },\n    S41: {\n      type: 'list',\n      member: {}\n    },\n    S4h: {\n      type: 'list',\n      member: {\n        shape: 'S2p'\n      }\n    },\n    S52: {\n      type: 'structure',\n      members: {\n        generativeContentFeedbackData: {\n          type: 'structure',\n          required: [\n            'relevance'\n          ],\n          members: {\n            relevance: {}\n          }\n        }\n      },\n      union: true\n    },\n    S5k: {\n      type: 'structure',\n      required: [\n        'filters'\n      ],\n      members: {\n        filters: {\n          type: 'list',\n          member: {\n            type: 'structure',\n            required: [\n              'field',\n              'operator',\n              'value'\n            ],\n            members: {\n              field: {},\n              operator: {},\n              value: {}\n            }\n          }\n        }\n      }\n    },\n    S6b: {\n      type: 'list',\n      member: {},\n      sensitive: true\n    }\n  }\n}"]}